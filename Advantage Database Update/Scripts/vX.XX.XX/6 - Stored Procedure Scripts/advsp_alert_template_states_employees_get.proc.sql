IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[advsp_alert_template_states_employees_get]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[advsp_alert_template_states_employees_get]
GO
CREATE PROCEDURE [dbo].[advsp_alert_template_states_employees_get]
@ALERT_ID INT,
@ALRT_NOTIFY_HDR_ID INT,
@ALERT_STATE_ID INT,
@SHOW_ALL BIT,
@INCLUDE_EMP VARCHAR(6),
@CS_ONLY BIT
AS
/*=========== QUERY ===========*/
BEGIN
	DECLARE @RESULTS TABLE (
		ID INT IDENTITY,
		EMP_CODE VARCHAR(25)  NULL,
		EMP_FML VARCHAR(255) NULL,
		EMP_EMAIL VARCHAR(255) NULL,
		IS_DEFAULT BIT NULL,
		SELECTED BIT NULL,
		COMPLETED BIT NULL,
		PROOFING_STATUS_ID INT NULL
	);
	DECLARE
		@IS_PROOF BIT,
		@IS_ROUTED BIT
	;
	IF NOT @ALERT_ID IS NULL AND @ALERT_ID > 0
	BEGIN
		SELECT
			@ALRT_NOTIFY_HDR_ID = COALESCE(@ALRT_NOTIFY_HDR_ID, A.ALRT_NOTIFY_HDR_ID),
			@ALERT_STATE_ID = COALESCE(@ALERT_STATE_ID, A.ALERT_STATE_ID),
			@IS_ROUTED =	CASE
								WHEN ISNULL(A.ALRT_NOTIFY_HDR_ID, 0) > 0 AND ISNULL(A.ALRT_NOTIFY_HDR_ID, 0) > 0 THEN 1
								ELSE 0
							END,
			@IS_PROOF =	CASE
							WHEN A.ALERT_CAT_ID = 79 THEN 1
							ELSE 0
						END
		FROM
			ALERT A WITH(NOLOCK)
		WHERE
			A.ALERT_ID = @ALERT_ID;
	END
	IF @ALRT_NOTIFY_HDR_ID IS NOT NULL
	BEGIN
		IF EXISTS (SELECT 1 FROM ALERT_NOTIFY_EMPS_ASSIGNMENT ANEA WITH(NOLOCK) WHERE ANEA.ALERT_ID = @ALERT_ID) AND @IS_PROOF = 1
		BEGIN
			INSERT INTO @RESULTS (EMP_CODE, EMP_FML, EMP_EMAIL, IS_DEFAULT)
			SELECT
				EMP_CODE,
				EMP_FML,
				EMP_EMAIL,
				IS_DEFAULT
			FROM
				(
					SELECT
						EMP_CODE = ANEA.EMP_CODE,
						EMP_FML = ISNULL(E.EMP_FNAME + ' ', '') + ISNULL(E.EMP_MI + '. ', '') + ISNULL(E.EMP_LNAME, ''),
						EMP_EMAIL = E.EMP_EMAIL,
						IS_DEFAULT = 1
					FROM
						ALERT_NOTIFY_EMPS_ASSIGNMENT ANEA WITH(NOLOCK) 
						INNER JOIN EMPLOYEE_CLOAK E WITH(NOLOCK) ON ANEA.EMP_CODE = E.EMP_CODE
					WHERE 
						ANEA.ALERT_ID = @ALERT_ID
						AND ANEA.ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID
						AND ANEA.ALERT_STATE_ID = @ALERT_STATE_ID
						AND E.EMP_TERM_DATE IS NULL
					UNION
					SELECT
						ANEA.EMP_CODE,
						ISNULL(E.EMP_FNAME + ' ', '') + ISNULL(E.EMP_MI + '. ', '') + ISNULL(E.EMP_LNAME, ''),
						E.EMP_EMAIL,
						1
					FROM
						ALERT_NOTIFY_EMPS ANEA WITH(NOLOCK) 
						INNER JOIN EMPLOYEE_CLOAK E WITH(NOLOCK) ON ANEA.EMP_CODE = E.EMP_CODE
					WHERE 
						ANEA.ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID
						AND ANEA.ALERT_STATE_ID = @ALERT_STATE_ID
						AND E.EMP_TERM_DATE IS NULL
					UNION
					SELECT
						E.EMP_CODE,
						ISNULL(E.EMP_FNAME + ' ', '') + ISNULL(E.EMP_MI + '. ', '') + ISNULL(E.EMP_LNAME, ''),
						E.EMP_EMAIL,
						1
					FROM
						EMPLOYEE_CLOAK E WITH(NOLOCK)
					WHERE 
						E.EMP_TERM_DATE IS NULL
						AND
						1 =	CASE
								WHEN @SHOW_ALL = 1 THEN 1
								ELSE 0
							END
				) AS A
			;
		END
		ELSE
		BEGIN
			INSERT INTO @RESULTS (EMP_CODE, EMP_FML, EMP_EMAIL, IS_DEFAULT)
			EXEC dbo.[usp_wv_ALERT_NOTIFY_EMPS_BY_STID] @ALERT_STATE_ID, 0, 0, @ALRT_NOTIFY_HDR_ID, '', @SHOW_ALL, 0, 0;
		END
	END
	IF ISNULL(@INCLUDE_EMP, '') <> ''
	BEGIN
		IF NOT EXISTS (SELECT 1 FROM @RESULTS WHERE UPPER(EMP_CODE) = UPPER(@INCLUDE_EMP))
		BEGIN
			INSERT INTO @RESULTS (EMP_CODE, EMP_FML, EMP_EMAIL)
				SELECT 
					EMP_CODE, 
					EMP_FNAME + ISNULL(' ' + EMP_MI + '. ', ' ') + EMP_LNAME, 
					EMP_EMAIL 
				FROM 
					EMPLOYEE
				WHERE 
					UPPER(EMP_CODE) = UPPER(@INCLUDE_EMP);				
		END
	END
	IF NOT @ALERT_ID IS NULL AND @ALERT_ID > 0
	BEGIN
		UPDATE @RESULTS	SET SELECTED = 1
		FROM
			@RESULTS R
			INNER JOIN ALERT_RCPT AR WITH(NOLOCK) ON R.EMP_CODE = AR.EMP_CODE
			INNER JOIN EMPLOYEE E WITH(NOLOCK) ON R.EMP_CODE = R.EMP_CODE
			INNER JOIN ALERT A WITH(NOLOCK) ON A.ALERT_ID = AR.ALERT_ID AND A.ALRT_NOTIFY_HDR_ID = AR.ALRT_NOTIFY_HDR_ID AND A.ALERT_STATE_ID = AR.ALERT_STATE_ID
		WHERE
			AR.ALERT_ID = @ALERT_ID
			AND NOT E.CS_USERID IS NULL
			AND AR.CURRENT_NOTIFY = 1;
		UPDATE @RESULTS	SET COMPLETED = 1
		FROM
			@RESULTS R
			INNER JOIN ALERT_RCPT_DISMISSED AR WITH(NOLOCK) ON R.EMP_CODE = AR.EMP_CODE
			INNER JOIN EMPLOYEE E WITH(NOLOCK) ON R.EMP_CODE = R.EMP_CODE
			INNER JOIN ALERT A WITH(NOLOCK) ON A.ALERT_ID = AR.ALERT_ID AND A.ALRT_NOTIFY_HDR_ID = AR.ALRT_NOTIFY_HDR_ID AND A.ALERT_STATE_ID = AR.ALERT_STATE_ID
		WHERE
			AR.ALERT_ID = @ALERT_ID
			AND NOT E.CS_USERID IS NULL
			AND AR.CURRENT_NOTIFY = 1;
		IF @IS_PROOF = 1
		BEGIN

			DECLARE
				@EMPS TABLE (ID INT IDENTITY, EMP_CODE VARCHAR(6), ALERT_COMMENT_ID INT, PROOFING_STATUS_ID INT)
			DECLARE
				@COUNTER INT,
				@ROW_COUNT INT,
				@COMMENT_ID INT

			INSERT INTO @EMPS (EMP_CODE, PROOFING_STATUS_ID, ALERT_COMMENT_ID)
			SELECT 
				C.ASSIGNED_EMP_CODE, C.PROOFING_STATUS_ID, C.COMMENT_ID
			FROM
				ALERT_COMMENT C WITH(NOLOCK)
				INNER JOIN @RESULTS R ON C.ASSIGNED_EMP_CODE = R.EMP_CODE
			WHERE
				C.ALERT_ID = @ALERT_ID
				AND C.ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID
				AND C.ALERT_STATE_ID = @ALERT_STATE_ID
			ORDER BY
				C.COMMENT_ID
			;
			SELECT @COUNTER = 0;
			SELECT @ROW_COUNT = COUNT(1) FROM @EMPS;
			IF @ROW_COUNT > 0
			BEGIN
				WHILE @ROW_COUNT > @COUNTER
				BEGIN
					SELECT @COMMENT_ID = NULL;
					SELECT @COUNTER = @COUNTER + 1;
					SELECT
						@COMMENT_ID = E.ALERT_COMMENT_ID
					FROM
						@EMPS E
					WHERE
						E.ID = @COUNTER
					;
					IF @COMMENT_ID IS NOT NULL
					BEGIN
						UPDATE @RESULTS SET PROOFING_STATUS_ID = C.PROOFING_STATUS_ID
						FROM
							ALERT_COMMENT C WITH(NOLOCK)
							INNER JOIN @RESULTS R ON C.ASSIGNED_EMP_CODE = R.EMP_CODE
						WHERE
							C.COMMENT_ID = @COMMENT_ID
						;
					END
				END
			END
		END
	END
	IF ISNULL(@ALRT_NOTIFY_HDR_ID, 0) = 0 AND ISNULL(@ALERT_STATE_ID, 0) = 0 
	BEGIN
		IF ISNULL(@ALERT_ID, 0) = 0
		BEGIN
			INSERT INTO @RESULTS (EMP_CODE, EMP_FML, EMP_EMAIL, IS_DEFAULT, SELECTED, COMPLETED)
			SELECT
				EMP_CODE = E.EMP_CODE,
				EMP_FML = ISNULL(E.EMP_FNAME + ' ', '') + ISNULL(E.EMP_MI + '. ', '') + ISNULL(E.EMP_LNAME, ''),
				EMP_EMAIL = E.EMP_EMAIL,
				0,
				0,
				0
			FROM
				EMPLOYEE_CLOAK E WITH(NOLOCK)
			WHERE 
				E.EMP_TERM_DATE IS NULL
			;
		END
		ELSE
		BEGIN
			INSERT INTO @RESULTS (EMP_CODE, EMP_FML, EMP_EMAIL, IS_DEFAULT, SELECTED, COMPLETED)
			SELECT
				EMP_CODE = E.EMP_CODE,
				EMP_FML = ISNULL(E.EMP_FNAME + ' ', '') + ISNULL(E.EMP_MI + '. ', '') + ISNULL(E.EMP_LNAME, ''),
				EMP_EMAIL = E.EMP_EMAIL,
				0,
				ISNULL(A.IS_SELECTED, 0),
				0
			FROM	
				EMPLOYEE_CLOAK E WITH(NOLOCK)
				LEFT OUTER JOIN
				(
					SELECT
						EMP_CODE = R.EMP_CODE,
						IS_SELECTED = CAST(1 AS BIT)
					FROM
						ALERT_RCPT R WITH(NOLOCK)
					WHERE
						R.ALERT_ID = @ALERT_ID
						AND R.CURRENT_NOTIFY = 1
					UNION
					SELECT
						EMP_CODE = R.EMP_CODE,
						IS_SELECTED = CAST(1 AS BIT)
					FROM
						ALERT_RCPT_DISMISSED R
					WHERE
						R.ALERT_ID = @ALERT_ID
						AND R.CURRENT_NOTIFY = 1
				) AS A ON E.EMP_CODE = A.EMP_CODE
			WHERE
				E.EMP_TERM_DATE IS NULL
	END
	END
	IF @CS_ONLY IS NULL OR @CS_ONLY = 0
	BEGIN
		SELECT 
			[Code] = R.EMP_CODE,
			[Name] = R.EMP_FML,
			[IsDefault] = CONVERT(BIT, ISNULL(R.IS_DEFAULT, 0)),
			[IsSelected] = CONVERT(BIT, ISNULL(R.SELECTED, 0)),
			[IsCompleted] = CONVERT(BIT, ISNULL(R.COMPLETED, 0)),
			[ProofingStatusID] = ISNULL(PROOFING_STATUS_ID, 0),
			[AlertTemplateID] = @ALRT_NOTIFY_HDR_ID,
			[AlertStateID] = @ALERT_STATE_ID
		FROM 
			@RESULTS R
		ORDER BY
			R.EMP_FML;		
	END
	ELSE
	BEGIN
		SELECT 
			[Code] = R.EMP_CODE,
			[Name] = R.EMP_FML,
			[IsDefault] = CONVERT(BIT, ISNULL(R.IS_DEFAULT, 0)),
			[IsSelected] = CONVERT(BIT, ISNULL(R.SELECTED, 0)),
			[IsCompleted] = CONVERT(BIT, ISNULL(R.COMPLETED, 0)),
			[ProofingStatusID] = ISNULL(PROOFING_STATUS_ID, 0),
			[AlertTemplateID] = @ALRT_NOTIFY_HDR_ID,
			[AlertStateID] = @ALERT_STATE_ID
		FROM 
			@RESULTS R
			INNER JOIN EMPLOYEE E ON R.EMP_CODE = E.EMP_CODE
		WHERE
			NOT E.CS_USERID IS NULL
		ORDER BY
			R.EMP_FML;		
	END
END
/*=========== QUERY ===========*/