IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[advsp_ar_void_client_invoice]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[advsp_ar_void_client_invoice]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[advsp_ar_void_client_invoice] 
	@invoice_number int, 
	@post_period_code varchar(6), 
	@user_code varchar(100), 
	@vo_comment varchar(254)

AS

/*
-PJH 08/27/13 - Added Reverse QUANTITY's for INTERNET, NEWSPAPER, MAGAZINE, OUTDOOR
-PJH 01/28/14 - Changed Max(Seq_Nbr) by AB_ID vs MAX(AB_ID)
-MJC 03/26/15 - Moved update to BILL_APPR_HDR outside of Advance Billing if block
-MJC 09/24/15 - if the FINAL_AB_ID is the same as the AB_ID for the @invoice_number being voided, update the FINAL columns to NULL
-MJC 09/29/15 - if voiding a final reconciliation, clear the final data on rows that are not marked with the AR_INV_VOID flag
-MJC 10/05/15 - bring down BCC_ID on new records
-MJC 10/12/15 - set EDIT_FLAG on new row in table EMP_TIME_DTL to 1
-MJC 10/13/15 - set IO_QTY to negative amount on VO rows
-MJC 10/15/15 - carry down EDIT_FLAG for EMP_TIME_DTL and set EDIT_FLAG to 1 on rows for AR_INV_NUMBER being voided
-MJC 12/17/15 - reverse fields AR_SALE_AMT and AR_OFFSET_AMT in ACCT_REC
-MJC 12/22/15 - flag INCOME_ONLY records as deleted now includes SEQ_NBR in update 735-1  ID:2000
-MJC 02/01/16 - added AB_NONRESALE_AMT when voiding AR_SUMMARY row
-MJC 02/01/16 - include TRF_CODE when inserting into EMP_TIME_DTL
-MJC 03/21/16 - include EXPDETAILID when inserting into AP_PRODUCTION
-MJC 04/26/16 - include ORDER_NBR and LINE_NBR when inserting INCOME_ONLY
-MJC 06/24/16 - include CURRENCY_CODE, CURRENCY_RATE in VO record for AR_SUMMARY; CURRENCY_CODE, CURRENCY_RATE, EXCHANGE_AMOUNT in VO record for ACCT_REC
-MJC 08/24/16 - prevent voiding of any invoice if any related job on the invoice being voided has an un-billed reconciliation record on it
-MJC 03/03/17 - If the reversal row Modify Flag is a 1, when inserting both reversal and new rows, mark both Deleted
-PJH 03/22/19 - Added @guaranteed_impress=[IMPRESSIONS], @act_impressions=[ACTUAL_IMPRESSIONS]
-PJH 04/30/19 - TV_DETAIL_UNITS
*/

DECLARE @todays_date smalldatetime,
		@transaction_id int,
		@rec_type_desc varchar(40),
		@cl_code varchar(6),
		@div_code varchar(6),
		@prd_code varchar(6),
		@cdp varchar(20),
		@ar_inv_amount decimal(15,2),
		@glacode_ar varchar(30),
		@ar_cos_amt decimal (14,2),
		@glseq_ar smallint,
		@job_number int,
		@job_component_nbr smallint,
		@job_number_last int,				--PJH 5/16/13 - added 
		@job_component_nbr_last smallint,	--PJH 5/16/13 - added 	
		@ab_id_reversal int,
		@seq_nbr_reversal int,
		@ap_production CURSOR,
		@ap_id int,
		@line_number smallint,
		@next_line_number smallint,
		@emp_time_dtl CURSOR,
		@et_id int,
		@seq_nbr int,
		@income_only CURSOR,
		@io_id int,
		@advance_billing CURSOR,
		@ab_id int,
		@ab_id_last int,			--PJH 1/28/14 - added 
		@ab_flag smallint,		--PJH 5/16/13 - added 
		@ab_flag_new smallint,	--PJH 5/16/13 - added 		
		@fnc_code varchar(6),
		@income_rec CURSOR,
		@internet_detail CURSOR,
		@order_nbr int,
		@line_nbr smallint,
		@rev_nbr smallint,
		@newspaper_detail CURSOR,
		@magazine_detail CURSOR,
		@outdoor_detail CURSOR,
		@radio_detail CURSOR,
		@brdcast_year int,
		@radio_detail1 CURSOR,
		@tv_detail CURSOR,
		@tv_detail1 CURSOR,
		@deferred CURSOR,
		@gl_xact int,
		@def_transaction_id int,
		@def_postperiod varchar(6),
		@remark varchar(100)

DECLARE @order_nbr_prev int,
		@line_nbr_prev smallint,
		@rev_nbr_prev smallint,
		@rev_nbr_max smallint

		
DECLARE @AP_PRODUCTION_TABLE TABLE (
	AP_ID int,
	LINE_NUMBER smallint
)

DECLARE @EMP_TIME_DTL_TABLE TABLE (
	ET_ID int,
	SEQ_NBR smallint
)

DECLARE @INCOME_ONLY_TABLE TABLE (
	IO_ID int,
	SEQ_NBR smallint
)
--PJH 5/16/13 added JOB_NUMBER, JOB_COMPONENT_NBR
DECLARE @ADVANCE_BILLING_TABLE TABLE (
	AB_ID int,
	SEQ_NBR int,
	AB_FLAG smallint,
	FNC_CODE varchar(6),
	JOB_NUMBER int,
	JOB_COMPONENT_NBR smallint
)

DECLARE @INCOME_REC_TABLE TABLE (
	AB_ID int,
	SEQ_NBR smallint,
	AB_FLAG smallint,
	JOB_NUMBER int,
	JOB_COMPONENT_NBR smallint
)

DECLARE @INTERNET_DETAIL_TABLE TABLE (
	ORDER_NBR int,
	LINE_NBR smallint,
	REV_NBR smallint,
	SEQ_NBR smallint
)

DECLARE @NEWSPAPER_DETAIL_TABLE TABLE (
	ORDER_NBR int,
	LINE_NBR smallint,
	REV_NBR smallint,
	SEQ_NBR smallint
)

DECLARE @MAGAZINE_DETAIL_TABLE TABLE (
	ORDER_NBR int,
	LINE_NBR smallint,
	REV_NBR smallint,
	SEQ_NBR smallint
)

DECLARE @OUTDOOR_DETAIL_TABLE TABLE (
	ORDER_NBR int,
	LINE_NBR smallint,
	REV_NBR smallint,
	SEQ_NBR smallint
)

DECLARE @RADIO_DETAIL_TABLE TABLE (
	ORDER_NBR int,
	LINE_NBR smallint,
	REV_NBR smallint,
	SEQ_NBR smallint
)

DECLARE @RADIO_DETAIL1_TABLE TABLE (
	ORDER_NBR int,
	LINE_NBR smallint,
	BRDCAST_YEAR int, 
	REV_NBR smallint,
	SEQ_NBR smallint
)

DECLARE @TV_DETAIL_TABLE TABLE (
	ORDER_NBR int,
	LINE_NBR smallint,
	REV_NBR smallint,
	SEQ_NBR smallint
)

DECLARE @TV_DETAIL1_TABLE TABLE (
	ORDER_NBR int,
	LINE_NBR smallint,
	BRDCAST_YEAR int, 
	REV_NBR smallint,
	SEQ_NBR smallint
)

DECLARE @GL_XACT_TABLE TABLE (
	GL_XACT int,
	POSTPERIOD varchar(6) NULL,
	GL_XACT_DEF int
)

DECLARE @return_msg varchar (1024)

	IF EXISTS (SELECT AR_INV_NBR FROM dbo.ACCT_REC WHERE AR_INV_NBR = @invoice_number AND VOID_FLAG = 1)
	BEGIN
		SELECT 'INFO:Invoice was already voided.'
		RETURN
	END

	--MJC 08/24/16 - prevent voiding of any invoice if any related job on the invoice being voided has an un-billed reconciliation record on it
	--MJC 07/27/17 - now looking at AR_SUMMARY for Job and Job Component
	IF EXISTS (SELECT AR_INV_NBR
				FROM dbo.AR_SUMMARY 
				WHERE AR_INV_NBR = @invoice_number 
				AND CAST(JOB_NUMBER as varchar) + '|' + CAST(JOB_COMPONENT_NBR as varchar)
								IN (SELECT CAST(JOB_NUMBER as varchar)+ '|' + CAST(JOB_COMPONENT_NBR as varchar)
									FROM dbo.ADVANCE_BILLING 
									WHERE AR_INV_NBR IS NULL
									AND AB_FLAG IN (4, 5, 6)
								   )
			  )
	BEGIN
		SELECT 'INFO:Invoice has one or more jobs with an un-billed reconciliation.  Cannot void invoice.'
		RETURN
	END

	IF EXISTS (SELECT AR_INV_NBR
			   FROM	dbo.CR_CLIENT_DTL ccd
					INNER JOIN dbo.CR_CLIENT cc ON ccd.REC_ID = cc.REC_ID AND ccd.SEQ_NBR = cc.SEQ_NBR AND cc.[STATUS] IS NULL
			   WHERE AR_INV_NBR = @invoice_number
			   AND COALESCE(ccd.MODIFY_DELETE, 0) = 0
			   --GROUP BY AR_INV_NBR 
			   --HAVING SUM(COALESCE(CR_PAY_AMT,0)) <> 0 OR SUM(COALESCE(CR_ADJ_AMT,0)) <> 0 
			  )
	BEGIN
		SELECT 'INFO:Invoice selected has cash receipts posted.  Cannot void invoice.'
		RETURN
	END

	SELECT @todays_date = CONVERT( datetime, CONVERT( char(10), GETDATE(), 101))

	SELECT
			@rec_type_desc = CASE REC_TYPE
								WHEN 'P' THEN 'Computer Invoice - Production'
								WHEN 'N' THEN 'Computer Invoice - Newspaper'
								WHEN 'M' THEN 'Computer Invoice - Magazine'
								WHEN 'R' THEN 'Computer Invoice - Radio'
								WHEN 'T' THEN 'Computer Invoice - Television'
								ELSE 'Computer Invoice'
							 END,
			@cl_code = CL_CODE, @div_code = DIV_CODE, @prd_code = PRD_CODE, @cdp = CL_CODE + '-' + COALESCE(DIV_CODE,'') + '-' + COALESCE(PRD_CODE,''),
			@ar_inv_amount = AR_INV_AMOUNT, @glacode_ar = GLACODE_AR, @ar_cos_amt = AR_COS_AMT
	FROM dbo.ACCT_REC
	WHERE AR_INV_NBR = @invoice_number

	BEGIN TRY
	
		BEGIN TRAN
			
			DELETE dbo.CLIENT_LATE_FEE 
			WHERE AR_INV_NBR = @invoice_number

			SELECT @transaction_id = IDSXACT + 1
			FROM dbo.IDS
			WHERE IDSTABLE = 'GLENTHDR'

			UPDATE dbo.IDS SET IDSXACT = @transaction_id
			WHERE IDSTABLE = 'GLENTHDR'

			SET @remark = 'Voided - ' + COALESCE(@cdp,'') + ' - ' + COALESCE(@rec_type_desc,'') + ' - ' + COALESCE(CAST(@invoice_number AS VARCHAR(20)),'')
			
			INSERT INTO dbo.GLENTHDR ( GLEHXACT, GLEHPP, GLEHUSER, GLEHENTDATE, GLEHMODDATE, GLEHDESC, GLEHSOURCE, CREATE_DATE )
			VALUES (@transaction_id, @post_period_code, @user_code, @todays_date, @todays_date, @remark, 'VI', GETDATE())

			IF EXISTS(SELECT GLEXACT FROM dbo.ACCT_REC WHERE AR_INV_NBR = @invoice_number AND MANUAL_INV = 1 AND GLEXACT IS NOT NULL)

				BEGIN
				
					INSERT dbo.GLENTTRL (GLETXACT, GLETSEQ, GLETCODE, GLETAMT, GLETFCAMT, GLETREM, GLETSOURCE, CL_CODE, DIV_CODE, PRD_CODE) 
					SELECT @transaction_id, GLETSEQ, GLETCODE, -GLETAMT, -GLETFCAMT, @remark, 'VI', CL_CODE, DIV_CODE, PRD_CODE
					FROM dbo.GLENTTRL
					WHERE GLETXACT IN (
						SELECT GLEXACT
						FROM dbo.ACCT_REC
						WHERE AR_INV_NBR = @invoice_number
						AND MANUAL_INV = 1 
						AND GLEXACT IS NOT NULL
						)
					
				END

			--standard transaction
			IF EXISTS (SELECT GL_XACT_DEF FROM dbo.AR_SUMMARY WHERE AR_INV_NBR = @invoice_number AND GL_XACT_DEF IS NOT NULL)
			
				BEGIN
				
					INSERT dbo.GLENTTRL (GLETXACT, GLETSEQ, GLETCODE, GLETAMT, GLETFCAMT, GLETREM, GLETSOURCE, CL_CODE, DIV_CODE, PRD_CODE) 
					SELECT @transaction_id, GLETSEQ, GLETCODE, -GLETAMT, -GLETFCAMT, @remark, 'VI', CL_CODE, DIV_CODE, PRD_CODE
					FROM dbo.GLENTTRL
					WHERE GLETXACT IN (
						SELECT GL_XACT_DEF 
						FROM dbo.AR_SUMMARY
						WHERE AR_INV_NBR = @invoice_number
						AND GL_XACT_DEF IS NOT NULL
						)
					
					INSERT @GL_XACT_TABLE
					SELECT DISTINCT GL_XACT, NULL, NULL
					FROM dbo.AR_SUMMARY
					WHERE AR_INV_NBR = @invoice_number
					AND GL_XACT_DEF IS NOT NULL
					
					UPDATE @GL_XACT_TABLE SET POSTPERIOD = B.GLEHPP 
					FROM @GL_XACT_TABLE A INNER JOIN dbo.GLENTHDR B ON A.GL_XACT = B.GLEHXACT
					
					SET @deferred = CURSOR FOR
					SELECT GL_XACT, POSTPERIOD 
					FROM @GL_XACT_TABLE

					OPEN @deferred
					FETCH NEXT FROM @deferred INTO @gl_xact, @def_postperiod

					WHILE @@FETCH_STATUS = 0
					BEGIN
						
						SELECT @def_transaction_id = IDSXACT + 1
						FROM dbo.IDS
						WHERE IDSTABLE = 'GLENTHDR'

						UPDATE dbo.IDS SET IDSXACT = @def_transaction_id
						WHERE IDSTABLE = 'GLENTHDR'
						
						UPDATE @GL_XACT_TABLE SET GL_XACT_DEF = @def_transaction_id
						WHERE GL_XACT = @gl_xact 
						
						INSERT INTO dbo.GLENTHDR ( GLEHXACT, GLEHPP, GLEHUSER, GLEHENTDATE, GLEHMODDATE, GLEHDESC, GLEHSOURCE, CREATE_DATE )
						VALUES (@def_transaction_id,  dbo.[advfn_get_def_xact_post_period] ( @def_postperiod, @post_period_code ), @user_code, @todays_date, @todays_date, @remark, 'VI', GETDATE())
						
						INSERT dbo.GLENTTRL (GLETXACT, GLETSEQ, GLETCODE, GLETAMT, GLETFCAMT, GLETREM, GLETSOURCE, CL_CODE, DIV_CODE, PRD_CODE) 
						SELECT @def_transaction_id, GLETSEQ, GLETCODE, -GLETAMT, -GLETFCAMT, @remark, 'VI', CL_CODE, DIV_CODE, PRD_CODE
						FROM dbo.GLENTTRL
						WHERE GLETXACT = @gl_xact 
						
						--PJH 08/15/13 - added STATE_TAX_PCT, CNTY_TAX_PCT, CITY_TAX_PCT
						--MJC 02/01/16 - added AB_NONRESALE_AMT when voiding AR_SUMMARY row
						INSERT INTO dbo.AR_SUMMARY (AR_INV_NBR, AR_INV_SEQ, AR_TYPE, COOP_CODE, COOP_PCT, MANUAL_FLAG, ORDER_NBR, ORDER_LINE_NBR, MEDIA_TYPE, JOB_NUMBER, JOB_COMPONENT_NBR, JOB_AB_FLAG,
						AR_DESCRIPTION, CL_CODE, DIV_CODE, PRD_CODE, OFFICE_CODE, SC_CODE, CMP_IDENTIFIER, CLIENT_PO, FNC_CODE, FNC_TYPE, SALE_POST_PERIOD,
						TAX_CODE, INV_TAX_FLAG, INV_BY, BILL_COMM_NET,
						AB_REC_FLAG, MED_REC_FLAG, HRS_QTY, GL_ACCT_AR, GL_ACCT_SALE, GL_ACCT_DEF_SALE, GL_ACCT_COS, GL_ACCT_DEF_COS, GL_ACCT_ACC_AP, GL_ACCT_ACC_COS, GL_ACCT_WIP, GL_ACCT_STATE, GL_ACCT_COUNTY,
						GL_ACCT_CITY, MARKET_CODE, MEDIA_MONTH, MEDIA_YEAR, [START_DATE], END_DATE, EMP_TIME_AMT, INC_ONLY_AMT, COMMISSION_AMT, REBATE_AMT, COST_AMT, NET_CHARGE_AMT, NON_RESALE_AMT, DISCOUNT_AMT, ADDITIONAL_AMT,
						AB_COST_AMT, AB_INC_AMT, AB_COMMISSION_AMT, AB_SALE_AMT, CITY_TAX_AMT, CNTY_TAX_AMT, STATE_TAX_AMT, TOTAL_BILL, GL_XACT, GL_XACT_DEF, MODIFIED_FLAG, DIFF_APPLIED, CONVERTED, STATE_TAX_PCT, CNTY_TAX_PCT, CITY_TAX_PCT,
						AB_NONRESALE_AMT, CURRENCY_CODE, CURRENCY_RATE)
						SELECT
						AR_INV_NBR, AR_INV_SEQ, 'VO', COOP_CODE, COOP_PCT, MANUAL_FLAG, ORDER_NBR, ORDER_LINE_NBR, MEDIA_TYPE, JOB_NUMBER, JOB_COMPONENT_NBR, JOB_AB_FLAG,
						AR_DESCRIPTION, CL_CODE, DIV_CODE, PRD_CODE, OFFICE_CODE, SC_CODE, CMP_IDENTIFIER, CLIENT_PO, FNC_CODE, FNC_TYPE, dbo.[advfn_get_def_xact_post_period] ( SALE_POST_PERIOD , @post_period_code ),
						TAX_CODE, INV_TAX_FLAG, INV_BY, BILL_COMM_NET,
						AB_REC_FLAG, MED_REC_FLAG, -HRS_QTY, GL_ACCT_AR, GL_ACCT_SALE, GL_ACCT_DEF_SALE, GL_ACCT_COS, GL_ACCT_DEF_COS, GL_ACCT_ACC_AP, GL_ACCT_ACC_COS, GL_ACCT_WIP, GL_ACCT_STATE, GL_ACCT_COUNTY,
						GL_ACCT_CITY, MARKET_CODE, MEDIA_MONTH, MEDIA_YEAR, [START_DATE], END_DATE, -EMP_TIME_AMT, -INC_ONLY_AMT, -COMMISSION_AMT, -REBATE_AMT, -COST_AMT, -NET_CHARGE_AMT, -NON_RESALE_AMT, -DISCOUNT_AMT, -ADDITIONAL_AMT,
						-AB_COST_AMT, -AB_INC_AMT, -AB_COMMISSION_AMT, -AB_SALE_AMT, -CITY_TAX_AMT, -CNTY_TAX_AMT, -STATE_TAX_AMT, -TOTAL_BILL, @def_transaction_id, @transaction_id, MODIFIED_FLAG, DIFF_APPLIED, CONVERTED, STATE_TAX_PCT, CNTY_TAX_PCT, CITY_TAX_PCT,
						-AB_NONRESALE_AMT, CURRENCY_CODE, CURRENCY_RATE
						FROM dbo.AR_SUMMARY
						WHERE	AR_INV_NBR = @invoice_number
						AND		GL_XACT = @gl_xact 
						
						FETCH NEXT FROM @deferred INTO @gl_xact, @def_postperiod
						
					END
					
					CLOSE @deferred
					DEALLOCATE @deferred

					INSERT INTO dbo.AR_SUMMARY (AR_INV_NBR, AR_INV_SEQ, AR_TYPE, COOP_CODE, COOP_PCT, MANUAL_FLAG, ORDER_NBR, ORDER_LINE_NBR, MEDIA_TYPE, JOB_NUMBER, JOB_COMPONENT_NBR, JOB_AB_FLAG,
					AR_DESCRIPTION, CL_CODE, DIV_CODE, PRD_CODE, OFFICE_CODE, SC_CODE, CMP_IDENTIFIER, CLIENT_PO, FNC_CODE, FNC_TYPE, SALE_POST_PERIOD, TAX_CODE, INV_TAX_FLAG, INV_BY, BILL_COMM_NET,
					AB_REC_FLAG, MED_REC_FLAG, HRS_QTY, GL_ACCT_AR, GL_ACCT_SALE, GL_ACCT_DEF_SALE, GL_ACCT_COS, GL_ACCT_DEF_COS, GL_ACCT_ACC_AP, GL_ACCT_ACC_COS, GL_ACCT_WIP, GL_ACCT_STATE, GL_ACCT_COUNTY,
					GL_ACCT_CITY, MARKET_CODE, MEDIA_MONTH, MEDIA_YEAR, [START_DATE], END_DATE, EMP_TIME_AMT, INC_ONLY_AMT, COMMISSION_AMT, REBATE_AMT, COST_AMT, NET_CHARGE_AMT, NON_RESALE_AMT, DISCOUNT_AMT, ADDITIONAL_AMT,
					AB_COST_AMT, AB_INC_AMT, AB_COMMISSION_AMT, AB_SALE_AMT, CITY_TAX_AMT, CNTY_TAX_AMT, STATE_TAX_AMT, TOTAL_BILL, GL_XACT, GL_XACT_DEF, MODIFIED_FLAG, DIFF_APPLIED, CONVERTED, STATE_TAX_PCT, CNTY_TAX_PCT, CITY_TAX_PCT,
					AB_NONRESALE_AMT, CURRENCY_CODE, CURRENCY_RATE)
					SELECT
					AR_INV_NBR, AR_INV_SEQ, 'VO', COOP_CODE, COOP_PCT, MANUAL_FLAG, ORDER_NBR, ORDER_LINE_NBR, MEDIA_TYPE, JOB_NUMBER, JOB_COMPONENT_NBR, JOB_AB_FLAG,
					AR_DESCRIPTION, CL_CODE, DIV_CODE, PRD_CODE, OFFICE_CODE, SC_CODE, CMP_IDENTIFIER, CLIENT_PO, FNC_CODE, FNC_TYPE, @post_period_code, TAX_CODE, INV_TAX_FLAG, INV_BY, BILL_COMM_NET,
					AB_REC_FLAG, MED_REC_FLAG, -HRS_QTY, GL_ACCT_AR, GL_ACCT_SALE, GL_ACCT_DEF_SALE, GL_ACCT_COS, GL_ACCT_DEF_COS, GL_ACCT_ACC_AP, GL_ACCT_ACC_COS, GL_ACCT_WIP, GL_ACCT_STATE, GL_ACCT_COUNTY,
					GL_ACCT_CITY, MARKET_CODE, MEDIA_MONTH, MEDIA_YEAR, [START_DATE], END_DATE, -EMP_TIME_AMT, -INC_ONLY_AMT, -COMMISSION_AMT, -REBATE_AMT, -COST_AMT, -NET_CHARGE_AMT, -NON_RESALE_AMT, -DISCOUNT_AMT, -ADDITIONAL_AMT,
					-AB_COST_AMT, -AB_INC_AMT, -AB_COMMISSION_AMT, -AB_SALE_AMT, -CITY_TAX_AMT, -CNTY_TAX_AMT, -STATE_TAX_AMT, -TOTAL_BILL, @transaction_id, GL_XACT_DEF, MODIFIED_FLAG, DIFF_APPLIED, CONVERTED, STATE_TAX_PCT, CNTY_TAX_PCT, CITY_TAX_PCT,
					-AB_NONRESALE_AMT, CURRENCY_CODE, CURRENCY_RATE
					FROM dbo.AR_SUMMARY
					WHERE AR_INV_NBR = @invoice_number
					AND GL_XACT_DEF IS NULL

				END
				
			ELSE
			
				BEGIN
				
					INSERT dbo.GLENTTRL (GLETXACT, GLETSEQ, GLETCODE, GLETAMT, GLETFCAMT, GLETREM, GLETSOURCE, CL_CODE, DIV_CODE, PRD_CODE) 
					SELECT @transaction_id, GLETSEQ, GLETCODE, -GLETAMT, -GLETFCAMT, @remark, 'VI', CL_CODE, DIV_CODE, PRD_CODE
					FROM dbo.GLENTTRL
					WHERE GLETXACT IN (
						SELECT DISTINCT GL_XACT
						FROM dbo.AR_SUMMARY
						WHERE AR_INV_NBR = @invoice_number 
						AND GL_XACT IS NOT NULL
						)
					
					INSERT @GL_XACT_TABLE
					SELECT GL_XACT, NULL, NULL
					FROM dbo.AR_SUMMARY
					WHERE AR_INV_NBR = @invoice_number
					AND GL_XACT IS NOT NULL
					
					--PJH 08/15/13 - added STATE_TAX_PCT, CNTY_TAX_PCT, CITY_TAX_PCT
					--MJC 02/01/16 - added AB_NONRESALE_AMT when voiding AR_SUMMARY row
					INSERT INTO dbo.AR_SUMMARY (AR_INV_NBR, AR_INV_SEQ, AR_TYPE, COOP_CODE, COOP_PCT, MANUAL_FLAG, ORDER_NBR, ORDER_LINE_NBR, MEDIA_TYPE, JOB_NUMBER, JOB_COMPONENT_NBR, JOB_AB_FLAG,
					AR_DESCRIPTION, CL_CODE, DIV_CODE, PRD_CODE, OFFICE_CODE, SC_CODE, CMP_IDENTIFIER, CLIENT_PO, FNC_CODE, FNC_TYPE, SALE_POST_PERIOD, TAX_CODE, INV_TAX_FLAG, INV_BY, BILL_COMM_NET,
					AB_REC_FLAG, MED_REC_FLAG, HRS_QTY, GL_ACCT_AR, GL_ACCT_SALE, GL_ACCT_DEF_SALE, GL_ACCT_COS, GL_ACCT_DEF_COS, GL_ACCT_ACC_AP, GL_ACCT_ACC_COS, GL_ACCT_WIP, GL_ACCT_STATE, GL_ACCT_COUNTY,
					GL_ACCT_CITY, MARKET_CODE, MEDIA_MONTH, MEDIA_YEAR, [START_DATE], END_DATE, EMP_TIME_AMT, INC_ONLY_AMT, COMMISSION_AMT, REBATE_AMT, COST_AMT, NET_CHARGE_AMT, NON_RESALE_AMT, DISCOUNT_AMT, ADDITIONAL_AMT,
					AB_COST_AMT, AB_INC_AMT, AB_COMMISSION_AMT, AB_SALE_AMT, CITY_TAX_AMT, CNTY_TAX_AMT, STATE_TAX_AMT, TOTAL_BILL, GL_XACT, GL_XACT_DEF, MODIFIED_FLAG, DIFF_APPLIED, CONVERTED, STATE_TAX_PCT, CNTY_TAX_PCT, CITY_TAX_PCT,
					AB_NONRESALE_AMT, CURRENCY_CODE, CURRENCY_RATE)
					SELECT
					AR_INV_NBR, AR_INV_SEQ, 'VO', COOP_CODE, COOP_PCT, MANUAL_FLAG, ORDER_NBR, ORDER_LINE_NBR, MEDIA_TYPE, JOB_NUMBER, JOB_COMPONENT_NBR, JOB_AB_FLAG,
					AR_DESCRIPTION, CL_CODE, DIV_CODE, PRD_CODE, OFFICE_CODE, SC_CODE, CMP_IDENTIFIER, CLIENT_PO, FNC_CODE, FNC_TYPE, @post_period_code, TAX_CODE, INV_TAX_FLAG, INV_BY, BILL_COMM_NET,
					AB_REC_FLAG, MED_REC_FLAG, -HRS_QTY, GL_ACCT_AR, GL_ACCT_SALE, GL_ACCT_DEF_SALE, GL_ACCT_COS, GL_ACCT_DEF_COS, GL_ACCT_ACC_AP, GL_ACCT_ACC_COS, GL_ACCT_WIP, GL_ACCT_STATE, GL_ACCT_COUNTY,
					GL_ACCT_CITY, MARKET_CODE, MEDIA_MONTH, MEDIA_YEAR, [START_DATE], END_DATE, -EMP_TIME_AMT, -INC_ONLY_AMT, -COMMISSION_AMT, -REBATE_AMT, -COST_AMT, -NET_CHARGE_AMT, -NON_RESALE_AMT, -DISCOUNT_AMT, -ADDITIONAL_AMT,
					-AB_COST_AMT, -AB_INC_AMT, -AB_COMMISSION_AMT, -AB_SALE_AMT, -CITY_TAX_AMT, -CNTY_TAX_AMT, -STATE_TAX_AMT, -TOTAL_BILL, @transaction_id, GL_XACT_DEF, MODIFIED_FLAG, DIFF_APPLIED, CONVERTED, STATE_TAX_PCT, CNTY_TAX_PCT, CITY_TAX_PCT,
					-AB_NONRESALE_AMT, CURRENCY_CODE, CURRENCY_RATE
					FROM dbo.AR_SUMMARY
					WHERE AR_INV_NBR = @invoice_number
					
				END

			UPDATE dbo.ACCT_REC SET VOIDED_BY = @user_code, VOID_DATE = @todays_date, VOID_FLAG = 1
			WHERE AR_INV_NBR = @invoice_number
			
			INSERT INTO dbo.ACCT_REC ( AR_ADVANCE_AMT, AR_CITY_AMT, AR_COMM_AMT, AR_COUNTY_AMT, AR_DESCRIPTION, AR_EMP_TIME, AR_INV_AMOUNT, AR_INV_DATE, AR_INV_NBR, AR_IO_AMT, AR_POST_PERIOD, AR_STATE_AMT, AR_TYPE,
				CL_CODE, CMP_CODE, CREATE_DATE, DIV_CODE, GLACODE_AR, GLACODE_CITY, GLACODE_COUNTY, GLACODE_COS, GLACODE_OFFSET, GLACODE_SALES, GLACODE_STATE, GLESEQ_AR, GLESEQ_CITY, GLESEQ_COS, GLESEQ_COUNTY, GLESEQ_OFFSET,
				GLESEQ_SALES, GLESEQ_STATE, GLEXACT, INV_TYPE, JOB_COMPONENT_NBR, JOB_NUMBER, MANUAL_INV, OFFICE_CODE, PRD_CODE, PRD_PO_NBR, SC_CODE, USERID, VOIDED_BY, VOID_DATE, VOID_FLAG, AR_COS_AMT, REC_TYPE, AR_INV_SEQ,
				VO_COMMENT, DUE_DATE, INV_CAT, AR_SALE_AMT, AR_OFFSET_AMT, CURRENCY_CODE, CURRENCY_RATE, EXCHANGE_AMOUNT, BILLING_ADDRESS, QUICKBOOKS_INVOICE_ID, QB_CREATE_DATE, QB_CREATE_BY )
			SELECT
				-AR_ADVANCE_AMT, -AR_CITY_AMT, -AR_COMM_AMT, -AR_COUNTY_AMT, AR_DESCRIPTION, -AR_EMP_TIME, -AR_INV_AMOUNT, AR_INV_DATE, AR_INV_NBR, -AR_IO_AMT, @post_period_code, -AR_STATE_AMT, 'VO',
				CL_CODE, CMP_CODE, CREATE_DATE, DIV_CODE, GLACODE_AR, GLACODE_CITY, GLACODE_COUNTY, GLACODE_COS, GLACODE_OFFSET, GLACODE_SALES, GLACODE_STATE, NULL, NULL, NULL, NULL, NULL,
				NULL, NULL, @transaction_id, INV_TYPE, JOB_COMPONENT_NBR, JOB_NUMBER, MANUAL_INV, OFFICE_CODE, PRD_CODE, PRD_PO_NBR, SC_CODE, @user_code, @user_code, @todays_date, 1, -AR_COS_AMT, REC_TYPE, AR_INV_SEQ,
				@vo_comment, DUE_DATE, INV_CAT, -AR_SALE_AMT, -AR_OFFSET_AMT, CURRENCY_CODE, CURRENCY_RATE, -EXCHANGE_AMOUNT, BILLING_ADDRESS, QUICKBOOKS_INVOICE_ID, QB_CREATE_DATE, QB_CREATE_BY
			FROM dbo.ACCT_REC
			WHERE AR_INV_NBR = @invoice_number
			
			
			-- START AP_PRODUCTION
			IF EXISTS (SELECT AP_ID FROM dbo.AP_PRODUCTION WHERE AR_INV_NBR = @invoice_number)
			BEGIN
				
				INSERT INTO @AP_PRODUCTION_TABLE
				SELECT AP_ID, LINE_NUMBER
				FROM dbo.AP_PRODUCTION
				WHERE AR_INV_NBR = @invoice_number

				SET @ap_production = CURSOR FOR
				SELECT AP_ID, LINE_NUMBER 
				FROM @AP_PRODUCTION_TABLE
				ORDER BY AP_ID, LINE_NUMBER 

				OPEN @ap_production
				FETCH NEXT FROM @ap_production INTO @ap_id, @line_number

				WHILE @@FETCH_STATUS = 0
				BEGIN
					
					SELECT @next_line_number = MAX(LINE_NUMBER) + 1
					FROM dbo.AP_PRODUCTION
					WHERE AP_ID = @ap_id
					
					INSERT INTO dbo.AP_PRODUCTION ( ADJ_COMMENTS, AP_ID, AP_PROD_COMM_PCT, AP_PROD_EXT_AMT, AP_PROD_QUANTITY, AP_PROD_RATE, AP_SEQ, AR_INV_NBR, AR_INV_SEQ, DP_TM_CODE, FNC_CODE,
					GLACODE, GLACODE_CITY, GLACODE_CNTY, GLACODE_COS, GLACODE_SALES, GLACODE_STATE, HR_COST_RATE, JOB_COMPONENT_NBR, JOB_NUMBER, PO_NUMBER, PO_LINE_NUMBER, TAX_CITY_PCT, TAX_CODE,
					TAX_COMMISSIONS, TAX_COMM_ONLY, TAX_COUNTY_PCT, TAX_RESALE, TAX_STATE_PCT, AB_FLAG,
					AP_PROD_BILL_HOLD, AP_PROD_NOBILL_FLG, EXT_CITY_RESALE, EXT_COUNTY_RESALE,
					EXT_MARKUP_AMT, EXT_NONRESALE_TAX, EXT_STATE_RESALE, LINE_NUMBER, LINE_TOTAL, PO_COMPLETE, POST_PERIOD,
					GLESEQ, GLESEQ_CITY, GLESEQ_CNTY, GLESEQ_COS, GLESEQ_SALES, GLESEQ_STATE, GLESEQ_WIP, GLEXACT, AR_TYPE,
					MODIFY_DELETE, OFFICE_CODE, GLEXACT_BILL, BA_ID, GLACODE_DUE_FROM, GLACODE_DUE_TO, AP_PRD_EXT_AMT_FRN, AP_PRD_RATE_FRN, AP_NONRES_TAX_FRN, AP_PRD_AMT_XCHG,
					GLESEQ_XCHG, GLACODE_XCHG, CREATED_BY, CREATE_DATE, MODIFIED_BY, MODIFY_DATE, BCC_ID, EXPDETAILID, IS_BILLED_REVERSAL )
					SELECT
					ADJ_COMMENTS, AP_ID, AP_PROD_COMM_PCT, -AP_PROD_EXT_AMT, -AP_PROD_QUANTITY, AP_PROD_RATE, AP_SEQ, AR_INV_NBR, AR_INV_SEQ, DP_TM_CODE, FNC_CODE,
					GLACODE, GLACODE_CITY, GLACODE_CNTY, GLACODE_COS, GLACODE_SALES, GLACODE_STATE, HR_COST_RATE, JOB_COMPONENT_NBR, JOB_NUMBER, PO_NUMBER, PO_LINE_NUMBER, TAX_CITY_PCT, TAX_CODE,
					TAX_COMMISSIONS, TAX_COMM_ONLY, TAX_COUNTY_PCT, TAX_RESALE, TAX_STATE_PCT, AB_FLAG,
					AP_PROD_BILL_HOLD, AP_PROD_NOBILL_FLG, -EXT_CITY_RESALE, -EXT_COUNTY_RESALE,
					-EXT_MARKUP_AMT, -EXT_NONRESALE_TAX, -EXT_STATE_RESALE, @next_line_number, -LINE_TOTAL, PO_COMPLETE, POST_PERIOD,
					NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'VO',
					MODIFY_DELETE, OFFICE_CODE, @transaction_id, BA_ID, GLACODE_DUE_FROM, GLACODE_DUE_TO, AP_PRD_EXT_AMT_FRN, AP_PRD_RATE_FRN, AP_NONRES_TAX_FRN, AP_PRD_AMT_XCHG,
					NULL, GLACODE_XCHG, CREATED_BY, CREATE_DATE, MODIFIED_BY, MODIFY_DATE, BCC_ID, EXPDETAILID, IS_BILLED_REVERSAL
					FROM dbo.AP_PRODUCTION P
					WHERE
							AP_ID = @ap_id
					AND		LINE_NUMBER = @line_number
					
					IF EXISTS (SELECT AP_ID FROM dbo.AP_PROD_COMMENTS WHERE AP_ID = @ap_id AND LINE_NUMBER = @line_number) 
						INSERT INTO dbo.AP_PROD_COMMENTS ( AP_ID, LINE_NUMBER, JOB_NUMBER, JOB_COMPONENT_NBR, FNC_CODE, AP_COMMENT )
						SELECT AP_ID, @next_line_number, JOB_NUMBER, JOB_COMPONENT_NBR, FNC_CODE, AP_COMMENT FROM dbo.AP_PROD_COMMENTS WHERE AP_ID = @ap_id AND LINE_NUMBER = @line_number

					SELECT @next_line_number = MAX(LINE_NUMBER) + 1
					FROM dbo.AP_PRODUCTION
					WHERE AP_ID = @ap_id
					
					INSERT INTO dbo.AP_PRODUCTION ( ADJ_COMMENTS, AP_ID, AP_PROD_COMM_PCT, AP_PROD_EXT_AMT, AP_PROD_QUANTITY, AP_PROD_RATE, AP_SEQ, AR_INV_NBR, AR_INV_SEQ, DP_TM_CODE, FNC_CODE,
					GLACODE, GLACODE_CITY, GLACODE_CNTY, GLACODE_COS, GLACODE_SALES, GLACODE_STATE, HR_COST_RATE, JOB_COMPONENT_NBR, JOB_NUMBER, PO_NUMBER, PO_LINE_NUMBER, TAX_CITY_PCT, TAX_CODE,
					TAX_COMMISSIONS, TAX_COMM_ONLY, TAX_COUNTY_PCT, TAX_RESALE, TAX_STATE_PCT, AB_FLAG,
					AP_PROD_BILL_HOLD, AP_PROD_NOBILL_FLG, EXT_CITY_RESALE, EXT_COUNTY_RESALE,
					EXT_MARKUP_AMT, EXT_NONRESALE_TAX, EXT_STATE_RESALE, LINE_NUMBER, LINE_TOTAL, PO_COMPLETE, POST_PERIOD,
					GLESEQ, GLESEQ_CITY, GLESEQ_CNTY, GLESEQ_COS, GLESEQ_SALES, GLESEQ_STATE, GLESEQ_WIP, GLEXACT, AR_TYPE,
					MODIFY_DELETE, OFFICE_CODE, GLEXACT_BILL, BA_ID, GLACODE_DUE_FROM, GLACODE_DUE_TO, AP_PRD_EXT_AMT_FRN, AP_PRD_RATE_FRN, AP_NONRES_TAX_FRN, AP_PRD_AMT_XCHG,
					GLESEQ_XCHG, GLACODE_XCHG, CREATED_BY, CREATE_DATE, MODIFIED_BY, MODIFY_DATE, BCC_ID, EXPDETAILID, IS_BILLED_REVERSAL )
					
					--PJH 5/16/13 - Change 2 to CASE
					SELECT
					ADJ_COMMENTS, AP_ID, AP_PROD_COMM_PCT, AP_PROD_EXT_AMT, AP_PROD_QUANTITY, AP_PROD_RATE, AP_SEQ, NULL, NULL, DP_TM_CODE, FNC_CODE,
					GLACODE, NULL, NULL, NULL, NULL, NULL, HR_COST_RATE, JOB_COMPONENT_NBR, JOB_NUMBER, PO_NUMBER, PO_LINE_NUMBER, TAX_CITY_PCT, TAX_CODE,
					TAX_COMMISSIONS, TAX_COMM_ONLY, TAX_COUNTY_PCT, TAX_RESALE, TAX_STATE_PCT, NEW_AB_FLAG = CASE 
																								WHEN (AB_FLAG IN(6,1)) THEN 2 ELSE AB_FLAG
																								END,
					AP_PROD_BILL_HOLD, AP_PROD_NOBILL_FLG, EXT_CITY_RESALE, EXT_COUNTY_RESALE,
					EXT_MARKUP_AMT, EXT_NONRESALE_TAX, EXT_STATE_RESALE, @next_line_number, LINE_TOTAL, PO_COMPLETE, POST_PERIOD,
					NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
					MODIFY_DELETE, OFFICE_CODE, NULL, BA_ID, NULL, NULL, AP_PRD_EXT_AMT_FRN, AP_PRD_RATE_FRN, AP_NONRES_TAX_FRN, AP_PRD_AMT_XCHG,
					NULL, GLACODE_XCHG, CREATED_BY, CREATE_DATE, MODIFIED_BY, MODIFY_DATE, BCC_ID, EXPDETAILID, IS_BILLED_REVERSAL
					FROM dbo.AP_PRODUCTION P
					WHERE
							AP_ID = @ap_id
					AND		LINE_NUMBER = @line_number
					
					IF EXISTS (SELECT AP_ID FROM dbo.AP_PROD_COMMENTS WHERE AP_ID = @ap_id AND LINE_NUMBER = @line_number) 
						INSERT INTO dbo.AP_PROD_COMMENTS ( AP_ID, LINE_NUMBER, JOB_NUMBER, JOB_COMPONENT_NBR, FNC_CODE, AP_COMMENT )
						SELECT AP_ID, @next_line_number, JOB_NUMBER, JOB_COMPONENT_NBR, FNC_CODE, AP_COMMENT FROM dbo.AP_PROD_COMMENTS WHERE AP_ID = @ap_id AND LINE_NUMBER = @line_number

					FETCH NEXT FROM @ap_production INTO @ap_id, @line_number
					
				END
				
				CLOSE @ap_production
				DEALLOCATE @ap_production
				
				UPDATE dbo.AP_PRODUCTION SET MODIFY_DELETE = 1
				WHERE
						AR_INV_NBR = @invoice_number
				AND		AR_INV_SEQ = 0
				
			END
			-- STOP AP_PRODUCTION
			
			-- START EMP_TIME_DTL
			IF EXISTS (SELECT ET_ID FROM dbo.EMP_TIME_DTL WHERE AR_INV_NBR = @invoice_number)
			BEGIN /* EMP_TIME_DTL */
			
				INSERT INTO @EMP_TIME_DTL_TABLE
				SELECT ET_ID, SEQ_NBR
				FROM dbo.EMP_TIME_DTL
				WHERE AR_INV_NBR = @invoice_number
				ORDER BY ET_ID, SEQ_NBR

				SET @emp_time_dtl = CURSOR FOR
				SELECT ET_ID, SEQ_NBR
				FROM @EMP_TIME_DTL_TABLE
				ORDER BY ET_ID, SEQ_NBR

				OPEN @emp_time_dtl
				FETCH NEXT FROM @emp_time_dtl INTO @et_id, @seq_nbr

				WHILE @@FETCH_STATUS = 0
				BEGIN
					
					--MJC 10/15/2015 moved to after the time loop to set for all rows for the invoice being voided
					--UPDATE dbo.EMP_TIME_DTL SET EDIT_FLAG = 1
					--WHERE ET_ID = @et_id
					--AND SEQ_NBR = @seq_nbr
					
					--MJC 02/01/16 - include TRF_CODE when inserting into EMP_TIME_DTL
					INSERT INTO dbo.EMP_TIME_DTL ( ADJ_COMMENTS, AR_INV_NBR, AR_INV_SEQ, DATE_ENTERED, DP_TM_CODE, EDIT_FLAG, EMP_BILL_RATE, EMP_COMMENT, EMP_COMM_PCT, EMP_COST_RATE, EMP_HOURS, ALT_COST_AMT, ALT_COST_RATE,
					EMP_RATE_FROM, ET_ID, FNC_CODE, GLACODE_CITY, GLACODE_CNTY, GLACODE_SALES, GLACODE_STATE, JOB_COMPONENT_NBR, JOB_NUMBER, TAX_CITY_PCT, TAX_CODE, TAX_COMM, TAX_COMM_ONLY, TAX_COUNTY_PCT,
					TAX_RESALE, TAX_STATE_PCT, [USER_ID], AB_FLAG,
					BILL_HOLD_FLG, EMP_NON_BILL_FLAG, EXT_CITY_RESALE, EXT_COUNTY_RESALE, EXT_MARKUP_AMT, EXT_STATE_RESALE, LINE_TOTAL,
					SEQ_NBR, TOTAL_BILL, TOTAL_COST, GLESEQ_CITY, GLESEQ_CNTY, GLESEQ_SALES, GLESEQ_STATE, GLEXACT_BILL, AR_TYPE, ET_DTL_ID, PROD_CAT_CODE, FEE_TIME, EMPLOYEE_TITLE_ID, JOB_VER_HDR_ID,
					BA_ID, START_TIME, END_TIME, BCC_ID, TRF_CODE, ALERT_ID )
					SELECT
					ADJ_COMMENTS, AR_INV_NBR, AR_INV_SEQ, DATE_ENTERED, DP_TM_CODE, EDIT_FLAG, EMP_BILL_RATE, EMP_COMMENT, EMP_COMM_PCT, EMP_COST_RATE, -EMP_HOURS, ALT_COST_AMT, ALT_COST_RATE,
					EMP_RATE_FROM, ET_ID, FNC_CODE, GLACODE_CITY, GLACODE_CNTY,	GLACODE_SALES, GLACODE_STATE, JOB_COMPONENT_NBR, JOB_NUMBER, TAX_CITY_PCT, TAX_CODE, TAX_COMM, TAX_COMM_ONLY, TAX_COUNTY_PCT,
					TAX_RESALE, TAX_STATE_PCT, @user_code, AB_FLAG,
					BILL_HOLD_FLG, EMP_NON_BILL_FLAG, -EXT_CITY_RESALE, -EXT_COUNTY_RESALE, -EXT_MARKUP_AMT, -EXT_STATE_RESALE, -LINE_TOTAL,
					(SELECT MAX(SEQ_NBR) + 1 FROM dbo.EMP_TIME_DTL
					 WHERE ET_ID = @et_id), -TOTAL_BILL, -TOTAL_COST, NULL, NULL, NULL, NULL, @transaction_id, 'VO', ET_DTL_ID, PROD_CAT_CODE, FEE_TIME, EMPLOYEE_TITLE_ID, JOB_VER_HDR_ID,
					BA_ID, START_TIME, END_TIME, BCC_ID, TRF_CODE, ALERT_ID
					FROM dbo.EMP_TIME_DTL E
					WHERE ET_ID = @et_id
					AND SEQ_NBR = @seq_nbr
					
					--PJH 5/16/13 - Change 2 to CASE
					--MJC 02/01/16 - include TRF_CODE when inserting into EMP_TIME_DTL
					INSERT INTO dbo.EMP_TIME_DTL ( ADJ_COMMENTS, AR_INV_NBR, AR_INV_SEQ, DATE_ENTERED, DP_TM_CODE, EDIT_FLAG, EMP_BILL_RATE, EMP_COMMENT, EMP_COMM_PCT, EMP_COST_RATE, EMP_HOURS, ALT_COST_AMT, ALT_COST_RATE,
					EMP_RATE_FROM, ET_ID, FNC_CODE, GLACODE_CITY, GLACODE_CNTY, GLACODE_SALES, GLACODE_STATE, JOB_COMPONENT_NBR, JOB_NUMBER, TAX_CITY_PCT, TAX_CODE, TAX_COMM, TAX_COMM_ONLY, TAX_COUNTY_PCT,
					TAX_RESALE, TAX_STATE_PCT, [USER_ID], AB_FLAG,
					BILL_HOLD_FLG, EMP_NON_BILL_FLAG, EXT_CITY_RESALE, EXT_COUNTY_RESALE, EXT_MARKUP_AMT, EXT_STATE_RESALE, LINE_TOTAL,
					SEQ_NBR, TOTAL_BILL, TOTAL_COST, GLESEQ_CITY, GLESEQ_CNTY, GLESEQ_SALES, GLESEQ_STATE, GLEXACT_BILL, AR_TYPE, ET_DTL_ID, PROD_CAT_CODE, FEE_TIME, EMPLOYEE_TITLE_ID, JOB_VER_HDR_ID,
					BA_ID, START_TIME, END_TIME, BCC_ID, TRF_CODE, ALERT_ID )
					SELECT
					ADJ_COMMENTS, NULL, NULL, DATE_ENTERED, DP_TM_CODE, EDIT_FLAG, EMP_BILL_RATE, EMP_COMMENT, EMP_COMM_PCT, EMP_COST_RATE, EMP_HOURS, ALT_COST_AMT, ALT_COST_RATE,
					EMP_RATE_FROM, ET_ID, FNC_CODE, NULL, NULL,	NULL, NULL, JOB_COMPONENT_NBR, JOB_NUMBER, TAX_CITY_PCT, TAX_CODE, TAX_COMM, TAX_COMM_ONLY, TAX_COUNTY_PCT,
					TAX_RESALE, TAX_STATE_PCT, @user_code, NEW_AB_FLAG = CASE 
															WHEN (AB_FLAG IN(6,1)) THEN 2 ELSE AB_FLAG
															END,
					BILL_HOLD_FLG, EMP_NON_BILL_FLAG, EXT_CITY_RESALE, EXT_COUNTY_RESALE, EXT_MARKUP_AMT, EXT_STATE_RESALE, LINE_TOTAL,
					(SELECT MAX(SEQ_NBR) + 1 FROM dbo.EMP_TIME_DTL
					 WHERE ET_ID = @et_id), TOTAL_BILL, TOTAL_COST, NULL, NULL, NULL, NULL, NULL, NULL, ET_DTL_ID, PROD_CAT_CODE, FEE_TIME, EMPLOYEE_TITLE_ID, JOB_VER_HDR_ID,
					BA_ID, START_TIME, END_TIME, BCC_ID, TRF_CODE, ALERT_ID
					FROM dbo.EMP_TIME_DTL E
					WHERE ET_ID = @et_id
					AND SEQ_NBR = @seq_nbr
					
					FETCH NEXT FROM @emp_time_dtl INTO @et_id, @seq_nbr
					
				END
				CLOSE @emp_time_dtl
				DEALLOCATE @emp_time_dtl
				
				UPDATE dbo.EMP_TIME_DTL SET EDIT_FLAG = 1
				WHERE AR_INV_NBR = @invoice_number

			END
			-- STOP EMP_TIME_DTL

			-- START INCOME_ONLY
			IF EXISTS (SELECT IO_ID	FROM dbo.INCOME_ONLY WHERE AR_INV_NBR = @invoice_number)
			BEGIN /* INCOME_ONLY */

				INSERT INTO @INCOME_ONLY_TABLE
				SELECT IO_ID, SEQ_NBR
				FROM dbo.INCOME_ONLY
				WHERE AR_INV_NBR = @invoice_number
				ORDER BY IO_ID, SEQ_NBR

				SET @income_only = CURSOR FOR
				SELECT IO_ID, SEQ_NBR
				FROM @INCOME_ONLY_TABLE
				ORDER BY IO_ID, SEQ_NBR

				OPEN @income_only
				FETCH NEXT FROM @income_only INTO @io_id, @seq_nbr

				WHILE @@FETCH_STATUS = 0
				BEGIN
					
					UPDATE dbo.INCOME_ONLY SET DELETE_FLAG = 1, DELETE_DATE = @todays_date, DELETED_BY = @user_code
					WHERE IO_ID = @io_id
					AND SEQ_NBR = @seq_nbr				--MJC 12/22/15 - flag INCOME_ONLY records as deleted now includes SEQ_NBR in update
					AND AR_INV_NBR IS NOT NULL
					
					INSERT INTO dbo.INCOME_ONLY ( ADJ_COMMENTS, AR_INV_NBR, AR_INV_SEQ, DP_TM_CODE, FNC_CODE, GLACODE_CITY, GLACODE_CNTY, GLACODE_SALES,
					GLACODE_STATE, IO_AMOUNT, IO_COMM_PCT, IO_DESC, IO_ID, IO_INV_DATE, IO_INV_NBR, JOB_COMPONENT_NBR, JOB_NUMBER,
					TAX_CITY_PCT, TAX_CODE, TAX_COMM, TAX_COMM_ONLY, TAX_COUNTY_PCT, TAX_RESALE, TAX_STATE_PCT, AB_FLAG,
					BILL_HOLD_FLAG, DELETE_DATE, DELETE_FLAG, DELETED_BY, EXT_CITY_RESALE, EXT_COUNTY_RESALE, EXT_MARKUP_AMT,
					EXT_STATE_RESALE, IO_QTY, IO_RATE, LINE_TOTAL, MODIFIED_BY, MODIFY_DATE, MODIFY_FLAG, NON_BILL_FLAG, GLESEQ_CITY,
					GLESEQ_CNTY, GLESEQ_SALES, GLESEQ_STATE, GLEXACT_BILL, AR_TYPE, SEQ_NBR, FEE_INVOICE, IO_COMMENT, BA_ID, JOB_SERVICE_FEE_ID, BCC_ID,
					ORDER_NBR, LINE_NBR, IS_BILLED_REVERSAL )
					SELECT 
					ADJ_COMMENTS, AR_INV_NBR, AR_INV_SEQ, DP_TM_CODE, FNC_CODE, GLACODE_CITY, GLACODE_CNTY, GLACODE_SALES,
					GLACODE_STATE, -IO_AMOUNT, IO_COMM_PCT, IO_DESC, IO_ID, IO_INV_DATE, IO_INV_NBR, JOB_COMPONENT_NBR, JOB_NUMBER,
					TAX_CITY_PCT, TAX_CODE, TAX_COMM, TAX_COMM_ONLY, TAX_COUNTY_PCT, TAX_RESALE, TAX_STATE_PCT, AB_FLAG,
					BILL_HOLD_FLAG, GETDATE(), 1, @user_code, -EXT_CITY_RESALE, -EXT_COUNTY_RESALE, -EXT_MARKUP_AMT,
					-EXT_STATE_RESALE, -IO_QTY, IO_RATE, -LINE_TOTAL, MODIFIED_BY, MODIFY_DATE, MODIFY_FLAG, NON_BILL_FLAG, NULL,
					NULL, NULL, NULL, @transaction_id, 'VO', (SELECT MAX(SEQ_NBR) + 1 FROM dbo.INCOME_ONLY
															  WHERE IO_ID = @io_id), FEE_INVOICE, IO_COMMENT, BA_ID, JOB_SERVICE_FEE_ID, BCC_ID,
					ORDER_NBR, LINE_NBR, IS_BILLED_REVERSAL
					FROM dbo.INCOME_ONLY I
					WHERE
							IO_ID = @io_id
					AND		SEQ_NBR = @seq_nbr				
									
					--PJH 5/16/13 - Change AB_FLAG in SELECT to CASE	
					INSERT INTO dbo.INCOME_ONLY ( ADJ_COMMENTS, AR_INV_NBR, AR_INV_SEQ, DP_TM_CODE, FNC_CODE, GLACODE_CITY, GLACODE_CNTY, GLACODE_SALES,
					GLACODE_STATE, IO_AMOUNT, IO_COMM_PCT, IO_DESC, IO_ID, IO_INV_DATE, IO_INV_NBR, JOB_COMPONENT_NBR, JOB_NUMBER,
					TAX_CITY_PCT, TAX_CODE, TAX_COMM, TAX_COMM_ONLY, TAX_COUNTY_PCT, TAX_RESALE, TAX_STATE_PCT, AB_FLAG,
					BILL_HOLD_FLAG,
					DELETE_DATE, DELETE_FLAG, DELETED_BY, 
					EXT_CITY_RESALE, EXT_COUNTY_RESALE, EXT_MARKUP_AMT,
					EXT_STATE_RESALE, IO_QTY, IO_RATE, LINE_TOTAL, MODIFIED_BY, MODIFY_DATE, MODIFY_FLAG, NON_BILL_FLAG, GLESEQ_CITY,
					GLESEQ_CNTY, GLESEQ_SALES, GLESEQ_STATE, GLEXACT_BILL, AR_TYPE, SEQ_NBR, FEE_INVOICE, IO_COMMENT, BA_ID, JOB_SERVICE_FEE_ID, BCC_ID,
					ORDER_NBR, LINE_NBR, IS_BILLED_REVERSAL )
					SELECT 
					ADJ_COMMENTS, NULL, NULL, DP_TM_CODE, FNC_CODE, NULL, NULL, NULL,
					NULL, IO_AMOUNT, IO_COMM_PCT, IO_DESC, IO_ID, IO_INV_DATE, IO_INV_NBR, JOB_COMPONENT_NBR, JOB_NUMBER,
					TAX_CITY_PCT, TAX_CODE, TAX_COMM, TAX_COMM_ONLY, TAX_COUNTY_PCT, TAX_RESALE, TAX_STATE_PCT, NEW_AB_FLAG = CASE 
																												WHEN (AB_FLAG IN(6,1)) THEN 2 ELSE AB_FLAG
																												END,
					BILL_HOLD_FLAG, 
					--If the reversal row Modify Flag is a 1, when inserting both reversal and new rows, mark both Deleted
					CASE WHEN MODIFY_FLAG = 1 THEN GETDATE() ELSE NULL END, CASE WHEN MODIFY_FLAG = 1 THEN 1 ELSE NULL END, CASE WHEN MODIFY_FLAG = 1 THEN @user_code ELSE NULL END, 
					EXT_CITY_RESALE, EXT_COUNTY_RESALE, EXT_MARKUP_AMT,
					EXT_STATE_RESALE, IO_QTY, IO_RATE, LINE_TOTAL, MODIFIED_BY, MODIFY_DATE, MODIFY_FLAG, NON_BILL_FLAG, NULL,
					NULL, NULL, NULL, NULL, NULL, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.INCOME_ONLY
												   WHERE IO_ID = @io_id), FEE_INVOICE, IO_COMMENT, BA_ID, JOB_SERVICE_FEE_ID, BCC_ID,
					ORDER_NBR, LINE_NBR, IS_BILLED_REVERSAL
					FROM dbo.INCOME_ONLY I
					WHERE
							IO_ID = @io_id
					AND		SEQ_NBR = @seq_nbr
					
					FETCH NEXT FROM @income_only INTO @io_id, @seq_nbr
					
				END
				CLOSE @income_only
				DEALLOCATE @income_only
				
			END
			-- STOP INCOME_ONLY
			
			-- START ADVANCE_BILLING
			IF EXISTS (SELECT AB_ID FROM dbo.ADVANCE_BILLING WHERE AR_INV_NBR = @invoice_number)
			BEGIN /* ADVANCE_BILLING */
			
				SELECT @job_number_last = 0
				SELECT @job_component_nbr_last = 0
				SELECT @ab_id_last = 0
			
				--SELECT @job_number = JOB_NUMBER, @job_component_nbr = JOB_COMPONENT_NBR 
				--FROM dbo.ADVANCE_BILLING
				--WHERE AR_INV_NBR = @invoice_number
				
				--PJH 5/16/13 moved from below \/ 
				--SELECT @ab_id_reversal = MAX(AB_ID)...			
				
				--PJH 5/16/13 added AB_FLAG, JOB_NUMBER, JOB_COMPONENT_NBR
				INSERT INTO @ADVANCE_BILLING_TABLE
				SELECT AB_ID, SEQ_NBR, AB_FLAG, FNC_CODE, JOB_NUMBER, JOB_COMPONENT_NBR
				FROM dbo.ADVANCE_BILLING
				WHERE AR_INV_NBR = @invoice_number
				ORDER BY AB_ID DESC, SEQ_NBR, FNC_CODE, JOB_NUMBER, JOB_COMPONENT_NBR

				SET @advance_billing = CURSOR FOR
				SELECT AB_ID, SEQ_NBR, AB_FLAG, FNC_CODE, JOB_NUMBER, JOB_COMPONENT_NBR
				FROM @ADVANCE_BILLING_TABLE
				ORDER BY AB_ID DESC, SEQ_NBR, FNC_CODE
				
				--PJH 5/16/13 added @ab_flag, @job_number, @job_component_nbr
				OPEN @advance_billing
				FETCH NEXT FROM @advance_billing INTO @ab_id, @seq_nbr, @ab_flag, @fnc_code, @job_number, @job_component_nbr
				
				--PJH DEBUG CODE
				--SELECT * FROM @ADVANCE_BILLING_TABLE
				--SELECT @ab_id, @seq_nbr, @ab_flag, @fnc_code, @job_number, @job_component_nbr
				
				WHILE @@FETCH_STATUS = 0
				BEGIN --@advance_billing BEGIN
				
					IF (@job_number_last <> @job_number OR @job_component_nbr_last <> @job_component_nbr OR @ab_id_last <> @ab_id)
					BEGIN
						--PJH 01/28/14 - Changed Max(Seq_Nbr) by AB_ID vs MAX(AB_ID)
						--PJH 5/16/13 moved from above /\
						--SELECT @ab_id_reversal = MAX(AB_ID)
						--FROM (
						--	SELECT AB_ID
						--	FROM dbo.ADVANCE_BILLING
						--	WHERE JOB_NUMBER = @job_number
						--	AND JOB_COMPONENT_NBR = @job_component_nbr
						--	UNION
						--	SELECT AB_ID
						--	FROM dbo.INCOME_REC
						--	WHERE JOB_NUMBER = @job_number
						--	AND JOB_COMPONENT_NBR = @job_component_nbr) AS ABTABLE
						--PJH 5/16/13 moved from above /\
						SET @ab_id_reversal = @ab_id
						SELECT @seq_nbr_reversal = MAX(SEQ_NBR) + 1
						FROM (
							SELECT SEQ_NBR
							FROM dbo.ADVANCE_BILLING
							WHERE AB_ID = @ab_id_reversal
							UNION
							SELECT SEQ_NBR
							FROM dbo.INCOME_REC
							WHERE AB_ID = @ab_id_reversal) AS SEQTABLE	
							
						SELECT @job_number_last = @job_number
						SELECT @job_component_nbr_last = @job_component_nbr
						SELECT @ab_id_last = @ab_id
					END
					ELSE
					BEGIN
						SELECT @seq_nbr_reversal = @seq_nbr_reversal + 1	
					END							
				
					INSERT INTO dbo.ADVANCE_BILLING ( AB_FLAG, AB_ID, ADV_BILL_NET_AMT, AR_INV_NBR, AR_INV_SEQ, CALC_METHOD, COMMISSION_PCT, CREATE_DATE, ESTIMATE_NUMBER, EST_COMPONENT_NBR, EST_QUOTE_NBR, EST_REVISION_NBR, FINAL_AB_FLAG,
					FINAL_AB_ID, FINAL_DATE, FINAL_SEQ_NBR, FINAL_USER, FNC_CODE, FNC_TYPE, GLACODE_ACC_AP, GLACODE_CITY, GLACODE_CNTY, GLACODE_COS, GLACODE_SALES, GLACODE_STATE, JOB_COMPONENT_NBR, JOB_NUMBER, TAX_CITY_PCT, TAX_CODE, TAX_COMM,
					TAX_COMM_ONLY, TAX_COUNTY_PCT, TAX_RESALE, TAX_STATE_PCT, USER_ID, AR_TYPE, CALC_PERCENT, EXT_CITY_RESALE, EXT_COUNTY_RESALE, EXT_MARKUP_AMT, EXT_NONRESALE_TAX, EXT_STATE_RESALE, LINE_TOTAL, METHOD_DESC, GLESEQ_ACC_AP,
					GLESEQ_CITY, GLESEQ_CNTY, GLESEQ_COS, GLESEQ_SALES, GLESEQ_STATE, GLEXACT, SEQ_NBR, BILL_DATE, BCC_ID, QTY_HOURS, RATE )
					SELECT
					AB_FLAG, AB_ID, -ADV_BILL_NET_AMT, AR_INV_NBR, AR_INV_SEQ, CALC_METHOD, COMMISSION_PCT, CREATE_DATE, ESTIMATE_NUMBER, EST_COMPONENT_NBR, EST_QUOTE_NBR, EST_REVISION_NBR, FINAL_AB_FLAG,
					FINAL_AB_ID, FINAL_DATE, FINAL_SEQ_NBR, FINAL_USER, FNC_CODE, FNC_TYPE, GLACODE_ACC_AP, GLACODE_CITY, GLACODE_CNTY, GLACODE_COS, GLACODE_SALES, GLACODE_STATE, JOB_COMPONENT_NBR, JOB_NUMBER, TAX_CITY_PCT, TAX_CODE, TAX_COMM,
					TAX_COMM_ONLY, TAX_COUNTY_PCT, TAX_RESALE, TAX_STATE_PCT, @user_code, 'VO', CALC_PERCENT, -EXT_CITY_RESALE, -EXT_COUNTY_RESALE, -EXT_MARKUP_AMT, -EXT_NONRESALE_TAX, -EXT_STATE_RESALE, -LINE_TOTAL, METHOD_DESC, NULL,
					NULL, NULL, NULL, NULL, NULL, @transaction_id, @seq_nbr_reversal, BILL_DATE, BCC_ID, -QTY_HOURS, -RATE
					FROM dbo.ADVANCE_BILLING
					WHERE
							AB_ID = @ab_id 
					AND		SEQ_NBR = @seq_nbr
					AND		FNC_CODE = @fnc_code 
					
					--PJH - IF @ab_flag != 6 AND @ab_flag != 5 AND @ab_flag != 4 THEN INSERT NEW ROW		
					IF @ab_flag != 6 AND @ab_flag != 5 AND @ab_flag != 4 
					BEGIN
						SELECT @seq_nbr_reversal = @seq_nbr_reversal + 1
					
						INSERT INTO dbo.ADVANCE_BILLING ( AB_FLAG, AB_ID, ADV_BILL_NET_AMT, AR_INV_NBR, AR_INV_SEQ, CALC_METHOD, COMMISSION_PCT, CREATE_DATE, ESTIMATE_NUMBER, EST_COMPONENT_NBR, EST_QUOTE_NBR, EST_REVISION_NBR, FINAL_AB_FLAG,
						FINAL_AB_ID, FINAL_DATE, FINAL_SEQ_NBR, FINAL_USER, FNC_CODE, FNC_TYPE, GLACODE_ACC_AP, GLACODE_CITY, GLACODE_CNTY, GLACODE_COS, GLACODE_SALES, GLACODE_STATE, JOB_COMPONENT_NBR, JOB_NUMBER, TAX_CITY_PCT, TAX_CODE, TAX_COMM,
						TAX_COMM_ONLY, TAX_COUNTY_PCT, TAX_RESALE, TAX_STATE_PCT, USER_ID, AR_TYPE, CALC_PERCENT, EXT_CITY_RESALE, EXT_COUNTY_RESALE, EXT_MARKUP_AMT, EXT_NONRESALE_TAX, EXT_STATE_RESALE, LINE_TOTAL, METHOD_DESC, 
						GLESEQ_ACC_AP, GLESEQ_CITY, GLESEQ_CNTY, GLESEQ_COS, GLESEQ_SALES, GLESEQ_STATE, GLEXACT, SEQ_NBR, BILL_DATE, BCC_ID, QTY_HOURS, RATE )
						SELECT
						AB_FLAG, AB_ID, ADV_BILL_NET_AMT, NULL, NULL, CALC_METHOD, COMMISSION_PCT, CREATE_DATE, ESTIMATE_NUMBER, EST_COMPONENT_NBR, EST_QUOTE_NBR, EST_REVISION_NBR, FINAL_AB_FLAG,
						FINAL_AB_ID, FINAL_DATE, FINAL_SEQ_NBR, FINAL_USER, FNC_CODE, FNC_TYPE, NULL, NULL, NULL, NULL, NULL, NULL, JOB_COMPONENT_NBR, JOB_NUMBER, TAX_CITY_PCT, TAX_CODE, TAX_COMM,
						TAX_COMM_ONLY, TAX_COUNTY_PCT, TAX_RESALE, TAX_STATE_PCT, @user_code, NULL, CALC_PERCENT, EXT_CITY_RESALE, EXT_COUNTY_RESALE, EXT_MARKUP_AMT, EXT_NONRESALE_TAX, EXT_STATE_RESALE, LINE_TOTAL, METHOD_DESC, 
						NULL, NULL, NULL, NULL, NULL, NULL, NULL, @seq_nbr_reversal, BILL_DATE, BCC_ID, QTY_HOURS, RATE
						FROM dbo.ADVANCE_BILLING
						WHERE
								AB_ID = @ab_id 
						AND		SEQ_NBR = @seq_nbr
						AND		FNC_CODE = @fnc_code 					
					END
				
					--PJH - "UPDATE dbo.JOB_COMPONENT" move here from below
					UPDATE dbo.JOB_COMPONENT 
					SET AB_FLAG = CASE 
						WHEN (@ab_flag IN(4,5,6,7)) THEN 2 
							ELSE @ab_flag
						END  
					WHERE JOB_NUMBER = @job_number
					AND JOB_COMPONENT_NBR = @job_component_nbr			
					
					FETCH NEXT FROM @advance_billing INTO @ab_id, @seq_nbr, @ab_flag, @fnc_code, @job_number, @job_component_nbr
					
				END --@advance_billing END
				
				CLOSE @advance_billing
				DEALLOCATE @advance_billing
				
				--PJH - Change AB_FLAG = 2 in SELECT to the following AND move "UPDATE dbo.JOB_COMPONENT" sql into Adv Bill loop						
				--UPDATE dbo.JOB_COMPONENT SET AB_FLAG = 2  
				--WHERE JOB_NUMBER = @job_number
				--AND JOB_COMPONENT_NBR = @job_component_nbr
				
				UPDATE dbo.ADVANCE_BILLING SET AR_INV_VOID = 1
				WHERE AR_INV_NBR = @invoice_number
				
				--MJC - if the FINAL_AB_ID is the same as the AB_ID for the @invoice_number being voided, update the FINAL columns to NULL for all rows where the FINAL_AB_ID is such
				--MJC - if voiding a final reconciliation, clear the final data on rows that are not marked with the AR_INV_VOID flag
				UPDATE dbo.ADVANCE_BILLING SET FINAL_AB_FLAG = NULL, FINAL_DATE = NULL, FINAL_AB_ID = NULL, FINAL_SEQ_NBR = NULL, FINAL_USER = NULL, METHOD_DESC = NULL
				WHERE FINAL_AB_ID IN (
					SELECT FINAL_AB_ID
					FROM dbo.ADVANCE_BILLING 
					WHERE AR_INV_NBR = @invoice_number
					AND FINAL_AB_ID = AB_ID
					AND METHOD_DESC IS NOT NULL
				) 
				AND COALESCE(AR_INV_VOID, 0) <> 1

			END
			-- STOP ADVANCE_BILLING
			
			-- START INCOME_REC
			IF EXISTS (SELECT JOB_NUMBER FROM dbo.INCOME_REC WHERE AR_INV_NBR = @invoice_number)
			BEGIN /* INCOME_REC */
			
				SELECT @job_number_last = 0
				SELECT @job_component_nbr_last = 0			
			
				--SELECT @job_number = JOB_NUMBER, @job_component_nbr = JOB_COMPONENT_NBR 
				--FROM dbo.INCOME_REC
				--WHERE AR_INV_NBR = @invoice_number
				
				--PJH 5/16/13 moved from below \/ 
				--SELECT @ab_id_reversal = MAX(AB_ID)...					
				
				--PJH 5/16/13 added AB_FLAG, JOB_NUMBER, JOB_COMPONENT_NBR
				INSERT INTO @INCOME_REC_TABLE
				SELECT AB_ID, SEQ_NBR, AB_FLAG, JOB_NUMBER, JOB_COMPONENT_NBR
				FROM dbo.INCOME_REC
				WHERE AR_INV_NBR = @invoice_number
				ORDER BY AB_ID DESC, SEQ_NBR, JOB_NUMBER, JOB_COMPONENT_NBR

				SET @income_rec = CURSOR FOR
				SELECT AB_ID, SEQ_NBR, AB_FLAG, JOB_NUMBER, JOB_COMPONENT_NBR
				FROM @INCOME_REC_TABLE
				ORDER BY AB_ID DESC, SEQ_NBR, JOB_NUMBER

				--PJH 5/16/13 added @ab_flag, @job_number, @job_component_nbr
				OPEN @income_rec
				FETCH NEXT FROM @income_rec INTO @ab_id, @seq_nbr, @ab_flag, @job_number, @job_component_nbr

				WHILE @@FETCH_STATUS = 0
				BEGIN --@income_rec BEGIN
				
					IF (@job_number_last <> @job_number OR @job_component_nbr_last <> @job_component_nbr)
					BEGIN
						--PJH 5/16/13 moved from above /\
						SELECT @ab_id_reversal = MAX(AB_ID)
						FROM (
							SELECT AB_ID
							FROM dbo.ADVANCE_BILLING
							WHERE JOB_NUMBER = @job_number
							AND JOB_COMPONENT_NBR = @job_component_nbr
							UNION
							SELECT AB_ID
							FROM dbo.INCOME_REC
							WHERE JOB_NUMBER = @job_number
							AND JOB_COMPONENT_NBR = @job_component_nbr) AS ABTABLE
						--PJH 5/16/13 moved from above /\
						SELECT @seq_nbr_reversal = MAX(SEQ_NBR) + 1
						FROM (
							SELECT SEQ_NBR
							FROM dbo.ADVANCE_BILLING
							WHERE AB_ID = @ab_id_reversal
							UNION
							SELECT SEQ_NBR
							FROM dbo.INCOME_REC
							WHERE AB_ID = @ab_id_reversal) AS SEQTABLE	
							
						SELECT @job_number_last = @job_number
						SELECT @job_component_nbr_last = @job_component_nbr
					END
					ELSE
					BEGIN
						SELECT @seq_nbr_reversal = @seq_nbr_reversal + 1	
					END											
					
					INSERT	INTO dbo.INCOME_REC ( AB_ID, SEQ_NBR, JOB_NUMBER, JOB_COMPONENT_NBR, AR_INV_NBR, AR_INV_SEQ, AR_TYPE, AB_FLAG, CREATE_DATE, [USER_ID], 
					GLACODE_SALES, GLACODE_DEF_SALES, GLEXACT, GLESEQ_SALES, GLESEQ_DEF_SALES, POST_PERIOD, FINAL_FLAG, BILL_DATE, AR_INV_VOID, REC_AMT, FNC_CODE)
					SELECT @ab_id_reversal, @seq_nbr_reversal, JOB_NUMBER, JOB_COMPONENT_NBR, AR_INV_NBR, AR_INV_SEQ, 'VO', AB_FLAG, @todays_date, @user_code, 
					GLACODE_SALES, GLACODE_DEF_SALES, @transaction_id, NULL, NULL, @post_period_code, FINAL_FLAG, BILL_DATE, 1, -(REC_AMT), FNC_CODE
					FROM dbo.INCOME_REC
					WHERE
							AB_ID = @ab_id 
					AND		SEQ_NBR = @seq_nbr
					
					--PJH 08/12/13 - IF @ab_flag != 6 AND @ab_flag != 7 THEN INSERT NEW ROW		
					IF (@ab_flag != 6 AND @ab_flag != 7)
					BEGIN	
						SET @seq_nbr_reversal = @seq_nbr_reversal + 1
						
						--PJH 5/16/13 INSERT NEW ONSET ROW HERE (like original with new seq)	
						INSERT	INTO dbo.INCOME_REC ( AB_ID, SEQ_NBR, JOB_NUMBER, JOB_COMPONENT_NBR, AR_INV_NBR, AR_INV_SEQ, AR_TYPE, AB_FLAG, CREATE_DATE, [USER_ID], 
						GLACODE_SALES, GLACODE_DEF_SALES, GLEXACT, GLESEQ_SALES, GLESEQ_DEF_SALES, POST_PERIOD, FINAL_FLAG, BILL_DATE, AR_INV_VOID, REC_AMT, FNC_CODE)
						SELECT @ab_id_reversal, @seq_nbr_reversal, JOB_NUMBER, JOB_COMPONENT_NBR, NULL, NULL, NULL, AB_FLAG, @todays_date, @user_code, 
						NULL, NULL, NULL, NULL, NULL, @post_period_code, FINAL_FLAG, BILL_DATE, 1, -(REC_AMT), FNC_CODE
						FROM dbo.INCOME_REC
						WHERE
								AB_ID = @ab_id 
						AND		SEQ_NBR = @seq_nbr		
					END
					
					FETCH NEXT FROM @income_rec INTO @ab_id, @seq_nbr, @ab_flag, @job_number, @job_component_nbr
					
				END
				CLOSE @income_rec
				DEALLOCATE @income_rec
				
				UPDATE dbo.INCOME_REC SET AR_INV_VOID = 1
				WHERE AR_INV_NBR = @invoice_number 
			
			END
			-- STOP INCOM_REC
			
			-- START INTERNET_DETAIL
			IF EXISTS (SELECT ORDER_NBR FROM dbo.INTERNET_DETAIL WHERE AR_INV_NBR = @invoice_number)
			BEGIN /* INTERNET_DETAIL */
				
				INSERT INTO @INTERNET_DETAIL_TABLE
				SELECT H.ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR
				FROM dbo.INTERNET_HEADER H, dbo
				WHERE H.ORDER_NBR = D.ORDER_NBR
				AND D.AR_INV_NBR= @invoice_number
				ORDER BY H.ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR

				SET @internet_detail = CURSOR FOR
				SELECT ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR
				FROM @INTERNET_DETAIL_TABLE
				ORDER BY ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR

				OPEN @internet_detail
				FETCH NEXT FROM @internet_detail INTO @order_nbr, @line_nbr, @rev_nbr, @seq_nbr
				
				--PJH 08/12/13 - Hold order/line/rev info to update ACTIVE_REV
				SET @order_nbr_prev = @order_nbr
				SET @line_nbr_prev = @line_nbr
				SET @rev_nbr_prev = @rev_nbr						

				WHILE @@FETCH_STATUS = 0
				BEGIN
					
					--PJH 08/12/13 - Use Order/Line	
					UPDATE	 dbo.INTERNET_DETAIL SET ACTIVE_REV = NULL
					WHERE	 ORDER_NBR = @order_nbr
					AND		LINE_NBR = @line_nbr
					--AND  	REV_NBR = @rev_nbr
					
					/* PJH 08/27/13 - Reverse Quantities - PROJ_IMPRESSIONS, GUARANTEED_IMPRESS, ACT_IMPRESSIONS, QUANTITY */
					INSERT INTO dbo.INTERNET_DETAIL  ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					ACTIVE_REV, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, HEADLINE, INTERNET_TYPE,
					SIZE, PROJ_IMPRESSIONS, GUARANTEED_IMPRESS, URL, TARGET_AUDIENCE, COPY_AREA, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD, RATE_TYPE, RATE_DESC, QUANTITY, RATE, NET_RATE, GROSS_RATE, EXT_NET_AMT, EXT_GROSS_AMT,
					COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NCDESC, ADDL_CHARGE, ADDL_CHARGE_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER,
					AR_INV_NBR, AR_TYPE, AR_INV_SEQ, GLEXACT, GLESEQ_SALES, GLESEQ_COS, GLESEQ_WIP, GLESEQ_STATE, GLESEQ_COUNTY, GLESEQ_CITY, GLEXACT_DEF, GLESEQ_COS_DEF, GLESEQ_SALES_DEF, GLACODE_SALES, GLACODE_COS, GLACODE_WIP,
					GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, CREATIVE_SIZE, PLACEMENT_1, PLACEMENT_2, COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT,
					TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG, ACT_IMPRESSIONS, GLACODE_SALES_DEF, GLACODE_COS_DEF,
					BILLING_AMT, COST_TYPE, COST_RATE, NET_BASE_RATE, GROSS_BASE_RATE, BILL_CANCELLED,
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, AD_NUMBER,
					AD_SERVER_PLACEMENT_ID, AD_SERVER_CREATED_BY, AD_SERVER_CREATED_DATETIME, AD_SERVER_LAST_MODIFIED_BY, AD_SERVER_LAST_MODIFIED_DATETIME )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1
												   FROM	 dbo.INTERNET_DETAIL  
												   WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr AND REV_NBR = @rev_nbr),
					NULL, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE,	EXT_MATL_DATE, HEADLINE, INTERNET_TYPE,
					SIZE, -PROJ_IMPRESSIONS, -GUARANTEED_IMPRESS, URL, TARGET_AUDIENCE, COPY_AREA, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD, RATE_TYPE, RATE_DESC, -QUANTITY, RATE, NET_RATE, GROSS_RATE, -EXT_NET_AMT, -EXT_GROSS_AMT,
					-COMM_AMT, -REBATE_AMT, -DISCOUNT_AMT, DISCOUNT_DESC, -STATE_AMT, -COUNTY_AMT, -CITY_AMT, -NON_RESALE_AMT, -NETCHARGE, NCDESC, -ADDL_CHARGE, ADDL_CHARGE_DESC, -LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER,
					AR_INV_NBR, 'VO', AR_INV_SEQ, @transaction_id, NULL, NULL, NULL, NULL, NULL, NULL, (SELECT GL_XACT_DEF from @GL_XACT_TABLE WHERE GL_XACT = GLEXACT_DEF), NULL, NULL, GLACODE_SALES, GLACODE_COS, GLACODE_WIP,
					GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, CREATIVE_SIZE, PLACEMENT_1, PLACEMENT_2, COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT,
					TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, NULL, -ACT_IMPRESSIONS, GLACODE_SALES_DEF, GLACODE_COS_DEF,
					-BILLING_AMT, COST_TYPE, COST_RATE, NET_BASE_RATE, GROSS_BASE_RATE, (SELECT	 MAX(BILL_CANCELLED)
																						 FROM dbo.INTERNET_DETAIL
																						 WHERE	 ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr), EST_NBR, EST_LINE_NBR, EST_REV_NBR, AD_NUMBER,
					AD_SERVER_PLACEMENT_ID, AD_SERVER_CREATED_BY, AD_SERVER_CREATED_DATETIME, AD_SERVER_LAST_MODIFIED_BY, AD_SERVER_LAST_MODIFIED_DATETIME
					FROM	 dbo.INTERNET_DETAIL
					WHERE	 AR_INV_NBR = @invoice_number
					AND  	ORDER_NBR = @order_nbr
					AND  	LINE_NBR = @line_nbr
					AND  	REV_NBR = @rev_nbr
					AND  	SEQ_NBR = @seq_nbr
					
					--PJH 08/12/13 - Set new row's ACTIVE_REV = NULL instead of 1
					--PJH 11/04/13 - Set new row's BILL_CANCELLED to MAX(BILL_CANCELLED) instead of NULL
					INSERT INTO dbo.INTERNET_DETAIL  ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					ACTIVE_REV, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, HEADLINE, INTERNET_TYPE,
					SIZE, PROJ_IMPRESSIONS, GUARANTEED_IMPRESS, URL, TARGET_AUDIENCE, COPY_AREA, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD, RATE_TYPE, RATE_DESC, QUANTITY, RATE, NET_RATE, GROSS_RATE, EXT_NET_AMT, EXT_GROSS_AMT,
					COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NCDESC, ADDL_CHARGE, ADDL_CHARGE_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER,
					AR_INV_NBR, AR_TYPE, AR_INV_SEQ, GLEXACT, GLESEQ_SALES, GLESEQ_COS, GLESEQ_WIP, GLESEQ_STATE, GLESEQ_COUNTY, GLESEQ_CITY, GLEXACT_DEF, GLESEQ_COS_DEF, GLESEQ_SALES_DEF, GLACODE_SALES, GLACODE_COS, GLACODE_WIP,
					GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, CREATIVE_SIZE, PLACEMENT_1, PLACEMENT_2, COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT,
					TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG, ACT_IMPRESSIONS, GLACODE_SALES_DEF, GLACODE_COS_DEF,
					BILLING_AMT, COST_TYPE, COST_RATE, NET_BASE_RATE, GROSS_BASE_RATE, BILL_CANCELLED, EST_NBR, EST_LINE_NBR, EST_REV_NBR, AD_NUMBER,
					AD_SERVER_PLACEMENT_ID, AD_SERVER_CREATED_BY, AD_SERVER_CREATED_DATETIME, AD_SERVER_LAST_MODIFIED_BY, AD_SERVER_LAST_MODIFIED_DATETIME )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1
												   FROM	 dbo.INTERNET_DETAIL  
												   WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr AND REV_NBR = @rev_nbr),
					NULL, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE,	EXT_MATL_DATE, HEADLINE, INTERNET_TYPE,
					SIZE, PROJ_IMPRESSIONS, GUARANTEED_IMPRESS, URL, TARGET_AUDIENCE, COPY_AREA, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD, RATE_TYPE, RATE_DESC, QUANTITY, RATE, NET_RATE, GROSS_RATE, EXT_NET_AMT, EXT_GROSS_AMT,
					COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NCDESC, ADDL_CHARGE, ADDL_CHARGE_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, NULL,
					NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
					NULL, NULL, NULL, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, CREATIVE_SIZE, PLACEMENT_1, PLACEMENT_2, COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT,
					TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, NULL, ACT_IMPRESSIONS, NULL, NULL,
					BILLING_AMT, COST_TYPE, COST_RATE, NET_BASE_RATE, GROSS_BASE_RATE, (SELECT	 MAX(BILL_CANCELLED)
																						 FROM dbo.INTERNET_DETAIL
																						 WHERE	 ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr), EST_NBR, EST_LINE_NBR, EST_REV_NBR, AD_NUMBER,
					AD_SERVER_PLACEMENT_ID, AD_SERVER_CREATED_BY, AD_SERVER_CREATED_DATETIME, AD_SERVER_LAST_MODIFIED_BY, AD_SERVER_LAST_MODIFIED_DATETIME
					FROM	 dbo.INTERNET_DETAIL
					WHERE	 AR_INV_NBR = @invoice_number
					AND  	ORDER_NBR = @order_nbr
					AND  	LINE_NBR = @line_nbr
					AND  	REV_NBR = @rev_nbr
					AND  	SEQ_NBR = @seq_nbr
					
					FETCH NEXT FROM @internet_detail INTO @order_nbr, @line_nbr, @rev_nbr, @seq_nbr
					
					/* PJH 08/12/13 - Set ACTIVE_REV for previous order/line */
					IF @order_nbr <> @order_nbr_prev OR @line_nbr_prev <> @line_nbr
					BEGIN
						SET @rev_nbr_max = (SELECT MAX(REV_NBR) FROM dbo.INTERNET_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev)
						UPDATE	dbo.INTERNET_DETAIL SET ACTIVE_REV = 1
						WHERE	ORDER_NBR = @order_nbr_prev
						AND		LINE_NBR = @line_nbr_prev
						AND		REV_NBR = @rev_nbr_max
						AND		SEQ_NBR = (SELECT MAX(SEQ_NBR) FROM dbo.INTERNET_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev AND REV_NBR = @rev_nbr_max)					
					END
					
					SET @order_nbr_prev = @order_nbr
					SET @line_nbr_prev = @line_nbr
					SET @rev_nbr_prev = @rev_nbr					
					
				END
				
				/* PJH 08/12/13 - Set ACTIVE_REV for last line processed */
				BEGIN
					SET @rev_nbr_max = (SELECT MAX(REV_NBR) FROM dbo.INTERNET_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev)
					UPDATE	dbo.INTERNET_DETAIL SET ACTIVE_REV = 1
					WHERE	ORDER_NBR = @order_nbr_prev
					AND		LINE_NBR = @line_nbr_prev
					AND		REV_NBR = @rev_nbr_max
					AND		SEQ_NBR = (SELECT MAX(SEQ_NBR) FROM dbo.INTERNET_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev AND REV_NBR = @rev_nbr_max)					
				END			
				
				SET @order_nbr_prev = 0
				SET @line_nbr_prev = 0
				SET @rev_nbr_prev = 0					
				
				CLOSE @internet_detail
				DEALLOCATE @internet_detail
				
			END
			-- STOP INTERNET_DETAIL
			
			-- START NEWSPAPER_DETAIL
			IF EXISTS (SELECT ORDER_NBR FROM dbo.NEWSPAPER_DETAIL WHERE AR_INV_NBR = @invoice_number)
			BEGIN /* NEWSPAPER_DETAIL */
				
				INSERT INTO @NEWSPAPER_DETAIL_TABLE
				SELECT H.ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR
				FROM dbo.NEWSPAPER_HEADER H, dbo
				WHERE H.ORDER_NBR = D.ORDER_NBR
				AND D.AR_INV_NBR=@invoice_number
				ORDER BY H.ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR

				SET @newspaper_detail = CURSOR FOR
				SELECT ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR
				FROM @NEWSPAPER_DETAIL_TABLE
				ORDER BY ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR

				OPEN @newspaper_detail
				FETCH NEXT FROM @newspaper_detail INTO @order_nbr, @line_nbr, @rev_nbr, @seq_nbr
				
				--PJH 08/12/13 - Hold order/line/rev info to update ACTIVE_REV
				SET @order_nbr_prev = @order_nbr
				SET @line_nbr_prev = @line_nbr
				SET @rev_nbr_prev = @rev_nbr					

				WHILE @@FETCH_STATUS = 0
				BEGIN
					
					--PJH 08/12/13 - Use Order/Line	
					UPDATE dbo.NEWSPAPER_DETAIL SET	ACTIVE_REV = NULL
					WHERE ORDER_NBR = @order_nbr
					AND		LINE_NBR = @line_nbr
					--AND  	REV_NBR = @rev_nbr
					
					/* PJH 08/27/13 - Reverse PRINT_LINES, CONTRACT_QTY, PRINT_QUANTITY, QUANTITY */
					INSERT INTO dbo.NEWSPAPER_DETAIL  ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					ACTIVE_REV, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, SIZE, AD_NUMBER, HEADLINE,
					MATERIAL, EDITION_ISSUE, SECTION, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD_ID, RATE_DTL_ID, PRINT_COLUMNS, PRINT_INCHES, PRINT_LINES, CONTRACT_QTY, QUANTITY, RATE, NET_RATE, GROSS_RATE, FLAT_NET, FLAT_GROSS,
					EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NETCHARGE_DESC, ADDL_CHARGE, ADDL_CHARGE_DESC, PROD_CHARGE, PROD_DESC,
					COLOR_CHARGE, COLOR_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, AR_TYPE, AR_INV_SEQ, GLEXACT, GLESEQ_SALES, GLESEQ_COS, GLESEQ_WIP, GLESEQ_STATE, GLESEQ_COUNTY, GLESEQ_CITY,
					GLEXACT_DEF, GLESEQ_COS_DEF, GLESEQ_SALES_DEF, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG,
					COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG,
					GLACODE_SALES_DEF, GLACODE_COS_DEF, BILLING_AMT, BILL_CANCELLED,
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, FLAT_NETCHARGE, FLAT_ADDL_CHARGE, FLAT_DISCOUNT_AMT, PRODUCTION_SIZE, MAT_COMP, SIZE_CODE, COST_TYPE, COST_RATE, RATE_TYPE, PRINT_QUANTITY )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.NEWSPAPER_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr AND REV_NBR = @rev_nbr),
					NULL, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, SIZE, AD_NUMBER, HEADLINE,
					MATERIAL, EDITION_ISSUE, SECTION, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD_ID, RATE_DTL_ID, PRINT_COLUMNS, PRINT_INCHES, -PRINT_LINES, -CONTRACT_QTY, -QUANTITY, RATE, NET_RATE, GROSS_RATE, FLAT_NET, FLAT_GROSS,
					-EXT_NET_AMT, -EXT_GROSS_AMT, -COMM_AMT, -REBATE_AMT, -DISCOUNT_AMT, DISCOUNT_DESC, -STATE_AMT, -COUNTY_AMT, -CITY_AMT, -NON_RESALE_AMT, -NETCHARGE, NETCHARGE_DESC, -ADDL_CHARGE, ADDL_CHARGE_DESC, -PROD_CHARGE, PROD_DESC,
					-COLOR_CHARGE, COLOR_DESC, -LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, 'VO', AR_INV_SEQ, @transaction_id, NULL, NULL, NULL, NULL, NULL, NULL,
					(SELECT GL_XACT_DEF from @GL_XACT_TABLE WHERE GL_XACT = GLEXACT_DEF), NULL, NULL, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG,
					COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG,
					GLACODE_SALES_DEF, GLACODE_COS_DEF, -BILLING_AMT, (SELECT MAX(BILL_CANCELLED) FROM dbo.NEWSPAPER_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr),
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, -FLAT_NETCHARGE, -FLAT_ADDL_CHARGE, -FLAT_DISCOUNT_AMT, PRODUCTION_SIZE, MAT_COMP, SIZE_CODE, COST_TYPE, COST_RATE, RATE_TYPE, -PRINT_QUANTITY
					FROM dbo.NEWSPAPER_DETAIL
					WHERE	 AR_INV_NBR = @invoice_number
					AND  	ORDER_NBR = @order_nbr
					AND  	LINE_NBR = @line_nbr
					AND  	REV_NBR = @rev_nbr
					AND  	SEQ_NBR = @seq_nbr

					--PJH 08/12/13 - Set new row's ACTIVE_REV = NULL instead of 1
					INSERT INTO dbo.NEWSPAPER_DETAIL  ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					ACTIVE_REV, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, SIZE, AD_NUMBER, HEADLINE,
					MATERIAL, EDITION_ISSUE, SECTION, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD_ID, RATE_DTL_ID, PRINT_COLUMNS, PRINT_INCHES, PRINT_LINES, CONTRACT_QTY, QUANTITY, RATE, NET_RATE, GROSS_RATE, FLAT_NET, FLAT_GROSS,
					EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NETCHARGE_DESC, ADDL_CHARGE, ADDL_CHARGE_DESC, PROD_CHARGE, PROD_DESC,
					COLOR_CHARGE, COLOR_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, AR_TYPE, AR_INV_SEQ, GLEXACT, GLESEQ_SALES, GLESEQ_COS, GLESEQ_WIP, GLESEQ_STATE, GLESEQ_COUNTY, GLESEQ_CITY,
					GLEXACT_DEF, GLESEQ_COS_DEF, GLESEQ_SALES_DEF, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG,
					COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG,
					GLACODE_SALES_DEF, GLACODE_COS_DEF, BILLING_AMT, BILL_CANCELLED,
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, FLAT_NETCHARGE, FLAT_ADDL_CHARGE, FLAT_DISCOUNT_AMT, PRODUCTION_SIZE, MAT_COMP, SIZE_CODE, COST_TYPE, COST_RATE, RATE_TYPE, PRINT_QUANTITY )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.NEWSPAPER_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr AND REV_NBR = @rev_nbr),
					NULL, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, SIZE, AD_NUMBER, HEADLINE,
					MATERIAL, EDITION_ISSUE, SECTION, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD_ID, RATE_DTL_ID, PRINT_COLUMNS, PRINT_INCHES, PRINT_LINES, CONTRACT_QTY, QUANTITY, RATE, NET_RATE, GROSS_RATE, FLAT_NET, FLAT_GROSS,
					EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NETCHARGE_DESC, ADDL_CHARGE, ADDL_CHARGE_DESC, PROD_CHARGE, PROD_DESC,
					COLOR_CHARGE, COLOR_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
					NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG,
					COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, NULL,
					NULL, NULL, BILLING_AMT, (SELECT MAX(BILL_CANCELLED) FROM dbo.NEWSPAPER_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr),
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, -FLAT_NETCHARGE, -FLAT_ADDL_CHARGE, -FLAT_DISCOUNT_AMT, PRODUCTION_SIZE, MAT_COMP, SIZE_CODE, COST_TYPE, COST_RATE, RATE_TYPE, PRINT_QUANTITY
					FROM dbo.NEWSPAPER_DETAIL
					WHERE	 AR_INV_NBR = @invoice_number
					AND  	ORDER_NBR = @order_nbr
					AND  	LINE_NBR = @line_nbr
					AND  	REV_NBR = @rev_nbr
					AND  	SEQ_NBR = @seq_nbr

					FETCH NEXT FROM @newspaper_detail INTO @order_nbr, @line_nbr, @rev_nbr, @seq_nbr
					
					/* PJH 08/12/13 - Set ACTIVE_REV for previous order/line */
					IF @order_nbr <> @order_nbr_prev OR @line_nbr_prev <> @line_nbr
					BEGIN
						SET @rev_nbr_max = (SELECT MAX(REV_NBR) FROM dbo.NEWSPAPER_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev)
						UPDATE	dbo.NEWSPAPER_DETAIL SET ACTIVE_REV = 1
						WHERE	ORDER_NBR = @order_nbr_prev
						AND		LINE_NBR = @line_nbr_prev
						AND		REV_NBR = @rev_nbr_max
						AND		SEQ_NBR = (SELECT MAX(SEQ_NBR) FROM dbo.NEWSPAPER_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev AND REV_NBR = @rev_nbr_max)					
					END
					
					SET @order_nbr_prev = @order_nbr
					SET @line_nbr_prev = @line_nbr
					SET @rev_nbr_prev = @rev_nbr					
				END
				
				/* PJH 08/12/13 - Set ACTIVE_REV for last line processed */
					BEGIN
						SET @rev_nbr_max = (SELECT MAX(REV_NBR) FROM dbo.NEWSPAPER_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev)
						UPDATE	dbo.NEWSPAPER_DETAIL SET ACTIVE_REV = 1
						WHERE	ORDER_NBR = @order_nbr_prev
						AND		LINE_NBR = @line_nbr_prev
						AND		REV_NBR = @rev_nbr_max
						AND		SEQ_NBR = (SELECT MAX(SEQ_NBR) FROM dbo.NEWSPAPER_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev AND REV_NBR = @rev_nbr_max)					
					END		
				
				SET @order_nbr_prev = 0
				SET @line_nbr_prev = 0
				SET @rev_nbr_prev = 0					
				
				CLOSE @newspaper_detail
				DEALLOCATE @newspaper_detail
				
			END
			-- STOP NEWSPAPER_DETAIL
			
			-- START MAGAZINE_DETAIL
			IF EXISTS (SELECT ORDER_NBR FROM dbo.MAGAZINE_DETAIL WHERE AR_INV_NBR = @invoice_number)
			BEGIN /* MAGAZINE_DETAIL */
				
				INSERT INTO @MAGAZINE_DETAIL_TABLE
				SELECT H.ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR
				FROM dbo.MAGAZINE_HEADER H, dbo
				WHERE H.ORDER_NBR = D.ORDER_NBR
				AND D.AR_INV_NBR=@invoice_number
				ORDER BY H.ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR

				SET @magazine_detail = CURSOR FOR
				SELECT ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR
				FROM @MAGAZINE_DETAIL_TABLE
				ORDER BY ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR

				OPEN @magazine_detail
				FETCH NEXT FROM @magazine_detail INTO @order_nbr, @line_nbr, @rev_nbr, @seq_nbr
				
				--PJH 08/12/13 - Hold order/line/rev info to update ACTIVE_REV
				SET @order_nbr_prev = @order_nbr
				SET @line_nbr_prev = @line_nbr
				SET @rev_nbr_prev = @rev_nbr		
				
				--SELECT * FROM @MAGAZINE_DETAIL_TABLE			

				WHILE @@FETCH_STATUS = 0
				BEGIN
					
					--PJH 08/12/13 - Use Order/Line	
					UPDATE dbo.MAGAZINE_DETAIL SET	ACTIVE_REV = NULL
					WHERE ORDER_NBR = @order_nbr
					AND		LINE_NBR = @line_nbr
					--AND  	REV_NBR = @rev_nbr
					
					/* PJH 08/27/13 - Reverse CONTRACT_QTY, QUANTITY */
					INSERT INTO dbo.MAGAZINE_DETAIL  ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					ACTIVE_REV, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, SIZE, AD_NUMBER, HEADLINE,
					MATERIAL, EDITION_ISSUE, SECTION, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD_ID, RATE_DTL_ID, CONTRACT_QTY, QUANTITY, RATE, NET_RATE, GROSS_RATE, FLAT_NET, FLAT_GROSS, EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT,
					REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NETCHARGE_DESC, ADDL_CHARGE, ADDL_CHARGE_DESC, PROD_CHARGE, PROD_DESC, COLOR_CHARGE, COLOR_DESC, BLEED_PCT,
					BLEED_AMT, POSITION_PCT, POSITION_AMT, PREMIUM_PCT, PREMIUM_AMT, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, AR_TYPE, AR_INV_SEQ, GLEXACT, GLESEQ_SALES, GLESEQ_COS, GLESEQ_WIP,
					GLESEQ_STATE, GLESEQ_COUNTY, GLESEQ_CITY, GLEXACT_DEF,
					GLESEQ_COS_DEF, GLESEQ_SALES_DEF, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY,
					MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND,
					TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG, GLACODE_SALES_DEF, GLACODE_COS_DEF, BILLING_AMT, BILL_CANCELLED,
					EST_NBR, EST_LINE_NBR, EST_REV_NBR,  FLAT_NETCHARGE, FLAT_ADDL_CHARGE, FLAT_DISCOUNT_AMT )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.MAGAZINE_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr AND REV_NBR = @rev_nbr),
					NULL, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, SIZE, AD_NUMBER, HEADLINE,
					MATERIAL, EDITION_ISSUE, SECTION, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD_ID, RATE_DTL_ID, -CONTRACT_QTY, -QUANTITY, RATE, NET_RATE, GROSS_RATE, FLAT_NET, FLAT_GROSS, -EXT_NET_AMT, -EXT_GROSS_AMT, -COMM_AMT,
					-REBATE_AMT, -DISCOUNT_AMT, DISCOUNT_DESC, -STATE_AMT, -COUNTY_AMT, -CITY_AMT, -NON_RESALE_AMT, -NETCHARGE, NETCHARGE_DESC, -ADDL_CHARGE, ADDL_CHARGE_DESC, -PROD_CHARGE, PROD_DESC, -COLOR_CHARGE, COLOR_DESC, BLEED_PCT,
					-BLEED_AMT, POSITION_PCT, -POSITION_AMT, PREMIUM_PCT, -PREMIUM_AMT, -LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, 'VO', AR_INV_SEQ, @transaction_id, NULL, NULL, NULL,
					NULL, NULL, NULL, (SELECT GL_XACT_DEF from @GL_XACT_TABLE WHERE GL_XACT = GLEXACT_DEF),
					NULL, NULL, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY,
					MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND,
					TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG, GLACODE_SALES_DEF, GLACODE_COS_DEF, -BILLING_AMT, (SELECT MAX(BILL_CANCELLED) FROM dbo.MAGAZINE_DETAIL WHERE	ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr),
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, -FLAT_NETCHARGE, -FLAT_ADDL_CHARGE, -FLAT_DISCOUNT_AMT
					FROM dbo.MAGAZINE_DETAIL
					WHERE AR_INV_NBR = @invoice_number
					AND		ORDER_NBR = @order_nbr
					AND  	LINE_NBR = @line_nbr
					AND  	REV_NBR = @rev_nbr
					AND  	SEQ_NBR = @seq_nbr
					
					--PJH 08/12/13 - Set new row's ACTIVE_REV = NULL instead of 1
					INSERT INTO dbo.MAGAZINE_DETAIL  ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					ACTIVE_REV, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, SIZE, AD_NUMBER, HEADLINE,
					MATERIAL, EDITION_ISSUE, SECTION, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD_ID, RATE_DTL_ID, CONTRACT_QTY, QUANTITY, RATE, NET_RATE, GROSS_RATE, FLAT_NET, FLAT_GROSS, EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT,
					REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NETCHARGE_DESC, ADDL_CHARGE, ADDL_CHARGE_DESC, PROD_CHARGE, PROD_DESC, COLOR_CHARGE, COLOR_DESC, BLEED_PCT,
					BLEED_AMT, POSITION_PCT, POSITION_AMT, PREMIUM_PCT, PREMIUM_AMT, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, AR_TYPE, AR_INV_SEQ, GLEXACT, GLESEQ_SALES, GLESEQ_COS, GLESEQ_WIP,
					GLESEQ_STATE, GLESEQ_COUNTY, GLESEQ_CITY, GLEXACT_DEF, GLESEQ_COS_DEF, GLESEQ_SALES_DEF, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY,
					MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND,
					TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG, GLACODE_SALES_DEF, GLACODE_COS_DEF, BILLING_AMT, BILL_CANCELLED,
					EST_NBR, EST_LINE_NBR, EST_REV_NBR,  FLAT_NETCHARGE, FLAT_ADDL_CHARGE, FLAT_DISCOUNT_AMT )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.MAGAZINE_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr AND REV_NBR = @rev_nbr),
					NULL, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, SIZE, AD_NUMBER, HEADLINE,
					MATERIAL, EDITION_ISSUE, SECTION, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD_ID, RATE_DTL_ID, CONTRACT_QTY, QUANTITY, RATE, NET_RATE, GROSS_RATE, FLAT_NET, FLAT_GROSS, EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT,
					REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NETCHARGE_DESC, ADDL_CHARGE, ADDL_CHARGE_DESC, PROD_CHARGE, PROD_DESC, COLOR_CHARGE, COLOR_DESC, BLEED_PCT,
					BLEED_AMT, POSITION_PCT, POSITION_AMT, PREMIUM_PCT, PREMIUM_AMT, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
					NULL, NULL, NULL, NULL,	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NON_BILL_FLAG, MODIFIED_BY,
					MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND,
					TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, NULL, NULL, NULL, BILLING_AMT, (SELECT MAX(BILL_CANCELLED) FROM dbo.MAGAZINE_DETAIL WHERE	ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr),
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, FLAT_NETCHARGE, FLAT_ADDL_CHARGE, FLAT_DISCOUNT_AMT
					FROM dbo.MAGAZINE_DETAIL
					WHERE AR_INV_NBR = @invoice_number
					AND		ORDER_NBR = @order_nbr
					AND  	LINE_NBR = @line_nbr
					AND  	REV_NBR = @rev_nbr
					AND  	SEQ_NBR = @seq_nbr
					
					FETCH NEXT FROM @magazine_detail INTO @order_nbr, @line_nbr, @rev_nbr, @seq_nbr
					
					/* PJH 08/12/13 - Set ACTIVE_REV for previous order/line */
					IF @order_nbr <> @order_nbr_prev OR @line_nbr_prev <> @line_nbr
					BEGIN
						SET @rev_nbr_max = (SELECT MAX(REV_NBR) FROM dbo.MAGAZINE_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev)
						UPDATE	dbo.MAGAZINE_DETAIL SET ACTIVE_REV = 1
						WHERE	ORDER_NBR = @order_nbr_prev
						AND		LINE_NBR = @line_nbr_prev
						AND		REV_NBR = @rev_nbr_max
						AND		SEQ_NBR = (SELECT MAX(SEQ_NBR) FROM dbo.MAGAZINE_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev AND REV_NBR = @rev_nbr_max)					
					END
					
					SET @order_nbr_prev = @order_nbr
					SET @line_nbr_prev = @line_nbr
					SET @rev_nbr_prev = @rev_nbr					
					
				END
				/* PJH 08/12/13 - Set ACTIVE_REV for last line processed */
				BEGIN
					SET @rev_nbr_max = (SELECT MAX(REV_NBR) FROM dbo.MAGAZINE_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev)
					UPDATE	dbo.MAGAZINE_DETAIL SET ACTIVE_REV = 1
					WHERE	ORDER_NBR = @order_nbr_prev
					AND		LINE_NBR = @line_nbr_prev
					AND		REV_NBR = @rev_nbr_max
					AND		SEQ_NBR = (SELECT MAX(SEQ_NBR) FROM dbo.MAGAZINE_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev AND REV_NBR = @rev_nbr_max)					
				END				
				
				SET @order_nbr_prev = 0
				SET @line_nbr_prev = 0
				SET @rev_nbr_prev = 0					
				
				CLOSE @magazine_detail
				DEALLOCATE @magazine_detail
				
			END
			-- STOP MAGAZINE_DETAIL
			
			-- START OUTDOOR_DETAIL
			IF EXISTS (SELECT ORDER_NBR FROM dbo.OUTDOOR_DETAIL WHERE AR_INV_NBR = @invoice_number)
			BEGIN /* OUTDOOR_DETAIL */
				
				INSERT INTO @OUTDOOR_DETAIL_TABLE 
				SELECT H.ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR
				FROM dbo.OUTDOOR_HEADER H, dbo
				WHERE H.ORDER_NBR = D.ORDER_NBR
				AND D.AR_INV_NBR=@invoice_number
				ORDER BY H.ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR

				SET @outdoor_detail = CURSOR FOR
				SELECT ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR
				FROM @OUTDOOR_DETAIL_TABLE
				ORDER BY ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR

				OPEN @outdoor_detail
				FETCH NEXT FROM @outdoor_detail INTO @order_nbr, @line_nbr, @rev_nbr, @seq_nbr
				
				--PJH 08/12/13 - Hold order/line/rev info to update ACTIVE_REV
				SET @order_nbr_prev = @order_nbr
				SET @line_nbr_prev = @line_nbr
				SET @rev_nbr_prev = @rev_nbr					

				WHILE @@FETCH_STATUS = 0
				BEGIN
					
					--PJH 08/12/13 - Use Order/Line	
					UPDATE dbo.OUTDOOR_DETAIL SET	ACTIVE_REV = NULL
					WHERE ORDER_NBR = @order_nbr
					AND		LINE_NBR = @line_nbr
					--AND  	REV_NBR = @rev_nbr
					
					/* PJH 08/27/13 - Reverse QUANTITY */
					INSERT INTO dbo.OUTDOOR_DETAIL ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					ACTIVE_REV, LINK_DETID, POST_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, HEADLINE, OUTDOOR_TYPE, SIZE, LOCATION,
					COPY_AREA, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD, RATE_TYPE, RATE_DESC, QUANTITY, RATE, NET_RATE, GROSS_RATE, EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT,
					COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NCDESC, ADDL_CHARGE, ADDL_CHARGE_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, AR_TYPE, AR_INV_SEQ, GLEXACT, GLESEQ_SALES, GLESEQ_COS,
					GLESEQ_WIP, GLESEQ_STATE, GLESEQ_COUNTY, GLESEQ_CITY, GLEXACT_DEF,
					GLESEQ_COS_DEF, GLESEQ_SALES_DEF, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG,
					MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN,
					TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG, GLACODE_SALES_DEF, GLACODE_COS_DEF, BILLING_AMT, END_DATE,
					BILL_CANCELLED, EST_NBR, EST_LINE_NBR, EST_REV_NBR, [IMPRESSIONS], [ACTUAL_IMPRESSIONS] )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.OUTDOOR_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr AND REV_NBR = @rev_nbr),
					NULL, LINK_DETID, POST_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, HEADLINE, OUTDOOR_TYPE, SIZE, LOCATION,
					COPY_AREA, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD, RATE_TYPE, RATE_DESC, -QUANTITY, RATE, NET_RATE, GROSS_RATE, -EXT_NET_AMT, -EXT_GROSS_AMT, -COMM_AMT, -REBATE_AMT, -DISCOUNT_AMT, DISCOUNT_DESC, -STATE_AMT,
					-COUNTY_AMT, -CITY_AMT, -NON_RESALE_AMT, -NETCHARGE, NCDESC, -ADDL_CHARGE, ADDL_CHARGE_DESC, -LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, 'VO', AR_INV_SEQ, @transaction_id, NULL, NULL,
					NULL, NULL, NULL, NULL, (SELECT GL_XACT_DEF from @GL_XACT_TABLE WHERE GL_XACT = GLEXACT_DEF),
					NULL, NULL, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG,
					MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN,
					TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, NULL, GLACODE_SALES_DEF, GLACODE_COS_DEF, -BILLING_AMT, END_DATE, 
					(SELECT MAX(BILL_CANCELLED) FROM dbo.OUTDOOR_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr), EST_NBR, EST_LINE_NBR, EST_REV_NBR, [IMPRESSIONS], [ACTUAL_IMPRESSIONS]
					FROM dbo.OUTDOOR_DETAIL
					WHERE	 AR_INV_NBR = @invoice_number
					AND  	ORDER_NBR = @order_nbr
					AND  	LINE_NBR = @line_nbr
					AND  	REV_NBR = @rev_nbr
					AND  	SEQ_NBR = @seq_nbr
					
					--PJH 08/12/13 - Set new row's ACTIVE_REV = NULL instead of 1
					INSERT INTO dbo.OUTDOOR_DETAIL ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					ACTIVE_REV, LINK_DETID, POST_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, HEADLINE, OUTDOOR_TYPE, SIZE, LOCATION,
					COPY_AREA, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD, RATE_TYPE, RATE_DESC, QUANTITY, RATE, NET_RATE, GROSS_RATE, EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT,
					COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NCDESC, ADDL_CHARGE, ADDL_CHARGE_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, AR_TYPE, AR_INV_SEQ, GLEXACT, GLESEQ_SALES, GLESEQ_COS,
					GLESEQ_WIP, GLESEQ_STATE, GLESEQ_COUNTY, GLESEQ_CITY, GLEXACT_DEF, GLESEQ_COS_DEF, GLESEQ_SALES_DEF, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG,
					MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN,
					TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG, GLACODE_SALES_DEF, GLACODE_COS_DEF, BILLING_AMT, END_DATE,
					BILL_CANCELLED, EST_NBR, EST_LINE_NBR, EST_REV_NBR, [IMPRESSIONS], [ACTUAL_IMPRESSIONS] )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.OUTDOOR_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr AND REV_NBR = @rev_nbr),
					NULL, LINK_DETID, POST_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, HEADLINE, OUTDOOR_TYPE, SIZE, LOCATION,
					COPY_AREA, JOB_NUMBER, JOB_COMPONENT_NBR, RATE_CARD, RATE_TYPE, RATE_DESC, QUANTITY, RATE, NET_RATE, GROSS_RATE, EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT,
					COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NCDESC, ADDL_CHARGE, ADDL_CHARGE_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
					NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NON_BILL_FLAG,
					MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT, MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN,
					TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, NULL, NULL, NULL, BILLING_AMT, END_DATE,
					(SELECT MAX(BILL_CANCELLED) FROM dbo.OUTDOOR_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr), EST_NBR, EST_LINE_NBR, EST_REV_NBR, [IMPRESSIONS], [ACTUAL_IMPRESSIONS]
					FROM dbo.OUTDOOR_DETAIL
					WHERE	 AR_INV_NBR = @invoice_number
					AND  	ORDER_NBR = @order_nbr
					AND  	LINE_NBR = @line_nbr
					AND  	REV_NBR = @rev_nbr
					AND  	SEQ_NBR = @seq_nbr
					
					FETCH NEXT FROM @outdoor_detail INTO @order_nbr, @line_nbr, @rev_nbr, @seq_nbr
					
					/* PJH 08/12/13 - Set ACTIVE_REV for previous order/line */
					IF @order_nbr <> @order_nbr_prev OR @line_nbr_prev <> @line_nbr
					BEGIN
						SET @rev_nbr_max = (SELECT MAX(REV_NBR) FROM dbo.OUTDOOR_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev)
						UPDATE	dbo.OUTDOOR_DETAIL SET ACTIVE_REV = 1
						WHERE	ORDER_NBR = @order_nbr_prev
						AND		LINE_NBR = @line_nbr_prev
						AND		REV_NBR = @rev_nbr_max
						AND		SEQ_NBR = (SELECT MAX(SEQ_NBR) FROM dbo.OUTDOOR_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev AND REV_NBR = @rev_nbr_max)					
					END
					
					SET @order_nbr_prev = @order_nbr
					SET @line_nbr_prev = @line_nbr
					SET @rev_nbr_prev = @rev_nbr					
					
				END
				
				/* PJH 08/12/13 - Set ACTIVE_REV for last line processed */
				BEGIN
					SET @rev_nbr_max = (SELECT MAX(REV_NBR) FROM dbo.OUTDOOR_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev)
					UPDATE	dbo.OUTDOOR_DETAIL SET ACTIVE_REV = 1
					WHERE	ORDER_NBR = @order_nbr_prev
					AND		LINE_NBR = @line_nbr_prev
					AND		REV_NBR = @rev_nbr_max
					AND		SEQ_NBR = (SELECT MAX(SEQ_NBR) FROM dbo.OUTDOOR_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev AND REV_NBR = @rev_nbr_max)					
				END			
				
				SET @order_nbr_prev = 0
				SET @line_nbr_prev = 0
				SET @rev_nbr_prev = 0				
				
				CLOSE @outdoor_detail
				DEALLOCATE @outdoor_detail
				
			END
			-- STOP OUTDOOR_DETAIL
			
			-- START RADIO_DETAIL
			IF EXISTS (SELECT ORDER_NBR FROM dbo.RADIO_DETAIL WHERE AR_INV_NBR = @invoice_number)
			BEGIN /* RADIO_DETAIL */
			
				INSERT INTO @RADIO_DETAIL_TABLE 
				SELECT H.ORDER_NBR, D.LINE_NBR, REV_NBR, SEQ_NBR
				FROM dbo.RADIO_HDR H INNER JOIN dbo.RADIO_DETAIL D ON H.ORDER_NBR = D.ORDER_NBR 
					INNER JOIN
					(SELECT a.ORDER_NBR, a.LINE_NBR, a.BRDCAST_YEAR, a.BILL_COMM_NET,   		
					 CASE WHEN ( b.ORDER_NBR > 0 ) THEN 1 ELSE 0 END AS oldnew2
					 FROM dbo.ARINV_MEDIA a  LEFT OUTER JOIN dbo.RADIO_HDR b  	     ON a.ORDER_NBR = b.ORDER_NBR  	                                                                           	  
					 WHERE a.AR_INV_NBR = @invoice_number) AS OLDNEW ON H.ORDER_NBR = OLDNEW.ORDER_NBR AND D.LINE_NBR = OLDNEW.LINE_NBR AND OLDNEW.oldnew2 = 1
				WHERE D.AR_INV_NBR = @invoice_number 
				ORDER BY H.ORDER_NBR, D.LINE_NBR, REV_NBR, SEQ_NBR

				SET @radio_detail = CURSOR FOR
				SELECT ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR
				FROM @RADIO_DETAIL_TABLE
				ORDER BY ORDER_NBR, LINE_NBR

				OPEN @radio_detail
				FETCH NEXT FROM @radio_detail INTO @order_nbr, @line_nbr, @rev_nbr, @seq_nbr
				
				--PJH 08/12/13 - Hold order/line/rev info to update ACTIVE_REV
				SET @order_nbr_prev = @order_nbr
				SET @line_nbr_prev = @line_nbr
				SET @rev_nbr_prev = @rev_nbr					

				WHILE @@FETCH_STATUS = 0
				BEGIN
					
					--PJH 08/12/13 - Use Order/Line	
					UPDATE	dbo.RADIO_DETAIL SET ACTIVE_REV = NULL
					WHERE	ORDER_NBR = @order_nbr
					AND	LINE_NBR = @line_nbr
					--AND	REV_NBR = @rev_nbr
					
					INSERT INTO dbo.RADIO_DETAIL ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					ACTIVE_REV, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, JOB_NUMBER, JOB_COMPONENT_NBR,
					QUANTITY, RATE, NET_RATE, GROSS_RATE, EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NCDESC, ADDL_CHARGE,
					ADDL_CHARGE_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, AR_TYPE, AR_INV_SEQ, GLEXACT, GLESEQ_SALES, GLESEQ_COS, GLESEQ_WIP, GLESEQ_STATE, GLESEQ_COUNTY, GLESEQ_CITY,
					GLEXACT_DEF,
					GLESEQ_COS_DEF, GLESEQ_SALES_DEF, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT,
					MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG, GLACODE_SALES_DEF,
					GLACODE_COS_DEF, BILLING_AMT, COST_TYPE, COST_RATE, NET_BASE_RATE, GROSS_BASE_RATE, BILL_CANCELLED,
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, BUY_TYPE, MONTH_NBR, YEAR_NBR, DATE1, DATE2, DATE3, DATE4, DATE5, DATE6,
					MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, SPOTS1, SPOTS2, SPOTS3, SPOTS4, SPOTS5, SPOTS6, TOTAL_SPOTS, PROGRAMMING, START_TIME, END_TIME, [LENGTH], REMARKS, TAG, AD_NUMBER,
					NETWORK_ID, DAY_PART_ID, ADDED_VALUE, LINK_LINE_NUMBER )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM	dbo.RADIO_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr AND REV_NBR = @rev_nbr),
					NULL, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, JOB_NUMBER, JOB_COMPONENT_NBR,
					QUANTITY, RATE, NET_RATE, GROSS_RATE, -EXT_NET_AMT, -EXT_GROSS_AMT, -COMM_AMT, -REBATE_AMT, -DISCOUNT_AMT, DISCOUNT_DESC, -STATE_AMT, -COUNTY_AMT, -CITY_AMT, -NON_RESALE_AMT, -NETCHARGE, NCDESC, -ADDL_CHARGE,
					ADDL_CHARGE_DESC, -LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, 'VO', AR_INV_SEQ, @transaction_id, NULL, NULL, NULL, NULL, NULL, NULL,
					(SELECT GL_XACT_DEF from @GL_XACT_TABLE WHERE GL_XACT = GLEXACT_DEF),
					NULL, NULL, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT,
					MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, NULL, GLACODE_SALES_DEF,
					GLACODE_COS_DEF, -BILLING_AMT, COST_TYPE, COST_RATE, NET_BASE_RATE, GROSS_BASE_RATE, (SELECT MAX( BILL_CANCELLED ) FROM dbo.RADIO_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr),
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, BUY_TYPE, MONTH_NBR, YEAR_NBR, DATE1, DATE2, DATE3, DATE4, DATE5, DATE6,
					MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, -SPOTS1, -SPOTS2, -SPOTS3, -SPOTS4, -SPOTS5, -SPOTS6, -TOTAL_SPOTS, PROGRAMMING, START_TIME, END_TIME, [LENGTH], REMARKS, TAG, AD_NUMBER,
					NETWORK_ID, DAY_PART_ID, ADDED_VALUE, LINK_LINE_NUMBER
					FROM dbo.RADIO_DETAIL
					WHERE AR_INV_NBR = @invoice_number
					AND	ORDER_NBR = @order_nbr
					AND	LINE_NBR = @line_nbr
					AND	REV_NBR = @rev_nbr
					AND	SEQ_NBR = @seq_nbr
					
					--PJH 08/12/13 - Set new row's ACTIVE_REV = NULL instead of 1
					INSERT INTO dbo.RADIO_DETAIL ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					ACTIVE_REV, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, JOB_NUMBER, JOB_COMPONENT_NBR,
					QUANTITY, RATE, NET_RATE, GROSS_RATE, EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NCDESC, ADDL_CHARGE,
					ADDL_CHARGE_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, AR_TYPE, AR_INV_SEQ, GLEXACT, GLESEQ_SALES, GLESEQ_COS, GLESEQ_WIP, GLESEQ_STATE, GLESEQ_COUNTY, GLESEQ_CITY, GLEXACT_DEF,
					GLESEQ_COS_DEF, GLESEQ_SALES_DEF, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT,
					MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG, GLACODE_SALES_DEF,
					GLACODE_COS_DEF, BILLING_AMT, COST_TYPE, COST_RATE, NET_BASE_RATE, GROSS_BASE_RATE, BILL_CANCELLED,
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, BUY_TYPE, MONTH_NBR, YEAR_NBR, DATE1, DATE2, DATE3, DATE4, DATE5, DATE6,
					MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, SPOTS1, SPOTS2, SPOTS3, SPOTS4, SPOTS5, SPOTS6, TOTAL_SPOTS, PROGRAMMING, START_TIME, END_TIME, [LENGTH], REMARKS, TAG, AD_NUMBER,
					NETWORK_ID, DAY_PART_ID, ADDED_VALUE, LINK_LINE_NUMBER )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM	dbo.RADIO_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr AND REV_NBR = @rev_nbr),
					NULL, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, JOB_NUMBER, JOB_COMPONENT_NBR,
					QUANTITY, RATE, NET_RATE, GROSS_RATE, EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NCDESC, ADDL_CHARGE,
					ADDL_CHARGE_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
					NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT,
					MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, NULL, NULL,
					NULL, BILLING_AMT, COST_TYPE, COST_RATE, NET_BASE_RATE, GROSS_BASE_RATE, (SELECT MAX( BILL_CANCELLED ) FROM dbo.RADIO_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr),
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, BUY_TYPE, MONTH_NBR, YEAR_NBR, DATE1, DATE2, DATE3, DATE4, DATE5, DATE6,
					MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, SPOTS1, SPOTS2, SPOTS3, SPOTS4, SPOTS5, SPOTS6, TOTAL_SPOTS, PROGRAMMING, START_TIME, END_TIME, [LENGTH], REMARKS, TAG, AD_NUMBER,
					NETWORK_ID, DAY_PART_ID, ADDED_VALUE, LINK_LINE_NUMBER
					FROM dbo.RADIO_DETAIL
					WHERE AR_INV_NBR = @invoice_number
					AND ORDER_NBR = @order_nbr
					AND	LINE_NBR = @line_nbr
					AND	REV_NBR = @rev_nbr
					AND	SEQ_NBR = @seq_nbr

					FETCH NEXT FROM @radio_detail INTO @order_nbr, @line_nbr, @rev_nbr, @seq_nbr
					
					/* PJH 08/12/13 - Set ACTIVE_REV for previous order/line */
					IF @order_nbr <> @order_nbr_prev OR @line_nbr_prev <> @line_nbr
					BEGIN
						SET @rev_nbr_max = (SELECT MAX(REV_NBR) FROM dbo.RADIO_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev)
						UPDATE	dbo.RADIO_DETAIL SET ACTIVE_REV = 1
						WHERE	ORDER_NBR = @order_nbr_prev
						AND		LINE_NBR = @line_nbr_prev
						AND		REV_NBR = @rev_nbr_max
						AND		SEQ_NBR = (SELECT MAX(SEQ_NBR) FROM dbo.RADIO_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev AND REV_NBR = @rev_nbr_max)					
					END
					
					SET @order_nbr_prev = @order_nbr
					SET @line_nbr_prev = @line_nbr
					SET @rev_nbr_prev = @rev_nbr					
				END
				/* PJH 08/12/13 - Set ACTIVE_REV for last line processed */
				BEGIN
					SET @rev_nbr_max = (SELECT MAX(REV_NBR) FROM dbo.RADIO_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev)
					UPDATE	dbo.RADIO_DETAIL SET ACTIVE_REV = 1
					WHERE	ORDER_NBR = @order_nbr_prev
					AND		LINE_NBR = @line_nbr_prev
					AND		REV_NBR = @rev_nbr_max
					AND		SEQ_NBR = (SELECT MAX(SEQ_NBR) FROM dbo.RADIO_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev AND REV_NBR = @rev_nbr_max)					
				END
				
				CLOSE @radio_detail
				DEALLOCATE @radio_detail
				
			END
			-- STOP RADIO_DETAIL
			
			-- START RADIO_DETAIL1
			IF EXISTS (SELECT ORDER_NBR FROM dbo.RADIO_DETAIL1 WHERE AR_INV_NBR = @invoice_number)
			BEGIN /* RADIO_DETAIL1 */
			
				INSERT INTO @RADIO_DETAIL1_TABLE
				SELECT R.ORDER_NBR, R.LINE_NBR, R.BRDCAST_YEAR, REV_NBR, MAX(SEQ_NBR) AS SEQ_NBR
				FROM (
					SELECT a.ORDER_NBR, a.LINE_NBR, a.BRDCAST_YEAR,
					CASE WHEN ( b.ORDER_NBR > 0 ) THEN 1 ELSE 0 END AS OLDNEW
					FROM dbo.ARINV_MEDIA a  LEFT OUTER JOIN dbo.RADIO_HDR b  	     ON a.ORDER_NBR = b.ORDER_NBR
					WHERE a.AR_INV_NBR = @invoice_number
				) TABLEA INNER JOIN dbo.RADIO_DETAIL1 R ON TABLEA.ORDER_NBR = R.ORDER_NBR AND TABLEA.LINE_NBR = R.LINE_NBR AND TABLEA.BRDCAST_YEAR = R.BRDCAST_YEAR AND TABLEA.OLDNEW = 0
				GROUP BY R.ORDER_NBR, R.LINE_NBR, R.BRDCAST_YEAR, REV_NBR
				
				SET @radio_detail1 = CURSOR FOR
				SELECT ORDER_NBR, LINE_NBR, BRDCAST_YEAR, REV_NBR, SEQ_NBR
				FROM @RADIO_DETAIL1_TABLE
				ORDER BY ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR 

				OPEN @radio_detail1
				FETCH NEXT FROM @radio_detail1 INTO @order_nbr, @line_nbr, @brdcast_year, @rev_nbr, @seq_nbr

				WHILE @@FETCH_STATUS = 0
				BEGIN
					
					IF EXISTS ( SELECT SEQ_NBR
								FROM dbo.RADIO_DETAIL1 A, dbo.RADIO_HEADER B
								WHERE A.ORDER_NBR = @order_nbr
								AND A.ORDER_NBR = B.ORDER_NBR
								AND A.LINE_NBR = @line_nbr
								AND A.REV_NBR = @rev_nbr
								AND A.SEQ_NBR = @seq_nbr
								AND A.BRDCAST_YEAR = @brdcast_year
								AND ( JAN_AR_INV_NBR=@invoice_number
									OR FEB_AR_INV_NBR=@invoice_number
									OR MAR_AR_INV_NBR=@invoice_number
									OR APR_AR_INV_NBR=@invoice_number
									OR MAY_AR_INV_NBR=@invoice_number
									OR JUN_AR_INV_NBR=@invoice_number
									OR JUL_AR_INV_NBR=@invoice_number
									OR AUG_AR_INV_NBR=@invoice_number
									OR SEP_AR_INV_NBR=@invoice_number
									OR OCT_AR_INV_NBR=@invoice_number
									OR NOV_AR_INV_NBR=@invoice_number
									OR DEC_AR_INV_NBR=@invoice_number
									)
							  )
					BEGIN
					
						INSERT  INTO dbo.RADIO_DETAIL1 ( ORDER_NBR, LINE_NBR, REV_NBR, BRDCAST_YEAR, BILL_MONTHS, CANCELLED_DATE, CANCELLED_BY, COUNTY_TAX_NC, CITY_TAX_NC, CITY_TAX, COUNTY_TAX, COMM_AMT, CLOSE_DATE, DELETE_FLAG,
						DELETE_DATE, DELETED_BY, END_TIME, EXT_CLOSE_DATE, EXT_MATL_DATE, EXT_NET_AMT, GROSS_RATE, LINK_ID, LINK_DETID, [LENGTH], LINE_CANCELLED, LINE_TOTAL, LINE_NET_DISC, JOB_NUMBER, JOB_COMPONENT_NBR,
						MATL_CLOSE_DATE, NETCHARGES, NET_RATE, PROGRAMMING, PRINTED, REMARKS, RATE, RATE_CARD, RATE_DESC, REBATE_AMT,
						SEQ_NBR,
						START_TIME, STATE_TAX, STATE_TAX_NC, TOTAL_SPOTS, TAG, VENDOR_TAX, VENDOR_TAX_NC,
						JAN_LINE_NET, JAN_COMM_AMT, JAN_REBATE_AMT, JAN_DISCOUNT, JAN_VENDOR_TAX, JAN_STATE_TAX, JAN_COUNTY_TAX, JAN_CITY_TAX, JAN_SPOTS, JAN_BILLING_AMT, JAN_AR_INV_NBR, JAN_AR_INV_SEQ, JAN_AR_TYPE, JAN_CMP_UPD_INV,
						JAN_CMP_UPD_PP, FEB_LINE_NET, FEB_COMM_AMT, FEB_REBATE_AMT, FEB_DISCOUNT, FEB_VENDOR_TAX, FEB_STATE_TAX, FEB_COUNTY_TAX, FEB_CITY_TAX, FEB_SPOTS, FEB_BILLING_AMT, FEB_AR_INV_NBR, FEB_AR_INV_SEQ, FEB_AR_TYPE,
						FEB_CMP_UPD_INV, FEB_CMP_UPD_PP, MAR_LINE_NET, MAR_COMM_AMT, MAR_REBATE_AMT, MAR_DISCOUNT, MAR_VENDOR_TAX, MAR_STATE_TAX, MAR_COUNTY_TAX, MAR_CITY_TAX, MAR_SPOTS, MAR_BILLING_AMT, MAR_AR_INV_NBR, MAR_AR_INV_SEQ,
						MAR_AR_TYPE, MAR_CMP_UPD_INV, MAR_CMP_UPD_PP, APR_LINE_NET, APR_COMM_AMT, APR_REBATE_AMT, APR_DISCOUNT, APR_VENDOR_TAX, APR_STATE_TAX, APR_COUNTY_TAX, APR_CITY_TAX, APR_SPOTS, APR_BILLING_AMT, APR_AR_INV_NBR,
						APR_AR_INV_SEQ, APR_AR_TYPE, APR_CMP_UPD_INV, APR_CMP_UPD_PP, MAY_LINE_NET, MAY_COMM_AMT, MAY_REBATE_AMT, MAY_DISCOUNT, MAY_VENDOR_TAX, MAY_STATE_TAX, MAY_COUNTY_TAX, MAY_CITY_TAX, MAY_SPOTS, MAY_BILLING_AMT,
						MAY_AR_INV_NBR, MAY_AR_INV_SEQ, MAY_AR_TYPE, MAY_CMP_UPD_INV, MAY_CMP_UPD_PP, JUN_LINE_NET, JUN_COMM_AMT, JUN_REBATE_AMT, JUN_DISCOUNT, JUN_VENDOR_TAX, JUN_STATE_TAX, JUN_COUNTY_TAX, JUN_CITY_TAX, JUN_SPOTS,
						JUN_BILLING_AMT, JUN_AR_INV_NBR, JUN_AR_INV_SEQ, JUN_AR_TYPE, JUN_CMP_UPD_INV, JUN_CMP_UPD_PP, JUL_LINE_NET, JUL_COMM_AMT, JUL_REBATE_AMT, JUL_DISCOUNT, JUL_VENDOR_TAX, JUL_STATE_TAX, JUL_COUNTY_TAX,
						JUL_CITY_TAX, JUL_SPOTS, JUL_BILLING_AMT, JUL_AR_INV_NBR, JUL_AR_INV_SEQ, JUL_AR_TYPE, JUL_CMP_UPD_INV, JUL_CMP_UPD_PP, AUG_LINE_NET, AUG_COMM_AMT, AUG_REBATE_AMT, AUG_DISCOUNT, AUG_VENDOR_TAX, AUG_STATE_TAX,
						AUG_COUNTY_TAX, AUG_CITY_TAX, AUG_SPOTS, AUG_BILLING_AMT, AUG_AR_INV_NBR, AUG_AR_INV_SEQ, AUG_AR_TYPE, AUG_CMP_UPD_INV, AUG_CMP_UPD_PP, SEP_LINE_NET, SEP_COMM_AMT, SEP_REBATE_AMT, SEP_DISCOUNT, SEP_VENDOR_TAX,
						SEP_STATE_TAX, SEP_COUNTY_TAX, SEP_CITY_TAX, SEP_SPOTS, SEP_BILLING_AMT, SEP_AR_INV_NBR, SEP_AR_INV_SEQ, SEP_AR_TYPE, SEP_CMP_UPD_INV, SEP_CMP_UPD_PP, OCT_LINE_NET, OCT_COMM_AMT, OCT_REBATE_AMT, OCT_DISCOUNT,
						OCT_VENDOR_TAX, OCT_STATE_TAX, OCT_COUNTY_TAX, OCT_CITY_TAX, OCT_SPOTS, OCT_BILLING_AMT, OCT_AR_INV_NBR, OCT_AR_INV_SEQ, OCT_AR_TYPE, OCT_CMP_UPD_INV, OCT_CMP_UPD_PP, NOV_LINE_NET, NOV_COMM_AMT, NOV_REBATE_AMT,
						NOV_DISCOUNT, NOV_VENDOR_TAX, NOV_STATE_TAX, NOV_COUNTY_TAX, NOV_CITY_TAX, NOV_SPOTS, NOV_BILLING_AMT, NOV_AR_INV_NBR, NOV_AR_INV_SEQ, NOV_AR_TYPE, NOV_CMP_UPD_INV, NOV_CMP_UPD_PP, DEC_LINE_NET, DEC_COMM_AMT,
						DEC_REBATE_AMT, DEC_DISCOUNT, DEC_VENDOR_TAX, DEC_STATE_TAX, DEC_COUNTY_TAX, DEC_CITY_TAX, DEC_SPOTS, DEC_BILLING_AMT, DEC_AR_INV_NBR, DEC_AR_INV_SEQ, DEC_AR_TYPE, DEC_CMP_UPD_INV, DEC_CMP_UPD_PP, AR_INV_NBR,
						AR_INV_SEQ, AR_TYPE )
						SELECT
						ORDER_NBR, LINE_NBR, REV_NBR, BRDCAST_YEAR, BILL_MONTHS, CANCELLED_DATE, CANCELLED_BY, -COUNTY_TAX_NC, -CITY_TAX_NC, -CITY_TAX, -COUNTY_TAX, -COMM_AMT, CLOSE_DATE, DELETE_FLAG,
						DELETE_DATE, DELETED_BY, END_TIME, EXT_CLOSE_DATE, EXT_MATL_DATE, -EXT_NET_AMT, GROSS_RATE, LINK_ID, LINK_DETID, [LENGTH], LINE_CANCELLED, -LINE_TOTAL, -LINE_NET_DISC, JOB_NUMBER, JOB_COMPONENT_NBR,
						MATL_CLOSE_DATE, -NETCHARGES, NET_RATE, PROGRAMMING, PRINTED, REMARKS, RATE, RATE_CARD, RATE_DESC, -REBATE_AMT,
						(SELECT MAX(SEQ_NBR) + 1 FROM dbo.RADIO_DETAIL1 WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year),
						START_TIME, -STATE_TAX, -STATE_TAX_NC, -TOTAL_SPOTS, TAG, -VENDOR_TAX, -VENDOR_TAX_NC,
						-JAN_LINE_NET, -JAN_COMM_AMT, -JAN_REBATE_AMT, -JAN_DISCOUNT, -JAN_VENDOR_TAX, -JAN_STATE_TAX, -JAN_COUNTY_TAX, -JAN_CITY_TAX, -JAN_SPOTS, -JAN_BILLING_AMT, JAN_AR_INV_NBR, JAN_AR_INV_SEQ,
						CASE WHEN JAN_AR_TYPE ='IN' AND JAN_AR_INV_NBR = @invoice_number THEN 'VO' ELSE JAN_AR_TYPE END,
						JAN_CMP_UPD_INV, JAN_CMP_UPD_PP,
						-FEB_LINE_NET, -FEB_COMM_AMT, -FEB_REBATE_AMT, -FEB_DISCOUNT, -FEB_VENDOR_TAX, -FEB_STATE_TAX, -FEB_COUNTY_TAX, -FEB_CITY_TAX, -FEB_SPOTS, -FEB_BILLING_AMT, FEB_AR_INV_NBR, FEB_AR_INV_SEQ,
						CASE WHEN FEB_AR_TYPE ='IN' AND FEB_AR_INV_NBR = @invoice_number THEN 'VO' ELSE FEB_AR_TYPE END,
						FEB_CMP_UPD_INV, FEB_CMP_UPD_PP,
						-MAR_LINE_NET, -MAR_COMM_AMT, -MAR_REBATE_AMT, -MAR_DISCOUNT, -MAR_VENDOR_TAX, -MAR_STATE_TAX, -MAR_COUNTY_TAX, -MAR_CITY_TAX, -MAR_SPOTS, -MAR_BILLING_AMT, MAR_AR_INV_NBR, MAR_AR_INV_SEQ,
						CASE WHEN MAR_AR_TYPE ='IN' AND MAR_AR_INV_NBR = @invoice_number THEN 'VO' ELSE MAR_AR_TYPE END,
						MAR_CMP_UPD_INV, MAR_CMP_UPD_PP, 
						-APR_LINE_NET, -APR_COMM_AMT, -APR_REBATE_AMT, -APR_DISCOUNT, -APR_VENDOR_TAX, -APR_STATE_TAX, -APR_COUNTY_TAX, -APR_CITY_TAX, -APR_SPOTS, -APR_BILLING_AMT, APR_AR_INV_NBR, APR_AR_INV_SEQ,
						CASE WHEN APR_AR_TYPE ='IN' AND APR_AR_INV_NBR = @invoice_number THEN 'VO' ELSE APR_AR_TYPE END,
						APR_CMP_UPD_INV, APR_CMP_UPD_PP,
						-MAY_LINE_NET, -MAY_COMM_AMT, -MAY_REBATE_AMT, -MAY_DISCOUNT, -MAY_VENDOR_TAX, -MAY_STATE_TAX, -MAY_COUNTY_TAX, -MAY_CITY_TAX, -MAY_SPOTS, -MAY_BILLING_AMT, MAY_AR_INV_NBR, MAY_AR_INV_SEQ,
						CASE WHEN MAY_AR_TYPE ='IN' AND MAY_AR_INV_NBR = @invoice_number THEN 'VO' ELSE MAY_AR_TYPE END,
						MAY_CMP_UPD_INV, MAY_CMP_UPD_PP,
						-JUN_LINE_NET, -JUN_COMM_AMT, -JUN_REBATE_AMT, -JUN_DISCOUNT, -JUN_VENDOR_TAX, -JUN_STATE_TAX, -JUN_COUNTY_TAX, -JUN_CITY_TAX, -JUN_SPOTS, -JUN_BILLING_AMT, JUN_AR_INV_NBR, JUN_AR_INV_SEQ,
						CASE WHEN JUN_AR_TYPE ='IN' AND JUN_AR_INV_NBR = @invoice_number THEN 'VO' ELSE JUN_AR_TYPE END,
						JUN_CMP_UPD_INV, JUN_CMP_UPD_PP,
						-JUL_LINE_NET, -JUL_COMM_AMT, -JUL_REBATE_AMT, -JUL_DISCOUNT, -JUL_VENDOR_TAX, -JUL_STATE_TAX, -JUL_COUNTY_TAX, -JUL_CITY_TAX, -JUL_SPOTS, -JUL_BILLING_AMT, JUL_AR_INV_NBR, JUL_AR_INV_SEQ,
						CASE WHEN JUL_AR_TYPE ='IN' AND JUL_AR_INV_NBR= @invoice_number THEN 'VO' ELSE JUL_AR_TYPE END,
						JUL_CMP_UPD_INV, JUL_CMP_UPD_PP,
						-AUG_LINE_NET, -AUG_COMM_AMT, -AUG_REBATE_AMT, -AUG_DISCOUNT, -AUG_VENDOR_TAX, -AUG_STATE_TAX, -AUG_COUNTY_TAX, -AUG_CITY_TAX, -AUG_SPOTS, -AUG_BILLING_AMT, AUG_AR_INV_NBR, AUG_AR_INV_SEQ,
						CASE WHEN AUG_AR_TYPE ='IN' AND AUG_AR_INV_NBR = @invoice_number THEN 'VO' ELSE AUG_AR_TYPE END,
						AUG_CMP_UPD_INV, AUG_CMP_UPD_PP,
						-SEP_LINE_NET, -SEP_COMM_AMT, -SEP_REBATE_AMT, -SEP_DISCOUNT, -SEP_VENDOR_TAX, -SEP_STATE_TAX, -SEP_COUNTY_TAX, -SEP_CITY_TAX, -SEP_SPOTS, -SEP_BILLING_AMT, SEP_AR_INV_NBR, SEP_AR_INV_SEQ,
						CASE WHEN SEP_AR_TYPE ='IN' AND SEP_AR_INV_NBR = @invoice_number THEN 'VO' ELSE SEP_AR_TYPE END,
						SEP_CMP_UPD_INV, SEP_CMP_UPD_PP,
						-OCT_LINE_NET, -OCT_COMM_AMT, -OCT_REBATE_AMT, -OCT_DISCOUNT, -OCT_VENDOR_TAX, -OCT_STATE_TAX, -OCT_COUNTY_TAX, -OCT_CITY_TAX, -OCT_SPOTS, -OCT_BILLING_AMT, OCT_AR_INV_NBR, OCT_AR_INV_SEQ,
						CASE WHEN OCT_AR_TYPE ='IN' AND OCT_AR_INV_NBR = @invoice_number THEN 'VO' ELSE OCT_AR_TYPE END,
						OCT_CMP_UPD_INV, OCT_CMP_UPD_PP,
						-NOV_LINE_NET, -NOV_COMM_AMT, -NOV_REBATE_AMT, -NOV_DISCOUNT, -NOV_VENDOR_TAX, -NOV_STATE_TAX, -NOV_COUNTY_TAX, -NOV_CITY_TAX, -NOV_SPOTS, -NOV_BILLING_AMT, NOV_AR_INV_NBR, NOV_AR_INV_SEQ,
						CASE WHEN NOV_AR_TYPE ='IN' AND NOV_AR_INV_NBR = @invoice_number THEN 'VO' ELSE NOV_AR_TYPE END,
						NOV_CMP_UPD_INV, NOV_CMP_UPD_PP,
						-DEC_LINE_NET, -DEC_COMM_AMT, -DEC_REBATE_AMT, -DEC_DISCOUNT, -DEC_VENDOR_TAX, -DEC_STATE_TAX, -DEC_COUNTY_TAX, -DEC_CITY_TAX, -DEC_SPOTS, -DEC_BILLING_AMT, DEC_AR_INV_NBR, DEC_AR_INV_SEQ,
						CASE WHEN DEC_AR_TYPE ='IN' AND DEC_AR_INV_NBR = @invoice_number THEN 'VO' ELSE DEC_AR_TYPE END,
						DEC_CMP_UPD_INV, DEC_CMP_UPD_PP, AR_INV_NBR, AR_INV_SEQ, CASE WHEN AR_TYPE = 'IN' AND AR_INV_NBR = @invoice_number THEN 'VO' ELSE AR_TYPE END
						FROM dbo.RADIO_DETAIL1
						WHERE
							ORDER_NBR = @order_nbr
						AND	LINE_NBR = @line_nbr
						AND	REV_NBR = @rev_nbr
						AND SEQ_NBR = @seq_nbr
						AND BRDCAST_YEAR = @brdcast_year
						
						INSERT  INTO dbo.RADIO_SPOTS ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
						BRDCAST_YEAR, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, WEEKS, SPOTS_WK1, SPOTS_WK2, SPOTS_WK3, SPOTS_WK4, SPOTS_WK5, SPOTS_WK6, SPOTS_WK7, SPOTS_WK8, SPOTS_WK9, SPOTS_WK10,
						SPOTS_WK11, SPOTS_WK12, SPOTS_WK13, SPOTS_WK14, SPOTS_WK15, SPOTS_WK16, SPOTS_WK17, SPOTS_WK18, SPOTS_WK19, SPOTS_WK20, SPOTS_WK21,	SPOTS_WK22, SPOTS_WK23, SPOTS_WK24, SPOTS_WK25, SPOTS_WK26,
						SPOTS_WK27, SPOTS_WK28, SPOTS_WK29, SPOTS_WK30, SPOTS_WK31, SPOTS_WK32, SPOTS_WK33, SPOTS_WK34, SPOTS_WK35, SPOTS_WK36, SPOTS_WK37, SPOTS_WK38, SPOTS_WK39, SPOTS_WK40, SPOTS_WK41, SPOTS_WK42,
						SPOTS_WK43, SPOTS_WK44, SPOTS_WK45, SPOTS_WK46, SPOTS_WK47, SPOTS_WK48, SPOTS_WK49, SPOTS_WK50, SPOTS_WK51, SPOTS_WK52, SPOTS_WK53 )
						SELECT
						ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.RADIO_SPOTS WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year),
						@brdcast_year, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, -WEEKS, -SPOTS_WK1, -SPOTS_WK2, -SPOTS_WK3, -SPOTS_WK4, -SPOTS_WK5, -SPOTS_WK6, -SPOTS_WK7, -SPOTS_WK8, -SPOTS_WK9, -SPOTS_WK10,
						-SPOTS_WK11, -SPOTS_WK12, -SPOTS_WK13, -SPOTS_WK14, -SPOTS_WK15, -SPOTS_WK16, -SPOTS_WK17, -SPOTS_WK18, -SPOTS_WK19, -SPOTS_WK20, -SPOTS_WK21, -SPOTS_WK22, -SPOTS_WK23, -SPOTS_WK24, -SPOTS_WK25, -SPOTS_WK26,
						-SPOTS_WK27, -SPOTS_WK28, -SPOTS_WK29, -SPOTS_WK30, -SPOTS_WK31, -SPOTS_WK32, -SPOTS_WK33, -SPOTS_WK34, -SPOTS_WK35, -SPOTS_WK36, -SPOTS_WK37, -SPOTS_WK38, -SPOTS_WK39, -SPOTS_WK40, -SPOTS_WK41, -SPOTS_WK42,
						-SPOTS_WK43, -SPOTS_WK44, -SPOTS_WK45, -SPOTS_WK46, -SPOTS_WK47, -SPOTS_WK48, -SPOTS_WK49, -SPOTS_WK50, -SPOTS_WK51, -SPOTS_WK52, -SPOTS_WK53
						FROM dbo.RADIO_SPOTS 
						WHERE ORDER_NBR = @order_nbr
						AND LINE_NBR = @line_nbr 
						AND REV_NBR = @rev_nbr 
						AND SEQ_NBR = @seq_nbr 
						AND BRDCAST_YEAR = @brdcast_year 

						INSERT INTO dbo.RADIO_DETAIL2 ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
						BRDCAST_YEAR, APPLYLN1, APPLYLN2, APPLYLN3, APPLYLN4, APPLYLN5, APPLYLN6, APPLYLN7, APPLYLN8, DISC1, DISC2, DISC3, DISC4, DISC5,
						DISC6, DISC7, DISC8, DISC1DESC, DISC2DESC, DISC3DESC, DISC4DESC, DISC5DESC, DISC6DESC, DISC7DESC, DISC8DESC, NCDESC1, NCDESC2, NCDESC3, NCDESC4, NCDESC5, NCDESC6, NETCHARGE1, NETCHARGE2, NETCHARGE3,
						NETCHARGE4, NETCHARGE5, NETCHARGE6, CLOSE_INFO, HOUSE_COMMENT, MATL_NOTES, MISC_INFO, ORDER_COMMENT, POSITION_INFO, RATE_INFO )
						SELECT
						ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.RADIO_DETAIL2 WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year),
						BRDCAST_YEAR, APPLYLN1, APPLYLN2, APPLYLN3, APPLYLN4, APPLYLN5, APPLYLN6, APPLYLN7, APPLYLN8, -DISC1, -DISC2, -DISC3, -DISC4, -DISC5,
						-DISC6, -DISC7, -DISC8, DISC1DESC, DISC2DESC, DISC3DESC, DISC4DESC, DISC5DESC, DISC6DESC, DISC7DESC, DISC8DESC, NCDESC1, NCDESC2, NCDESC3, NCDESC4, NCDESC5, NCDESC6, -NETCHARGE1, -NETCHARGE2, -NETCHARGE3,
						-NETCHARGE4, -NETCHARGE5, -NETCHARGE6, CLOSE_INFO, HOUSE_COMMENT, MATL_NOTES, MISC_INFO, ORDER_COMMENT, POSITION_INFO, RATE_INFO
						FROM dbo.RADIO_DETAIL2
						WHERE ORDER_NBR = @order_nbr
						AND LINE_NBR = @line_nbr 
						AND REV_NBR = @rev_nbr 
						AND SEQ_NBR = @seq_nbr 
						AND BRDCAST_YEAR = @brdcast_year 
						
						INSERT INTO dbo.RADIO_GL ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR, BRDCAST_YEAR,
						JAN_GLACODE_CITY, JAN_GLACODE_COS, JAN_GLACODE_COUNTY, JAN_GLACODE_SALES, JAN_GLACODE_STATE, JAN_GLACODE_WIP, JAN_GLESEQ_CITY, JAN_GLESEQ_COS, JAN_GLESEQ_COUNTY, JAN_GLESEQ_SALES, JAN_GLESEQ_STATE,
						JAN_GLESEQ_WIP, JAN_GLEXACT, JAN_GLEXACT_DEF, FEB_GLACODE_CITY, FEB_GLACODE_COS, FEB_GLACODE_COUNTY, FEB_GLACODE_SALES, FEB_GLACODE_STATE, FEB_GLACODE_WIP, FEB_GLESEQ_CITY, FEB_GLESEQ_COS,
						FEB_GLESEQ_COUNTY, FEB_GLESEQ_SALES, FEB_GLESEQ_STATE, FEB_GLESEQ_WIP, FEB_GLEXACT, FEB_GLEXACT_DEF, MAR_GLACODE_CITY, MAR_GLACODE_COS, MAR_GLACODE_COUNTY, MAR_GLACODE_SALES, MAR_GLACODE_STATE,
						MAR_GLACODE_WIP, MAR_GLESEQ_CITY, MAR_GLESEQ_COS, MAR_GLESEQ_COUNTY, MAR_GLESEQ_SALES, MAR_GLESEQ_STATE, MAR_GLESEQ_WIP, MAR_GLEXACT, MAR_GLEXACT_DEF, APR_GLACODE_CITY, APR_GLACODE_COS, APR_GLACODE_COUNTY,
						APR_GLACODE_SALES, APR_GLACODE_STATE, APR_GLACODE_WIP, APR_GLESEQ_CITY, APR_GLESEQ_COS, APR_GLESEQ_COUNTY, APR_GLESEQ_SALES, APR_GLESEQ_STATE, APR_GLESEQ_WIP, APR_GLEXACT, APR_GLEXACT_DEF, MAY_GLACODE_CITY,
						MAY_GLACODE_COS, MAY_GLACODE_COUNTY, MAY_GLACODE_SALES, MAY_GLACODE_STATE, MAY_GLACODE_WIP, MAY_GLESEQ_CITY, MAY_GLESEQ_COS, MAY_GLESEQ_COUNTY, MAY_GLESEQ_SALES, MAY_GLESEQ_STATE, MAY_GLESEQ_WIP,
						MAY_GLEXACT, MAY_GLEXACT_DEF, JUN_GLACODE_CITY, JUN_GLACODE_COS, JUN_GLACODE_COUNTY, JUN_GLACODE_SALES, JUN_GLACODE_STATE, JUN_GLACODE_WIP, JUN_GLESEQ_CITY, JUN_GLESEQ_COS, JUN_GLESEQ_COUNTY,
						JUN_GLESEQ_SALES, JUN_GLESEQ_STATE, JUN_GLESEQ_WIP, JUN_GLEXACT, JUN_GLEXACT_DEF, JUL_GLACODE_CITY, JUL_GLACODE_COS, JUL_GLACODE_COUNTY, JUL_GLACODE_SALES, JUL_GLACODE_STATE, JUL_GLACODE_WIP,
						JUL_GLESEQ_CITY, JUL_GLESEQ_COS, JUL_GLESEQ_COUNTY, JUL_GLESEQ_SALES, JUL_GLESEQ_STATE, JUL_GLESEQ_WIP, JUL_GLEXACT, JUL_GLEXACT_DEF, AUG_GLACODE_CITY, AUG_GLACODE_COS, AUG_GLACODE_COUNTY,
						AUG_GLACODE_SALES, AUG_GLACODE_STATE, AUG_GLACODE_WIP, AUG_GLESEQ_CITY, AUG_GLESEQ_COS, AUG_GLESEQ_COUNTY, AUG_GLESEQ_SALES, AUG_GLESEQ_STATE, AUG_GLESEQ_WIP, AUG_GLEXACT, AUG_GLEXACT_DEF, SEP_GLACODE_CITY,
						SEP_GLACODE_COS, SEP_GLACODE_COUNTY, SEP_GLACODE_SALES, SEP_GLACODE_STATE, SEP_GLACODE_WIP, SEP_GLESEQ_CITY, SEP_GLESEQ_COS, SEP_GLESEQ_COUNTY, SEP_GLESEQ_SALES, SEP_GLESEQ_STATE, SEP_GLESEQ_WIP,
						SEP_GLEXACT, SEP_GLEXACT_DEF, OCT_GLACODE_CITY, OCT_GLACODE_COS, OCT_GLACODE_COUNTY, OCT_GLACODE_SALES, OCT_GLACODE_STATE, OCT_GLACODE_WIP, OCT_GLESEQ_CITY, OCT_GLESEQ_COS, OCT_GLESEQ_COUNTY,
						OCT_GLESEQ_SALES, OCT_GLESEQ_STATE, OCT_GLESEQ_WIP, OCT_GLEXACT, OCT_GLEXACT_DEF, NOV_GLACODE_CITY, NOV_GLACODE_COS, NOV_GLACODE_COUNTY, NOV_GLACODE_SALES, NOV_GLACODE_STATE, NOV_GLACODE_WIP,
						NOV_GLESEQ_CITY, NOV_GLESEQ_COS, NOV_GLESEQ_COUNTY, NOV_GLESEQ_SALES, NOV_GLESEQ_STATE, NOV_GLESEQ_WIP, NOV_GLEXACT, NOV_GLEXACT_DEF, DEC_GLACODE_CITY, DEC_GLACODE_COS, DEC_GLACODE_COUNTY,
						DEC_GLACODE_SALES, DEC_GLACODE_STATE, DEC_GLACODE_WIP, DEC_GLESEQ_CITY, DEC_GLESEQ_COS, DEC_GLESEQ_COUNTY, DEC_GLESEQ_SALES, DEC_GLESEQ_STATE, DEC_GLESEQ_WIP, DEC_GLEXACT, DEC_GLEXACT_DEF, NC_GLEXACT,
						NC_GLACODE_SALES, NC_GLACODE_COS, NC_GLACODE_WIP, NC_GLACODE_CITY, NC_GLACODE_COUNTY, NC_GLACODE_STATE, NC_GLESEQ_SALES, NC_GLESEQ_COS, NC_GLESEQ_WIP, NC_GLESEQ_CITY, NC_GLESEQ_COUNTY, NC_GLESEQ_STATE )
						SELECT
						ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.RADIO_GL WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year), BRDCAST_YEAR,
						JAN_GLACODE_CITY, JAN_GLACODE_COS, JAN_GLACODE_COUNTY, JAN_GLACODE_SALES, JAN_GLACODE_STATE, JAN_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL,
						NULL, CASE WHEN JAN_GLEXACT IS NOT NULL THEN @transaction_id END, JAN_GLEXACT_DEF, FEB_GLACODE_CITY, FEB_GLACODE_COS, FEB_GLACODE_COUNTY, FEB_GLACODE_SALES, FEB_GLACODE_STATE, FEB_GLACODE_WIP, NULL, NULL,
						NULL, NULL, NULL, NULL, CASE WHEN FEB_GLEXACT IS NOT NULL THEN @transaction_id END, FEB_GLEXACT_DEF, MAR_GLACODE_CITY, MAR_GLACODE_COS, MAR_GLACODE_COUNTY, MAR_GLACODE_SALES, MAR_GLACODE_STATE,
						MAR_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL, NULL, CASE WHEN MAR_GLEXACT IS NOT NULL THEN @transaction_id END, MAR_GLEXACT_DEF, APR_GLACODE_CITY, APR_GLACODE_COS, APR_GLACODE_COUNTY,
						APR_GLACODE_SALES, APR_GLACODE_STATE, APR_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL, NULL, CASE WHEN APR_GLEXACT IS NOT NULL THEN @transaction_id END, APR_GLEXACT_DEF, MAY_GLACODE_CITY,
						MAY_GLACODE_COS, MAY_GLACODE_COUNTY, MAY_GLACODE_SALES, MAY_GLACODE_STATE, MAY_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL, NULL,
						CASE WHEN MAY_GLEXACT IS NOT NULL THEN @transaction_id END, MAY_GLEXACT_DEF, JUN_GLACODE_CITY, JUN_GLACODE_COS, JUN_GLACODE_COUNTY, JUN_GLACODE_SALES, JUN_GLACODE_STATE, JUN_GLACODE_WIP, NULL, NULL, NULL,
						NULL, NULL, NULL, CASE WHEN JUN_GLEXACT IS NOT NULL THEN @transaction_id END, JUN_GLEXACT_DEF, JUL_GLACODE_CITY, JUL_GLACODE_COS, JUL_GLACODE_COUNTY, JUL_GLACODE_SALES, JUL_GLACODE_STATE, JUL_GLACODE_WIP,
						NULL, NULL, NULL, NULL, NULL, NULL, CASE WHEN JUL_GLEXACT IS NOT NULL THEN @transaction_id END, JUL_GLEXACT_DEF, AUG_GLACODE_CITY, AUG_GLACODE_COS, AUG_GLACODE_COUNTY,
						AUG_GLACODE_SALES, AUG_GLACODE_STATE, AUG_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL, NULL, CASE WHEN AUG_GLEXACT IS NOT NULL THEN @transaction_id END, AUG_GLEXACT_DEF, SEP_GLACODE_CITY,
						SEP_GLACODE_COS, SEP_GLACODE_COUNTY, SEP_GLACODE_SALES, SEP_GLACODE_STATE, SEP_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL, NULL,
						CASE WHEN SEP_GLEXACT IS NOT NULL THEN @transaction_id END, SEP_GLEXACT_DEF, OCT_GLACODE_CITY, OCT_GLACODE_COS, OCT_GLACODE_COUNTY, OCT_GLACODE_SALES, OCT_GLACODE_STATE, OCT_GLACODE_WIP, NULL, NULL, NULL,
						NULL, NULL, NULL, CASE WHEN OCT_GLEXACT IS NOT NULL THEN @transaction_id END, OCT_GLEXACT_DEF, NOV_GLACODE_CITY, NOV_GLACODE_COS, NOV_GLACODE_COUNTY, NOV_GLACODE_SALES, NOV_GLACODE_STATE, NOV_GLACODE_WIP,
						NULL, NULL, NULL, NULL, NULL, NULL, CASE WHEN NOV_GLEXACT IS NOT NULL THEN @transaction_id END, NOV_GLEXACT_DEF, DEC_GLACODE_CITY, DEC_GLACODE_COS, DEC_GLACODE_COUNTY,
						DEC_GLACODE_SALES, DEC_GLACODE_STATE, DEC_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL, NULL, CASE WHEN DEC_GLEXACT IS NOT NULL THEN @transaction_id END, DEC_GLEXACT_DEF, CASE WHEN NC_GLEXACT IS NOT NULL THEN @transaction_id END,
						NC_GLACODE_SALES, NC_GLACODE_COS, NC_GLACODE_WIP, NC_GLACODE_CITY, NC_GLACODE_COUNTY, NC_GLACODE_STATE, NULL, NULL, NULL, NULL, NULL, NULL
						FROM dbo.RADIO_GL
						WHERE ORDER_NBR = @order_nbr
						AND LINE_NBR = @line_nbr 
						AND REV_NBR = @rev_nbr 
						AND SEQ_NBR = @seq_nbr 
						AND BRDCAST_YEAR = @brdcast_year 
						
						INSERT  INTO dbo.RADIO_DETAIL1 ( ORDER_NBR, LINE_NBR, REV_NBR, BRDCAST_YEAR, BILL_MONTHS, CANCELLED_DATE, CANCELLED_BY, COUNTY_TAX_NC, CITY_TAX_NC, CITY_TAX, COUNTY_TAX, COMM_AMT, CLOSE_DATE, DELETE_FLAG,
						DELETE_DATE, DELETED_BY, END_TIME, EXT_CLOSE_DATE, EXT_MATL_DATE, EXT_NET_AMT, GROSS_RATE, LINK_ID, LINK_DETID, [LENGTH], LINE_CANCELLED, LINE_TOTAL, LINE_NET_DISC, JOB_NUMBER, JOB_COMPONENT_NBR,
						MATL_CLOSE_DATE, NETCHARGES, NET_RATE, PROGRAMMING, PRINTED, REMARKS, RATE, RATE_CARD, RATE_DESC, REBATE_AMT,
						SEQ_NBR,
						START_TIME, STATE_TAX, STATE_TAX_NC, TOTAL_SPOTS, TAG, VENDOR_TAX, VENDOR_TAX_NC,
						JAN_LINE_NET, JAN_COMM_AMT, JAN_REBATE_AMT, JAN_DISCOUNT, JAN_VENDOR_TAX, JAN_STATE_TAX, JAN_COUNTY_TAX, JAN_CITY_TAX, JAN_SPOTS, JAN_BILLING_AMT, JAN_AR_INV_NBR, JAN_AR_INV_SEQ, JAN_AR_TYPE, JAN_CMP_UPD_INV,
						JAN_CMP_UPD_PP, FEB_LINE_NET, FEB_COMM_AMT, FEB_REBATE_AMT, FEB_DISCOUNT, FEB_VENDOR_TAX, FEB_STATE_TAX, FEB_COUNTY_TAX, FEB_CITY_TAX, FEB_SPOTS, FEB_BILLING_AMT, FEB_AR_INV_NBR, FEB_AR_INV_SEQ, FEB_AR_TYPE,
						FEB_CMP_UPD_INV, FEB_CMP_UPD_PP, MAR_LINE_NET, MAR_COMM_AMT, MAR_REBATE_AMT, MAR_DISCOUNT, MAR_VENDOR_TAX, MAR_STATE_TAX, MAR_COUNTY_TAX, MAR_CITY_TAX, MAR_SPOTS, MAR_BILLING_AMT, MAR_AR_INV_NBR, MAR_AR_INV_SEQ,
						MAR_AR_TYPE, MAR_CMP_UPD_INV, MAR_CMP_UPD_PP, APR_LINE_NET, APR_COMM_AMT, APR_REBATE_AMT, APR_DISCOUNT, APR_VENDOR_TAX, APR_STATE_TAX, APR_COUNTY_TAX, APR_CITY_TAX, APR_SPOTS, APR_BILLING_AMT, APR_AR_INV_NBR,
						APR_AR_INV_SEQ, APR_AR_TYPE, APR_CMP_UPD_INV, APR_CMP_UPD_PP, MAY_LINE_NET, MAY_COMM_AMT, MAY_REBATE_AMT, MAY_DISCOUNT, MAY_VENDOR_TAX, MAY_STATE_TAX, MAY_COUNTY_TAX, MAY_CITY_TAX, MAY_SPOTS, MAY_BILLING_AMT,
						MAY_AR_INV_NBR, MAY_AR_INV_SEQ, MAY_AR_TYPE, MAY_CMP_UPD_INV, MAY_CMP_UPD_PP, JUN_LINE_NET, JUN_COMM_AMT, JUN_REBATE_AMT, JUN_DISCOUNT, JUN_VENDOR_TAX, JUN_STATE_TAX, JUN_COUNTY_TAX, JUN_CITY_TAX, JUN_SPOTS,
						JUN_BILLING_AMT, JUN_AR_INV_NBR, JUN_AR_INV_SEQ, JUN_AR_TYPE, JUN_CMP_UPD_INV, JUN_CMP_UPD_PP, JUL_LINE_NET, JUL_COMM_AMT, JUL_REBATE_AMT, JUL_DISCOUNT, JUL_VENDOR_TAX, JUL_STATE_TAX, JUL_COUNTY_TAX,
						JUL_CITY_TAX, JUL_SPOTS, JUL_BILLING_AMT, JUL_AR_INV_NBR, JUL_AR_INV_SEQ, JUL_AR_TYPE, JUL_CMP_UPD_INV, JUL_CMP_UPD_PP, AUG_LINE_NET, AUG_COMM_AMT, AUG_REBATE_AMT, AUG_DISCOUNT, AUG_VENDOR_TAX, AUG_STATE_TAX,
						AUG_COUNTY_TAX, AUG_CITY_TAX, AUG_SPOTS, AUG_BILLING_AMT, AUG_AR_INV_NBR, AUG_AR_INV_SEQ, AUG_AR_TYPE, AUG_CMP_UPD_INV, AUG_CMP_UPD_PP, SEP_LINE_NET, SEP_COMM_AMT, SEP_REBATE_AMT, SEP_DISCOUNT, SEP_VENDOR_TAX,
						SEP_STATE_TAX, SEP_COUNTY_TAX, SEP_CITY_TAX, SEP_SPOTS, SEP_BILLING_AMT, SEP_AR_INV_NBR, SEP_AR_INV_SEQ, SEP_AR_TYPE, SEP_CMP_UPD_INV, SEP_CMP_UPD_PP, OCT_LINE_NET, OCT_COMM_AMT, OCT_REBATE_AMT, OCT_DISCOUNT,
						OCT_VENDOR_TAX, OCT_STATE_TAX, OCT_COUNTY_TAX, OCT_CITY_TAX, OCT_SPOTS, OCT_BILLING_AMT, OCT_AR_INV_NBR, OCT_AR_INV_SEQ, OCT_AR_TYPE, OCT_CMP_UPD_INV, OCT_CMP_UPD_PP, NOV_LINE_NET, NOV_COMM_AMT, NOV_REBATE_AMT,
						NOV_DISCOUNT, NOV_VENDOR_TAX, NOV_STATE_TAX, NOV_COUNTY_TAX, NOV_CITY_TAX, NOV_SPOTS, NOV_BILLING_AMT, NOV_AR_INV_NBR, NOV_AR_INV_SEQ, NOV_AR_TYPE, NOV_CMP_UPD_INV, NOV_CMP_UPD_PP, DEC_LINE_NET, DEC_COMM_AMT,
						DEC_REBATE_AMT, DEC_DISCOUNT, DEC_VENDOR_TAX, DEC_STATE_TAX, DEC_COUNTY_TAX, DEC_CITY_TAX, DEC_SPOTS, DEC_BILLING_AMT, DEC_AR_INV_NBR, DEC_AR_INV_SEQ, DEC_AR_TYPE, DEC_CMP_UPD_INV, DEC_CMP_UPD_PP, AR_INV_NBR,
						AR_INV_SEQ, AR_TYPE )
						SELECT
						ORDER_NBR, LINE_NBR, REV_NBR, BRDCAST_YEAR, NULL, CANCELLED_DATE, CANCELLED_BY, COUNTY_TAX_NC, CITY_TAX_NC, CITY_TAX, COUNTY_TAX, COMM_AMT, CLOSE_DATE, DELETE_FLAG,
						DELETE_DATE, DELETED_BY, END_TIME, EXT_CLOSE_DATE, EXT_MATL_DATE, EXT_NET_AMT, GROSS_RATE, LINK_ID, LINK_DETID, [LENGTH], LINE_CANCELLED, LINE_TOTAL, LINE_NET_DISC, JOB_NUMBER, JOB_COMPONENT_NBR,
						MATL_CLOSE_DATE, NETCHARGES, NET_RATE, PROGRAMMING, PRINTED, REMARKS, RATE, RATE_CARD, RATE_DESC, REBATE_AMT,
						(SELECT MAX(SEQ_NBR) + 1 FROM dbo.RADIO_DETAIL1 WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year),
						START_TIME, STATE_TAX, STATE_TAX_NC, TOTAL_SPOTS, TAG, VENDOR_TAX, VENDOR_TAX_NC,
						JAN_LINE_NET, JAN_COMM_AMT, JAN_REBATE_AMT, JAN_DISCOUNT, JAN_VENDOR_TAX, JAN_STATE_TAX, JAN_COUNTY_TAX, JAN_CITY_TAX, JAN_SPOTS, JAN_BILLING_AMT,
						CASE WHEN JAN_AR_INV_NBR = @invoice_number THEN NULL ELSE JAN_AR_INV_NBR END, CASE WHEN JAN_AR_INV_NBR = @invoice_number THEN NULL ELSE JAN_AR_INV_SEQ END,
						CASE WHEN JAN_AR_INV_NBR = @invoice_number THEN NULL ELSE JAN_AR_TYPE END,
						JAN_CMP_UPD_INV, JAN_CMP_UPD_PP,
						FEB_LINE_NET, FEB_COMM_AMT, FEB_REBATE_AMT, FEB_DISCOUNT, FEB_VENDOR_TAX, FEB_STATE_TAX, FEB_COUNTY_TAX, FEB_CITY_TAX, FEB_SPOTS, FEB_BILLING_AMT,
						CASE WHEN FEB_AR_INV_NBR = @invoice_number THEN NULL ELSE FEB_AR_INV_NBR END, CASE WHEN FEB_AR_INV_NBR = @invoice_number THEN NULL ELSE FEB_AR_INV_SEQ END,
						CASE WHEN FEB_AR_INV_NBR = @invoice_number THEN NULL ELSE FEB_AR_TYPE END,
						FEB_CMP_UPD_INV, FEB_CMP_UPD_PP,
						MAR_LINE_NET, MAR_COMM_AMT, MAR_REBATE_AMT, MAR_DISCOUNT, MAR_VENDOR_TAX, MAR_STATE_TAX, MAR_COUNTY_TAX, MAR_CITY_TAX, MAR_SPOTS, MAR_BILLING_AMT,
						CASE WHEN MAR_AR_INV_NBR = @invoice_number THEN NULL ELSE MAR_AR_INV_NBR END, CASE WHEN MAR_AR_INV_NBR = @invoice_number THEN NULL ELSE MAR_AR_INV_SEQ END,
						CASE WHEN MAR_AR_INV_NBR = @invoice_number THEN NULL ELSE MAR_AR_TYPE END,
						MAR_CMP_UPD_INV, MAR_CMP_UPD_PP, 
						APR_LINE_NET, APR_COMM_AMT, APR_REBATE_AMT, APR_DISCOUNT, APR_VENDOR_TAX, APR_STATE_TAX, APR_COUNTY_TAX, APR_CITY_TAX, APR_SPOTS, APR_BILLING_AMT,
						CASE WHEN APR_AR_INV_NBR = @invoice_number THEN NULL ELSE APR_AR_INV_NBR END, CASE WHEN APR_AR_INV_NBR = @invoice_number THEN NULL ELSE APR_AR_INV_SEQ END,
						CASE WHEN APR_AR_INV_NBR = @invoice_number THEN NULL ELSE APR_AR_TYPE END,
						APR_CMP_UPD_INV, APR_CMP_UPD_PP,
						MAY_LINE_NET, MAY_COMM_AMT, MAY_REBATE_AMT, MAY_DISCOUNT, MAY_VENDOR_TAX, MAY_STATE_TAX, MAY_COUNTY_TAX, MAY_CITY_TAX, MAY_SPOTS, MAY_BILLING_AMT,
						CASE WHEN MAY_AR_INV_NBR = @invoice_number THEN NULL ELSE MAY_AR_INV_NBR END, CASE WHEN MAY_AR_INV_NBR = @invoice_number THEN NULL ELSE MAY_AR_INV_SEQ END,
						CASE WHEN MAY_AR_INV_NBR = @invoice_number THEN NULL ELSE MAY_AR_TYPE END,
						MAY_CMP_UPD_INV, MAY_CMP_UPD_PP,
						JUN_LINE_NET, JUN_COMM_AMT, JUN_REBATE_AMT, JUN_DISCOUNT, JUN_VENDOR_TAX, JUN_STATE_TAX, JUN_COUNTY_TAX, JUN_CITY_TAX, JUN_SPOTS, JUN_BILLING_AMT,
						CASE WHEN JUN_AR_INV_NBR = @invoice_number THEN NULL ELSE JUN_AR_INV_NBR END, CASE WHEN JUN_AR_INV_NBR = @invoice_number THEN NULL ELSE JUN_AR_INV_SEQ END,
						CASE WHEN JUN_AR_INV_NBR = @invoice_number THEN NULL ELSE JUN_AR_TYPE END,
						JUN_CMP_UPD_INV, JUN_CMP_UPD_PP,
						JUL_LINE_NET, JUL_COMM_AMT, JUL_REBATE_AMT, JUL_DISCOUNT, JUL_VENDOR_TAX, JUL_STATE_TAX, JUL_COUNTY_TAX, JUL_CITY_TAX, JUL_SPOTS, JUL_BILLING_AMT,
						CASE WHEN JUL_AR_INV_NBR = @invoice_number THEN NULL ELSE JUL_AR_INV_NBR END, CASE WHEN JUL_AR_INV_NBR = @invoice_number THEN NULL ELSE JUL_AR_INV_SEQ END,
						CASE WHEN JUL_AR_INV_NBR = @invoice_number THEN NULL ELSE JUL_AR_TYPE END,
						JUL_CMP_UPD_INV, JUL_CMP_UPD_PP,
						AUG_LINE_NET, AUG_COMM_AMT, AUG_REBATE_AMT, AUG_DISCOUNT, AUG_VENDOR_TAX, AUG_STATE_TAX, AUG_COUNTY_TAX, AUG_CITY_TAX, AUG_SPOTS, AUG_BILLING_AMT,
						CASE WHEN AUG_AR_INV_NBR = @invoice_number THEN NULL ELSE AUG_AR_INV_NBR END, CASE WHEN AUG_AR_INV_NBR = @invoice_number THEN NULL ELSE AUG_AR_INV_SEQ END,
						CASE WHEN AUG_AR_INV_NBR = @invoice_number THEN NULL ELSE AUG_AR_TYPE END,
						AUG_CMP_UPD_INV, AUG_CMP_UPD_PP,
						SEP_LINE_NET, SEP_COMM_AMT, SEP_REBATE_AMT, SEP_DISCOUNT, SEP_VENDOR_TAX, SEP_STATE_TAX, SEP_COUNTY_TAX, SEP_CITY_TAX, SEP_SPOTS, SEP_BILLING_AMT,
						CASE WHEN SEP_AR_INV_NBR = @invoice_number THEN NULL ELSE SEP_AR_INV_NBR END, CASE WHEN SEP_AR_INV_NBR = @invoice_number THEN NULL ELSE SEP_AR_INV_SEQ END,
						CASE WHEN SEP_AR_INV_NBR = @invoice_number THEN NULL ELSE SEP_AR_TYPE END,
						SEP_CMP_UPD_INV, SEP_CMP_UPD_PP,
						OCT_LINE_NET, OCT_COMM_AMT, OCT_REBATE_AMT, OCT_DISCOUNT, OCT_VENDOR_TAX, OCT_STATE_TAX, OCT_COUNTY_TAX, OCT_CITY_TAX, OCT_SPOTS, OCT_BILLING_AMT,
						CASE WHEN OCT_AR_INV_NBR = @invoice_number THEN NULL ELSE OCT_AR_INV_NBR END, CASE WHEN OCT_AR_INV_NBR = @invoice_number THEN NULL ELSE OCT_AR_INV_SEQ END,
						CASE WHEN OCT_AR_INV_NBR = @invoice_number THEN NULL ELSE OCT_AR_TYPE END,
						OCT_CMP_UPD_INV, OCT_CMP_UPD_PP,
						NOV_LINE_NET, NOV_COMM_AMT, NOV_REBATE_AMT, NOV_DISCOUNT, NOV_VENDOR_TAX, NOV_STATE_TAX, NOV_COUNTY_TAX, NOV_CITY_TAX, NOV_SPOTS, NOV_BILLING_AMT,
						CASE WHEN NOV_AR_INV_NBR = @invoice_number THEN NULL ELSE NOV_AR_INV_NBR END, CASE WHEN NOV_AR_INV_NBR = @invoice_number THEN NULL ELSE NOV_AR_INV_SEQ END,
						CASE WHEN NOV_AR_INV_NBR = @invoice_number THEN NULL ELSE NOV_AR_TYPE END,
						NOV_CMP_UPD_INV, NOV_CMP_UPD_PP,
						DEC_LINE_NET, DEC_COMM_AMT, DEC_REBATE_AMT, DEC_DISCOUNT, DEC_VENDOR_TAX, DEC_STATE_TAX, DEC_COUNTY_TAX, DEC_CITY_TAX, DEC_SPOTS, DEC_BILLING_AMT,
						CASE WHEN DEC_AR_INV_NBR = @invoice_number THEN NULL ELSE DEC_AR_INV_NBR END, CASE WHEN DEC_AR_INV_NBR = @invoice_number THEN NULL ELSE DEC_AR_INV_SEQ END,
						CASE WHEN DEC_AR_INV_NBR = @invoice_number THEN NULL ELSE DEC_AR_TYPE END,
						DEC_CMP_UPD_INV, DEC_CMP_UPD_PP, CASE WHEN AR_INV_NBR = @invoice_number THEN NULL ELSE AR_INV_NBR END, CASE WHEN AR_INV_NBR = @invoice_number THEN NULL ELSE AR_INV_SEQ END,
						CASE WHEN AR_INV_NBR = @invoice_number THEN NULL ELSE AR_TYPE END 
						FROM dbo.RADIO_DETAIL1
						WHERE
							ORDER_NBR = @order_nbr
						AND	LINE_NBR = @line_nbr
						AND	REV_NBR = @rev_nbr
						AND SEQ_NBR = @seq_nbr
						AND BRDCAST_YEAR = @brdcast_year
						
						INSERT  INTO dbo.RADIO_SPOTS ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
						BRDCAST_YEAR, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, WEEKS, SPOTS_WK1, SPOTS_WK2, SPOTS_WK3, SPOTS_WK4, SPOTS_WK5, SPOTS_WK6, SPOTS_WK7, SPOTS_WK8, SPOTS_WK9, SPOTS_WK10,
						SPOTS_WK11, SPOTS_WK12, SPOTS_WK13, SPOTS_WK14, SPOTS_WK15, SPOTS_WK16, SPOTS_WK17, SPOTS_WK18, SPOTS_WK19, SPOTS_WK20, SPOTS_WK21,	SPOTS_WK22, SPOTS_WK23, SPOTS_WK24, SPOTS_WK25, SPOTS_WK26,
						SPOTS_WK27, SPOTS_WK28, SPOTS_WK29, SPOTS_WK30, SPOTS_WK31, SPOTS_WK32, SPOTS_WK33, SPOTS_WK34, SPOTS_WK35, SPOTS_WK36, SPOTS_WK37, SPOTS_WK38, SPOTS_WK39, SPOTS_WK40, SPOTS_WK41, SPOTS_WK42,
						SPOTS_WK43, SPOTS_WK44, SPOTS_WK45, SPOTS_WK46, SPOTS_WK47, SPOTS_WK48, SPOTS_WK49, SPOTS_WK50, SPOTS_WK51, SPOTS_WK52, SPOTS_WK53 )
						SELECT
						ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.RADIO_SPOTS WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year),
						@brdcast_year, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, WEEKS, SPOTS_WK1, SPOTS_WK2, SPOTS_WK3, SPOTS_WK4, SPOTS_WK5, SPOTS_WK6, SPOTS_WK7, SPOTS_WK8, SPOTS_WK9, SPOTS_WK10,
						SPOTS_WK11, SPOTS_WK12, SPOTS_WK13, SPOTS_WK14, SPOTS_WK15, SPOTS_WK16, SPOTS_WK17, SPOTS_WK18, SPOTS_WK19, SPOTS_WK20, SPOTS_WK21, SPOTS_WK22, SPOTS_WK23, SPOTS_WK24, SPOTS_WK25, SPOTS_WK26,
						SPOTS_WK27, SPOTS_WK28, SPOTS_WK29, SPOTS_WK30, SPOTS_WK31, SPOTS_WK32, SPOTS_WK33, SPOTS_WK34, SPOTS_WK35, SPOTS_WK36, SPOTS_WK37, SPOTS_WK38, SPOTS_WK39, SPOTS_WK40, SPOTS_WK41, SPOTS_WK42,
						SPOTS_WK43, SPOTS_WK44, SPOTS_WK45, SPOTS_WK46, SPOTS_WK47, SPOTS_WK48, SPOTS_WK49, SPOTS_WK50, SPOTS_WK51, SPOTS_WK52, SPOTS_WK53
						FROM dbo.RADIO_SPOTS 
						WHERE ORDER_NBR = @order_nbr
						AND LINE_NBR = @line_nbr 
						AND REV_NBR = @rev_nbr 
						AND SEQ_NBR = @seq_nbr 
						AND BRDCAST_YEAR = @brdcast_year 
						
						INSERT INTO dbo.RADIO_DETAIL2 ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
						BRDCAST_YEAR, APPLYLN1, APPLYLN2, APPLYLN3, APPLYLN4, APPLYLN5, APPLYLN6, APPLYLN7, APPLYLN8, DISC1, DISC2, DISC3, DISC4, DISC5,
						DISC6, DISC7, DISC8, DISC1DESC, DISC2DESC, DISC3DESC, DISC4DESC, DISC5DESC, DISC6DESC, DISC7DESC, DISC8DESC, NCDESC1, NCDESC2, NCDESC3, NCDESC4, NCDESC5, NCDESC6, NETCHARGE1, NETCHARGE2, NETCHARGE3,
						NETCHARGE4, NETCHARGE5, NETCHARGE6, CLOSE_INFO, HOUSE_COMMENT, MATL_NOTES, MISC_INFO, ORDER_COMMENT, POSITION_INFO, RATE_INFO )
						SELECT
						ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.RADIO_DETAIL2 WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year),
						BRDCAST_YEAR, APPLYLN1, APPLYLN2, APPLYLN3, APPLYLN4, APPLYLN5, APPLYLN6, APPLYLN7, APPLYLN8, DISC1, DISC2, DISC3, DISC4, DISC5,
						DISC6, DISC7, DISC8, DISC1DESC, DISC2DESC, DISC3DESC, DISC4DESC, DISC5DESC, DISC6DESC, DISC7DESC, DISC8DESC, NCDESC1, NCDESC2, NCDESC3, NCDESC4, NCDESC5, NCDESC6, NETCHARGE1, NETCHARGE2, NETCHARGE3,
						NETCHARGE4, NETCHARGE5, NETCHARGE6, CLOSE_INFO, HOUSE_COMMENT, MATL_NOTES, MISC_INFO, ORDER_COMMENT, POSITION_INFO, RATE_INFO
						FROM dbo.RADIO_DETAIL2
						WHERE ORDER_NBR = @order_nbr
						AND LINE_NBR = @line_nbr 
						AND REV_NBR = @rev_nbr 
						AND SEQ_NBR = @seq_nbr 
						AND BRDCAST_YEAR = @brdcast_year 
						
						INSERT INTO dbo.RADIO_GL ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR, BRDCAST_YEAR)
						SELECT
						ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.RADIO_GL WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year), BRDCAST_YEAR
						FROM dbo.RADIO_GL
						WHERE ORDER_NBR = @order_nbr
						AND LINE_NBR = @line_nbr 
						AND REV_NBR = @rev_nbr 
						AND SEQ_NBR = @seq_nbr 
						AND BRDCAST_YEAR = @brdcast_year 
						
					END
					
					FETCH NEXT FROM @radio_detail1 INTO @order_nbr, @line_nbr, @brdcast_year, @rev_nbr, @seq_nbr
					
				END
				
				CLOSE @radio_detail1
				DEALLOCATE @radio_detail1
				
			END
			-- STOP RADIO_DETAIL1
			
			-- START TV_DETAIL
			IF EXISTS (SELECT ORDER_NBR FROM dbo.TV_DETAIL WHERE AR_INV_NBR = @invoice_number)
			BEGIN /* TV_DETAIL */
			
				INSERT INTO @TV_DETAIL_TABLE 
				SELECT H.ORDER_NBR, D.LINE_NBR, REV_NBR, SEQ_NBR
				FROM dbo.TV_HDR H INNER JOIN dbo.TV_DETAIL D ON H.ORDER_NBR = D.ORDER_NBR 
					INNER JOIN
					(SELECT a.ORDER_NBR, a.LINE_NBR, a.BRDCAST_YEAR, a.BILL_COMM_NET,   		
					 CASE WHEN ( b.ORDER_NBR > 0 ) THEN 1 ELSE 0 END AS oldnew2
					 FROM dbo.ARINV_MEDIA a  LEFT OUTER JOIN dbo.TV_HDR b  	     ON a.ORDER_NBR = b.ORDER_NBR  	                                                                           	  
					 WHERE a.AR_INV_NBR = @invoice_number) AS OLDNEW ON H.ORDER_NBR = OLDNEW.ORDER_NBR AND D.LINE_NBR = OLDNEW.LINE_NBR AND OLDNEW.oldnew2 = 1
				WHERE D.AR_INV_NBR = @invoice_number 
				ORDER BY H.ORDER_NBR, D.LINE_NBR, REV_NBR, SEQ_NBR

				SET @tv_detail = CURSOR FOR
				SELECT ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR
				FROM @TV_DETAIL_TABLE
				ORDER BY ORDER_NBR, LINE_NBR

				OPEN @tv_detail
				FETCH NEXT FROM @tv_detail INTO @order_nbr, @line_nbr, @rev_nbr, @seq_nbr
				
				--PJH 08/12/13 - Hold order/line/rev info to update ACTIVE_REV
				SET @order_nbr_prev = @order_nbr
				SET @line_nbr_prev = @line_nbr
				SET @rev_nbr_prev = @rev_nbr				

				WHILE @@FETCH_STATUS = 0
				BEGIN
					
					--PJH 08/12/13 - Use Order/Line	
					UPDATE	dbo.TV_DETAIL SET ACTIVE_REV = NULL
					WHERE	ORDER_NBR = @order_nbr
					AND		LINE_NBR = @line_nbr
					--AND		REV_NBR = @rev_nbr
					
					INSERT INTO dbo.TV_DETAIL ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					ACTIVE_REV, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, JOB_NUMBER, JOB_COMPONENT_NBR,
					QUANTITY, RATE, NET_RATE, GROSS_RATE, EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NCDESC, ADDL_CHARGE,
					ADDL_CHARGE_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, AR_TYPE, AR_INV_SEQ, GLEXACT, GLESEQ_SALES, GLESEQ_COS, GLESEQ_WIP, GLESEQ_STATE, GLESEQ_COUNTY, GLESEQ_CITY,
					GLEXACT_DEF,
					GLESEQ_COS_DEF, GLESEQ_SALES_DEF, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT,
					MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG, GLACODE_SALES_DEF,
					GLACODE_COS_DEF, BILLING_AMT, COST_TYPE, COST_RATE, NET_BASE_RATE, GROSS_BASE_RATE, BILL_CANCELLED,
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, BUY_TYPE, MONTH_NBR, YEAR_NBR, DATE1, DATE2, DATE3, DATE4, DATE5, DATE6,
					MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, SPOTS1, SPOTS2, SPOTS3, SPOTS4, SPOTS5, SPOTS6,	TOTAL_SPOTS, PROGRAMMING, START_TIME, END_TIME, [LENGTH], REMARKS, TAG, AD_NUMBER,
					NETWORK_ID, CABLE_NETWORK_STATION_CODE, DAY_PART_ID, ADDED_VALUE, BOOKEND, LINK_LINE_NUMBER )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.TV_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr AND REV_NBR = @rev_nbr),
					NULL, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, JOB_NUMBER, JOB_COMPONENT_NBR,
					QUANTITY, RATE, NET_RATE, GROSS_RATE, -EXT_NET_AMT, -EXT_GROSS_AMT, -COMM_AMT, -REBATE_AMT, -DISCOUNT_AMT,  DISCOUNT_DESC, -STATE_AMT, -COUNTY_AMT, -CITY_AMT, -NON_RESALE_AMT, -NETCHARGE, NCDESC, -ADDL_CHARGE,
					ADDL_CHARGE_DESC, -LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, 'VO', AR_INV_SEQ, @transaction_id, NULL, NULL, NULL, NULL, NULL, NULL,
					(SELECT GL_XACT_DEF from @GL_XACT_TABLE WHERE GL_XACT = GLEXACT_DEF),
					NULL, NULL, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT,
					MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, NULL, GLACODE_SALES_DEF,
					GLACODE_COS_DEF, -BILLING_AMT, COST_TYPE, COST_RATE, NET_BASE_RATE, GROSS_BASE_RATE, (SELECT MAX( BILL_CANCELLED ) FROM dbo.TV_DETAIL WHERE	ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr),
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, BUY_TYPE, MONTH_NBR, YEAR_NBR, DATE1, DATE2, DATE3, DATE4, DATE5, DATE6,
					MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, -SPOTS1, -SPOTS2, -SPOTS3, -SPOTS4, -SPOTS5, -SPOTS6, -TOTAL_SPOTS, PROGRAMMING, START_TIME, END_TIME, [LENGTH], REMARKS, TAG, AD_NUMBER,
					NETWORK_ID, CABLE_NETWORK_STATION_CODE, DAY_PART_ID, ADDED_VALUE, BOOKEND, LINK_LINE_NUMBER
					FROM	dbo.TV_DETAIL    
					WHERE	AR_INV_NBR = @invoice_number
					AND		ORDER_NBR = @order_nbr
					AND		LINE_NBR = @line_nbr
					AND		REV_NBR = @rev_nbr
					AND		SEQ_NBR = @seq_nbr
					
					--PJH 08/12/13 - Set new row's ACTIVE_REV = NULL instead of 1
					INSERT INTO dbo.TV_DETAIL ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					ACTIVE_REV, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, JOB_NUMBER, JOB_COMPONENT_NBR,
					QUANTITY, RATE, NET_RATE, GROSS_RATE, EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NCDESC, ADDL_CHARGE,
					ADDL_CHARGE_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, BILLING_USER, AR_INV_NBR, AR_TYPE, AR_INV_SEQ, GLEXACT, GLESEQ_SALES, GLESEQ_COS, GLESEQ_WIP, GLESEQ_STATE, GLESEQ_COUNTY, GLESEQ_CITY, GLEXACT_DEF,
					GLESEQ_COS_DEF, GLESEQ_SALES_DEF, GLACODE_SALES, GLACODE_COS, GLACODE_WIP, GLACODE_STATE, GLACODE_COUNTY, GLACODE_CITY, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT,
					MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, RECONCILE_FLAG, GLACODE_SALES_DEF,
					GLACODE_COS_DEF, BILLING_AMT, COST_TYPE, COST_RATE, NET_BASE_RATE, GROSS_BASE_RATE, BILL_CANCELLED,
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, BUY_TYPE, MONTH_NBR, YEAR_NBR, DATE1, DATE2, DATE3, DATE4, DATE5, DATE6,
					MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, SPOTS1, SPOTS2, SPOTS3, SPOTS4, SPOTS5, SPOTS6, TOTAL_SPOTS, PROGRAMMING, START_TIME, END_TIME, [LENGTH], REMARKS, TAG, AD_NUMBER,
					NETWORK_ID, CABLE_NETWORK_STATION_CODE, DAY_PART_ID, ADDED_VALUE, BOOKEND, LINK_LINE_NUMBER )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.TV_DETAIL WHERE ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr AND REV_NBR = @rev_nbr),
					NULL, LINK_DETID, [START_DATE], END_DATE, CLOSE_DATE, MATL_CLOSE_DATE, EXT_CLOSE_DATE, EXT_MATL_DATE, JOB_NUMBER, JOB_COMPONENT_NBR,
					QUANTITY, RATE, NET_RATE, GROSS_RATE, EXT_NET_AMT, EXT_GROSS_AMT, COMM_AMT, REBATE_AMT, DISCOUNT_AMT, DISCOUNT_DESC, STATE_AMT, COUNTY_AMT, CITY_AMT, NON_RESALE_AMT, NETCHARGE, NCDESC, ADDL_CHARGE,
					ADDL_CHARGE_DESC, LINE_TOTAL, LINE_CANCELLED, DATE_TO_BILL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
					NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NON_BILL_FLAG, MODIFIED_BY, MODIFIED_DATE, MODIFIED_COMMENTS, BILL_TYPE_FLAG, COMM_PCT,
					MARKUP_PCT, REBATE_PCT, DISCOUNT_PCT, TAX_CODE, TAX_CITY_PCT, TAX_COUNTY_PCT, TAX_STATE_PCT, TAX_RESALE, TAXAPPLYC, TAXAPPLYLN, TAXAPPLYND, TAXAPPLYNC, TAXAPPLYR, TAXAPPLYAI, NULL, NULL,
					NULL, BILLING_AMT, COST_TYPE, COST_RATE, NET_BASE_RATE, GROSS_BASE_RATE, (SELECT MAX( BILL_CANCELLED ) FROM dbo.TV_DETAIL WHERE	ORDER_NBR = @order_nbr AND LINE_NBR = @line_nbr),
					EST_NBR, EST_LINE_NBR, EST_REV_NBR, BUY_TYPE, MONTH_NBR, YEAR_NBR, DATE1, DATE2, DATE3, DATE4, DATE5, DATE6,
					MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, SPOTS1, SPOTS2, SPOTS3, SPOTS4, SPOTS5, SPOTS6, TOTAL_SPOTS, PROGRAMMING, START_TIME, END_TIME, [LENGTH], REMARKS, TAG, AD_NUMBER,
					NETWORK_ID, CABLE_NETWORK_STATION_CODE, DAY_PART_ID, ADDED_VALUE, BOOKEND, LINK_LINE_NUMBER
					FROM	dbo.TV_DETAIL
					WHERE	AR_INV_NBR = @invoice_number
					AND		ORDER_NBR = @order_nbr
					AND		LINE_NBR = @line_nbr
					AND		REV_NBR = @rev_nbr
					AND		SEQ_NBR = @seq_nbr

					/* PJH 04/30/19 - TV_DETAIL_UNITS */
					SET @return_msg = NULL
					EXEC advsp_revise_order_brdcast_units_by_order_void
						@user_code ,
						@order_nbr,
						@line_nbr,
						@return_msg OUTPUT

					IF @return_msg IS NOT NULL BEGIN
						--SELECT @return_msg '@return_msg'
						GOTO ERROR_MSG
					END

					FETCH NEXT FROM @tv_detail INTO @order_nbr, @line_nbr, @rev_nbr, @seq_nbr
					
					/* PJH 08/12/13 - Set ACTIVE_REV for previous order/line */
					IF @order_nbr <> @order_nbr_prev OR @line_nbr_prev <> @line_nbr
					BEGIN
						SET @rev_nbr_max = (SELECT MAX(REV_NBR) FROM dbo.TV_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev)
						UPDATE	dbo.TV_DETAIL SET ACTIVE_REV = 1
						WHERE	ORDER_NBR = @order_nbr_prev
						AND		LINE_NBR = @line_nbr_prev
						AND		REV_NBR = @rev_nbr_max
						AND		SEQ_NBR = (SELECT MAX(SEQ_NBR) FROM dbo.TV_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev AND REV_NBR = @rev_nbr_max)					
					END
					
					SET @order_nbr_prev = @order_nbr
					SET @line_nbr_prev = @line_nbr
					SET @rev_nbr_prev = @rev_nbr
					
				END
				/* PJH 08/12/13 - Set ACTIVE_REV for last line processed */
				BEGIN
					SET @rev_nbr_max = (SELECT MAX(REV_NBR) FROM dbo.TV_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev)
					UPDATE	dbo.TV_DETAIL SET ACTIVE_REV = 1
					WHERE	ORDER_NBR = @order_nbr_prev
					AND		LINE_NBR = @line_nbr_prev
					AND		REV_NBR = @rev_nbr_max
					AND		SEQ_NBR = (SELECT MAX(SEQ_NBR) FROM dbo.TV_DETAIL WHERE ORDER_NBR = @order_nbr_prev AND LINE_NBR = @line_nbr_prev AND REV_NBR = @rev_nbr_max)					
				END			
				
				SET @order_nbr_prev = 0
				SET @line_nbr_prev = 0
				SET @rev_nbr_prev = 0				
				
				CLOSE @tv_detail
				DEALLOCATE @tv_detail
				
			END
			-- STOP TV_DETAIL
			
			-- START TV_DETAIL1
			IF EXISTS (SELECT ORDER_NBR FROM dbo.TV_DETAIL1 WHERE AR_INV_NBR = @invoice_number)
			BEGIN /* TV_DETAIL1 */
			
				INSERT INTO @TV_DETAIL1_TABLE
				SELECT R.ORDER_NBR, R.LINE_NBR, R.BRDCAST_YEAR, REV_NBR, MAX(SEQ_NBR) AS SEQ_NBR
				FROM (
					SELECT a.ORDER_NBR, a.LINE_NBR, a.BRDCAST_YEAR,
					CASE WHEN ( b.ORDER_NBR > 0 ) THEN 1 ELSE 0 END AS OLDNEW
					FROM dbo.ARINV_MEDIA a  LEFT OUTER JOIN dbo.TV_HDR b  	     ON a.ORDER_NBR = b.ORDER_NBR
					WHERE a.AR_INV_NBR = @invoice_number
				) TABLEA INNER JOIN dbo.TV_DETAIL1 R ON TABLEA.ORDER_NBR = R.ORDER_NBR AND TABLEA.LINE_NBR = R.LINE_NBR AND TABLEA.BRDCAST_YEAR = R.BRDCAST_YEAR AND TABLEA.OLDNEW = 0
				GROUP BY R.ORDER_NBR, R.LINE_NBR, R.BRDCAST_YEAR, REV_NBR
				
				SET @tv_detail1 = CURSOR FOR
				SELECT ORDER_NBR, LINE_NBR, BRDCAST_YEAR, REV_NBR, SEQ_NBR
				FROM @TV_DETAIL1_TABLE
				ORDER BY ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR 

				OPEN @tv_detail1
				FETCH NEXT FROM @tv_detail1 INTO @order_nbr, @line_nbr, @brdcast_year, @rev_nbr, @seq_nbr

				WHILE @@FETCH_STATUS = 0
				BEGIN
					
					IF EXISTS ( SELECT SEQ_NBR
								FROM dbo.TV_DETAIL1 A, dbo.TV_HEADER B
								WHERE A.ORDER_NBR = @order_nbr
								AND A.ORDER_NBR = B.ORDER_NBR
								AND A.LINE_NBR = @line_nbr
								AND A.REV_NBR = @rev_nbr
								AND A.SEQ_NBR = @seq_nbr
								AND A.BRDCAST_YEAR = @brdcast_year
								AND ( JAN_AR_INV_NBR=@invoice_number
									OR FEB_AR_INV_NBR=@invoice_number
									OR MAR_AR_INV_NBR=@invoice_number
									OR APR_AR_INV_NBR=@invoice_number
									OR MAY_AR_INV_NBR=@invoice_number
									OR JUN_AR_INV_NBR=@invoice_number
									OR JUL_AR_INV_NBR=@invoice_number
									OR AUG_AR_INV_NBR=@invoice_number
									OR SEP_AR_INV_NBR=@invoice_number
									OR OCT_AR_INV_NBR=@invoice_number
									OR NOV_AR_INV_NBR=@invoice_number
									OR DEC_AR_INV_NBR=@invoice_number
									)
							  )
					BEGIN
					
					INSERT  INTO dbo.TV_DETAIL1 ( ORDER_NBR, LINE_NBR, REV_NBR, BRDCAST_YEAR, BILL_MONTHS, CANCELLED_DATE, CANCELLED_BY, COUNTY_TAX_NC, CITY_TAX_NC, CITY_TAX, COUNTY_TAX, COMM_AMT, CLOSE_DATE, DELETE_FLAG,
					DELETE_DATE, DELETED_BY, END_TIME, EXT_CLOSE_DATE, EXT_MATL_DATE, EXT_NET_AMT, GROSS_RATE, LINK_ID, LINK_DETID, [LENGTH], LINE_CANCELLED, LINE_TOTAL, LINE_NET_DISC, JOB_NUMBER, JOB_COMPONENT_NBR,
					MATL_CLOSE_DATE, NETCHARGES, NET_RATE, PROGRAMMING, PRINTED, REMARKS, RATE, RATE_CARD, RATE_DESC, REBATE_AMT, SEQ_NBR,
					START_TIME, STATE_TAX, STATE_TAX_NC, TOTAL_SPOTS, TAG, VENDOR_TAX, VENDOR_TAX_NC,
					JAN_LINE_NET, JAN_COMM_AMT, JAN_REBATE_AMT, JAN_DISCOUNT, JAN_VENDOR_TAX, JAN_STATE_TAX, JAN_COUNTY_TAX, JAN_CITY_TAX, JAN_SPOTS, JAN_BILLING_AMT, JAN_AR_INV_NBR, JAN_AR_INV_SEQ, JAN_AR_TYPE,
					JAN_CMP_UPD_INV, JAN_CMP_UPD_PP, FEB_LINE_NET, FEB_COMM_AMT, FEB_REBATE_AMT, FEB_DISCOUNT, FEB_VENDOR_TAX, FEB_STATE_TAX, FEB_COUNTY_TAX, FEB_CITY_TAX, FEB_SPOTS, FEB_BILLING_AMT, FEB_AR_INV_NBR,
					FEB_AR_INV_SEQ, FEB_AR_TYPE, FEB_CMP_UPD_INV, FEB_CMP_UPD_PP, MAR_LINE_NET, MAR_COMM_AMT, MAR_REBATE_AMT, MAR_DISCOUNT, MAR_VENDOR_TAX, MAR_STATE_TAX, MAR_COUNTY_TAX, MAR_CITY_TAX, MAR_SPOTS, MAR_BILLING_AMT,
					MAR_AR_INV_NBR, MAR_AR_INV_SEQ, MAR_AR_TYPE, MAR_CMP_UPD_INV, MAR_CMP_UPD_PP, APR_LINE_NET, APR_COMM_AMT, APR_REBATE_AMT, APR_DISCOUNT, APR_VENDOR_TAX, APR_STATE_TAX, APR_COUNTY_TAX, APR_CITY_TAX, APR_SPOTS,
					APR_BILLING_AMT, APR_AR_INV_NBR, APR_AR_INV_SEQ, APR_AR_TYPE, APR_CMP_UPD_INV, APR_CMP_UPD_PP, MAY_LINE_NET, MAY_COMM_AMT, MAY_REBATE_AMT, MAY_DISCOUNT, MAY_VENDOR_TAX, MAY_STATE_TAX, MAY_COUNTY_TAX,
					MAY_CITY_TAX, MAY_SPOTS, MAY_BILLING_AMT, MAY_AR_INV_NBR, MAY_AR_INV_SEQ, MAY_AR_TYPE, MAY_CMP_UPD_INV, MAY_CMP_UPD_PP, JUN_LINE_NET, JUN_COMM_AMT, JUN_REBATE_AMT, JUN_DISCOUNT, JUN_VENDOR_TAX, JUN_STATE_TAX,
					JUN_COUNTY_TAX, JUN_CITY_TAX, JUN_SPOTS, JUN_BILLING_AMT, JUN_AR_INV_NBR, JUN_AR_INV_SEQ, JUN_AR_TYPE, JUN_CMP_UPD_INV, JUN_CMP_UPD_PP, JUL_LINE_NET, JUL_COMM_AMT, JUL_REBATE_AMT, JUL_DISCOUNT, JUL_VENDOR_TAX,
					JUL_STATE_TAX, JUL_COUNTY_TAX, JUL_CITY_TAX, JUL_SPOTS, JUL_BILLING_AMT, JUL_AR_INV_NBR, JUL_AR_INV_SEQ, JUL_AR_TYPE, JUL_CMP_UPD_INV, JUL_CMP_UPD_PP, AUG_LINE_NET, AUG_COMM_AMT, AUG_REBATE_AMT, AUG_DISCOUNT,
					AUG_VENDOR_TAX, AUG_STATE_TAX, AUG_COUNTY_TAX, AUG_CITY_TAX, AUG_SPOTS, AUG_BILLING_AMT, AUG_AR_INV_NBR, AUG_AR_INV_SEQ, AUG_AR_TYPE, AUG_CMP_UPD_INV, AUG_CMP_UPD_PP, SEP_LINE_NET, SEP_COMM_AMT, SEP_REBATE_AMT,
					SEP_DISCOUNT, SEP_VENDOR_TAX, SEP_STATE_TAX, SEP_COUNTY_TAX, SEP_CITY_TAX, SEP_SPOTS, SEP_BILLING_AMT, SEP_AR_INV_NBR, SEP_AR_INV_SEQ, SEP_AR_TYPE, SEP_CMP_UPD_INV, SEP_CMP_UPD_PP, OCT_LINE_NET, OCT_COMM_AMT,
					OCT_REBATE_AMT, OCT_DISCOUNT, OCT_VENDOR_TAX, OCT_STATE_TAX, OCT_COUNTY_TAX, OCT_CITY_TAX, OCT_SPOTS, OCT_BILLING_AMT, OCT_AR_INV_NBR, OCT_AR_INV_SEQ, OCT_AR_TYPE, OCT_CMP_UPD_INV, OCT_CMP_UPD_PP, NOV_LINE_NET,
					NOV_COMM_AMT, NOV_REBATE_AMT, NOV_DISCOUNT, NOV_VENDOR_TAX, NOV_STATE_TAX, NOV_COUNTY_TAX, NOV_CITY_TAX, NOV_SPOTS, NOV_BILLING_AMT, NOV_AR_INV_NBR, NOV_AR_INV_SEQ, NOV_AR_TYPE, NOV_CMP_UPD_INV, NOV_CMP_UPD_PP,
					DEC_LINE_NET, DEC_COMM_AMT, DEC_REBATE_AMT, DEC_DISCOUNT, DEC_VENDOR_TAX, DEC_STATE_TAX, DEC_COUNTY_TAX, DEC_CITY_TAX, DEC_SPOTS, DEC_BILLING_AMT, DEC_AR_INV_NBR, DEC_AR_INV_SEQ, DEC_AR_TYPE, DEC_CMP_UPD_INV,
					DEC_CMP_UPD_PP, AR_INV_NBR, AR_INV_SEQ, AR_TYPE )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, BRDCAST_YEAR, BILL_MONTHS, CANCELLED_DATE, CANCELLED_BY, -COUNTY_TAX_NC, -CITY_TAX_NC, -CITY_TAX, -COUNTY_TAX, -COMM_AMT, CLOSE_DATE, DELETE_FLAG,
					DELETE_DATE, DELETED_BY, END_TIME, EXT_CLOSE_DATE, EXT_MATL_DATE, -EXT_NET_AMT, GROSS_RATE, LINK_ID, LINK_DETID, [LENGTH], LINE_CANCELLED, -LINE_TOTAL, -LINE_NET_DISC, JOB_NUMBER, JOB_COMPONENT_NBR,
					MATL_CLOSE_DATE, -NETCHARGES, NET_RATE, PROGRAMMING, PRINTED, REMARKS, RATE, RATE_CARD, RATE_DESC, -REBATE_AMT,
					(SELECT MAX(SEQ_NBR) + 1 FROM dbo.TV_DETAIL1 WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year),
					START_TIME, -STATE_TAX, -STATE_TAX_NC, -TOTAL_SPOTS, TAG, -VENDOR_TAX, -VENDOR_TAX_NC,
					-JAN_LINE_NET, -JAN_COMM_AMT, -JAN_REBATE_AMT, -JAN_DISCOUNT, -JAN_VENDOR_TAX, -JAN_STATE_TAX, -JAN_COUNTY_TAX, -JAN_CITY_TAX, -JAN_SPOTS, -JAN_BILLING_AMT, JAN_AR_INV_NBR, JAN_AR_INV_SEQ,
					CASE WHEN JAN_AR_TYPE ='IN' AND JAN_AR_INV_NBR = @invoice_number THEN 'VO' ELSE JAN_AR_TYPE END,
					JAN_CMP_UPD_INV, JAN_CMP_UPD_PP,
					-FEB_LINE_NET, -FEB_COMM_AMT, -FEB_REBATE_AMT, -FEB_DISCOUNT, -FEB_VENDOR_TAX, -FEB_STATE_TAX, -FEB_COUNTY_TAX, -FEB_CITY_TAX, -FEB_SPOTS, -FEB_BILLING_AMT, FEB_AR_INV_NBR, FEB_AR_INV_SEQ,
					CASE WHEN FEB_AR_TYPE ='IN' AND FEB_AR_INV_NBR = @invoice_number THEN 'VO' ELSE FEB_AR_TYPE END,
					FEB_CMP_UPD_INV, FEB_CMP_UPD_PP,
					-MAR_LINE_NET, -MAR_COMM_AMT, -MAR_REBATE_AMT, -MAR_DISCOUNT, -MAR_VENDOR_TAX, -MAR_STATE_TAX, -MAR_COUNTY_TAX, -MAR_CITY_TAX, -MAR_SPOTS, -MAR_BILLING_AMT, MAR_AR_INV_NBR, MAR_AR_INV_SEQ,
					CASE WHEN MAR_AR_TYPE ='IN' AND MAR_AR_INV_NBR = @invoice_number THEN 'VO' ELSE MAR_AR_TYPE END,
					MAR_CMP_UPD_INV, MAR_CMP_UPD_PP,
					-APR_LINE_NET, -APR_COMM_AMT, -APR_REBATE_AMT, -APR_DISCOUNT, -APR_VENDOR_TAX, -APR_STATE_TAX, -APR_COUNTY_TAX, -APR_CITY_TAX, -APR_SPOTS, -APR_BILLING_AMT, APR_AR_INV_NBR, APR_AR_INV_SEQ,
					CASE WHEN APR_AR_TYPE ='IN' AND APR_AR_INV_NBR = @invoice_number THEN 'VO' ELSE APR_AR_TYPE END,
					APR_CMP_UPD_INV, APR_CMP_UPD_PP,
					-MAY_LINE_NET, -MAY_COMM_AMT, -MAY_REBATE_AMT, -MAY_DISCOUNT, -MAY_VENDOR_TAX, -MAY_STATE_TAX, -MAY_COUNTY_TAX, -MAY_CITY_TAX, -MAY_SPOTS, -MAY_BILLING_AMT, MAY_AR_INV_NBR, MAY_AR_INV_SEQ,
					CASE WHEN MAY_AR_TYPE ='IN' AND MAY_AR_INV_NBR = @invoice_number THEN 'VO' ELSE MAY_AR_TYPE END,
					MAY_CMP_UPD_INV, MAY_CMP_UPD_PP,
					-JUN_LINE_NET, -JUN_COMM_AMT, -JUN_REBATE_AMT, -JUN_DISCOUNT, -JUN_VENDOR_TAX, -JUN_STATE_TAX, -JUN_COUNTY_TAX, -JUN_CITY_TAX, -JUN_SPOTS, -JUN_BILLING_AMT, JUN_AR_INV_NBR, JUN_AR_INV_SEQ,
					CASE WHEN JUN_AR_TYPE ='IN' AND JUN_AR_INV_NBR = @invoice_number THEN 'VO' ELSE JUN_AR_TYPE END,
					JUN_CMP_UPD_INV, JUN_CMP_UPD_PP,
					-JUL_LINE_NET, -JUL_COMM_AMT, -JUL_REBATE_AMT, -JUL_DISCOUNT, -JUL_VENDOR_TAX, -JUL_STATE_TAX, -JUL_COUNTY_TAX, -JUL_CITY_TAX, -JUL_SPOTS, -JUL_BILLING_AMT, JUL_AR_INV_NBR, JUL_AR_INV_SEQ,
					CASE WHEN JUL_AR_TYPE ='IN' AND JUL_AR_INV_NBR = @invoice_number THEN 'VO' ELSE JUL_AR_TYPE END,
					JUL_CMP_UPD_INV, JUL_CMP_UPD_PP,
					-AUG_LINE_NET, -AUG_COMM_AMT, -AUG_REBATE_AMT, -AUG_DISCOUNT, -AUG_VENDOR_TAX, -AUG_STATE_TAX, -AUG_COUNTY_TAX, -AUG_CITY_TAX, -AUG_SPOTS, -AUG_BILLING_AMT, AUG_AR_INV_NBR, AUG_AR_INV_SEQ,
					CASE WHEN AUG_AR_TYPE ='IN' AND AUG_AR_INV_NBR = @invoice_number THEN 'VO' ELSE AUG_AR_TYPE END,
					AUG_CMP_UPD_INV, AUG_CMP_UPD_PP,
					-SEP_LINE_NET, -SEP_COMM_AMT, -SEP_REBATE_AMT, -SEP_DISCOUNT, -SEP_VENDOR_TAX, -SEP_STATE_TAX, -SEP_COUNTY_TAX, -SEP_CITY_TAX, -SEP_SPOTS, -SEP_BILLING_AMT, SEP_AR_INV_NBR, SEP_AR_INV_SEQ,
					CASE WHEN SEP_AR_TYPE ='IN' AND SEP_AR_INV_NBR = @invoice_number THEN 'VO' ELSE SEP_AR_TYPE END,
					SEP_CMP_UPD_INV, SEP_CMP_UPD_PP,
					-OCT_LINE_NET, -OCT_COMM_AMT, -OCT_REBATE_AMT, -OCT_DISCOUNT, -OCT_VENDOR_TAX, -OCT_STATE_TAX, -OCT_COUNTY_TAX, -OCT_CITY_TAX, -OCT_SPOTS, -OCT_BILLING_AMT, OCT_AR_INV_NBR, OCT_AR_INV_SEQ,
					CASE WHEN OCT_AR_TYPE ='IN' AND OCT_AR_INV_NBR = @invoice_number THEN 'VO' ELSE OCT_AR_TYPE END,
					OCT_CMP_UPD_INV, OCT_CMP_UPD_PP,
					-NOV_LINE_NET, -NOV_COMM_AMT, -NOV_REBATE_AMT, -NOV_DISCOUNT, -NOV_VENDOR_TAX, -NOV_STATE_TAX, -NOV_COUNTY_TAX, -NOV_CITY_TAX, -NOV_SPOTS, -NOV_BILLING_AMT, NOV_AR_INV_NBR, NOV_AR_INV_SEQ,
					CASE WHEN NOV_AR_TYPE ='IN' AND NOV_AR_INV_NBR = @invoice_number THEN 'VO' ELSE NOV_AR_TYPE END,
					NOV_CMP_UPD_INV, NOV_CMP_UPD_PP,
					-DEC_LINE_NET, -DEC_COMM_AMT, -DEC_REBATE_AMT, -DEC_DISCOUNT, -DEC_VENDOR_TAX, -DEC_STATE_TAX, -DEC_COUNTY_TAX, -DEC_CITY_TAX, -DEC_SPOTS, -DEC_BILLING_AMT, DEC_AR_INV_NBR, DEC_AR_INV_SEQ,
					CASE WHEN DEC_AR_TYPE ='IN' AND DEC_AR_INV_NBR = @invoice_number THEN 'VO' ELSE DEC_AR_TYPE END,
					DEC_CMP_UPD_INV, DEC_CMP_UPD_PP, AR_INV_NBR, AR_INV_SEQ, CASE WHEN AR_TYPE = 'IN' AND AR_INV_NBR = @invoice_number THEN 'VO' ELSE AR_TYPE END
					FROM dbo.TV_DETAIL1
					WHERE
						ORDER_NBR = @order_nbr
					AND	LINE_NBR = @line_nbr
					AND	REV_NBR = @rev_nbr
					AND SEQ_NBR = @seq_nbr
					AND BRDCAST_YEAR = @brdcast_year

					INSERT  INTO dbo.TV_SPOTS ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					BRDCAST_YEAR, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, WEEKS, SPOTS_WK1, SPOTS_WK2, SPOTS_WK3, SPOTS_WK4, SPOTS_WK5, SPOTS_WK6, SPOTS_WK7, SPOTS_WK8, SPOTS_WK9, SPOTS_WK10,
					SPOTS_WK11, SPOTS_WK12, SPOTS_WK13, SPOTS_WK14, SPOTS_WK15, SPOTS_WK16, SPOTS_WK17, SPOTS_WK18, SPOTS_WK19, SPOTS_WK20, SPOTS_WK21, SPOTS_WK22, SPOTS_WK23, SPOTS_WK24, SPOTS_WK25, SPOTS_WK26,
					SPOTS_WK27, SPOTS_WK28, SPOTS_WK29, SPOTS_WK30, SPOTS_WK31, SPOTS_WK32, SPOTS_WK33, SPOTS_WK34, SPOTS_WK35, SPOTS_WK36, SPOTS_WK37, SPOTS_WK38, SPOTS_WK39, SPOTS_WK40, SPOTS_WK41, SPOTS_WK42,
					SPOTS_WK43, SPOTS_WK44, SPOTS_WK45, SPOTS_WK46, SPOTS_WK47, SPOTS_WK48, SPOTS_WK49, SPOTS_WK50, SPOTS_WK51, SPOTS_WK52, SPOTS_WK53 )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.TV_SPOTS WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year),
					BRDCAST_YEAR, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, -WEEKS, -SPOTS_WK1, -SPOTS_WK2, -SPOTS_WK3, -SPOTS_WK4, -SPOTS_WK5, -SPOTS_WK6, -SPOTS_WK7, -SPOTS_WK8, -SPOTS_WK9, -SPOTS_WK10,
					-SPOTS_WK11, -SPOTS_WK12, -SPOTS_WK13, -SPOTS_WK14, -SPOTS_WK15, -SPOTS_WK16, -SPOTS_WK17, -SPOTS_WK18, -SPOTS_WK19, -SPOTS_WK20, -SPOTS_WK21, -SPOTS_WK22, -SPOTS_WK23, -SPOTS_WK24, -SPOTS_WK25, -SPOTS_WK26,
					-SPOTS_WK27, -SPOTS_WK28, -SPOTS_WK29, -SPOTS_WK30, -SPOTS_WK31, -SPOTS_WK32, -SPOTS_WK33, -SPOTS_WK34, -SPOTS_WK35, -SPOTS_WK36, -SPOTS_WK37, -SPOTS_WK38, -SPOTS_WK39, -SPOTS_WK40, -SPOTS_WK41, -SPOTS_WK42,
					-SPOTS_WK43, -SPOTS_WK44, -SPOTS_WK45, -SPOTS_WK46, -SPOTS_WK47, -SPOTS_WK48, -SPOTS_WK49, -SPOTS_WK50, -SPOTS_WK51, -SPOTS_WK52, -SPOTS_WK53
					FROM dbo.TV_SPOTS 
					WHERE ORDER_NBR = @order_nbr
					AND LINE_NBR = @line_nbr 
					AND REV_NBR = @rev_nbr 
					AND SEQ_NBR = @seq_nbr 
					AND BRDCAST_YEAR = @brdcast_year 

					INSERT  INTO dbo.TV_DETAIL2 ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					BRDCAST_YEAR, APPLYLN1, APPLYLN2, APPLYLN3, APPLYLN4, APPLYLN5, APPLYLN6, APPLYLN7, APPLYLN8, DISC1, DISC2, DISC3, DISC4, DISC5, DISC6, DISC7, DISC8, DISC1DESC, DISC2DESC, DISC3DESC, DISC4DESC, DISC5DESC,
					DISC6DESC, DISC7DESC, DISC8DESC, NCDESC1, NCDESC2, NCDESC3, NCDESC4, NCDESC5, NCDESC6, NETCHARGE1, NETCHARGE2, NETCHARGE3, NETCHARGE4, NETCHARGE5, NETCHARGE6, CLOSE_INFO, HOUSE_COMMENT, MATL_NOTES, MISC_INFO,
					ORDER_COMMENT, POSITION_INFO, RATE_INFO )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.TV_DETAIL2 WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year),
					BRDCAST_YEAR, APPLYLN1, APPLYLN2, APPLYLN3, APPLYLN4, APPLYLN5, APPLYLN6, APPLYLN7, APPLYLN8, -DISC1, -DISC2, -DISC3, -DISC4, -DISC5, -DISC6, -DISC7, -DISC8, DISC1DESC, DISC2DESC, DISC3DESC, DISC4DESC, DISC5DESC,
					DISC6DESC, DISC7DESC, DISC8DESC, NCDESC1, NCDESC2, NCDESC3, NCDESC4, NCDESC5, NCDESC6, -NETCHARGE1, -NETCHARGE2, -NETCHARGE3, -NETCHARGE4, -NETCHARGE5, -NETCHARGE6, CLOSE_INFO, HOUSE_COMMENT, MATL_NOTES, MISC_INFO,
					ORDER_COMMENT, POSITION_INFO, RATE_INFO
					FROM dbo.TV_DETAIL2
					WHERE ORDER_NBR = @order_nbr
					AND LINE_NBR = @line_nbr 
					AND REV_NBR = @rev_nbr 
					AND SEQ_NBR = @seq_nbr 
					AND BRDCAST_YEAR = @brdcast_year 

					INSERT  INTO dbo.TV_GL ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR, BRDCAST_YEAR,
					JAN_GLACODE_CITY, JAN_GLACODE_COS, JAN_GLACODE_COUNTY, JAN_GLACODE_SALES, JAN_GLACODE_STATE, JAN_GLACODE_WIP, JAN_GLESEQ_CITY, JAN_GLESEQ_COS, JAN_GLESEQ_COUNTY, JAN_GLESEQ_SALES, JAN_GLESEQ_STATE,
					JAN_GLESEQ_WIP, JAN_GLEXACT, JAN_GLEXACT_DEF, FEB_GLACODE_CITY, FEB_GLACODE_COS, FEB_GLACODE_COUNTY, FEB_GLACODE_SALES, FEB_GLACODE_STATE, FEB_GLACODE_WIP, FEB_GLESEQ_CITY, FEB_GLESEQ_COS, FEB_GLESEQ_COUNTY,
					FEB_GLESEQ_SALES, FEB_GLESEQ_STATE, FEB_GLESEQ_WIP, FEB_GLEXACT, FEB_GLEXACT_DEF, MAR_GLACODE_CITY, MAR_GLACODE_COS, MAR_GLACODE_COUNTY, MAR_GLACODE_SALES, MAR_GLACODE_STATE, MAR_GLACODE_WIP, MAR_GLESEQ_CITY,
					MAR_GLESEQ_COS, MAR_GLESEQ_COUNTY, MAR_GLESEQ_SALES, MAR_GLESEQ_STATE, MAR_GLESEQ_WIP, MAR_GLEXACT, MAR_GLEXACT_DEF, APR_GLACODE_CITY, APR_GLACODE_COS, APR_GLACODE_COUNTY, APR_GLACODE_SALES, APR_GLACODE_STATE,
					APR_GLACODE_WIP, APR_GLESEQ_CITY, APR_GLESEQ_COS, APR_GLESEQ_COUNTY, APR_GLESEQ_SALES, APR_GLESEQ_STATE, APR_GLESEQ_WIP, APR_GLEXACT, APR_GLEXACT_DEF, MAY_GLACODE_CITY, MAY_GLACODE_COS, MAY_GLACODE_COUNTY,
					MAY_GLACODE_SALES, MAY_GLACODE_STATE, MAY_GLACODE_WIP, MAY_GLESEQ_CITY, MAY_GLESEQ_COS, MAY_GLESEQ_COUNTY, MAY_GLESEQ_SALES, MAY_GLESEQ_STATE, MAY_GLESEQ_WIP, MAY_GLEXACT, MAY_GLEXACT_DEF, JUN_GLACODE_CITY,
					JUN_GLACODE_COS, JUN_GLACODE_COUNTY, JUN_GLACODE_SALES, JUN_GLACODE_STATE, JUN_GLACODE_WIP, JUN_GLESEQ_CITY, JUN_GLESEQ_COS, JUN_GLESEQ_COUNTY, JUN_GLESEQ_SALES, JUN_GLESEQ_STATE, JUN_GLESEQ_WIP, JUN_GLEXACT,
					JUN_GLEXACT_DEF, JUL_GLACODE_CITY, JUL_GLACODE_COS, JUL_GLACODE_COUNTY, JUL_GLACODE_SALES, JUL_GLACODE_STATE, JUL_GLACODE_WIP, JUL_GLESEQ_CITY, JUL_GLESEQ_COS, JUL_GLESEQ_COUNTY, JUL_GLESEQ_SALES,
					JUL_GLESEQ_STATE, JUL_GLESEQ_WIP, JUL_GLEXACT, JUL_GLEXACT_DEF, AUG_GLACODE_CITY, AUG_GLACODE_COS, AUG_GLACODE_COUNTY, AUG_GLACODE_SALES, AUG_GLACODE_STATE, AUG_GLACODE_WIP, AUG_GLESEQ_CITY, AUG_GLESEQ_COS,
					AUG_GLESEQ_COUNTY, AUG_GLESEQ_SALES, AUG_GLESEQ_STATE, AUG_GLESEQ_WIP, AUG_GLEXACT, AUG_GLEXACT_DEF, SEP_GLACODE_CITY, SEP_GLACODE_COS, SEP_GLACODE_COUNTY, SEP_GLACODE_SALES, SEP_GLACODE_STATE, SEP_GLACODE_WIP,
					SEP_GLESEQ_CITY, SEP_GLESEQ_COS, SEP_GLESEQ_COUNTY, SEP_GLESEQ_SALES, SEP_GLESEQ_STATE, SEP_GLESEQ_WIP, SEP_GLEXACT, SEP_GLEXACT_DEF, OCT_GLACODE_CITY, OCT_GLACODE_COS, OCT_GLACODE_COUNTY, OCT_GLACODE_SALES,
					OCT_GLACODE_STATE, OCT_GLACODE_WIP, OCT_GLESEQ_CITY, OCT_GLESEQ_COS, OCT_GLESEQ_COUNTY, OCT_GLESEQ_SALES, OCT_GLESEQ_STATE, OCT_GLESEQ_WIP, OCT_GLEXACT, OCT_GLEXACT_DEF, NOV_GLACODE_CITY, NOV_GLACODE_COS,
					NOV_GLACODE_COUNTY, NOV_GLACODE_SALES, NOV_GLACODE_STATE, NOV_GLACODE_WIP, NOV_GLESEQ_CITY, NOV_GLESEQ_COS, NOV_GLESEQ_COUNTY, NOV_GLESEQ_SALES, NOV_GLESEQ_STATE, NOV_GLESEQ_WIP, NOV_GLEXACT, NOV_GLEXACT_DEF,
					DEC_GLACODE_CITY, DEC_GLACODE_COS, DEC_GLACODE_COUNTY, DEC_GLACODE_SALES, DEC_GLACODE_STATE, DEC_GLACODE_WIP, DEC_GLESEQ_CITY, DEC_GLESEQ_COS, DEC_GLESEQ_COUNTY, DEC_GLESEQ_SALES, DEC_GLESEQ_STATE,
					DEC_GLESEQ_WIP, DEC_GLEXACT, DEC_GLEXACT_DEF, NC_GLEXACT, NC_GLACODE_SALES, NC_GLACODE_COS, NC_GLACODE_WIP, NC_GLACODE_CITY, NC_GLACODE_COUNTY, NC_GLACODE_STATE, NC_GLESEQ_SALES, NC_GLESEQ_COS, NC_GLESEQ_WIP,
					NC_GLESEQ_CITY, NC_GLESEQ_COUNTY, NC_GLESEQ_STATE )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.TV_GL WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year), BRDCAST_YEAR,
					JAN_GLACODE_CITY, JAN_GLACODE_COS, JAN_GLACODE_COUNTY, JAN_GLACODE_SALES, JAN_GLACODE_STATE, JAN_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL,
					NULL, CASE WHEN JAN_GLEXACT IS NOT NULL THEN @transaction_id END, JAN_GLEXACT_DEF, FEB_GLACODE_CITY, FEB_GLACODE_COS, FEB_GLACODE_COUNTY, FEB_GLACODE_SALES, FEB_GLACODE_STATE, FEB_GLACODE_WIP, NULL, NULL, NULL,
					NULL, NULL, NULL, CASE WHEN FEB_GLEXACT IS NOT NULL THEN @transaction_id END, FEB_GLEXACT_DEF, MAR_GLACODE_CITY, MAR_GLACODE_COS, MAR_GLACODE_COUNTY, MAR_GLACODE_SALES, MAR_GLACODE_STATE, MAR_GLACODE_WIP, NULL,
					NULL, NULL, NULL, NULL, NULL, CASE WHEN MAR_GLEXACT IS NOT NULL THEN @transaction_id END, MAR_GLEXACT_DEF, APR_GLACODE_CITY, APR_GLACODE_COS, APR_GLACODE_COUNTY, APR_GLACODE_SALES, APR_GLACODE_STATE,
					APR_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL, NULL, CASE WHEN APR_GLEXACT IS NOT NULL THEN @transaction_id END, APR_GLEXACT_DEF, MAY_GLACODE_CITY, MAY_GLACODE_COS, MAY_GLACODE_COUNTY,
					MAY_GLACODE_SALES, MAY_GLACODE_STATE, MAY_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL, NULL, CASE WHEN MAY_GLEXACT IS NOT NULL THEN @transaction_id END, MAY_GLEXACT_DEF, JUN_GLACODE_CITY,
					JUN_GLACODE_COS, JUN_GLACODE_COUNTY, JUN_GLACODE_SALES, JUN_GLACODE_STATE, JUN_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL, NULL, CASE WHEN JUN_GLEXACT IS NOT NULL THEN @transaction_id END,
					JUN_GLEXACT_DEF, JUL_GLACODE_CITY, JUL_GLACODE_COS, JUL_GLACODE_COUNTY, JUL_GLACODE_SALES, JUL_GLACODE_STATE, JUL_GLACODE_WIP, NULL, NULL, NULL, NULL,
					NULL, NULL, CASE WHEN JUL_GLEXACT IS NOT NULL THEN @transaction_id END, JUL_GLEXACT_DEF, AUG_GLACODE_CITY, AUG_GLACODE_COS, AUG_GLACODE_COUNTY, AUG_GLACODE_SALES, AUG_GLACODE_STATE, AUG_GLACODE_WIP, NULL, NULL,
					NULL, NULL, NULL, NULL, CASE WHEN AUG_GLEXACT IS NOT NULL THEN @transaction_id END, AUG_GLEXACT_DEF, SEP_GLACODE_CITY, SEP_GLACODE_COS, SEP_GLACODE_COUNTY, SEP_GLACODE_SALES, SEP_GLACODE_STATE, SEP_GLACODE_WIP,
					NULL, NULL, NULL, NULL, NULL, NULL, CASE WHEN SEP_GLEXACT IS NOT NULL THEN @transaction_id END, SEP_GLEXACT_DEF, OCT_GLACODE_CITY, OCT_GLACODE_COS, OCT_GLACODE_COUNTY, OCT_GLACODE_SALES,
					OCT_GLACODE_STATE, OCT_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL, NULL, CASE WHEN OCT_GLEXACT IS NOT NULL THEN @transaction_id END, OCT_GLEXACT_DEF, NOV_GLACODE_CITY, NOV_GLACODE_COS,
					NOV_GLACODE_COUNTY, NOV_GLACODE_SALES, NOV_GLACODE_STATE, NOV_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL, NULL, CASE WHEN NOV_GLEXACT IS NOT NULL THEN @transaction_id END, NOV_GLEXACT_DEF,
					DEC_GLACODE_CITY, DEC_GLACODE_COS, DEC_GLACODE_COUNTY, DEC_GLACODE_SALES, DEC_GLACODE_STATE, DEC_GLACODE_WIP, NULL, NULL, NULL, NULL, NULL,
					NULL, CASE WHEN DEC_GLEXACT IS NOT NULL THEN @transaction_id END, DEC_GLEXACT_DEF, NC_GLEXACT, NC_GLACODE_SALES, NC_GLACODE_COS, NC_GLACODE_WIP, NC_GLACODE_CITY, NC_GLACODE_COUNTY, NC_GLACODE_STATE, NULL, NULL, NULL,
					NULL, NULL, NULL
					FROM dbo.TV_GL
					WHERE ORDER_NBR = @order_nbr
					AND LINE_NBR = @line_nbr 
					AND REV_NBR = @rev_nbr 
					AND SEQ_NBR = @seq_nbr 
					AND BRDCAST_YEAR = @brdcast_year 

					INSERT  INTO dbo.TV_DETAIL1 ( ORDER_NBR, LINE_NBR, REV_NBR, BRDCAST_YEAR, BILL_MONTHS, CANCELLED_DATE, CANCELLED_BY, COUNTY_TAX_NC, CITY_TAX_NC, CITY_TAX, COUNTY_TAX, COMM_AMT, CLOSE_DATE, DELETE_FLAG,
					DELETE_DATE, DELETED_BY, END_TIME, EXT_CLOSE_DATE, EXT_MATL_DATE, EXT_NET_AMT, GROSS_RATE, LINK_ID, LINK_DETID, [LENGTH], LINE_CANCELLED, LINE_TOTAL, LINE_NET_DISC, JOB_NUMBER, JOB_COMPONENT_NBR,
					MATL_CLOSE_DATE, NETCHARGES, NET_RATE, PROGRAMMING, PRINTED, REMARKS, RATE, RATE_CARD, RATE_DESC, REBATE_AMT, SEQ_NBR,
					START_TIME, STATE_TAX, STATE_TAX_NC, TOTAL_SPOTS, TAG, VENDOR_TAX, VENDOR_TAX_NC,
					JAN_LINE_NET, JAN_COMM_AMT, JAN_REBATE_AMT, JAN_DISCOUNT, JAN_VENDOR_TAX, JAN_STATE_TAX, JAN_COUNTY_TAX, JAN_CITY_TAX, JAN_SPOTS, JAN_BILLING_AMT, JAN_AR_INV_NBR, JAN_AR_INV_SEQ, JAN_AR_TYPE,
					JAN_CMP_UPD_INV, JAN_CMP_UPD_PP, FEB_LINE_NET, FEB_COMM_AMT, FEB_REBATE_AMT, FEB_DISCOUNT, FEB_VENDOR_TAX, FEB_STATE_TAX, FEB_COUNTY_TAX, FEB_CITY_TAX, FEB_SPOTS, FEB_BILLING_AMT, FEB_AR_INV_NBR,
					FEB_AR_INV_SEQ, FEB_AR_TYPE, FEB_CMP_UPD_INV, FEB_CMP_UPD_PP, MAR_LINE_NET, MAR_COMM_AMT, MAR_REBATE_AMT, MAR_DISCOUNT, MAR_VENDOR_TAX, MAR_STATE_TAX, MAR_COUNTY_TAX, MAR_CITY_TAX, MAR_SPOTS, MAR_BILLING_AMT,
					MAR_AR_INV_NBR, MAR_AR_INV_SEQ, MAR_AR_TYPE, MAR_CMP_UPD_INV, MAR_CMP_UPD_PP, APR_LINE_NET, APR_COMM_AMT, APR_REBATE_AMT, APR_DISCOUNT, APR_VENDOR_TAX, APR_STATE_TAX, APR_COUNTY_TAX, APR_CITY_TAX, APR_SPOTS,
					APR_BILLING_AMT, APR_AR_INV_NBR, APR_AR_INV_SEQ, APR_AR_TYPE, APR_CMP_UPD_INV, APR_CMP_UPD_PP, MAY_LINE_NET, MAY_COMM_AMT, MAY_REBATE_AMT, MAY_DISCOUNT, MAY_VENDOR_TAX, MAY_STATE_TAX, MAY_COUNTY_TAX,
					MAY_CITY_TAX, MAY_SPOTS, MAY_BILLING_AMT, MAY_AR_INV_NBR, MAY_AR_INV_SEQ, MAY_AR_TYPE, MAY_CMP_UPD_INV, MAY_CMP_UPD_PP, JUN_LINE_NET, JUN_COMM_AMT, JUN_REBATE_AMT, JUN_DISCOUNT, JUN_VENDOR_TAX, JUN_STATE_TAX,
					JUN_COUNTY_TAX, JUN_CITY_TAX, JUN_SPOTS, JUN_BILLING_AMT, JUN_AR_INV_NBR, JUN_AR_INV_SEQ, JUN_AR_TYPE, JUN_CMP_UPD_INV, JUN_CMP_UPD_PP, JUL_LINE_NET, JUL_COMM_AMT, JUL_REBATE_AMT, JUL_DISCOUNT, JUL_VENDOR_TAX,
					JUL_STATE_TAX, JUL_COUNTY_TAX, JUL_CITY_TAX, JUL_SPOTS, JUL_BILLING_AMT, JUL_AR_INV_NBR, JUL_AR_INV_SEQ, JUL_AR_TYPE, JUL_CMP_UPD_INV, JUL_CMP_UPD_PP, AUG_LINE_NET, AUG_COMM_AMT, AUG_REBATE_AMT, AUG_DISCOUNT,
					AUG_VENDOR_TAX, AUG_STATE_TAX, AUG_COUNTY_TAX, AUG_CITY_TAX, AUG_SPOTS, AUG_BILLING_AMT, AUG_AR_INV_NBR, AUG_AR_INV_SEQ, AUG_AR_TYPE, AUG_CMP_UPD_INV, AUG_CMP_UPD_PP, SEP_LINE_NET, SEP_COMM_AMT, SEP_REBATE_AMT,
					SEP_DISCOUNT, SEP_VENDOR_TAX, SEP_STATE_TAX, SEP_COUNTY_TAX, SEP_CITY_TAX, SEP_SPOTS, SEP_BILLING_AMT, SEP_AR_INV_NBR, SEP_AR_INV_SEQ, SEP_AR_TYPE, SEP_CMP_UPD_INV, SEP_CMP_UPD_PP, OCT_LINE_NET, OCT_COMM_AMT,
					OCT_REBATE_AMT, OCT_DISCOUNT, OCT_VENDOR_TAX, OCT_STATE_TAX, OCT_COUNTY_TAX, OCT_CITY_TAX, OCT_SPOTS, OCT_BILLING_AMT, OCT_AR_INV_NBR, OCT_AR_INV_SEQ, OCT_AR_TYPE, OCT_CMP_UPD_INV, OCT_CMP_UPD_PP, NOV_LINE_NET,
					NOV_COMM_AMT, NOV_REBATE_AMT, NOV_DISCOUNT, NOV_VENDOR_TAX, NOV_STATE_TAX, NOV_COUNTY_TAX, NOV_CITY_TAX, NOV_SPOTS, NOV_BILLING_AMT, NOV_AR_INV_NBR, NOV_AR_INV_SEQ, NOV_AR_TYPE, NOV_CMP_UPD_INV, NOV_CMP_UPD_PP,
					DEC_LINE_NET, DEC_COMM_AMT, DEC_REBATE_AMT, DEC_DISCOUNT, DEC_VENDOR_TAX, DEC_STATE_TAX, DEC_COUNTY_TAX, DEC_CITY_TAX, DEC_SPOTS, DEC_BILLING_AMT, DEC_AR_INV_NBR, DEC_AR_INV_SEQ, DEC_AR_TYPE, DEC_CMP_UPD_INV,
					DEC_CMP_UPD_PP, AR_INV_NBR, AR_INV_SEQ, AR_TYPE )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, BRDCAST_YEAR, NULL, CANCELLED_DATE, CANCELLED_BY, COUNTY_TAX_NC, CITY_TAX_NC, CITY_TAX, COUNTY_TAX, COMM_AMT, CLOSE_DATE, DELETE_FLAG,
					DELETE_DATE, DELETED_BY, END_TIME, EXT_CLOSE_DATE, EXT_MATL_DATE, EXT_NET_AMT, GROSS_RATE, LINK_ID, LINK_DETID, [LENGTH], LINE_CANCELLED, LINE_TOTAL, LINE_NET_DISC, JOB_NUMBER, JOB_COMPONENT_NBR,
					MATL_CLOSE_DATE, NETCHARGES, NET_RATE, PROGRAMMING, PRINTED, REMARKS, RATE, RATE_CARD, RATE_DESC, REBATE_AMT,
					(SELECT MAX(SEQ_NBR) + 1 FROM dbo.TV_DETAIL1 WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year),
					START_TIME, STATE_TAX, STATE_TAX_NC, TOTAL_SPOTS, TAG, VENDOR_TAX, VENDOR_TAX_NC,
					JAN_LINE_NET, JAN_COMM_AMT, JAN_REBATE_AMT, JAN_DISCOUNT, JAN_VENDOR_TAX, JAN_STATE_TAX, JAN_COUNTY_TAX, JAN_CITY_TAX, JAN_SPOTS, JAN_BILLING_AMT,
					CASE WHEN JAN_AR_INV_NBR = @invoice_number THEN NULL ELSE JAN_AR_INV_NBR END, CASE WHEN JAN_AR_INV_NBR = @invoice_number THEN NULL ELSE JAN_AR_INV_SEQ END,
					CASE WHEN JAN_AR_INV_NBR = @invoice_number THEN NULL ELSE JAN_AR_TYPE END,
					JAN_CMP_UPD_INV, JAN_CMP_UPD_PP,
					FEB_LINE_NET, FEB_COMM_AMT, FEB_REBATE_AMT, FEB_DISCOUNT, FEB_VENDOR_TAX, FEB_STATE_TAX, FEB_COUNTY_TAX, FEB_CITY_TAX, FEB_SPOTS, FEB_BILLING_AMT,
					CASE WHEN FEB_AR_INV_NBR = @invoice_number THEN NULL ELSE FEB_AR_INV_NBR END, CASE WHEN FEB_AR_INV_NBR = @invoice_number THEN NULL ELSE FEB_AR_INV_SEQ END,
					CASE WHEN FEB_AR_INV_NBR = @invoice_number THEN NULL ELSE FEB_AR_TYPE END,
					FEB_CMP_UPD_INV, FEB_CMP_UPD_PP,
					MAR_LINE_NET, MAR_COMM_AMT, MAR_REBATE_AMT, MAR_DISCOUNT, MAR_VENDOR_TAX, MAR_STATE_TAX, MAR_COUNTY_TAX, MAR_CITY_TAX, MAR_SPOTS, MAR_BILLING_AMT,
					CASE WHEN MAR_AR_INV_NBR = @invoice_number THEN NULL ELSE MAR_AR_INV_NBR END, CASE WHEN MAR_AR_INV_NBR = @invoice_number THEN NULL ELSE MAR_AR_INV_SEQ END,
					CASE WHEN MAR_AR_INV_NBR = @invoice_number THEN NULL ELSE MAR_AR_TYPE END,
					MAR_CMP_UPD_INV, MAR_CMP_UPD_PP,
					APR_LINE_NET, APR_COMM_AMT, APR_REBATE_AMT, APR_DISCOUNT, APR_VENDOR_TAX, APR_STATE_TAX, APR_COUNTY_TAX, APR_CITY_TAX, APR_SPOTS, APR_BILLING_AMT,
					CASE WHEN APR_AR_INV_NBR = @invoice_number THEN NULL ELSE APR_AR_INV_NBR END, CASE WHEN APR_AR_INV_NBR = @invoice_number THEN NULL ELSE APR_AR_INV_SEQ END,
					CASE WHEN APR_AR_INV_NBR = @invoice_number THEN NULL ELSE APR_AR_TYPE END,
					APR_CMP_UPD_INV, APR_CMP_UPD_PP,
					MAY_LINE_NET, MAY_COMM_AMT, MAY_REBATE_AMT, MAY_DISCOUNT, MAY_VENDOR_TAX, MAY_STATE_TAX, MAY_COUNTY_TAX, MAY_CITY_TAX, MAY_SPOTS, MAY_BILLING_AMT,
					CASE WHEN MAY_AR_INV_NBR = @invoice_number THEN NULL ELSE MAY_AR_INV_NBR END, CASE WHEN MAY_AR_INV_NBR = @invoice_number THEN NULL ELSE MAY_AR_INV_SEQ END,
					CASE WHEN MAY_AR_INV_NBR = @invoice_number THEN NULL ELSE MAY_AR_TYPE END,
					MAY_CMP_UPD_INV, MAY_CMP_UPD_PP,
					JUN_LINE_NET, JUN_COMM_AMT, JUN_REBATE_AMT, JUN_DISCOUNT, JUN_VENDOR_TAX, JUN_STATE_TAX, JUN_COUNTY_TAX, JUN_CITY_TAX, JUN_SPOTS, JUN_BILLING_AMT,
					CASE WHEN JUN_AR_INV_NBR = @invoice_number THEN NULL ELSE JUN_AR_INV_NBR END, CASE WHEN JUN_AR_INV_NBR = @invoice_number THEN NULL ELSE JUN_AR_INV_SEQ END,
					CASE WHEN JUN_AR_INV_NBR = @invoice_number THEN NULL ELSE JUN_AR_TYPE END,
					JUN_CMP_UPD_INV, JUN_CMP_UPD_PP,
					JUL_LINE_NET, JUL_COMM_AMT, JUL_REBATE_AMT, JUL_DISCOUNT, JUL_VENDOR_TAX, JUL_STATE_TAX, JUL_COUNTY_TAX, JUL_CITY_TAX, JUL_SPOTS, JUL_BILLING_AMT,
					CASE WHEN JUL_AR_INV_NBR = @invoice_number THEN NULL ELSE JUL_AR_INV_NBR END, CASE WHEN JUL_AR_INV_NBR = @invoice_number THEN NULL ELSE JUL_AR_INV_SEQ END,
					CASE WHEN JUL_AR_INV_NBR = @invoice_number THEN NULL ELSE JUL_AR_TYPE END,
					JUL_CMP_UPD_INV, JUL_CMP_UPD_PP,
					AUG_LINE_NET, AUG_COMM_AMT, AUG_REBATE_AMT, AUG_DISCOUNT, AUG_VENDOR_TAX, AUG_STATE_TAX, AUG_COUNTY_TAX, AUG_CITY_TAX, AUG_SPOTS, AUG_BILLING_AMT,
					CASE WHEN AUG_AR_INV_NBR = @invoice_number THEN NULL ELSE AUG_AR_INV_NBR END, CASE WHEN AUG_AR_INV_NBR = @invoice_number THEN NULL ELSE AUG_AR_INV_SEQ END,
					CASE WHEN AUG_AR_INV_NBR = @invoice_number THEN NULL ELSE AUG_AR_TYPE END,
					AUG_CMP_UPD_INV, AUG_CMP_UPD_PP,
					SEP_LINE_NET, SEP_COMM_AMT, SEP_REBATE_AMT, SEP_DISCOUNT, SEP_VENDOR_TAX, SEP_STATE_TAX, SEP_COUNTY_TAX, SEP_CITY_TAX, SEP_SPOTS, SEP_BILLING_AMT,
					CASE WHEN SEP_AR_INV_NBR = @invoice_number THEN NULL ELSE SEP_AR_INV_NBR END, CASE WHEN SEP_AR_INV_NBR = @invoice_number THEN NULL ELSE SEP_AR_INV_SEQ END,
					CASE WHEN SEP_AR_INV_NBR = @invoice_number THEN NULL ELSE SEP_AR_TYPE END,
					SEP_CMP_UPD_INV, SEP_CMP_UPD_PP,
					OCT_LINE_NET, OCT_COMM_AMT, OCT_REBATE_AMT, OCT_DISCOUNT, OCT_VENDOR_TAX, OCT_STATE_TAX, OCT_COUNTY_TAX, OCT_CITY_TAX, OCT_SPOTS, OCT_BILLING_AMT,
					CASE WHEN OCT_AR_INV_NBR = @invoice_number THEN NULL ELSE OCT_AR_INV_NBR END, CASE WHEN OCT_AR_INV_NBR = @invoice_number THEN NULL ELSE OCT_AR_INV_SEQ END,
					CASE WHEN OCT_AR_INV_NBR = @invoice_number THEN NULL ELSE OCT_AR_TYPE END,
					OCT_CMP_UPD_INV, OCT_CMP_UPD_PP,
					NOV_LINE_NET, NOV_COMM_AMT, NOV_REBATE_AMT, NOV_DISCOUNT, NOV_VENDOR_TAX, NOV_STATE_TAX, NOV_COUNTY_TAX, NOV_CITY_TAX, NOV_SPOTS, NOV_BILLING_AMT,
					CASE WHEN NOV_AR_INV_NBR = @invoice_number THEN NULL ELSE NOV_AR_INV_NBR END, CASE WHEN NOV_AR_INV_NBR = @invoice_number THEN NULL ELSE NOV_AR_INV_SEQ END,
					CASE WHEN NOV_AR_INV_NBR = @invoice_number THEN NULL ELSE NOV_AR_TYPE END,
					NOV_CMP_UPD_INV, NOV_CMP_UPD_PP,
					DEC_LINE_NET, DEC_COMM_AMT, DEC_REBATE_AMT, DEC_DISCOUNT, DEC_VENDOR_TAX, DEC_STATE_TAX, DEC_COUNTY_TAX, DEC_CITY_TAX, DEC_SPOTS, DEC_BILLING_AMT,
					CASE WHEN DEC_AR_INV_NBR = @invoice_number THEN NULL ELSE DEC_AR_INV_NBR END, CASE WHEN DEC_AR_INV_NBR = @invoice_number THEN NULL ELSE DEC_AR_INV_SEQ END,
					CASE WHEN DEC_AR_INV_NBR = @invoice_number THEN NULL ELSE DEC_AR_TYPE END,
					DEC_CMP_UPD_INV, DEC_CMP_UPD_PP, CASE WHEN AR_INV_NBR = @invoice_number THEN NULL ELSE AR_INV_NBR END, CASE WHEN AR_INV_NBR = @invoice_number THEN NULL ELSE AR_INV_SEQ END,
					CASE WHEN AR_INV_NBR = @invoice_number THEN NULL ELSE AR_TYPE END 
					FROM dbo.TV_DETAIL1
					WHERE
						ORDER_NBR = @order_nbr
					AND	LINE_NBR = @line_nbr
					AND	REV_NBR = @rev_nbr
					AND SEQ_NBR = @seq_nbr
					AND BRDCAST_YEAR = @brdcast_year
					
					INSERT  INTO dbo.TV_SPOTS ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					BRDCAST_YEAR, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, WEEKS, SPOTS_WK1, SPOTS_WK2, SPOTS_WK3, SPOTS_WK4, SPOTS_WK5, SPOTS_WK6, SPOTS_WK7, SPOTS_WK8, SPOTS_WK9, SPOTS_WK10,
					SPOTS_WK11, SPOTS_WK12, SPOTS_WK13, SPOTS_WK14, SPOTS_WK15, SPOTS_WK16, SPOTS_WK17, SPOTS_WK18, SPOTS_WK19, SPOTS_WK20, SPOTS_WK21, SPOTS_WK22, SPOTS_WK23, SPOTS_WK24, SPOTS_WK25, SPOTS_WK26,
					SPOTS_WK27, SPOTS_WK28, SPOTS_WK29, SPOTS_WK30, SPOTS_WK31, SPOTS_WK32, SPOTS_WK33, SPOTS_WK34, SPOTS_WK35, SPOTS_WK36, SPOTS_WK37, SPOTS_WK38, SPOTS_WK39, SPOTS_WK40, SPOTS_WK41, SPOTS_WK42,
					SPOTS_WK43, SPOTS_WK44, SPOTS_WK45, SPOTS_WK46, SPOTS_WK47, SPOTS_WK48, SPOTS_WK49, SPOTS_WK50, SPOTS_WK51, SPOTS_WK52, SPOTS_WK53 )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.TV_SPOTS WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year),
					BRDCAST_YEAR, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY, WEEKS, SPOTS_WK1, SPOTS_WK2, SPOTS_WK3, SPOTS_WK4, SPOTS_WK5, SPOTS_WK6, SPOTS_WK7, SPOTS_WK8, SPOTS_WK9, SPOTS_WK10,
					SPOTS_WK11, SPOTS_WK12, SPOTS_WK13, SPOTS_WK14, SPOTS_WK15, SPOTS_WK16, SPOTS_WK17, SPOTS_WK18, SPOTS_WK19, SPOTS_WK20, SPOTS_WK21, SPOTS_WK22, SPOTS_WK23, SPOTS_WK24, SPOTS_WK25, SPOTS_WK26,
					SPOTS_WK27, SPOTS_WK28, SPOTS_WK29, SPOTS_WK30, SPOTS_WK31, SPOTS_WK32, SPOTS_WK33, SPOTS_WK34, SPOTS_WK35, SPOTS_WK36, SPOTS_WK37, SPOTS_WK38, SPOTS_WK39, SPOTS_WK40, SPOTS_WK41, SPOTS_WK42,
					SPOTS_WK43, SPOTS_WK44, SPOTS_WK45, SPOTS_WK46, SPOTS_WK47, SPOTS_WK48, SPOTS_WK49, SPOTS_WK50, SPOTS_WK51, SPOTS_WK52, SPOTS_WK53
					FROM dbo.TV_SPOTS 
					WHERE ORDER_NBR = @order_nbr
					AND LINE_NBR = @line_nbr 
					AND REV_NBR = @rev_nbr 
					AND SEQ_NBR = @seq_nbr 
					AND BRDCAST_YEAR = @brdcast_year
					
					INSERT  INTO dbo.TV_DETAIL2 ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR,
					BRDCAST_YEAR, APPLYLN1, APPLYLN2, APPLYLN3, APPLYLN4, APPLYLN5, APPLYLN6, APPLYLN7, APPLYLN8, DISC1, DISC2, DISC3, DISC4, DISC5, DISC6, DISC7, DISC8, DISC1DESC, DISC2DESC, DISC3DESC, DISC4DESC, DISC5DESC,
					DISC6DESC, DISC7DESC, DISC8DESC, NCDESC1, NCDESC2, NCDESC3, NCDESC4, NCDESC5, NCDESC6, NETCHARGE1, NETCHARGE2, NETCHARGE3, NETCHARGE4, NETCHARGE5, NETCHARGE6, CLOSE_INFO, HOUSE_COMMENT, MATL_NOTES, MISC_INFO,
					ORDER_COMMENT, POSITION_INFO, RATE_INFO )
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.TV_DETAIL2 WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year),
					BRDCAST_YEAR, APPLYLN1, APPLYLN2, APPLYLN3, APPLYLN4, APPLYLN5, APPLYLN6, APPLYLN7, APPLYLN8, DISC1, DISC2, DISC3, DISC4, DISC5, DISC6, DISC7, DISC8, DISC1DESC, DISC2DESC, DISC3DESC, DISC4DESC, DISC5DESC,
					DISC6DESC, DISC7DESC, DISC8DESC, NCDESC1, NCDESC2, NCDESC3, NCDESC4, NCDESC5, NCDESC6, NETCHARGE1, NETCHARGE2, NETCHARGE3, NETCHARGE4, NETCHARGE5, NETCHARGE6, CLOSE_INFO, HOUSE_COMMENT, MATL_NOTES, MISC_INFO,
					ORDER_COMMENT, POSITION_INFO, RATE_INFO
					FROM dbo.TV_DETAIL2
					WHERE ORDER_NBR = @order_nbr
					AND LINE_NBR = @line_nbr 
					AND REV_NBR = @rev_nbr 
					AND SEQ_NBR = @seq_nbr 
					AND BRDCAST_YEAR = @brdcast_year 
					
					INSERT INTO dbo.TV_GL ( ORDER_NBR, LINE_NBR, REV_NBR, SEQ_NBR, BRDCAST_YEAR)
					SELECT
					ORDER_NBR, LINE_NBR, REV_NBR, (SELECT MAX(SEQ_NBR) + 1 FROM dbo.TV_GL WHERE ORDER_NBR=@order_nbr AND LINE_NBR=@line_nbr AND REV_NBR=@rev_nbr AND BRDCAST_YEAR=@brdcast_year), BRDCAST_YEAR
					FROM dbo.TV_GL
					WHERE ORDER_NBR = @order_nbr
					AND LINE_NBR = @line_nbr 
					AND REV_NBR = @rev_nbr 
					AND SEQ_NBR = @seq_nbr 
					AND BRDCAST_YEAR = @brdcast_year 

					END
					
					FETCH NEXT FROM @tv_detail1 INTO @order_nbr, @line_nbr, @brdcast_year, @rev_nbr, @seq_nbr
					
				END
				
				CLOSE @tv_detail1
				DEALLOCATE @tv_detail1
				
			END
			-- STOP TV_DETAIL1
						
			UPDATE dbo.BILL_APPR_HDR SET AR_INV_NBR = NULL, INVOICE_DATE = NULL
			WHERE AR_INV_NBR = @invoice_number

		COMMIT TRAN
		
		SELECT '' AS ErrorMessage

		GOTO END_IT

		ERROR_MSG:
			BEGIN
		
				SELECT 'PROCESS ERROR CONTROL'  /* DEBUG */	
			
				RAISERROR (@return_msg,
				 16,
				 1 )    
			
			END
		
		END_IT:
	END TRY
	BEGIN CATCH
	
		ROLLBACK TRAN
		
		SELECT 
        --ERROR_NUMBER() as ErrorNumber,
        ERROR_MESSAGE() as ErrorMessage;
        
	END CATCH
GO
GRANT EXECUTE ON [advsp_ar_void_client_invoice] TO PUBLIC AS dbo
GO