IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[advsp_proofing_can_markup]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[advsp_proofing_can_markup];
END
GO
CREATE PROCEDURE [dbo].[advsp_proofing_can_markup] 
@ALERT_ID INT,
@EMP_CODE VARCHAR(6),
@DOCUMENT_ID INT
AS
/*=========== QUERY ===========*/
BEGIN
	-- VARS
	BEGIN
		DECLARE
			@IS_COMPLETE BIT = 0,
			@EMP_EXISTS BIT = 0,
			@IS_TERMINATED BIT = 0,
			@IS_PROOF BIT = 0,
			@CAN_MARKUP BIT = 0,
			@CAN_SET_STATUS BIT = 0,
			@IS_ROUTED BIT = 0,
			@USER_TYPE SMALLINT = 0, -- 1 = INTERNAL REVIEWER, 2 = INTERNAL CC, 3 = INTERNAL @MENTION, 4 = EXTERNAL REVIEWER
			@IS_LATEST_DOCUMENT BIT = 0,
			@ERROR_MESSAGE VARCHAR(MAX)
		;
		DECLARE
			@CAN_SET_STATUS_TABLE TABLE(CAN_SET_STATUS BIT);
	END
	-- INIT
	BEGIN
		SELECT
			@IS_COMPLETE =
				CASE
					WHEN A.ASSIGN_COMPLETED IS NOT NULL AND A.ASSIGN_COMPLETED = 1 THEN 1
					ELSE 0
				END,
			@IS_PROOF =
				CASE
					WHEN A.ALERT_CAT_ID = 79 THEN 1
					ELSE 0
				END,
			@IS_ROUTED =
				CASE
					WHEN A.ALERT_STATE_ID IS NOT NULL AND A.ALERT_STATE_ID > 0 THEN 1
					ELSE 0
				END
		FROM
			ALERT A WITH(NOLOCK)
		WHERE
			A.ALERT_ID = @ALERT_ID
		;
		IF @IS_COMPLETE = 0
		BEGIN
			SELECT 
				@IS_LATEST_DOCUMENT = A.IsLatestDocument
			FROM
				[dbo].[advtf_proofing_get_documents_details] (@ALERT_ID) AS A
			WHERE
				A.DocumentID = @DOCUMENT_ID
			;
		END
		IF @IS_LATEST_DOCUMENT = 1
		BEGIN
			IF EXISTS (SELECT EMP_CODE FROM EMPLOYEE_CLOAK E WITH(NOLOCK) WHERE E.EMP_CODE = @EMP_CODE)
			BEGIN
				SELECT @EMP_EXISTS = 1;
			END
			ELSE
			BEGIN
				SELECT 
					@EMP_EXISTS = 0,
					@ERROR_MESSAGE = 'Employee does not exist.'
				;
			END
			IF @EMP_EXISTS = 1
			BEGIN
				SELECT
					@IS_TERMINATED =	CASE
											WHEN E.EMP_TERM_DATE IS NOT NULL THEN 1
											ELSE 0
										END
				FROM
					EMPLOYEE_CLOAK E WITH(NOLOCK)
				WHERE
					E.EMP_CODE = @EMP_CODE
				;
				IF @IS_TERMINATED = 1
				BEGIN
					SELECT @ERROR_MESSAGE = 'Employee terminated.';
				END
			END
			ELSE
			BEGIN
				SELECT 
					@IS_TERMINATED = 1,
					@ERROR_MESSAGE = 'Employee terminated.'
				;
			END
			IF @EMP_EXISTS = 1 AND @IS_TERMINATED = 0
			BEGIN
				INSERT INTO @CAN_SET_STATUS_TABLE(CAN_SET_STATUS)
				EXEC [dbo].[advsp_proofing_can_set_status] @ALERT_ID, @EMP_CODE, @DOCUMENT_ID;
				SELECT 
					@CAN_SET_STATUS = ISNULL(C.CAN_SET_STATUS, 0) 
				FROM 
					@CAN_SET_STATUS_TABLE C
				;
			END
			ELSE
			BEGIN
				SELECT @CAN_SET_STATUS = 0;
			END
		END
		ELSE
		BEGIN
			SELECT 
				@CAN_MARKUP = 0,
				@ERROR_MESSAGE = 'Cannot markup this version'
			;
		END
	END
	-- GET USER TYPES
	BEGIN
		-- INTERNAL REVIEWER?  (@USER_TYPE = 1)
		IF EXISTS	(
			SELECT R.EMP_CODE
			FROM
				ALERT_RCPT R WITH(NOLOCK)
			WHERE
				R.ALERT_ID = @ALERT_ID
				AND R.EMP_CODE = @EMP_CODE
				AND R.CURRENT_NOTIFY IS NOT NULL 
				AND R.CURRENT_NOTIFY = 1
			UNION
			SELECT R.EMP_CODE
			FROM
				ALERT_RCPT_DISMISSED R WITH(NOLOCK)
			WHERE
				R.ALERT_ID = @ALERT_ID
				AND R.EMP_CODE = @EMP_CODE
				AND R.CURRENT_NOTIFY IS NOT NULL 
				AND R.CURRENT_NOTIFY = 1
					)
		BEGIN
			SELECT @USER_TYPE = 1; -- INTERNAL REVIEWER
		END
		--	CC? (@USER_TYPE = 2)
		IF @USER_TYPE = 0
		BEGIN
			IF EXISTS	(
							SELECT R.EMP_CODE
							FROM
								ALERT_RCPT R WITH(NOLOCK)
							WHERE
								R.ALERT_ID = @ALERT_ID
								AND R.EMP_CODE = @EMP_CODE
								AND (R.CURRENT_NOTIFY IS NULL OR R.CURRENT_NOTIFY = 0)
							UNION
							SELECT R.EMP_CODE
							FROM
								ALERT_RCPT_DISMISSED R WITH(NOLOCK)
							WHERE
								R.ALERT_ID = @ALERT_ID
								AND R.EMP_CODE = @EMP_CODE
								AND (R.CURRENT_NOTIFY IS NULL OR R.CURRENT_NOTIFY = 0)
						)
			BEGIN
				SELECT @USER_TYPE = 2; -- INTERNAL CC
			END
		END
		--	@MENTION (@USER_TYPE = 3)
		IF @USER_TYPE = 0
		BEGIN
			IF EXISTS	(
							SELECT 1 FROM ALERT_COMMENT WHERE CAST(COMMENT AS VARCHAR(MAX)) LIKE '%data-code="' + @EMP_CODE + '"%'
							--SELECT AM.MENTION_EMP_CODE
							--FROM
							--	ALERT_MENTION AM WITH(NOLOCK)
							--WHERE
							--	AM.ALERT_ID = @ALERT_ID
							--	AND AM.MENTION_EMP_CODE = @EMP_CODE
						)
			BEGIN
				SELECT @USER_TYPE = 3; -- @MENTION
			END
		END
	END
	-- DECISION
	BEGIN
		IF @EMP_EXISTS = 0 
		   --OR @IS_TERMINATED = 1
		   OR @IS_COMPLETE = 1
		   OR @IS_LATEST_DOCUMENT = 0
		   OR @USER_TYPE = 0
		   OR @USER_TYPE = 2 
		   OR @USER_TYPE = 3
		BEGIN
			SELECT @CAN_MARKUP = 0;
		END
		ELSE
		BEGIN
			IF (@USER_TYPE = 1 AND @CAN_SET_STATUS = 1) 
			BEGIN
				SELECT @CAN_MARKUP = 1;
			END
		END
	END
	--	RETURN
	BEGIN
		SELECT [CanMarkup] = ISNULL(@CAN_MARKUP, 0);
	END
END
/*=========== QUERY ===========*/