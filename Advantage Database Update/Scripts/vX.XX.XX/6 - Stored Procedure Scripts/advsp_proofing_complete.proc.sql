IF EXISTS ( SELECT *
            FROM dbo.sysobjects
            WHERE id = OBJECT_ID(N'[dbo].[advsp_proofing_complete]')
                  AND 
                  OBJECTPROPERTY(id , N'IsProcedure') = 1
          ) 
    BEGIN
        DROP PROCEDURE [dbo].[advsp_proofing_complete];
END;
GO
CREATE PROCEDURE [dbo].[advsp_proofing_complete] 
@USER_CODE VARCHAR(100),
@ALERT_ID INT,
@EMP_CODE VARCHAR(6)
AS
/*=========== QUERY ===========*/
BEGIN
	-- VARIABLES
	BEGIN
		DECLARE
			@ALRT_NOTIFY_HDR_ID INT,
			@ALERT_STATE_ID INT,
			@ALERT_STATE_NAME VARCHAR(100),
			@IS_PROOF BIT,
			@IS_ROUTED BIT,
			@IS_COMPLETE BIT,
			@OPEN_RCPT INT,
			@OPEN_COUNTER INT,
			@MAX_RCPT_ID INT,
			@CURRENT_EMP_CODE VARCHAR(6),
			@CURRENT_NOTIFY INT,
			@RIGHT_NOW SMALLDATETIME,
			@EMP_FULL_NAME VARCHAR(100)
		;
		DECLARE
			@OPEN_RCPTS TABLE (ID INT IDENTITY NOT NULL, EMP_CODE VARCHAR(6), CURRENT_NOTIFY INT)
			;
	END
	--	INIT
	BEGIN
		SELECT
			@ALRT_NOTIFY_HDR_ID = A.ALRT_NOTIFY_HDR_ID,
			@ALERT_STATE_ID = A.ALERT_STATE_ID,
			@IS_ROUTED =
				CASE
					WHEN A.ALRT_NOTIFY_HDR_ID IS NOT NULL AND A.ALERT_STATE_ID IS NOT NULL THEN 1
					ELSE 0
				END,
			@IS_PROOF =
				CASE
					WHEN A.ALERT_CAT_ID = 79 THEN 1
					ELSE 0
				END,
			@IS_COMPLETE =
				CASE	
					WHEN A.ASSIGN_COMPLETED IS NOT NULL AND A.ASSIGN_COMPLETED = 1 THEN 1
					ELSE 0
				END,
			@ALERT_STATE_NAME = S.ALERT_STATE_NAME
		FROM	
			ALERT A WITH(NOLOCK)
			LEFT OUTER JOIN ALERT_STATES S WITH(NOLOCK) ON A.ALERT_STATE_ID = S.ALERT_STATE_ID
		WHERE
			A.ALERT_ID = @ALERT_ID
		;
		SELECT
			@OPEN_COUNTER = 0,
			@RIGHT_NOW = GETDATE()
		;
		IF @EMP_CODE IS NULL
		BEGIN
			SELECT TOP 1
				@EMP_FULL_NAME = EMP_CODE
			FROM
				SEC_USER SU WITH(NOLOCK)
			WHERE
				SU.USER_CODE = @USER_CODE
		END
		IF @EMP_CODE IS NOT NULL
		BEGIN
			SELECT
				@EMP_FULL_NAME = ISNULL(E.EMP_FNAME + ' ', '') + ISNULL(E.EMP_MI + '. ','') + ISNULL(E.EMP_LNAME, '')
			FROM
				EMPLOYEE_CLOAK E WITH(NOLOCK)
			WHERE
				E.EMP_CODE = @EMP_CODE
			;
		END
	END
	--  ONLY RUN IF PROOF AND NOT ALREADY COMPLETE
	IF @IS_PROOF = 1 AND @IS_COMPLETE = 0
	BEGIN
		-- COMPLETE ALL EMP ASSIGNEES AND CC's
		BEGIN	
			INSERT INTO @OPEN_RCPTS(EMP_CODE, CURRENT_NOTIFY)
			SELECT
				R.EMP_CODE, ISNULL(R.CURRENT_NOTIFY, 0)
			FROM
				ALERT_RCPT R WITH(NOLOCK)
			WHERE
				R.ALERT_ID = @ALERT_ID
			;
			SELECT
				@OPEN_RCPT = COUNT(1)
			FROM
				@OPEN_RCPTS R
			;
			IF @OPEN_RCPT IS NOT NULL AND @OPEN_RCPT > 0
			BEGIN
				WHILE @OPEN_RCPT > @OPEN_COUNTER
				BEGIN
					SELECT @OPEN_COUNTER = @OPEN_COUNTER + 1;
					SELECT
						@CURRENT_EMP_CODE = NULL,
						@CURRENT_NOTIFY = 0,
						@MAX_RCPT_ID = NULL
					;
					SELECT
						@CURRENT_EMP_CODE = O.EMP_CODE,
						@CURRENT_NOTIFY = ISNULL(O.CURRENT_NOTIFY, 0)
					FROM
						@OPEN_RCPTS O
					WHERE
						O.ID = @OPEN_COUNTER
					;
					IF NOT EXISTS (	SELECT 1 
									FROM ALERT_RCPT_DISMISSED D WITH(NOLOCK)
									WHERE D.ALERT_ID = @ALERT_ID AND D.EMP_CODE = @CURRENT_EMP_CODE AND ISNULL(D.CURRENT_NOTIFY, 0) = @CURRENT_NOTIFY)
					BEGIN

						SELECT @MAX_RCPT_ID = MAX(ALERT_RCPT_ID) FROM ALERT_RCPT_DISMISSED D WITH(NOLOCK);
						SELECT @MAX_RCPT_ID = ISNULL(@MAX_RCPT_ID, 0) + 1;
						INSERT INTO ALERT_RCPT_DISMISSED WITH(ROWLOCK) (ALERT_ID, 
																		ALERT_RCPT_ID, 
																		EMP_CODE, 
																		EMAIL_ADDRESS,
																		PROCESSED, 
																		NEW_ALERT, 
																		READ_ALERT, 
																		CURRENT_RCPT, 
																		CURRENT_NOTIFY, 
																		CARD_SEQ_NBR, 
																		CS_IS_REVIEWER, 
																		IS_DELETED, 
																		ALRT_NOTIFY_HDR_ID, 
																		ALERT_STATE_ID, 
																		PERC_COMPLETE, 
																		COMPLETED_DATE, 
																		TEMP_COMP_DATE, 
																		HOURS_ALLOWED, 
																		LAST_ASSIGNED, 
																		PROOFING_STATUS_ID)
						SELECT
							@ALERT_ID,
							@MAX_RCPT_ID,
							@CURRENT_EMP_CODE,
							E.EMP_EMAIL,
							@RIGHT_NOW,
							NULL,
							1,
							R.CURRENT_RCPT,
							@CURRENT_NOTIFY,
							R.CARD_SEQ_NBR,
							R.CS_IS_REVIEWER,
							R.IS_DELETED,
							@ALRT_NOTIFY_HDR_ID,
							@ALERT_STATE_ID,
							100,
							@RIGHT_NOW,
							@RIGHT_NOW,
							R.HOURS_ALLOWED,
							R.LAST_ASSIGNED,
							NULL
						FROM
							ALERT_RCPT R WITH(NOLOCK)
							INNER JOIN EMPLOYEE_CLOAK E WITH(NOLOCK) ON R.EMP_CODE = E.EMP_CODE
						WHERE
							R.ALERT_ID = @ALERT_ID
							AND R.EMP_CODE = @CURRENT_EMP_CODE
							AND ISNULL(R.CURRENT_NOTIFY, 0) = ISNULL(@CURRENT_NOTIFY, 0)
						;
					END
					ELSE
					BEGIN
						UPDATE ALERT_RCPT_DISMISSED SET	ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID,
														ALERT_STATE_ID = @ALERT_STATE_ID,
														PERC_COMPLETE = 100,
														COMPLETED_DATE = @RIGHT_NOW,
														TEMP_COMP_DATE = @RIGHT_NOW
		
						WHERE
							ALERT_ID = @ALERT_ID
							AND EMP_CODE = @CURRENT_EMP_CODE
							AND ISNULL(CURRENT_NOTIFY, 0) = ISNULL(@CURRENT_NOTIFY, 0)
						;
					END
					DELETE FROM ALERT_RCPT WITH(ROWLOCK)
					WHERE
						ALERT_ID = @ALERT_ID
						AND EMP_CODE = @CURRENT_EMP_CODE
						AND ISNULL(CURRENT_NOTIFY, 0) = ISNULL(@CURRENT_NOTIFY, 0)
					;
				END
			END
		END
		---- COMPLETE EXTERNAL
		--BEGIN
		--	PRINT 'EXTERNALS'
		--END
		-- COMPLETE ASSIGNMENT
		BEGIN
			UPDATE ALERT WITH(ROWLOCK) 
			SET ASSIGN_COMPLETED = 1
			WHERE
				ALERT_ID = @ALERT_ID
			;
		END
		-- UPDATE CUSTODY
		BEGIN
			UPDATE ALERT_COMMENT
			SET CUSTODY_END = @RIGHT_NOW
			WHERE
				ALERT_ID = @ALERT_ID
				--AND ASSIGNED_EMP_CODE = @EMP_CODE
                AND CUSTODY_START IS NOT NULL
				AND CUSTODY_END IS NULL
				AND DOCUMENT_ID IS NOT NULL
				AND COMMENT NOT LIKE 'COMPLETED%';
		END				
		-- COMPLETED COMMENT
		BEGIN
			INSERT INTO ALERT_COMMENT (	ALERT_ID, 
										USER_CODE, 
										GENERATED_DATE, 
										COMMENT, 
										EMAILSENT, 
										ALRT_NOTIFY_HDR_ID, 
										ALERT_STATE_ID, 
										CUSTODY_START, 
										ASSIGNED_EMP_CODE, 
										DOCUMENT_ID,
										IS_SYSTEM)
			SELECT 
				@ALERT_ID,
				@USER_CODE,
				@RIGHT_NOW,
				CASE
					WHEN @IS_ROUTED = 1 THEN 'COMPLETED | ' + UPPER(@ALERT_STATE_NAME) + ' | ' + @EMP_FULL_NAME
					ELSE 'COMPLETED | ' + @EMP_FULL_NAME
				END,
				0,
				@ALRT_NOTIFY_HDR_ID,
				@ALERT_STATE_ID,
				@RIGHT_NOW,
				@EMP_CODE,
				NULL,
				1
		END
	END
END
/*=========== QUERY ===========*/