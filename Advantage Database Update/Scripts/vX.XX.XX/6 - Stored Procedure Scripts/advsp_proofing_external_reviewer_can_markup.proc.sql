IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[advsp_proofing_external_reviewer_can_markup]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[advsp_proofing_external_reviewer_can_markup];
END
GO
CREATE PROCEDURE [dbo].[advsp_proofing_external_reviewer_can_markup] 
@ALERT_ID INT,
@PROOFING_EXTERNAL_REVIEWER_ID INT,
@DOCUMENT_ID INT
AS
/*=========== QUERY ===========*/
BEGIN
	-- VARS
	BEGIN
		DECLARE
			@XR_EXISTS BIT = 0,
			@IS_ACTIVE BIT = 1,
			@IS_PROOF BIT = 0,
			@CAN_MARKUP BIT = 0,
			@CAN_SET_STATUS BIT = 0,
			@IS_ROUTED BIT = 0,
			@USER_TYPE SMALLINT = 4, -- 1 = INTERNAL REVIEWER, 2 = INTERNAL CC, 3 = INTERNAL @MENTION, 4 = EXTERNAL REVIEWER
			@IS_LATEST_DOCUMENT BIT = 0,
			@IS_COMPLETE BIT = 0,
			@ERROR_MESSAGE VARCHAR(1000)
		;
		DECLARE
			@CAN_SET_STATUS_TABLE TABLE(CAN_SET_STATUS BIT);
	END
	-- INIT
	BEGIN
		-- EXISTS?
		IF EXISTS (SELECT ID FROM PROOFING_X_REVIEWER X WITH(NOLOCK) WHERE X.ID = @PROOFING_EXTERNAL_REVIEWER_ID)			
		BEGIN
			SELECT @XR_EXISTS = 1;
		END
		ELSE
		BEGIN
			SELECT 
				@XR_EXISTS = 0,
				@ERROR_MESSAGE = 'Reviewer does not exist.'
			;
		END


		---- ACTIVE?
		--IF @XR_EXISTS = 1
		--BEGIN
		--	SELECT
		--		@IS_ACTIVE =	CASE
		--								WHEN X.IS_ACTIVE IS NULL OR X.IS_ACTIVE = 1 THEN 1
		--								ELSE 0
		--							END
		--	FROM
		--		PROOFING_X_REVIEWER X WITH(NOLOCK)
		--	WHERE
		--		X.ID = @PROOFING_EXTERNAL_REVIEWER_ID
		--	;
		--	IF @IS_ACTIVE = 1
		--	BEGIN
		--		SELECT @ERROR_MESSAGE = 'Reviewer not active.';
		--	END
		--END
		--ELSE
		--BEGIN
		--	SELECT 
		--		@IS_ACTIVE = 1,
		--		@ERROR_MESSAGE = 'Reviewer not active.'
		--	;
		--END


		--BASE INFO
		BEGIN
			SELECT
				@IS_PROOF =
					CASE
						WHEN A.ALERT_CAT_ID = 79 THEN 1
						ELSE 0
					END,
				@IS_ROUTED =
					CASE
						WHEN A.ALERT_STATE_ID IS NOT NULL AND A.ALERT_STATE_ID > 0 THEN 1
						ELSE 0
					END,
				@IS_COMPLETE =
					CASE
						WHEN A.ASSIGN_COMPLETED IS NOT NULL AND A.ASSIGN_COMPLETED = 1 THEN 1
						ELSE 0
					END
			FROM
				ALERT A WITH(NOLOCK)
			WHERE
				A.ALERT_ID = @ALERT_ID
			;		
		END
		-- LATEST DOC
		BEGIN
			SELECT 
				@IS_LATEST_DOCUMENT = A.IsLatestDocument
			FROM
				[dbo].[advtf_proofing_get_documents_details] (@ALERT_ID) AS A
			WHERE
				A.DocumentID = @DOCUMENT_ID
			;
		END
		--  CAN SET STATUS
		IF @IS_COMPLETE = 0
		BEGIN
			IF @XR_EXISTS = 1 AND @IS_ACTIVE = 1
			BEGIN
				INSERT INTO @CAN_SET_STATUS_TABLE(CAN_SET_STATUS)
				EXEC [dbo].[advsp_proofing_external_reviewer_can_set_status] @ALERT_ID, @PROOFING_EXTERNAL_REVIEWER_ID, @DOCUMENT_ID;
				SELECT 
					@CAN_SET_STATUS = ISNULL(C.CAN_SET_STATUS, 0) 
				FROM 
					@CAN_SET_STATUS_TABLE C
				;
			END
			ELSE
			BEGIN
				SELECT @CAN_SET_STATUS = 0;
			END
		END
		-- IS AN EXTERNAL REVIEWER
		BEGIN
			IF EXISTS(SELECT 1 FROM ALERT_RCPT_X_REVIEWER AR WHERE AR.ALERT_ID = @ALERT_ID AND AR.PROOFING_EXTERNAL_REVIEWER_ID = @PROOFING_EXTERNAL_REVIEWER_ID)
			   OR EXISTS(SELECT 1 FROM ALERT_RCPT_X_REVIEWER_DISMISSED ARD WHERE ARD.ALERT_ID = @ALERT_ID AND ARD.PROOFING_EXTERNAL_REVIEWER_ID = @PROOFING_EXTERNAL_REVIEWER_ID)	
			BEGIN
				SELECT @USER_TYPE = 4;
			END
		END
	END
	-- DECISION
	BEGIN
		IF @XR_EXISTS = 0 
		   --OR @IS_ACTIVE = 0
		   OR @IS_COMPLETE = 1
		   OR @IS_LATEST_DOCUMENT = 0
		BEGIN
			SELECT @CAN_MARKUP = 0;
		END
		ELSE
		BEGIN
			IF (@USER_TYPE = 4 AND @CAN_SET_STATUS = 1)
			BEGIN
				SELECT @CAN_MARKUP = 1;
			END
		END
	END
	--	RETURN
	BEGIN
		SELECT
			[CanMarkup] = ISNULL(@CAN_MARKUP, 0);
	END
END
/*=========== QUERY ===========*/