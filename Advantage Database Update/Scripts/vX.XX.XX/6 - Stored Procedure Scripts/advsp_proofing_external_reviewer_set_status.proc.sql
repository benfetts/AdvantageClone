IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[advsp_proofing_external_reviewer_set_status]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[advsp_proofing_external_reviewer_set_status];
END
GO
CREATE PROCEDURE [dbo].[advsp_proofing_external_reviewer_set_status] 
@ALERT_ID INT = NULL,
@PROOFER_X_REVIEWER_ID INT = NULL,
@PROOFING_STATUS_ID INT = NULL,
@DOCUMENT_ID INT = NULL,
@UNSET BIT = NULL
AS
/*=========== QUERY ===========*/
BEGIN
	BEGIN
		DECLARE
			@ALRT_NOTIFY_HDR_ID INT,
			@ALERT_STATE_ID INT,
			@IS_ROUTED BIT,
			@OKAY_TO_EXECUTE BIT = 0,
			@CUSTODY_DATE SMALLDATETIME,
			@ALERT_STATE_NAME VARCHAR(500)
		;
	END
	--	CHECK OK TO EXECUTE
	IF @ALERT_ID IS NOT NULL AND @PROOFER_X_REVIEWER_ID IS NOT NULL AND @PROOFING_STATUS_ID IS NOT NULL AND (@UNSET IS NULL OR @UNSET = 0)
	BEGIN
		IF (@UNSET IS NULL OR @UNSET = 0) AND @PROOFING_STATUS_ID IS NOT NULL
		BEGIN
			IF EXISTS (
				SELECT ALERT_ID FROM ALERT_RCPT_X_REVIEWER XX WITH(NOLOCK) WHERE XX.ALERT_ID = @ALERT_ID AND XX.PROOFING_EXTERNAL_REVIEWER_ID = @PROOFER_X_REVIEWER_ID
				UNION
				SELECT ALERT_ID FROM ALERT_RCPT_X_REVIEWER_DISMISSED X WITH(NOLOCK) WHERE X.ALERT_ID = @ALERT_ID AND X.PROOFING_EXTERNAL_REVIEWER_ID = @PROOFER_X_REVIEWER_ID
			)
			BEGIN
				SELECT @OKAY_TO_EXECUTE = 1;
			END
		END
		IF @UNSET IS NOT NULL OR @UNSET = 1
		BEGIN
			SELECT @OKAY_TO_EXECUTE = 1;
		END
	END

	IF @OKAY_TO_EXECUTE = 1
	BEGIN
		-- BASE INFO
		BEGIN
			SELECT
				@ALRT_NOTIFY_HDR_ID = A.ALRT_NOTIFY_HDR_ID,
				@ALERT_STATE_ID = A.ALERT_STATE_ID,
				@IS_ROUTED =	CASE
									WHEN A.ALRT_NOTIFY_HDR_ID IS NOT NULL AND A.ALRT_NOTIFY_HDR_ID > 0 AND A.ALERT_STATE_ID IS NOT NULL AND A.ALERT_STATE_ID > 0 THEN 1
									ELSE 0
								END,
				@CUSTODY_DATE = GETDATE()
			FROM
				ALERT A WITH(NOLOCK)
			WHERE
				A.ALERT_ID = @ALERT_ID
			;
			IF @ALERT_STATE_ID IS NOT NULL
			BEGIN
				SELECT
					@ALERT_STATE_NAME = A.ALERT_STATE_NAME
				FROM
					ALERT_STATES A WITH(NOLOCK)
				WHERE
					A.ALERT_STATE_ID = @ALERT_STATE_ID
				;
			END

		END
		--  MARK APPROVE/DENY/DEFER
		IF @UNSET IS NULL OR @UNSET = 0
		BEGIN
			BEGIN
				DELETE
				FROM ALERT_RCPT_X_REVIEWER WITH(ROWLOCK)
				WHERE 
					ALERT_ID = @ALERT_ID 
					AND PROOFING_EXTERNAL_REVIEWER_ID = @PROOFER_X_REVIEWER_ID
				;
			END
			IF NOT EXISTS (	SELECT 1 
							FROM ALERT_RCPT_X_REVIEWER_DISMISSED X WITH(NOLOCK)
							WHERE 
								X.ALERT_ID = @ALERT_ID 
								AND X.PROOFING_EXTERNAL_REVIEWER_ID = @PROOFER_X_REVIEWER_ID)
			BEGIN
				INSERT INTO ALERT_RCPT_X_REVIEWER_DISMISSED WITH(ROWLOCK) (	ALERT_ID, 
																			PROOFING_EXTERNAL_REVIEWER_ID, 
																			ALRT_NOTIFY_HDR_ID, 
																			ALERT_STATE_ID, 
																			PROOFING_STATUS_ID)
				VALUES (@ALERT_ID, 
						@PROOFER_X_REVIEWER_ID, 
						@ALRT_NOTIFY_HDR_ID,
						@ALERT_STATE_ID,
						@PROOFING_STATUS_ID)
				;
			END
			ELSE
			BEGIN
				UPDATE ALERT_RCPT_X_REVIEWER_DISMISSED WITH(ROWLOCK)
				SET
					ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID,
					ALERT_STATE_ID = @ALERT_STATE_ID,
					PROOFING_STATUS_ID = @PROOFING_STATUS_ID
				WHERE
					ALERT_ID = @ALERT_ID
					AND PROOFING_EXTERNAL_REVIEWER_ID = @PROOFER_X_REVIEWER_ID
				;
			END
			-- PROOFING COMMENT
			BEGIN
				DECLARE
					@PROOFING_TEXT VARCHAR(256),
					@COMMENT VARCHAR(MAX),
					@X_REVIEWER_NAME VARCHAR(1000)
				SELECT
					@X_REVIEWER_NAME = X.[NAME]
				FROM
					PROOFING_X_REVIEWER X
				WHERE
					X.ID = @PROOFER_X_REVIEWER_ID
				;
				IF @PROOFING_STATUS_ID = 1
				BEGIN
					SELECT @PROOFING_TEXT = 'APPROVED';
				END
				IF @PROOFING_STATUS_ID = 2
				BEGIN
					SELECT @PROOFING_TEXT = 'REJECTED';
				END
				IF @PROOFING_STATUS_ID = 3
				BEGIN
					SELECT @PROOFING_TEXT = 'DEFERRED';
				END
				SELECT @COMMENT = 'EXTERNAL | ' + UPPER(@PROOFING_TEXT) + ' | ' + @X_REVIEWER_NAME
				--IF @IS_ROUTED = 1
				--BEGIN
				--	SELECT @COMMENT = UPPER(@ALERT_STATE_NAME) + ' | ' + UPPER(@PROOFING_TEXT) + ' | ' + @X_REVIEWER_NAME
				--END
				--ELSE
				--BEGIN
				--	SELECT @COMMENT = UPPER(@PROOFING_TEXT) + ' | ' + @X_REVIEWER_NAME
				--END
				INSERT INTO ALERT_COMMENT (ALERT_ID, GENERATED_DATE, COMMENT, EMAILSENT, ALRT_NOTIFY_HDR_ID, ALERT_STATE_ID, CUSTODY_START, PROOFING_X_REVIEWER_ID, PROOFING_STATUS_ID, DOCUMENT_ID)
				SELECT 
					@ALERT_ID,
					@CUSTODY_DATE,
					@COMMENT,
					0,
					@ALRT_NOTIFY_HDR_ID,
					@ALERT_STATE_ID,
					NULL,
					@PROOFER_X_REVIEWER_ID,
					@PROOFING_STATUS_ID,
					@DOCUMENT_ID
				;
			END
		END
		ELSE -- UNSET
		BEGIN
			BEGIN
				DELETE 
				FROM ALERT_RCPT_X_REVIEWER_DISMISSED WITH(ROWLOCK)
				WHERE
					ALERT_ID = @ALERT_ID
					AND PROOFING_EXTERNAL_REVIEWER_ID = @PROOFER_X_REVIEWER_ID
				;
			END
			BEGIN
				IF NOT EXISTS (	SELECT 1 
								FROM ALERT_RCPT_X_REVIEWER X WITH(NOLOCK)
								WHERE 
									X.ALERT_ID = @ALERT_ID 
									AND X.PROOFING_EXTERNAL_REVIEWER_ID = @PROOFER_X_REVIEWER_ID)
				BEGIN
					INSERT INTO ALERT_RCPT_X_REVIEWER WITH(ROWLOCK) (	ALERT_ID, 
																		PROOFING_EXTERNAL_REVIEWER_ID, 
																		ALRT_NOTIFY_HDR_ID, 
																		ALERT_STATE_ID, 
																		PROOFING_STATUS_ID)
					VALUES (@ALERT_ID, 
							@PROOFER_X_REVIEWER_ID, 
							@ALRT_NOTIFY_HDR_ID,
							@ALERT_STATE_ID,
							@PROOFING_STATUS_ID)
					;
				END
				ELSE
				BEGIN
					UPDATE ALERT_RCPT_X_REVIEWER WITH(ROWLOCK)
					SET
						ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID,
						ALERT_STATE_ID = @ALERT_STATE_ID,
						PROOFING_STATUS_ID = @PROOFING_STATUS_ID
					WHERE
						ALERT_ID = @ALERT_ID
						AND PROOFING_EXTERNAL_REVIEWER_ID = @PROOFER_X_REVIEWER_ID
					;
				END
			END
		END
	END
END
/*=========== QUERY ===========*/
