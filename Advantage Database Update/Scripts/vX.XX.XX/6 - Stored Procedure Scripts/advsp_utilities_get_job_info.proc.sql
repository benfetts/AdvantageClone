IF EXISTS (
		SELECT *
		FROM dbo.sysobjects
		WHERE id = object_id(N'[dbo].[advsp_utilities_get_job_info]')
			AND OBJECTPROPERTY(id, N'IsProcedure') = 1
		)
	DROP PROCEDURE [dbo].[advsp_utilities_get_job_info]
GO
CREATE PROCEDURE [dbo].[advsp_utilities_get_job_info] 
@JOB_NUMBER INT,
@JOB_COMPONENT_NBR SMALLINT,
@FOR_SCHEDULE BIT = NULL,
@OFFSET DECIMAL(9, 3)
AS
/*=========== QUERY ===========*/
BEGIN

	--IF @FOR_SCHEDULE IS NOT NULL AND @FOR_SCHEDULE = 1
	--BEGIN
	--	EXEC [dbo].[advsp_project_schedule_cmplt_sched_last_cpmlt] @JOB_NUMBER, @JOB_COMPONENT_NBR;
	--END

	SELECT 
		[JobNumber] = JOB_LOG.JOB_NUMBER ,
		[ComponentNumber] = JOB_COMPONENT.JOB_COMPONENT_NBR ,
		JOB_COMPONENT.JOB_COMP_DESC,
		[ComponentDescription] = JOB_COMPONENT.JOB_COMP_DESC,
		[ClientCode] = JOB_LOG.CL_CODE ,
		[Client] = CLIENT.CL_NAME ,
		[DivisionCode] = JOB_LOG.DIV_CODE ,
		[Division] = DIVISION.DIV_NAME ,
		[ProductCode] = JOB_LOG.PRD_CODE ,
		[Product] = PRODUCT.PRD_DESCRIPTION ,
		[ComponentDescription] = JOB_COMPONENT.JOB_COMP_DESC ,
		[JobTypeCode] = JOB_COMPONENT.JT_CODE ,
		[JobTypeDescription] = JOB_TYPE.JT_DESC ,
		[PercentComplete] = JOB_TRAFFIC.PERCENT_COMPLETE ,
		[TrafficComments] = JOB_TRAFFIC.TRF_COMMENTS ,
		[DueDate] = CASE @OFFSET
			WHEN 0
				THEN JOB_FIRST_USE_DATE
			ELSE ISNULL(DATEADD(mi, (CONVERT(INT, @OFFSET) * 60) + (@OFFSET - CONVERT(INT, @OFFSET)), JOB_FIRST_USE_DATE), JOB_FIRST_USE_DATE)
			END ,
		[StartDate] = CASE @OFFSET
			WHEN 0
				THEN START_DATE
			ELSE ISNULL(DATEADD(mi, (CONVERT(INT, @OFFSET) * 60) + (@OFFSET - CONVERT(INT, @OFFSET)), START_DATE), START_DATE)
			END ,
		[StatusCode] = TRF_CODE ,
		[Template] = IS_TEMPLATE ,
		[CalculateByPredecessor] = ISNULL(SCHEDULE_CALC, 0) ,
		[CompletedDate] = CASE @OFFSET
			WHEN 0
				THEN JOB_TRAFFIC.COMPLETED_DATE
			ELSE ISNULL(DATEADD(mi, (CONVERT(INT, @OFFSET) * 60) + (@OFFSET - CONVERT(INT, @OFFSET)), JOB_TRAFFIC.COMPLETED_DATE), JOB_TRAFFIC.COMPLETED_DATE)
			END ,
		[PostedHours] = (
			SELECT ISNULL(SUM(ETD.EMP_HOURS), 0)
			FROM EMP_TIME_DTL ETD
			INNER JOIN EMP_TIME AS ET
				ON ETD.ET_ID = ET.ET_ID
			LEFT JOIN ALERT AS A
				ON A.ALERT_ID = ETD.ALERT_ID
			WHERE ETD.ALERT_ID IS NOT NULL
				AND A.JOB_NUMBER = @JOB_NUMBER
				AND A.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
			),
		[ByStartDate] = ISNULL(TRF_SCHEDULE_BY, 0) ,
		[TotalTasks] = (
			SELECT ISNULL(COUNT(1), 0)
			FROM JOB_TRAFFIC_DET AS JTD WITH (NOLOCK)
			WHERE JTD.JOB_NUMBER = JOB_LOG.JOB_NUMBER
				AND JTD.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
			),
		[OpenTasks] = (
			SELECT ISNULL(COUNT(1), 0)
			FROM JOB_TRAFFIC_DET AS JTD WITH (NOLOCK)
			WHERE JTD.JOB_COMPLETED_DATE IS NULL
				AND JTD.JOB_NUMBER = JOB_LOG.JOB_NUMBER
				AND JTD.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
			),
		[ProjectedHours] = (
			SELECT ISNULL(SUM(HOURS_ALLOWED), 0)
			FROM JOB_TRAFFIC_DET_EMPS WITH (NOLOCK)
			WHERE JOB_NUMBER = JOB_LOG.JOB_NUMBER
				AND JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
			),
		[ActualEMPTaskHours] = (
			SELECT ISNULL(SUM(ETD.EMP_HOURS), 0)
			FROM EMP_TIME_DTL AS ETD
			WHERE ETD.JOB_NUMBER = JOB_LOG.JOB_NUMBER
				AND ETD.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
			)
	FROM 
		JOB_LOG
		INNER JOIN JOB_COMPONENT
			ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
		INNER JOIN CLIENT
			ON JOB_LOG.CL_CODE = CLIENT.CL_CODE
		INNER JOIN DIVISION
			ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		INNER JOIN PRODUCT
			ON PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
				AND PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		LEFT JOIN JOB_TYPE
			ON JOB_TYPE.JT_CODE = JOB_COMPONENT.JT_CODE
		LEFT JOIN JOB_TRAFFIC
			ON JOB_TRAFFIC.JOB_NUMBER = JOB_LOG.JOB_NUMBER
				AND JOB_TRAFFIC.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
	WHERE 
		JOB_LOG.JOB_NUMBER = @JOB_NUMBER
		AND JOB_COMPONENT.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
END
/*=========== QUERY ===========*/