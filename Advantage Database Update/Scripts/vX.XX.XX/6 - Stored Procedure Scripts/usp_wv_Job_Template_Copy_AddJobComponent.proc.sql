IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_Job_Template_Copy_AddJobComponent]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_Job_Template_Copy_AddJobComponent]
GO
CREATE PROCEDURE [dbo].[usp_wv_Job_Template_Copy_AddJobComponent]
@JOB_NBR INT,
@JobNo INT,
@JobComp INT,
@JobCompDesc VARCHAR(60),
@JOB_TMPLT_CODE VARCHAR(6),
@IncludeDates smallint,
@JT_CODE VARCHAR(10),
@AECode VARCHAR(6),
@JOB_COMPONENT_NBR INT OUTPUT,
@CREATE_DATE SMALLDATETIME,
@SELECTED_BUDGET DECIMAL(19,2),
@USER_ID VARCHAR(100)
AS
BEGIN
	SET NOCOUNT OFF
	DECLARE 
	@ERR INT,
	@NEXT_JOB_COMP_NBR INT,
	@PROD_MARKUP DECIMAL(11,3),
	@DFLT_TRF_SCHEDULE_BY SMALLINT,
	@EMAIL_GROUP VARCHAR(50),
	@CL_CODE VARCHAR(6),
	@DIV_CODE VARCHAR(6),
	@PRD_CODE VARCHAR(6),
	@CDP_CONTACT_ID int,
	@HAS_CONTACT_DTL int,
	@COPY_CONTACT int,
	@JOB_ALERT_GROUP VARCHAR(50),
	@Editable bit,
	@UDV_CODE varchar(100)
	
    SELECT @NEXT_JOB_COMP_NBR = ISNULL(MAX(JOB_COMPONENT_NBR),0) + 1 FROM JOB_COMPONENT WHERE JOB_NUMBER = @JOB_NBR 

	--Get Default markup
	SELECT
		@PROD_MARKUP = PRD_PROD_MARKUP
	FROM
		PRODUCT
		INNER JOIN JOB_LOG
		ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
	WHERE
		JOB_LOG.JOB_NUMBER = @JOB_NBR

	--Validate Alert Group
	SELECT @CL_CODE = CL_CODE, @DIV_CODE = DIV_CODE, @PRD_CODE = PRD_CODE
	FROM JOB_LOG
	WHERE JOB_NUMBER = @JOB_NBR

	SELECT DISTINCT @JOB_ALERT_GROUP = JOB_COMPONENT.EMAIL_GR_CODE
	FROM JOB_COMPONENT LEFT OUTER JOIN EMAIL_GROUP ON EMAIL_GROUP.EMAIL_GR_CODE = JOB_COMPONENT.EMAIL_GR_CODE
	WHERE JOB_NUMBER = @JobNo AND JOB_COMPONENT_NBR = @JobComp AND (EMAIL_GROUP.INACTIVE_FLAG = 0 OR EMAIL_GROUP.INACTIVE_FLAG IS NULL)
		
	--Get Default email group		
	SELECT
	    @EMAIL_GROUP = EMAIL_GR_CODE
	FROM
	    PRODUCT	
    WHERE
        CL_CODE = @CL_CODE AND
		DIV_CODE = @DIV_CODE AND
		PRD_CODE = @PRD_CODE

	SELECT @JOB_ALERT_GROUP

	IF @JOB_ALERT_GROUP IS NULL
	Begin
	 SET @JOB_ALERT_GROUP = @EMAIL_GROUP
	End

	SELECT @JOB_ALERT_GROUP
	    
	--Get Default TRF_SCHEDULE_BY
	SELECT @DFLT_TRF_SCHEDULE_BY = TRF_SCHEDULE_BY FROM AGENCY

	--Validate Client Contact
	SELECT @CDP_CONTACT_ID = CDP_CONTACT_ID
	FROM  JOB_COMPONENT
	WHERE (JOB_NUMBER = @JobNo) AND (JOB_COMPONENT_NBR = @JobComp)

	SET @HAS_CONTACT_DTL = 0

	SELECT @HAS_CONTACT_DTL = COUNT(1)
	FROM CDP_CONTACT_DTL
	WHERE CDP_CONTACT_ID = @CDP_CONTACT_ID

	IF @HAS_CONTACT_DTL = 0
	BEGIN
		SELECT @COPY_CONTACT = CASE WHEN COUNT(1) = 0 THEN -1 
               WHEN COUNT(1) > 0 THEN 1 END 
               FROM CDP_CONTACT_HDR WITH(NOLOCK)
               WHERE (CDP_CONTACT_ID = @CDP_CONTACT_ID) AND (CL_CODE = @CL_CODE)
	END
	ELSE
	BEGIN
		SELECT @COPY_CONTACT = CASE WHEN COUNT(1) = 0 THEN -1 
               WHEN COUNT(1) > 0 THEN 1 END 
               FROM CDP_CONTACT_HDR WITH(NOLOCK) INNER JOIN
                      CDP_CONTACT_DTL ON CDP_CONTACT_DTL.CDP_CONTACT_ID = CDP_CONTACT_HDR.CDP_CONTACT_ID
               WHERE (CDP_CONTACT_HDR.CDP_CONTACT_ID = @CDP_CONTACT_ID) AND (CL_CODE = @CL_CODE) AND (DIV_CODE = @DIV_CODE) AND (PRD_CODE = @PRD_CODE)
	END

	IF @COPY_CONTACT = -1
	BEGIN
		SET @CDP_CONTACT_ID = NULL
	END

    
    INSERT INTO [JOB_COMPONENT]
		(
			[JOB_NUMBER],
			[JOB_COMPONENT_NBR],
			[JOB_BILL_HOLD],
			[EMP_CODE],
			[JOB_COMP_DATE],
			[JOB_FIRST_USE_DATE],
			[START_DATE],
			[JOB_AD_SIZE],
			[JOB_SPEC_TYPE],
			[DP_TM_CODE],
			[JOB_MARKUP_PCT],
			[CREATIVE_INSTR],
			[JOB_LAYOUT_THUMB],
			[JOB_LAYOUT_ROUGH],
			[JOB_LAYOUT_COMP],
			[JOB_LAYOUT_NONE],
			[JOB_LAYOUT_SPECIAL],
			[JOB_LAYOUT_SPC_EXP],
			[JOB_PROCESS_CONTRL],
			[JOB_COMP_DESC],
			[JOB_COMP_COMMENTS],
			[JOB_COMP_BUDGET_AM],
			[ESTIMATE_NUMBER],
			[EST_COMPONENT_NBR],
			[BILLING_USER],
			[AB_FLAG],
			[JOB_DEL_INSTRUCT],
			[JT_CODE],
			[TAX_FLAG],
			[TAX_CODE],
			[NOBILL_FLAG],
			[EMAIL_GR_CODE],
			[AD_NBR],
			[ACCT_NBR],
			[PRD_AB_INCOME],
			[MARKET_CODE],
			[SERVICE_FEE_FLAG],
			[ARCHIVE_FLAG],
			[ADJUST_USER],
			[TRF_SCHEDULE_BY],
			[TRF_SCHEDULE_REQ],
			[JOB_CL_PO_NBR],
			[UDV1_CODE],
			[UDV2_CODE],
			[UDV3_CODE],
			[UDV4_CODE],
			[UDV5_CODE],
			[JOB_TMPLT_CODE],
			[FEE_TIME],
			[FISCAL_PERIOD_CODE],
			[JOB_QTY],
			[BLACKPLT_VER_CODE],
			[BLACKPLT_VER_DESC],
			[BLACKPLT_VER2_CODE],
			[BLACKPLT_VER2_DESC],
			[CDP_CONTACT_ID],
			[BA_BATCH_ID],
			[SELECTED_BA_ID],
			[BCC_ID],
			[ALRT_NOTIFY_HDR_ID],
			[SERVICE_FEE_TYPE_ID],
			[MEDIA_BILL_DATE],
			[JC_COMMENTS_HTML],
			[CREATIVE_INSTR_HTML],
			[JOB_DEL_INSTR_HTML],
			[MODIFY_DATE],
			[MODIFIED_BY]
			
		)
		SELECT     @JOB_NBR, @NEXT_JOB_COMP_NBR, JOB_BILL_HOLD, ISNULL(@AECode,EMP_CODE), @CREATE_DATE, JOB_FIRST_USE_DATE, START_DATE, JOB_AD_SIZE, JOB_SPEC_TYPE, DP_TM_CODE, @PROD_MARKUP, CREATIVE_INSTR, 
                      JOB_LAYOUT_THUMB, JOB_LAYOUT_ROUGH, JOB_LAYOUT_COMP, JOB_LAYOUT_NONE, JOB_LAYOUT_SPECIAL, JOB_LAYOUT_SPC_EXP, 1, @JobCompDesc,
					  JOB_COMP_COMMENTS, @SELECTED_BUDGET, NULL, NULL, BILLING_USER, AB_FLAG,	JOB_DEL_INSTRUCT, ISNULL(JT_CODE, @JT_CODE), NULL, NULL, NOBILL_FLAG, @JOB_ALERT_GROUP,
					  AD_NBR, ACCT_NBR, PRD_AB_INCOME, MARKET_CODE, SERVICE_FEE_FLAG, ARCHIVE_FLAG, ADJUST_USER, @DFLT_TRF_SCHEDULE_BY, TRF_SCHEDULE_REQ, NULL,
					  UDV1_CODE, UDV2_CODE, UDV3_CODE, UDV4_CODE, UDV5_CODE, @JOB_TMPLT_CODE, FEE_TIME, FISCAL_PERIOD_CODE, JOB_QTY, BLACKPLT_VER_CODE,
					  BLACKPLT_VER_DESC, BLACKPLT_VER2_CODE, BLACKPLT_VER2_DESC, @CDP_CONTACT_ID, BA_BATCH_ID, SELECTED_BA_ID, NULL, NULL, NULL, MEDIA_BILL_DATE,JC_COMMENTS_HTML,CREATIVE_INSTR_HTML,JOB_DEL_INSTR_HTML,
					  @CREATE_DATE, @USER_ID	  
		FROM       JOB_COMPONENT
		WHERE     (JOB_NUMBER = @JobNo) AND (JOB_COMPONENT_NBR = @JobComp)

	If @IncludeDates = 0
		Begin
			UPDATE JOB_COMPONENT
			SET JOB_FIRST_USE_DATE = NULL, START_DATE = NULL
			WHERE     (JOB_NUMBER = @JOB_NBR) AND (JOB_COMPONENT_NBR = @NEXT_JOB_COMP_NBR)
		End
			
		--SELECT @JOB_NBR, @NEXT_JOB_COMP_NBR
		SELECT @Editable = ISNULL(EDITABLE,0) FROM UDV_LABEL WHERE UDV_TABLE_NAME = 'JOB_CMP_UDV1'
		SELECT @UDV_CODE = (SELECT UDV1_CODE FROM JOB_COMPONENT WHERE (JOB_NUMBER = @JobNo) AND (JOB_COMPONENT_NBR = @JobComp))
		IF EXISTS(SELECT UDV1_CODE FROM JOB_COMPONENT WHERE (JOB_NUMBER = @JobNo) AND (JOB_COMPONENT_NBR = @JobComp)) AND @UDV_CODE IS NOT NULL AND @Editable = 1
		BEGIN
			if LEN(@JobComp) <= 2
			BEGIN
				INSERT INTO JOB_CMP_UDV1
				SELECT CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END, UDV_DESC, INACTIVE_FLAG
				FROM JOB_CMP_UDV1 
				WHERE (UDV_CODE = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JobNo), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @JobComp), 2))
			END
			ELSE
			BEGIN
				INSERT INTO JOB_CMP_UDV1
				SELECT CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END, UDV_DESC, INACTIVE_FLAG
				FROM JOB_CMP_UDV1 
				WHERE (UDV_CODE = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JobNo), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @JobComp), 3))
			END			

			UPDATE JOB_COMPONENT
			SET UDV1_CODE = CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END
			WHERE (JOB_NUMBER = @JOB_NBR AND JOB_COMPONENT_NBR = @NEXT_JOB_COMP_NBR)
		END

		SELECT @Editable = ISNULL(EDITABLE,0) FROM UDV_LABEL WHERE UDV_TABLE_NAME = 'JOB_CMP_UDV2'
		SELECT @UDV_CODE = (SELECT UDV2_CODE FROM JOB_COMPONENT WHERE (JOB_NUMBER = @JobNo) AND (JOB_COMPONENT_NBR = @JobComp))
		IF EXISTS(SELECT UDV2_CODE FROM JOB_COMPONENT WHERE (JOB_NUMBER = @JobNo) AND (JOB_COMPONENT_NBR = @JobComp)) AND @UDV_CODE IS NOT NULL AND @Editable = 1
		BEGIN
			if LEN(@JobComp) <= 2
			BEGIN
				INSERT INTO JOB_CMP_UDV2
				SELECT CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END, UDV_DESC, INACTIVE_FLAG
				FROM JOB_CMP_UDV2 
				WHERE (UDV_CODE = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JobNo), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @JobComp), 2))
			END
			ELSE
			BEGIN
				INSERT INTO JOB_CMP_UDV2
				SELECT CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END, UDV_DESC, INACTIVE_FLAG
				FROM JOB_CMP_UDV2 
				WHERE (UDV_CODE = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JobNo), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @JobComp), 3))
			END		

			UPDATE JOB_COMPONENT
			SET UDV2_CODE =  CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END
			WHERE (JOB_NUMBER = @JOB_NBR AND JOB_COMPONENT_NBR = @NEXT_JOB_COMP_NBR)
		END

		SELECT @Editable = ISNULL(EDITABLE,0) FROM UDV_LABEL WHERE UDV_TABLE_NAME = 'JOB_CMP_UDV3'
		SELECT @UDV_CODE = (SELECT UDV3_CODE FROM JOB_COMPONENT WHERE (JOB_NUMBER = @JobNo) AND (JOB_COMPONENT_NBR = @JobComp))
		IF EXISTS(SELECT UDV3_CODE FROM JOB_COMPONENT WHERE (JOB_NUMBER = @JobNo) AND (JOB_COMPONENT_NBR = @JobComp)) AND @UDV_CODE IS NOT NULL AND @Editable = 1
		BEGIN			
			if LEN(@JobComp) <= 2
			BEGIN
				INSERT INTO JOB_CMP_UDV3
				SELECT CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END, UDV_DESC, INACTIVE_FLAG
				FROM JOB_CMP_UDV3 
				WHERE (UDV_CODE = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JobNo), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @JobComp), 2))
			END
			ELSE
			BEGIN
				INSERT INTO JOB_CMP_UDV3
				SELECT CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END, UDV_DESC, INACTIVE_FLAG
				FROM JOB_CMP_UDV3 
				WHERE (UDV_CODE = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JobNo), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @JobComp), 3))
			END	

			UPDATE JOB_COMPONENT
			SET UDV3_CODE =  CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END
			WHERE (JOB_NUMBER = @JOB_NBR AND JOB_COMPONENT_NBR = @NEXT_JOB_COMP_NBR)
		END

		SELECT @Editable = ISNULL(EDITABLE,0) FROM UDV_LABEL WHERE UDV_TABLE_NAME = 'JOB_CMP_UDV4'
		SELECT @UDV_CODE = (SELECT UDV4_CODE FROM JOB_COMPONENT WHERE (JOB_NUMBER = @JobNo) AND (JOB_COMPONENT_NBR = @JobComp))
		IF EXISTS(SELECT UDV4_CODE FROM JOB_COMPONENT WHERE (JOB_NUMBER = @JobNo) AND (JOB_COMPONENT_NBR = @JobComp)) AND @UDV_CODE IS NOT NULL AND @Editable = 1
		BEGIN						
			if LEN(@JobComp) <= 2
			BEGIN
				INSERT INTO JOB_CMP_UDV4
				SELECT CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END, UDV_DESC, INACTIVE_FLAG
				FROM JOB_CMP_UDV4 
				WHERE (UDV_CODE = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JobNo), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @JobComp), 2))
			END
			ELSE
			BEGIN
				INSERT INTO JOB_CMP_UDV4
				SELECT CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END, UDV_DESC, INACTIVE_FLAG
				FROM JOB_CMP_UDV4 
				WHERE (UDV_CODE = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JobNo), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @JobComp), 3))
			END	

			UPDATE JOB_COMPONENT
			SET UDV4_CODE =  CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END
			WHERE (JOB_NUMBER = @JOB_NBR AND JOB_COMPONENT_NBR = @NEXT_JOB_COMP_NBR)
		END

		SELECT @Editable = ISNULL(EDITABLE,0) FROM UDV_LABEL WHERE UDV_TABLE_NAME = 'JOB_CMP_UDV5'
		SELECT @UDV_CODE = (SELECT UDV5_CODE FROM JOB_COMPONENT WHERE (JOB_NUMBER = @JobNo) AND (JOB_COMPONENT_NBR = @JobComp))
		IF EXISTS(SELECT UDV5_CODE FROM JOB_COMPONENT WHERE (JOB_NUMBER = @JobNo) AND (JOB_COMPONENT_NBR = @JobComp)) AND @UDV_CODE IS NOT NULL AND @Editable = 1
		BEGIN			
			if LEN(@JobComp) <= 2
			BEGIN
				INSERT INTO JOB_CMP_UDV5
				SELECT CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END, UDV_DESC, INACTIVE_FLAG
				FROM JOB_CMP_UDV5
				WHERE (UDV_CODE = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JobNo), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @JobComp), 2))
			END
			ELSE
			BEGIN
				INSERT INTO JOB_CMP_UDV5
				SELECT CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END, UDV_DESC, INACTIVE_FLAG
				FROM JOB_CMP_UDV5
				WHERE (UDV_CODE = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JobNo), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @JobComp), 3))
			END	

			UPDATE JOB_COMPONENT
			SET UDV5_CODE =  CASE WHEN LEN(@NEXT_JOB_COMP_NBR) <= 2 THEN RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 2) ELSE RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), @JOB_NBR), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), @NEXT_JOB_COMP_NBR), 3) END
			WHERE (JOB_NUMBER = @JOB_NBR AND JOB_COMPONENT_NBR = @NEXT_JOB_COMP_NBR)
		END

	SET @ERR = @@Error

	--RETURN @ERR
END

SELECT @JOB_COMPONENT_NBR = @NEXT_JOB_COMP_NBR;