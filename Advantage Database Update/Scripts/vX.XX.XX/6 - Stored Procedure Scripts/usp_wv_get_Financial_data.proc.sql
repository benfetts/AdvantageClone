SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_get_Financial_data]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_get_Financial_data]
GO


CREATE PROCEDURE [dbo].[usp_wv_get_Financial_data] 
@startPP	varchar(6),
@endPP	varchar(6),
@Office AS varchar(MAX) = NULL,
@USER_ID VARCHAR(100),
@Option smallint
AS

Set NoCount On

DECLARE @sql varchar(4000)
DECLARE @sql_where as varchar(2000)
DECLARE @SALES FLOAT
DECLARE @COS FLOAT
DECLARE @GI FLOAT
DECLARE @OP_EXP FLOAT
DECLARE @PAYROLL FLOAT
DECLARE @OVERHEAD FLOAT
DECLARE @OVERHEAD_CREDIT FLOAT
DECLARE @NET_PROFIT FLOAT
DECLARE @PCT VARCHAR(6)
DECLARE @PER DECIMAL(6,3)
DECLARE @TOTAL FLOAT
DECLARE @ACTUAL_PCT FLOAT
DECLARE @EMP_CODE AS VARCHAR(6)
DECLARE @COUNT AS INTEGER
DECLARE @START_DATE AS smalldatetime
DECLARE @END_DATE AS smalldatetime, @GLBudgetCode varchar(20), @PPStartYearPrior varchar(6), @PPEndYearPrior varchar(6), @START_DATE_PRIOR AS smalldatetime, @END_DATE_PRIOR AS smalldatetime, @YTD_Year int, @ClientEndPP varchar(6)
 DECLARE @MAXMONTH int, @BudgetCode varchar(20), @BudgetYear int

SELECT @EMP_CODE = EMP_CODE FROM SEC_USER WHERE UPPER(USER_CODE) = UPPER(@USER_ID)
SELECT @COUNT = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CODE

CREATE TABLE #FIN (
DESCR VARCHAR(20),
ACTUAL DECIMAL(20,3),
BUDGET DECIMAL(20,3),
VARIANCE DECIMAL(20,3),
MONTH_B DECIMAL(20,3),
YOY DECIMAL(20,3),
PP VARCHAR(6),
MTH INT,
YR INT,
PP_PRIOR VARCHAR(6),
MTH_PRIOR INT,
YR_PRIOR INT,
YR_NUMBER INT
)

CREATE TABLE #FIN_YTD (
DESCR VARCHAR(20),
ACTUAL DECIMAL(20,3),
BUDGET DECIMAL(20,3),
VARIANCE DECIMAL(20,3),
MONTH_B DECIMAL(20,3),
YOY DECIMAL(20,3),
PP VARCHAR(6),
MTH INT,
YR INT,
PP_PRIOR VARCHAR(6),
MTH_PRIOR INT,
YR_PRIOR INT
)

CREATE TABLE #FIN_CLIENT_YOY (
DESCR VARCHAR(20),
CL_CODE VARCHAR(6),
ACTUAL DECIMAL(20,3),
MONTH_B DECIMAL(20,3),
YOY DECIMAL(20,3),
PP VARCHAR(6),
MTH INT,
YR INT,
PP_PRIOR VARCHAR(6),
MTH_PRIOR INT,
YR_PRIOR INT,
YR_NUMBER INT
)

CREATE TABLE #FIN_CLIENT (
CLIENT VARCHAR(100) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
YR1 DECIMAL(20,3),
YR2 DECIMAL(20,3)
)

CREATE TABLE #FIN_CLIENT_TOTALS (
CLIENT VARCHAR(100) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
AMT DECIMAL(20,3),
YR INT
)

CREATE TABLE #FIN_CLIENT_CLIENTS (
CLIENT VARCHAR(100) COLLATE SQL_Latin1_General_CP1_CS_AS NULL
)

CREATE TABLE #FIN_CLIENT_GRID (
[Year] int
)

CREATE TABLE #FIN_CLIENT_FEES (
CLIENT VARCHAR(100) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
AMT DECIMAL(20,3),
AMT_PRIOR DECIMAL(20,3),
YR INT
)

CREATE TABLE #FIN_CLIENT_GROW (
CLIENT VARCHAR(100) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
AMT DECIMAL(20,3),
YEAR_B DECIMAL(20,3),
YOY DECIMAL(20,3),
GROWTH DECIMAL(20,3)
)


CREATE TABLE #TMP (
GLCODE VARCHAR(30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
GLTYPE VARCHAR(2),
GLDESC VARCHAR(75),
DESCR VARCHAR(20),
AMT DECIMAL(20,3),
CL_CODE VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
DIV_CODE VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
PROD_CODE VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
NEW_BUS smallint,
POST_PERIOD varchar(6), 
MTH int,
YR int,
BUDGET_CODE varchar(20) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
BUDGET_AMT DECIMAL(20,3),
PRIOR_MONTH bit)

CREATE TABLE #TMP_TOTAL_AMTS (
DESCR VARCHAR(20),
AMT DECIMAL(20,3),
CL_CODE VARCHAR(6),
DIV_CODE VARCHAR(6),
PROD_CODE VARCHAR(6),
NEW_BUS smallint,
POST_PERIOD varchar(6))

CREATE TABLE #PP (
PP int,
Mth int,
Yr int,
PP_startdate smalldatetime,
PP_enddate smalldatetime,
BudgetCode Varchar(20) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
PP_PRIOR VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
MTH_PRIOR INT,
YR_PRIOR INT,
YR_NUMBER INT
)

CREATE TABLE #CHART (
Mth varchar(12),
Revenue DECIMAL(20,3),
Expenses DECIMAL(20,3),
Income DECIMAL(20,3),
Profit DECIMAL(20,3)
)

CREATE TABLE #CHART_GRID (
DESCR VARCHAR(20),
January DECIMAL(20,3),
Feburary DECIMAL(20,3),
March DECIMAL(20,3),
April DECIMAL(20,3),
May DECIMAL(20,3),
June DECIMAL(20,3),
July DECIMAL(20,3),
August DECIMAL(20,3),
September DECIMAL(20,3),
October DECIMAL(20,3),
November DECIMAL(20,3),
December DECIMAL(20,3),
)

CREATE TABLE #CHART_GRID_BILLABLE (
January DECIMAL(20,3),
Feburary DECIMAL(20,3),
March DECIMAL(20,3),
April DECIMAL(20,3),
May DECIMAL(20,3),
June DECIMAL(20,3),
July DECIMAL(20,3),
August DECIMAL(20,3),
September DECIMAL(20,3),
October DECIMAL(20,3),
November DECIMAL(20,3),
December DECIMAL(20,3),
)

CREATE TABLE #CHART_YTD (
Yr varchar(12),
Revenue DECIMAL(20,3),
Expenses DECIMAL(20,3),
Income DECIMAL(20,3)
)

CREATE TABLE #CHART_GRID_YEAR (
DESCR VARCHAR(20),
Year1 DECIMAL(20,3),
Year2 DECIMAL(20,3)
)

--if @Option = 9
--BEGIN
--    DELETE FROM W_EMP_STD_HOURS WHERE UPPER(USERID) = UPPER(@UserID)

--	INSERT INTO W_EMP_STD_HOURS (USERID, START_DATE, END_DATE)
--	VALUES(@UserID, @startdate, @enddate)
--END
if @Option = 1 or @Option = 2
Begin
    SELECT @BudgetYear = PPGLYEAR FROM POSTPERIOD WHERE PPPERIOD = @endPP
End

if @Option = 2 or @Option = 3 or @Option = 4 or @Option = 9 or @Option = 11
BEGIN
    SELECT @YTD_Year = PPGLYEAR FROM POSTPERIOD WHERE PPPERIOD = @endPP
    SELECT @startPP = PPPERIOD FROM POSTPERIOD WHERE PPGLMONTH = 1 AND PPGLYEAR = @YTD_Year
END

if @Option = 5 or @Option = 6 or @Option = 7 or @Option = 8 or @Option = 12
BEGIN  
    SELECT @YTD_Year = PPGLYEAR FROM POSTPERIOD WHERE PPPERIOD = @endPP    
    SELECT @startPP = PPPERIOD FROM POSTPERIOD WHERE PPGLMONTH = 1 AND PPGLYEAR = @YTD_Year
END

if @Option = 10
BEGIN  
    SELECT @ClientEndPP = @endPP
    SELECT @YTD_Year = PPGLYEAR FROM POSTPERIOD WHERE PPPERIOD = @endPP
    SELECT @endPP = PPPERIOD FROM POSTPERIOD WHERE PPGLMONTH = 12 AND PPGLYEAR = @YTD_Year
    SELECT @startPP = PPPERIOD FROM POSTPERIOD WHERE PPGLMONTH = 1 AND PPGLYEAR = @YTD_Year - 1
END

SELECT @START_DATE = PPSRTDATE FROM POSTPERIOD WHERE PPPERIOD = @startPP
SELECT @END_DATE = PPENDDATE FROM POSTPERIOD WHERE PPPERIOD = @endPP

SELECT @START_DATE_PRIOR = DATEADD(year, -1, @END_DATE)

INSERT INTO #PP
SELECT PPPERIOD, PPGLMONTH, PPGLYEAR, PPSRTDATE, PPENDDATE, NULL, NULL, NULL, NULL, CASE WHEN PPGLYEAR = @YTD_Year THEN 2 ELSE 1 END FROM POSTPERIOD WHERE PPSRTDATE BETWEEN @START_DATE AND @END_DATE

UPDATE #PP
SET PP_PRIOR = (SELECT PPPERIOD FROM POSTPERIOD WHERE PPSRTDATE = DATEADD(year,-1,PP_startdate))

UPDATE #PP
SET MTH_PRIOR = (SELECT PPGLMONTH FROM POSTPERIOD WHERE PPPERIOD = PP_PRIOR)

UPDATE #PP
SET YR_PRIOR = (SELECT PPGLYEAR FROM POSTPERIOD WHERE PPPERIOD = PP_PRIOR)

UPDATE #PP
SET BudgetCode = (SELECT CASE WHEN GLBDGTAPPR4 IS NOT NULL THEN GLBDGTAPPR4
								 WHEN GLBDGTAPPR3 IS NOT NULL THEN GLBDGTAPPR3
								 WHEN GLBDGTAPPR2 IS NOT NULL THEN GLBDGTAPPR2
								 WHEN GLBDGTAPPR1 IS NOT NULL THEN GLBDGTAPPR1 ELSE '' END
					 FROM GLBUDGETAPPRV
					 WHERE GLBDGTAPPR_FY = Yr)

--if @Option = 7 or @Option = 8 or @Option = 12
--BEGIN  
--    SELECT @PPStartYearPrior = MIN(PP) FROM #PP
--    SELECT @PPEndYearPrior = MAX(PP) FROM #PP
--END
--ELSE
--BEGIN
    SELECT @PPStartYearPrior = MIN(PP_PRIOR) FROM #PP
    SELECT @PPEndYearPrior = MAX(PP_PRIOR) FROM #PP
--END

if @Option = 5 or @Option = 6 or @Option = 7 or @Option = 8 or @Option = 12
BEGIN  
    SELECT @START_DATE_PRIOR = PPSRTDATE FROM POSTPERIOD WHERE PPPERIOD = @PPStartYearPrior
    SELECT @END_DATE_PRIOR = PPENDDATE FROM POSTPERIOD WHERE PPPERIOD = @PPEndYearPrior

    INSERT INTO #PP
    SELECT PPPERIOD, PPGLMONTH, PPGLYEAR, PPSRTDATE, PPENDDATE, NULL, NULL, NULL, NULL, CASE WHEN PPGLYEAR = @YTD_Year THEN 2 ELSE 1 END FROM POSTPERIOD WHERE PPSRTDATE BETWEEN @START_DATE_PRIOR AND @END_DATE_PRIOR

    UPDATE #PP
    SET PP_PRIOR = (SELECT PPPERIOD FROM POSTPERIOD WHERE PPSRTDATE = DATEADD(year,-1,PP_startdate))

    UPDATE #PP
    SET MTH_PRIOR = (SELECT PPGLMONTH FROM POSTPERIOD WHERE PPPERIOD = PP_PRIOR)

    UPDATE #PP
    SET YR_PRIOR = (SELECT PPGLYEAR FROM POSTPERIOD WHERE PPPERIOD = PP_PRIOR)

    UPDATE #PP
    SET BudgetCode = (SELECT CASE WHEN GLBDGTAPPR4 IS NOT NULL THEN GLBDGTAPPR4
								     WHEN GLBDGTAPPR3 IS NOT NULL THEN GLBDGTAPPR3
								     WHEN GLBDGTAPPR2 IS NOT NULL THEN GLBDGTAPPR2
								     WHEN GLBDGTAPPR1 IS NOT NULL THEN GLBDGTAPPR1 ELSE '' END
					     FROM GLBUDGETAPPRV
					     WHERE GLBDGTAPPR_FY = Yr)
END


                     
--SELECT * FROM #PP
--SELECT @startPP,@endPP,@PPStartYearPrior,@PPEndYearPrior
--Sales
set @sql =  'INSERT INTO #TMP
SELECT GLENTTRL.GLETCODE, GLACCOUNT.GLATYPE, GLACCOUNT.GLADESC, ''S'', GLETAMT, GLENTTRL.CL_CODE, GLENTTRL.DIV_CODE, GLENTTRL.PRD_CODE, CLIENT.NEW_BUSINESS, GLENTHDR.GLEHPP, PPGLMONTH, PPGLYEAR, NULL, 0,0         
FROM GLENTTRL INNER JOIN 
	 GLENTHDR ON GLENTTRL.GLETXACT = GLENTHDR.GLEHXACT 
  INNER JOIN GLACCOUNT ON GLENTTRL.GLETCODE = GLACCOUNT.GLACODE 
  LEFT OUTER JOIN GLOXREF ON GLACCOUNT.GLAOFFICE = GLOXREF.GLOXGLOFFICE 
  LEFT OUTER JOIN OFFICE ON GLOXREF.GLOXOFFICE = OFFICE.OFFICE_CODE
  LEFT OUTER JOIN POSTPERIOD ON POSTPERIOD.PPPERIOD = GLENTHDR.GLEHPP
  LEFT OUTER JOIN CLIENT ON CLIENT.CL_CODE = GLENTTRL.CL_CODE '

set @sql_where = ' WHERE GLENTHDR.GLEHPP Between  ''' + @startPP + ''' AND ''' + @endPP + '''
  AND GLACCOUNT.GLATYPE = ''8'' AND POSTPERIOD.PPGLMONTH <> 99 '
  
If @Office <> ''
	set @sql_where = @sql_where + ' AND OFFICE.OFFICE_CODE IN (SELECT * FROM dbo.udf_split_list(''' + @Office + ''', '',''))'
	
Else
	IF @COUNT > 0 
		set @sql = @sql + ' INNER JOIN EMP_OFFICE ON OFFICE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
						AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''''

set @sql = @sql + @sql_where
PRINT (@sql)
EXEC ( @sql )

--COS
set @sql =  'INSERT INTO #TMP
SELECT GLENTTRL.GLETCODE, GLACCOUNT.GLATYPE, GLACCOUNT.GLADESC, ''COS'', GLETAMT, GLENTTRL.CL_CODE, GLENTTRL.DIV_CODE, GLENTTRL.PRD_CODE, CLIENT.NEW_BUSINESS, GLENTHDR.GLEHPP, PPGLMONTH, PPGLYEAR, NULL, 0,0    
FROM GLENTTRL INNER JOIN 
	 GLENTHDR ON GLENTTRL.GLETXACT = GLENTHDR.GLEHXACT 
  INNER JOIN GLACCOUNT ON GLENTTRL.GLETCODE = GLACCOUNT.GLACODE 
  LEFT OUTER JOIN GLOXREF ON GLACCOUNT.GLAOFFICE = GLOXREF.GLOXGLOFFICE 
  LEFT OUTER JOIN OFFICE ON GLOXREF.GLOXOFFICE = OFFICE.OFFICE_CODE
  LEFT OUTER JOIN POSTPERIOD ON POSTPERIOD.PPPERIOD = GLENTHDR.GLEHPP
  LEFT OUTER JOIN CLIENT ON CLIENT.CL_CODE = GLENTTRL.CL_CODE '
  
set @sql_where = ' WHERE GLENTHDR.GLEHPP Between  ''' + @startPP + ''' AND ''' + @endPP + '''
  AND GLACCOUNT.GLATYPE = ''13'' AND POSTPERIOD.PPGLMONTH <> 99 '
  
If @Office <> ''
	set @sql_where = @sql_where + ' AND OFFICE.OFFICE_CODE IN (SELECT * FROM dbo.udf_split_list(''' + @Office + ''', '',''))'
	
Else
	IF @COUNT > 0 
		set @sql = @sql + ' INNER JOIN EMP_OFFICE ON OFFICE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
						AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''''
						
set @sql = @sql + @sql_where

EXEC ( @sql )

--Expenses
set @sql =  'INSERT INTO #TMP
SELECT GLENTTRL.GLETCODE, GLACCOUNT.GLATYPE, GLACCOUNT.GLADESC, ''E'', GLETAMT, GLENTTRL.CL_CODE, GLENTTRL.DIV_CODE, GLENTTRL.PRD_CODE, CLIENT.NEW_BUSINESS, GLENTHDR.GLEHPP, PPGLMONTH, PPGLYEAR, NULL, 0,0         
FROM GLENTTRL INNER JOIN 
	 GLENTHDR ON GLENTTRL.GLETXACT = GLENTHDR.GLEHXACT 
  INNER JOIN GLACCOUNT ON GLENTTRL.GLETCODE = GLACCOUNT.GLACODE 
  LEFT OUTER JOIN GLOXREF ON GLACCOUNT.GLAOFFICE = GLOXREF.GLOXGLOFFICE 
  LEFT OUTER JOIN OFFICE ON GLOXREF.GLOXOFFICE = OFFICE.OFFICE_CODE
  LEFT OUTER JOIN POSTPERIOD ON POSTPERIOD.PPPERIOD = GLENTHDR.GLEHPP
  LEFT OUTER JOIN CLIENT ON CLIENT.CL_CODE = GLENTTRL.CL_CODE '

set @sql_where = ' WHERE GLENTHDR.GLEHPP Between  ''' + @startPP + ''' AND ''' + @endPP + '''
  AND GLACCOUNT.GLATYPE IN (''14'',''9'',''15'') AND POSTPERIOD.PPGLMONTH <> 99 '
  
If @Office <> ''
	set @sql_where = @sql_where + ' AND OFFICE.OFFICE_CODE IN (SELECT * FROM dbo.udf_split_list(''' + @Office + ''', '',''))'

Else
	IF @COUNT > 0 
		set @sql = @sql + ' INNER JOIN EMP_OFFICE ON OFFICE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
						AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''''
						
set @sql = @sql + @sql_where

EXEC ( @sql )

--BUDGET
UPDATE #TMP
SET BUDGET_CODE = (SELECT CASE WHEN GLBDGTAPPR4 IS NOT NULL THEN GLBDGTAPPR4
								 WHEN GLBDGTAPPR3 IS NOT NULL THEN GLBDGTAPPR3
								 WHEN GLBDGTAPPR2 IS NOT NULL THEN GLBDGTAPPR2
								 WHEN GLBDGTAPPR1 IS NOT NULL THEN GLBDGTAPPR1 ELSE '' END
					 FROM GLBUDGETAPPRV
					 WHERE GLBDGTAPPR_FY = Yr)

UPDATE #TMP
SET BUDGET_AMT = CASE WHEN MTH = 1 THEN (SELECT GLBDTPPAMT1 FROM GLBUDGETTRL WHERE GLBDTCODE = BUDGET_CODE AND GLBDTGLCODE = GLCODE) ELSE 0 END



--PRIOR YEAR MONTH TOTAL
--if @Option <> 7 AND @Option <> 8 --AND @Option <> 5 AND @Option <> 6  
--BEGIN  
    --Sales
    set @sql =  'INSERT INTO #TMP
    SELECT GLENTTRL.GLETCODE, GLACCOUNT.GLATYPE, GLACCOUNT.GLADESC, ''S'', GLETAMT, GLENTTRL.CL_CODE, GLENTTRL.DIV_CODE, GLENTTRL.PRD_CODE, CLIENT.NEW_BUSINESS, GLENTHDR.GLEHPP, PPGLMONTH, PPGLYEAR, NULL, 0,1         
    FROM GLENTTRL INNER JOIN 
	     GLENTHDR ON GLENTTRL.GLETXACT = GLENTHDR.GLEHXACT 
      INNER JOIN GLACCOUNT ON GLENTTRL.GLETCODE = GLACCOUNT.GLACODE 
      LEFT OUTER JOIN GLOXREF ON GLACCOUNT.GLAOFFICE = GLOXREF.GLOXGLOFFICE 
      LEFT OUTER JOIN OFFICE ON GLOXREF.GLOXOFFICE = OFFICE.OFFICE_CODE
      LEFT OUTER JOIN POSTPERIOD ON POSTPERIOD.PPPERIOD = GLENTHDR.GLEHPP
      LEFT OUTER JOIN CLIENT ON CLIENT.CL_CODE = GLENTTRL.CL_CODE '

    set @sql_where = ' WHERE GLENTHDR.GLEHPP Between  ''' + @PPStartYearPrior + ''' AND ''' + @PPEndYearPrior + '''
      AND GLACCOUNT.GLATYPE = ''8'' AND POSTPERIOD.PPGLMONTH <> 99 '
  
    If @Office <> ''
	    set @sql_where = @sql_where + ' AND OFFICE.OFFICE_CODE IN (SELECT * FROM dbo.udf_split_list(''' + @Office + ''', '',''))'
	
    Else
	    IF @COUNT > 0 
		    set @sql = @sql + ' INNER JOIN EMP_OFFICE ON OFFICE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
						    AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''''

    set @sql = @sql + @sql_where

    EXEC ( @sql )

    --COS
    set @sql =  'INSERT INTO #TMP
    SELECT GLENTTRL.GLETCODE, GLACCOUNT.GLATYPE, GLACCOUNT.GLADESC, ''COS'', GLETAMT, GLENTTRL.CL_CODE, GLENTTRL.DIV_CODE, GLENTTRL.PRD_CODE, CLIENT.NEW_BUSINESS, GLENTHDR.GLEHPP, PPGLMONTH, PPGLYEAR, NULL, 0,1    
    FROM GLENTTRL INNER JOIN 
	     GLENTHDR ON GLENTTRL.GLETXACT = GLENTHDR.GLEHXACT 
      INNER JOIN GLACCOUNT ON GLENTTRL.GLETCODE = GLACCOUNT.GLACODE 
      LEFT OUTER JOIN GLOXREF ON GLACCOUNT.GLAOFFICE = GLOXREF.GLOXGLOFFICE 
      LEFT OUTER JOIN OFFICE ON GLOXREF.GLOXOFFICE = OFFICE.OFFICE_CODE
      LEFT OUTER JOIN POSTPERIOD ON POSTPERIOD.PPPERIOD = GLENTHDR.GLEHPP
      LEFT OUTER JOIN CLIENT ON CLIENT.CL_CODE = GLENTTRL.CL_CODE '
  
    set @sql_where = ' WHERE GLENTHDR.GLEHPP Between  ''' + @PPStartYearPrior + ''' AND ''' + @PPEndYearPrior + '''
      AND GLACCOUNT.GLATYPE = ''13'' AND POSTPERIOD.PPGLMONTH <> 99 '
  
    If @Office <> ''
	    set @sql_where = @sql_where + ' AND OFFICE.OFFICE_CODE IN (SELECT * FROM dbo.udf_split_list(''' + @Office + ''', '',''))'
	
    Else
	    IF @COUNT > 0 
		    set @sql = @sql + ' INNER JOIN EMP_OFFICE ON OFFICE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
						    AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''''
						
    set @sql = @sql + @sql_where

    EXEC ( @sql )

    --Expenses
    set @sql =  'INSERT INTO #TMP
    SELECT GLENTTRL.GLETCODE, GLACCOUNT.GLATYPE, GLACCOUNT.GLADESC, ''E'', GLETAMT, GLENTTRL.CL_CODE, GLENTTRL.DIV_CODE, GLENTTRL.PRD_CODE, CLIENT.NEW_BUSINESS, GLENTHDR.GLEHPP, PPGLMONTH, PPGLYEAR, NULL, 0,1         
    FROM GLENTTRL INNER JOIN 
	     GLENTHDR ON GLENTTRL.GLETXACT = GLENTHDR.GLEHXACT 
      INNER JOIN GLACCOUNT ON GLENTTRL.GLETCODE = GLACCOUNT.GLACODE 
      LEFT OUTER JOIN GLOXREF ON GLACCOUNT.GLAOFFICE = GLOXREF.GLOXGLOFFICE 
      LEFT OUTER JOIN OFFICE ON GLOXREF.GLOXOFFICE = OFFICE.OFFICE_CODE
      LEFT OUTER JOIN POSTPERIOD ON POSTPERIOD.PPPERIOD = GLENTHDR.GLEHPP
      LEFT OUTER JOIN CLIENT ON CLIENT.CL_CODE = GLENTTRL.CL_CODE '

    set @sql_where = ' WHERE GLENTHDR.GLEHPP Between  ''' + @PPStartYearPrior + ''' AND ''' + @PPEndYearPrior + '''
      AND GLACCOUNT.GLATYPE IN (''14'',''9'',''15'') AND POSTPERIOD.PPGLMONTH <> 99 '
  
    If @Office <> ''
	    set @sql_where = @sql_where + ' AND OFFICE.OFFICE_CODE IN (SELECT * FROM dbo.udf_split_list(''' + @Office + ''', '',''))'

    Else
	    IF @COUNT > 0 
		    set @sql = @sql + ' INNER JOIN EMP_OFFICE ON OFFICE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
						    AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''''
						
    set @sql = @sql + @sql_where

    EXEC ( @sql )
--END

DECLARE @client varchar(100), @cl_code varchar(6), @yr varchar(4), @pos int, @pos2 int, @alter_sql varchar(1000), @update_sql varchar(1000), @at decimal(20,3) 

CREATE TABLE #FIN_CLIENT_TOTALS_GRID (
        CLIENT VARCHAR(100) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
        AMT DECIMAL(20,3),
        YR INT
    )

--BUDGET
SET @BudgetCode = (SELECT CASE WHEN GLBDGTAPPR4 IS NOT NULL THEN GLBDGTAPPR4
								 WHEN GLBDGTAPPR3 IS NOT NULL THEN GLBDGTAPPR3
								 WHEN GLBDGTAPPR2 IS NOT NULL THEN GLBDGTAPPR2
								 WHEN GLBDGTAPPR1 IS NOT NULL THEN GLBDGTAPPR1 ELSE '' END
					 FROM GLBUDGETAPPRV
					 WHERE GLBDGTAPPR_FY = @BudgetYear)

--SELECT SUM(ISNULL(GLBDTPPAMT1,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = '2021Budget' AND G.GLATYPE = 8 

--SELECT @BudgetYear,@BudgetCode

--SELECT * FROM #TMP
--ORDER BY POST_PERIOD

--*************************************************

if @Option = 1
BEGIN   
        --SELECT * FROM #TMP
       --SELECT SUM(AMT), DESCR, POST_PERIOD FROM #TMP GROUP BY DESCR, POST_PERIOD
       
    INSERT INTO #FIN 
    SELECT 'Revenue',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Expenses',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Net Income',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Profit Margin',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0),0)
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD) ,0)
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET ACTUAL = (ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET ACTUAL = ISNULL(CASE WHEN ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD)) <> 0 THEN    
                    ((((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) /
                    ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD))) * 100 ELSE 0 END,0)
    WHERE DESCR = 'Profit Margin'

    --SELECT * FROM #FIN

    --UPDATE #FIN
    --SET BUDGET = ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
    --                - ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0),0)
    --WHERE DESCR = 'Revenue'

    If @Office <> ''
    BEGIN
        UPDATE #FIN
        SET BUDGET = CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) ELSE 0 END - 
                     CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) ELSE 0 END
        WHERE DESCR = 'Revenue'    

        UPDATE #FIN
        SET BUDGET = CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) ELSE 0 END
        WHERE DESCR = 'Expenses'
    END
    ELSE
    BEGIN
        UPDATE #FIN
        SET BUDGET = CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) ELSE 0 END - 
                     CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0) ELSE 0 END
        WHERE DESCR = 'Revenue'    

        UPDATE #FIN
        SET BUDGET = CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15)),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0) ELSE 0 END
        WHERE DESCR = 'Expenses'
    END   

    UPDATE #FIN
    SET BUDGET = ISNULL((SELECT BUDGET FROM #FIN WHERE DESCR = 'Revenue'),0) - ISNULL((SELECT BUDGET FROM #FIN WHERE DESCR = 'Expenses'),0)
    WHERE DESCR = 'Net Income'

    --UPDATE #FIN
    --SET BUDGET = ISNULL(((SELECT SUM(ISNULL(BUDGET_AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
    --                - ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0),0) 
    --WHERE DESCR = 'Net Income'   

    If @Office <> ''
    BEGIN
        UPDATE #FIN
        SET BUDGET = ISNULL(CASE WHEN (CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) ELSE 0 END) <> 0 THEN    
                        (ISNULL((SELECT BUDGET FROM #FIN WHERE DESCR = 'Revenue'),0) - ISNULL((SELECT BUDGET FROM #FIN WHERE DESCR = 'Expenses'),0)) /
                        ((CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) ELSE 0 END)) * 100 ELSE 0 END,0)
        WHERE DESCR = 'Profit Margin'
    END
    ELSE
    BEGIN
        UPDATE #FIN
        SET BUDGET = ISNULL(CASE WHEN (CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) ELSE 0 END) <> 0 THEN    
                        (ISNULL((SELECT BUDGET FROM #FIN WHERE DESCR = 'Revenue'),0) - ISNULL((SELECT BUDGET FROM #FIN WHERE DESCR = 'Expenses'),0)) /
                        ((CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) ELSE 0 END)) * 100 ELSE 0 END,0)
        WHERE DESCR = 'Profit Margin'
    END    

    UPDATE #FIN
    SET VARIANCE = ACTUAL - BUDGET


    --PRIOR
    UPDATE #FIN
    SET MONTH_B = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET MONTH_B = ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET MONTH_B = (ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET MONTH_B = CASE WHEN  ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD)) <> 0 THEN    
                    ((((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)) /
                    ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD))) * 100 ELSE 0 END
    WHERE DESCR = 'Profit Margin'
    
    --YOY
    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B > 0 THEN ((ACTUAL - MONTH_B) / MONTH_B) * 100
                   WHEN MONTH_B < 0 THEN ((ACTUAL - MONTH_B) / (MONTH_B * -1)) * 100 ELSE 0 END
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B > 0 THEN ((ACTUAL - MONTH_B) / MONTH_B) * 100
                   WHEN MONTH_B < 0 THEN ((ACTUAL - MONTH_B) / (MONTH_B * -1)) * 100 ELSE 0 END
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B > 0 THEN ((ACTUAL - MONTH_B) / MONTH_B) * 100
                   WHEN MONTH_B < 0 THEN ((ACTUAL - MONTH_B) / (MONTH_B * -1)) * 100 ELSE 0 END
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B > 0 THEN ((ACTUAL - MONTH_B) / MONTH_B) * 100
                   WHEN MONTH_B < 0 THEN ((ACTUAL - MONTH_B) / (MONTH_B * -1)) * 100 ELSE 0 END
    WHERE DESCR = 'Profit Margin'

    SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END as [Category],
           ISNULL(ACTUAL,0) as [Actual],
           ISNULL(BUDGET,0) as [Budget],
           ISNULL(VARIANCE,0) AS [VariancePercent],
           ISNULL(MONTH_B,0) AS [MTD],
           ISNULL(YOY,0) as [YOYPercent]        
    FROM #FIN

END

if @Option = 2
BEGIN   

    --SELECT * FROM #TMP WHERE PRIOR_MONTH = 1

    INSERT INTO #FIN 
    SELECT 'Revenue',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Expenses',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Net Income',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Profit Margin',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Sales',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)
    WHERE DESCR = 'Sales'

    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET ACTUAL = (ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET ACTUAL = ISNULL(CASE WHEN  ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD)) <> 0 THEN    
                    ((((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
                    - (SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) /
                    ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD))) * 100 ELSE 0 END,0)
    WHERE DESCR = 'Profit Margin'

    

    --Budget
    If @Office <> ''
    BEGIN
        UPDATE #FIN
        SET BUDGET = CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) ELSE 0 END - 
                     CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) ELSE 0 END
        WHERE DESCR = 'Revenue'    

        UPDATE #FIN
        SET BUDGET = CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) ELSE 0 END
        WHERE DESCR = 'Sales'

        UPDATE #FIN
        SET BUDGET = CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) ELSE 0 END
        WHERE DESCR = 'Expenses'
    END
    ELSE
    BEGIN
        UPDATE #FIN
        SET BUDGET = CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) ELSE 0 END - 
                     CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 13 ),0) ELSE 0 END
        WHERE DESCR = 'Revenue'    

        UPDATE #FIN
        SET BUDGET = CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) ELSE 0 END
        WHERE DESCR = 'Sales'

        UPDATE #FIN
        SET BUDGET = CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15)),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0)) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE IN (14,9,15) ),0) ELSE 0 END
        WHERE DESCR = 'Expenses'
    END      

    UPDATE #FIN
    SET BUDGET = ISNULL((SELECT BUDGET FROM #FIN F WHERE DESCR = 'Revenue' AND F.PP = #FIN.PP),0) - ISNULL((SELECT BUDGET FROM #FIN F WHERE DESCR = 'Expenses' AND F.PP = #FIN.PP),0)
    WHERE DESCR = 'Net Income'
    --SELECT * FROM #FIN
    If @Office <> ''
    BEGIN
        UPDATE #FIN
        SET BUDGET = ISNULL(CASE WHEN (CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) ELSE 0 END) <> 0 THEN    
                        (ISNULL((SELECT BUDGET FROM #FIN F WHERE DESCR = 'Revenue' AND F.PP = #FIN.PP),0) - ISNULL((SELECT BUDGET FROM #FIN F WHERE DESCR = 'Expenses' AND F.PP = #FIN.PP),0)) /
                        ((CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE LEFT OUTER JOIN GLOXREF ON G.GLAOFFICE = GLOXREF.GLOXGLOFFICE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 AND GLOXREF.GLOXOFFICE IN (SELECT * FROM dbo.udf_split_list(@Office, ',')) ),0) ELSE 0 END)) * 100 ELSE 0 END,0)
        WHERE DESCR = 'Profit Margin'
    END
    ELSE
    BEGIN
        UPDATE #FIN
        SET BUDGET = ISNULL(CASE WHEN (CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) ELSE 0 END) <> 0 THEN    
                        (ISNULL((SELECT BUDGET FROM #FIN F WHERE DESCR = 'Revenue' AND F.PP = #FIN.PP),0) - ISNULL((SELECT BUDGET FROM #FIN F WHERE DESCR = 'Expenses' AND F.PP = #FIN.PP),0)) /
                        ((CASE WHEN MTH = 1 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT1,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 2 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT2,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) 
                          WHEN MTH = 3 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT3,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 4 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT4,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 5 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT5,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 6 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT6,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 7 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT7,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 8 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT8,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 9 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT9,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 10 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT10,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 11 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT11,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0)
                          WHEN MTH = 12 THEN ISNULL((SELECT SUM(ISNULL(GLBDTPPAMT12,0) * -1) FROM GLBUDGETTRL GB INNER JOIN GLACCOUNT G ON G.GLACODE = GB.GLBDTGLCODE WHERE GLBDTCODE = @BudgetCode AND G.GLATYPE = 8 ),0) ELSE 0 END)) * 100 ELSE 0 END,0)
        WHERE DESCR = 'Profit Margin'
    END    

    

   --SELECT * FROM #FIN

    UPDATE #FIN
    SET VARIANCE = ACTUAL - BUDGET

    
    --PRIOR
    UPDATE #FIN
    SET MONTH_B = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)  
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET MONTH_B = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)   
    WHERE DESCR = 'Sales'

    --SELECT * FROM #FIN

    UPDATE #FIN
    SET MONTH_B = ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)  
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET MONTH_B = (ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)  
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0) ) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)  
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET MONTH_B = CASE WHEN  ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD)) <> 0 THEN    
                    ((((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD) 
                    - (SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)) /
                    ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD))) * 100 ELSE 0 END
    WHERE DESCR = 'Profit Margin'

    --SELECT * FROM #FIN
    
    --YOY
    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B > 0 THEN (ACTUAL - MONTH_B) / MONTH_B
                   WHEN MONTH_B < 0 THEN (ACTUAL - MONTH_B) / (MONTH_B * -1) ELSE 0 END
    WHERE DESCR = 'Revenue'
    UPDATE #FIN

    SET YOY = CASE WHEN MONTH_B > 0 THEN (ACTUAL - MONTH_B) / MONTH_B
                   WHEN MONTH_B < 0 THEN (ACTUAL - MONTH_B) / (MONTH_B * -1) ELSE 0 END
    WHERE DESCR = 'Sales'

    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B > 0 THEN (ACTUAL - MONTH_B) / MONTH_B
                   WHEN MONTH_B < 0 THEN (ACTUAL - MONTH_B) / (MONTH_B * -1) ELSE 0 END
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B > 0 THEN (ACTUAL - MONTH_B) / MONTH_B
                   WHEN MONTH_B < 0 THEN (ACTUAL - MONTH_B) / (MONTH_B * -1) ELSE 0 END
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B > 0 THEN (ACTUAL - MONTH_B) / MONTH_B
                   WHEN MONTH_B < 0 THEN (ACTUAL - MONTH_B) / (MONTH_B * -1) ELSE 0 END
    WHERE DESCR = 'Profit Margin'

    --SELECT * FROM #FIN    

    INSERT INTO #FIN_YTD 
    SELECT 'Revenue',0,0,0,0,0, NULL, NULL, NULL, NULL, NULL, NULL 

    INSERT INTO #FIN_YTD 
    SELECT 'Expenses',0,0,0,0,0, NULL, NULL, NULL, NULL, NULL, NULL

    INSERT INTO #FIN_YTD 
    SELECT 'Net Income',0,0,0,0,0, NULL, NULL, NULL, NULL, NULL, NULL

    INSERT INTO #FIN_YTD 
    SELECT 'Profit Margin',0,0,0,0,0, NULL, NULL, NULL, NULL, NULL, NULL

    --INSERT INTO #FIN_YTD      
    --SELECT DESCR, SUM(ACTUAL) AS ACTUAL, SUM(BUDGET) AS BUDGET, SUM(ACTUAL) - SUM(BUDGET) AS VARIANCE, SUM(MONTH_B) AS MONTH_B, 0, NULL, NULL, NULL, NULL, NULL, NULL  FROM #FIN
    --GROUP BY DESCR  

    UPDATE #FIN_YTD
    SET ACTUAL = (SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Revenue' GROUP BY DESCR)
    WHERE DESCR = 'Revenue' 

    UPDATE #FIN_YTD
    SET ACTUAL = (SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Expenses' GROUP BY DESCR)
    WHERE DESCR = 'Expenses' 

    UPDATE #FIN_YTD
    SET ACTUAL = (SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Net Income' GROUP BY DESCR)
    WHERE DESCR = 'Net Income' 

    UPDATE #FIN_YTD
    SET ACTUAL = CASE WHEN (SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Sales' GROUP BY DESCR) <> 0
                    THEN (((SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Revenue' GROUP BY DESCR) - (SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Expenses' GROUP BY DESCR)) / (SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Sales' GROUP BY DESCR)) * 100 ELSE 0 END
                    --SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Profit Margin' GROUP BY DESCR)
    WHERE DESCR = 'Profit Margin'

    

    UPDATE #FIN_YTD
    SET BUDGET = (SELECT SUM(BUDGET) FROM #FIN WHERE DESCR = 'Revenue' GROUP BY DESCR)
    WHERE DESCR = 'Revenue' 

    UPDATE #FIN_YTD
    SET BUDGET = (SELECT SUM(BUDGET) FROM #FIN WHERE DESCR = 'Expenses' GROUP BY DESCR)
    WHERE DESCR = 'Expenses' 

    UPDATE #FIN_YTD
    SET BUDGET = (SELECT SUM(BUDGET) FROM #FIN WHERE DESCR = 'Net Income' GROUP BY DESCR)
    WHERE DESCR = 'Net Income' 

    UPDATE #FIN_YTD
    SET BUDGET = CASE WHEN (SELECT SUM(BUDGET) FROM #FIN WHERE DESCR = 'Sales' GROUP BY DESCR) <> 0
                    THEN (((SELECT SUM(BUDGET) FROM #FIN WHERE DESCR = 'Revenue' GROUP BY DESCR) - (SELECT SUM(BUDGET) FROM #FIN WHERE DESCR = 'Expenses' GROUP BY DESCR)) / (SELECT SUM(BUDGET) FROM #FIN WHERE DESCR = 'Sales' GROUP BY DESCR)) * 100 ELSE 0 END
                    --(SELECT SUM(BUDGET) FROM #FIN WHERE DESCR = 'Profit Margin' GROUP BY DESCR)
    WHERE DESCR = 'Profit Margin'

    

    UPDATE #FIN_YTD
    SET VARIANCE = (SELECT SUM(ACTUAL) - SUM(BUDGET) FROM #FIN WHERE DESCR = 'Revenue' GROUP BY DESCR)
    WHERE DESCR = 'Revenue' 

    UPDATE #FIN_YTD
    SET VARIANCE = (SELECT SUM(ACTUAL) - SUM(BUDGET) FROM #FIN WHERE DESCR = 'Expenses' GROUP BY DESCR)
    WHERE DESCR = 'Expenses' 

    UPDATE #FIN_YTD
    SET VARIANCE = (SELECT SUM(ACTUAL) - SUM(BUDGET) FROM #FIN WHERE DESCR = 'Net Income' GROUP BY DESCR)
    WHERE DESCR = 'Net Income' 

    --UPDATE #FIN_YTD
    --SET VARIANCE = CASE WHEN (SELECT SUM(ACTUAL) - SUM(BUDGET) FROM #FIN WHERE DESCR = 'Sales' GROUP BY DESCR) <> 0
    --                THEN (((SELECT SUM(ACTUAL) - SUM(BUDGET) FROM #FIN WHERE DESCR = 'Revenue' GROUP BY DESCR) - (SELECT SUM(ACTUAL) - SUM(BUDGET) FROM #FIN WHERE DESCR = 'Expenses' GROUP BY DESCR)) / (SELECT SUM(ACTUAL) - SUM(BUDGET) FROM #FIN WHERE DESCR = 'Sales' GROUP BY DESCR)) * 100 ELSE 0 END
    --                --(SELECT SUM(ACTUAL) - SUM(BUDGET) FROM #FIN WHERE DESCR = 'Profit Margin' GROUP BY DESCR)
    --WHERE DESCR = 'Profit Margin'    

    UPDATE #FIN_YTD
    SET VARIANCE = ACTUAL - BUDGET
    WHERE DESCR = 'Profit Margin'
    
    --YOY
    UPDATE #FIN_YTD
    SET YOY = (SELECT CASE WHEN SUM(MONTH_B) > 0 THEN (SUM(ACTUAL) - SUM(MONTH_B)) / SUM(MONTH_B) * 100 
                           WHEN SUM(MONTH_B) < 0 THEN (SUM(ACTUAL) - SUM(MONTH_B)) / (SUM(MONTH_B) * -1) * 100 ELSE 0 END FROM #FIN WHERE DESCR = 'Revenue' GROUP BY DESCR)
    WHERE DESCR = 'Revenue'

    UPDATE #FIN_YTD
    SET YOY = (SELECT CASE WHEN SUM(MONTH_B) > 0 THEN (SUM(ACTUAL) - SUM(MONTH_B)) / SUM(MONTH_B) * 100 
                           WHEN SUM(MONTH_B) < 0 THEN (SUM(ACTUAL) - SUM(MONTH_B)) / (SUM(MONTH_B) * -1) * 100 ELSE 0 END FROM #FIN WHERE DESCR = 'Expenses' GROUP BY DESCR)
    WHERE DESCR = 'Expenses'

    UPDATE #FIN_YTD
    SET YOY = (SELECT CASE WHEN SUM(MONTH_B) > 0 THEN (SUM(ACTUAL) - SUM(MONTH_B)) / SUM(MONTH_B) * 100 
                           WHEN SUM(MONTH_B) < 0 THEN (SUM(ACTUAL) - SUM(MONTH_B)) / (SUM(MONTH_B) * -1) * 100 ELSE 0 END FROM #FIN WHERE DESCR = 'Net Income' GROUP BY DESCR)
    WHERE DESCR = 'Net Income'


     UPDATE #FIN_YTD
    SET MONTH_B = (SELECT SUM(MONTH_B) FROM #FIN WHERE DESCR = 'Revenue' GROUP BY DESCR)
    WHERE DESCR = 'Revenue' 

    UPDATE #FIN_YTD
    SET MONTH_B = (SELECT SUM(MONTH_B) FROM #FIN WHERE DESCR = 'Expenses' GROUP BY DESCR)
    WHERE DESCR = 'Expenses' 

    UPDATE #FIN_YTD
    SET MONTH_B = (SELECT SUM(MONTH_B) FROM #FIN WHERE DESCR = 'Net Income' GROUP BY DESCR)
    WHERE DESCR = 'Net Income' 

    UPDATE #FIN_YTD
    SET MONTH_B = CASE WHEN (SELECT SUM(MONTH_B) FROM #FIN WHERE DESCR = 'Sales' GROUP BY DESCR) <> 0
                    THEN (((SELECT SUM(MONTH_B) FROM #FIN WHERE DESCR = 'Revenue' GROUP BY DESCR) - (SELECT SUM(MONTH_B) FROM #FIN WHERE DESCR = 'Expenses' GROUP BY DESCR)) / (SELECT SUM(MONTH_B) FROM #FIN WHERE DESCR = 'Sales' GROUP BY DESCR)) * 100 ELSE 0 END
                    --(SELECT SUM(MONTH_B) FROM #FIN WHERE DESCR = 'Profit Margin' GROUP BY DESCR)
    WHERE DESCR = 'Profit Margin'

    UPDATE #FIN_YTD
    SET YOY = CASE WHEN MONTH_B > 0 THEN ((ACTUAL - MONTH_B) / MONTH_B) * 100
                   WHEN MONTH_B < 0 THEN ((ACTUAL - MONTH_B) / (MONTH_B * -1)) * 100 ELSE 0 END 
    WHERE DESCR = 'Profit Margin'


    SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END as [Category],
           ISNULL(ACTUAL,0) as [Actual],
           ISNULL(BUDGET,0) as [Budget],
           ISNULL(VARIANCE,0) AS [VariancePercent],
           ISNULL(MONTH_B,0) AS [MTD],
           ISNULL(YOY,0) as [YOYPercent]        
    FROM #FIN_YTD

END

if @Option = 3
BEGIN   

    INSERT INTO #FIN 
    SELECT 'Revenue',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Expenses',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Net Income',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Profit Margin',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET ACTUAL = (ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET ACTUAL = CASE WHEN  ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
                    - (SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD)) > 0 THEN    
                    ((((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
                    - (SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD)) - (SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD)) /
                    ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
                    - (SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD))) * 100 ELSE 0 END
    WHERE DESCR = 'Profit Margin'


    --Budget
    UPDATE #FIN
    SET BUDGET = ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)  
                    - ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET BUDGET = (SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET BUDGET = (ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)  
                    - ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) ) - ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)  
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET BUDGET = CASE WHEN  ((SELECT SUM(ISNULL(BUDGET_AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
                    - (SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD)) > 0 THEN    
                    ((((SELECT SUM(ISNULL(BUDGET_AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
                    - (SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD)) - (SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD)) /
                    ((SELECT SUM(ISNULL(BUDGET_AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
                    - (SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD))) * 100 ELSE 0 END
    WHERE DESCR = 'Profit Margin'

    UPDATE #FIN
    SET VARIANCE = ACTUAL - BUDGET


    --PRIOR
    UPDATE #FIN
    SET MONTH_B = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)  
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET MONTH_B = ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)  
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET MONTH_B = (ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)  
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0) ) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)  
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET MONTH_B = CASE WHEN  ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD) 
                    - (SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD)) > 0 THEN    
                    ((((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD) 
                    - (SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD)) - (SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD)) /
                    ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD) 
                    - (SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD))) * 100 ELSE 0 END
    WHERE DESCR = 'Profit Margin'

    --YOY
    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B <> 0 THEN (ACTUAL - MONTH_B) / MONTH_B ELSE 0 END
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B <> 0 THEN (ACTUAL - MONTH_B) / MONTH_B ELSE 0 END
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B <> 0 THEN (ACTUAL - MONTH_B) / MONTH_B ELSE 0 END
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B <> 0 THEN (ACTUAL - MONTH_B) / MONTH_B ELSE 0 END
    WHERE DESCR = 'Profit Margin'

    INSERT INTO #CHART
    SELECT DISTINCT MTH,0,0,0,0 FROM #FIN

    UPDATE #CHART
    SET Revenue = (SELECT ACTUAL FROM #FIN WHERE DESCR = 'Revenue' AND MTH = #CHART.MTH)

    UPDATE #CHART
    SET Expenses = (SELECT ACTUAL FROM #FIN WHERE DESCR = 'Expenses' AND MTH = #CHART.MTH)
    
    UPDATE #CHART
    SET Income = (SELECT ACTUAL FROM #FIN WHERE DESCR = 'Net Income' AND MTH = #CHART.MTH)
    
    UPDATE #CHART
    SET Profit = (SELECT ACTUAL FROM #FIN WHERE DESCR = 'Profit Margin' AND MTH = #CHART.MTH)

    SELECT CASE WHEN MTH = 1 THEN 'January'
                WHEN MTH = 2 THEN 'Feburary'
                WHEN MTH = 3 THEN 'March'
                WHEN MTH = 4 THEN 'April'
                WHEN MTH = 5 THEN 'May'
                WHEN MTH = 6 THEN 'June'
                WHEN MTH = 7 THEN 'July'
                WHEN MTH = 8 THEN 'August'
                WHEN MTH = 9 THEN 'September'
                WHEN MTH = 10 THEN 'October'
                WHEN MTH = 11 THEN 'November'
                WHEN MTH = 12 THEN 'December' END AS [Month], Revenue, Expenses, Income as [NetIncome], Profit FROM #CHART

    --SELECT DESCR as [Category],
    --       ISNULL(ACTUAL,0) as [Actual],
    --       ISNULL(BUDGET,0) as [Budget],
    --       ISNULL(VARIANCE,0) AS [VariancePercent],
    --       ISNULL(MONTH_B,0) AS [MTD],
    --       ISNULL(YOY,0) as [YOYPercent],
    --       MTH as [Month]
    --FROM #FIN
    --Order by MTH

END

if @Option = 4
BEGIN   

    INSERT INTO #FIN 
    SELECT 'Revenue',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Expenses',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Net Income',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Profit Margin',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET ACTUAL = (ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Net Income'

    --UPDATE #FIN
    --SET ACTUAL = CASE WHEN  ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD)) <> 0 THEN    
    --                ((((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
    --                - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) /
    --                ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD))) * 100 ELSE 0 END
    --WHERE DESCR = 'Profit Margin'

    UPDATE #FIN
    SET ACTUAL = ISNULL(CASE WHEN ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD)) <> 0 THEN    
                    ((((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) /
                    ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD))) * 100 ELSE 0 END,0)
    WHERE DESCR = 'Profit Margin'


    --Budget
    UPDATE #FIN
    SET BUDGET = ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)  
                    - ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET BUDGET = (SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET BUDGET = (ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)  
                    - ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) ) - ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)  
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET BUDGET = CASE WHEN  ((SELECT SUM(ISNULL(BUDGET_AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD)) > 0 THEN    
                    ((((SELECT SUM(ISNULL(BUDGET_AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD) 
                    - ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(BUDGET_AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) /
                    ((SELECT SUM(ISNULL(BUDGET_AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD))) * 100 ELSE 0 END
    WHERE DESCR = 'Profit Margin'

    UPDATE #FIN
    SET VARIANCE = ACTUAL - BUDGET


    --PRIOR
    UPDATE #FIN
    SET MONTH_B = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)  
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET MONTH_B = ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)  
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET MONTH_B = (ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)  
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0) ) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)  
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET MONTH_B = CASE WHEN  ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD)) > 0 THEN    
                    ((((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD),0)) /
                    ((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP_PRIOR = POST_PERIOD AND PRIOR_MONTH = 1 GROUP BY POST_PERIOD))) * 100 ELSE 0 END
    WHERE DESCR = 'Profit Margin'

    --YOY
    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B <> 0 THEN (ACTUAL - MONTH_B) / MONTH_B ELSE 0 END
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B <> 0 THEN (ACTUAL - MONTH_B) / MONTH_B ELSE 0 END
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B <> 0 THEN (ACTUAL - MONTH_B) / MONTH_B ELSE 0 END
    WHERE DESCR = 'Net Income'

    UPDATE #FIN
    SET YOY = CASE WHEN MONTH_B <> 0 THEN (ACTUAL - MONTH_B) / MONTH_B ELSE 0 END
    WHERE DESCR = 'Profit Margin'      

    --SELECT DESCR as [Category],
    --       ISNULL(ACTUAL,0) as [Actual],
    --       ISNULL(BUDGET,0) as [Budget],
    --       ISNULL(VARIANCE,0) AS [VariancePercent],
    --       ISNULL(MONTH_B,0) AS [MTD],
    --       ISNULL(YOY,0) as [YOYPercent],
    --       MTH as [Month]
    --FROM #FIN
    --Order by MTH

    INSERT INTO #CHART_GRID 
    SELECT 'Revenue',0,0,0,0,0,0,0,0,0,0,0,0

    INSERT INTO #CHART_GRID 
    SELECT 'Expenses',0,0,0,0,0,0,0,0,0,0,0,0

    INSERT INTO #CHART_GRID 
    SELECT 'Net Income',0,0,0,0,0,0,0,0,0,0,0,0

    INSERT INTO #CHART_GRID 
    SELECT 'Profit Margin',0,0,0,0,0,0,0,0,0,0,0,0

    UPDATE #CHART_GRID
    SET January = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 1 AND DESCR = 'Revenue'),
        Feburary = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 2 AND DESCR = 'Revenue'),
        March = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 3 AND DESCR = 'Revenue'),
        April = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 4 AND DESCR = 'Revenue'),
        May = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 5 AND DESCR = 'Revenue'),
        June = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 6 AND DESCR = 'Revenue'),
        July = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 7 AND DESCR = 'Revenue'),
        August = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 8 AND DESCR = 'Revenue'),
        September = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 9 AND DESCR = 'Revenue'),
        October = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 10 AND DESCR = 'Revenue'),
        November = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 11 AND DESCR = 'Revenue'),
        December = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 12 AND DESCR = 'Revenue')
    WHERE DESCR = 'Revenue'

    UPDATE #CHART_GRID
    SET January = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 1 AND DESCR = 'Expenses'),
        Feburary = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 2 AND DESCR = 'Expenses'),
        March = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 3 AND DESCR = 'Expenses'),
        April = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 4 AND DESCR = 'Expenses'),
        May = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 5 AND DESCR = 'Expenses'),
        June = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 6 AND DESCR = 'Expenses'),
        July = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 7 AND DESCR = 'Expenses'),
        August = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 8 AND DESCR = 'Expenses'),
        September = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 9 AND DESCR = 'Expenses'),
        October = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 10 AND DESCR = 'Expenses'),
        November = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 11 AND DESCR = 'Expenses'),
        December = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 12 AND DESCR = 'Expenses')
    WHERE DESCR = 'Expenses'

    UPDATE #CHART_GRID
    SET January = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 1 AND DESCR = 'Net Income'),
        Feburary = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 2 AND DESCR = 'Net Income'),
        March = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 3 AND DESCR = 'Net Income'),
        April = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 4 AND DESCR = 'Net Income'),
        May = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 5 AND DESCR = 'Net Income'),
        June = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 6 AND DESCR = 'Net Income'),
        July = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 7 AND DESCR = 'Net Income'),
        August = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 8 AND DESCR = 'Net Income'),
        September = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 9 AND DESCR = 'Net Income'),
        October = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 10 AND DESCR = 'Net Income'),
        November = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 11 AND DESCR = 'Net Income'),
        December = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 12 AND DESCR = 'Net Income')
    WHERE DESCR = 'Net Income'
    
    UPDATE #CHART_GRID
    SET January = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 1 AND DESCR = 'Profit Margin'),
        Feburary = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 2 AND DESCR = 'Profit Margin'),
        March = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 3 AND DESCR = 'Profit Margin'),
        April = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 4 AND DESCR = 'Profit Margin'),
        May = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 5 AND DESCR = 'Profit Margin'),
        June = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 6 AND DESCR = 'Profit Margin'),
        July = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 7 AND DESCR = 'Profit Margin'),
        August = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 8 AND DESCR = 'Profit Margin'),
        September = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 9 AND DESCR = 'Profit Margin'),
        October = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 10 AND DESCR = 'Profit Margin'),
        November = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 11 AND DESCR = 'Profit Margin'),
        December = (SELECT ISNULL(ACTUAL,0) FROM #FIN WHERE MTH = 12 AND DESCR = 'Profit Margin')
    WHERE DESCR = 'Profit Margin'

   

    SELECT @MAXMONTH = MAX(MTH) FROM #PP

    If @MAXMONTH = 1
    BEGIN 
        SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], January FROM #CHART_GRID
    END
    If @MAXMONTH = 2
    BEGIN 
        SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], January,Feburary FROM #CHART_GRID
    END
    If @MAXMONTH = 3
    BEGIN 
        SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], January,Feburary,March FROM #CHART_GRID
    END
    If @MAXMONTH = 4
    BEGIN 
        SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], January,Feburary,March,April FROM #CHART_GRID
    END
    If @MAXMONTH = 5
    BEGIN 
        SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], January,Feburary,March,April,May FROM #CHART_GRID
    END
    If @MAXMONTH = 6
    BEGIN 
        SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], January,Feburary,March,April,May,June FROM #CHART_GRID
    END
    If @MAXMONTH = 7
    BEGIN 
        SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], January,Feburary,March,April,May,June,July FROM #CHART_GRID
    END
    If @MAXMONTH = 8
    BEGIN 
        SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], January,Feburary,March,April,May,June,July,August FROM #CHART_GRID
    END
    If @MAXMONTH = 9
    BEGIN 
        SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], January,Feburary,March,April,May,June,July,August,September FROM #CHART_GRID
    END
    If @MAXMONTH = 10
    BEGIN 
        SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], January,Feburary,March,April,May,June,July,August,September,October FROM #CHART_GRID
    END
    If @MAXMONTH = 11
    BEGIN 
        SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], January,Feburary,March,April,May,June,July,August,September,October,November FROM #CHART_GRID
    END
    If @MAXMONTH = 12
    BEGIN 
        SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], January,Feburary,March,April,May,June,July,August,September,October,November,December FROM #CHART_GRID
    END


END

if @Option = 5
BEGIN   

    --SELECT * FROM #TMP WHERE POST_PERIOD = '202001'

    INSERT INTO #FIN 
    SELECT 'Revenue',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Expenses',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Net Income',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    --SELECT * FROM #FIN
    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET ACTUAL = (ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Net Income'

    --SELECT * FROM #FIN    

    --INSERT INTO #FIN_YTD 
    --SELECT DISTINCT 'Revenue',0,0,0,0,0, NULL, NULL, YR, NULL, NULL, NULL FROM #FIN

    --INSERT INTO #FIN_YTD 
    --SELECT DISTINCT 'Expenses',0,0,0,0,0, NULL, NULL, YR, NULL, NULL, NULL FROM #FIN

    --INSERT INTO #FIN_YTD 
    --SELECT DISTINCT 'Net Income',0,0,0,0,0, NULL, NULL, YR, NULL, NULL, NULL FROM #FIN

    --INSERT INTO #FIN_YTD      
    --SELECT DESCR, SUM(ACTUAL) AS ACTUAL, SUM(BUDGET) AS BUDGET, SUM(ACTUAL) - SUM(BUDGET) AS VARIANCE, SUM(MONTH_B) AS MONTH_B, 0, NULL, NULL, NULL, NULL, NULL, NULL  FROM #FIN
    --GROUP BY DESCR 
    
    --SELECT DESCR, YR, SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Revenue' GROUP BY DESCR, YR

    --UPDATE #FIN_YTD
    --SET ACTUAL = (SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Revenue' AND #FIN_YTD.YR = #FIN.YR GROUP BY #FIN.DESCR, #FIN.YR)
    --WHERE #FIN_YTD.DESCR = 'Revenue'

    --UPDATE #FIN_YTD
    --SET ACTUAL = (SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Expenses' AND #FIN_YTD.YR = #FIN.YR GROUP BY #FIN.DESCR, #FIN.YR)
    --WHERE #FIN_YTD.DESCR = 'Expenses' 

    --UPDATE #FIN_YTD
    --SET ACTUAL = (SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Net Income' AND #FIN_YTD.YR = #FIN.YR GROUP BY #FIN.DESCR, #FIN.YR)
    --WHERE #FIN_YTD.DESCR = 'Net Income'    

    --SELECT DESCR as [Category],
    --       ISNULL(ACTUAL,0) as [Actual],
    --       ISNULL(BUDGET,0) as [Budget],
    --       ISNULL(VARIANCE,0) AS [VariancePercent],
    --       ISNULL(MONTH_B,0) AS [MTD],
    --       ISNULL(YOY,0) as [YOYPercent],
    --       YR as [Year]
    --FROM #FIN_YTD

    INSERT INTO #CHART_YTD
    SELECT DISTINCT YR,0,0,0 FROM #FIN
    --SELECT * FROM #FIN
    --SELECT * FROM #CHART_YTD

    UPDATE #CHART_YTD
    SET Revenue = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.DESCR = 'Revenue' AND #FIN.YR = #CHART_YTD.YR GROUP BY #FIN.DESCR, #FIN.YR)

    UPDATE #CHART_YTD
    SET Expenses = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.DESCR = 'Expenses' AND #FIN.YR = #CHART_YTD.YR GROUP BY #FIN.DESCR, #FIN.YR)
    
    UPDATE #CHART_YTD
    SET Income = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.DESCR = 'Net Income' AND #FIN.YR = #CHART_YTD.YR GROUP BY #FIN.DESCR, #FIN.YR)

    SELECT Yr as [Year], Revenue, Expenses, Income  FROM #CHART_YTD

    --INSERT INTO #CHART_GRID_YEAR 
    --SELECT 'Revenue',0,0

    --INSERT INTO #CHART_GRID_YEAR 
    --SELECT 'Expenses',0,0

    --INSERT INTO #CHART_GRID_YEAR 
    --SELECT 'Income',0,0

    --UPDATE #CHART_GRID_YEAR
    --SET Year1 = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.YR_NUMBER = 1 AND #FIN.DESCR = 'Revenue' GROUP BY #FIN.DESCR, #FIN.YR_NUMBER),
    --    Year2 = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.YR_NUMBER = 2 AND #FIN.DESCR = 'Revenue' GROUP BY #FIN.DESCR, #FIN.YR_NUMBER)
    --WHERE #CHART_GRID_YEAR.DESCR = 'Revenue'

    --UPDATE #CHART_GRID_YEAR
    --SET Year1 = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.YR_NUMBER = 1 AND #FIN.DESCR = 'Expenses' GROUP BY #FIN.DESCR, #FIN.YR_NUMBER),
    --    Year2 = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.YR_NUMBER = 2 AND #FIN.DESCR = 'Expenses' GROUP BY #FIN.DESCR, #FIN.YR_NUMBER)
    --WHERE #CHART_GRID_YEAR.DESCR = 'Expenses'

    --UPDATE #CHART_GRID_YEAR
    --SET Year1 = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.YR_NUMBER = 1 AND #FIN.DESCR = 'Net Income' GROUP BY #FIN.DESCR, #FIN.YR_NUMBER),
    --    Year2 = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.YR_NUMBER = 2 AND #FIN.DESCR = 'Net Income' GROUP BY #FIN.DESCR, #FIN.YR_NUMBER)
    --WHERE #CHART_GRID_YEAR.DESCR = 'Income'

    --SELECT DESCR AS [Category], Year1, Year2 FROM #CHART_GRID_YEAR


END

if @Option = 6
BEGIN   

    --SELECT * FROM #TMP

    INSERT INTO #FIN 
    SELECT 'Revenue',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Expenses',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    INSERT INTO #FIN 
    SELECT 'Net Income',0,0,0,0,0, PP, Mth, Yr, PP_PRIOR, MTH_PRIOR, YR_PRIOR, YR_NUMBER FROM #PP

    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)
    WHERE DESCR = 'Revenue'

    UPDATE #FIN
    SET ACTUAL = ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Expenses'

    UPDATE #FIN
    SET ACTUAL = (ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE DESCR ='S' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
                    - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR = 'COS' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0)) - ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE DESCR ='E' AND PP = POST_PERIOD GROUP BY POST_PERIOD),0) 
    WHERE DESCR = 'Net Income'

    --SELECT * FROM #FIN    

    --INSERT INTO #FIN_YTD 
    --SELECT DISTINCT 'Revenue',0,0,0,0,0, NULL, NULL, YR, NULL, NULL, NULL FROM #FIN

    --INSERT INTO #FIN_YTD 
    --SELECT DISTINCT 'Expenses',0,0,0,0,0, NULL, NULL, YR, NULL, NULL, NULL FROM #FIN

    --INSERT INTO #FIN_YTD 
    --SELECT DISTINCT 'Net Income',0,0,0,0,0, NULL, NULL, YR, NULL, NULL, NULL FROM #FIN

    --INSERT INTO #FIN_YTD      
    --SELECT DESCR, SUM(ACTUAL) AS ACTUAL, SUM(BUDGET) AS BUDGET, SUM(ACTUAL) - SUM(BUDGET) AS VARIANCE, SUM(MONTH_B) AS MONTH_B, 0, NULL, NULL, NULL, NULL, NULL, NULL  FROM #FIN
    --GROUP BY DESCR 
    
    --SELECT DESCR, YR, SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Revenue' GROUP BY DESCR, YR

    --UPDATE #FIN_YTD
    --SET ACTUAL = (SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Revenue' AND #FIN_YTD.YR = #FIN.YR GROUP BY #FIN.DESCR, #FIN.YR)
    --WHERE #FIN_YTD.DESCR = 'Revenue'

    --UPDATE #FIN_YTD
    --SET ACTUAL = (SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Expenses' AND #FIN_YTD.YR = #FIN.YR GROUP BY #FIN.DESCR, #FIN.YR)
    --WHERE #FIN_YTD.DESCR = 'Expenses' 

    --UPDATE #FIN_YTD
    --SET ACTUAL = (SELECT SUM(ACTUAL) FROM #FIN WHERE DESCR = 'Net Income' AND #FIN_YTD.YR = #FIN.YR GROUP BY #FIN.DESCR, #FIN.YR)
    --WHERE #FIN_YTD.DESCR = 'Net Income'    

    --SELECT DESCR as [Category],
    --       ISNULL(ACTUAL,0) as [Actual],
    --       ISNULL(BUDGET,0) as [Budget],
    --       ISNULL(VARIANCE,0) AS [VariancePercent],
    --       ISNULL(MONTH_B,0) AS [MTD],
    --       ISNULL(YOY,0) as [YOYPercent],
    --       YR as [Year]
    --FROM #FIN_YTD

    --INSERT INTO #CHART_YTD
    --SELECT DISTINCT YR,0,0,0 FROM #FIN

    --UPDATE #CHART_YTD
    --SET Revenue = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.DESCR = 'Revenue' AND #FIN.YR = #CHART_YTD.YR GROUP BY #FIN.DESCR, #FIN.YR)

    --UPDATE #CHART_YTD
    --SET Expenses = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.DESCR = 'Expenses' AND #FIN.YR = #CHART_YTD.YR GROUP BY #FIN.DESCR, #FIN.YR)
    
    --UPDATE #CHART_YTD
    --SET Income = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.DESCR = 'Net Income' AND #FIN.YR = #CHART_YTD.YR GROUP BY #FIN.DESCR, #FIN.YR)

    --SELECT Yr as [Year], Revenue, Expenses, Income FROM #CHART_YTD

    INSERT INTO #CHART_GRID_YEAR 
    SELECT 'Revenue',0,0

    INSERT INTO #CHART_GRID_YEAR 
    SELECT 'Expenses',0,0

    INSERT INTO #CHART_GRID_YEAR 
    SELECT 'Net Income',0,0

    UPDATE #CHART_GRID_YEAR
    SET Year1 = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.YR_NUMBER = 1 AND #FIN.DESCR = 'Revenue' GROUP BY #FIN.DESCR, #FIN.YR_NUMBER),
        Year2 = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.YR_NUMBER = 2 AND #FIN.DESCR = 'Revenue' GROUP BY #FIN.DESCR, #FIN.YR_NUMBER)
    WHERE #CHART_GRID_YEAR.DESCR = 'Revenue'

    UPDATE #CHART_GRID_YEAR
    SET Year1 = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.YR_NUMBER = 1 AND #FIN.DESCR = 'Expenses' GROUP BY #FIN.DESCR, #FIN.YR_NUMBER),
        Year2 = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.YR_NUMBER = 2 AND #FIN.DESCR = 'Expenses' GROUP BY #FIN.DESCR, #FIN.YR_NUMBER)
    WHERE #CHART_GRID_YEAR.DESCR = 'Expenses'

    UPDATE #CHART_GRID_YEAR
    SET Year1 = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.YR_NUMBER = 1 AND #FIN.DESCR = 'Net Income' GROUP BY #FIN.DESCR, #FIN.YR_NUMBER),
        Year2 = (SELECT SUM(ACTUAL) FROM #FIN WHERE #FIN.YR_NUMBER = 2 AND #FIN.DESCR = 'Net Income' GROUP BY #FIN.DESCR, #FIN.YR_NUMBER)
    WHERE #CHART_GRID_YEAR.DESCR = 'Net Income'

    SELECT CASE WHEN DESCR = 'Revenue' THEN 'Gross Income' ELSE DESCR END AS [Category], Year1, Year2 FROM #CHART_GRID_YEAR


END

if @Option = 7
BEGIN   

   -- SELECT * FROM #TMP

    INSERT INTO #FIN_CLIENT
    SELECT DISTINCT CL_CODE, 0,0 FROM #TMP WHERE CL_CODE IS NOT NULL

    DECLARE @year1 int, @year2 int, @rowct int

    SELECT @year1 = MIN(YR) FROM #PP 
    SELECT @year2 = MAX(YR) FROM #PP

    --SELECT @year1, @year2

    UPDATE #FIN_CLIENT
    SET YR1 = (SELECT ISNULL(SUM(AMT) * -1,0) FROM #TMP WHERE #TMP.YR = @year1 and #TMP.CL_CODE = #FIN_CLIENT.CLIENT AND DESCR = 'S' GROUP BY #TMP.CL_CODE, #TMP.YR)

    UPDATE #FIN_CLIENT
    SET YR2 = (SELECT ISNULL(SUM(AMT) * -1,0) FROM #TMP WHERE #TMP.YR = @year2 and #TMP.CL_CODE = #FIN_CLIENT.CLIENT AND DESCR = 'S' GROUP BY #TMP.CL_CODE, #TMP.YR)

    --SELECT CL_CODE, ISNULL(SUM(AMT) * -1,0),NULL, NULL, YR
    --FROM #TMP
    --WHERE DESCR = 'S'
    --GROUP BY CL_CODE, YR

    SELECT @rowct = COUNT(*) FROM #FIN_CLIENT WHERE ISNULL(YR2,0) <> 0
    --SELECT * FROM #FIN_CLIENT
    if @rowct = 0
    BEGIN
        SELECT 'None' as Client, 0 AS Year1, 0 AS Year2
    END
    ELSE
    BEGIN
        SELECT A.Client, A.Year1, A.Year2 FROM (
        SELECT TOP 10 CL_NAME as Client, ISNULL(YR1,0) as Year1, ISNULL(YR2,0) as Year2 
        FROM #FIN_CLIENT INNER JOIN CLIENT ON CLIENT.CL_CODE = #FIN_CLIENT.CLIENT
        ORDER BY ISNULL(YR2,0) DESC) AS A WHERE A.Year2 <> 0 ORDER BY A.Year2 DESC, A.Client ASC
    END

    

    

END

if @Option = 8
BEGIN            

    DECLARE @rowct2 int
    
    INSERT INTO #FIN_CLIENT_TOTALS
    SELECT TOP 10 CL_CODE, ISNULL(SUM(AMT) * -1,0), YR
    FROM #TMP
    WHERE DESCR = 'S' AND CL_CODE IS NOT NULL AND YR = @YTD_Year 
    GROUP BY CL_CODE, YR    
    ORDER BY ISNULL(SUM(AMT) * -1,0) DESC

    --INSERT INTO #FIN_CLIENT_CLIENTS
    --SELECT CLIENT FROM #FIN_CLIENT_TOTALS


    INSERT INTO #FIN_CLIENT_TOTALS
    SELECT CL_CODE, ISNULL(SUM(AMT) * -1,0), YR
    FROM #TMP
    WHERE DESCR = 'S' AND #TMP.YR = @YTD_Year - 1 AND CL_CODE IS NOT NULL AND #TMP.CL_CODE IN (SELECT CLIENT FROM #FIN_CLIENT_TOTALS WHERE YR = @YTD_Year)
    GROUP BY CL_CODE, YR    
    ORDER BY ISNULL(SUM(AMT) * -1,0) DESC    

    --SELECT * FROM #FIN_CLIENT_TOTALS

    INSERT INTO #FIN_CLIENT_GRID
    SELECT DISTINCT YR FROM #FIN_CLIENT_TOTALS 

    INSERT INTO #FIN_CLIENT_TOTALS_GRID
    SELECT * FROM #FIN_CLIENT_TOTALS ORDER BY YR DESC, AMT DESC

    --SELECT * FROM #FIN_CLIENT_TOTALS_GRID

    DECLARE cl_col_cursor CURSOR FOR 
		 SELECT CLIENT, CL_NAME  
		   FROM #FIN_CLIENT_TOTALS_GRID INNER JOIN CLIENT ON CLIENT.CL_CODE = #FIN_CLIENT_TOTALS_GRID.CLIENT
	     WHERE YR = @YTD_Year
         Order By AMT DESC, CL_NAME
    
    OPEN cl_col_cursor

	FETCH NEXT FROM cl_col_cursor INTO @cl_code, @client

	WHILE ( @@FETCH_STATUS <> -1 )
	BEGIN		
		SELECT @pos2 = ISNULL(ORDINAL_POSITION,0) FROM tempdb.information_schema.columns where table_name like '#FIN_CLIENT_GRID%' and column_name like @client
		If exists (Select * from tempdb.information_schema.columns where table_name like '#FIN_CLIENT_GRID%' and column_name like @client) --AND (@pos >= @pos2)
		Begin
			SELECT @alter_sql = 'ALTER TABLE #FIN_CLIENT_GRID ADD [' + @client + '_' + CAST(2 as varchar(5)) + '] decimal(20,3)'							
		End
		Else
		Begin
			SELECT @alter_sql = 'ALTER TABLE #FIN_CLIENT_GRID ADD [' + @client + '] decimal(20,3)'
		End

        If exists (Select * from tempdb.information_schema.columns where table_name like '#FIN_CLIENT_GRID%' and column_name like @client) --AND (@pos >= @pos2)
		Begin			
			SELECT @update_sql = 'UPDATE #FIN_CLIENT_GRID SET [' + @client + '_' + CAST(2 as varchar(5)) + '] decimal(20,3)	'	
		End
		Else
		Begin
			SELECT @update_sql = 'UPDATE #FIN_CLIENT_GRID SET [' + @client + '] = ISNULL((SELECT AMT FROM #FIN_CLIENT_TOTALS WHERE CLIENT = ''' + @cl_code + ''' AND #FIN_CLIENT_TOTALS.YR = #FIN_CLIENT_GRID.[Year] ),0)'
		End

        SELECT @alter_sql = @alter_sql + ' NULL'
								
		BEGIN TRY
			EXECUTE ( @alter_sql )
		END TRY
		
		BEGIN CATCH
			GOTO FNEXT
		END CATCH
		
		FNEXT:
		EXECUTE ( @update_sql )
		
		FETCH NEXT FROM cl_col_cursor INTO @cl_code, @client
	END

	CLOSE cl_col_cursor
	DEALLOCATE cl_col_cursor

    SELECT @rowct2 = COUNT(*) FROM #FIN_CLIENT_TOTALS
    
    if @rowct2 = 0
    BEGIN
        INSERT INTO #FIN_CLIENT_GRID
        SELECT @YTD_Year - 1 as [Year]

        INSERT INTO #FIN_CLIENT_GRID
        SELECT @YTD_Year as [Year]

        SELECT * FROM #FIN_CLIENT_GRID 
    END
    ELSE
    BEGIN
        SELECT * FROM #FIN_CLIENT_GRID 
    END

    

    -- SELECT DISTINCT CLIENT, CL_NAME
		  -- FROM #FIN_CLIENT_TOTALS INNER JOIN CLIENT ON CLIENT.CL_CODE = #FIN_CLIENT_TOTALS.CLIENT
	   --ORDER BY CL_NAME

    --SELECT @year1 = MIN(YR) FROM #PP 
    --SELECT @year2 = MAX(YR) FROM #PP

    ----SELECT @year1, @year2

    --UPDATE #FIN_CLIENT
    --SET YR1 = (SELECT ISNULL(SUM(AMT) * -1,0) FROM #TMP WHERE #TMP.YR = @year1 and #TMP.CL_CODE = #FIN_CLIENT.CLIENT AND DESCR = 'S' GROUP BY #TMP.CL_CODE, #TMP.YR)

    --UPDATE #FIN_CLIENT
    --SET YR2 = (SELECT ISNULL(SUM(AMT) * -1,0) FROM #TMP WHERE #TMP.YR = @year2 and #TMP.CL_CODE = #FIN_CLIENT.CLIENT AND DESCR = 'S' GROUP BY #TMP.CL_CODE, #TMP.YR)



    

    --SELECT CL_NAME as Client, YR1 as Year1, YR2 as Year2 
    --FROM #FIN_CLIENT INNER JOIN CLIENT ON CLIENT.CL_CODE = #FIN_CLIENT.CLIENT    

END

if @Option = 9
BEGIN   

     INSERT INTO #CHART_GRID_BILLABLE
     SELECT 84,86,88,90,85,92,82,80,81,87,79,80
    

    SELECT @MAXMONTH = MAX(MTH) FROM #PP

    If @MAXMONTH = 1
    BEGIN 
        SELECT January FROM #CHART_GRID_BILLABLE
    END
    If @MAXMONTH = 2
    BEGIN 
        SELECT January,Feburary FROM #CHART_GRID_BILLABLE
    END
    If @MAXMONTH = 3
    BEGIN 
        SELECT January,Feburary,March FROM #CHART_GRID_BILLABLE
    END
    If @MAXMONTH = 4
    BEGIN 
        SELECT January,Feburary,March,April FROM #CHART_GRID_BILLABLE
    END
    If @MAXMONTH = 5
    BEGIN 
        SELECT January,Feburary,March,April,May FROM #CHART_GRID_BILLABLE
    END
    If @MAXMONTH = 6
    BEGIN 
        SELECT January,Feburary,March,April,May,June FROM #CHART_GRID_BILLABLE
    END
    If @MAXMONTH = 7
    BEGIN 
        SELECT January,Feburary,March,April,May,June,July FROM #CHART_GRID_BILLABLE
    END
    If @MAXMONTH = 8
    BEGIN 
        SELECT January,Feburary,March,April,May,June,July,August FROM #CHART_GRID_BILLABLE
    END
    If @MAXMONTH = 9
    BEGIN 
        SELECT January,Feburary,March,April,May,June,July,August,September FROM #CHART_GRID_BILLABLE
    END
    If @MAXMONTH = 10
    BEGIN 
        SELECT January,Feburary,March,April,May,June,July,August,September,October FROM #CHART_GRID_BILLABLE
    END
    If @MAXMONTH = 11
    BEGIN 
        SELECT January,Feburary,March,April,May,June,July,August,September,October,November FROM #CHART_GRID_BILLABLE
    END
    If @MAXMONTH = 12
    BEGIN 
        SELECT January,Feburary,March,April,May,June,July,August,September,October,November,December FROM #CHART_GRID_BILLABLE
    END



    --DELETE FROM W_EMP_STD_HOURS WHERE UPPER(USERID) = UPPER(@UserID)


END

if @Option = 10
BEGIN   

   --SELECT * FROM #TMP WHERE POST_PERIOD = @ClientEndPP 

   INSERT INTO #FIN_CLIENT_FEES
   SELECT CL_CODE, 0, 0, YR
   FROM #TMP
   WHERE POST_PERIOD = @ClientEndPP AND CL_CODE IS NOT NULL
   GROUP BY CL_CODE, YR  

   UPDATE #FIN_CLIENT_FEES
   SET AMT = ISNULL((SELECT ISNULL(SUM(AMT) * -1,0) FROM #TMP WHERE #TMP.DESCR = 'S' AND POST_PERIOD = @ClientEndPP AND #TMP.CL_CODE = #FIN_CLIENT_FEES.CLIENT GROUP BY #TMP.CL_CODE, #TMP.DESCR),0)

   UPDATE #FIN_CLIENT_FEES
   SET AMT_PRIOR = ISNULL((SELECT ISNULL(SUM(AMT) * -1,0) FROM #TMP WHERE #TMP.DESCR = 'S' AND POST_PERIOD < @ClientEndPP AND #TMP.CL_CODE = #FIN_CLIENT_FEES.CLIENT GROUP BY #TMP.CL_CODE, #TMP.DESCR),0)
   
   SELECT CL_NAME as Client, AMT as Amount--, AMT_PRIOR
   FROM #FIN_CLIENT_FEES INNER JOIN CLIENT ON CLIENT.CL_CODE = #FIN_CLIENT_FEES.CLIENT
   WHERE ISNULL(AMT_PRIOR,0) = 0 and AMT <> 0

END

if @Option = 11
BEGIN   

   --SELECT * FROM #TMP

   INSERT INTO #FIN_CLIENT_GROW
   SELECT DISTINCT CL_CODE, 0,0,0,0
   FROM #TMP    

     
   UPDATE #FIN_CLIENT_GROW
    SET AMT = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE #TMP.DESCR ='S' AND #TMP.YR = @YTD_Year AND #FIN_CLIENT_GROW.CLIENT = #TMP.CL_CODE GROUP BY #TMP.CL_CODE, #TMP.YR),0) 
                    --- ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE #TMP.DESCR = 'COS' AND #TMP.YR = @YTD_Year AND #FIN_CLIENT_GROW.CLIENT = #TMP.CL_CODE GROUP BY #TMP.CL_CODE, #TMP.YR),0) 

    --PRIOR
    UPDATE #FIN_CLIENT_GROW
    SET YEAR_B = ISNULL((SELECT SUM(ISNULL(AMT,0)) * -1 FROM #TMP WHERE #TMP.DESCR ='S' AND #TMP.YR = @YTD_Year-1 AND #FIN_CLIENT_GROW.CLIENT = #TMP.CL_CODE AND PRIOR_MONTH = 1 GROUP BY #TMP.CL_CODE, #TMP.YR),0)  
                    --- ISNULL((SELECT SUM(ISNULL(AMT,0)) FROM #TMP WHERE #TMP.DESCR = 'COS' AND #TMP.YR = @YTD_Year-1 AND #FIN_CLIENT_GROW.CLIENT = #TMP.CL_CODE AND PRIOR_MONTH = 1 GROUP BY #TMP.CL_CODE, #TMP.YR),0) 
   

   DELETE FROM #FIN_CLIENT_GROW
   WHERE AMT = 0 AND YEAR_B = 0
   --SELECT * FROM #FIN_CLIENT_GROW

    --YOY
    UPDATE #FIN_CLIENT_GROW
    SET YOY = (AMT - YEAR_B)

    --GROWTH
    UPDATE #FIN_CLIENT_GROW
    SET GROWTH = CASE WHEN ISNULL(YEAR_B,0) <> 0 THEN ((AMT - YEAR_B) / YEAR_B) * 100 ELSE 0 END
    

   SELECT TOP 3 CL_NAME AS Client, YOY AS YOY, GROWTH as Growth 
   FROM #FIN_CLIENT_GROW INNER JOIN CLIENT ON CLIENT.CL_CODE = #FIN_CLIENT_GROW.CLIENT
   ORDER BY YOY DESC

   

END

if @Option = 12
BEGIN 
    
    DECLARE @rowct3 int

    INSERT INTO #FIN_CLIENT_TOTALS
    SELECT TOP 10 CL_CODE, ISNULL(SUM(AMT) * -1,0), YR
    FROM #TMP
    WHERE DESCR = 'S' AND CL_CODE IS NOT NULL AND YR = @YTD_Year 
    GROUP BY CL_CODE, YR    
    ORDER BY ISNULL(SUM(AMT) * -1,0) DESC

    --INSERT INTO #FIN_CLIENT_CLIENTS
    --SELECT CLIENT FROM #FIN_CLIENT_TOTALS


    INSERT INTO #FIN_CLIENT_TOTALS
    SELECT CL_CODE, ISNULL(SUM(AMT) * -1,0), YR
    FROM #TMP
    WHERE DESCR = 'S' AND #TMP.YR = @YTD_Year - 1 AND CL_CODE IS NOT NULL AND #TMP.CL_CODE IN (SELECT CLIENT FROM #FIN_CLIENT_TOTALS WHERE YR = @YTD_Year)
    GROUP BY CL_CODE, YR    
    ORDER BY ISNULL(SUM(AMT) * -1,0) DESC    

    --SELECT * FROM #FIN_CLIENT_TOTALS

    INSERT INTO #FIN_CLIENT_GRID
    SELECT DISTINCT YR FROM #FIN_CLIENT_TOTALS 

    INSERT INTO #FIN_CLIENT_TOTALS_GRID
    SELECT * FROM #FIN_CLIENT_TOTALS ORDER BY YR DESC, AMT DESC

    --SELECT * FROM #FIN_CLIENT_TOTALS_GRID

    --DECLARE cl_col_cursor CURSOR FOR 

    SELECT @rowct2 = COUNT(*) FROM #FIN_CLIENT_TOTALS_GRID
    
    if @rowct2 = 0
    BEGIN
        SELECT 'None' as Client
    END
    ELSE
    BEGIN
        SELECT CL_NAME as Client  
		   FROM #FIN_CLIENT_TOTALS_GRID INNER JOIN CLIENT ON CLIENT.CL_CODE = #FIN_CLIENT_TOTALS_GRID.CLIENT
	     WHERE YR = @YTD_Year
         Order By AMT DESC, CL_NAME
    END


		 
    
 --   OPEN cl_col_cursor

	--FETCH NEXT FROM cl_col_cursor INTO @cl_code, @client

	--WHILE ( @@FETCH_STATUS <> -1 )
	--BEGIN		
	--	SELECT @pos2 = ISNULL(ORDINAL_POSITION,0) FROM tempdb.information_schema.columns where table_name like '#FIN_CLIENT_GRID%' and column_name like @client
	--	If exists (Select * from tempdb.information_schema.columns where table_name like '#FIN_CLIENT_GRID%' and column_name like @client) --AND (@pos >= @pos2)
	--	Begin
	--		SELECT @alter_sql = 'ALTER TABLE #FIN_CLIENT_GRID ADD [' + @client + '_' + CAST(2 as varchar(5)) + '] decimal(20,3)'							
	--	End
	--	Else
	--	Begin
	--		SELECT @alter_sql = 'ALTER TABLE #FIN_CLIENT_GRID ADD [' + @client + '] decimal(20,3)'
	--	End

 --       If exists (Select * from tempdb.information_schema.columns where table_name like '#FIN_CLIENT_GRID%' and column_name like @client) --AND (@pos >= @pos2)
	--	Begin			
	--		SELECT @update_sql = 'UPDATE #FIN_CLIENT_GRID SET [' + @client + '_' + CAST(2 as varchar(5)) + '] decimal(20,3)	'	
	--	End
	--	Else
	--	Begin
	--		SELECT @update_sql = 'UPDATE #FIN_CLIENT_GRID SET [' + @client + '] = ISNULL((SELECT AMT FROM #FIN_CLIENT_TOTALS WHERE CLIENT = ''' + @cl_code + ''' AND #FIN_CLIENT_TOTALS.YR = #FIN_CLIENT_GRID.[Year] ),0)'
	--	End

 --       SELECT @alter_sql = @alter_sql + ' NULL'
								
	--	BEGIN TRY
	--		EXECUTE ( @alter_sql )
	--	END TRY
		
	--	BEGIN CATCH
	--		GOTO FNEXT2
	--	END CATCH
		
	--	FNEXT2:
	--	EXECUTE ( @update_sql )
		
	--	FETCH NEXT FROM cl_col_cursor INTO @cl_code, @client
	--END

	--CLOSE cl_col_cursor
	--DEALLOCATE cl_col_cursor

 --   SELECT * FROM #FIN_CLIENT_GRID 
    

END

DROP TABLE #CHART
DROP TABLE #CHART_GRID_YEAR
DROP TABLE #CHART_GRID
DROP TABLE #CHART_YTD
DROP TABLE #FIN
DROP TABLE #FIN_CLIENT
DROP TABLE #FIN_CLIENT_CLIENTS
DROP TABLE #FIN_CLIENT_GRID
DROP TABLE #FIN_CLIENT_TOTALS
DROP TABLE #FIN_YTD
DROP TABLE #PP
DROP TABLE #TMP
DROP TABLE #TMP_TOTAL_AMTS
DROP TABLE #CHART_GRID_BILLABLE
DROP TABLE #FIN_CLIENT_FEES
DROP TABLE #FIN_CLIENT_GROW
DROP TABLE #FIN_CLIENT_YOY

GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO


--CREATE TABLE #FIN (
--DESCR VARCHAR(20),
--ACTUAL DECIMAL(20,3),
--BUDGET DECIMAL(20,3),
--VARIANCE DECIMAL(20,3),
--MONTH_B DECIMAL(20,3),
--PP VARCHAR(6)
--)
