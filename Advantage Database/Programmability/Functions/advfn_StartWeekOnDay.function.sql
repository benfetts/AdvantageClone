--DROP FUNCTION [dbo].[advfn_StartWeekOnDay]
CREATE FUNCTION [dbo].[advfn_StartWeekOnDay] (@USER_CODE VARCHAR(100))
RETURNS TINYINT
AS 
BEGIN
	DECLARE
		@START_WEEK_ON TINYINT,
		@USER_START_WEEK_ON TINYINT,
		@FIRST_DAY_OF_WEEK SMALLDATETIME

	SET @START_WEEK_ON = 0;
	SELECT @START_WEEK_ON = CAST(ISNULL(AGY_SETTINGS_VALUE, [AGY_SETTINGS_DEF]) AS TINYINT) FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'TS_START_WEEK_ON';
	SELECT @USER_START_WEEK_ON = CAST(VARIABLE_VALUE AS TINYINT) FROM APP_VARS WHERE USERID = @USER_CODE AND [APPLICATION] = 'TIMESHEET' AND VARIABLE_NAME='START_WEEK_ON';
	IF NOT @USER_START_WEEK_ON IS NULL
	BEGIN
		SET @START_WEEK_ON = @USER_START_WEEK_ON;
	END
	IF @START_WEEK_ON = 6
	BEGIN
		SET @START_WEEK_ON = @START_WEEK_ON - 6;
	END
	ELSE
	BEGIN
		SET @START_WEEK_ON = @START_WEEK_ON + 1;
	END
	RETURN ISNULL(@START_WEEK_ON, 0);  -- SAT = 6, SUN = 0, MON = 1
	/*
		USAGE:
		SELECT @FIRST_DAY_OF_WEEK = (SELECT DATEADD(DAY, @START_WEEK_ON - DATEPART(WEEKDAY, @TEST_DATE), @TEST_DATE));
		SELECT @FIRST_DAY_OF_WEEK = (SELECT DATEADD(DAY, @START_WEEK_ON - DATEPART(WEEKDAY, GETDATE()), GETDATE()));
	*/
END