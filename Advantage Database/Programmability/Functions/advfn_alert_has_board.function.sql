IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID( N'[dbo].[advfn_alert_has_board]' ) AND xtype IN ( N'FN', N'IF', N'TF' ))
BEGIN
	DROP FUNCTION [dbo].[advfn_alert_has_board]
END
GO
CREATE FUNCTION [dbo].[advfn_alert_has_board](@ALERT_ID INT)
RETURNS BIT
BEGIN
    /***** QUERY *****/
	DECLARE
		@JOB_NUMBER INT,
		@JOB_COMPONENT_NBR SMALLINT,
		@HAS_BOARD BIT
	SET @HAS_BOARD = 0;
	IF EXISTS (SELECT 1 FROM SPRINT_DTL SD WHERE SD.ALERT_ID = @ALERT_ID)
	BEGIN
		SET @HAS_BOARD = 1;
	END
	IF @HAS_BOARD IS NULL OR @HAS_BOARD = 0
	BEGIN
		SELECT 
			@JOB_NUMBER = JOB_NUMBER,
			@JOB_COMPONENT_NBR = JOB_COMPONENT_NBR
		FROM
			ALERT A
		WHERE
			A.ALERT_ID = @ALERT_ID
			AND A.IS_WORK_ITEM = 1;
		IF NOT @JOB_NUMBER IS NULL AND NOT @JOB_COMPONENT_NBR IS NULL
		BEGIN
			IF EXISTS (SELECT 1 
					   FROM BOARD_JOB BJ INNER JOIN BOARD B ON BJ.BOARD_ID = B.ID 
					   WHERE B.COMPLETED_DATE IS NULL AND (B.IS_ACTIVE IS NULL OR B.IS_ACTIVE = 1) 
					   AND BJ.JOB_NUMBER = @JOB_NUMBER AND BJ.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
			BEGIN
				SET @HAS_BOARD = 1
			END
		END
	END
	IF @HAS_BOARD IS NULL OR @HAS_BOARD = 0
	BEGIN
		IF EXISTS (SELECT 1 FROM BOARD B WHERE B.INCL_ALL_JOBS = 1 AND B.COMPLETED_DATE IS NULL AND (B.IS_ACTIVE IS NULL OR B.IS_ACTIVE = 1))
		BEGIN
			SET @HAS_BOARD = 1
		END
	END
    /***** QUERY *****/
	RETURN ISNULL(@HAS_BOARD, 0);
END