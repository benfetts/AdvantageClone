CREATE FUNCTION [dbo].[advfn_time_sep_verify]
	(@DTL_ID INT,
	 @MEDIA_TYPE VARCHAR(10),
	 @TIME_SEPARATION INT)
RETURNS BIT WITH SCHEMABINDING
AS
BEGIN

	DECLARE @ALLOWED_PREV_RUN_TIME SMALLDATETIME,
			@ALLOWED_NEXT_RUN_TIME SMALLDATETIME,
			@RUN_TIME SMALLDATETIME,
			@PREV_RUN_TIME SMALLDATETIME,
			@NEXT_RUN_TIME SMALLDATETIME,
			@VERIFIED BIT,
			@ORDER_NUMBER INT,
			@NETWORK_ID VARCHAR(10)

	--DECLARE @DETAILS TABLE (RUN_TIME SMALLDATETIME)

	SET @VERIFIED = 1

	IF @MEDIA_TYPE = 'Radio'
	BEGIN

		SELECT 
			@RUN_TIME = [RUN_DATE] + CAST(TIME_OF_DAY AS smalldatetime),
			--@ORDER_LINE_NBR = D.ORDER_LINE_NBR,
			@ORDER_NUMBER = D.ORDER_NBR
		FROM 
			dbo.AP_RADIO_BROADCAST_DTL D
		WHERE 
			DTL_ID = @DTL_ID

		--INSERT INTO @DETAILS
		--	SELECT 
		--		[RUN_DATE] + CAST(TIME_OF_DAY AS smalldatetime)
		--	FROM 
		--		dbo.AP_RADIO_BROADCAST_DTL D 
		--	WHERE
		--		D.ORDER_NBR = @ORDER_NUMBER AND
		--		--D.ORDER_LINE_NBR = @ORDER_LINE_NBR AND
		--		D.DTL_ID <> @DTL_ID
		
		IF EXISTS(SELECT 1 FROM dbo.AP_RADIO_BROADCAST_DTL WHERE ORDER_NBR = @ORDER_NUMBER AND DTL_ID <> @DTL_ID AND DATEDIFF(N, [RUN_DATE] + CAST(TIME_OF_DAY AS smalldatetime), @RUN_TIME) between 0 AND @TIME_SEPARATION)
			SET @VERIFIED = 0
	END
	ELSE IF @MEDIA_TYPE = 'TV'
	BEGIN
	
		SELECT 
			@RUN_TIME = [RUN_DATE] + CAST(TIME_OF_DAY AS smalldatetime),
			--@ORDER_LINE_NBR = D.ORDER_LINE_NBR,
			@ORDER_NUMBER = D.ORDER_NBR,
			@NETWORK_ID = COALESCE(NETWORK_ID, '')
		FROM 
			dbo.AP_TV_BROADCAST_DTL D
		WHERE 
			DTL_ID = @DTL_ID

		--INSERT INTO @DETAILS
		--	SELECT 
		--		[RUN_DATE] + CAST(TIME_OF_DAY AS smalldatetime)
		--	FROM 
		--		dbo.AP_TV_BROADCAST_DTL D 
		--	WHERE
		--		D.ORDER_NBR = @ORDER_NUMBER AND
		--		--D.ORDER_LINE_NBR = @ORDER_LINE_NBR AND
		--		D.DTL_ID <> @DTL_ID AND
		--		COALESCE(D.NETWORK_ID, '') = COALESCE(@NETWORK_ID, '')

		IF EXISTS(SELECT 1 FROM dbo.AP_TV_BROADCAST_DTL WHERE ORDER_NBR = @ORDER_NUMBER AND COALESCE(NETWORK_ID, '') = @NETWORK_ID AND DTL_ID <> @DTL_ID AND DATEDIFF(N, [RUN_DATE] + CAST(TIME_OF_DAY AS smalldatetime), @RUN_TIME) between 0 AND @TIME_SEPARATION)
			SET @VERIFIED = 0
	END
	
	--SET @ALLOWED_PREV_RUN_TIME = DATEADD(MINUTE, @TIME_SEPARATION * -1, @RUN_TIME)
	--SET @ALLOWED_NEXT_RUN_TIME = DATEADD(MINUTE, @TIME_SEPARATION, @RUN_TIME)
	
	--SELECT TOP 1
	--	@PREV_RUN_TIME = RUN_TIME
	--FROM
	--	@DETAILS
	--WHERE
	--	RUN_TIME <= @RUN_TIME
	--ORDER BY
	--	RUN_TIME DESC
		
	--SELECT TOP 1
	--	@NEXT_RUN_TIME = RUN_TIME
	--FROM
	--	@DETAILS
	--WHERE
	--	RUN_TIME >= @RUN_TIME
	--ORDER BY
	--	RUN_TIME DESC

	--IF @PREV_RUN_TIME IS NOT NULL
	--BEGIN

	--	IF @PREV_RUN_TIME > @ALLOWED_PREV_RUN_TIME
	--		SET @VERIFIED = 0

	--END

	--IF @NEXT_RUN_TIME IS NOT NULL
	--BEGIN

	--	IF @NEXT_RUN_TIME < @ALLOWED_NEXT_RUN_TIME
	--		SET @VERIFIED = 0

	--END

	RETURN @VERIFIED

END
GO
