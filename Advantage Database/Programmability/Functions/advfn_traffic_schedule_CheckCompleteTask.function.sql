if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[advfn_traffic_schedule_CheckCompleteTask]') and xtype in (N'FN', N'IF', N'TF'))
drop function [dbo].[advfn_traffic_schedule_CheckCompleteTask]
GO
CREATE FUNCTION [dbo].[advfn_traffic_schedule_CheckCompleteTask](@ALERT_ID INT,
																 @USER_CODE VARCHAR(100),
																 @EMP_CODE VARCHAR(6),
																 @FORCE_ASSIGNMENT_COMPLETE BIT)
RETURNS BIT
AS 
BEGIN

	DECLARE @IS_ASSIGNMENT BIT,
			@CURR_ASSIGN_EMP VARCHAR(100),
			@IS_ASSIGNMENT_CC BIT,			
			@FULLY_COMPLETE_TASK BIT,		-- true/false whether to fully complete task
			@JOB_NUMBER INT,
			@JOB_COMPONENT_NBR SMALLINT,
			@SEQ_NBR SMALLINT,
			@TASK_ASSIGNMENTS SMALLINT,		-- Remaining that have not been marked as temp complete
			@EMP_NEEDED_TO_COMP_TASK BIT	-- Determines whether employee dismissing/completing alert/assignment is assigned to task & has marked theirs temp complete

	SET @FULLY_COMPLETE_TASK = 0

	SET @JOB_NUMBER = 0
	SET @JOB_COMPONENT_NBR = 0
	SET @SEQ_NBR = -1
	SET @IS_ASSIGNMENT_CC = 0

	SELECT 
		@JOB_NUMBER = JOB_NUMBER,
		@JOB_COMPONENT_NBR = JOB_COMPONENT_NBR,
		@SEQ_NBR = TASK_SEQ_NBR
	FROM
		dbo.ALERT
	WHERE
		ALERT_ID = @ALERT_ID AND
		ALERT_LEVEL = 'PST'

	IF @JOB_NUMBER > 0 AND @JOB_COMPONENT_NBR > 0 AND @SEQ_NBR > -1 
	BEGIN

		IF EXISTS (SELECT * FROM dbo.JOB_TRAFFIC_DET WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND SEQ_NBR = @SEQ_NBR AND JOB_COMPLETED_DATE IS NULL)
		BEGIN

			IF EXISTS (SELECT * FROM dbo.AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'TRF_COMP_ALERT' AND CAST(AGY_SETTINGS_VALUE AS INT) IN (1,2))
			BEGIN
			
				IF EXISTS (SELECT ALERT_ID FROM ALERT WITH(NOLOCK) WHERE ALERT_ID = @ALERT_ID AND (NOT ALRT_NOTIFY_HDR_ID IS NULL) AND (NOT ALERT_STATE_ID IS NULL))
				BEGIN
					SET @IS_ASSIGNMENT = 1;
				END

				SELECT 
					@CURR_ASSIGN_EMP = A.EMP_CODE
				FROM
					(SELECT 
						EMP_CODE AS EMP_CODE 
					 FROM 
						ALERT_RCPT WITH(NOLOCK) 
					 WHERE 
						ALERT_ID = @ALERT_ID AND 
						CURRENT_NOTIFY = 1 
					 UNION 
					 SELECT 
						EMP_CODE AS EMP_CODE 
					 FROM 
						ALERT_RCPT_DISMISSED WITH(NOLOCK) 
					 WHERE 
						ALERT_ID = @ALERT_ID AND 
						CURRENT_NOTIFY = 1) AS A;

				SET @CURR_ASSIGN_EMP = ISNULL(@CURR_ASSIGN_EMP,'');
				
				IF @IS_ASSIGNMENT = 1 AND (@CURR_ASSIGN_EMP <> @EMP_CODE)
				BEGIN
					SET @IS_ASSIGNMENT_CC = 1;
				END
				
				IF @IS_ASSIGNMENT = 1 AND @FORCE_ASSIGNMENT_COMPLETE = 0 AND (@CURR_ASSIGN_EMP = @EMP_CODE) -- ASSIGNED & CURRENT ASSIGNEE, BUT ONLY DISMISSING NOT COMPLETING
				BEGIN
					SET @IS_ASSIGNMENT_CC = 1;
				END

				SELECT 
					@TASK_ASSIGNMENTS = COUNT(*),
					@EMP_NEEDED_TO_COMP_TASK = CASE WHEN COUNT(CASE WHEN EMP_CODE = @EMP_CODE THEN 1 END) > 0 THEN 1 ELSE 0 END
				FROM
					dbo.JOB_TRAFFIC_DET_EMPS
				WHERE
					JOB_NUMBER = @JOB_NUMBER AND
					JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND
					SEQ_NBR = @SEQ_NBR AND
					TEMP_COMP_DATE IS NULL
					
				IF @TASK_ASSIGNMENTS > 0
				BEGIN

					IF @IS_ASSIGNMENT = 1 
					BEGIN

						IF @FULLY_COMPLETE_TASK = 1 OR @IS_ASSIGNMENT_CC = 0
							SET @FULLY_COMPLETE_TASK = 1

					END
					ELSE
					BEGIN
						
						IF @EMP_NEEDED_TO_COMP_TASK = 1
						BEGIN

							IF @TASK_ASSIGNMENTS = 1  -- ONLY 1 EMPLOYEE LEFT TO COMPLETE TASK & IS CURRENT EMPLOYEE DISMISSING ALERT
							BEGIN
								
								SET @FULLY_COMPLETE_TASK = 1
								
							END

						END
							
					END

				END
				ELSE 
				BEGIN
					
					-- NO EMPLOYEES ASSIGNED TO TASK/ALL EMPLOYEES MARKED TEMP COMPLETE
					IF @IS_ASSIGNMENT = 1
					BEGIN

						IF @IS_ASSIGNMENT_CC = 0
							SET @FULLY_COMPLETE_TASK = 1 -- CC'd EMPLOYEES CANNOT DISMISS AN ASSIGNMENT

					END
					ELSE
					BEGIN
					
						SET @FULLY_COMPLETE_TASK = 1 -- FIRST EMPLOYEE TO DISMISS ALERT COMPLETES THE ALERT

					END

				END

			END

		END
		
	END

	RETURN @FULLY_COMPLETE_TASK

END