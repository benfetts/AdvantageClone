IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID( N'[dbo].[advtf_alert_inactive_work_items]' ) AND xtype IN ( N'FN', N'IF', N'TF' ))
BEGIN
	DROP FUNCTION [dbo].[advtf_alert_inactive_work_items]
END
GO
CREATE FUNCTION [dbo].[advtf_alert_inactive_work_items]()
RETURNS
	@RETURN_TABLE TABLE ([ALERT_ID] INT)
AS
BEGIN

    /***** QUERY *****/
	DECLARE
		@HAS_ALL_JOBS_BOARD BIT,
		@HAS_ACTIVE_ALL_JOBS_SPRINT BIT

	SELECT 
		@HAS_ALL_JOBS_BOARD = CASE
										WHEN COUNT(1) > 0 THEN CAST(1 AS BIT)
										ELSE CAST(0 AS BIT)
									END 
	FROM 
		BOARD B
		INNER JOIN SPRINT_HDR SH ON SH.BOARD_ID = B.ID
	WHERE 
		B.INCL_ALL_JOBS = 1 
		AND (B.IS_ACTIVE IS NULL OR B.IS_ACTIVE = 1);

	--SELECT @HAS_ALL_JOBS_BOARD
	IF @HAS_ALL_JOBS_BOARD = 1
	BEGIN

		--SELECT 
		--	@HAS_ACTIVE_ALL_JOBS_SPRINT = CASE
		--									 WHEN COUNT(1) > 0 THEN CAST(1 AS BIT)
		--									 ELSE CAST(0 AS BIT)
		--								  END 
		--FROM 
		--	BOARD B
		--	INNER JOIN SPRINT_HDR SH ON SH.BOARD_ID = B.ID
		--WHERE 
		--	B.INCL_ALL_JOBS = 1 
		--	AND (B.IS_ACTIVE IS NULL OR B.IS_ACTIVE = 1)
		--	AND (SH.IS_ACTIVE IS NULL OR SH.IS_ACTIVE = 1);

		INSERT INTO @RETURN_TABLE
		SELECT
			A.ALERT_ID
		FROM
			(
				SELECT
					ALERT.ALERT_ID,
					SPRINT_ACTIVE = CASE 
										WHEN (SPRINT_HDR.IS_ACTIVE = 1 AND SPRINT_DTL.ID IS NOT NULL) 
											    OR (ALERT.JOB_COMPONENT_NBR IS NULL) 
												OR (ALERT_LEVEL = 'PST') THEN CAST(1 AS BIT)
										ELSE CAST(0 AS BIT)
									END
				FROM
					ALERT 
					LEFT OUTER JOIN	SPRINT_DTL ON SPRINT_DTL.ALERT_ID = ALERT.ALERT_ID
					LEFT OUTER JOIN SPRINT_HDR ON SPRINT_DTL.SPRINT_HDR_ID = SPRINT_HDR.ID
				WHERE
					ALERT.IS_WORK_ITEM = 1
					AND (ALERT.IS_DRAFT IS NULL OR ALERT.IS_DRAFT = 0)
			) A
		WHERE
			SPRINT_ACTIVE = 0;

	END
	ELSE
	BEGIN
		INSERT INTO @RETURN_TABLE
		SELECT
			A.ALERT_ID
		FROM
			(
				SELECT
					ALERT.ALERT_ID,
					SPRINT_ACTIVE = CASE 
										WHEN (SPRINT_HDR.IS_ACTIVE = 1 AND SPRINT_DTL.ID IS NOT NULL) 
											    OR (ALERT.JOB_COMPONENT_NBR IS NULL) 
												OR (ALERT_LEVEL = 'PST') THEN CAST(1 AS BIT)
										ELSE CAST(0 AS BIT)
									END
				FROM
					ALERT 
					-- Add this join to make quicker when no active "all jobs" board
					INNER JOIN BOARD_JOB ON ALERT.JOB_NUMBER = BOARD_JOB.JOB_NUMBER AND ALERT.JOB_COMPONENT_NBR = BOARD_JOB.JOB_COMPONENT_NBR
					LEFT OUTER JOIN	SPRINT_DTL ON SPRINT_DTL.ALERT_ID = ALERT.ALERT_ID
					LEFT OUTER JOIN SPRINT_HDR ON SPRINT_DTL.SPRINT_HDR_ID = SPRINT_HDR.ID
				WHERE
					ALERT.IS_WORK_ITEM = 1
					AND (ALERT.IS_DRAFT IS NULL OR ALERT.IS_DRAFT = 0)
			) A
		WHERE
			SPRINT_ACTIVE = 0;
	END
    /***** QUERY *****/

	RETURN

END