if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[advtf_get_job_component_from_string]') and xtype in (N'FN', N'IF', N'TF'))
drop function [dbo].[advtf_get_job_component_from_string]
GO
CREATE FUNCTION [dbo].[advtf_get_job_component_from_string]
(
	@SEARCH_TEXT  VARCHAR(1000)
)
RETURNS @TBL TABLE (JOB_NUMBER INT, JOB_COMPONENT_NBR SMALLINT)
BEGIN
/*=========== QUERY ===========*/
	DECLARE 
		@JOB_NUMBER INT,
		@JOB_COMPONENT_NBR SMALLINT,
		@TMP_JOB_NUMBER VARCHAR(1000),
		@TMP_JOB_COMPONENT_NBR VARCHAR(1000),
		@DELIMITER VARCHAR(1),
		@SPLIT_IT BIT

	SET @SPLIT_IT = 0;
	SET @JOB_NUMBER = 0;
	SET @JOB_COMPONENT_NBR = 0;

	IF ISNUMERIC(@SEARCH_TEXT) = 1
	BEGIN
		IF CHARINDEX(',', @SEARCH_TEXT) = 0 AND CHARINDEX('.', @SEARCH_TEXT) = 0
		BEGIN
			SET @JOB_NUMBER = CAST(@SEARCH_TEXT AS INT);
		END
		IF CHARINDEX(',', @SEARCH_TEXT) = 0 AND CHARINDEX('.', @SEARCH_TEXT) > 0
		BEGIN
			SET @DELIMITER = '.';
			SET @SPLIT_IT = 1;
		END
		IF CHARINDEX(',', @SEARCH_TEXT) > 0 AND CHARINDEX('.', @SEARCH_TEXT) = 0
		BEGIN
			SET @DELIMITER = ',';
			SET @SPLIT_IT = 1;
		END
	END
	ELSE
	BEGIN
		IF CHARINDEX('/', @SEARCH_TEXT) > 0 
		BEGIN
			SET @DELIMITER = '/';
			SET @SPLIT_IT = 1;
		END
		IF CHARINDEX('-', @SEARCH_TEXT) > 0 
		BEGIN
			SET @DELIMITER = '-';
			SET @SPLIT_IT = 1;
		END
	END

	IF NOT @DELIMITER IS NULL
	BEGIN
		SELECT @TMP_JOB_NUMBER = SUBSTRING(@SEARCH_TEXT, 0, CHARINDEX(@DELIMITER, @SEARCH_TEXT));
		SELECT @TMP_JOB_COMPONENT_NBR = SUBSTRING(@SEARCH_TEXT, CHARINDEX(@DELIMITER, @SEARCH_TEXT) + 1, LEN(@SEARCH_TEXT));
	END

	IF NOT @TMP_JOB_NUMBER IS NULL AND ISNUMERIC(@TMP_JOB_NUMBER) = 1
	BEGIN
		SET @TMP_JOB_NUMBER = REPLACE(REPLACE(@TMP_JOB_NUMBER, ',', ''), '.', '')
		SET @JOB_NUMBER = CAST(@TMP_JOB_NUMBER AS INT);
	END

	IF @JOB_NUMBER > 0
	BEGIN
		IF NOT @TMP_JOB_COMPONENT_NBR IS NULL AND ISNUMERIC(@TMP_JOB_COMPONENT_NBR) = 1 AND @JOB_NUMBER > 0
		BEGIN
			SET @JOB_COMPONENT_NBR = REPLACE(REPLACE(@JOB_COMPONENT_NBR, ',', ''), '.', '')
			SET @JOB_COMPONENT_NBR = CAST(@TMP_JOB_COMPONENT_NBR AS INT);
		END
	END

	INSERT INTO @TBL (JOB_NUMBER, JOB_COMPONENT_NBR) VALUES (@JOB_NUMBER, @JOB_COMPONENT_NBR);

/*=========== QUERY ===========*/
	RETURN
END