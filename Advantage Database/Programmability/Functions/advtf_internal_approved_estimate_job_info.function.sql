IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID( N'[dbo].[advtf_internal_approved_estimate_job_info]' ) AND xtype IN ( N'FN', N'IF', N'TF' ))
BEGIN
	DROP FUNCTION [dbo].[advtf_internal_approved_estimate_job_info]
END
GO

CREATE FUNCTION [dbo].[advtf_internal_approved_estimate_job_info](
@JOB_NUMBER INT,
@JOB_COMPONENT_NBR SMALLINT,
@FNC_CODE VARCHAR(6),
@EMP_CODE VARCHAR(6),
@EMP_ONLY BIT
)
RETURNS 
@RETURN_TABLE TABLE (
	JOB_NUMBER INT,
	JOB_COMPONENT_NBR SMALLINT,
	ESTIMATE_NUMBER INT,
	EST_LOG_DESC  VARCHAR(60),
	EST_COMPONENT_NBR SMALLINT,
	EST_COMP_DESC VARCHAR(60),
	EST_QUOTE_NBR SMALLINT,
	EST_REV_NBR SMALLINT,
	FNC_CODE VARCHAR(6),
	EST_REV_SUP_BY_CODE VARCHAR(6),
	SUM_EST_REV_QUANTITY DECIMAL(32,2),
	SUM_EST_AMOUNT DECIMAL(32,2),
	EXT_CONTINGENCY DECIMAL (14,2)
)
AS
BEGIN
	/*=======================*/
	IF @EMP_ONLY = 0
	BEGIN

		INSERT INTO @RETURN_TABLE
		SELECT     
			ESTIMATE_INT_APPR.JOB_NUMBER, 
			ESTIMATE_INT_APPR.JOB_COMPONENT_NBR, 
			ESTIMATE_LOG.ESTIMATE_NUMBER, 
			ESTIMATE_LOG.EST_LOG_DESC, 
			ESTIMATE_COMPONENT.EST_COMPONENT_NBR, 
			ESTIMATE_COMPONENT.EST_COMP_DESC, 
			ESTIMATE_QUOTE.EST_QUOTE_NBR, 
			ESTIMATE_REV.EST_REV_NBR, 
			ESTIMATE_REV_DET.FNC_CODE, 
			ISNULL(ESTIMATE_REV_DET.EST_REV_SUP_BY_CDE,''), 
			ISNULL(SUM(ESTIMATE_REV_DET.EST_REV_QUANTITY),0.00), 
			SUM(ESTIMATE_REV_DET.EST_REV_EXT_AMT + ESTIMATE_REV_DET.EXT_MARKUP_AMT), 
			ESTIMATE_REV_DET.EXT_CONTINGENCY
		FROM         
			ESTIMATE_LOG WITH (NOLOCK) INNER JOIN
			ESTIMATE_COMPONENT WITH (NOLOCK) INNER JOIN
			ESTIMATE_REV_DET WITH (NOLOCK) INNER JOIN
			ESTIMATE_INT_APPR ON ESTIMATE_REV_DET.EST_REV_NBR = ESTIMATE_INT_APPR.EST_REVISION_NBR AND 
			ESTIMATE_REV_DET.EST_QUOTE_NBR = ESTIMATE_INT_APPR.EST_QUOTE_NBR AND 
			ESTIMATE_REV_DET.EST_COMPONENT_NBR = ESTIMATE_INT_APPR.EST_COMPONENT_NBR AND 
			ESTIMATE_REV_DET.ESTIMATE_NUMBER = ESTIMATE_INT_APPR.ESTIMATE_NUMBER INNER JOIN
			ESTIMATE_REV ON ESTIMATE_REV_DET.ESTIMATE_NUMBER = ESTIMATE_REV.ESTIMATE_NUMBER AND 
			ESTIMATE_REV_DET.EST_COMPONENT_NBR = ESTIMATE_REV.EST_COMPONENT_NBR AND 
			ESTIMATE_REV_DET.EST_QUOTE_NBR = ESTIMATE_REV.EST_QUOTE_NBR AND 
			ESTIMATE_REV_DET.EST_REV_NBR = ESTIMATE_REV.EST_REV_NBR  INNER JOIN
			ESTIMATE_QUOTE  WITH (NOLOCK) ON ESTIMATE_REV.ESTIMATE_NUMBER = ESTIMATE_QUOTE.ESTIMATE_NUMBER AND 
			ESTIMATE_REV.EST_COMPONENT_NBR = ESTIMATE_QUOTE.EST_COMPONENT_NBR AND 
			ESTIMATE_REV.EST_QUOTE_NBR = ESTIMATE_QUOTE.EST_QUOTE_NBR ON 
			ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_QUOTE.ESTIMATE_NUMBER AND 
			ESTIMATE_COMPONENT.EST_COMPONENT_NBR = ESTIMATE_QUOTE.EST_COMPONENT_NBR ON 
			ESTIMATE_LOG.ESTIMATE_NUMBER = ESTIMATE_COMPONENT.ESTIMATE_NUMBER
		WHERE     
			(ESTIMATE_REV_DET.EST_FNC_TYPE = 'E') 
			AND ESTIMATE_INT_APPR.JOB_NUMBER = @JOB_NUMBER 
			AND ESTIMATE_INT_APPR.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR 
			AND	ESTIMATE_REV_DET.FNC_CODE = @FNC_CODE
		GROUP BY 
			ESTIMATE_REV_DET.EST_REV_EXT_AMT, ESTIMATE_REV_DET.EXT_MARKUP_AMT, ESTIMATE_INT_APPR.JOB_NUMBER, 
			ESTIMATE_INT_APPR.JOB_COMPONENT_NBR, ESTIMATE_LOG.ESTIMATE_NUMBER, ESTIMATE_LOG.EST_LOG_DESC, 
			ESTIMATE_COMPONENT.EST_COMPONENT_NBR, ESTIMATE_COMPONENT.EST_COMP_DESC, ESTIMATE_QUOTE.EST_QUOTE_NBR, 
			ESTIMATE_REV.EST_REV_NBR, ESTIMATE_REV_DET.FNC_CODE, ESTIMATE_REV_DET.EST_REV_SUP_BY_CDE, ESTIMATE_REV_DET.EXT_CONTINGENCY;

	END
	ELSE
	BEGIN

		INSERT INTO @RETURN_TABLE
		SELECT     
			ESTIMATE_INT_APPR.JOB_NUMBER, 
			ESTIMATE_INT_APPR.JOB_COMPONENT_NBR, 
			ESTIMATE_LOG.ESTIMATE_NUMBER, 
			ESTIMATE_LOG.EST_LOG_DESC, 
			ESTIMATE_COMPONENT.EST_COMPONENT_NBR, 
			ESTIMATE_COMPONENT.EST_COMP_DESC, 
			ESTIMATE_QUOTE.EST_QUOTE_NBR, 
			ESTIMATE_REV.EST_REV_NBR, 
			ESTIMATE_REV_DET.FNC_CODE, 
			'' as CODE, 
			ISNULL(SUM(ESTIMATE_REV_DET.EST_REV_QUANTITY),0.00), 
			SUM(ESTIMATE_REV_DET.EST_REV_EXT_AMT + ESTIMATE_REV_DET.EXT_MARKUP_AMT),
			ESTIMATE_REV_DET.EXT_CONTINGENCY
		FROM         
			ESTIMATE_LOG WITH (NOLOCK) INNER JOIN
			ESTIMATE_COMPONENT WITH (NOLOCK) INNER JOIN
			ESTIMATE_REV_DET WITH (NOLOCK) INNER JOIN
			ESTIMATE_INT_APPR ON ESTIMATE_REV_DET.EST_REV_NBR = ESTIMATE_INT_APPR.EST_REVISION_NBR AND 
			ESTIMATE_REV_DET.EST_QUOTE_NBR = ESTIMATE_INT_APPR.EST_QUOTE_NBR AND 
			ESTIMATE_REV_DET.EST_COMPONENT_NBR = ESTIMATE_INT_APPR.EST_COMPONENT_NBR AND 
			ESTIMATE_REV_DET.ESTIMATE_NUMBER = ESTIMATE_INT_APPR.ESTIMATE_NUMBER INNER JOIN
			ESTIMATE_REV ON ESTIMATE_REV_DET.ESTIMATE_NUMBER = ESTIMATE_REV.ESTIMATE_NUMBER AND 
			ESTIMATE_REV_DET.EST_COMPONENT_NBR = ESTIMATE_REV.EST_COMPONENT_NBR AND 
			ESTIMATE_REV_DET.EST_QUOTE_NBR = ESTIMATE_REV.EST_QUOTE_NBR AND 
			ESTIMATE_REV_DET.EST_REV_NBR = ESTIMATE_REV.EST_REV_NBR  INNER JOIN
			ESTIMATE_QUOTE  WITH (NOLOCK) ON ESTIMATE_REV.ESTIMATE_NUMBER = ESTIMATE_QUOTE.ESTIMATE_NUMBER AND 
			ESTIMATE_REV.EST_COMPONENT_NBR = ESTIMATE_QUOTE.EST_COMPONENT_NBR AND 
			ESTIMATE_REV.EST_QUOTE_NBR = ESTIMATE_QUOTE.EST_QUOTE_NBR ON 
			ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_QUOTE.ESTIMATE_NUMBER AND 
			ESTIMATE_COMPONENT.EST_COMPONENT_NBR = ESTIMATE_QUOTE.EST_COMPONENT_NBR ON 
			ESTIMATE_LOG.ESTIMATE_NUMBER = ESTIMATE_COMPONENT.ESTIMATE_NUMBER
		WHERE     
			(ESTIMATE_REV_DET.EST_FNC_TYPE = 'E') 
			AND ESTIMATE_INT_APPR.JOB_NUMBER = @JOB_NUMBER 
			AND ESTIMATE_INT_APPR.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR 
			AND	ESTIMATE_REV_DET.FNC_CODE = @FNC_CODE 
			AND (ESTIMATE_REV_DET.EST_REV_SUP_BY_CDE = @EMP_CODE OR ESTIMATE_REV_DET.EST_REV_SUP_BY_CDE IS NULL)
		GROUP BY 
			ESTIMATE_REV_DET.EST_REV_EXT_AMT, ESTIMATE_REV_DET.EXT_MARKUP_AMT, ESTIMATE_INT_APPR.JOB_NUMBER, 
			ESTIMATE_INT_APPR.JOB_COMPONENT_NBR, ESTIMATE_LOG.ESTIMATE_NUMBER, ESTIMATE_LOG.EST_LOG_DESC, 
			ESTIMATE_COMPONENT.EST_COMPONENT_NBR, ESTIMATE_COMPONENT.EST_COMP_DESC, ESTIMATE_QUOTE.EST_QUOTE_NBR, 
			ESTIMATE_REV.EST_REV_NBR, ESTIMATE_REV_DET.FNC_CODE, ESTIMATE_REV_DET.EXT_CONTINGENCY;

	END
	/*=======================*/

	RETURN

END
GO

IF ( @@ERROR = 0 )
BEGIN
	GRANT SELECT ON [advtf_approved_estimate_job_info] TO PUBLIC AS dbo
END
GO




