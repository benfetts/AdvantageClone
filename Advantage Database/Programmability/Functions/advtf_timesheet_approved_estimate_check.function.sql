IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID( N'[dbo].[advtf_timesheet_approved_estimate_check]' ) AND xtype IN ( N'FN', N'IF', N'TF' ))
BEGIN
	DROP FUNCTION [dbo].[advtf_timesheet_approved_estimate_check]
END
GO

CREATE FUNCTION [dbo].[advtf_timesheet_approved_estimate_check](
@JOB_NUMBER INT, 
@JOB_COMPONENT_NBR SMALLINT,
@EMP_HRS DECIMAL(9,3), 
@FNC_CODE VARCHAR(10)
)
RETURNS 
@RETURN_TABLE TABLE (
	APPROVED_ESTIMATE_REQUIRED SMALLINT,
	ALLOW_WITHOUT_APPROVED_ESTIMATE SMALLINT, -- 1 = YES, 0 = NO
	EXCEED_OPTION SMALLINT, -- 0 = YES, 1 = WARN, 2 = NO
	DISPLAY_MSG VARCHAR(150),
	HAS_APPROVED_ESTIMATE BIT,
	SUM_ACTUAL DECIMAL(32,2),
	SUM_APPROVED DECIMAL (32,2),
	EST_CHECK_CAN_MODIFY_TIME BIT,
	APPROVED_ESTIMATE_REQUIRED_BUT_NOT_FOUND BIT,
	IS_OVER BIT
)
AS
BEGIN
	/*=======================*/
	DECLARE
		@AGENCY_APPROVED_ESTIMATE_REQUIRED SMALLINT,
		@ALLOW_WITHOUT_APPROVED_ESTIMATE SMALLINT, -- 1 = YES, 0 = NO
		@EXCEED_OPTION SMALLINT, -- 0 = YES, 1 = WARN, 2 = NO
		@DISPLAY_MSG VARCHAR(150),
		@HAS_ESTIMATE BIT,
		@HAS_APPROVED_ESTIMATE BIT,
		@EST_CHECK_CAN_MODIFY_TIME BIT,
		@SUM_ACTUAL DECIMAL(32,2),
		@SUM_APPROVED DECIMAL (32,2),
		@APPROVED_ESTIMATE_REQUIRED_BUT_NOT_FOUND BIT,
		@CHECK_EXCEED BIT, 
		@JOB_EST_REQ SMALLINT,
		@FUNCTION_IS_ON_APPROVED_ESTIMATE BIT,
		@IS_OVER BIT,
		@PLACE_HOLDER BIT,
		@ESTIMATE_IS_INTERNAL_APPROVED BIT

	-- INIT
	BEGIN
		SET @ALLOW_WITHOUT_APPROVED_ESTIMATE = 1
		SET @EXCEED_OPTION = 0
		SET @DISPLAY_MSG = NULL;
		SET @HAS_ESTIMATE = 0;
		SET @HAS_APPROVED_ESTIMATE = 0;
		SET @SUM_ACTUAL = 0.00;
		SET @SUM_APPROVED = 0.00;
		SET @EST_CHECK_CAN_MODIFY_TIME = 1;
		SET @APPROVED_ESTIMATE_REQUIRED_BUT_NOT_FOUND = 0;
		SET @IS_OVER = 0;
		SET @PLACE_HOLDER = 0;
		SET @ESTIMATE_IS_INTERNAL_APPROVED = 0;
	END

	-- GET SETTINGS
	BEGIN
		-- AGENCY SETTINGS
		BEGIN 
			SELECT 
				@AGENCY_APPROVED_ESTIMATE_REQUIRED = ISNULL(APPR_EST_REQ, 0)
			FROM AGENCY WITH(NOLOCK);
		END;
		-- CHECK JOB_LOG
		BEGIN

			SELECT @JOB_EST_REQ = ISNULL(JOB_ESTIMATE_REQ, 0) 
			FROM JOB_LOG WITH(NOLOCK)
			WHERE JOB_NUMBER = @JOB_NUMBER;

		END
		-- GET ESTIMATE REQ OPTIONS
		BEGIN
			SELECT 
				@ALLOW_WITHOUT_APPROVED_ESTIMATE = ISNULL(ALLOW_PROCESSING, 1),
				@EXCEED_OPTION = ISNULL(EXCEED_OPTION, 0),
				@DISPLAY_MSG = DISPLAY_MSG
			FROM 
				EST_REQ_OPT WITH(NOLOCK)
			WHERE 
				EST_REQ_OPT_ID = 2;
			SET @ALLOW_WITHOUT_APPROVED_ESTIMATE = ISNULL(@ALLOW_WITHOUT_APPROVED_ESTIMATE, 1);
			SET @EXCEED_OPTION = ISNULL(@EXCEED_OPTION, 0);
		END;
	END;

	-- SEE IF THERE IS AN ESTIMATE FOR THE JOB/COMP
	IF EXISTS (SELECT JOB_NUMBER FROM JOB_COMPONENT WITH(NOLOCK) WHERE JOB_NUMBER =  @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND ((NOT (ESTIMATE_NUMBER IS NULL)) AND (NOT (EST_COMPONENT_NBR IS NULL))))
	BEGIN
		SET @HAS_ESTIMATE = 1;
	END

	-- SEE IF THERE IS A CLIENT APPROVAL
	IF EXISTS (SELECT JOB_NUMBER FROM ESTIMATE_APPROVAL WITH(NOLOCK) WHERE JOB_NUMBER =  @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
	BEGIN
		SET @HAS_APPROVED_ESTIMATE = 1;
	END

	-- IF NO CLIENT APPROVAL, LOOK FOR INTERNAL APPROVAL
	IF @HAS_APPROVED_ESTIMATE = 0
	BEGIN
		IF EXISTS (SELECT JOB_NUMBER FROM ESTIMATE_INT_APPR WITH(NOLOCK) WHERE JOB_NUMBER =  @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
		BEGIN
			SET @HAS_APPROVED_ESTIMATE = 1;
			SET @ESTIMATE_IS_INTERNAL_APPROVED = 1;
		END
	END

	IF @ALLOW_WITHOUT_APPROVED_ESTIMATE = 1
	BEGIN
		SET @PLACE_HOLDER = 0;
	END
	IF @ALLOW_WITHOUT_APPROVED_ESTIMATE = 0
	BEGIN
		IF @JOB_EST_REQ = 0
		BEGIN
			SET @HAS_APPROVED_ESTIMATE = 0;
			SET @SUM_ACTUAL = 0.00;
			SET @SUM_APPROVED = 0.00;
			SET @EST_CHECK_CAN_MODIFY_TIME = 1;
			SET @APPROVED_ESTIMATE_REQUIRED_BUT_NOT_FOUND = 0;
		END
		ELSE
		BEGIN


			IF @HAS_APPROVED_ESTIMATE = 0
			BEGIN
				SET @APPROVED_ESTIMATE_REQUIRED_BUT_NOT_FOUND = 1;
				SET @EST_CHECK_CAN_MODIFY_TIME = 0;
				SET @DISPLAY_MSG = 'Approved estimate required but does not exist'
				SET @CHECK_EXCEED = 0;
			END

		END;
	END;

	IF @HAS_ESTIMATE = 0 OR (@HAS_ESTIMATE = 1 AND @HAS_APPROVED_ESTIMATE = 0)
	BEGIN	
		SET @PLACE_HOLDER = 0;
	END
	ELSE
	BEGIN

		IF @EXCEED_OPTION = 0
		BEGIN
			SET @PLACE_HOLDER = 0;
		END
		IF @EXCEED_OPTION = 1 OR @EXCEED_OPTION = 2
		BEGIN

			SELECT @SUM_ACTUAL = SUM(SUM_EMP_TIME_DTL_EMP_HOURS) FROM [dbo].[advtf_qva_actuals_job_info](@JOB_NUMBER, @JOB_COMPONENT_NBR, @FNC_CODE, NULL, 0, 0, 0);
			IF @ESTIMATE_IS_INTERNAL_APPROVED = 0 
			BEGIN
				SELECT @SUM_APPROVED = SUM(SUM_EST_REV_QUANTITY) FROM [dbo].[advtf_approved_estimate_job_info](@JOB_NUMBER, @JOB_COMPONENT_NBR, @FNC_CODE, NULL, 0);
			END
			ELSE
			BEGIN
				SELECT @SUM_APPROVED = SUM(SUM_EST_REV_QUANTITY) FROM [dbo].[advtf_internal_approved_estimate_job_info](@JOB_NUMBER, @JOB_COMPONENT_NBR, @FNC_CODE, NULL, 0);
			END

			SET @SUM_ACTUAL = ISNULL(@SUM_ACTUAL, 0.00);
			SET @EMP_HRS = ISNULL(@EMP_HRS, 0.00);
			SET @SUM_APPROVED = ISNULL(@SUM_APPROVED, 0.00);

			IF @SUM_ACTUAL + @EMP_HRS > @SUM_APPROVED
			BEGIN
				SET @IS_OVER = 1;
				IF @EXCEED_OPTION = 1 --  WARN
				BEGIN
					SET @EST_CHECK_CAN_MODIFY_TIME = 1;
				END;
				IF @EXCEED_OPTION = 2 -- BLOCK
				BEGIN
					SET @EST_CHECK_CAN_MODIFY_TIME = 0;
				END;
			END;
		END;

	END

	IF NOT @DISPLAY_MSG IS NULL
	BEGIN
		IF CHARINDEX('{SUM_ACTUAL}',@DISPLAY_MSG) > 0
		BEGIN
			SET @DISPLAY_MSG = REPLACE(@DISPLAY_MSG,'{SUM_ACTUAL}',CAST(ISNULL(@SUM_ACTUAL, 0.00) AS VARCHAR(MAX)));
		END									
		IF CHARINDEX('{SUM_APPR}',@DISPLAY_MSG) > 0
		BEGIN
			SET @DISPLAY_MSG = REPLACE(@DISPLAY_MSG,'{SUM_APPR}',CAST(ISNULL(@SUM_APPROVED, 0.00) AS VARCHAR(MAX)));
		END									
	END

	/*=======================*/
	INSERT INTO @RETURN_TABLE (
							   APPROVED_ESTIMATE_REQUIRED, 
							   ALLOW_WITHOUT_APPROVED_ESTIMATE, 
							   EXCEED_OPTION, DISPLAY_MSG, 
							   HAS_APPROVED_ESTIMATE, 
							   SUM_ACTUAL, 
							   SUM_APPROVED, 
							   EST_CHECK_CAN_MODIFY_TIME,
							   APPROVED_ESTIMATE_REQUIRED_BUT_NOT_FOUND,
							   IS_OVER
							   )
					   VALUES (
					           ISNULL(@AGENCY_APPROVED_ESTIMATE_REQUIRED, 0), 
					           ISNULL(@ALLOW_WITHOUT_APPROVED_ESTIMATE, 1), 
							   ISNULL(@EXCEED_OPTION, 0), 
							   @DISPLAY_MSG, 
							   ISNULL(@HAS_APPROVED_ESTIMATE, 0), 
							   ISNULL(@SUM_ACTUAL, 0.00), 
							   ISNULL(@SUM_APPROVED, 0.00), 
							   ISNULL(@EST_CHECK_CAN_MODIFY_TIME, 1),
							   ISNULL(@APPROVED_ESTIMATE_REQUIRED_BUT_NOT_FOUND, 0),
							   ISNULL(@IS_OVER, 0)
							   );
	RETURN;
END
