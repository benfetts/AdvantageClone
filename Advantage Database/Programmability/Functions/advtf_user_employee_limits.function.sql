IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[advtf_user_employee_limits]') AND xtype IN (N'FN', N'IF', N'TF'))
	DROP FUNCTION [dbo].[advtf_user_employee_limits]
GO

CREATE FUNCTION [dbo].[advtf_user_employee_limits] (
	@UserCode VARCHAR(100)
) RETURNS TABLE
RETURN (
	SELECT
		E.EMP_CODE
	FROM 
		[dbo].[SEC_USER] AS U CROSS JOIN 
		[dbo].[EMPLOYEE] AS E LEFT OUTER JOIN 
		[dbo].[SEC_EMP] AS SE ON UPPER(SE.[USER_ID]) = UPPER(U.USER_CODE) LEFT OUTER JOIN
		dbo.advtf_employee_office_limits((SELECT EMP_CODE FROM dbo.SEC_USER WHERE UPPER(USER_CODE) = UPPER(@UserCode))) EO ON E.OFFICE_CODE = EO.OFFICE_CODE LEFT OUTER JOIN
		(SELECT DISTINCT
			EMP_CODE
		 FROM
			dbo.EMP_OFFICE) EOL ON U.EMP_CODE = EOL.EMP_CODE
	WHERE
		UPPER(U.USER_CODE) = UPPER(@UserCode) AND
		(SE.EMP_CODE = E.EMP_CODE OR
		 (E.EMP_CODE IS NOT NULL AND 
		  SE.EMP_CODE IS NULL)) AND
		1 = CASE WHEN EOL.EMP_CODE IS NULL THEN 1 WHEN EO.OFFICE_CODE IS NOT NULL THEN 1 ELSE 0 END
)