--DROP FUNCTION [dbo].[fn_my_objects_get_object_definitions]
CREATE FUNCTION [dbo].[fn_my_objects_get_object_definitions] (@OBJECT_ID AS INT, @SHOW_ONLY_CHECKED_DEFINITIONS BIT)
RETURNS @OBJECT_DEFINITIONS TABLE 
(
	OBJECT_DEFINITION_ID INT,
	[OBJECT_ID] INT,
	OBJECT_DESCRIPTION VARCHAR(200),
	OBJECT_TYPE INT,
	DEFINITION_ID INT,
	DEFINITION_DESCRIPTION VARCHAR(200),
	IS_STATIC BIT,
	CHECKED BIT
)
AS
BEGIN

	DECLARE
	@OBJECT_TYPE AS INT

	SELECT @OBJECT_TYPE = [TYPE] FROM MY_OBJ_DEF_OBJECTS WITH(NOLOCK) WHERE ID = @OBJECT_ID;

	IF @OBJECT_TYPE = 1
	BEGIN
		INSERT INTO @OBJECT_DEFINITIONS(OBJECT_DEFINITION_ID, [OBJECT_ID], DEFINITION_ID, DEFINITION_DESCRIPTION,IS_STATIC, CHECKED)
		SELECT -1, @OBJECT_ID, MGMT_LVL_ID AS DEFINITION_ID, [DESCRIPTION] AS DEFINITION_DESCRIPTION, CAST(0 AS BIT) AS IS_STATIC, 0 FROM MGMT_LVL WHERE INACTIVE_FLAG IS NULL OR INACTIVE_FLAG = 0

	END
	IF @OBJECT_TYPE = 2
	BEGIN
	
		IF @OBJECT_ID = 12 BEGIN
			
			INSERT INTO @OBJECT_DEFINITIONS(OBJECT_DEFINITION_ID, [OBJECT_ID], DEFINITION_ID, DEFINITION_DESCRIPTION, IS_STATIC, CHECKED)
			SELECT-1,@OBJECT_ID, A.DEFINITION_ID, A.DEFINITION_DESCRIPTION, A.IS_STATIC, 0
			FROM
			( 
			SELECT MGMT_LVL_ID AS DEFINITION_ID, [DESCRIPTION] AS DEFINITION_DESCRIPTION, CAST(0 AS BIT) AS IS_STATIC FROM MGMT_LVL WHERE INACTIVE_FLAG IS NULL OR INACTIVE_FLAG = 0
			) AS A

		END ELSE BEGIN
			
			INSERT INTO @OBJECT_DEFINITIONS(OBJECT_DEFINITION_ID, [OBJECT_ID], DEFINITION_ID, DEFINITION_DESCRIPTION, IS_STATIC, CHECKED)
			SELECT-1,@OBJECT_ID, A.DEFINITION_ID, A.DEFINITION_DESCRIPTION, A.IS_STATIC, 0
			FROM
			( 
			SELECT ID AS DEFINITION_ID, [DESCRIPTION] AS DEFINITION_DESCRIPTION, CAST(1 AS BIT) AS IS_STATIC FROM MY_OBJ_DEF_STATIC_OPTIONS
			UNION
			SELECT MGMT_LVL_ID AS DEFINITION_ID, [DESCRIPTION] AS DEFINITION_DESCRIPTION, CAST(0 AS BIT) AS IS_STATIC FROM MGMT_LVL WHERE INACTIVE_FLAG IS NULL OR INACTIVE_FLAG = 0
			) AS A

		END
		
	END

	UPDATE @OBJECT_DEFINITIONS
	SET A.OBJECT_DEFINITION_ID = B.ID, A.CHECKED = B.CHECKED
	FROM
	@OBJECT_DEFINITIONS A INNER JOIN MY_OBJ_DEF_SETTINGS B
	ON A.OBJECT_ID = B.OBJECT_ID AND A.DEFINITION_ID = B.DEFINITION_ID AND A.IS_STATIC = B.IS_STATIC;
	
	UPDATE @OBJECT_DEFINITIONS
	SET A.OBJECT_DESCRIPTION = B.DESCRIPTION, A.OBJECT_TYPE = B.TYPE
	FROM
	@OBJECT_DEFINITIONS A INNER JOIN MY_OBJ_DEF_OBJECTS B ON A.OBJECT_ID = B.ID;
	
	IF @SHOW_ONLY_CHECKED_DEFINITIONS = 1
	BEGIN
	
		DELETE FROM @OBJECT_DEFINITIONS WHERE CHECKED IS NULL OR CHECKED = 0;
	
	END

	IF EXISTS (SELECT OBJECT_DEFINITION_ID FROM @OBJECT_DEFINITIONS WHERE DEFINITION_ID =3 AND IS_STATIC = 1)
	BEGIN
	
		DECLARE @MANAGER_LABEL VARCHAR(500);
		
		SELECT @MANAGER_LABEL = COALESCE(CONVERT(VARCHAR, AGY_SETTINGS.AGY_SETTINGS_VALUE), CONVERT(VARCHAR, AGY_SETTINGS.AGY_SETTINGS_DEF), '') 
		FROM AGY_SETTINGS WITH(NOLOCK) 
		WHERE AGY_SETTINGS.AGY_SETTINGS_CODE = 
										(SELECT AGY_SETTINGS.AGY_SETTINGS_VALUE 
										 FROM AGY_SETTINGS WITH(NOLOCK) 
										 WHERE AGY_SETTINGS.AGY_SETTINGS_CODE = 'TRAFFIC_MGR_COL');
		
		IF @MANAGER_LABEL <> ''
		BEGIN
		
			UPDATE @OBJECT_DEFINITIONS SET DEFINITION_DESCRIPTION = @MANAGER_LABEL
			WHERE DEFINITION_ID = 3 AND IS_STATIC = 1;
			
		END
										 
	END
		
RETURN

END
