if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[wvtf_GetAlertAssignedEmployee]') and xtype in (N'FN', N'IF', N'TF'))
drop function [dbo].[wvtf_GetAlertAssignedEmployee]
GO
CREATE FUNCTION [dbo].[wvtf_GetAlertAssignedEmployee]
(
	@ALERT_ID AS INT
)
RETURNS @TBL_EMPLOYEE TABLE
(
	EMP_CODE			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
	EMP_FML			varchar(100) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL
)
BEGIN--FUNCTION START
/*=========== QUERY ===========*/

	DECLARE
		@HAS_RECIPIENT BIT,
		@IS_ASSIGNMENT BIT

	SET @HAS_RECIPIENT = 0;
	SET @IS_ASSIGNMENT = 0;

	IF EXISTS (SELECT 1 FROM ALERT WHERE ALERT_ID = @ALERT_ID 
				AND (NOT ALERT.ALRT_NOTIFY_HDR_ID IS NULL)
				AND (NOT ALERT.ALERT_STATE_ID IS NULL))
	BEGIN
		SET @IS_ASSIGNMENT = 1;
	END
	IF @IS_ASSIGNMENT = 1 AND @HAS_RECIPIENT = 0
	BEGIN
		IF EXISTS (SELECT 1 FROM ALERT_RCPT WITH(NOLOCK) WHERE ALERT_ID = @ALERT_ID AND (CURRENT_NOTIFY = 1))
		BEGIN
			SET @HAS_RECIPIENT = 1;
		END
	END
	IF @IS_ASSIGNMENT = 1 AND @HAS_RECIPIENT = 0
	BEGIN
		IF EXISTS (SELECT 1 FROM ALERT_RCPT_DISMISSED WITH(NOLOCK) WHERE ALERT_ID = @ALERT_ID AND (CURRENT_NOTIFY = 1))
		BEGIN
			SET @HAS_RECIPIENT = 1;
		END
	END

	IF @IS_ASSIGNMENT = 1 AND @HAS_RECIPIENT = 0
	BEGIN

			INSERT INTO @TBL_EMPLOYEE(EMP_CODE, EMP_FML) VALUES ('', 'Unassigned');

	END
	ELSE
	BEGIN

		INSERT INTO @TBL_EMPLOYEE(EMP_CODE, EMP_FML)
		SELECT
			ALERT_RCPT.EMP_CODE,
			CASE				
				WHEN ALERT_RCPT.CURRENT_NOTIFY = 1 AND (ALERT_RCPT.PROCESSED IS NULL) 
					THEN ( ISNULL([EMPLOYEE].EMP_FNAME + ' ', '')   + ISNULL([EMPLOYEE].EMP_MI + '. ', '') + ISNULL([EMPLOYEE].EMP_LNAME, ''))            
				WHEN ALERT_RCPT.CURRENT_NOTIFY = 1 AND (NOT (ALERT_RCPT.PROCESSED IS NULL)) 
					THEN 'Completed'            
				ELSE 
					''       
			END AS EMP_FML
		FROM 
			ALERT_RCPT WITH(NOLOCK) INNER JOIN EMPLOYEE WITH(NOLOCK) ON ALERT_RCPT.EMP_CODE = EMPLOYEE.EMP_CODE
			INNER JOIN ALERT WITH(NOLOCK) ON ALERT.ALERT_ID = ALERT_RCPT.ALERT_ID
		WHERE 
			CURRENT_NOTIFY = 1 
			AND ALERT.ALERT_ID = @ALERT_ID

		UNION

		SELECT
			ALERT_RCPT_DISMISSED.EMP_CODE,
			CASE				
				WHEN ALERT_RCPT_DISMISSED.CURRENT_NOTIFY = 1 AND (ALERT_RCPT_DISMISSED.PROCESSED IS NULL) 
					THEN ( ISNULL([EMPLOYEE].EMP_FNAME + ' ', '')   + ISNULL([EMPLOYEE].EMP_MI + '. ', '') + ISNULL([EMPLOYEE].EMP_LNAME, ''))            
				WHEN ALERT_RCPT_DISMISSED.CURRENT_NOTIFY = 1 AND (NOT (ALERT_RCPT_DISMISSED.PROCESSED IS NULL)) 
					THEN 'Completed'            
				ELSE 
					''       
			END AS EMP_FML
		FROM 
			ALERT_RCPT_DISMISSED WITH(NOLOCK) INNER JOIN EMPLOYEE WITH(NOLOCK) ON ALERT_RCPT_DISMISSED.EMP_CODE = EMPLOYEE.EMP_CODE
			INNER JOIN ALERT WITH(NOLOCK) ON ALERT.ALERT_ID = ALERT_RCPT_DISMISSED.ALERT_ID
		WHERE 
			CURRENT_NOTIFY = 1 
			AND ALERT.ALERT_ID = @ALERT_ID

	END

RETURN

/*=========== QUERY ===========*/

END --FUNCTION END
