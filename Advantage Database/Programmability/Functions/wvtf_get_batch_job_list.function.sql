--DROP FUNCTION [dbo].[wvtf_get_batch_job_list]
CREATE FUNCTION [dbo].[wvtf_get_batch_job_list] ( @BA_BATCH_ID AS INT, @INCLUDE_APPROVAL_JOBS BIT )
RETURNS @TABLE_BATCH_COMPS TABLE 
(
		JOB_NUMBER  INT NOT NULL,
		JOB_COMPONENT_NBR  SMALLINT NOT NULL,
		JOB_AND_COMPONENT  VARCHAR(4000) NULL,
		CL_CODE VARCHAR(6) NULL,
		DIV_CODE VARCHAR(6) NULL,
		PRD_CODE VARCHAR(6) NULL,
		MY_KEY VARCHAR(100),
		UNAPPROVED BIT NULL
	)
AS
BEGIN
		INSERT INTO @TABLE_BATCH_COMPS(JOB_NUMBER,JOB_COMPONENT_NBR,CL_CODE,DIV_CODE,PRD_CODE,MY_KEY, UNAPPROVED)
		SELECT JOB_COMPONENT.JOB_NUMBER,JOB_COMPONENT.JOB_COMPONENT_NBR,JOB_LOG.CL_CODE,JOB_LOG.DIV_CODE,JOB_LOG.PRD_CODE,
		RTRIM(LTRIM(CONVERT(VARCHAR(100), JOB_COMPONENT.JOB_NUMBER)))+'|'+RTRIM(LTRIM(CONVERT(VARCHAR(100), JOB_COMPONENT.JOB_COMPONENT_NBR))),
		1
		FROM         
			JOB_LOG WITH(NOLOCK) INNER JOIN
			JOB_COMPONENT WITH(NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER LEFT OUTER JOIN
			CAMPAIGN WITH(NOLOCK) ON JOB_LOG.CMP_IDENTIFIER = CAMPAIGN.CMP_IDENTIFIER AND JOB_LOG.CL_CODE = CAMPAIGN.CL_CODE
		WHERE     
			JOB_COMPONENT.BA_BATCH_ID = @BA_BATCH_ID;

		--IF @INCLUDE_APPROVAL_JOBS = 1
		--BEGIN
		
			INSERT INTO @TABLE_BATCH_COMPS(JOB_NUMBER,JOB_COMPONENT_NBR,CL_CODE,DIV_CODE,PRD_CODE,MY_KEY, UNAPPROVED)
			SELECT     
			BILL_APPR_HDR.JOB_NUMBER, BILL_APPR_HDR.JOB_COMPONENT_NBR, JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
			RTRIM(LTRIM(CONVERT(VARCHAR(100), BILL_APPR_HDR.JOB_NUMBER)))+'|'+RTRIM(LTRIM(CONVERT(VARCHAR(100), BILL_APPR_HDR.JOB_COMPONENT_NBR))),
			0
			FROM         
				BILL_APPR_HDR WITH (NOLOCK) INNER JOIN
				JOB_LOG WITH (NOLOCK) ON BILL_APPR_HDR.JOB_NUMBER = JOB_LOG.JOB_NUMBER INNER JOIN
				BILL_APPR WITH (NOLOCK) ON BILL_APPR_HDR.BA_ID = BILL_APPR.BA_ID
            WHERE 
				BILL_APPR.BA_BATCH_ID = @BA_BATCH_ID
			AND
			RTRIM(LTRIM(CONVERT(VARCHAR(100), BILL_APPR_HDR.JOB_NUMBER)))+'|'+RTRIM(LTRIM(CONVERT(VARCHAR(100), BILL_APPR_HDR.JOB_COMPONENT_NBR)))
			NOT IN (SELECT MY_KEY FROM @TABLE_BATCH_COMPS)
		
		--END
			
		UPDATE @TABLE_BATCH_COMPS
		SET JOB_AND_COMPONENT = 
						RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), 
						JOB_COMPONENT.JOB_NUMBER), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_COMPONENT_NBR), 3) 
						+ '  ' + ISNULL(JOB_LOG.JOB_DESC, '') + ' / ' + ISNULL(JOB_COMPONENT.JOB_COMP_DESC, ''),
			CL_CODE = JOB_LOG.CL_CODE, DIV_CODE = JOB_LOG.DIV_CODE, PRD_CODE = JOB_LOG.PRD_CODE
		FROM 
			@TABLE_BATCH_COMPS A, JOB_LOG WITH(NOLOCK), JOB_COMPONENT WITH(NOLOCK)
		WHERE 
			JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
			AND A.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
			AND A.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR;

		UPDATE @TABLE_BATCH_COMPS
		SET UNAPPROVED = 0
		FROM
			@TABLE_BATCH_COMPS TBC 
			INNER JOIN BILL_APPR_HDR BAH ON TBC.JOB_NUMBER = BAH.JOB_NUMBER AND TBC.JOB_COMPONENT_NBR = BAH.JOB_COMPONENT_NBR
			INNER JOIN BILL_APPR BA ON BA.BA_ID = BAH.BA_ID
		WHERE 
			BA.BA_BATCH_ID = @BA_BATCH_ID;
		
RETURN
END
