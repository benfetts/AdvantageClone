IF EXISTS (
		SELECT *
		FROM dbo.sysobjects
		WHERE id = object_id(N'[dbo].[advsp_agile_complete_sprint]')
			AND OBJECTPROPERTY(id, N'IsProcedure') = 1
		)
	DROP PROCEDURE [dbo].[advsp_agile_complete_sprint]
GO

CREATE PROCEDURE [dbo].[advsp_agile_complete_sprint] 
@SPRINT_HEADER_ID INT,
@ACTIVATE_NEXT BIT
AS
BEGIN
/*=========== QUERY ===========*/
    DECLARE
	   @BOARD_ID INT,
	   @NEXT_SPRINT_ID INT,
	   @HAS_NEXT_SPRINT BIT,
	   @SPRINT_START SMALLDATETIME

    SET @HAS_NEXT_SPRINT = 0;

    DECLARE
	   @ALERTS TABLE (ALERT_ID INT, SPRINT_DTL_ID INT);

    SELECT @BOARD_ID = BOARD_ID, @SPRINT_START = [START_DATE] FROM SPRINT_HDR WHERE ID = @SPRINT_HEADER_ID;

    IF NOT @ACTIVATE_NEXT IS NULL AND @ACTIVATE_NEXT = 1
    BEGIN
	   SET @NEXT_SPRINT_ID =  (SELECT TOP 1 ID
						  FROM	  
							 SPRINT_HDR SH
						  WHERE 
							 BOARD_ID = @BOARD_ID
							 AND COMPLETED_DATE IS NULL 
							 AND (IS_COMPLETE IS NULL OR IS_COMPLETE = 0)
							 AND SH.[START_DATE] >= @SPRINT_START
							 AND ID <> @SPRINT_HEADER_ID
						  ORDER BY
							 SEQ_NBR, [START_DATE])

	   IF NOT @NEXT_SPRINT_ID IS NULL AND @NEXT_SPRINT_ID > 0 
	   BEGIN
		  SET @HAS_NEXT_SPRINT = 1;
	   END
	   ELSE
	   BEGIN
		  SET @HAS_NEXT_SPRINT = 0;
	   END
    END
    ELSE
    BEGIN
	   SET @ACTIVATE_NEXT = 0;
	   SET @HAS_NEXT_SPRINT = 0;
    END

    IF @ACTIVATE_NEXT = 1
    BEGIN
	   INSERT INTO @ALERTS
	   SELECT A.ALERT_ID, SD.ID    
	   FROM
		  SPRINT_DTL SD
		  INNER JOIN ALERT A ON SD.ALERT_ID = A.ALERT_ID
	   WHERE
		  SD.SPRINT_HDR_ID = @SPRINT_HEADER_ID
		  AND (A.ASSIGN_COMPLETED IS NULL OR A.ASSIGN_COMPLETED = 0);

	   IF @HAS_NEXT_SPRINT = 1
	   BEGIN
		  UPDATE SPRINT_DTL SET SPRINT_HDR_ID = @NEXT_SPRINT_ID, BACKLOG_BOARD_ID = NULL
		  FROM 
			 SPRINT_DTL SD 
			 INNER JOIN @ALERTS A ON SD.ALERT_ID = A.ALERT_ID AND SD.ID = A.SPRINT_DTL_ID;
	   END
	   ELSE
	   BEGIN
		  UPDATE SPRINT_DTL SET SPRINT_HDR_ID = NULL, BACKLOG_BOARD_ID = @BOARD_ID
		  FROM 
			 SPRINT_DTL SD 
			 INNER JOIN @ALERTS A ON SD.ALERT_ID = A.ALERT_ID AND SD.ID = A.SPRINT_DTL_ID;
	   END
    END
    ELSE
    BEGIN
	   DECLARE @DTLS TABLE (SPRINT_DTL_ID INT, ALERT_ID INT);

	   INSERT INTO @DTLS
	   SELECT SD.ID, SD.ALERT_ID
	   FROM
		  SPRINT_DTL SD
		  INNER JOIN ALERT A ON SD.ALERT_ID = A.ALERT_ID
	   WHERE
		  SD.SPRINT_HDR_ID = @SPRINT_HEADER_ID;

	   UPDATE ALERT SET BOARD_STATE_ID = NULL WHERE ALERT_ID IN (SELECT ALERT_ID FROM @DTLS);
	   DELETE FROM SPRINT_EMPLOYEE WHERE SPRINT_DTL_ID IN (SELECT SPRINT_DTL_ID FROM @DTLS);
	   DELETE FROM SPRINT_DTL WHERE ID IN (SELECT SPRINT_DTL_ID FROM @DTLS);

    END


    UPDATE SPRINT_HDR SET COMPLETED_DATE = GETDATE(), IS_COMPLETE = 1, IS_ACTIVE = 0
    WHERE ID = @SPRINT_HEADER_ID;

    IF @ACTIVATE_NEXT = 1 AND @HAS_NEXT_SPRINT = 1
    BEGIN
	   UPDATE SPRINT_HDR SET IS_ACTIVE = 1
	   WHERE ID = @NEXT_SPRINT_ID;
    END

    SELECT CAST(ISNULL(@NEXT_SPRINT_ID, 0) AS INT);
    
/*=========== QUERY ===========*/
END