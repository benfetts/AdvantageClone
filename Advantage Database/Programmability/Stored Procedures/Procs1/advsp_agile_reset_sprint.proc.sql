IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[advsp_agile_reset_sprint]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
    DROP PROCEDURE [dbo].[advsp_agile_reset_sprint]
GO
CREATE PROCEDURE [dbo].[advsp_agile_reset_sprint] (
@SPRINT_HDR_ID INT,
@USER_CODE VARCHAR(100)
)
AS
BEGIN

    IF NOT @SPRINT_HDR_ID IS NULL
    BEGIN

	   -- DELETE SPRINT EMPLOYEES
	   BEGIN
		  DELETE FROM SPRINT_EMPLOYEE 
		  FROM
			 SPRINT_EMPLOYEE SE 
			 INNER JOIN SPRINT_DTL SD ON SE.SPRINT_DTL_ID = SD.ID
			 INNER JOIN SPRINT_HDR SH ON SD.SPRINT_HDR_ID = SH.ID
		  WHERE
			 SH.ID = @SPRINT_HDR_ID;
	   END

	   -- LOG TO ALERT SPRINT WAS RESET
	   BEGIN
		  DECLARE
			 @SPRINT_NAME VARCHAR(500),
			 @COMMENT VARCHAR(MAX)

		  SELECT @SPRINT_NAME = [DESCRIPTION] FROM SPRINT_HDR WHERE ID = @SPRINT_HDR_ID

		  SET @COMMENT = 'Board reset by: ' + @USER_CODE + '<br />Board ID: ' + CAST(@SPRINT_HDR_ID AS VARCHAR(MAX)) + ISNULL('<br />Board Description: ' + @SPRINT_NAME, '')


		  DECLARE @CURR_ALERT_ID INT;

		  DECLARE ALERT_CURSOR CURSOR FOR
		  SELECT DISTINCT A.ALERT_ID
		  FROM
			 ALERT A
			 INNER JOIN SPRINT_DTL SD ON A.ALERT_ID  = SD.ALERT_ID
		  WHERE
			 SD.SPRINT_HDR_ID = @SPRINT_HDR_ID;

		  OPEN ALERT_CURSOR;
		  FETCH NEXT FROM ALERT_CURSOR INTO @CURR_ALERT_ID;

		  WHILE (@@FETCH_STATUS = 0)
		  BEGIN

			  UPDATE ALERT SET ALERT_STATE_ID = NULL WHERE ALERT_ID = @CURR_ALERT_ID;
			  INSERT INTO ALERT_COMMENT (ALERT_ID, USER_CODE, GENERATED_DATE, COMMENT)
			  VALUES (@CURR_ALERT_ID, @USER_CODE, GETDATE(), @COMMENT)

			  FETCH NEXT FROM ALERT_CURSOR INTO @CURR_ALERT_ID;

		  END

		  CLOSE ALERT_CURSOR;
		  DEALLOCATE ALERT_CURSOR;
	   END

	   -- DELETE DETAIL RECORDS
	   BEGIN
		  DELETE FROM SPRINT_DTL
		  FROM
			 SPRINT_DTL SD
			 INNER JOIN SPRINT_HDR SH ON SD.SPRINT_HDR_ID = SH.ID
		  WHERE
			 SH.ID = @SPRINT_HDR_ID;
	   END

    END

END