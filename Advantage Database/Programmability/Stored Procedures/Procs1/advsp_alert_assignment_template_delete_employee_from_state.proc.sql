IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[advsp_alert_assignment_template_delete_employee_from_state]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[advsp_alert_assignment_template_delete_employee_from_state];
END
GO
CREATE PROCEDURE [dbo].[advsp_alert_assignment_template_delete_employee_from_state] 
@USER_CODE VARCHAR(100) = NULL,
@ALERT_ID INT = NULL,
@ALRT_NOTIFY_HDR_ID INT = NULL,
@ALERT_STATE_ID INT = NULL,
@EMP_CODE VARCHAR(6) = NULL,
@DOCUMENT_ID INT = NULL
AS
/*=========== QUERY ===========*/
BEGIN
	--	VARS
	BEGIN
		DECLARE
			@CURRENT_ALERT_STATE_ID INT,
			@HOURS_ALLOWED DECIMAL (7, 2),
			@IS_ROUTED BIT = 0,
			@IS_PROOF BIT = 0,
			@CAN_DELETE BIT = 0,
			@IS_CURRENT_STATE BIT = 0,
			@RIGHT_NOW SMALLDATETIME
		;
		DECLARE
			@STATES TABLE (ID INT, ALRT_TEMPLATE_HDR_ID INT, ALERT_STATE_ID INT, SORT_ORDER INT, CAN_EDIT_ASSIGNEES BIT, IS_CURRENT_STATE BIT)
	END
	--	INIT
	BEGIN
		SELECT
			@IS_ROUTED =	CASE
								WHEN A.ALRT_NOTIFY_HDR_ID IS NOT NULL AND A.ALERT_STATE_ID IS NOT NULL THEN 1
								ELSE 0
							END,
			@IS_PROOF =	CASE
							WHEN A.ALERT_CAT_ID = 79 THEN 1
							ELSE 0
						END,
			@CURRENT_ALERT_STATE_ID = A.ALERT_STATE_ID,
			@HOURS_ALLOWED = A.HRS_ALLOWED,
			@ALRT_NOTIFY_HDR_ID = COALESCE(@ALRT_NOTIFY_HDR_ID, A.ALRT_NOTIFY_HDR_ID)
		FROM
			ALERT A WITH(NOLOCK)
		WHERE
			A.ALERT_ID = @ALERT_ID;
		SELECT
			@RIGHT_NOW = GETDATE()
		;
		IF @DOCUMENT_ID IS NULL OR @DOCUMENT_ID = 0 
		BEGIN
			SELECT 
				@DOCUMENT_ID = MAX(DOCUMENT_ID)
			FROM
				ALERT_ATTACHMENT AA WITH(NOLOCK)
			WHERE
				AA.ALERT_ID = @ALERT_ID
			;
		END
		IF @IS_ROUTED = 0
		BEGIN
			SELECT
				@ALRT_NOTIFY_HDR_ID = NULL,
				@ALERT_STATE_ID = NULL,
				@CAN_DELETE = 1
			;

		END
		IF @IS_ROUTED = 1
		BEGIN
			INSERT INTO @STATES (ID, ALRT_TEMPLATE_HDR_ID, ALERT_STATE_ID, SORT_ORDER, CAN_EDIT_ASSIGNEES, IS_CURRENT_STATE)
			SELECT
				SFN.ID,
				SFN.AlertTemplateID,
				SFN.AlertStateID,
				SFN.SortOrder,
				SFN.CanEditAssignees,
				SFN.IsCurrentState
			FROM
				[dbo].[advtf_alert_get_states] (@ALERT_ID) AS SFN
			;		
			SELECT
				@CAN_DELETE = S.CAN_EDIT_ASSIGNEES
			FROM
				@STATES S
			WHERE
				S.ALERT_STATE_ID = @ALERT_STATE_ID;
			SELECT @CAN_DELETE = ISNULL(@CAN_DELETE, 0);
		END
	END
	IF @IS_ROUTED = 1
	BEGIN
		--	MAKE SURE TEMPLATE EXISTS
		BEGIN
			EXEC [dbo].[advsp_alert_assignment_template_create_custom] @ALERT_ID;
		END
		IF @CAN_DELETE = 1
		BEGIN
			--	CURRENT STATE?
			IF @ALERT_STATE_ID = @CURRENT_ALERT_STATE_ID
			BEGIN
				SELECT @IS_CURRENT_STATE = 1;
			END
			--	DELETE FROM TEMPLATE
			IF @CAN_DELETE = 1
			BEGIN
				BEGIN
					UPDATE ALERT_NOTIFY_EMPS_ASSIGNMENT WITH(ROWLOCK) SET IS_SELECTED = NULL
					WHERE
						ALERT_ID = @ALERT_ID
						AND ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID
						AND ALERT_STATE_ID = @ALERT_STATE_ID
						AND EMP_CODE = @EMP_CODE
					;
					--DELETE FROM ALERT_NOTIFY_EMPS_ASSIGNMENT WITH(ROWLOCK)
					--WHERE
					--	ALERT_ID = @ALERT_ID
					--	AND ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID
					--	AND ALERT_STATE_ID = @ALERT_STATE_ID
					--	AND EMP_CODE = @EMP_CODE
					--;
				END
				--	ONLY CLEANUP NOT CURRENT STATE
				IF @IS_CURRENT_STATE = 0
				BEGIN
					DELETE FROM ALERT_RCPT WITH(ROWLOCK)
					WHERE 
						ALERT_ID = @ALERT_ID 
						AND EMP_CODE = @EMP_CODE 
						AND CURRENT_NOTIFY = 1
						AND ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID
						AND ALERT_STATE_ID = @ALERT_STATE_ID
					;
					DELETE FROM ALERT_RCPT_DISMISSED WITH(ROWLOCK)
					WHERE 
						ALERT_ID = @ALERT_ID 
						AND EMP_CODE = @EMP_CODE 
						AND CURRENT_NOTIFY = 1
						AND ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID
						AND ALERT_STATE_ID = @ALERT_STATE_ID
					;
				END
			END
		END
	END
END
/*=========== QUERY ===========*/