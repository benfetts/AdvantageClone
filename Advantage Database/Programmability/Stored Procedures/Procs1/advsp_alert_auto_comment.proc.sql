IF EXISTS ( SELECT *
            FROM dbo.sysobjects
            WHERE id = OBJECT_ID(N'[dbo].[advsp_alert_auto_comment]')
                  AND
                  OBJECTPROPERTY(id , N'IsProcedure') = 1
          )
BEGIN
    DROP PROCEDURE [dbo].[advsp_alert_auto_comment];
END;
GO

CREATE PROCEDURE [dbo].[advsp_alert_auto_comment]
@ALERT_ID       INT ,
@USER_CODE      VARCHAR(100) ,
@EMP_CODE       VARCHAR(6) ,
@WORK_ITEM_TYPE SMALLINT , -- 0 = TRUE ASSIGNEMNT (ROUTED ASSIGNMENT), 1 = OTHER WORKITEMS
@COMMENT_TYPE   SMALLINT -- 0 = COMPLETING, 1 = UNCOMPLETING/RE-OPEN
AS
BEGIN
/*=========== QUERY ===========*/
    -- VARIABLES
	BEGIN
		DECLARE 
			@EMP_FML VARCHAR(100) , 
			@EMAIL_ADDRESS VARCHAR(100) , 
			@COMMENT VARCHAR(MAX) , 
			@LAST_COMMENT_ID INT , 
			@COMMENT_ADDED BIT , 
			@CUSTODY_DATE SMALLDATETIME , 
			@IS_MULTIROUTE_ASSIGNMENT BIT,
			@ALRT_NOTIFY_HDR_ID INT,
			@ALERT_STATE_ID INT,
			@ASSIGNED_EMP_CODE VARCHAR(6),
			@CURR_DFLT_ALERT_STATE_ID INT , 
			@CURR_DFLT_ALERT_STATE_NAME VARCHAR(100);
	END;
    --INIT
	BEGIN
		SET @IS_MULTIROUTE_ASSIGNMENT = 0;
		IF @EMP_CODE IS NULL
		BEGIN
			SET @EMP_CODE = (SELECT TOP 1 EMP_CODE
							 FROM SEC_USER
							 WHERE USER_CODE = @USER_CODE
							 );
		END;
		SELECT 
			@EMP_FML = ISNULL([EMPLOYEE].EMP_FNAME+' ' , '')+ISNULL([EMPLOYEE].EMP_MI+'. ' , '')+ISNULL([EMPLOYEE].EMP_LNAME , '') , 
			@EMAIL_ADDRESS = EMP_EMAIL
		FROM 
			[EMPLOYEE] WITH (NOLOCK)
		WHERE 
			EMP_CODE = @EMP_CODE;
		SELECT TOP 1 
			@LAST_COMMENT_ID = ALERT_COMMENT.COMMENT_ID
		FROM 
			dbo.ALERT_COMMENT
		WHERE 
			ALERT_ID = @ALERT_ID
		ORDER BY 
			ALERT_COMMENT.GENERATED_DATE DESC , 
			ALERT_COMMENT.COMMENT_ID DESC;
	END;
	--  INIT TYPE
	BEGIN
		SELECT
			@ALRT_NOTIFY_HDR_ID = ALRT_NOTIFY_HDR_ID,
			@ALERT_STATE_ID = ALERT_STATE_ID,
			@ASSIGNED_EMP_CODE = ASSIGNED_EMP_CODE
		FROM
			ALERT WITH(NOLOCK)
		WHERE
			ALERT_ID = @ALERT_ID;
		IF NOT @ALRT_NOTIFY_HDR_ID IS NULL AND NOT @ALERT_STATE_ID IS NULL AND @ASSIGNED_EMP_CODE IS NULL
		BEGIN
			SET @IS_MULTIROUTE_ASSIGNMENT = 1;
		END
		ELSE
		BEGIN
			SET @IS_MULTIROUTE_ASSIGNMENT = 0;
		END
	END
	-- ASSIGNEE
	BEGIN
		IF @ASSIGNED_EMP_CODE IS NULL AND @IS_MULTIROUTE_ASSIGNMENT = 0
		BEGIN
			SELECT 
				@ASSIGNED_EMP_CODE = LAST_ASSIGNED_EMP_CODE
			FROM 
				ALERT
			WHERE 
				ALERT_ID = @ALERT_ID;
		END;
	END
	--  COMMENT TYPE
	IF @COMMENT_TYPE = 0
	BEGIN
		IF @WORK_ITEM_TYPE = 0
		BEGIN
			--	GET THE HDR ID OUT OF THE ALERT
			--	SEE IF THERE IS A DEFAULT COMPLETED STATE
			IF NOT @ALRT_NOTIFY_HDR_ID IS NULL AND	@ALRT_NOTIFY_HDR_ID > 0
			BEGIN
				SELECT 
					@CURR_DFLT_ALERT_STATE_ID = ISNULL(ALERT_NOTIFY_STATES.ALERT_STATE_ID , 0) , 
					@CURR_DFLT_ALERT_STATE_NAME = ISNULL(ALERT_STATES.ALERT_STATE_NAME , '')
				FROM 
					ALERT_NOTIFY_STATES WITH (NOLOCK) 
					INNER JOIN ALERT_STATES WITH (NOLOCK) ON ALERT_NOTIFY_STATES.ALERT_STATE_ID = ALERT_STATES.ALERT_STATE_ID
				WHERE 
					ALERT_NOTIFY_STATES.IS_COMPLETED = 1
					AND ALERT_NOTIFY_STATES.ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID;
			END;
		END;
		----	THERE IS A DEFAULT COMPLETED STATE
		--IF @CURR_DFLT_ALERT_STATE_ID > 0 AND @ALERT_STATE_ID = @CURR_DFLT_ALERT_STATE_ID
		--BEGIN
		--	SET @COMMENT = 'COMPLETED | STATE CHANGED TO '+ @CURR_DFLT_ALERT_STATE_NAME + ' | ' + @EMP_FML;
		--END;
		----	THERE IS NO DEFAULT COMPLETED STATE
		--IF @CURR_DFLT_ALERT_STATE_ID IS NULL OR @CURR_DFLT_ALERT_STATE_ID = 0
		--BEGIN
		--	SET @COMMENT = 'COMPLETED | ' + @EMP_FML;
		--END;
	END;
	IF @COMMENT_TYPE = 1
	BEGIN
		SET @COMMENT = 'RE-OPENED | '+ @EMP_FML;
	END;
	--  CLEAN UP
	BEGIN
		IF @ASSIGNED_EMP_CODE IS NULL AND @IS_MULTIROUTE_ASSIGNMENT = 0
		BEGIN
			SET @ASSIGNED_EMP_CODE = @EMP_CODE;
		END;
	END
	-- COMMENT
	BEGIN
		IF NOT @COMMENT IS NULL AND RTRIM(LTRIM(@COMMENT)) <> ''
        BEGIN
            SET @CUSTODY_DATE = GETDATE();
            --	ADD AN AUTO-COMMENT
			BEGIN
				INSERT INTO ALERT_COMMENT WITH(ROWLOCK) ( ALERT_ID , USER_CODE , GENERATED_DATE , COMMENT , EMAILSENT , ASSIGNED_EMP_CODE )
				VALUES ( @ALERT_ID , @USER_CODE , @CUSTODY_DATE , @COMMENT , 0 , @ASSIGNED_EMP_CODE );
			END
			--  UPDATE PREVIOUS
			BEGIN
				IF @LAST_COMMENT_ID IS NOT NULL
				BEGIN
					UPDATE ALERT_COMMENT
						SET CUSTODY_END = @CUSTODY_DATE
					WHERE COMMENT_ID = @LAST_COMMENT_ID;
				END;
			END
        END;
	END

/*=========== QUERY ===========*/
END;