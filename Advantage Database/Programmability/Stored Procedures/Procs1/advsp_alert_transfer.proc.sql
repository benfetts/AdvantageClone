IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[advsp_alert_transfer]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
    DROP PROCEDURE [dbo].[advsp_alert_transfer]
GO
CREATE PROCEDURE [dbo].[advsp_alert_transfer]
@ALERT_ID INT,
@JOB_NUMBER INT,
@JOB_COMPONENT_NBR SMALLINT,
@BOARD_ID INT,
@SPRINT_ID INT,
@STATE_ID INT,
@USER_CODE VARCHAR(100)
AS
BEGIN

	DECLARE
		@TRANSFERRED BIT,
		@OKAY_TO_TRANSFER BIT,
		@IS_ON_SPRINT BIT,
		@IS_ALL_JOBS_BOARD BIT,
		@KEEP_SPRINT_INFO BIT,
		@IS_MANUAL_BOARD_TRANSFER BIT

	SET @OKAY_TO_TRANSFER = 0;
	SET @KEEP_SPRINT_INFO = 0;
	SET @IS_ALL_JOBS_BOARD = 0;

	IF EXISTS (SELECT 1 FROM SPRINT_DTL WHERE ALERT_ID = @ALERT_ID)
	BEGIN
		SET @IS_ON_SPRINT = 1;
	END
	ELSE
	BEGIN
		SET @IS_ON_SPRINT = 0;
	END

	IF NOT @BOARD_ID IS NULL AND @BOARD_ID > 0 AND NOT @SPRINT_ID IS NULL AND @SPRINT_ID > 0 AND NOT @STATE_ID IS NULL AND @STATE_ID > 0
	BEGIN
		SET @IS_MANUAL_BOARD_TRANSFER = 1;
		SET @OKAY_TO_TRANSFER = 1;
		SET @KEEP_SPRINT_INFO = 1;
	END

	IF @OKAY_TO_TRANSFER = 0 AND @IS_ON_SPRINT = 1
	BEGIN
		SET @OKAY_TO_TRANSFER = 1;
		SET @KEEP_SPRINT_INFO = 1;
	END

	IF @OKAY_TO_TRANSFER = 0
	BEGIN
		IF EXISTS (
			SELECT B.ID
			FROM BOARD B 
				INNER JOIN SPRINT_HDR SH ON B.BOARD_HDR_ID = B.ID 
				INNER JOIN SPRINT_DTL SD ON SD.SPRINT_HDR_ID = SH.ID 
			WHERE
				B.INCL_ALL_JOBS = 1 AND SD.ALERT_ID = @ALERT_ID)
		BEGIN
			SET @IS_ALL_JOBS_BOARD = 1;
		END
		ELSE
		BEGIN
			SET @IS_ALL_JOBS_BOARD = 0;
		END

		IF @IS_ALL_JOBS_BOARD = 1
		BEGIN
			SET @OKAY_TO_TRANSFER = 1;
		END
		ELSE
		BEGIN
			
			DECLARE
				@ORIGINAL_BOARD_ID INT,
				@TRANSFER_BOARD_ID INT

				SELECT 
					@ORIGINAL_BOARD_ID = B.ID 
				FROM 
					BOARD B 
					INNER JOIN BOARD_JOB BJ ON BJ.BOARD_ID = B.ID 
					INNER JOIN ALERT A ON BJ.JOB_NUMBER = A.JOB_NUMBER AND BJ.JOB_COMPONENT_NBR = A.JOB_COMPONENT_NBR
				WHERE
					A.ALERT_ID = @ALERT_ID;

				SELECT 
					@TRANSFER_BOARD_ID = B.ID
				FROM 
					BOARD B
					INNER JOIN BOARD_JOB BJ ON BJ.BOARD_ID = B.ID
				WHERE
					BJ.JOB_NUMBER = @JOB_NUMBER
					AND BJ.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

				IF @ORIGINAL_BOARD_ID = @TRANSFER_BOARD_ID
				BEGIN
					SET @KEEP_SPRINT_INFO = 1;
				END
				ELSE
				BEGIN
					SET @KEEP_SPRINT_INFO = 0;
				END
				SET @OKAY_TO_TRANSFER = 1;

		END

	END

	IF @OKAY_TO_TRANSFER = 1
	BEGIN
		
		DECLARE
			@CL_CODE VARCHAR(6), 
			@DIV_CODE VARCHAR(6), 
			@PRD_CODE VARCHAR(6), 
			@CURR_SEQ_NUMBER SMALLINT,
			@NEW_SEQ_NUMBER SMALLINT,
			@CURR_JOB_COMP_DESC VARCHAR(200),
			@NEW_JOB_COMP_DESC VARCHAR(200),
			@EMPLOYEE_FULL_NAME VARCHAR(300)

		SELECT @CL_CODE = CL_CODE, @DIV_CODE = DIV_CODE, @PRD_CODE = PRD_CODE 
		FROM 
			JOB_LOG 
		WHERE 
			JOB_NUMBER = @JOB_NUMBER;

		SELECT @CURR_SEQ_NUMBER = ALERT_SEQ_NBR FROM ALERT WHERE ALERT_ID = @ALERT_ID;

		IF EXISTS (SELECT 1 FROM ALERT A WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND ALERT_SEQ_NBR = @CURR_SEQ_NUMBER)
		BEGIN
			SELECT @NEW_SEQ_NUMBER = MAX(ALERT_SEQ_NBR) + 1 FROM ALERT WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;
		END
		ELSE
		BEGIN
			SELECT @NEW_SEQ_NUMBER = @CURR_SEQ_NUMBER;
		END

		SELECT 
			@CURR_JOB_COMP_DESC = REPLACE(STR(JC.JOB_NUMBER, 6), SPACE(1), '0') + '/' + REPLACE(STR(JC.JOB_COMPONENT_NBR, 3), SPACE(1), '0') + ' - ' + JC.JOB_COMP_DESC 
		FROM 
			JOB_COMPONENT JC 
			INNER JOIN ALERT A ON JC.JOB_NUMBER = A.JOB_NUMBER AND JC.JOB_COMPONENT_NBR = A.JOB_COMPONENT_NBR AND A.ALERT_ID = @ALERT_ID;

		BEGIN TRANSACTION TR_UPDATE_ALERT
			UPDATE ALERT
				SET CL_CODE = @CL_CODE, 
					DIV_CODE = @DIV_CODE, 
					PRD_CODE = @PRD_CODE, 
					JOB_NUMBER = @JOB_NUMBER, 
					JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR, 
					ALERT_SEQ_NBR = @NEW_SEQ_NUMBER
			WHERE
				ALERT_ID = @ALERT_ID;
		COMMIT TRANSACTION

		IF @@ERROR = 0
		BEGIN

			SET @TRANSFERRED = 1;

			SET @KEEP_SPRINT_INFO = 1 -- ALWAYS KEEP???
			IF @KEEP_SPRINT_INFO = 0
			BEGIN
				DELETE FROM SPRINT_EMPLOYEE
				WHERE
					SPRINT_DTL_ID IN (SELECT ID FROM SPRINT_DTL WHERE ALERT_ID = @ALERT_ID)
				DELETE FROM SPRINT_DTL WHERE ALERT_ID = @ALERT_ID;
				UPDATE ALERT SET BOARD_STATE_ID = NULL, BACKLOG_SEQ_NBR = NULL
				WHERE ALERT_ID = @ALERT_ID;
			END

			IF @IS_MANUAL_BOARD_TRANSFER = 1
			BEGIN
				UPDATE ALERT SET BOARD_STATE_ID = @STATE_ID, BACKLOG_SEQ_NBR = NULL
				WHERE ALERT_ID = @ALERT_ID;
				UPDATE SPRINT_DTL SET SPRINT_HDR_ID = @SPRINT_ID
				WHERE ALERT_ID = @ALERT_ID;
			END

			-- TRACKING COMMENT
			BEGIN
				SELECT 
					@NEW_JOB_COMP_DESC = REPLACE(STR(JC.JOB_NUMBER, 6), SPACE(1), '0') + '/' + REPLACE(STR(JC.JOB_COMPONENT_NBR, 3), SPACE(1), '0') + ' - ' + JC.JOB_COMP_DESC 
				FROM 
					JOB_COMPONENT JC 
					INNER JOIN ALERT A ON JC.JOB_NUMBER = A.JOB_NUMBER AND JC.JOB_COMPONENT_NBR = A.JOB_COMPONENT_NBR AND A.ALERT_ID = @ALERT_ID;
			
				SELECT
					@EMPLOYEE_FULL_NAME = ISNULL(E.EMP_FNAME + ' ', '') + ISNULL(E.EMP_MI + '. ', '') + E.EMP_LNAME
				FROM
					EMPLOYEE E 
					INNER JOIN
					(
						SELECT
							TOP 1 EMP_CODE
						FROM SEC_USER SU
						WHERE 
							SU.USER_CODE = @USER_CODE) A ON E.EMP_CODE = A.EMP_CODE;

				INSERT INTO ALERT_COMMENT (ALERT_ID, GENERATED_DATE, USER_CODE, IS_SYSTEM, COMMENT)
				VALUES(@ALERT_ID, GETDATE(), @USER_CODE, 1, 'MOVE | ' + @EMPLOYEE_FULL_NAME + ' |<br/><b>From:</b>&nbsp;&nbsp;' + @CURR_JOB_COMP_DESC + '<br/><b>To:</b>&nbsp;&nbsp;' + @NEW_JOB_COMP_DESC)
			END

		END

	END

	SELECT ISNULL(@TRANSFERRED, 0) AS Transferred;

END