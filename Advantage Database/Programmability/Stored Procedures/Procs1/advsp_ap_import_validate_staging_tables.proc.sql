CREATE PROCEDURE [dbo].[advsp_ap_import_validate_staging_tables] @batch_name varchar(50), @user_code varchar(100)

-- ========================================================================
-- advsp_ap_import_validate_staging_tables
-- 07/25/14 - Note: This should not be the exact same as what is in 6.60.03
-- 01/21/16 - pulling in FNC_CODE from PURCHASE_ORDER_DET
-- 05/23/16 - speed enhancements for Strata Broadcast import
-- 05/23/16 - OFFICE_CODE_DTL no getting set correctly when passing in non-billable production GL
-- 07/13/16 - when validating job, only take job office into consideration when @ap_office = 1
-- 07/21/16 - apply office limits and CDP limits
-- 09/06/16 - When Importing in APs generated from the Media Manager, the AP Import application is requiring an Office to be assigned to the AP
-- ========================================================================

AS

DECLARE @inter_company				smallint,
		@ap_office					smallint,
		@use_ap_account_from_office	bit,
		@IsStrataFixedPrint			bit,
		@template_id				smallint,
		@AllowAllOrders				bit,
		@AllowCostOfSaleEntry		bit,
		@IsStrataFixedInternet		bit,
		@IsStrataFixedBroadcast		bit,
		@IsBroadcast4a				bit,
		@record_source_id			int,
		@IsCustomNonClientOnlyTemplate	bit,
		@EmployeeCode					varchar(6),
		@HasOfficeLimits				bit,
		@CommissionOnlyRowCount		int
	
	SET @HasOfficeLimits = 0

	SELECT @EmployeeCode = EMP_CODE
	FROM dbo.SEC_USER
	WHERE UPPER(USER_CODE) = UPPER(@user_code)

	IF (SELECT COUNT(1) FROM dbo.EMP_OFFICE WHERE EMP_CODE = @EmployeeCode) > 0
		SET @HasOfficeLimits = 1

	SELECT @inter_company = ISNULL(INTER_COMPANY,0), @ap_office = ISNULL(AP_OFFICE,0), @use_ap_account_from_office = ISNULL(AP_ACCT_OFF_IMP,0)
	FROM dbo.AGENCY
	
	SELECT @template_id = TEMPLATE_ID
	FROM dbo.IMP_AP_HEADER
	WHERE	IMPORT_ID = (SELECT TOP 1 IMPORT_ID FROM dbo.IMP_AP_HEADER WHERE BATCH_NAME = @batch_name)
	
	SELECT @record_source_id = RECORD_SOURCE_ID 
	FROM dbo.IMPORT_TEMPLATE 
	WHERE	TEMPLATE_ID = @template_id 
	
	IF (SELECT TEMPLATE_TYPE 
		FROM dbo.IMPORT_TEMPLATE 
		WHERE TEMPLATE_ID = @template_id) = 10  --Import Template Type 10 is StrataFixedPrint
		SET @IsStrataFixedPrint = 1
	ELSE
		SET @IsStrataFixedPrint = 0
	
	IF (SELECT TEMPLATE_TYPE 
		FROM dbo.IMPORT_TEMPLATE 
		WHERE TEMPLATE_ID = @template_id) = 5  --Import Template Type 5 is StrataFixedInternet
		SET @IsStrataFixedInternet = 1
	ELSE
		SET @IsStrataFixedInternet = 0
	
	IF (SELECT TEMPLATE_TYPE 
		FROM dbo.IMPORT_TEMPLATE 
		WHERE TEMPLATE_ID = @template_id) = 9  --Import Template Type 9 is StrataFixedBroadcast
		SET @IsStrataFixedBroadcast = 1
	ELSE
		SET @IsStrataFixedBroadcast = 0
	
	IF (SELECT TEMPLATE_TYPE 
		FROM dbo.IMPORT_TEMPLATE 
		WHERE TEMPLATE_ID = @template_id
		AND SYSTEM_TEMPLATE = 1
		AND TEMPLATE_NAME = 'Custom Non-Client Only') = 19  --Import Template is Custom Non-Client Only
		SET @IsCustomNonClientOnlyTemplate = 1
	ELSE
		SET @IsCustomNonClientOnlyTemplate = 0
		
	IF (SELECT TEMPLATE_TYPE 
		FROM dbo.IMPORT_TEMPLATE 
		WHERE TEMPLATE_ID = @template_id
		AND SYSTEM_TEMPLATE = 1
		AND TEMPLATE_NAME = '4A''s Broadcast') = 25  --Import Template is Broadcast 4a's
		SET @IsBroadcast4a = 1
	ELSE
		SET @IsBroadcast4a = 0
	
	IF(SELECT [AGY_SETTINGS_VALUE] FROM [dbo].[AGY_SETTINGS] WHERE [AGY_SETTINGS_CODE] = 'AP_NON_VENDOR_ORDER') = 'True'
		SET @AllowAllOrders = 1
	ELSE
		SET @AllowAllOrders = 0
	
	SELECT @AllowCostOfSaleEntry = ISNULL(COS_ENTRY_FLAG, 0)
	FROM dbo.AGENCY
	
	DECLARE @MagazineOrders TABLE (
		[ClientCode] varchar(6) NOT NULL,
		[DivisionCode] varchar(6) NOT NULL,
		[ProductCode] varchar(6) NOT NULL,
		[OrderNumber] int NOT NULL,
		[LineNumber] smallint NOT NULL,
		[InsertDate] smalldatetime NULL,
		[OrderDescription] varchar(40) NULL,
		[LinkID] int NULL,
		[ClientPO] varchar(25) NULL,
		[MarketCode] varchar(10) NULL,
		[VendorCode] varchar(6) NULL,
		[OfficeCode] varchar(4) NULL
	)
	
	DECLARE @InternetOrders TABLE (
		[ClientCode] varchar(6) NOT NULL,
		[DivisionCode] varchar(6) NOT NULL,
		[ProductCode] varchar(6) NOT NULL,
		[OrderNumber] int NOT NULL,
		[LineNumber] smallint NOT NULL,
		[InsertDate] smalldatetime NULL,
		[OrderDescription] varchar(40) NULL,
		[Placement] VARCHAR(256) NULL,
		[LinkID] int NULL,
		[ClientPO] varchar(25) NULL,
		[VendorCode] varchar(6) NULL,
		[OfficeCode] varchar(4) NULL,
		[EndDate] smalldatetime NULL,
        [Type] varchar(6) NULL,
        [CampaignCode] varchar(6) NULL,
        [CampaignName] varchar(128) NULL
	)
	
	DECLARE @NewspaperOrders TABLE (
		[ClientCode] varchar(6) NOT NULL,
		[DivisionCode] varchar(6) NOT NULL,
		[ProductCode] varchar(6) NOT NULL,
		[OrderNumber] int NOT NULL,
		[LineNumber] smallint NOT NULL,
		[InsertDate] smalldatetime NULL,
		[OrderDescription] varchar(40) NULL,
		[Placement] VARCHAR(256) NULL,
		[LinkID] int NULL,
		[ClientPO] varchar(25) NULL,
		[VendorCode] varchar(6) NULL,
		[OfficeCode] varchar(4) NULL,
		[EndDate] smalldatetime NULL
	)
	
	DECLARE @OutdoorOrders TABLE (
		[ClientCode] varchar(6) NULL,
		[DivisionCode] varchar(6) NULL,
		[ProductCode] varchar(6) NULL,
		[OrderNumber] int NULL,
		[LineNumber] smallint NULL,
		[InsertDate] smalldatetime NULL,
		[OrderDescription] varchar(40) NULL,
		[LinkID] int NULL,
		[ClientPO] varchar(25) NULL,
		[MarketCode] varchar(10) NULL,
		[VendorCode] varchar(6) NULL,
		[OfficeCode] varchar(4) NULL,
        [Type] varchar(6) NULL
	)
	
	DECLARE @TVOrders TABLE (
		[ClientCode] varchar(6) NOT NULL,
		[DivisionCode] varchar(6) NOT NULL,
		[ProductCode] varchar(6) NOT NULL,
		[OrderNumber] int NOT NULL,
		[LineNumber] smallint NULL,
		[Month] char(3) NOT NULL,
		[Year] smallint NOT NULL,
		[StartDate] smalldatetime NULL,
		[EndDate] smalldatetime NULL,
		[Description] varchar(40) NULL,
		[LinkID] int NULL,
		[ClientPO] varchar(25) NULL,
		[MarketCode] varchar(10) NULL,
		[MonthNumber] smallint NOT NULL,
		[IsOld] bit NOT NULL,
		[VendorCode] varchar(6) NULL,
		[OfficeCode] varchar(4) NULL,
		[GrossRate] decimal(16,4) NULL,
		[NetworkID] varchar(10) NULL,
		[Quantity] int NULL,
		[NetRate] decimal(16,4) NULL,
		[StartTime] varchar(10) NULL,
		[EndTime] varchar(10) NULL,
		[Monday] bit,
		[Tuesday] bit,
		[Wednesday] bit,
		[Thursday] bit,
		[Friday] bit,
		[Saturday] bit,
		[Sunday] bit,
		[Length] int
	)
	
	DECLARE @RadioOrders TABLE (
		[ClientCode] varchar(6) NOT NULL,
		[DivisionCode] varchar(6) NOT NULL,
		[ProductCode] varchar(6) NOT NULL,
		[OrderNumber] int NOT NULL,
		[LineNumber] smallint NULL,
		[Month] char(3) NOT NULL,
		[Year] smallint NOT NULL,
		[StartDate] smalldatetime NULL,
		[EndDate] smalldatetime NULL,
		[Description] varchar(40) NULL,
		[LinkID] int NULL,
		[ClientPO] varchar(25) NULL,
		[MarketCode] varchar(10) NULL,
		[MonthNumber] smallint NOT NULL,
		[IsOld] bit NOT NULL,
		[VendorCode] varchar(6) NULL,
		[OfficeCode] varchar(4) NULL,
		[GrossRate] decimal(16,4) NULL,
		[Quantity] int NULL,
		[NetRate] decimal(16,4) NULL,
		[StartTime] varchar(10) NULL,
		[EndTime] varchar(10) NULL,
		[Monday] bit,
		[Tuesday] bit,
		[Wednesday] bit,
		[Thursday] bit,
		[Friday] bit,
		[Saturday] bit,
		[Sunday] bit,
		[Length] int
	)

	DECLARE @PurchaseOrders TABLE (
		[Number] int NOT NULL,
		[Description] varchar(40) NULL,
		[Date] smalldatetime NULL,
		[DueDate] smalldatetime NULL,
		[Status] varchar(40) NULL,
		[POTotal] decimal(15,2) NULL,
		[POBalance] decimal(15,2) NULL,
		[WorkComplete] varchar(5) NULL,
		[VendorCode] varchar(6) NULL,
		[POComplete] bit NULL
	)
	
	DECLARE @Jobs TABLE (
		[Number] int NOT NULL,
		[Description] varchar(60) NULL,
		[ClientCode] varchar(6) NULL,
		[DivisionCode] varchar(6) NULL,
		[ProductCode] varchar(6) NULL,
		[OfficeCode] varchar(4) NULL,
		[IsClosed] bit NULL
	)
	
	DECLARE @ValidGLACodes TABLE (
		[GLACODE] varchar(30) NOT NULL,
		[GLAOFFICE] varchar(20) NULL
	)

	DECLARE @BroadcastMediaKeepers TABLE (
		KEEPID int NOT NULL,
		IMPORT_ID int NOT NULL
	)
------------------------
-- Update from Mappings
------------------------
	UPDATE dbo.IMP_AP_HEADER SET VN_CODE = X.VN_CODE, VN_NAME = V.VN_NAME 
	FROM dbo.IMP_AP_HEADER H
		INNER JOIN dbo.VENDOR_XREF X ON H.VN_CODE = X.SOURCE_VN_CODE AND X.RECORD_SOURCE_ID = @record_source_id 
		INNER JOIN dbo.VENDOR V ON X.VN_CODE = V.VN_CODE 
	WHERE	BATCH_NAME = @batch_name

	UPDATE dbo.IMP_AP_HEADER SET GLACODE = X.GLACODE  
	FROM dbo.IMP_AP_HEADER H
		INNER JOIN dbo.GLACCOUNT_XREF X ON H.GLACODE = X.SOURCE_GLACODE AND X.RECORD_SOURCE_ID = @record_source_id 
	WHERE	BATCH_NAME = @batch_name
		
	UPDATE dbo.IMP_AP_GL SET GL_ACCOUNT = X.GLACODE  
	FROM dbo.IMP_AP_GL G
		INNER JOIN dbo.IMP_AP_HEADER H ON G.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.GLACCOUNT_XREF X ON G.GL_ACCOUNT = X.SOURCE_GLACODE AND X.RECORD_SOURCE_ID = @record_source_id 

------------------------
-- DEFAULT DATA IMP_AP_HEADER
------------------------
	UPDATE dbo.IMP_AP_HEADER SET VN_CODE = NULL
	FROM dbo.IMP_AP_HEADER H
	WHERE	BATCH_NAME = @batch_name
	AND		NULLIF(H.VN_CODE,'') IS NULL
	
	UPDATE dbo.IMP_AP_HEADER SET OFFICE_CODE = NULL
	FROM dbo.IMP_AP_HEADER H
	WHERE	BATCH_NAME = @batch_name
	AND		NULLIF(H.OFFICE_CODE,'') IS NULL
	
	UPDATE dbo.IMP_AP_HEADER SET GLACODE = NULL
	FROM dbo.IMP_AP_HEADER H
	WHERE	BATCH_NAME = @batch_name
	AND		NULLIF(H.GLACODE,'') IS NULL
	
	UPDATE dbo.IMP_AP_HEADER SET VN_CODE = V.VN_CODE
	FROM dbo.IMP_AP_HEADER H
		INNER JOIN dbo.VENDOR V ON H.VN_NAME = V.VN_NAME
	WHERE	BATCH_NAME = @batch_name
	AND		NULLIF(H.VN_CODE,'') IS NULL

	UPDATE dbo.IMP_AP_HEADER SET VN_NAME = V.VN_NAME
	FROM dbo.IMP_AP_HEADER H
		INNER JOIN dbo.VENDOR V ON H.VN_CODE = V.VN_CODE
	WHERE	BATCH_NAME = @batch_name
	AND		NULLIF(H.VN_NAME,'') IS NULL
	
	IF @IsStrataFixedBroadcast = 1 
	BEGIN
		UPDATE dbo.IMP_AP_HEADER SET SOURCE_CODE = 'ST'
		WHERE	BATCH_NAME = @batch_name
		AND		NULLIF(SOURCE_CODE,'') IS NULL
	END

	IF @IsStrataFixedPrint = 1
	BEGIN
		UPDATE dbo.IMP_AP_HEADER SET SOURCE_CODE = 'SX'
		WHERE	BATCH_NAME = @batch_name
		AND		NULLIF(SOURCE_CODE,'') IS NULL
	END

	IF @IsStrataFixedInternet = 1
	BEGIN
		UPDATE dbo.IMP_AP_HEADER SET SOURCE_CODE = 'IM'
		WHERE	BATCH_NAME = @batch_name
		AND		NULLIF(SOURCE_CODE,'') IS NULL
		
		UPDATE dbo.IMP_AP_MEDIA SET MEDIA_TYPE = 'I'
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	END

	UPDATE dbo.IMP_AP_HEADER SET SOURCE_CODE = 'OT'
	WHERE	BATCH_NAME = @batch_name
	AND		NULLIF(SOURCE_CODE,'') IS NULL

------------------------
-- DEFAULT DATA IMP_AP_GL
------------------------	
	UPDATE dbo.IMP_AP_GL SET GL_ACCOUNT = NULL
	FROM dbo.IMP_AP_GL G
		INNER JOIN dbo.IMP_AP_HEADER H ON G.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(G.GL_ACCOUNT,'') IS NULL
	
	UPDATE dbo.IMP_AP_GL SET OFFICE_CODE_DTL = NULL
	FROM dbo.IMP_AP_GL G
		INNER JOIN dbo.IMP_AP_HEADER H ON G.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(G.OFFICE_CODE_DTL,'') IS NULL
	
	UPDATE dbo.IMP_AP_GL SET GL_ACCOUNT = V.GLACODE_EXP
	FROM dbo.IMP_AP_GL G
		INNER JOIN dbo.IMP_AP_HEADER H ON G.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.VENDOR V ON H.VN_CODE = V.VN_CODE 
	WHERE	G.GL_ACCOUNT IS NULL

	UPDATE dbo.IMP_AP_GL SET OFFICE_CODE_DTL = GLOX.GLOXOFFICE 
	FROM dbo.IMP_AP_GL G
		INNER JOIN dbo.IMP_AP_HEADER H ON G.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.GLACCOUNT GL ON G.GL_ACCOUNT = GL.GLACODE 
		LEFT OUTER JOIN dbo.GLOXREF GLOX ON GL.GLAOFFICE = GLOX.GLOXGLOFFICE 
	WHERE	OFFICE_CODE_DTL IS NULL

------------------------
-- DEFAULT DATA IMP_AP_JOB
------------------------
	UPDATE dbo.IMP_AP_JOB SET GL_ACCOUNT = NULL
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(J.GL_ACCOUNT,'') IS NULL
	
	UPDATE dbo.IMP_AP_JOB SET JOB_NBR = POD.JOB_NUMBER, COMP_NBR = POD.JOB_COMPONENT_NBR, FNC_CODE = POD.FNC_CODE
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.PURCHASE_ORDER_DET POD ON J.PO_NBR = POD.PO_NUMBER AND J.PO_LINE = POD.LINE_NUMBER 
	WHERE	J.PO_NBR IS NOT NULL
	AND		J.JOB_NBR IS NULL

	UPDATE dbo.IMP_AP_JOB SET CL_CODE = JL.CL_CODE, DIV_CODE = JL.DIV_CODE, PRD_CODE = JL.PRD_CODE, OFFICE_CODE_DTL = CASE WHEN NULLIF(OFFICE_CODE_DTL,'') IS NULL THEN JL.OFFICE_CODE ELSE OFFICE_CODE_DTL END
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.JOB_LOG JL ON J.JOB_NBR = JL.JOB_NUMBER 
	WHERE	J.JOB_NBR IS NOT NULL
	
	UPDATE dbo.IMP_AP_JOB SET DIV_CODE = D.DIV_CODE
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		INNER JOIN (SELECT COUNT(D.DIV_CODE) AS NUM, C.CL_CODE
					FROM dbo.CLIENT C INNER JOIN dbo.DIVISION D ON C.CL_CODE = D.CL_CODE 
					WHERE D.ACTIVE_FLAG = 1
					GROUP BY C.CL_CODE
					HAVING COUNT(D.DIV_CODE) = 1
					) AS CD ON J.CL_CODE = CD.CL_CODE
		INNER JOIN dbo.DIVISION D ON CD.CL_CODE = D.CL_CODE AND D.ACTIVE_FLAG = 1
	WHERE	NULLIF(J.DIV_CODE,'') IS NULL
	
	UPDATE dbo.IMP_AP_JOB SET PRD_CODE = P.PRD_CODE
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		INNER JOIN (SELECT COUNT(P.PRD_CODE) AS NUM, D.CL_CODE, D.DIV_CODE
					FROM dbo.DIVISION D INNER JOIN dbo.PRODUCT P ON D.CL_CODE = P.CL_CODE AND D.DIV_CODE = P.PRD_CODE 
					WHERE P.ACTIVE_FLAG = 1
					GROUP BY D.CL_CODE, D.DIV_CODE 
					HAVING COUNT(P.PRD_CODE) = 1
					) AS DP ON J.CL_CODE = DP.CL_CODE
		INNER JOIN dbo.PRODUCT P ON DP.CL_CODE = P.CL_CODE AND DP.DIV_CODE = P.DIV_CODE AND P.ACTIVE_FLAG = 1
	WHERE	NULLIF(J.PRD_CODE,'') IS NULL
	
	UPDATE dbo.IMP_AP_JOB SET CLIENT_NAME = C.CL_NAME  
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.CLIENT C ON J.CL_CODE = C.CL_CODE 
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	
	UPDATE dbo.IMP_AP_JOB SET DIVISION_NAME = D.DIV_NAME  
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.DIVISION D ON J.CL_CODE = D.CL_CODE AND J.DIV_CODE = D.DIV_CODE 
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	
	UPDATE dbo.IMP_AP_JOB SET PRODUCT_NAME = P.PRD_DESCRIPTION 
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.PRODUCT P ON J.CL_CODE = P.CL_CODE AND J.DIV_CODE = P.DIV_CODE AND J.PRD_CODE = P.PRD_CODE 
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	
	UPDATE dbo.IMP_AP_JOB SET COMM_PCT = R.COMM,
								TAX_CODE = R.TAX_CODE,
								RATE = R.BILLING_RATE,
								TAX_COMM = R.TAX_COMM,
								TAX_COMM_ONLY = R.TAX_COMM_ONLY,
								NONBILL_FLAG = R.NOBILL_FLAG,
								GL_ACCOUNT = CASE WHEN COALESCE(J.NONBILL_FLAG,0) <> COALESCE(R.NOBILL_FLAG,0) THEN NULL 
											 ELSE J.GL_ACCOUNT END
	FROM dbo.IMP_AP_JOB J
		INNER JOIN 
		(
		SELECT J.ID, RATES.NOBILL_FLAG, RATES.COMM, RATES.TAX_COMM, RATES.TAX_COMM_ONLY, RATES.TAX_CODE, RATES.BILLING_RATE 
		FROM dbo.IMP_AP_JOB AS J
			INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN dbo.JOB_LOG JL ON J.JOB_NBR = JL.JOB_NUMBER 
		CROSS APPLY dbo.advtf_get_billing_rate (NULL , NULL, J.FNC_CODE, J.CL_CODE,	J.DIV_CODE, J.PRD_CODE, JL.SC_CODE, 'V', J.JOB_NBR, J.COMP_NBR, NULL ) AS RATES
		) AS R ON J.ID = R.ID
	
	UPDATE dbo.IMP_AP_JOB SET OFFICE_CODE_DTL = CASE WHEN NULLIF(J.NONBILL_GL_ACCOUNT,'') IS NOT NULL THEN (SELECT O.OFFICE_CODE
																											FROM dbo.GLACCOUNT G
																												INNER JOIN GLOXREF GX ON G.GLAOFFICE = GX.GLOXGLOFFICE 
																												INNER JOIN OFFICE O ON GX.GLOXOFFICE = O.OFFICE_CODE 
																											WHERE G.GLACODE = J.NONBILL_GL_ACCOUNT)
												ELSE JL.OFFICE_CODE
												END,
								GL_ACCOUNT = CASE WHEN NULLIF(J.NONBILL_GL_ACCOUNT,'') IS NOT NULL THEN J.NONBILL_GL_ACCOUNT ELSE A2.GLACODE END
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.FUNCTIONS F ON J.FNC_CODE = F.FNC_CODE AND F.FNC_TYPE = 'V' AND (F.FNC_INACTIVE IS NULL OR F.FNC_INACTIVE = 0)
		INNER JOIN dbo.JOB_LOG JL ON J.JOB_NBR = JL.JOB_NUMBER
		INNER JOIN dbo.GLACCOUNT A ON A.GLACODE = COALESCE(NULLIF(J.NONBILL_GL_ACCOUNT,''), F.NONBILL_CLI_GLACCT)
		INNER JOIN dbo.GLOXREF X ON JL.OFFICE_CODE = X.GLOXOFFICE 
		INNER JOIN dbo.GLACCOUNT A2 ON COALESCE(A.GLADEPT,'') = COALESCE(A2.GLADEPT,'')
									AND COALESCE(A.GLABASE,'') = COALESCE(A2.GLABASE,'')
									AND COALESCE(A.GLAOTHER,'') = COALESCE(A2.GLAOTHER,'')
									AND A2.GLAOFFICE = X.GLOXGLOFFICE 
	WHERE	J.NONBILL_FLAG = 1
	AND		GL_ACCOUNT IS NULL
	
	UPDATE dbo.IMP_AP_JOB SET GL_ACCOUNT = J.NONBILL_GL_ACCOUNT
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	J.NONBILL_FLAG = 1
	AND		GL_ACCOUNT IS NULL
	
	UPDATE dbo.IMP_AP_JOB SET GL_ACCOUNT = O.PGLACODE_WIP 
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.JOB_LOG JL ON J.JOB_NBR = JL.JOB_NUMBER
		INNER JOIN dbo.OFFICE O ON JL.OFFICE_CODE = O.OFFICE_CODE 
	WHERE	J.NONBILL_FLAG = 0
	
	UPDATE dbo.IMP_AP_JOB SET OFFICE_CODE_DTL = P.OFFICE_CODE 
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		INNER JOIN dbo.PRODUCT P ON J.CL_CODE = P.CL_CODE AND J.DIV_CODE = P.DIV_CODE AND J.PRD_CODE = P.PRD_CODE AND P.ACTIVE_FLAG = 1
	WHERE	NULLIF(J.OFFICE_CODE_DTL,'') IS NULL
	
	-- 05/23/16 - OFFICE_CODE_DTL no getting set correctly when passing in non-billable production GL
	--UPDATE dbo.IMP_AP_JOB SET OFFICE_CODE_DTL = X.GLOXOFFICE 
	--FROM dbo.IMP_AP_JOB J
	--	INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
	--	INNER JOIN dbo.GLACCOUNT A ON J.GL_ACCOUNT = A.GLACODE
	--	INNER JOIN dbo.GLOXREF X ON A.GLAOFFICE = X.GLOXGLOFFICE 
		
	UPDATE dbo.IMP_AP_JOB SET PREV_POSTED_NET_AMOUNT = DETAIL.SUMAMT 
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN (
			SELECT SUM(AP_PROD_EXT_AMT) SUMAMT, PO_NUMBER, PO_LINE_NUMBER 
			FROM dbo.AP_PRODUCTION
			WHERE	(MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
			GROUP BY PO_NUMBER, PO_LINE_NUMBER
		) DETAIL ON J.PO_NBR = DETAIL.PO_NUMBER AND J.PO_LINE = DETAIL.PO_LINE_NUMBER AND DETAIL.PO_NUMBER IS NOT NULL AND DETAIL.PO_LINE_NUMBER IS NOT NULL
	
	UPDATE dbo.IMP_AP_JOB SET PO_NET_AMOUNT = P.PO_EXT_AMOUNT 
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.PURCHASE_ORDER_DET P ON J.PO_NBR = P.PO_NUMBER AND J.PO_LINE = P.LINE_NUMBER 
	WHERE	J.PO_NBR IS NOT NULL
	AND		J.PO_LINE IS NOT NULL
	
	UPDATE dbo.IMP_AP_JOB SET PO_NET_VARIANCE = PO_NET_AMOUNT - PREV_POSTED_NET_AMOUNT 
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	
------------------------
-- DEFAULT DATA IMP_AP_MEDIA
------------------------
	UPDATE dbo.IMP_AP_MEDIA SET DAYPART_CODE = NULL
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(M.DAYPART_CODE,'') IS NULL
	
	UPDATE dbo.IMP_AP_MEDIA SET MEDIA_TYPE = 'T'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	MEDIA_TYPE = 'TV'
	
	UPDATE dbo.IMP_AP_MEDIA SET MEDIA_TYPE = 'R'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	MEDIA_TYPE = 'RA'

	IF @IsStrataFixedPrint = 1
	BEGIN
		UPDATE dbo.IMP_AP_MEDIA SET ORDER_NUMBER = B.ORDER_NBR, MEDIA_TYPE = ORDERS.MEDIA_TYPE, ORDER_LINE_NBR = B.LINE_NBR
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN (SELECT DISTINCT IMPORT_ORDER_NBR, ORDER_NBR, IMPORT_LINE_NBR, LINE_NBR
						FROM dbo.PRINT_IMPORT_XREF
						WHERE IMPORTED_FROM = 'SX'
						) B ON M.ORDER_ID = B.IMPORT_ORDER_NBR AND M.ORDER_LINE_ID = B.IMPORT_LINE_NBR
			INNER JOIN (SELECT DISTINCT ORDER_NBR, 'M' AS MEDIA_TYPE FROM dbo.V_MAG_DETAIL
						UNION
						SELECT DISTINCT ORDER_NBR, 'N' AS MEDIA_TYPE  FROM dbo.V_NEWS_DETAIL
						UNION
						SELECT DISTINCT ORDER_NBR, 'O' AS MEDIA_TYPE  FROM dbo.OUTDOOR_DETAIL 
						) ORDERS ON B.ORDER_NBR = ORDERS.ORDER_NBR 
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		WHERE	M.ORDER_NUMBER IS NULL
		
		UPDATE dbo.IMP_AP_MEDIA SET LINE_DATE = D.INSERT_DATE 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			INNER JOIN dbo.V_NEWS_DETAIL D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1 AND M.MEDIA_TYPE = 'N'
		WHERE	LINE_DATE IS NULL
		
		UPDATE dbo.IMP_AP_MEDIA SET LINE_DATE = D.INSERT_DATE 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			INNER JOIN dbo.V_MAG_DETAIL D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1 AND M.MEDIA_TYPE = 'M'
		WHERE	LINE_DATE IS NULL
		
		UPDATE dbo.IMP_AP_MEDIA SET LINE_DATE = OD.POST_DATE
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			INNER JOIN dbo.OUTDOOR_HEADER D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.MEDIA_TYPE = 'O'
			INNER JOIN dbo.OUTDOOR_DETAIL OD ON D.ORDER_NBR = OD.ORDER_NBR AND OD.LINE_NBR = M.ORDER_LINE_NBR
		WHERE	LINE_DATE IS NULL
	END
	ELSE
	BEGIN
		UPDATE dbo.IMP_AP_MEDIA SET ORDER_NUMBER = CASE WHEN M.ORDER_NUMBER IS NULL THEN B.ORDER_NBR ELSE M.ORDER_NUMBER END, 
									MEDIA_TYPE = CASE WHEN @IsStrataFixedBroadcast = 1 AND M.MEDIA_TYPE IS NULL THEN ORDERS.MEDIA_TYPE ELSE M.MEDIA_TYPE END,
									--MEDIA_TYPE = CASE WHEN M.MEDIA_TYPE IS NULL THEN ORDERS.MEDIA_TYPE ELSE M.MEDIA_TYPE END,
									ORDER_LINE_NBR = CASE WHEN M.ORDER_LINE_NBR IS NULL AND M.ORDER_LINE_ID IS NOT NULL THEN B.LINE_NBR ELSE M.ORDER_LINE_NBR END
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			INNER JOIN (SELECT DISTINCT IMPORT_ORDER_NBR, ORDER_NBR, IMPORT_LINE_NBR, LINE_NBR, IMPORTED_FROM 
						FROM dbo.BRD_IMPORT_XREF
						) B ON M.ORDER_ID = B.IMPORT_ORDER_NBR AND (M.ORDER_LINE_ID = B.IMPORT_LINE_NBR OR M.ORDER_LINE_ID IS NULL)
			INNER JOIN (SELECT ORDER_NBR, LINE_NBR FROM dbo.RADIO_DETAIL1 WHERE (LINE_CANCELLED IS NULL OR LINE_CANCELLED = 0)
						UNION
						SELECT ORDER_NBR, LINE_NBR FROM dbo.RADIO_DETAIL WHERE ACTIVE_REV = 1 AND (LINE_CANCELLED IS NULL OR LINE_CANCELLED = 0)
						UNION
						SELECT ORDER_NBR, LINE_NBR FROM dbo.TV_DETAIL WHERE ACTIVE_REV = 1 AND (LINE_CANCELLED IS NULL OR LINE_CANCELLED = 0)
						UNION
						SELECT ORDER_NBR, LINE_NBR FROM dbo.TV_DETAIL1 WHERE (LINE_CANCELLED IS NULL OR LINE_CANCELLED = 0)
						) NONCANCELLED ON B.ORDER_NBR = NONCANCELLED.ORDER_NBR AND B.LINE_NBR = NONCANCELLED.LINE_NBR
			INNER JOIN (SELECT DISTINCT ORDER_NBR, 'T' AS MEDIA_TYPE FROM dbo.TV_HDR
						UNION
						SELECT DISTINCT ORDER_NBR, 'R' AS MEDIA_TYPE  FROM dbo.RADIO_HDR
						UNION
						SELECT DISTINCT ORDER_NBR, 'T' AS MEDIA_TYPE FROM dbo.TV_HEADER
						UNION
						SELECT DISTINCT ORDER_NBR, 'R' AS MEDIA_TYPE  FROM dbo.RADIO_HEADER
						) ORDERS ON B.ORDER_NBR = ORDERS.ORDER_NBR 
		WHERE	H.SOURCE_CODE = B.IMPORTED_FROM
		AND (
			M.ORDER_NUMBER IS NULL 
		OR
			(@IsStrataFixedBroadcast = 1 AND M.MEDIA_TYPE IS NULL)
		OR
			(M.ORDER_LINE_NBR IS NULL AND M.ORDER_LINE_ID IS NOT NULL)
			)

		-- reset this to 0 since 4A's will sometimes bring in an old order number because the vendor sends the wrong number
		UPDATE dbo.IMP_AP_MEDIA SET IS_BROADCAST_LEGACY = 0
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name

		--update the amount to 85% if its a legacy order
		UPDATE dbo.IMP_AP_MEDIA SET MEDIA_NET = MEDIA_NET * .85, IS_BROADCAST_LEGACY = 1
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		WHERE
			M.ORDER_LINE_ID IS NULL
		AND ORDER_LINE_NBR IS NULL
		AND M.MEDIA_TYPE IN ('R', 'T')
		AND IS_BROADCAST_LEGACY = 0 --this will be defaulted 0 the first time this is called, but if in the old tables we know its legacy and will update it
		AND ORDER_NUMBER IN (SELECT ORDER_NBR FROM dbo.RADIO_HEADER
							 UNION
							 SELECT ORDER_NBR FROM dbo.TV_HEADER)
							 
		UPDATE dbo.IMP_AP_MEDIA SET LINE_DATE = CAST(([MONTH] + ' ' + STR([YEAR])) AS SMALLDATETIME)
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		WHERE	NULLIF(M.[MONTH],'') IS NOT NULL
		AND		M.[MONTH] IN ('JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC')
		AND		NULLIF(M.[YEAR],'') IS NOT NULL
		AND		M.[YEAR] BETWEEN 1900 AND 2078
		AND		LINE_DATE IS NULL

		UPDATE dbo.IMP_AP_MEDIA SET [MONTH] = UPPER(LEFT(DATENAME(m, LINE_DATE),3))
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		WHERE	NULLIF(M.[MONTH],'') IS NULL
		AND		LINE_DATE IS NOT NULL
		
		UPDATE dbo.IMP_AP_MEDIA SET [YEAR] = YEAR(LINE_DATE)
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		WHERE	NULLIF(M.[YEAR],'') IS NULL
		AND		LINE_DATE IS NOT NULL
		
		IF @IsBroadcast4a = 0
		BEGIN
		
			INSERT @BroadcastMediaKeepers
			SELECT MIN(ID) AS KEEPID, M.IMPORT_ID 
			FROM dbo.IMP_AP_MEDIA M
				INNER JOIN (
							SELECT DISTINCT M.IMPORT_ID, ORDER_NUMBER, [MONTH], [YEAR]
							FROM dbo.IMP_AP_MEDIA M
								INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID and H.BATCH_NAME = @batch_name
							WHERE MEDIA_TYPE in ('R','T')
							AND ORDER_LINE_NBR IS NULL
							AND ORDER_LINE_ID IS NULL
							AND ORDER_NUMBER IS NOT NULL
							AND LINE_DATE IS NOT NULL
							AND IS_BROADCAST_LEGACY = 0
							) base ON M.IMPORT_ID = base.IMPORT_ID 
									AND M.ORDER_NUMBER = base.ORDER_NUMBER 
									AND M.[MONTH] = base.[MONTH]
									AND M.[YEAR] = base.[YEAR]
			GROUP BY M.IMPORT_ID

			DELETE dbo.IMP_AP_BROADCAST_DTL
			FROM dbo.IMP_AP_BROADCAST_DTL D
			INNER JOIN dbo.IMP_AP_MEDIA M ON D.IMP_AP_MEDIA_ID = M.ID 
			INNER JOIN @BroadcastMediaKeepers K ON M.IMPORT_ID = K.IMPORT_ID 
			WHERE M.ID NOT IN (SELECT KEEPID FROM @BroadcastMediaKeepers)
		
			DELETE dbo.IMP_AP_ERROR
			FROM dbo.IMP_AP_ERROR E
			INNER JOIN dbo.IMP_AP_MEDIA M ON E.IMPORT_MEDIA_ID = M.ID 
			INNER JOIN @BroadcastMediaKeepers K ON M.IMPORT_ID = K.IMPORT_ID 
			WHERE M.ID NOT IN (SELECT KEEPID FROM @BroadcastMediaKeepers)

			DELETE dbo.IMP_AP_MEDIA 
			FROM dbo.IMP_AP_MEDIA M
				INNER JOIN @BroadcastMediaKeepers K ON M.IMPORT_ID = K.IMPORT_ID 
			WHERE M.ID NOT IN (SELECT KEEPID FROM @BroadcastMediaKeepers)
		
			-- bottom line invoices for broadcast media (Radio, TV)
			exec dbo.advsp_ap_import_process_strata_broadcast @batch_name
		
			UPDATE dbo.IMP_AP_MEDIA SET ORDER_LINE_NBR = TD.LINE_NBR 
			FROM dbo.IMP_AP_MEDIA M
				INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
				INNER JOIN (SELECT H.ORDER_NBR 
							FROM dbo.TV_HDR H INNER JOIN dbo.TV_DETAIL D ON H.ORDER_NBR = D.ORDER_NBR 
							WHERE D.ACTIVE_REV = 1 AND (D.LINE_CANCELLED IS NULL OR D.LINE_CANCELLED = 0)
							GROUP BY H.ORDER_NBR 
							HAVING COUNT(D.LINE_NBR) = 1) AS DETAIL ON M.ORDER_NUMBER = DETAIL.ORDER_NBR
				INNER JOIN dbo.TV_DETAIL TD ON TD.ORDER_NBR = DETAIL.ORDER_NBR AND TD.ACTIVE_REV = 1 AND (TD.LINE_CANCELLED IS NULL OR TD.LINE_CANCELLED = 0)
			WHERE	M.MEDIA_TYPE = 'T'

		END
				
		UPDATE dbo.IMP_AP_MEDIA SET CL_CODE = T.CL_CODE, DIV_CODE = T.DIV_CODE, PRD_CODE = T.PRD_CODE, OFFICE_CODE_DTL = T.OFFICE_CODE,
									SALES_CLASS = T.MEDIA_TYPE 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN dbo.TV_HDR T ON M.ORDER_NUMBER = T.ORDER_NBR
		WHERE	M.MEDIA_TYPE = 'T'
				
		UPDATE dbo.IMP_AP_MEDIA SET [MONTH] = TD.MONTH_NBR, [YEAR] = TD.YEAR_NBR, LINE_DATE = TD.[START_DATE] 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN dbo.TV_HDR T ON M.ORDER_NUMBER = T.ORDER_NBR
			INNER JOIN dbo.TV_DETAIL TD ON M.ORDER_NUMBER = TD.ORDER_NBR AND M.ORDER_LINE_NBR = TD.LINE_NBR AND TD.ACTIVE_REV = 1 AND (TD.LINE_CANCELLED IS NULL OR TD.LINE_CANCELLED = 0)
		WHERE	M.MEDIA_TYPE = 'T'
		
		UPDATE dbo.IMP_AP_MEDIA SET IS_BROADCAST_LEGACY = 1, CL_CODE = T.CL_CODE, DIV_CODE = T.DIV_CODE, PRD_CODE = T.PRD_CODE, OFFICE_CODE_DTL = T.OFFICE_CODE 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN dbo.TV_HEADER T ON M.ORDER_NUMBER = T.ORDER_NBR
			INNER JOIN (SELECT MAX(REV_NBR) AS REV_NBR, ORDER_NBR
						FROM [dbo].TV_HEADER
						GROUP BY ORDER_NBR) AS C ON T.ORDER_NBR = C.ORDER_NBR AND T.REV_NBR = C.REV_NBR 
		WHERE	M.MEDIA_TYPE = 'T'
		
		IF @IsBroadcast4a = 0
		BEGIN
		
			UPDATE dbo.IMP_AP_MEDIA SET ORDER_LINE_NBR = RD.LINE_NBR 
			FROM dbo.IMP_AP_MEDIA M
				INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
				INNER JOIN (SELECT H.ORDER_NBR 
							FROM dbo.RADIO_HDR H INNER JOIN dbo.RADIO_DETAIL D ON H.ORDER_NBR = D.ORDER_NBR 
							WHERE D.ACTIVE_REV = 1 AND (D.LINE_CANCELLED IS NULL OR D.LINE_CANCELLED = 0)
							GROUP BY H.ORDER_NBR 
							HAVING COUNT(D.LINE_NBR) = 1) AS DETAIL ON M.ORDER_NUMBER = DETAIL.ORDER_NBR
				INNER JOIN dbo.RADIO_DETAIL RD ON RD.ORDER_NBR = DETAIL.ORDER_NBR AND RD.ACTIVE_REV = 1 AND (RD.LINE_CANCELLED IS NULL OR RD.LINE_CANCELLED = 0)
			WHERE	M.MEDIA_TYPE = 'R'
		
		END

		UPDATE dbo.IMP_AP_MEDIA SET CL_CODE = R.CL_CODE, DIV_CODE = R.DIV_CODE, PRD_CODE = R.PRD_CODE, OFFICE_CODE_DTL = R.OFFICE_CODE, SALES_CLASS = R.MEDIA_TYPE 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN dbo.RADIO_HDR R ON M.ORDER_NUMBER = R.ORDER_NBR
		WHERE	M.MEDIA_TYPE = 'R'

		UPDATE dbo.IMP_AP_MEDIA SET [MONTH] = RD.MONTH_NBR, [YEAR] = RD.YEAR_NBR, LINE_DATE = RD.[START_DATE]
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN dbo.RADIO_HDR R ON M.ORDER_NUMBER = R.ORDER_NBR
			INNER JOIN dbo.RADIO_DETAIL RD ON M.ORDER_NUMBER = RD.ORDER_NBR AND M.ORDER_LINE_NBR = RD.LINE_NBR AND RD.ACTIVE_REV = 1 AND (RD.LINE_CANCELLED IS NULL OR RD.LINE_CANCELLED = 0)
		WHERE	M.MEDIA_TYPE = 'R'
		
		UPDATE dbo.IMP_AP_MEDIA SET IS_BROADCAST_LEGACY = 1, CL_CODE = R.CL_CODE, DIV_CODE = R.DIV_CODE, PRD_CODE = R.PRD_CODE, OFFICE_CODE_DTL = R.OFFICE_CODE 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN dbo.RADIO_HEADER R ON M.ORDER_NUMBER = R.ORDER_NBR 
			INNER JOIN (SELECT MAX(REV_NBR) AS REV_NBR, ORDER_NBR
						FROM [dbo].RADIO_HEADER
						GROUP BY ORDER_NBR) AS C ON R.ORDER_NBR = C.ORDER_NBR AND R.REV_NBR = C.REV_NBR 
		WHERE	M.MEDIA_TYPE = 'R'
		
		UPDATE dbo.IMP_AP_MEDIA SET ORDER_NUMBER = X.ORDER_NBR, ORDER_LINE_NBR = X.LINE_NBR
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			INNER JOIN dbo.PRINT_IMPORT_XREF X ON M.ORDER_ID = X.IMPORT_ORDER_NBR AND M.ORDER_LINE_ID = X.IMPORT_LINE_NBR AND H.SOURCE_CODE = X.IMPORTED_FROM 
													AND M.MEDIA_TYPE = X.MEDIA_TYPE 
			INNER JOIN dbo.INTERNET_HEADER I ON X.ORDER_NBR = I.ORDER_NBR 
		
		UPDATE dbo.IMP_AP_MEDIA SET ORDER_LINE_NBR = ID.LINE_NBR 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN (SELECT H.ORDER_NBR 
						FROM dbo.INTERNET_HEADER H INNER JOIN dbo.INTERNET_DETAIL D ON H.ORDER_NBR = D.ORDER_NBR 
						WHERE D.ACTIVE_REV = 1 AND (D.LINE_CANCELLED IS NULL OR D.LINE_CANCELLED = 0)
						GROUP BY H.ORDER_NBR 
						HAVING COUNT(D.LINE_NBR) = 1) AS DETAIL ON M.ORDER_NUMBER = DETAIL.ORDER_NBR
			INNER JOIN dbo.INTERNET_DETAIL ID ON ID.ORDER_NBR = DETAIL.ORDER_NBR AND ID.ACTIVE_REV = 1 AND (ID.LINE_CANCELLED IS NULL OR ID.LINE_CANCELLED = 0)
		WHERE	M.MEDIA_TYPE = 'I'
		
		UPDATE dbo.IMP_AP_MEDIA SET CL_CODE = I.CL_CODE, DIV_CODE = I.DIV_CODE, PRD_CODE = I.PRD_CODE, OFFICE_CODE_DTL = I.OFFICE_CODE,
								LINE_DATE = D.[START_DATE], SALES_CLASS = I.MEDIA_TYPE 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN dbo.INTERNET_HEADER I ON M.ORDER_NUMBER = I.ORDER_NBR 
            INNER JOIN dbo.INTERNET_DETAIL D ON I.ORDER_NBR = D.ORDER_NBR AND D.LINE_NBR = M.ORDER_LINE_NBR
		WHERE	M.MEDIA_TYPE = 'I'
		
		UPDATE dbo.IMP_AP_MEDIA SET ORDER_NUMBER = X.ORDER_NBR, ORDER_LINE_NBR = X.LINE_NBR 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			INNER JOIN dbo.PRINT_IMPORT_XREF X ON M.ORDER_ID = X.IMPORT_ORDER_NBR AND M.ORDER_LINE_ID = X.IMPORT_LINE_NBR AND H.SOURCE_CODE = X.IMPORTED_FROM 
													AND M.MEDIA_TYPE = X.MEDIA_TYPE 
			INNER JOIN dbo.V_MAG_HEADER V ON V.ORDER_NBR = X.ORDER_NBR 
		
		UPDATE dbo.IMP_AP_MEDIA SET ORDER_LINE_NBR = VMD.LINE_NBR 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN (SELECT H.ORDER_NBR 
						FROM dbo.V_MAG_HEADER H INNER JOIN dbo.V_MAG_DETAIL D ON H.ORDER_NBR = D.ORDER_NBR 
						WHERE D.ACTIVE_REV = 1 AND (D.LINE_CANCELLED IS NULL OR D.LINE_CANCELLED = 0)
						GROUP BY H.ORDER_NBR 
						HAVING COUNT(D.LINE_NBR) = 1) AS DETAIL ON M.ORDER_NUMBER = DETAIL.ORDER_NBR
			INNER JOIN dbo.V_MAG_DETAIL VMD ON VMD.ORDER_NBR = DETAIL.ORDER_NBR AND VMD.ACTIVE_REV = 1 AND (VMD.LINE_CANCELLED IS NULL OR VMD.LINE_CANCELLED = 0)
		WHERE	M.MEDIA_TYPE = 'M'
		
		UPDATE dbo.IMP_AP_MEDIA SET CL_CODE = V.CL_CODE, DIV_CODE = V.DIV_CODE, PRD_CODE = V.PRD_CODE, OFFICE_CODE_DTL = V.OFFICE_CODE,
								LINE_DATE = D.[START_DATE], SALES_CLASS = V.MEDIA_TYPE 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN dbo.V_MAG_HEADER V ON M.ORDER_NUMBER = V.ORDER_NBR 
            INNER JOIN dbo.MAGAZINE_DETAIL D ON V.ORDER_NBR = D.ORDER_NBR AND D.LINE_NBR = M.ORDER_LINE_NBR
		WHERE	M.MEDIA_TYPE = 'M'
		
		UPDATE dbo.IMP_AP_MEDIA SET ORDER_NUMBER = X.ORDER_NBR, ORDER_LINE_NBR = X.LINE_NBR 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			INNER JOIN dbo.PRINT_IMPORT_XREF X ON M.ORDER_ID = X.IMPORT_ORDER_NBR AND M.ORDER_LINE_ID = X.IMPORT_LINE_NBR AND H.SOURCE_CODE = X.IMPORTED_FROM 
													AND M.MEDIA_TYPE = X.MEDIA_TYPE 
			INNER JOIN dbo.V_NEWS_HEADER V ON V.ORDER_NBR = X.ORDER_NBR 
		
		UPDATE dbo.IMP_AP_MEDIA SET ORDER_LINE_NBR = VND.LINE_NBR 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN (SELECT H.ORDER_NBR 
						FROM dbo.V_NEWS_HEADER H INNER JOIN dbo.V_NEWS_DETAIL D ON H.ORDER_NBR = D.ORDER_NBR 
						WHERE D.ACTIVE_REV = 1 AND (D.LINE_CANCELLED IS NULL OR D.LINE_CANCELLED = 0)
						GROUP BY H.ORDER_NBR 
						HAVING COUNT(D.LINE_NBR) = 1) AS DETAIL ON M.ORDER_NUMBER = DETAIL.ORDER_NBR
			INNER JOIN dbo.V_NEWS_DETAIL VND ON VND.ORDER_NBR = DETAIL.ORDER_NBR AND VND.ACTIVE_REV = 1 AND (VND.LINE_CANCELLED IS NULL OR VND.LINE_CANCELLED = 0)
		WHERE	M.MEDIA_TYPE = 'N'
		
		UPDATE dbo.IMP_AP_MEDIA SET CL_CODE = V.CL_CODE, DIV_CODE = V.DIV_CODE, PRD_CODE = V.PRD_CODE, OFFICE_CODE_DTL = V.OFFICE_CODE,
								LINE_DATE = D.[START_DATE], SALES_CLASS = V.MEDIA_TYPE 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN dbo.V_NEWS_HEADER V ON M.ORDER_NUMBER = V.ORDER_NBR 
            INNER JOIN dbo.MAGAZINE_DETAIL D ON V.ORDER_NBR = D.ORDER_NBR AND D.LINE_NBR = M.ORDER_LINE_NBR
		WHERE	M.MEDIA_TYPE = 'N'
		
		UPDATE dbo.IMP_AP_MEDIA SET ORDER_NUMBER = X.ORDER_NBR, ORDER_LINE_NBR = X.LINE_NBR 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			INNER JOIN dbo.PRINT_IMPORT_XREF X ON M.ORDER_ID = X.IMPORT_ORDER_NBR AND M.ORDER_LINE_ID = X.IMPORT_LINE_NBR AND H.SOURCE_CODE = X.IMPORTED_FROM 
													AND M.MEDIA_TYPE = X.MEDIA_TYPE 
			INNER JOIN dbo.OUTDOOR_HEADER O ON O.ORDER_NBR = X.ORDER_NBR 
		
		UPDATE dbo.IMP_AP_MEDIA SET ORDER_LINE_NBR = OD.LINE_NBR 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN (SELECT H.ORDER_NBR 
						FROM dbo.OUTDOOR_HEADER H INNER JOIN dbo.OUTDOOR_DETAIL D ON H.ORDER_NBR = D.ORDER_NBR 
						WHERE D.ACTIVE_REV = 1 AND (D.LINE_CANCELLED IS NULL OR D.LINE_CANCELLED = 0)
						GROUP BY H.ORDER_NBR 
						HAVING COUNT(D.LINE_NBR) = 1) AS DETAIL ON M.ORDER_NUMBER = DETAIL.ORDER_NBR
			INNER JOIN dbo.OUTDOOR_DETAIL OD ON OD.ORDER_NBR = DETAIL.ORDER_NBR AND OD.ACTIVE_REV = 1 AND (OD.LINE_CANCELLED IS NULL OR OD.LINE_CANCELLED = 0)
		WHERE	M.MEDIA_TYPE = 'O'
		
		UPDATE dbo.IMP_AP_MEDIA SET CL_CODE = O.CL_CODE, DIV_CODE = O.DIV_CODE, PRD_CODE = O.PRD_CODE, OFFICE_CODE_DTL = O.OFFICE_CODE,
								LINE_DATE = D.[POST_DATE], SALES_CLASS = O.MEDIA_TYPE 
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
			INNER JOIN dbo.OUTDOOR_HEADER O ON M.ORDER_NUMBER = O.ORDER_NBR 
            INNER JOIN dbo.OUTDOOR_DETAIL D ON O.ORDER_NBR = D.ORDER_NBR AND D.LINE_NBR = M.ORDER_LINE_NBR
		WHERE	M.MEDIA_TYPE = 'O'
	END
	
	UPDATE dbo.IMP_AP_MEDIA SET DIV_CODE = D.DIV_CODE
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		INNER JOIN (SELECT COUNT(D.DIV_CODE) AS NUM, C.CL_CODE
					FROM dbo.CLIENT C INNER JOIN dbo.DIVISION D ON C.CL_CODE = D.CL_CODE 
					WHERE D.ACTIVE_FLAG = 1
					GROUP BY C.CL_CODE
					HAVING COUNT(D.DIV_CODE) = 1
					) AS CD ON M.CL_CODE = CD.CL_CODE
		INNER JOIN dbo.DIVISION D ON CD.CL_CODE = D.CL_CODE AND D.ACTIVE_FLAG = 1
	
	UPDATE dbo.IMP_AP_MEDIA SET PRD_CODE = P.PRD_CODE
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		INNER JOIN (SELECT COUNT(P.PRD_CODE) AS NUM, D.CL_CODE, D.DIV_CODE
					FROM dbo.DIVISION D INNER JOIN dbo.PRODUCT P ON D.CL_CODE = P.CL_CODE AND D.DIV_CODE = P.DIV_CODE  
					WHERE P.ACTIVE_FLAG = 1
					GROUP BY D.CL_CODE, D.DIV_CODE 
					HAVING COUNT(P.PRD_CODE) = 1
					) AS DP ON M.CL_CODE = DP.CL_CODE AND M.DIV_CODE = DP.DIV_CODE 
		INNER JOIN dbo.PRODUCT P ON DP.CL_CODE = P.CL_CODE AND DP.DIV_CODE = P.DIV_CODE AND P.ACTIVE_FLAG = 1
	
	UPDATE dbo.IMP_AP_MEDIA SET OFFICE_CODE_DTL = P.OFFICE_CODE 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		INNER JOIN dbo.PRODUCT P ON M.CL_CODE = P.CL_CODE AND M.DIV_CODE = P.DIV_CODE AND M.PRD_CODE = P.PRD_CODE AND P.ACTIVE_FLAG = 1
	WHERE NULLIF(M.OFFICE_CODE_DTL,'') IS NULL

	UPDATE dbo.IMP_AP_MEDIA SET [MONTH] = CASE M.[MONTH]
											WHEN '1' THEN 'JAN'
											WHEN '2' THEN 'FEB'
											WHEN '3' THEN 'MAR'
											WHEN '4' THEN 'APR'
											WHEN '5' THEN 'MAY'
											WHEN '6' THEN 'JUN'
											WHEN '7' THEN 'JUL'
											WHEN '8' THEN 'AUG'
											WHEN '9' THEN 'SEP'
											WHEN '10' THEN 'OCT'
											WHEN '11' THEN 'NOV'
											WHEN '12' THEN 'DEC' END
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	ISNUMERIC(M.[MONTH]) = 1
	
	UPDATE dbo.IMP_AP_MEDIA SET [YEAR] = 2000 + M.[YEAR]
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	(ISNUMERIC(M.[YEAR]) = 1 AND M.[YEAR] BETWEEN 0 AND 99)
	
	UPDATE dbo.IMP_AP_MEDIA SET [MONTH] = UPPER(LEFT(DATENAME(m, LINE_DATE),3))
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(M.[MONTH],'') IS NULL
	AND		LINE_DATE IS NOT NULL
	
	UPDATE dbo.IMP_AP_MEDIA SET [YEAR] = YEAR(LINE_DATE)
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(M.[YEAR],'') IS NULL
	AND		LINE_DATE IS NOT NULL
	
	UPDATE dbo.IMP_AP_MEDIA SET LINE_DATE = CAST(([MONTH] + ' ' + STR([YEAR])) AS SMALLDATETIME)
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(M.[MONTH],'') IS NOT NULL
	AND		M.[MONTH] IN ('JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC')
	AND		NULLIF(M.[YEAR],'') IS NOT NULL
	AND		M.[YEAR] BETWEEN 1900 AND 2078
	AND		LINE_DATE IS NULL
	
	UPDATE dbo.IMP_AP_MEDIA SET CLIENT_NAME = C.CL_NAME  
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.CLIENT C ON M.CL_CODE = C.CL_CODE 
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		
	UPDATE dbo.IMP_AP_MEDIA SET DIVISION_NAME = D.DIV_NAME  
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.DIVISION D ON M.CL_CODE = D.CL_CODE AND M.DIV_CODE = D.DIV_CODE 
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	
	UPDATE dbo.IMP_AP_MEDIA SET PRODUCT_NAME = P.PRD_DESCRIPTION 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.PRODUCT P ON M.CL_CODE = P.CL_CODE AND M.DIV_CODE = P.DIV_CODE AND M.PRD_CODE = P.PRD_CODE 
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	
	UPDATE dbo.IMP_AP_MEDIA SET DAY_PART_ID = DP.DAY_PART_ID 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.DAY_PART DP ON M.DAYPART_CODE = DP.DAY_PART_CODE
	WHERE	(DP.DAY_PART_TYPE_ID = 1 AND M.MEDIA_TYPE = 'T')

	UPDATE dbo.IMP_AP_MEDIA SET DAY_PART_ID = DP.DAY_PART_ID 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.DAY_PART DP ON M.DAYPART_CODE = DP.DAY_PART_CODE
	WHERE	(DP.DAY_PART_TYPE_ID = 2 AND M.MEDIA_TYPE = 'R')

	-- Internet start
	UPDATE dbo.IMP_AP_MEDIA SET PREV_POSTED_NET_AMOUNT = DETAIL.SUMAMT 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN (
			SELECT SUM(COALESCE(NET_AMT,0) + COALESCE(DISCOUNT_AMT,0) + COALESCE(NETCHARGES,0) + COALESCE(VENDOR_TAX,0)) SUMAMT, ORDER_NBR, ORDER_LINE_NBR
			FROM dbo.AP_INTERNET
			WHERE	(MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
			GROUP BY ORDER_NBR, ORDER_LINE_NBR
		) DETAIL ON M.MEDIA_TYPE = 'I' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.ORDER_LINE_NBR = DETAIL.ORDER_LINE_NBR 

	UPDATE dbo.IMP_AP_MEDIA SET ORDER_NET_AMOUNT = DETAIL.SUMAMT
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		INNER JOIN (
			SELECT SUM(COALESCE(EXT_NET_AMT,0) + COALESCE(DISCOUNT_AMT,0) + COALESCE(NETCHARGE,0) + COALESCE(NON_RESALE_AMT,0)) SUMAMT, ORDER_NBR, LINE_NBR 
			FROM dbo.INTERNET_DETAIL 
			WHERE ACTIVE_REV = 1
			GROUP BY ORDER_NBR, LINE_NBR
		) DETAIL ON M.MEDIA_TYPE = 'I' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.ORDER_LINE_NBR = DETAIL.LINE_NBR
	-- Internet end
	
	-- Magazine start
	UPDATE dbo.IMP_AP_MEDIA SET PREV_POSTED_NET_AMOUNT = DETAIL.SUMAMT 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN (
			SELECT SUM(COALESCE(NET_AMT,0) + COALESCE(BLEED_NET_AMT,0) + COALESCE(POSITION_NET_AMT,0) + COALESCE(PREMIUM_NET_AMT,0) + COALESCE(COLOR_NET_AMT,0) +
				COALESCE(DISCOUNT_LN,0) + COALESCE(NETCHARGES,0) + COALESCE(VENDOR_TAX,0)) SUMAMT, ORDER_NBR, ORDER_LINE_NBR
			FROM dbo.AP_MAGAZINE 
			WHERE	(MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
			GROUP BY ORDER_NBR, ORDER_LINE_NBR
		) DETAIL ON M.MEDIA_TYPE = 'M' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.ORDER_LINE_NBR = DETAIL.ORDER_LINE_NBR 

	UPDATE dbo.IMP_AP_MEDIA SET ORDER_NET_AMOUNT = DETAIL.SUMAMT
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		INNER JOIN (
			SELECT SUM(COALESCE(EXT_NET_AMT,0) + COALESCE(DISCOUNT_AMT,0) + COALESCE(NETCHARGE,0) + COALESCE(VENDOR_TAX,0)) SUMAMT, ORDER_NBR, LINE_NBR 
			FROM dbo.V_MAG_DETAIL
			WHERE ACTIVE_REV = 1
			GROUP BY ORDER_NBR, LINE_NBR
		) DETAIL ON M.MEDIA_TYPE = 'M' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.ORDER_LINE_NBR = DETAIL.LINE_NBR
	-- Magazine end
	
	-- Newspaper start
	UPDATE dbo.IMP_AP_MEDIA SET PREV_POSTED_NET_AMOUNT = DETAIL.SUMAMT 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN (
			SELECT SUM(COALESCE(NET_AMT,0) + COALESCE(DISCOUNT_LN,0) + COALESCE(NETCHARGES,0) + COALESCE(VENDOR_TAX,0)) SUMAMT, ORDER_NBR, ORDER_LINE_NBR
			FROM dbo.AP_NEWSPAPER 
			WHERE	(MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
			GROUP BY ORDER_NBR, ORDER_LINE_NBR
		) DETAIL ON M.MEDIA_TYPE = 'N' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.ORDER_LINE_NBR = DETAIL.ORDER_LINE_NBR 

	UPDATE dbo.IMP_AP_MEDIA SET ORDER_NET_AMOUNT = DETAIL.SUMAMT
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		INNER JOIN (
			SELECT SUM(COALESCE(EXT_NET_AMT,0) + COALESCE(DISCOUNT_AMT,0) + COALESCE(NETCHARGE,0) + COALESCE(VENDOR_TAX,0)) SUMAMT, ORDER_NBR, LINE_NBR 
			FROM dbo.V_NEWS_DETAIL 
			WHERE ACTIVE_REV = 1
			GROUP BY ORDER_NBR, LINE_NBR
		) DETAIL ON M.MEDIA_TYPE = 'N' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.ORDER_LINE_NBR = DETAIL.LINE_NBR
	-- Newspaper end
	
	-- Outdoor start
	UPDATE dbo.IMP_AP_MEDIA SET PREV_POSTED_NET_AMOUNT = DETAIL.SUMAMT 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN (
			SELECT SUM(COALESCE(NET_AMT,0) + COALESCE(DISCOUNT_AMT,0) + COALESCE(NETCHARGES,0) + COALESCE(VENDOR_TAX,0)) SUMAMT, ORDER_NBR, ORDER_LINE_NBR
			FROM dbo.AP_OUTDOOR 
			WHERE	(MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
			GROUP BY ORDER_NBR, ORDER_LINE_NBR
		) DETAIL ON M.MEDIA_TYPE = 'O' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.ORDER_LINE_NBR = DETAIL.ORDER_LINE_NBR 

	UPDATE dbo.IMP_AP_MEDIA SET ORDER_NET_AMOUNT = DETAIL.SUMAMT
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		INNER JOIN (
			SELECT SUM(COALESCE(EXT_NET_AMT,0) + COALESCE(DISCOUNT_AMT,0) + COALESCE(NETCHARGE,0) + COALESCE(NON_RESALE_AMT,0)) SUMAMT, ORDER_NBR, LINE_NBR 
			FROM dbo.OUTDOOR_DETAIL 
			WHERE ACTIVE_REV = 1
			GROUP BY ORDER_NBR, LINE_NBR
		) DETAIL ON M.MEDIA_TYPE = 'O' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.ORDER_LINE_NBR = DETAIL.LINE_NBR
	-- Outdoor end
	
	-- Radio start
	-- legacy prev posted
	UPDATE dbo.IMP_AP_MEDIA SET PREV_POSTED_NET_AMOUNT = DETAIL.SUMAMT 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN (
			SELECT SUM(COALESCE(EXT_NET_AMT,0) + COALESCE(DISC_AMT,0) + COALESCE(NETCHARGES,0) + COALESCE(VENDOR_TAX,0)) SUMAMT, ORDER_NBR, BRDCAST_MONTH, BRDCAST_YEAR 
			FROM dbo.AP_RADIO
			WHERE	(MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
			AND BRDCAST_MONTH IS NOT NULL
			AND BRDCAST_YEAR IS NOT NULL
			GROUP BY ORDER_NBR, BRDCAST_MONTH, BRDCAST_YEAR 
		) DETAIL ON M.MEDIA_TYPE = 'R' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.[MONTH] = DETAIL.BRDCAST_MONTH AND M.[YEAR] = DETAIL.BRDCAST_YEAR 
	
	UPDATE dbo.IMP_AP_MEDIA SET PREV_POSTED_NET_AMOUNT = DETAIL.SUMAMT 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN (
			SELECT SUM(COALESCE(EXT_NET_AMT,0) + COALESCE(DISC_AMT,0) + COALESCE(NETCHARGES,0) + COALESCE(VENDOR_TAX,0)) SUMAMT, ORDER_NBR, ORDER_LINE_NBR
			FROM dbo.AP_RADIO
			WHERE	(MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
			GROUP BY ORDER_NBR, ORDER_LINE_NBR
		) DETAIL ON M.MEDIA_TYPE = 'R' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.ORDER_LINE_NBR = DETAIL.ORDER_LINE_NBR 

	-- legacy order amount
	UPDATE dbo.IMP_AP_MEDIA SET ORDER_NET_AMOUNT = CASE M.[MONTH] 
														WHEN 'JAN' THEN DETAIL.JANAMT
														WHEN 'FEB' THEN DETAIL.FEBAMT
														WHEN 'MAR' THEN DETAIL.MARAMT
														WHEN 'APR' THEN DETAIL.APRAMT 
														WHEN 'MAY' THEN DETAIL.MAYAMT
														WHEN 'JUN' THEN DETAIL.JUNAMT
														WHEN 'JUL' THEN DETAIL.JULAMT
														WHEN 'AUG' THEN DETAIL.AUGAMT
														WHEN 'SEP' THEN DETAIL.SEPAMT
														WHEN 'OCT' THEN DETAIL.OCTAMT
														WHEN 'NOV' THEN DETAIL.NOVAMT
														WHEN 'DEC' THEN DETAIL.DECAMT END
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN (
			SELECT	SUM(COALESCE(JAN_LINE_NET,0)) JANAMT,
					SUM(COALESCE(FEB_LINE_NET,0)) FEBAMT,
					SUM(COALESCE(MAR_LINE_NET,0)) MARAMT,
					SUM(COALESCE(APR_LINE_NET,0)) APRAMT,
					SUM(COALESCE(MAY_LINE_NET,0)) MAYAMT,
					SUM(COALESCE(JUN_LINE_NET,0)) JUNAMT,
					SUM(COALESCE(JUL_LINE_NET,0)) JULAMT,
					SUM(COALESCE(AUG_LINE_NET,0)) AUGAMT,
					SUM(COALESCE(SEP_LINE_NET,0)) SEPAMT,
					SUM(COALESCE(OCT_LINE_NET,0)) OCTAMT,
					SUM(COALESCE(NOV_LINE_NET,0)) NOVAMT,
					SUM(COALESCE(DEC_LINE_NET,0)) DECAMT, ORDER_NBR, BRDCAST_YEAR 
			FROM dbo.RADIO_DETAIL1
			GROUP BY ORDER_NBR, BRDCAST_YEAR
		) DETAIL ON M.MEDIA_TYPE = 'R' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.[YEAR] = DETAIL.BRDCAST_YEAR 
	
	UPDATE dbo.IMP_AP_MEDIA SET ORDER_NET_AMOUNT = DETAIL.SUMAMT
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		INNER JOIN (
			SELECT SUM(COALESCE(EXT_NET_AMT,0) + COALESCE(DISCOUNT_AMT,0) + COALESCE(NETCHARGE,0) + COALESCE(NON_RESALE_AMT,0)) SUMAMT, ORDER_NBR, LINE_NBR 
			FROM dbo.RADIO_DETAIL 
			GROUP BY ORDER_NBR, LINE_NBR
		) DETAIL ON M.MEDIA_TYPE = 'R' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.ORDER_LINE_NBR = DETAIL.LINE_NBR
	-- Radio end
	
	-- TV start
	-- legacy prev posted
	UPDATE dbo.IMP_AP_MEDIA SET PREV_POSTED_NET_AMOUNT = DETAIL.SUMAMT 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN (
			SELECT SUM(COALESCE(EXT_NET_AMT,0) + COALESCE(DISC_AMT,0) + COALESCE(NETCHARGES,0) + COALESCE(VENDOR_TAX,0)) SUMAMT, ORDER_NBR, BRDCAST_MONTH, BRDCAST_YEAR 
			FROM dbo.AP_TV
			WHERE	(MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
			AND BRDCAST_MONTH IS NOT NULL
			AND BRDCAST_YEAR IS NOT NULL
			GROUP BY ORDER_NBR, BRDCAST_MONTH, BRDCAST_YEAR 
		) DETAIL ON M.MEDIA_TYPE = 'T' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.[MONTH] = DETAIL.BRDCAST_MONTH AND M.[YEAR] = DETAIL.BRDCAST_YEAR 
	
	UPDATE dbo.IMP_AP_MEDIA SET PREV_POSTED_NET_AMOUNT = DETAIL.SUMAMT 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN (
			SELECT SUM(COALESCE(EXT_NET_AMT,0) + COALESCE(DISC_AMT,0) + COALESCE(NETCHARGES,0) + COALESCE(VENDOR_TAX,0)) SUMAMT, ORDER_NBR, ORDER_LINE_NBR
			FROM dbo.AP_TV
			WHERE	(MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
			GROUP BY ORDER_NBR, ORDER_LINE_NBR
		) DETAIL ON M.MEDIA_TYPE = 'T' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.ORDER_LINE_NBR = DETAIL.ORDER_LINE_NBR 

	-- legacy order amount
	UPDATE dbo.IMP_AP_MEDIA SET ORDER_NET_AMOUNT = CASE M.[MONTH] 
														WHEN 'JAN' THEN DETAIL.JANAMT
														WHEN 'FEB' THEN DETAIL.FEBAMT
														WHEN 'MAR' THEN DETAIL.MARAMT
														WHEN 'APR' THEN DETAIL.APRAMT 
														WHEN 'MAY' THEN DETAIL.MAYAMT
														WHEN 'JUN' THEN DETAIL.JUNAMT
														WHEN 'JUL' THEN DETAIL.JULAMT
														WHEN 'AUG' THEN DETAIL.AUGAMT
														WHEN 'SEP' THEN DETAIL.SEPAMT
														WHEN 'OCT' THEN DETAIL.OCTAMT
														WHEN 'NOV' THEN DETAIL.NOVAMT
														WHEN 'DEC' THEN DETAIL.DECAMT END
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN (
			SELECT	SUM(COALESCE(JAN_LINE_NET,0)) JANAMT,
					SUM(COALESCE(FEB_LINE_NET,0)) FEBAMT,
					SUM(COALESCE(MAR_LINE_NET,0)) MARAMT,
					SUM(COALESCE(APR_LINE_NET,0)) APRAMT,
					SUM(COALESCE(MAY_LINE_NET,0)) MAYAMT,
					SUM(COALESCE(JUN_LINE_NET,0)) JUNAMT,
					SUM(COALESCE(JUL_LINE_NET,0)) JULAMT,
					SUM(COALESCE(AUG_LINE_NET,0)) AUGAMT,
					SUM(COALESCE(SEP_LINE_NET,0)) SEPAMT,
					SUM(COALESCE(OCT_LINE_NET,0)) OCTAMT,
					SUM(COALESCE(NOV_LINE_NET,0)) NOVAMT,
					SUM(COALESCE(DEC_LINE_NET,0)) DECAMT, ORDER_NBR, BRDCAST_YEAR 
			FROM dbo.TV_DETAIL1
			GROUP BY ORDER_NBR, BRDCAST_YEAR
		) DETAIL ON M.MEDIA_TYPE = 'T' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.[YEAR] = DETAIL.BRDCAST_YEAR 
	
	UPDATE dbo.IMP_AP_MEDIA SET ORDER_NET_AMOUNT = DETAIL.SUMAMT
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		INNER JOIN (
			SELECT SUM(COALESCE(EXT_NET_AMT,0) + COALESCE(DISCOUNT_AMT,0) + COALESCE(NETCHARGE,0) + COALESCE(NON_RESALE_AMT,0)) SUMAMT, ORDER_NBR, LINE_NBR 
			FROM dbo.TV_DETAIL 
			GROUP BY ORDER_NBR, LINE_NBR
		) DETAIL ON M.MEDIA_TYPE = 'T' AND M.ORDER_NUMBER = DETAIL.ORDER_NBR AND M.ORDER_LINE_NBR = DETAIL.LINE_NBR
	-- TV end
	
	UPDATE dbo.IMP_AP_MEDIA SET MEDIA_MARKUP_PCT = CASE M.MEDIA_TYPE 
													WHEN 'I' THEN COALESCE(PMO.MARKUP, P.PRD_MISC_COMM)
													WHEN 'M' THEN COALESCE(PMO.MARKUP, P.PRD_MAG_COMM)
													WHEN 'N' THEN COALESCE(PMO.MARKUP, P.PRD_NEWS_COMM) 
													WHEN 'O' THEN COALESCE(PMO.MARKUP, P.PRD_OTDR_COMM)
													WHEN 'R' THEN COALESCE(PMO.MARKUP, P.PRD_RADIO_COMM)
													WHEN 'T' THEN COALESCE(PMO.MARKUP, P.PRD_TV_COMM)
												   END
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.PRODUCT P ON M.CL_CODE = P.CL_CODE AND M.DIV_CODE = P.DIV_CODE AND M.PRD_CODE = P.PRD_CODE 
		LEFT OUTER JOIN dbo.PRODUCT_MEDIA_OVERRIDES PMO ON M.CL_CODE = PMO.CL_CODE AND M.DIV_CODE = PMO.DIV_CODE AND M.PRD_CODE = PMO.PRD_CODE AND M.MEDIA_TYPE = PMO.MEDIA_TYPE AND M.SALES_CLASS = PMO.SC_CODE
	WHERE	M.MEDIA_MARKUP_PCT IS NULL
	
	UPDATE dbo.IMP_AP_MEDIA SET ORDER_ID = X.IMPORT_ORDER_NBR, ORDER_LINE_ID = X.IMPORT_LINE_NBR, SALES_CLASS = O.MEDIA_TYPE 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.PRINT_IMPORT_XREF X ON M.ORDER_NUMBER = X.ORDER_NBR AND M.ORDER_LINE_NBR = X.LINE_NBR AND M.MEDIA_TYPE = X.MEDIA_TYPE AND H.SOURCE_CODE = X.IMPORTED_FROM 
		INNER JOIN (SELECT MEDIA_TYPE, ORDER_NBR FROM dbo.INTERNET_HEADER 
					UNION
					SELECT MEDIA_TYPE, ORDER_NBR FROM dbo.V_MAG_HEADER  
					UNION
					SELECT MEDIA_TYPE, ORDER_NBR FROM dbo.V_NEWS_HEADER 
					UNION
					SELECT MEDIA_TYPE, ORDER_NBR FROM dbo.OUTDOOR_HEADER) O ON M.ORDER_NUMBER = O.ORDER_NBR 
	WHERE	M.ORDER_ID IS NULL
	
	UPDATE dbo.IMP_AP_MEDIA SET ORDER_ID = X.IMPORT_ORDER_NBR, ORDER_LINE_ID = X.IMPORT_LINE_NBR, SALES_CLASS = O.MEDIA_TYPE 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.BRD_IMPORT_XREF X ON M.ORDER_NUMBER = X.ORDER_NBR AND M.ORDER_LINE_NBR = X.LINE_NBR AND M.MEDIA_TYPE = 'R' AND X.MEDIA_TYPE IN ('R','RA') AND H.SOURCE_CODE = X.IMPORTED_FROM 
		INNER JOIN (SELECT MEDIA_TYPE, ORDER_NBR, MAX(REV_NBR) AS REV_NBR FROM dbo.RADIO_HEADER
					GROUP BY MEDIA_TYPE, ORDER_NBR
					UNION
					SELECT MEDIA_TYPE, ORDER_NBR, 1 FROM dbo.RADIO_HDR) O ON M.ORDER_NUMBER = O.ORDER_NBR 
	WHERE	M.ORDER_ID IS NULL
	
	UPDATE dbo.IMP_AP_MEDIA SET ORDER_ID = X.IMPORT_ORDER_NBR, ORDER_LINE_ID = X.IMPORT_LINE_NBR, SALES_CLASS = O.MEDIA_TYPE 
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.BRD_IMPORT_XREF X ON M.ORDER_NUMBER = X.ORDER_NBR AND M.ORDER_LINE_NBR = X.LINE_NBR AND M.MEDIA_TYPE = 'T' AND X.MEDIA_TYPE IN ('T','TV','CA') AND H.SOURCE_CODE = X.IMPORTED_FROM 
		INNER JOIN (SELECT MEDIA_TYPE, ORDER_NBR, MAX(REV_NBR) AS REV_NBR FROM TV_HEADER
					GROUP BY MEDIA_TYPE, ORDER_NBR
					UNION
					SELECT MEDIA_TYPE, ORDER_NBR, 1 FROM TV_HDR) O ON M.ORDER_NUMBER = O.ORDER_NBR 
	WHERE	M.ORDER_ID IS NULL
	
	UPDATE dbo.IMP_AP_MEDIA SET ORDER_NET_AMOUNT = 0, MEDIA_NET = 0, MEDIA_VN_TAX = 0, MEDIA_NET_CHARGE = 0, MEDIA_MARKUP_PCT = 0, MEDIA_ADD_AMT = 0, MEDIA_GROSS_RATE = 0, MEDIA_NET_RATE = 0
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.TV_DETAIL td ON M.ORDER_NUMBER = td.ORDER_NBR AND M.ORDER_LINE_NBR = td.LINE_NBR AND td.ACTIVE_REV = 1 AND (td.LINE_CANCELLED IS NULL OR td.LINE_CANCELLED = 0) AND td.BILL_TYPE_FLAG = 1
		
	UPDATE dbo.IMP_AP_MEDIA SET ORDER_NET_AMOUNT = 0, MEDIA_NET = 0, MEDIA_VN_TAX = 0, MEDIA_NET_CHARGE = 0, MEDIA_MARKUP_PCT = 0, MEDIA_ADD_AMT = 0, MEDIA_GROSS_RATE = 0, MEDIA_NET_RATE = 0
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		INNER JOIN dbo.RADIO_DETAIL rd ON M.ORDER_NUMBER = rd.ORDER_NBR AND M.ORDER_LINE_NBR = rd.LINE_NBR AND rd.ACTIVE_REV = 1 AND (rd.LINE_CANCELLED IS NULL OR rd.LINE_CANCELLED = 0) AND rd.BILL_TYPE_FLAG = 1

	UPDATE dbo.IMP_AP_MEDIA SET ORDER_NET_VARIANCE = ORDER_NET_AMOUNT - PREV_POSTED_NET_AMOUNT
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 


	SELECT @CommissionOnlyRowCount = COUNT(1)
	FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			INNER JOIN dbo.TV_DETAIL td ON M.ORDER_NUMBER = td.ORDER_NBR AND M.ORDER_LINE_NBR = td.LINE_NBR AND td.ACTIVE_REV = 1 AND (td.LINE_CANCELLED IS NULL OR td.LINE_CANCELLED = 0) AND td.BILL_TYPE_FLAG = 1
	WHERE td.BILL_TYPE_FLAG = 1

	SELECT @CommissionOnlyRowCount = @CommissionOnlyRowCount + COUNT(1)
	FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			INNER JOIN dbo.RADIO_DETAIL td ON M.ORDER_NUMBER = td.ORDER_NBR AND M.ORDER_LINE_NBR = td.LINE_NBR AND td.ACTIVE_REV = 1 AND (td.LINE_CANCELLED IS NULL OR td.LINE_CANCELLED = 0) AND td.BILL_TYPE_FLAG = 1
	WHERE td.BILL_TYPE_FLAG = 1

	IF @CommissionOnlyRowCount > 0 AND @CommissionOnlyRowCount = (SELECT COUNT(1) FROM dbo.IMP_AP_MEDIA M INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name) AND
		(SELECT COUNT(1) FROM dbo.IMP_AP_JOB J INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name) = 0 AND
		(SELECT COUNT(1) FROM dbo.IMP_AP_GL J INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name) = 0
	BEGIN

		UPDATE dbo.IMP_AP_HEADER SET INV_TOTAL_NET = 0
		FROM dbo.IMP_AP_HEADER
		WHERE BATCH_NAME = @batch_name

	END
	
	IF @use_ap_account_from_office = 1
	BEGIN
		UPDATE dbo.IMP_AP_HEADER SET GLACODE = MO.GLACODE_AP, OFFICE_CODE = MO.OFFICE_CODE
		FROM dbo.IMP_AP_HEADER H 
			INNER JOIN (SELECT MIN(O.GLACODE_AP) AS GLACODE_AP, MIN(M.ID) AS ID, M.IMPORT_ID, MIN(O.OFFICE_CODE) AS OFFICE_CODE
						FROM dbo.IMP_AP_MEDIA M
							INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
							INNER JOIN dbo.PRODUCT P ON M.CL_CODE = P.CL_CODE AND M.DIV_CODE = P.DIV_CODE AND M.PRD_CODE = P.PRD_CODE 
							INNER JOIN dbo.OFFICE O ON P.OFFICE_CODE = O.OFFICE_CODE 
						WHERE	M.ORDER_NUMBER IS NOT NULL
						AND		O.GLACODE_AP IS NOT NULL
						GROUP BY M.IMPORT_ID
						) MO ON MO.IMPORT_ID = H.IMPORT_ID 
		WHERE	BATCH_NAME = @batch_name
		AND		NULLIF(H.GLACODE,'') IS NULL
		
		UPDATE dbo.IMP_AP_HEADER SET GLACODE = V.GLACODE_AP, OFFICE_CODE = X.GLOXOFFICE
		FROM dbo.IMP_AP_HEADER H
			LEFT OUTER JOIN dbo.IMP_AP_MEDIA M ON H.IMPORT_ID = M.IMPORT_ID
			INNER JOIN dbo.VENDOR V ON H.VN_CODE = V.VN_CODE 
			INNER JOIN dbo.GLACCOUNT G ON G.GLACODE = V.GLACODE_AP 
			LEFT OUTER JOIN dbo.GLOXREF X ON G.GLAOFFICE = X.GLOXGLOFFICE
		WHERE	BATCH_NAME = @batch_name
		AND		NULLIF(H.GLACODE,'') IS NULL
		AND		(H.OFFICE_CODE = X.GLOXOFFICE OR H.OFFICE_CODE IS NULL)
		AND		M.IMPORT_ID IS NULL
	END
	
	IF @use_ap_account_from_office = 0
	BEGIN
		UPDATE dbo.IMP_AP_HEADER SET GLACODE = V.GLACODE_AP, OFFICE_CODE = X.GLOXOFFICE
		FROM dbo.IMP_AP_HEADER H
			INNER JOIN dbo.VENDOR V ON H.VN_CODE = V.VN_CODE 
			INNER JOIN dbo.GLACCOUNT G ON G.GLACODE = V.GLACODE_AP 
			LEFT OUTER JOIN dbo.GLOXREF X ON G.GLAOFFICE = X.GLOXGLOFFICE
		WHERE	BATCH_NAME = @batch_name
		AND		NULLIF(H.GLACODE,'') IS NULL
		AND		NULLIF(H.OFFICE_CODE,'') IS NULL
		AND		(H.OFFICE_CODE = X.GLOXOFFICE OR H.OFFICE_CODE IS NULL)

		UPDATE dbo.IMP_AP_HEADER SET GLACODE = IMPORT_GLA.GLACODE 
		FROM dbo.IMP_AP_HEADER H
			INNER JOIN (
						SELECT VG.IMPORT_ID, G.GLACODE
						FROM dbo.GLACCOUNT G
						INNER JOIN (
									SELECT V.GLACODE_AP, OFFICE_CODE = X.GLOXOFFICE, X.GLOXGLOFFICE, G.GLABASE, G.GLAOFFICE, G.GLADEPT, G.GLAOTHER, H.IMPORT_ID 
									FROM dbo.IMP_AP_HEADER H
										INNER JOIN dbo.VENDOR V ON H.VN_CODE = V.VN_CODE 
										LEFT OUTER JOIN dbo.GLOXREF X ON X.GLOXOFFICE = H.OFFICE_CODE 
										INNER JOIN dbo.GLACCOUNT G ON G.GLACODE = V.GLACODE_AP 
									WHERE	BATCH_NAME = @batch_name
									AND		NULLIF(H.GLACODE,'') IS NULL
									AND		NULLIF(H.OFFICE_CODE,'') IS NOT NULL
									) VG ON VG.GLOXGLOFFICE = G.GLAOFFICE 
											AND (VG.GLABASE = G.GLABASE OR VG.GLABASE IS NULL)
											AND (VG.GLADEPT = G.GLADEPT OR VG.GLADEPT IS NULL)
											AND (VG.GLAOTHER = G.GLAOTHER OR VG.GLAOTHER IS NULL)
						) IMPORT_GLA ON IMPORT_GLA.IMPORT_ID = H.IMPORT_ID
		
	END

------------------------
-- Validate IMP_AP_HEADER
------------------------
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
	SELECT IMPORT_ID, 'VendorCode', 'Vendor Code is required.'
	FROM dbo.IMP_AP_HEADER
	WHERE	BATCH_NAME = @batch_name 
	AND		NULLIF(VN_CODE,'') IS NULL

	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
	SELECT IMPORT_ID, 'VendorCode', 'Please enter a valid vendor code.'
	FROM dbo.IMP_AP_HEADER
	WHERE	BATCH_NAME = @batch_name 
	AND		VN_CODE NOT IN (SELECT VN_CODE from dbo.VENDOR WHERE VN_ACTIVE_FLAG = 1)
	AND		NULLIF(VN_CODE,'') IS NOT NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT IMPORT_ID, 'InvoiceNumber', 'Invoice Number is required.'
	FROM	dbo.IMP_AP_HEADER
	WHERE	BATCH_NAME = @batch_name
	AND		(INV_NUMBER IS NULL OR INV_NUMBER = '')
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT IMPORT_ID, 'InvoiceNumber', 'Invoice Number exists for Vendor.'
	FROM dbo.IMP_AP_HEADER I
		INNER JOIN dbo.AP_HEADER H ON I.VN_CODE = H.VN_FRL_EMP_CODE AND UPPER(I.INV_NUMBER) = UPPER(H.AP_INV_VCHR)
	WHERE	I.BATCH_NAME = @batch_name

	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
	SELECT  
		DISTINCT I.IMPORT_ID, 'InvoiceNumber', 'Invoice Number exists for this Vendor in this batch.'
	FROM
		dbo.IMP_AP_HEADER I
	INNER JOIN
		dbo.IMP_AP_HEADER H On I.VN_CODE = I.VN_CODE AND UPPER(I.INV_NUMBER) = UPPER(H.INV_NUMBER)
	WHERE
		I.BATCH_NAME = @batch_name AND
		H.BATCH_NAME = @batch_name AND
		I.INV_NUMBER <> H.INV_NUMBER
		
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
	SELECT IMPORT_ID, 'InvoiceDate', 'Invoice Date is required.'
	FROM dbo.IMP_AP_HEADER
	WHERE	BATCH_NAME = @batch_name
	AND		INV_DATE IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
	SELECT IMPORT_ID, 'InvoiceTotalNet', 'Invoice Total Net is required.'
	FROM dbo.IMP_AP_HEADER
	WHERE	BATCH_NAME = @batch_name
	AND		INV_TOTAL_NET IS NULL
	
	IF (@inter_company = 1 OR @ap_office = 1)
	BEGIN
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
		SELECT IMPORT_ID, 'OfficeCode', 'Office Code is required.'
		FROM dbo.IMP_AP_HEADER
		WHERE	BATCH_NAME = @batch_name 
		AND		NULLIF(OFFICE_CODE,'') IS NULL
	END

	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
	SELECT IMPORT_ID, 'OfficeCode', 'Office Code is invalid.'
	FROM dbo.IMP_AP_HEADER
	WHERE	BATCH_NAME = @batch_name
	AND		NULLIF(OFFICE_CODE,'') IS NOT NULL
	AND		(
				(@HasOfficeLimits = 0 AND OFFICE_CODE NOT IN (SELECT OFFICE_CODE FROM dbo.OFFICE))
			OR
				(@HasOfficeLimits = 1 AND OFFICE_CODE NOT IN (SELECT OFFICE_CODE FROM [advtf_employee_office_limits](@EmployeeCode)))
			)

	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
	SELECT IMPORT_ID, 'GLAccount', 'GL Account is required.'
	FROM dbo.IMP_AP_HEADER
	WHERE	BATCH_NAME = @batch_name 
	AND		NULLIF(GLACODE,'') IS NULL

	IF (@inter_company = 1 OR @ap_office = 1)
	BEGIN
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
		SELECT IMPORT_ID, 'GLAccount', 'GL Account is invalid.'
		FROM dbo.IMP_AP_HEADER H
			INNER JOIN dbo.OFFICE O ON H.OFFICE_CODE = O.OFFICE_CODE 
			INNER JOIN dbo.GLOXREF X ON X.GLOXOFFICE = O.OFFICE_CODE 
			INNER JOIN dbo.GLACCOUNT G ON H.GLACODE = G.GLACODE 
		WHERE	BATCH_NAME = @batch_name
		AND		G.GLAOFFICE <> X.GLOXGLOFFICE 
		AND		NULLIF(H.GLACODE,'') IS NOT NULL
	END
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
	SELECT IMPORT_ID, 'GLAccount', 'Please enter a valid general ledger account code.'
	FROM dbo.IMP_AP_HEADER
	WHERE	BATCH_NAME = @batch_name 
	AND		GLACODE NOT IN (SELECT GLACODE FROM dbo.GLACCOUNT WHERE GLAACTIVE = 'A')
	AND		NULLIF(GLACODE,'') IS NOT NULL
	
	IF @IsBroadcast4a = 1 BEGIN
	
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
		SELECT IMPORT_ID, 'StateTaxGLAccount', 'State Tax GL Account is required.'
		FROM dbo.IMP_AP_HEADER
		WHERE	BATCH_NAME = @batch_name 
		AND		NULLIF(STATE_TAX_GLACCOUNT,'') IS NULL
		AND		COALESCE(STATE_TAX_AMOUNT, 0) <> 0
		
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
		SELECT IMPORT_ID, 'CityTaxGLAccount', 'City Tax GL Account is required.'
		FROM dbo.IMP_AP_HEADER
		WHERE	BATCH_NAME = @batch_name 
		AND		NULLIF(CITY_TAX_GLACCOUNT,'') IS NULL
		AND		COALESCE(CITY_TAX_AMOUNT, 0) <> 0
				
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
		SELECT IMPORT_ID, 'StateTaxGLAccount', 'Please enter a valid general ledger account code.'
		FROM dbo.IMP_AP_HEADER
		WHERE	BATCH_NAME = @batch_name 
		AND		STATE_TAX_GLACCOUNT NOT IN (SELECT GLACODE FROM dbo.GLACCOUNT WHERE GLAACTIVE = 'A')
		AND		NULLIF(STATE_TAX_GLACCOUNT,'') IS NOT NULL
	
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
		SELECT IMPORT_ID, 'CityTaxGLAccount', 'Please enter a valid general ledger account code.'
		FROM dbo.IMP_AP_HEADER
		WHERE	BATCH_NAME = @batch_name 
		AND		CITY_TAX_GLACCOUNT NOT IN (SELECT GLACODE FROM dbo.GLACCOUNT WHERE GLAACTIVE = 'A')
		AND		NULLIF(CITY_TAX_GLACCOUNT,'') IS NOT NULL
	
	END
------------------------
-- VALIDATE IMP_AP_GL
------------------------
	IF @ap_office = 1
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_GL_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT G.IMPORT_ID, G.ID, 'GLOfficeCode', 'Office does not match header.'
		FROM dbo.IMP_AP_GL G
			INNER JOIN dbo.IMP_AP_HEADER H ON G.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		WHERE	G.OFFICE_CODE_DTL <> H.OFFICE_CODE 
		
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_GL_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT G.IMPORT_ID, G.ID, 'GLNetAmount', 'GL Net Amount is required.'
	FROM dbo.IMP_AP_GL G
		INNER JOIN dbo.IMP_AP_HEADER H ON G.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	GL_NET IS NULL
	
	IF (@inter_company = 1)
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_GL_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT G.IMPORT_ID, G.ID, 'GLOfficeCode', 'GL Office Code is required.'
		FROM dbo.IMP_AP_GL G
			INNER JOIN dbo.IMP_AP_HEADER H ON G.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		WHERE	(OFFICE_CODE_DTL NOT IN (SELECT OFFICE_CODE FROM dbo.OFFICE)
				 OR OFFICE_CODE_DTL IS NULL)

	IF @AllowCostOfSaleEntry = 1 
		INSERT @ValidGLACodes 
		SELECT GLACODE, GLAOFFICE 
		FROM dbo.GLACCOUNT 
		WHERE GLAACTIVE = 'A'
		AND GLACODE NOT IN (
				SELECT PGLACODE_WIP AS GLACode from dbo.OFFICE UNION
				SELECT MGLACODE_WIP from dbo.OFFICE UNION
				SELECT GLACODE_AR from dbo.OFFICE UNION
				SELECT GLACODE_AP from dbo.OFFICE UNION
				SELECT GLACODE_AP_DISC from dbo.OFFICE UNION
				SELECT PGLACODE_DEF_SALES from dbo.OFFICE UNION
				SELECT PGLACODE_ACC_COS from dbo.OFFICE UNION
				SELECT PGLACODE_ACC_AP from dbo.OFFICE UNION
				SELECT PGLACODE_DEF_COS from dbo.OFFICE UNION
				SELECT MGLACODE_ACC_AP from dbo.OFFICE UNION
				SELECT MGLACODE_ACC_COS from dbo.OFFICE UNION
				SELECT MGLACODE_DEF_COS from dbo.OFFICE UNION
				SELECT MGLACODE_DEF_SALES from dbo.OFFICE
				)
	ELSE
		INSERT @ValidGLACodes 
		SELECT GLACODE, GLAOFFICE 
		FROM dbo.GLACCOUNT 
		WHERE GLAACTIVE = 'A'
		AND GLATYPE <> '8'
		AND GLATYPE <> '13'
		AND GLACODE NOT IN (
				SELECT PGLACODE_WIP AS GLACode from dbo.OFFICE UNION
				SELECT MGLACODE_WIP from dbo.OFFICE UNION
				SELECT GLACODE_AR from dbo.OFFICE UNION
				SELECT GLACODE_AP from dbo.OFFICE UNION
				SELECT GLACODE_AP_DISC from dbo.OFFICE UNION
				SELECT PGLACODE_DEF_SALES from dbo.OFFICE UNION
				SELECT PGLACODE_ACC_COS from dbo.OFFICE UNION
				SELECT PGLACODE_ACC_AP from dbo.OFFICE UNION
				SELECT PGLACODE_DEF_COS from dbo.OFFICE UNION
				SELECT MGLACODE_ACC_AP from dbo.OFFICE UNION
				SELECT MGLACODE_ACC_COS from dbo.OFFICE UNION
				SELECT MGLACODE_DEF_COS from dbo.OFFICE UNION
				SELECT MGLACODE_DEF_SALES from dbo.OFFICE
				)
	
	IF @ap_office = 1
	
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_GL_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT G.IMPORT_ID, G.ID, 'GLACode', 'GLA Code is required.'
		FROM dbo.IMP_AP_GL G
			INNER JOIN dbo.IMP_AP_HEADER H ON G.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			LEFT OUTER JOIN dbo.GLOXREF X ON H.OFFICE_CODE = X.GLOXOFFICE 
			LEFT OUTER JOIN (
							 SELECT GLACODE, GLAOFFICE
							 FROM @ValidGLACodes 
							 ) V ON G.GL_ACCOUNT = V.GLACODE AND (X.GLOXGLOFFICE IS NULL OR X.GLOXGLOFFICE = V.GLAOFFICE)
		WHERE V.GLACODE IS NULL
		AND (
				@IsCustomNonClientOnlyTemplate = 0
			OR
				(
					@IsCustomNonClientOnlyTemplate = 1 
				AND 
					G.GL_ACCOUNT NOT IN (
										SELECT MGLACODE_ACC_AP
										FROM dbo.OFFICE
										WHERE OFFICE_CODE = G.OFFICE_CODE_DTL
										)
				)
			)

	ELSE IF @inter_company = 1
	
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_GL_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT G.IMPORT_ID, G.ID, 'GLACode', 'GLA Code is required.'
		FROM dbo.IMP_AP_GL G
			INNER JOIN dbo.IMP_AP_HEADER H ON G.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			LEFT OUTER JOIN dbo.GLOXREF X ON G.OFFICE_CODE_DTL = X.GLOXOFFICE 
			LEFT OUTER JOIN (
							 SELECT GLACODE, GLAOFFICE
							 FROM @ValidGLACodes 
							 ) V ON G.GL_ACCOUNT = V.GLACODE AND (X.GLOXGLOFFICE IS NULL OR X.GLOXGLOFFICE = V.GLAOFFICE)
		WHERE V.GLACODE IS NULL
		AND (
				@IsCustomNonClientOnlyTemplate = 0
			OR
				(
					@IsCustomNonClientOnlyTemplate = 1 
				AND 
					G.GL_ACCOUNT NOT IN (
										SELECT MGLACODE_ACC_AP
										FROM dbo.OFFICE
										WHERE OFFICE_CODE = G.OFFICE_CODE_DTL
										)
				)
			)
	
	ELSE
		
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_GL_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT G.IMPORT_ID, G.ID, 'GLACode', 'GLA Code is required.'
		FROM dbo.IMP_AP_GL G
			INNER JOIN dbo.IMP_AP_HEADER H ON G.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			LEFT OUTER JOIN (
							 SELECT GLACODE, GLAOFFICE
							 FROM @ValidGLACodes 
							 ) V ON G.GL_ACCOUNT = V.GLACODE
		WHERE V.GLACODE IS NULL
		AND (
				@IsCustomNonClientOnlyTemplate = 0
			OR
				(
					@IsCustomNonClientOnlyTemplate = 1 
				AND 
					G.GL_ACCOUNT NOT IN (
										SELECT MGLACODE_ACC_AP
										FROM dbo.OFFICE
										WHERE OFFICE_CODE = G.OFFICE_CODE_DTL
										)
				)
			)

------------------------
-- VALIDATE IMP_AP_JOB
------------------------
	IF @ap_office = 1
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobOfficeCode', 'Office does not match header.'
		FROM dbo.IMP_AP_JOB J
			INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		WHERE	J.OFFICE_CODE_DTL <> H.OFFICE_CODE 
	
	INSERT @PurchaseOrders 
	EXEC [advsp_ap_production_purchase_orders] @user_code = @user_code
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'PONumber', 'Invalid PO Number.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN (SELECT Number, VendorCode FROM @PurchaseOrders) PO ON J.PO_NBR = PO.Number AND H.VN_CODE = PO.VendorCode 
	WHERE	PO_NBR IS NOT NULL
	AND		PO.Number IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'POLine', 'PO Line is required.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	PO_NBR IS NOT NULL
	AND		PO_LINE IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'POLine', 'Invalid PO Line.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN dbo.PURCHASE_ORDER_DET PD ON PD.PO_NUMBER = J.PO_NBR AND PD.LINE_NUMBER = J.PO_LINE 
	WHERE	PO_NBR IS NOT NULL
	AND		PO_LINE IS NOT NULL
	AND		PD.PO_NUMBER IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobNumber', 'Job Number is required.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	(JOB_NBR NOT IN (SELECT DISTINCT A.JOB_NUMBER
							 FROM dbo.JOB_LOG A
									INNER JOIN dbo.JOB_COMPONENT B ON A.JOB_NUMBER = B.JOB_NUMBER 
							 WHERE	A.SC_CODE IS NOT NULL
							 AND  	B.JOB_PROCESS_CONTRL IN ( 1,3,4,8,9,13 ))
			OR JOB_NBR IS NULL)
	
	INSERT @Jobs 
	EXEC [advsp_ap_available_production_jobs] @user_code = @user_code
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobNumber', 'Invalid Job Number.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN @Jobs Jobs ON J.CL_CODE = Jobs.ClientCode AND J.DIV_CODE = Jobs.DivisionCode AND J.PRD_CODE = Jobs.ProductCode 
										AND J.JOB_NBR = Jobs.Number AND (@ap_office = 0 OR (@ap_office = 1 AND H.OFFICE_CODE = Jobs.OfficeCode))
	WHERE	J.JOB_NBR IS NOT NULL
	AND		Jobs.Number IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobComponentNumber', 'Job Component Number is required.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	(COMP_NBR NOT IN (SELECT DISTINCT B.JOB_COMPONENT_NBR 
							  FROM dbo.JOB_LOG A
									INNER JOIN dbo.JOB_COMPONENT B ON A.JOB_NUMBER = B.JOB_NUMBER 
							  WHERE	A.JOB_NUMBER = J.JOB_NBR 
							  AND	A.SC_CODE IS NOT NULL
							  AND  	B.JOB_PROCESS_CONTRL IN ( 1,3,4,8,9,13 ))
			 OR COMP_NBR IS NULL)
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'FunctionCode', 'Function Code is required.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(FNC_CODE,'') IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'FunctionCode', 'Please enter a valid function code.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	FNC_CODE NOT IN (SELECT FNC_CODE FROM dbo.FUNCTIONS WHERE FNC_TYPE = 'V' AND (FNC_INACTIVE IS NULL OR FNC_INACTIVE = 0))
	AND		NULLIF(FNC_CODE,'') IS NOT NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobClientCode', 'Client Code is required.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(CL_CODE,'') IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobClientCode', 'Please enter a valid client code.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	CL_CODE NOT IN (SELECT CL_CODE FROM dbo.CLIENT)
	AND		NULLIF(CL_CODE,'') IS NOT NULL			
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobDivisionCode', 'Division Code is required.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(DIV_CODE,'') IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobDivisionCode', 'Please enter a valid division code.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	DIV_CODE NOT IN (SELECT DIV_CODE FROM dbo.DIVISION WHERE CL_CODE = J.CL_CODE)
	AND		NULLIF(DIV_CODE,'') IS NOT NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobProductCode', 'Product Code is required.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(PRD_CODE,'') IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobProductCode', 'Please enter a valid product code.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	PRD_CODE NOT IN (SELECT PRD_CODE FROM dbo.PRODUCT WHERE CL_CODE = J.CL_CODE AND DIV_CODE = J.DIV_CODE)
	AND		NULLIF(PRD_CODE,'') IS NOT NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobOfficeCode', 'Office Code is required.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(OFFICE_CODE_DTL,'') IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobOfficeCode', 'Please enter a valid office code.'
	FROM dbo.IMP_AP_JOB J
		INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	OFFICE_CODE_DTL NOT IN (SELECT OFFICE_CODE FROM dbo.OFFICE)
	AND		NULLIF(OFFICE_CODE_DTL,'') IS NOT NULL
	
	IF @ap_office = 1

		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobGLACode', 'GLA Code is required.'
		FROM dbo.IMP_AP_JOB J
			INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			LEFT OUTER JOIN dbo.GLOXREF X ON H.OFFICE_CODE = X.GLOXOFFICE 
			LEFT OUTER JOIN (
							 SELECT GLACODE, GLAOFFICE
							 FROM @ValidGLACodes 
							 ) V ON J.GL_ACCOUNT = V.GLACODE AND (X.GLOXGLOFFICE IS NULL OR X.GLOXGLOFFICE = V.GLAOFFICE)
		WHERE V.GLACODE IS NULL
		AND		J.NONBILL_FLAG = 1
		
	ELSE
	
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_JOB_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT J.IMPORT_ID, J.ID, 'JobGLACode', 'GLA Code is required.'
		FROM dbo.IMP_AP_JOB J
			INNER JOIN dbo.IMP_AP_HEADER H ON J.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
			LEFT OUTER JOIN (
							 SELECT GLACODE, GLAOFFICE
							 FROM @ValidGLACodes 
							 ) V ON J.GL_ACCOUNT = V.GLACODE
		WHERE V.GLACODE IS NULL
		AND		J.NONBILL_FLAG = 1

------------------------	
-- VALIDATE IMP_AP_MEDIA
------------------------
	IF @ap_office = 1
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaOfficeCode', 'Office does not match header.'
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		WHERE	M.OFFICE_CODE_DTL <> H.OFFICE_CODE 
		
	-- START VALIDATE MEDIA_TYPE
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaType', 'Media Type is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
	WHERE	MEDIA_TYPE IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaType', 'Please enter a valid media type.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
	WHERE	MEDIA_TYPE NOT IN ('I','M','N','O','R','T')
	-- END VALIDATE MEDIA_TYPE
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderID', 'Invalid Order ID.  ' + CASE WHEN @AllowAllOrders = 1 THEN 'Does not exist or does not exist for source code.'
																			ELSE 'Does not exist or does not exist for source code, or Vendor on AP Invoice may not match the Order Vendor.' END
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	M.MEDIA_TYPE IN ('I','M','N','O','R','T')
	AND		ORDER_ID IS NOT NULL
	AND		M.ORDER_NUMBER IS NULL
	
	-- START VALIDATE TV ORDER
	INSERT @TVOrders
	EXEC [advsp_ap_available_tv_orders] @batch_name = @batch_name, @user_code = @user_code
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderNumber', 'Order Number is invalid.  ' + CASE WHEN @AllowAllOrders = 1 AND M.ORDER_ID IS NOT NULL THEN 'Order ID/Source Code may not match the Order, or Order may be closed.'
																					WHEN M.ORDER_ID IS NOT NULL THEN 'Vendor on AP Invoice may not match the Order Vendor or Order ID/Source Code may not match the Order, or Order may be closed.'
																					ELSE '' END
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		LEFT OUTER JOIN @TVOrders O ON M.ORDER_NUMBER = O.OrderNumber AND M.[MONTH] = O.[Month] AND M.[YEAR] = O.[Year]
										 AND M.CL_CODE = O.ClientCode AND M.DIV_CODE = O.DivisionCode AND M.PRD_CODE = O.ProductCode
										 AND ((@AllowAllOrders = 0 AND H.VN_CODE = O.VendorCode) OR (@AllowAllOrders = 1))
	WHERE	O.OrderNumber IS NULL
	AND		M.ORDER_NUMBER IS NOT NULL
	AND		M.MEDIA_TYPE = 'T'
	
	-- END VALIDATE TV ORDER
	
	-- START VALIDATE RADIO ORDER
	INSERT @RadioOrders
	EXEC [advsp_ap_available_radio_orders] @batch_name = @batch_name, @user_code = @user_code
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderNumber', 'Order Number is invalid.  ' + CASE WHEN @AllowAllOrders = 1 AND M.ORDER_ID IS NOT NULL THEN 'Order ID/Source Code may not match the Order, or Order may be closed.'
																					WHEN M.ORDER_ID IS NOT NULL THEN 'Vendor on AP Invoice may not match the Order Vendor or Order ID/Source Code may not match the Order, or Order may be closed.'
																					ELSE '' END
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name
		LEFT OUTER JOIN @RadioOrders O ON M.ORDER_NUMBER = O.OrderNumber AND M.[MONTH] = O.[Month] AND M.[YEAR] = O.[Year]
										 AND M.CL_CODE = O.ClientCode AND M.DIV_CODE = O.DivisionCode AND M.PRD_CODE = O.ProductCode
										 AND ((@AllowAllOrders = 0 AND H.VN_CODE = O.VendorCode) OR (@AllowAllOrders = 1))
	WHERE	O.OrderNumber IS NULL
	AND		M.ORDER_NUMBER IS NOT NULL
	AND		M.MEDIA_TYPE = 'R'
	
	-- END VALIDATE RADIO ORDER
	
	-- START VALIDATE MAGAZINE ORDER
	INSERT @MagazineOrders 
	EXEC advsp_ap_available_magazine_orders @batch_name = @batch_name, @user_code = @user_code
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderNumber', 'Order Number is invalid.  ' + CASE WHEN @AllowAllOrders = 1 AND M.ORDER_ID IS NOT NULL THEN 'Order ID/Source Code may not match the Order, or Order may be closed.'
																					WHEN M.ORDER_ID IS NOT NULL THEN 'Vendor on AP Invoice may not match the Order Vendor or Order ID/Source Code may not match the Order, or Order may be closed.'
																					ELSE '' END
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN @MagazineOrders O
			ON M.ORDER_NUMBER = O.OrderNumber AND M.CL_CODE = O.ClientCode AND M.DIV_CODE = O.DivisionCode AND M.PRD_CODE = O.ProductCode
			AND	((@AllowAllOrders = 0 AND H.VN_CODE = O.VendorCode) OR (@AllowAllOrders = 1))
	WHERE	O.OrderNumber IS NULL
	AND		M.ORDER_NUMBER IS NOT NULL
	AND		M.MEDIA_TYPE = 'M'
	-- END VALIDATE MAGAZINE ORDER
	
	-- START VALIDATE INTERNET ORDER
	INSERT @InternetOrders 
	EXEC advsp_ap_available_internet_orders @batch_name = @batch_name, @user_code = @user_code
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderNumber', 'Order Number is invalid.  ' + CASE WHEN @AllowAllOrders = 1 AND M.ORDER_ID IS NOT NULL THEN 'Order ID/Source Code may not match the Order, or Order may be closed.'
																					WHEN M.ORDER_ID IS NOT NULL THEN 'Vendor on AP Invoice may not match the Order Vendor or Order ID/Source Code may not match the Order, or Order may be closed.'
																					ELSE '' END
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN @InternetOrders O
			ON M.ORDER_NUMBER = O.OrderNumber AND M.CL_CODE = O.ClientCode AND M.DIV_CODE = O.DivisionCode AND M.PRD_CODE = O.ProductCode
			AND	((@AllowAllOrders = 0 AND H.VN_CODE = O.VendorCode) OR (@AllowAllOrders = 1))
	WHERE	O.OrderNumber IS NULL
	AND		M.ORDER_NUMBER IS NOT NULL
	AND		M.MEDIA_TYPE = 'I'
	
	DELETE @InternetOrders
	-- END VALIDATE INTERNET ORDER
	
	-- START VALIDATE NEWSPAPER ORDER
	INSERT @NewspaperOrders ([ClientCode], [DivisionCode], [ProductCode], [OrderNumber], [LineNumber], [InsertDate], [OrderDescription], [LinkID], [ClientPO], [VendorCode], [OfficeCode])
	EXEC advsp_ap_available_newspaper_orders @batch_name = @batch_name, @user_code = @user_code
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderNumber', 'Order Number is invalid.  ' + CASE WHEN @AllowAllOrders = 1 AND M.ORDER_ID IS NOT NULL THEN 'Order ID/Source Code may not match the Order, or Order may be closed.'
																					WHEN M.ORDER_ID IS NOT NULL THEN 'Vendor on AP Invoice may not match the Order Vendor or Order ID/Source Code may not match the Order, or Order may be closed.'
																					ELSE '' END
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN @NewspaperOrders O
			ON M.ORDER_NUMBER = O.OrderNumber AND M.CL_CODE = O.ClientCode AND M.DIV_CODE = O.DivisionCode AND M.PRD_CODE = O.ProductCode
			AND	((@AllowAllOrders = 0 AND H.VN_CODE = O.VendorCode) OR (@AllowAllOrders = 1))
	WHERE	O.OrderNumber IS NULL
	AND		M.ORDER_NUMBER IS NOT NULL
	AND		M.MEDIA_TYPE = 'N'
	
	DELETE @NewspaperOrders
	-- END VALIDATE NEWSPAPER ORDER
	
	-- START VALIDATE OUTDOOR ORDER
	INSERT @OutdoorOrders 
	EXEC advsp_ap_available_outofhome_orders @batch_name = @batch_name, @user_code = @user_code
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderNumber', 'Order Number is invalid.  ' + CASE WHEN @AllowAllOrders = 1 AND M.ORDER_ID IS NOT NULL THEN 'Order ID/Source Code may not match the Order, or Order may be closed.'
																					WHEN M.ORDER_ID IS NOT NULL THEN 'Vendor on AP Invoice may not match the Order Vendor or Order ID/Source Code may not match the Order, or Order may be closed.'
																					ELSE '' END
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN @OutdoorOrders O
			ON M.ORDER_NUMBER = O.OrderNumber AND M.CL_CODE = O.ClientCode AND M.DIV_CODE = O.DivisionCode AND M.PRD_CODE = O.ProductCode
			AND	((@AllowAllOrders = 0 AND H.VN_CODE = O.VendorCode) OR (@AllowAllOrders = 1))
	WHERE	O.OrderNumber IS NULL
	AND		M.ORDER_NUMBER IS NOT NULL
	AND		M.MEDIA_TYPE = 'O'
	
	DELETE @OutdoorOrders
	-- END VALIDATE OUTDOOR ORDER
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderNumber', 'Order Number is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	ORDER_NUMBER IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'Month', 'Month is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	(M.[MONTH] IS NULL OR M.[MONTH] NOT IN ('JAN','FEB','MAR','APR','MAY','JUN','JUL','AUG','SEP','OCT','NOV','DEC'))
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'Year', 'Year is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	M.[YEAR] IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderLineNumber', 'Order Line Number is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	M.ORDER_LINE_NBR IS NULL
	AND		M.IS_BROADCAST_LEGACY = 0
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderLineNumber', 'Order Line Number is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN dbo.INTERNET_DETAIL D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1
	WHERE	D.LINE_NBR IS NULL
	AND		M.MEDIA_TYPE = 'I'
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderLineNumber', 'Order Line Number is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN dbo.MAGAZINE_DETAIL D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1
	WHERE	D.LINE_NBR IS NULL
	AND		M.MEDIA_TYPE = 'M'
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderLineNumber', 'Order Line Number is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN dbo.NEWSPAPER_DETAIL D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1
	WHERE	D.LINE_NBR IS NULL
	AND		M.MEDIA_TYPE = 'N'
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderLineNumber', 'Order Line Number is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN dbo.OUTDOOR_DETAIL D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1
	WHERE	D.LINE_NBR IS NULL
	AND		M.MEDIA_TYPE = 'O'
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderLineNumber', 'Order Line Number is invalid.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN dbo.INTERNET_DETAIL D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1
	WHERE	D.LINE_NBR IS NULL
	AND		M.ORDER_LINE_NBR IS NOT NULL
	AND		M.MEDIA_TYPE = 'I'
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderLineNumber', 'Order Line Number is invalid.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN dbo.MAGAZINE_DETAIL D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1
	WHERE	D.LINE_NBR IS NULL
	AND		M.ORDER_LINE_NBR IS NOT NULL
	AND		M.MEDIA_TYPE = 'M'
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderLineNumber', 'Order Line Number is invalid.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN dbo.NEWSPAPER_DETAIL D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1
	WHERE	D.LINE_NBR IS NULL
	AND		M.ORDER_LINE_NBR IS NOT NULL
	AND		M.MEDIA_TYPE = 'N'
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderLineNumber', 'Order Line Number is invalid.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN dbo.OUTDOOR_DETAIL D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1
	WHERE	D.LINE_NBR IS NULL
	AND		M.ORDER_LINE_NBR IS NOT NULL
	AND		M.MEDIA_TYPE = 'O'
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderLineNumber', 'Order Line Number is invalid.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN dbo.RADIO_DETAIL D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1
	WHERE	D.LINE_NBR IS NULL
	AND		M.ORDER_LINE_NBR IS NOT NULL
	AND		M.MEDIA_TYPE = 'R'
	AND		M.IS_BROADCAST_LEGACY = 0

	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'OrderLineNumber', 'Order Line Number is invalid.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN dbo.TV_DETAIL D ON M.ORDER_NUMBER = D.ORDER_NBR AND M.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1
	WHERE	D.LINE_NBR IS NULL
	AND		M.ORDER_LINE_NBR IS NOT NULL
	AND		M.MEDIA_TYPE = 'T'
	AND		M.IS_BROADCAST_LEGACY = 0

	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'LineDate', 'Line Date is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	LINE_DATE IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaNetAmount', 'Media Net Amount is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	MEDIA_NET IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaClientCode', 'Client Code is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(CL_CODE,'') IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaClientCode', 'Please enter a valid client code.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	CL_CODE NOT IN (SELECT CL_CODE FROM dbo.CLIENT)
	AND		NULLIF(CL_CODE,'') IS NOT NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaDivisionCode', 'Division Code is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(DIV_CODE,'') IS NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaDivisionCode', 'Please enter a valid division code.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	DIV_CODE NOT IN (SELECT DIV_CODE FROM dbo.DIVISION WHERE CL_CODE = M.CL_CODE)
	AND		NULLIF(DIV_CODE,'') IS NOT NULL
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaProductCode', 'Product Code is required.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	NULLIF(PRD_CODE,'') IS NULL

	IF @IsBroadcast4a = 1
	BEGIN
	
		-- Division is never imported so allow empty division. When division is not present, only check to make sure product exists for the client.	
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaProductCode', 'Please enter a valid product code.'
		FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		LEFT OUTER JOIN
			(SELECT DISTINCT CL_CODE, PRD_CODE
			 FROM dbo.PRODUCT) CP ON M.CL_CODE = CP.CL_CODE AND
									 M.PRD_CODE = CP.PRD_CODE 
		LEFT OUTER JOIN dbo.PRODUCT P ON M.CL_CODE = P.CL_CODE AND
										 M.DIV_CODE = P.DIV_CODE AND
										 M.PRD_CODE = P.PRD_CODE
		WHERE	
			NULLIF(M.PRD_CODE,'') IS NOT NULL AND
			1 = CASE WHEN NULLIF(M.DIV_CODE, '') IS NULL AND NULLIF(CP.PRD_CODE, '') IS NULL THEN 1 WHEN NULLIF(M.DIV_CODE, '') IS NOT NULL AND NULLIF(P.PRD_CODE, '') IS NULL THEN 1 ELSE 0 END

	END
	ELSE 
	BEGIN

		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaProductCode', 'Please enter a valid product code.'
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		WHERE	PRD_CODE NOT IN (SELECT PRD_CODE FROM dbo.PRODUCT WHERE CL_CODE = M.CL_CODE AND DIV_CODE = M.DIV_CODE)
		AND		NULLIF(PRD_CODE,'') IS NOT NULL

	END
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'DaypartCode', 'Please enter a valid daypart code.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	DAYPART_CODE NOT IN (SELECT DAY_PART_CODE FROM dbo.DAY_PART WHERE DAY_PART_TYPE_ID = 1 AND IS_INACTIVE = 0)
	AND		M.MEDIA_TYPE = 'T'
	
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'DaypartCode', 'Please enter a valid daypart code.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE	DAYPART_CODE NOT IN (SELECT DAY_PART_CODE FROM dbo.DAY_PART WHERE DAY_PART_TYPE_ID = 2 AND IS_INACTIVE = 0)
	AND		M.MEDIA_TYPE = 'R'
	
	IF (@inter_company = 1)
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaOfficeCode', 'Office Code is required.'
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		WHERE	NULLIF(OFFICE_CODE_DTL,'') IS NULL
		
	IF (@inter_company = 1)
		INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
		SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaOfficeCode', 'Please enter a valid office code.'
		FROM dbo.IMP_AP_MEDIA M
			INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
		WHERE	OFFICE_CODE_DTL NOT IN (SELECT OFFICE_CODE FROM dbo.OFFICE)
		AND		NULLIF(OFFICE_CODE_DTL,'') IS NOT NULL
		
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, IMPORT_MEDIA_ID, PROPERTY_NAME, ERROR)
	SELECT DISTINCT M.IMPORT_ID, M.ID, 'MediaCampaignID', 'Invalid campaign.'
	FROM dbo.IMP_AP_MEDIA M
		INNER JOIN dbo.IMP_AP_HEADER H ON M.IMPORT_ID = H.IMPORT_ID AND H.BATCH_NAME = @batch_name 
	WHERE
		M.CMP_IDENTIFIER IS NOT NULL
	AND	(
		(M.CL_CODE IS NULL AND M.DIV_CODE IS NULL AND M.PRD_CODE IS NULL)
			OR 
		NOT EXISTS(SELECT 1 
					FROM dbo.CAMPAIGN C 
					WHERE C.CMP_IDENTIFIER = M.CMP_IDENTIFIER 
					AND C.CL_CODE = M.CL_CODE 
					AND (M.DIV_CODE IS NULL OR (M.DIV_CODE IS NOT NULL AND C.DIV_CODE = M.DIV_CODE))
					AND (M.PRD_CODE IS NULL OR (M.PRD_CODE IS NOT NULL AND C.PRD_CODE = M.PRD_CODE)))
		)
	
------------------------
-- Validate Other info
------------------------
	INSERT INTO dbo.[IMP_AP_ERROR] (IMPORT_ID, PROPERTY_NAME, ERROR)
	SELECT H.IMPORT_ID, 'TotalInvoice', 'Total Disbursed must equal Total Invoice.'
	FROM dbo.IMP_AP_HEADER H 
		INNER JOIN (
			SELECT SUM(COALESCE(J.JOB_NET,0) + COALESCE(J.JOB_VN_TAX,0)) AS JOBTOTAL, H.IMPORT_ID
			FROM dbo.IMP_AP_HEADER H
				LEFT OUTER JOIN dbo.IMP_AP_JOB J ON H.IMPORT_ID = J.IMPORT_ID 
			WHERE	BATCH_NAME = @batch_name
			GROUP BY H.IMPORT_ID 
			) JOBDETAIL ON H.IMPORT_ID = JOBDETAIL.IMPORT_ID 
		INNER JOIN (
			SELECT SUM(COALESCE(G.GL_NET,0)) AS GLTOTAL, H.IMPORT_ID
			FROM dbo.IMP_AP_HEADER H
				LEFT OUTER JOIN dbo.IMP_AP_GL G ON H.IMPORT_ID = G.IMPORT_ID 
			WHERE	BATCH_NAME = @batch_name
			GROUP BY H.IMPORT_ID 
			) GLDETAIL ON H.IMPORT_ID = GLDETAIL.IMPORT_ID 
		INNER JOIN (
			SELECT SUM(COALESCE(M.MEDIA_NET,0) + COALESCE(M.MEDIA_VN_TAX,0) + COALESCE(M.MEDIA_NET_CHARGE,0)) AS MEDIATOTAL, H.IMPORT_ID
			FROM dbo.IMP_AP_HEADER H
				LEFT OUTER JOIN dbo.IMP_AP_MEDIA M ON H.IMPORT_ID = M.IMPORT_ID 
			WHERE	BATCH_NAME = @batch_name
			GROUP BY H.IMPORT_ID 
			) MEDIADETAIL ON H.IMPORT_ID = MEDIADETAIL.IMPORT_ID 
	WHERE COALESCE(INV_TOTAL_NET,0) + COALESCE(INV_TOTAL_TAX,0) <> (JOBDETAIL.JOBTOTAL + GLDETAIL.GLTOTAL + MEDIADETAIL.MEDIATOTAL + COALESCE(STATE_TAX_AMOUNT,0) + COALESCE(CITY_TAX_AMOUNT,0))
	
-- set ON_HOLD flag for invalid rows
	UPDATE dbo.IMP_AP_HEADER SET ON_HOLD=1
	WHERE	BATCH_NAME = @batch_name 
	AND		IMPORT_ID IN (SELECT DISTINCT IMPORT_ID
						  FROM dbo.IMP_AP_ERROR)

GO