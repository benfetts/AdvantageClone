if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[advsp_ap_invoice_detail_paidbyclient_report]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[advsp_ap_invoice_detail_paidbyclient_report]
GO

CREATE PROCEDURE advsp_ap_invoice_detail_paidbyclient_report @post_period_from varchar(6), @post_period_to varchar(6),
		@open_ap_only bit, @include_broadcast_line_month bit,
		@aging_date smalldatetime, @aging_option_invoice_date bit

AS

--declare @post_period_from varchar(6), @post_period_to varchar(6),
--		@open_ap_only bit, @include_broadcast_line_month bit
		
--set @post_period_from = '201201'
--set @post_period_to = '201212'
--set @open_ap_only = 0
--set @include_broadcast_line_month = 0

SET NOCOUNT ON

CREATE TABLE #APIDS  (
	AP_ID int NOT NULL,
	AP_SEQ smallint NOT NULL
)

CREATE TABLE #APDETAILS  (
	AP_ID int NOT NULL,
	DISBURSEMENT_TYPE char(1) NOT NULL,
	CL_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	DIV_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	PRD_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_NUMBER int NULL,
	JOB_DESC varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_COMPONENT_NBR smallint NULL,
	JOB_COMP_DESC varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_COMP varchar(10) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_DESCRIPTION varchar(50) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_TYPE varchar(2) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	PO_NUMBER int NULL,
	PO_LINE_NUMBER smallint NULL,
	AP_COMMENT varchar(max) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	AR_INV_NBR int NULL,
	AR_TYPE varchar(3) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	AR_INV_DATE datetime NULL,
	ORDER_NBR int NULL,
	ORDER_LINE_NBR smallint NULL,
	ORDER_PERIOD varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	ORDER_DESC varchar(40) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	GLACODE varchar(30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	NET_AMT decimal(14, 2) NULL,
	CMP_IDENTIFIER int NULL,
	VENDOR_TAX decimal(14,2) NULL,
	NON_BILLABLE smallint,
	POST_PERIOD varchar(8),
	ADVANCE_BILLED decimal(14,2) NULL,
	AR_ADVANCE_COST_AMT decimal(14,2) NULL,
	AR_ADVANCE_COST_AMT_JOB decimal(14,2) NULL,
	AR_COST_AMOUNT decimal(14,2) NULL,
	BILLED_RECONCILED decimal(14,2) NULL,
	TOTAL_BILLED decimal(14,2) NULL,
	TOTAL_COST_BILLED decimal(14,2) NULL,
	TOTAL_CASH_RECEIPT decimal(14,2) NULL,
	TOTAL_CASH_FUNCTION decimal(14,2) NULL,
	TOTAL_CASH_ALL decimal(14,2) NULL,
	LAST_CR_CHECK varchar(100) NULL,
	LAST_CR_CHECK_DATE smalldatetime
)

CREATE TABLE #ARDETAILS  (
	AR_INV_NBR int NOT NULL,
	AR_TYPE varchar(3) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	AR_INV_DATE datetime NULL,
	DISBURSEMENT_TYPE char(1) NOT NULL,
	CL_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	DIV_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	PRD_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_NUMBER int NULL,
	JOB_DESC varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_COMPONENT_NBR smallint NULL,
	JOB_COMP_DESC varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_COMP varchar(10) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_DESCRIPTION varchar(50) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_TYPE varchar(2) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	PO_NUMBER int NULL,
	PO_LINE_NUMBER smallint NULL,
	AP_COMMENT varchar(max) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	ORDER_NBR int NULL,
	ORDER_LINE_NBR smallint NULL,
	ORDER_PERIOD varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	ORDER_DESC varchar(40) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	GLACODE varchar(30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	NET_AMT decimal(14, 2) NULL,
	CMP_IDENTIFIER int NULL,
	VENDOR_TAX decimal(14,2) NULL,
	NON_BILLABLE smallint,
	POST_PERIOD varchar(8),
	ADVANCE_BILLED decimal(14,2) NULL,
	AR_ADVANCE_COST_AMT decimal(14,2) NULL,
	AR_ADVANCE_COST_AMT_JOB decimal(14,2) NULL,
	AR_COST_AMOUNT decimal(14,2) NULL,
	BILLED_RECONCILED decimal(14,2) NULL,
	TOTAL_BILLED decimal(14,2) NULL,
	TOTAL_COST_BILLED decimal(14,2) NULL,
	TOTAL_CASH_RECEIPT decimal(14,2) NULL,
	TOTAL_CASH_FUNCTION decimal(14,2) NULL,
	TOTAL_CASH_ALL decimal(14,2) NULL
)

CREATE TABLE #APAR  (
	AP_ID int NOT NULL,
	DISBURSEMENT_TYPE char(1) NOT NULL,
	CL_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	DIV_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	PRD_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_NUMBER int NULL,
	JOB_DESC varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_COMPONENT_NBR smallint NULL,
	JOB_COMP_DESC varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_COMP varchar(10) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_DESCRIPTION varchar(50) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_TYPE varchar(2) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	PO_NUMBER int NULL,
	PO_LINE_NUMBER smallint NULL,
	AP_COMMENT varchar(max) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	AR_INV_NBR int NULL,
	AR_TYPE varchar(3) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	AR_INV_DATE datetime NULL,
	ORDER_NBR int NULL,
	ORDER_LINE_NBR smallint NULL,
	ORDER_PERIOD varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	ORDER_DESC varchar(40) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	GLACODE varchar(30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	NET_AMT decimal(14, 2) NULL,
	CMP_IDENTIFIER int NULL,
	VENDOR_TAX decimal(14,2) NULL,
	NON_BILLABLE smallint,
	POST_PERIOD varchar(8),
	ADVANCE_BILLED decimal(14,2) NULL,
	AR_ADVANCE_COST_AMT decimal(14,2) NULL,
	AR_ADVANCE_COST_AMT_JOB decimal(14,2) NULL,
	AR_COST_AMOUNT decimal(14,2) NULL,
	BILLED_RECONCILED decimal(14,2) NULL,
	TOTAL_BILLED decimal(14,2) NULL,
	TOTAL_COST_BILLED decimal(14,2) NULL,
	TOTAL_CASH_RECEIPT decimal(14,2) NULL,
	TOTAL_CASH_FUNCTION decimal(14,2) NULL,
	TOTAL_CASH_ALL decimal(14,2) NULL,
	LAST_CR_CHECK varchar(100) NULL,
	LAST_CR_CHECK_DATE smalldatetime
)

CREATE TABLE #APAR_TOTAL  (
	AP_ID int NOT NULL,
	DISBURSEMENT_TYPE char(1) NOT NULL,
	CL_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	DIV_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	PRD_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_NUMBER int NULL,
	JOB_DESC varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_COMPONENT_NBR smallint NULL,
	JOB_COMP_DESC varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_COMP varchar(10) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_DESCRIPTION varchar(50) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_TYPE varchar(2) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	PO_NUMBER int NULL,
	PO_LINE_NUMBER smallint NULL,
	AP_COMMENT varchar(max) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	AR_INV_NBR int NULL,
	AR_TYPE varchar(3) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	AR_INV_DATE datetime NULL,
	ORDER_NBR int NULL,
	ORDER_LINE_NBR smallint NULL,
	ORDER_PERIOD varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	ORDER_DESC varchar(40) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	GLACODE varchar(30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	NET_AMT decimal(14, 2) NULL,
	CMP_IDENTIFIER int NULL,
	VENDOR_TAX decimal(14,2) NULL,
	NON_BILLABLE smallint,
	POST_PERIOD varchar(8),
	ADVANCE_BILLED decimal(14,2) NULL,
	AR_ADVANCE_COST_AMT decimal(14,2) NULL,
	AR_ADVANCE_COST_AMT_JOB decimal(14,2) NULL,
	AR_COST_AMOUNT decimal(14,2) NULL,
	BILLED_RECONCILED decimal(14,2) NULL,
	TOTAL_BILLED decimal(14,2) NULL,
	TOTAL_COST_BILLED decimal(14,2) NULL,
	TOTAL_CASH_RECEIPT decimal(14,2) NULL,
	TOTAL_CASH_FUNCTION decimal(14,2) NULL,
	TOTAL_CASH_ALL decimal(14,2) NULL,
	LAST_CR_CHECK varchar(100) NULL,
	LAST_CR_CHECK_DATE smalldatetime
)


INSERT #APIDS
SELECT AP_ID, AP_SEQ
FROM dbo.AP_HEADER H
WHERE
		H.MODIFY_FLAG IS NULL
AND		H.POST_PERIOD BETWEEN @post_period_from AND @post_period_to 

INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, AR_INV_NBR, AR_TYPE, AR_INV_DATE, POST_PERIOD)
SELECT A.AP_ID, 'I', IH.CL_CODE, IH.DIV_CODE, IH.PRD_CODE, API.ORDER_NBR, API.ORDER_LINE_NBR, IH.ORDER_DESC, API.GLACODE, API.NET_AMT, IH.CMP_IDENTIFIER, API.VENDOR_TAX, NULL, NULL, NULL ,API.POST_PERIOD  --
FROM dbo.AP_INTERNET API 
	INNER JOIN dbo.INTERNET_HEADER IH ON IH.ORDER_NBR = API.ORDER_NBR 
	INNER JOIN #APIDS A ON API.AP_ID = A.AP_ID 
	LEFT OUTER JOIN dbo.INTERNET_DETAIL ID ON API.ORDER_NBR = ID.ORDER_NBR AND API.ORDER_LINE_NBR = ID.LINE_NBR AND ID.ACTIVE_REV = 1
	LEFT OUTER JOIN dbo.ACCT_REC AR ON ID.AR_INV_NBR = AR.AR_INV_NBR AND ID.AR_INV_SEQ = AR.AR_INV_SEQ AND ID.AR_TYPE = AR.AR_TYPE
	--LEFT OUTER JOIN dbo.AR_SUMMARY ARS ON ID.AR_INV_NBR = ARS.AR_INV_NBR AND ID.AR_INV_SEQ = ARS.AR_INV_SEQ AND ID.AR_TYPE = ARS.AR_TYPE 
WHERE (API.MODIFY_DELETE IS NULL OR API.MODIFY_DELETE = 0)

INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, AR_INV_NBR, AR_TYPE, AR_INV_DATE, POST_PERIOD)
SELECT A.AP_ID, 'M', VMH.CL_CODE, VMH.DIV_CODE, VMH.PRD_CODE, APM.ORDER_NBR, APM.ORDER_LINE_NBR, VMH.ORDER_DESC, APM.GLACODE, APM.NET_AMT, VMH.CMP_IDENTIFIER, APM.VENDOR_TAX, NULL, NULL, NULL ,APM.POST_PERIOD --
FROM dbo.AP_MAGAZINE APM
	INNER JOIN dbo.V_MAG_HEADER VMH ON VMH.ORDER_NBR = APM.ORDER_NBR 
	INNER JOIN #APIDS A ON APM.AP_ID = A.AP_ID 
	LEFT OUTER JOIN dbo.V_MAG_DETAIL VMD ON APM.ORDER_NBR = VMD.ORDER_NBR AND APM.ORDER_LINE_NBR = VMD.LINE_NBR AND VMD.ACTIVE_REV = 1
	LEFT OUTER JOIN dbo.ACCT_REC AR ON VMD.AR_INV_NBR = AR.AR_INV_NBR AND VMD.AR_INV_SEQ = AR.AR_INV_SEQ AND VMD.AR_TYPE = AR.AR_TYPE 
WHERE (APM.MODIFY_DELETE IS NULL OR APM.MODIFY_DELETE = 0)

INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, AR_INV_NBR, AR_TYPE, AR_INV_DATE, POST_PERIOD)
SELECT A.AP_ID, 'N', VNH.CL_CODE, VNH.DIV_CODE, VNH.PRD_CODE, APN.ORDER_NBR, APN.ORDER_LINE_NBR, VNH.ORDER_DESC, APN.GLACODE, NET_AMT, VNH.CMP_IDENTIFIER, APN.VENDOR_TAX, NULL, NULL, NULL ,APN.POST_PERIOD --
FROM dbo.AP_NEWSPAPER APN
	INNER JOIN dbo.V_NEWS_HEADER VNH ON VNH.ORDER_NBR = APN.ORDER_NBR 
	INNER JOIN #APIDS A ON APN.AP_ID = A.AP_ID 
	LEFT OUTER JOIN dbo.V_NEWS_DETAIL VND ON APN.ORDER_NBR = VND.ORDER_NBR AND APN.ORDER_LINE_NBR = VND.LINE_NBR AND VND.ACTIVE_REV = 1
	LEFT OUTER JOIN dbo.ACCT_REC AR ON VND.AR_INV_NBR = AR.AR_INV_NBR AND VND.AR_INV_SEQ = AR.AR_INV_SEQ AND VND.AR_TYPE = AR.AR_TYPE 
WHERE (APN.MODIFY_DELETE IS NULL OR APN.MODIFY_DELETE = 0)

INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, AR_INV_NBR, AR_TYPE, AR_INV_DATE, POST_PERIOD)
SELECT A.AP_ID, 'O', OH.CL_CODE, OH.DIV_CODE, OH.PRD_CODE, APO.ORDER_NBR, APO.ORDER_LINE_NBR, OH.ORDER_DESC, APO.GLACODE, APO.NET_AMT, OH.CMP_IDENTIFIER, APO.VENDOR_TAX,NULL, NULL, NULL ,APO.POST_PERIOD --
FROM dbo.AP_OUTDOOR APO
	INNER JOIN dbo.OUTDOOR_HEADER OH ON OH.ORDER_NBR = APO.ORDER_NBR 
	INNER JOIN #APIDS A ON APO.AP_ID = A.AP_ID 
	LEFT OUTER JOIN dbo.OUTDOOR_DETAIL OD ON APO.ORDER_NBR = OD.ORDER_NBR AND APO.ORDER_LINE_NBR = OD.LINE_NBR AND OD.ACTIVE_REV = 1
	LEFT OUTER JOIN dbo.ACCT_REC AR ON OD.AR_INV_NBR = AR.AR_INV_NBR AND OD.AR_INV_SEQ = AR.AR_INV_SEQ AND OD.AR_TYPE = AR.AR_TYPE 
WHERE (APO.MODIFY_DELETE IS NULL OR APO.MODIFY_DELETE = 0)

IF @include_broadcast_line_month = 1
	BEGIN
		INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, ORDER_PERIOD, POST_PERIOD)
		SELECT A.AP_ID, 'R', RadioOrders.CL_CODE, RadioOrders.DIV_CODE, RadioOrders.PRD_CODE, APR.ORDER_NBR, APR.ORDER_LINE_NBR, RadioOrders.ORDER_DESC, APR.GLACODE, APR.EXT_NET_AMT, RadioOrders.CMP_IDENTIFIER, APR.VENDOR_TAX,
			CAST(APR.BRDCAST_YEAR AS varchar(4)) + CASE APR.BRDCAST_MONTH
													WHEN 'JAN' THEN '01'
													WHEN 'FEB' THEN '02'
													WHEN 'MAR' THEN '03'
													WHEN 'APR' THEN '04'
													WHEN 'MAY' THEN '05'
													WHEN 'JUN' THEN '06'
													WHEN 'JUL' THEN '07'
													WHEN 'AUG' THEN '08'
													WHEN 'SEP' THEN '09'
													WHEN 'OCT' THEN '10'
													WHEN 'NOV' THEN '11'
													WHEN 'DEC' THEN '12' END,APR.POST_PERIOD
		FROM dbo.AP_RADIO APR
			INNER JOIN (
						SELECT CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.RADIO_HDR
						UNION 
						SELECT RH.CL_CODE, RH.DIV_CODE, RH.PRD_CODE, ORDER_NBR, C.CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.RADIO_HEADER RH
							LEFT OUTER JOIN dbo.CAMPAIGN C ON RH.CMP_IDENTIFIER = C.CMP_IDENTIFIER
						) RadioOrders ON RadioOrders.ORDER_NBR = APR.ORDER_NBR 
			INNER JOIN #APIDS A ON APR.AP_ID = A.AP_ID 
		WHERE (APR.MODIFY_DELETE IS NULL OR APR.MODIFY_DELETE = 0)
	END
ELSE
	BEGIN
		INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, ORDER_PERIOD, POST_PERIOD)
		SELECT A.AP_ID, 'R', RadioOrders.CL_CODE, RadioOrders.DIV_CODE, RadioOrders.PRD_CODE, APR.ORDER_NBR, APR.ORDER_LINE_NBR, RadioOrders.ORDER_DESC, APR.GLACODE, APR.EXT_NET_AMT, RadioOrders.CMP_IDENTIFIER, APR.VENDOR_TAX,
			CAST(APR.BRDCAST_YEAR AS varchar(4)) + CASE APR.BRDCAST_MONTH
													WHEN 'JAN' THEN '01'
													WHEN 'FEB' THEN '02'
													WHEN 'MAR' THEN '03'
													WHEN 'APR' THEN '04'
													WHEN 'MAY' THEN '05'
													WHEN 'JUN' THEN '06'
													WHEN 'JUL' THEN '07'
													WHEN 'AUG' THEN '08'
													WHEN 'SEP' THEN '09'
													WHEN 'OCT' THEN '10'
													WHEN 'NOV' THEN '11'
													WHEN 'DEC' THEN '12' END,APR.POST_PERIOD
		FROM dbo.AP_RADIO APR
			INNER JOIN (
						SELECT CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.RADIO_HDR
						UNION 
						SELECT RH.CL_CODE, RH.DIV_CODE, RH.PRD_CODE, ORDER_NBR, C.CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.RADIO_HEADER RH
							LEFT OUTER JOIN dbo.CAMPAIGN C ON RH.CMP_IDENTIFIER = C.CMP_IDENTIFIER
						) RadioOrders ON RadioOrders.ORDER_NBR = APR.ORDER_NBR 
			INNER JOIN #APIDS A ON APR.AP_ID = A.AP_ID 
		WHERE (APR.MODIFY_DELETE IS NULL OR APR.MODIFY_DELETE = 0)
	END

IF @include_broadcast_line_month = 1
	BEGIN
		INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, ORDER_PERIOD, POST_PERIOD)
		SELECT A.AP_ID, 'T', TvOrders.CL_CODE, TvOrders.DIV_CODE, TvOrders.PRD_CODE, APT.ORDER_NBR, APT.ORDER_LINE_NBR, TvOrders.ORDER_DESC, APT.GLACODE, APT.EXT_NET_AMT, TvOrders.CMP_IDENTIFIER, APT.VENDOR_TAX,
			CAST(APT.BRDCAST_YEAR AS varchar(4)) + CASE APT.BRDCAST_MONTH
													WHEN 'JAN' THEN '01'
													WHEN 'FEB' THEN '02'
													WHEN 'MAR' THEN '03'
													WHEN 'APR' THEN '04'
													WHEN 'MAY' THEN '05'
													WHEN 'JUN' THEN '06'
													WHEN 'JUL' THEN '07'
													WHEN 'AUG' THEN '08'
													WHEN 'SEP' THEN '09'
													WHEN 'OCT' THEN '10'
													WHEN 'NOV' THEN '11'
													WHEN 'DEC' THEN '12' END,APT.POST_PERIOD
		FROM dbo.AP_TV APT
			INNER JOIN (
						SELECT CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.TV_HDR
						UNION 
						SELECT TH.CL_CODE, TH.DIV_CODE, TH.PRD_CODE, ORDER_NBR, C.CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.TV_HEADER TH
							LEFT OUTER JOIN dbo.CAMPAIGN C ON TH.CMP_IDENTIFIER = C.CMP_IDENTIFIER
						) TvOrders ON TvOrders.ORDER_NBR = APT.ORDER_NBR 
			INNER JOIN #APIDS A ON APT.AP_ID = A.AP_ID 
		WHERE (APT.MODIFY_DELETE IS NULL OR APT.MODIFY_DELETE = 0)
	END
ELSE
	BEGIN
		INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, ORDER_PERIOD, POST_PERIOD)
		SELECT A.AP_ID, 'T', TvOrders.CL_CODE, TvOrders.DIV_CODE, TvOrders.PRD_CODE, APT.ORDER_NBR, APT.ORDER_LINE_NBR, TvOrders.ORDER_DESC, APT.GLACODE, APT.EXT_NET_AMT, TvOrders.CMP_IDENTIFIER, APT.VENDOR_TAX,
			CAST(APT.BRDCAST_YEAR AS varchar(4)) + CASE APT.BRDCAST_MONTH
													WHEN 'JAN' THEN '01'
													WHEN 'FEB' THEN '02'
													WHEN 'MAR' THEN '03'
													WHEN 'APR' THEN '04'
													WHEN 'MAY' THEN '05'
													WHEN 'JUN' THEN '06'
													WHEN 'JUL' THEN '07'
													WHEN 'AUG' THEN '08'
													WHEN 'SEP' THEN '09'
													WHEN 'OCT' THEN '10'
													WHEN 'NOV' THEN '11'
													WHEN 'DEC' THEN '12' END,APT.POST_PERIOD
		FROM dbo.AP_TV APT
			INNER JOIN (
						SELECT CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.TV_HDR
						UNION 
						SELECT TH.CL_CODE, TH.DIV_CODE, TH.PRD_CODE, ORDER_NBR, C.CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.TV_HEADER TH
							LEFT OUTER JOIN dbo.CAMPAIGN C ON TH.CMP_IDENTIFIER = C.CMP_IDENTIFIER
						) TvOrders ON TvOrders.ORDER_NBR = APT.ORDER_NBR 
			INNER JOIN #APIDS A ON APT.AP_ID = A.AP_ID 
		WHERE (APT.MODIFY_DELETE IS NULL OR APT.MODIFY_DELETE = 0)
	END

UPDATE #APDETAILS SET ORDER_PERIOD = CAST(RD.YEAR_NBR AS VARCHAR(4)) + RIGHT('00' + CAST(RD.MONTH_NBR AS varchar(2)), 2)  
FROM #APDETAILS D 
	INNER JOIN dbo.RADIO_DETAIL RD ON D.ORDER_NBR = RD.ORDER_NBR AND D.ORDER_PERIOD IS NULL AND RD.ACTIVE_REV = 1

UPDATE #APDETAILS SET ORDER_PERIOD = CAST(TD.YEAR_NBR AS VARCHAR(4)) + RIGHT('00' + CAST(TD.MONTH_NBR AS varchar(2)), 2)  
FROM #APDETAILS D 
	INNER JOIN dbo.TV_DETAIL TD ON D.ORDER_NBR = TD.ORDER_NBR AND D.ORDER_PERIOD IS NULL AND TD.ACTIVE_REV = 1

--UPDATE #APDETAILS SET AR_INV_NBR = D.AR_INV_NBR, AR_TYPE = D.AR_TYPE, AR_INV_DATE = AR.AR_INV_DATE
--FROM #APDETAILS APD
--	LEFT OUTER JOIN dbo.TV_DETAIL D ON APD.ORDER_NBR = D.ORDER_NBR AND APD.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1
--	LEFT OUTER JOIN dbo.ACCT_REC AR ON D.AR_INV_NBR = AR.AR_INV_NBR AND D.AR_INV_SEQ = AR.AR_INV_SEQ AND D.AR_TYPE = AR.AR_TYPE 
--WHERE DISBURSEMENT_TYPE = 'T'

--UPDATE #APDETAILS SET AR_INV_NBR = D.AR_INV_NBR, AR_TYPE = D.AR_TYPE, AR_INV_DATE = AR.AR_INV_DATE
--FROM #APDETAILS APD
--	LEFT OUTER JOIN dbo.RADIO_DETAIL D ON APD.ORDER_NBR = D.ORDER_NBR AND APD.ORDER_LINE_NBR = D.LINE_NBR AND D.ACTIVE_REV = 1
--	LEFT OUTER JOIN dbo.ACCT_REC AR ON D.AR_INV_NBR = AR.AR_INV_NBR AND D.AR_INV_SEQ = AR.AR_INV_SEQ AND D.AR_TYPE = AR.AR_TYPE 
--WHERE DISBURSEMENT_TYPE = 'R'

UPDATE #APDETAILS SET ORDER_PERIOD = ORDERS.ORDER_PERIOD 
FROM #APDETAILS D 
	INNER JOIN (
				SELECT ORDER_NBR, LINE_NBR, CAST(DATEPART(YY, [START_DATE]) AS VARCHAR(4)) + RIGHT('0' + CAST(DATEPART(M, [START_DATE]) AS VARCHAR(2)),2) AS ORDER_PERIOD
				FROM dbo.INTERNET_DETAIL 
				WHERE ACTIVE_REV = 1

				UNION 

				SELECT V1.ORDER_NBR, V1.LINE_NBR, CAST(DATEPART(YY, INSERT_DATE) AS VARCHAR(4)) + RIGHT('0' + CAST(DATEPART(M, INSERT_DATE) AS VARCHAR(2)),2) AS ORDER_PERIOD
				FROM dbo.V_MAG_DETAIL V1
					INNER JOIN (SELECT MAX(SEQ_NBR) AS SEQ_NBR, V2.ORDER_NBR, V2.LINE_NBR, V2.REV_NBR 
								FROM dbo.V_MAG_DETAIL V2
									INNER JOIN (SELECT MAX(REV_NBR) AS REV_NBR, ORDER_NBR, LINE_NBR
												FROM dbo.V_MAG_DETAIL 
												GROUP BY ORDER_NBR, LINE_NBR
												) V3 ON V3.ORDER_NBR = V2.ORDER_NBR AND V3.LINE_NBR = V2.LINE_NBR AND V3.REV_NBR = V2.REV_NBR 
								GROUP BY V2.ORDER_NBR, V2.LINE_NBR, V2.REV_NBR
								) DET ON DET.ORDER_NBR = V1.ORDER_NBR AND DET.LINE_NBR = V1.LINE_NBR AND DET.REV_NBR = V1.REV_NBR AND DET.SEQ_NBR = V1.SEQ_NBR 

				UNION

				SELECT V1.ORDER_NBR, V1.LINE_NBR, CAST(DATEPART(YY, INSERT_DATE) AS VARCHAR(4)) + RIGHT('0' + CAST(DATEPART(M, INSERT_DATE) AS VARCHAR(2)),2) AS ORDER_PERIOD
				FROM dbo.V_NEWS_DETAIL V1
					INNER JOIN (SELECT MAX(SEQ_NBR) AS SEQ_NBR, V2.ORDER_NBR, V2.LINE_NBR, V2.REV_NBR 
								FROM dbo.V_NEWS_DETAIL V2
									INNER JOIN (SELECT MAX(REV_NBR) AS REV_NBR, ORDER_NBR, LINE_NBR
												FROM dbo.V_NEWS_DETAIL 
												GROUP BY ORDER_NBR, LINE_NBR
												) V3 ON V3.ORDER_NBR = V2.ORDER_NBR AND V3.LINE_NBR = V2.LINE_NBR AND V3.REV_NBR = V2.REV_NBR 
								GROUP BY V2.ORDER_NBR, V2.LINE_NBR, V2.REV_NBR
								) DET ON DET.ORDER_NBR = V1.ORDER_NBR AND DET.LINE_NBR = V1.LINE_NBR AND DET.REV_NBR = V1.REV_NBR AND DET.SEQ_NBR = V1.SEQ_NBR 

				UNION

				SELECT ORDER_NBR, LINE_NBR, CAST(DATEPART(YY, POST_DATE) AS VARCHAR(4)) + RIGHT('0' + CAST(DATEPART(M, POST_DATE) AS VARCHAR(2)),2) AS ORDER_PERIOD
				FROM dbo.OUTDOOR_DETAIL 
				WHERE ACTIVE_REV = 1
				) ORDERS ON D.ORDER_NBR = ORDERS.ORDER_NBR AND D.ORDER_LINE_NBR = ORDERS.LINE_NBR 
				
INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, PO_NUMBER, PO_LINE_NUMBER, AP_COMMENT, GLACODE, NET_AMT)
SELECT AG.AP_ID, 'G', AG.PO_NUMBER, AG.PO_LINE_NUMBER, AG.AP_COMMENT, AG.GLACODE, AG.AP_GL_AMT 
FROM dbo.AP_GL_DIST AG
	INNER JOIN #APIDS A ON AG.AP_ID = A.AP_ID 
WHERE (AG.MODIFY_DELETE IS NULL OR AG.MODIFY_DELETE = 0)

INSERT #APDETAILS  (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, JOB_NUMBER, JOB_DESC, JOB_COMPONENT_NBR, JOB_COMP_DESC, 
					JOB_COMP, FNC_CODE, FNC_DESCRIPTION, FNC_TYPE, PO_NUMBER, PO_LINE_NUMBER, AP_COMMENT, AR_INV_NBR, AR_TYPE, AR_INV_DATE, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, NON_BILLABLE, POST_PERIOD)
					--ADVANCE_BILLED, AR_ADVANCE_COST_AMT, AR_COST_AMOUNT, BILLED_RECOGNIZED, TOTAL_BILLED, TOTAL_COST_BILLED, TOTAL_CASH_RECEIPT)
SELECT
	APP.AP_ID,
	'P',
	JL.CL_CODE,
	JL.DIV_CODE,
	JL.PRD_CODE,
	APP.JOB_NUMBER,
	JL.JOB_DESC,
	APP.JOB_COMPONENT_NBR,
	JC.JOB_COMP_DESC,
	RIGHT('000000' + CAST(APP.JOB_NUMBER AS varchar(6)), 6) + '-' + RIGHT('000' + CAST(APP.JOB_COMPONENT_NBR AS varchar(3)), 3),
	APP.FNC_CODE,
	F.FNC_DESCRIPTION,
	F.FNC_TYPE,
	APP.PO_NUMBER,
	APP.PO_LINE_NUMBER,
	APC.AP_COMMENT,
	APP.AR_INV_NBR,
	APP.AR_TYPE,
	AR.AR_INV_DATE,
	APP.GLACODE,
	APP.AP_PROD_EXT_AMT,
	JL.CMP_IDENTIFIER,
	APP.EXT_NONRESALE_TAX,
	AP_PROD_NOBILL_FLG,
	APP.POST_PERIOD
	--CASE WHEN ARS.FNC_TYPE = 'E' THEN
	--			CASE WHEN ARS.AB_REC_FLAG = 2 THEN ISNULL(ARS.EMP_TIME_AMT,0)+ISNULL(ARS.AB_INC_AMT,0)+ISNULL(ARS.AB_SALE_AMT,0) ELSE 0 END END,
	--CASE WHEN ARS.FNC_TYPE = 'V' THEN
	--			CASE WHEN ARS.AB_REC_FLAG = 2 THEN ISNULL(ARS.COST_AMT,0)+ISNULL(ARS.AB_COST_AMT,0)+ISNULL(ARS.NON_RESALE_AMT,0) ELSE 0 END END,
	--CASE WHEN ARS.FNC_TYPE = 'V' THEN
	--			CASE WHEN ARS.AB_REC_FLAG = 2 THEN ISNULL(ARS.COST_AMT,0)+ISNULL(ARS.AB_COST_AMT,0)+ISNULL(ARS.NON_RESALE_AMT,0) ELSE ISNULL(ARS.COST_AMT,0)+ISNULL(ARS.NET_CHARGE_AMT,0)+ISNULL(ARS.DISCOUNT_AMT,0)+ISNULL(ARS.NON_RESALE_AMT,0) END ELSE
	--				CASE WHEN ISNULL(ARS.MEDIA_TYPE,'P') <> 'P' THEN ISNULL(ARS.COST_AMT,0)+ISNULL(ARS.NET_CHARGE_AMT,0)+ISNULL(ARS.DISCOUNT_AMT,0)+ISNULL(ARS.NON_RESALE_AMT,0) ELSE 0 END END,
	--0,
	--ARS.TOTAL_BILL,
	--ARS.COST_AMT,
	--0

FROM dbo.AP_PRODUCTION APP
	INNER JOIN #APIDS A ON APP.AP_ID = A.AP_ID 
	INNER JOIN dbo.JOB_LOG JL ON APP.JOB_NUMBER = JL.JOB_NUMBER
	INNER JOIN dbo.JOB_COMPONENT JC ON JC.JOB_NUMBER = APP.JOB_NUMBER AND JC.JOB_COMPONENT_NBR = APP.JOB_COMPONENT_NBR
	INNER JOIN dbo.FUNCTIONS F ON APP.FNC_CODE = F.FNC_CODE
	LEFT OUTER JOIN dbo.AP_PROD_COMMENTS APC ON APC.AP_ID = APP.AP_ID AND APC.LINE_NUMBER = APP.LINE_NUMBER 
												AND APC.JOB_NUMBER = APP.JOB_NUMBER AND APC.JOB_COMPONENT_NBR = APP.JOB_COMPONENT_NBR 
												AND APC.FNC_CODE = APP.FNC_CODE 
	LEFT OUTER JOIN dbo.ACCT_REC AR ON APP.AR_INV_NBR = AR.AR_INV_NBR AND APP.AR_INV_SEQ = AR.AR_INV_SEQ AND APP.AR_TYPE = AR.AR_TYPE 
	--LEFT OUTER JOIN dbo.AR_SUMMARY ARS ON APP.AR_INV_NBR = ARS.AR_INV_NBR AND APP.AR_INV_SEQ = ARS.AR_INV_SEQ AND APP.AR_TYPE = ARS.AR_TYPE 
WHERE (APP.MODIFY_DELETE IS NULL OR APP.MODIFY_DELETE = 0)

--SELECT * FROM #APIDS
--SELECT * FROM #APDETAILS

INSERT INTO #ARDETAILS (AR_INV_NBR, AR_TYPE, AR_INV_DATE, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, JOB_NUMBER, JOB_DESC, JOB_COMPONENT_NBR, JOB_COMP_DESC, 
						JOB_COMP, FNC_CODE, FNC_DESCRIPTION, FNC_TYPE, PO_NUMBER, PO_LINE_NUMBER, AP_COMMENT, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX)
SELECT AR_SUMMARY.AR_INV_NBR, AR_SUMMARY.AR_TYPE, NULL, 'P', AR_SUMMARY.CL_CODE, AR_SUMMARY.DIV_CODE, AR_SUMMARY.PRD_CODE, AR_SUMMARY.JOB_NUMBER, JL.JOB_DESC, AR_SUMMARY.JOB_COMPONENT_NBR, JC.JOB_COMP_DESC,RIGHT('000000' + CAST(#APDETAILS.JOB_NUMBER AS varchar(6)), 6) + '-' + RIGHT('000' + CAST(#APDETAILS.JOB_COMPONENT_NBR AS varchar(3)), 3),
				#APDETAILS.FNC_CODE, F.FNC_DESCRIPTION, F.FNC_TYPE, NULL, NULL, NULL, NULL, 0, AR_SUMMARY.CMP_IDENTIFIER,0
FROM #APDETAILS INNER JOIN
	 AR_SUMMARY ON #APDETAILS.JOB_NUMBER = AR_SUMMARY.JOB_NUMBER AND #APDETAILS.JOB_COMPONENT_NBR = AR_SUMMARY.JOB_COMPONENT_NBR AND #APDETAILS.FNC_CODE = AR_SUMMARY.FNC_CODE LEFT OUTER JOIN
	 JOB_COMPONENT JC ON JC.JOB_NUMBER = AR_SUMMARY.JOB_NUMBER AND JC.JOB_COMPONENT_NBR = AR_SUMMARY.JOB_COMPONENT_NBR LEFT OUTER JOIN
	 JOB_LOG JL ON JL.JOB_NUMBER = AR_SUMMARY.JOB_NUMBER LEFT OUTER JOIN
	 FUNCTIONS F ON F.FNC_CODE = #APDETAILS.FNC_CODE
GROUP BY AR_SUMMARY.AR_INV_NBR, AR_SUMMARY.AR_TYPE, AR_SUMMARY.CL_CODE, AR_SUMMARY.DIV_CODE, AR_SUMMARY.PRD_CODE, AR_SUMMARY.JOB_NUMBER, JL.JOB_DESC, AR_SUMMARY.JOB_COMPONENT_NBR, JC.JOB_COMP_DESC,RIGHT('000000' + CAST(#APDETAILS.JOB_NUMBER AS varchar(6)), 6) + '-' + RIGHT('000' + CAST(#APDETAILS.JOB_COMPONENT_NBR AS varchar(3)), 3),
				#APDETAILS.FNC_CODE, F.FNC_DESCRIPTION, F.FNC_TYPE, AR_SUMMARY.CMP_IDENTIFIER

INSERT INTO #ARDETAILS (AR_INV_NBR, AR_TYPE, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, PO_NUMBER, PO_LINE_NUMBER, AP_COMMENT, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX)
SELECT DISTINCT AR_SUMMARY.AR_INV_NBR, AR_SUMMARY.AR_TYPE, MEDIA_TYPE, AR_SUMMARY.CL_CODE, AR_SUMMARY.DIV_CODE, AR_SUMMARY.PRD_CODE, AR_SUMMARY.ORDER_NBR, AR_SUMMARY.ORDER_LINE_NBR, NULL, NULL, NULL, NULL, 0, AR_SUMMARY.CMP_IDENTIFIER,0
FROM #APDETAILS INNER JOIN
	 AR_SUMMARY ON #APDETAILS.ORDER_NBR = AR_SUMMARY.ORDER_NBR AND #APDETAILS.ORDER_LINE_NBR = AR_SUMMARY.ORDER_LINE_NBR
GROUP BY AR_SUMMARY.AR_INV_NBR, AR_SUMMARY.AR_TYPE, MEDIA_TYPE, AR_SUMMARY.CL_CODE, AR_SUMMARY.DIV_CODE, AR_SUMMARY.PRD_CODE, AR_SUMMARY.ORDER_NBR, AR_SUMMARY.ORDER_LINE_NBR,AR_SUMMARY.CMP_IDENTIFIER

--SELECT * FROM #ARDETAILS

UPDATE #ARDETAILS
	SET ADVANCE_BILLED = (SELECT SUM(ISNULL(AR.AB_SALE_AMT,0)) 
									FROM AR_SUMMARY AR 
									WHERE #ARDETAILS.AR_INV_NBR = AR.AR_INV_NBR AND #ARDETAILS.AR_TYPE = AR.AR_TYPE AND #ARDETAILS.FNC_CODE = AR.FNC_CODE AND #ARDETAILS.JOB_NUMBER = AR.JOB_NUMBER AND #ARDETAILS.JOB_COMPONENT_NBR = AR.JOB_COMPONENT_NBR )
									WHERE #ARDETAILS.FNC_CODE IS NOT NULL

UPDATE #ARDETAILS
	SET ADVANCE_BILLED = (SELECT SUM(ISNULL(AR.AB_SALE_AMT,0)) 
									FROM AR_SUMMARY AR 
									WHERE #ARDETAILS.AR_INV_NBR = AR.AR_INV_NBR AND #ARDETAILS.AR_TYPE = AR.AR_TYPE AND #ARDETAILS.ORDER_NBR = AR.ORDER_NBR AND #ARDETAILS.ORDER_LINE_NBR = AR.ORDER_LINE_NBR )
									WHERE #ARDETAILS.ORDER_NBR IS NOT NULL

--Advance Billed Function
UPDATE #ARDETAILS
	SET AR_ADVANCE_COST_AMT = (SELECT SUM(ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.AB_NONRESALE_AMT,0))
									FROM AR_SUMMARY AR 
									WHERE #ARDETAILS.AR_INV_NBR = AR.AR_INV_NBR AND #ARDETAILS.AR_TYPE = AR.AR_TYPE AND #ARDETAILS.FNC_CODE = AR.FNC_CODE AND #ARDETAILS.JOB_NUMBER = AR.JOB_NUMBER AND #ARDETAILS.JOB_COMPONENT_NBR = AR.JOB_COMPONENT_NBR )
									WHERE #ARDETAILS.FNC_CODE IS NOT NULL

UPDATE #ARDETAILS
	SET AR_ADVANCE_COST_AMT = (SELECT SUM(ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.AB_NONRESALE_AMT,0))
									FROM AR_SUMMARY AR 
									WHERE #ARDETAILS.AR_INV_NBR = AR.AR_INV_NBR AND #ARDETAILS.AR_TYPE = AR.AR_TYPE AND #ARDETAILS.ORDER_NBR = AR.ORDER_NBR AND #ARDETAILS.ORDER_LINE_NBR = AR.ORDER_LINE_NBR )
									WHERE #ARDETAILS.ORDER_NBR IS NOT NULL

--Advance Billed Job Comp
--UPDATE #ARDETAILS
--	SET AR_ADVANCE_COST_AMT_JOB = (SELECT SUM(ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.AB_NONRESALE_AMT,0))
--									FROM AR_SUMMARY AR 
--									WHERE #ARDETAILS.JOB_NUMBER = AR.JOB_NUMBER AND #ARDETAILS.JOB_COMPONENT_NBR = AR.JOB_COMPONENT_NBR )
--									WHERE #ARDETAILS.JOB_NUMBER IS NOT NULL


--
--UPDATE #ARDETAILS
--	SET AR_COST_AMOUNT = (SELECT SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)) 
--									FROM AR_SUMMARY AR 
--									WHERE #ARDETAILS.AR_INV_NBR = AR.AR_INV_NBR AND #ARDETAILS.AR_TYPE = AR.AR_TYPE AND #ARDETAILS.FNC_CODE = AR.FNC_CODE AND #ARDETAILS.JOB_NUMBER = AR.JOB_NUMBER AND #ARDETAILS.JOB_COMPONENT_NBR = AR.JOB_COMPONENT_NBR
--									) WHERE #ARDETAILS.FNC_CODE IS NOT NULL

--UPDATE #ARDETAILS
--	SET BILLED_RECONCILED = (SELECT SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)) 
--									FROM AR_SUMMARY AR 
--									WHERE #ARDETAILS.ORDER_NBR = AR.ORDER_NBR AND #ARDETAILS.ORDER_LINE_NBR = AR.ORDER_LINE_NBR 
--									) WHERE #ARDETAILS.ORDER_NBR IS NOT NULL

--UPDATE #ARDETAILS
--	SET BILLED_RECONCILED  = (SELECT SUM(ISNULL([AB_SALE_AMT],0)) 
--									FROM AR_SUMMARY AR 
--									WHERE #ARDETAILS.AR_INV_NBR = AR.AR_INV_NBR AND #ARDETAILS.AR_TYPE = AR.AR_TYPE AND #ARDETAILS.JOB_NUMBER = AR.JOB_NUMBER AND #ARDETAILS.JOB_COMPONENT_NBR = AR.JOB_COMPONENT_NBR AND #ARDETAILS.FNC_CODE = AR.FNC_CODE
--									GROUP BY AR.FNC_TYPE) WHERE #ARDETAILS.JOB_NUMBER IS NOT NULL

--UPDATE #ARDETAILS
--	SET BILLED_RECONCILED  = (SELECT SUM(ISNULL([AB_SALE_AMT],0)) 
--									FROM AR_SUMMARY AR 
--									WHERE #ARDETAILS.AR_INV_NBR = AR.AR_INV_NBR AND #ARDETAILS.AR_TYPE = AR.AR_TYPE AND #ARDETAILS.ORDER_NBR = AR.ORDER_NBR AND #ARDETAILS.ORDER_LINE_NBR = AR.ORDER_LINE_NBR 
--									GROUP BY AR.FNC_TYPE) WHERE #ARDETAILS.ORDER_NBR IS NOT NULL

--Cash Received Direct
UPDATE #ARDETAILS
	SET TOTAL_CASH_RECEIPT = (SELECT ISNULL(SUM(CR.CR_PAY_AMT),0) + ISNULL(SUM(CR.CR_ADJ_AMT),0)
									FROM CR_CLIENT_DTL CR 
									WHERE #ARDETAILS.AR_INV_NBR = CR.AR_INV_NBR AND #ARDETAILS.AR_TYPE = CR.AR_TYPE --AND #APDETAILS.FNC_CODE = AR.FNC_CODE AND #APDETAILS.JOB_NUMBER = AR.JOB_NUMBER
									 )

--Cash Received Direct
UPDATE #ARDETAILS
	SET TOTAL_CASH_FUNCTION = (SELECT ISNULL(SUM(CR.PAYMENT_AMOUNT),0)
									FROM CR_CLIENT_DTL_PAYMENT CR 
									WHERE #ARDETAILS.FNC_CODE = CR.FNC_CODE AND #ARDETAILS.JOB_NUMBER = CR.JOB_NUMBER AND #ARDETAILS.JOB_COMPONENT_NBR = CR.JOB_COMPONENT_NBR
									 )

--Cash Received Direct
--UPDATE #ARDETAILS
--	SET TOTAL_CASH_ALL = (SELECT ISNULL(SUM(CR.PAYMENT_AMOUNT),0)
--									FROM CR_CLIENT_DTL_PAYMENT CR 
--									WHERE  #ARDETAILS.JOB_NUMBER = CR.JOB_NUMBER AND #ARDETAILS.JOB_COMPONENT_NBR = CR.JOB_COMPONENT_NBR
--									 )





UPDATE #ARDETAILS SET ORDER_PERIOD = CAST(RD.YEAR_NBR AS VARCHAR(4)) + RIGHT('00' + CAST(RD.MONTH_NBR AS varchar(2)), 2)  
FROM #ARDETAILS D 
	INNER JOIN dbo.RADIO_DETAIL RD ON D.ORDER_NBR = RD.ORDER_NBR AND D.ORDER_PERIOD IS NULL AND RD.ACTIVE_REV = 1

UPDATE #ARDETAILS SET ORDER_PERIOD = CAST(TD.YEAR_NBR AS VARCHAR(4)) + RIGHT('00' + CAST(TD.MONTH_NBR AS varchar(2)), 2)  
FROM #ARDETAILS D 
	INNER JOIN dbo.TV_DETAIL TD ON D.ORDER_NBR = TD.ORDER_NBR AND D.ORDER_PERIOD IS NULL AND TD.ACTIVE_REV = 1

UPDATE #ARDETAILS SET ORDER_PERIOD = ORDERS.ORDER_PERIOD 
FROM #ARDETAILS D 
	INNER JOIN (
				SELECT ORDER_NBR, LINE_NBR, CAST(DATEPART(YY, [START_DATE]) AS VARCHAR(4)) + RIGHT('0' + CAST(DATEPART(M, [START_DATE]) AS VARCHAR(2)),2) AS ORDER_PERIOD
				FROM dbo.INTERNET_DETAIL 
				WHERE ACTIVE_REV = 1

				UNION 

				SELECT V1.ORDER_NBR, V1.LINE_NBR, CAST(DATEPART(YY, INSERT_DATE) AS VARCHAR(4)) + RIGHT('0' + CAST(DATEPART(M, INSERT_DATE) AS VARCHAR(2)),2) AS ORDER_PERIOD
				FROM dbo.V_MAG_DETAIL V1
					INNER JOIN (SELECT MAX(SEQ_NBR) AS SEQ_NBR, V2.ORDER_NBR, V2.LINE_NBR, V2.REV_NBR 
								FROM dbo.V_MAG_DETAIL V2
									INNER JOIN (SELECT MAX(REV_NBR) AS REV_NBR, ORDER_NBR, LINE_NBR
												FROM dbo.V_MAG_DETAIL 
												GROUP BY ORDER_NBR, LINE_NBR
												) V3 ON V3.ORDER_NBR = V2.ORDER_NBR AND V3.LINE_NBR = V2.LINE_NBR AND V3.REV_NBR = V2.REV_NBR 
								GROUP BY V2.ORDER_NBR, V2.LINE_NBR, V2.REV_NBR
								) DET ON DET.ORDER_NBR = V1.ORDER_NBR AND DET.LINE_NBR = V1.LINE_NBR AND DET.REV_NBR = V1.REV_NBR AND DET.SEQ_NBR = V1.SEQ_NBR 

				UNION

				SELECT V1.ORDER_NBR, V1.LINE_NBR, CAST(DATEPART(YY, INSERT_DATE) AS VARCHAR(4)) + RIGHT('0' + CAST(DATEPART(M, INSERT_DATE) AS VARCHAR(2)),2) AS ORDER_PERIOD
				FROM dbo.V_NEWS_DETAIL V1
					INNER JOIN (SELECT MAX(SEQ_NBR) AS SEQ_NBR, V2.ORDER_NBR, V2.LINE_NBR, V2.REV_NBR 
								FROM dbo.V_NEWS_DETAIL V2
									INNER JOIN (SELECT MAX(REV_NBR) AS REV_NBR, ORDER_NBR, LINE_NBR
												FROM dbo.V_NEWS_DETAIL 
												GROUP BY ORDER_NBR, LINE_NBR
												) V3 ON V3.ORDER_NBR = V2.ORDER_NBR AND V3.LINE_NBR = V2.LINE_NBR AND V3.REV_NBR = V2.REV_NBR 
								GROUP BY V2.ORDER_NBR, V2.LINE_NBR, V2.REV_NBR
								) DET ON DET.ORDER_NBR = V1.ORDER_NBR AND DET.LINE_NBR = V1.LINE_NBR AND DET.REV_NBR = V1.REV_NBR AND DET.SEQ_NBR = V1.SEQ_NBR 

				UNION

				SELECT ORDER_NBR, LINE_NBR, CAST(DATEPART(YY, POST_DATE) AS VARCHAR(4)) + RIGHT('0' + CAST(DATEPART(M, POST_DATE) AS VARCHAR(2)),2) AS ORDER_PERIOD
				FROM dbo.OUTDOOR_DETAIL 
				WHERE ACTIVE_REV = 1
				) ORDERS ON D.ORDER_NBR = ORDERS.ORDER_NBR AND D.ORDER_LINE_NBR = ORDERS.LINE_NBR 


UPDATE #ARDETAILS SET ORDER_DESC = MH.ORDER_DESC, CL_CODE = MH.CL_CODE, DIV_CODE = MH.DIV_CODE, PRD_CODE = MH.PRD_CODE, CMP_IDENTIFIER = MH.CMP_IDENTIFIER
FROM #ARDETAILS AP INNER JOIN MAGAZINE_HEADER MH ON MH.ORDER_NBR = AP.ORDER_NBR 
WHERE AP.ORDER_NBR IS NOT NULL AND AP.ORDER_DESC IS NULL AND DISBURSEMENT_TYPE = 'M'

UPDATE #ARDETAILS SET ORDER_DESC = MH.ORDER_DESC, CL_CODE = MH.CL_CODE, DIV_CODE = MH.DIV_CODE, PRD_CODE = MH.PRD_CODE, CMP_IDENTIFIER = MH.CMP_IDENTIFIER
FROM #ARDETAILS AP INNER JOIN NEWSPAPER_HEADER MH ON MH.ORDER_NBR = AP.ORDER_NBR 
WHERE AP.ORDER_NBR IS NOT NULL AND AP.ORDER_DESC IS NULL AND DISBURSEMENT_TYPE = 'N'

UPDATE #ARDETAILS SET ORDER_DESC = MH.ORDER_DESC, CL_CODE = MH.CL_CODE, DIV_CODE = MH.DIV_CODE, PRD_CODE = MH.PRD_CODE, CMP_IDENTIFIER = MH.CMP_IDENTIFIER
FROM #ARDETAILS AP INNER JOIN OUTDOOR_HEADER MH ON MH.ORDER_NBR = AP.ORDER_NBR 
WHERE AP.ORDER_NBR IS NOT NULL AND AP.ORDER_DESC IS NULL AND DISBURSEMENT_TYPE = 'O'

UPDATE #ARDETAILS SET ORDER_DESC = MH.ORDER_DESC, CL_CODE = MH.CL_CODE, DIV_CODE = MH.DIV_CODE, PRD_CODE = MH.PRD_CODE, CMP_IDENTIFIER = MH.CMP_IDENTIFIER
FROM #ARDETAILS AP INNER JOIN INTERNET_HEADER MH ON MH.ORDER_NBR = AP.ORDER_NBR 
WHERE AP.ORDER_NBR IS NOT NULL AND AP.ORDER_DESC IS NULL AND DISBURSEMENT_TYPE = 'I'

UPDATE #ARDETAILS SET ORDER_DESC = MH.ORDER_DESC, CL_CODE = MH.CL_CODE, DIV_CODE = MH.DIV_CODE, PRD_CODE = MH.PRD_CODE, CMP_IDENTIFIER = MH.CMP_IDENTIFIER
FROM #ARDETAILS AP INNER JOIN RADIO_HEADER MH ON MH.ORDER_NBR = AP.ORDER_NBR 
WHERE AP.ORDER_NBR IS NOT NULL AND AP.ORDER_DESC IS NULL AND DISBURSEMENT_TYPE = 'R'

UPDATE #ARDETAILS SET ORDER_DESC = MH.ORDER_DESC, CL_CODE = MH.CL_CODE, DIV_CODE = MH.DIV_CODE, PRD_CODE = MH.PRD_CODE, CMP_IDENTIFIER = MH.CMP_IDENTIFIER
FROM #ARDETAILS AP INNER JOIN RADIO_HDR MH ON MH.ORDER_NBR = AP.ORDER_NBR 
WHERE AP.ORDER_NBR IS NOT NULL AND AP.ORDER_DESC IS NULL AND DISBURSEMENT_TYPE = 'R'

UPDATE #ARDETAILS SET ORDER_DESC = MH.ORDER_DESC, CL_CODE = MH.CL_CODE, DIV_CODE = MH.DIV_CODE, PRD_CODE = MH.PRD_CODE, CMP_IDENTIFIER = MH.CMP_IDENTIFIER
FROM #ARDETAILS AP INNER JOIN TV_HEADER MH ON MH.ORDER_NBR = AP.ORDER_NBR 
WHERE AP.ORDER_NBR IS NOT NULL AND AP.ORDER_DESC IS NULL AND DISBURSEMENT_TYPE = 'T'

UPDATE #ARDETAILS SET ORDER_DESC = MH.ORDER_DESC, CL_CODE = MH.CL_CODE, DIV_CODE = MH.DIV_CODE, PRD_CODE = MH.PRD_CODE, CMP_IDENTIFIER = MH.CMP_IDENTIFIER
FROM #ARDETAILS AP INNER JOIN TV_HDR MH ON MH.ORDER_NBR = AP.ORDER_NBR 
WHERE AP.ORDER_NBR IS NOT NULL AND AP.ORDER_DESC IS NULL AND DISBURSEMENT_TYPE = 'T'

UPDATE #ARDETAILS SET AR_INV_DATE = AJ.AR_INV_DATE
FROM #ARDETAILS AP INNER JOIN ARINV_JOB AJ ON AJ.AR_INV_NBR = AP.AR_INV_NBR 
WHERE AP.JOB_NUMBER IS NOT NULL AND AP.AR_INV_DATE IS NULL

UPDATE #ARDETAILS SET AR_INV_DATE = AJ.AR_INV_DATE
FROM #ARDETAILS AP INNER JOIN ARINV_MEDIA AJ ON AJ.AR_INV_NBR = AP.AR_INV_NBR 
WHERE AP.ORDER_NBR IS NOT NULL AND AP.AR_INV_DATE IS NULL

--SELECT * FROM #ARDETAILS WHERE ORDER_NBR = 710

INSERT INTO #APAR
SELECT 0, DISBURSEMENT_TYPE,CL_CODE,DIV_CODE,PRD_CODE,JOB_NUMBER,JOB_DESC,JOB_COMPONENT_NBR,JOB_COMP_DESC,JOB_COMP,FNC_CODE,FNC_DESCRIPTION,FNC_TYPE,PO_NUMBER,PO_LINE_NUMBER,AP_COMMENT,
		AR_INV_NBR,AR_TYPE,AR_INV_DATE,ORDER_NBR,ORDER_LINE_NBR,ORDER_PERIOD,ORDER_DESC,GLACODE,SUM(NET_AMT),CMP_IDENTIFIER,SUM(VENDOR_TAX),NULL,NULL,
	SUM(AP.ADVANCE_BILLED),
	SUM(AP.AR_ADVANCE_COST_AMT),
	SUM(AP.AR_ADVANCE_COST_AMT_JOB),
	SUM(AP.AR_COST_AMOUNT),
	ISNULL(SUM(AP.BILLED_RECONCILED),0),
	SUM(AP.TOTAL_BILLED),
	SUM(AP.TOTAL_COST_BILLED),
	SUM(AP.TOTAL_CASH_RECEIPT),
	SUM(AP.TOTAL_CASH_FUNCTION),
	SUM(AP.TOTAL_CASH_ALL),NULL,NULL
FROM #ARDETAILS AP 
GROUP BY DISBURSEMENT_TYPE,CL_CODE,DIV_CODE,PRD_CODE,JOB_NUMBER,JOB_DESC,JOB_COMPONENT_NBR,JOB_COMP_DESC,JOB_COMP,FNC_CODE,FNC_DESCRIPTION,FNC_TYPE,PO_NUMBER,PO_LINE_NUMBER,AP_COMMENT,
			AR_INV_NBR,AR_TYPE,AR_INV_DATE,ORDER_NBR,ORDER_LINE_NBR,ORDER_PERIOD,ORDER_DESC,GLACODE,CMP_IDENTIFIER

INSERT INTO #APAR
SELECT AP_ID, DISBURSEMENT_TYPE,CL_CODE,DIV_CODE,PRD_CODE,JOB_NUMBER,JOB_DESC,JOB_COMPONENT_NBR,JOB_COMP_DESC,JOB_COMP,FNC_CODE,FNC_DESCRIPTION,FNC_TYPE,PO_NUMBER,PO_LINE_NUMBER,AP_COMMENT,
		AR_INV_NBR,AR_TYPE,AR_INV_DATE,ORDER_NBR,ORDER_LINE_NBR,ORDER_PERIOD,ORDER_DESC,GLACODE,NET_AMT,CMP_IDENTIFIER,VENDOR_TAX,NULL,NULL,
	0,0,0,0,0,0,0,0,0,0,NULL,NULL
FROM #APDETAILS AP 


UPDATE #APAR SET AP_ID = AP.AP_ID
FROM #APAR INNER JOIN #APDETAILS AP ON #APAR.JOB_NUMBER = AP.JOB_NUMBER AND #APAR.JOB_COMPONENT_NBR = AP.JOB_COMPONENT_NBR AND #APAR.FNC_CODE = AP.FNC_CODE AND #APAR.AR_INV_NBR = AP.AR_INV_NBR

UPDATE #APAR SET AP_ID = AP.AP_ID
FROM #APAR INNER JOIN #APDETAILS AP ON #APAR.ORDER_NBR = AP.ORDER_NBR AND #APAR.ORDER_LINE_NBR = AP.ORDER_LINE_NBR AND #APAR.AR_INV_NBR = AP.AR_INV_NBR

--SELECT * FROM #APAR WHERE JOB_NUMBER = 282

INSERT INTO #APAR_TOTAL
SELECT AP_ID, DISBURSEMENT_TYPE,CL_CODE,DIV_CODE,PRD_CODE,JOB_NUMBER,JOB_DESC,JOB_COMPONENT_NBR,JOB_COMP_DESC,JOB_COMP,FNC_CODE,FNC_DESCRIPTION,FNC_TYPE,PO_NUMBER,PO_LINE_NUMBER,AP_COMMENT,
		AR_INV_NBR,AR_TYPE,AR_INV_DATE,ORDER_NBR,ORDER_LINE_NBR,ORDER_PERIOD,ORDER_DESC,NULL,SUM(NET_AMT),CMP_IDENTIFIER,SUM(VENDOR_TAX),NULL,NULL,
	SUM(ADVANCE_BILLED),
	SUM(AR_ADVANCE_COST_AMT),
	SUM(AR_ADVANCE_COST_AMT_JOB),
	SUM(AR_COST_AMOUNT),
	SUM(BILLED_RECONCILED),
	SUM(TOTAL_BILLED),
	SUM(TOTAL_COST_BILLED),
	SUM(TOTAL_CASH_RECEIPT),
	SUM(TOTAL_CASH_FUNCTION),
	SUM(TOTAL_CASH_ALL),NULL,NULL
FROM #APAR
GROUP BY AP_ID,DISBURSEMENT_TYPE,CL_CODE,DIV_CODE,PRD_CODE,JOB_NUMBER,JOB_DESC,JOB_COMPONENT_NBR,JOB_COMP_DESC,JOB_COMP,FNC_CODE,FNC_DESCRIPTION,FNC_TYPE,PO_NUMBER,PO_LINE_NUMBER,AP_COMMENT,
			AR_INV_NBR,AR_TYPE,AR_INV_DATE,ORDER_NBR,ORDER_LINE_NBR,ORDER_PERIOD,ORDER_DESC,CMP_IDENTIFIER

UPDATE #APAR_TOTAL SET LAST_CR_CHECK = CC.CR_CHECK_NBR,	LAST_CR_CHECK_DATE = CC.CR_CHECK_DATE
FROM #APAR_TOTAL ARD LEFT OUTER JOIN (
					SELECT	[MaxGLEXACT] = MAX(CCD.GLEXACT),
							AR_INV_NBR,
							AR_INV_SEQ,
							AR_TYPE
					FROM CR_CLIENT_DTL CCD INNER JOIN CR_CLIENT CC ON CCD.REC_ID = CC.REC_ID					
					GROUP BY AR_INV_NBR,AR_INV_SEQ,AR_TYPE
					) LastCheckCR ON LastCheckCR.AR_INV_NBR = ARD.AR_INV_NBR AND LastCheckCR.AR_TYPE = ARD.AR_TYPE
	LEFT OUTER JOIN dbo.CR_CLIENT_DTL CCD ON LastCheckCR.AR_INV_NBR = CCD.AR_INV_NBR AND LastCheckCR.AR_TYPE = CCD.AR_TYPE AND LastCheckCR.MaxGLEXACT = CCD.GLEXACT 
	LEFT OUTER JOIN dbo.CR_CLIENT CC ON CCD.REC_ID = CC.REC_ID AND LastCheckCR.MaxGLEXACT = CCD.GLEXACT 	

UPDATE #APAR_TOTAL SET GLACODE = AP.GLACODE
FROM #APAR_TOTAL INNER JOIN #APDETAILS AP ON #APAR_TOTAL.AP_ID = AP.AP_ID

--SELECT * FROM #APAR_TOTAL  WHERE ORDER_NBR = 710
--ORDER BY JOB_NUMBER

--JOB
UPDATE #APAR_TOTAL SET ADVANCE_BILLED = (SELECT SUM(ADVANCE_BILLED) FROM #APAR_TOTAL B WHERE #APAR_TOTAL.JOB_NUMBER = B.JOB_NUMBER AND #APAR_TOTAL.JOB_COMPONENT_NBR = B.JOB_COMPONENT_NBR AND #APAR_TOTAL.FNC_CODE = B.FNC_CODE)
WHERE #APAR_TOTAL.AP_ID <> 0 AND JOB_NUMBER IS NOT NULL

UPDATE #APAR_TOTAL SET AR_ADVANCE_COST_AMT = (SELECT SUM(AR_ADVANCE_COST_AMT) FROM #APAR_TOTAL B WHERE #APAR_TOTAL.JOB_NUMBER = B.JOB_NUMBER AND #APAR_TOTAL.JOB_COMPONENT_NBR = B.JOB_COMPONENT_NBR AND #APAR_TOTAL.FNC_CODE = B.FNC_CODE)
WHERE #APAR_TOTAL.AP_ID <> 0 AND JOB_NUMBER IS NOT NULL

UPDATE #APAR_TOTAL SET AR_ADVANCE_COST_AMT_JOB = (SELECT SUM(ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.AB_NONRESALE_AMT,0)) FROM AR_SUMMARY AR WHERE #APAR_TOTAL.JOB_NUMBER = AR.JOB_NUMBER AND #APAR_TOTAL.JOB_COMPONENT_NBR = AR.JOB_COMPONENT_NBR)
WHERE #APAR_TOTAL.AP_ID <> 0 AND JOB_NUMBER IS NOT NULL

UPDATE #APAR_TOTAL SET AR_COST_AMOUNT = (SELECT SUM(AR_COST_AMOUNT) FROM #APAR_TOTAL B WHERE #APAR_TOTAL.JOB_NUMBER = B.JOB_NUMBER AND #APAR_TOTAL.JOB_COMPONENT_NBR = B.JOB_COMPONENT_NBR AND #APAR_TOTAL.FNC_CODE = B.FNC_CODE)
WHERE #APAR_TOTAL.AP_ID <> 0 AND JOB_NUMBER IS NOT NULL

--UPDATE #APAR_TOTAL SET BILLED_RECOGNIZED = (SELECT SUM(BILLED_RECOGNIZED) FROM #APAR_TOTAL B WHERE #APAR_TOTAL.JOB_NUMBER = B.JOB_NUMBER AND #APAR_TOTAL.JOB_COMPONENT_NBR = B.JOB_COMPONENT_NBR AND #APAR_TOTAL.FNC_CODE = B.FNC_CODE)
--WHERE #APAR_TOTAL.AP_ID <> 0 AND JOB_NUMBER IS NOT NULL

UPDATE #APAR_TOTAL SET TOTAL_CASH_RECEIPT = (SELECT SUM(TOTAL_CASH_RECEIPT) FROM #APAR_TOTAL B WHERE #APAR_TOTAL.AR_INV_NBR = B.AR_INV_NBR AND #APAR_TOTAL.AR_TYPE = B.AR_TYPE)
WHERE #APAR_TOTAL.AP_ID <> 0 AND JOB_NUMBER IS NOT NULL

UPDATE #APAR_TOTAL SET TOTAL_CASH_FUNCTION = (SELECT SUM(TOTAL_CASH_FUNCTION) FROM #APAR_TOTAL B WHERE #APAR_TOTAL.JOB_NUMBER = B.JOB_NUMBER AND #APAR_TOTAL.JOB_COMPONENT_NBR = B.JOB_COMPONENT_NBR AND #APAR_TOTAL.FNC_CODE = B.FNC_CODE)
WHERE #APAR_TOTAL.AP_ID <> 0 AND JOB_NUMBER IS NOT NULL

UPDATE #APAR_TOTAL SET TOTAL_CASH_ALL = (SELECT ISNULL(SUM(CR.PAYMENT_AMOUNT),0) FROM CR_CLIENT_DTL_PAYMENT CR WHERE #APAR_TOTAL.JOB_NUMBER = CR.JOB_NUMBER AND #APAR_TOTAL.JOB_COMPONENT_NBR = CR.JOB_COMPONENT_NBR)
WHERE #APAR_TOTAL.AP_ID <> 0 AND JOB_NUMBER IS NOT NULL

--ORDER
UPDATE #APAR_TOTAL SET ADVANCE_BILLED = (SELECT SUM(ADVANCE_BILLED) FROM #APAR_TOTAL B WHERE #APAR_TOTAL.ORDER_NBR = B.ORDER_NBR AND #APAR_TOTAL.ORDER_LINE_NBR = B.ORDER_LINE_NBR)
WHERE #APAR_TOTAL.AP_ID <> 0 AND ORDER_NBR IS NOT NULL

UPDATE #APAR_TOTAL SET AR_ADVANCE_COST_AMT = (SELECT SUM(AR_ADVANCE_COST_AMT) FROM #APAR_TOTAL B WHERE #APAR_TOTAL.ORDER_NBR = B.ORDER_NBR AND #APAR_TOTAL.ORDER_LINE_NBR = B.ORDER_LINE_NBR)
WHERE #APAR_TOTAL.AP_ID <> 0 AND ORDER_NBR IS NOT NULL

UPDATE #APAR_TOTAL SET AR_COST_AMOUNT = (SELECT SUM(AR_COST_AMOUNT) FROM #APAR_TOTAL B WHERE #APAR_TOTAL.ORDER_NBR = B.ORDER_NBR AND #APAR_TOTAL.ORDER_LINE_NBR = B.ORDER_LINE_NBR)
WHERE #APAR_TOTAL.AP_ID <> 0 AND ORDER_NBR IS NOT NULL

UPDATE #APAR_TOTAL SET BILLED_RECONCILED = (SELECT SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)) FROM AR_SUMMARY AR WHERE #APAR_TOTAL.ORDER_NBR = AR.ORDER_NBR AND #APAR_TOTAL.ORDER_LINE_NBR = AR.ORDER_LINE_NBR)
WHERE #APAR_TOTAL.AP_ID <> 0 AND ORDER_NBR IS NOT NULL									

UPDATE #APAR_TOTAL SET TOTAL_CASH_RECEIPT = (SELECT SUM(TOTAL_CASH_RECEIPT) FROM #APAR_TOTAL B WHERE #APAR_TOTAL.AR_INV_NBR = B.AR_INV_NBR AND #APAR_TOTAL.AR_TYPE = B.AR_TYPE)
WHERE #APAR_TOTAL.AP_ID <> 0 AND ORDER_NBR IS NOT NULL

UPDATE #APAR_TOTAL SET TOTAL_CASH_ALL = (SELECT ISNULL(SUM(CR.PAYMENT_AMOUNT),0) FROM CR_CLIENT_DTL_PAYMENT CR WHERE #APAR_TOTAL.ORDER_NBR = CR.ORDER_NBR AND #APAR_TOTAL.ORDER_LINE_NBR = CR.ORDER_LINE_NBR)
WHERE #APAR_TOTAL.AP_ID <> 0 AND ORDER_NBR IS NOT NULL


UPDATE #APAR_TOTAL SET NON_BILLABLE = (SELECT NON_BILLABLE FROM #APDETAILS AP WHERE #APAR_TOTAL.AP_ID = AP.AP_ID AND #APAR_TOTAL.JOB_NUMBER = AP.JOB_NUMBER AND #APAR_TOTAL.JOB_COMPONENT_NBR = AP.JOB_COMPONENT_NBR AND #APAR_TOTAL.FNC_CODE = AP.FNC_CODE)
WHERE #APAR_TOTAL.AP_ID <> 0 AND JOB_NUMBER IS NOT NULL

UPDATE #APAR_TOTAL SET POST_PERIOD = (SELECT POST_PERIOD FROM #APDETAILS AP WHERE #APAR_TOTAL.AP_ID = AP.AP_ID AND #APAR_TOTAL.JOB_NUMBER = AP.JOB_NUMBER AND #APAR_TOTAL.JOB_COMPONENT_NBR = AP.JOB_COMPONENT_NBR AND #APAR_TOTAL.FNC_CODE = AP.FNC_CODE)
WHERE #APAR_TOTAL.AP_ID <> 0 AND JOB_NUMBER IS NOT NULL

UPDATE #APAR_TOTAL SET NON_BILLABLE = (SELECT NON_BILLABLE FROM #APDETAILS AP WHERE #APAR_TOTAL.AP_ID = AP.AP_ID AND #APAR_TOTAL.ORDER_NBR = AP.ORDER_NBR AND #APAR_TOTAL.ORDER_LINE_NBR = AP.ORDER_LINE_NBR)
WHERE #APAR_TOTAL.AP_ID <> 0 AND ORDER_NBR IS NOT NULL

UPDATE #APAR_TOTAL SET POST_PERIOD = (SELECT POST_PERIOD FROM #APDETAILS AP WHERE #APAR_TOTAL.AP_ID = AP.AP_ID AND #APAR_TOTAL.ORDER_NBR = AP.ORDER_NBR AND #APAR_TOTAL.ORDER_LINE_NBR = AP.ORDER_LINE_NBR)
WHERE #APAR_TOTAL.AP_ID <> 0 AND ORDER_NBR IS NOT NULL

--SELECT * FROM #APAR_TOTAL  WHERE ORDER_NBR = 710
--ORDER BY JOB_NUMBER

SELECT
		[ID] = NEWID(),
		[VendorCode] = H.VN_FRL_EMP_CODE,
		[VendorName],
		[VendorAddress1],
		[VendorAddress2],
		[VendorAddress3],
		[VendorCity],
		[VendorCounty],
		[VendorState],
		[VendorZip],
		[VendorCountry],
		[VendorPhone],
		[VendorPhoneExt],
		[VendorFaxNumber],
		[VendorFaxExt],
		[VendorEmail],
		[VendorPayToCode],
		[VendorPayToName],
		[VendorPayToAddress1],
		[VendorPayToAddress2],
		[VendorPayToAddress3],
		[VendorPayToCity],
		[VendorPayToCounty],
		[VendorPayToState],
		[VendorPayToZip],
		[VendorPayToCountry],
		[VendorPayToPhone],
		[VendorPayToPhoneExt],
		[VendorPayToFax],
		[VendorPayToFaxExt],
		[VendorPayToEmail],
		[VendorDefaultCategory],
		[VendorAccountNumber],
		[VendorOfficeCode],
		[VendorOfficeName],
		[VendorVCCStatus],
		[VendorBankCode],
		[VendorBankName],
		[VendorSpecialTerms],
		[VendorNotes],
		[VendorServiceTaxCode] = VST.CODE,
		[VendorServiceTaxDescription] = VST.[DESCRIPTION],
		[SubjectToVST] = CASE WHEN ISNULL(H.SERVICE_TAX_ENABLED,0) = 0 THEN 'No' ELSE 'Yes' END,		
		[APIdentifier] = H.AP_ID,
		[APType] = CASE WHEN EMP_VENDOR = 1 THEN 'E' ELSE H.AP_TYPE END,
		[InvoiceNumber] = H.AP_INV_VCHR,
		[APDescription] = H.AP_DESC,
		[EntryDate] = H.CREATE_DATE,
		[EntryBy] = H.CREATED_BY,
        [ModifiedBy] = H.MODIFIED_BY,
        [ModifiedDate] = H.MODIFY_DATE,
        [BatchName] = H.BATCH_NAME,
		[InvoiceDate] = H.AP_INV_DATE,
		[DateToPay] = H.AP_DATE_PAY,
		[PostingPeriod] = H.POST_PERIOD,
		[APGLXact] = H.GLEXACT,
		[APGLAccountCode] = H.GLACODE,
		[APGLAccountDescription] = G.GLADESC,
		[DaysOpen] = CASE WHEN @aging_option_invoice_date = 1 THEN DATEDIFF(d, H.AP_INV_DATE, @aging_date)
						  WHEN @aging_option_invoice_date = 0 THEN DATEDIFF(d, H.AP_DATE_PAY, @aging_date) END,
		[OnPaymentHold] = CAST(COALESCE(H.PAYMENT_HOLD, 0) AS bit),
		[DisbursementType] = APD.DISBURSEMENT_TYPE,
		[ClientCode] = APD.CL_CODE,
		[ClientName] = C.CL_NAME,
		[DivisionCode] = APD.DIV_CODE,
		[DivisonName] = D.DIV_NAME,
		[ProductCode] = APD.PRD_CODE,
		[ProductDescription] = P.PRD_DESCRIPTION,
		[JobNumber] = APD.JOB_NUMBER,
		[JobDescription] = APD.JOB_DESC,
		[JobComponentNbr] = APD.JOB_COMPONENT_NBR,
		[JobComponentDesc] = APD.JOB_COMP_DESC,
		[JobComponent] = APD.JOB_COMP,
		[FunctionCode] = APD.FNC_CODE,
		[FunctionDescription] = APD.FNC_DESCRIPTION,
		[PONumber] = APD.PO_NUMBER,
		[POLineNumber] = APD.PO_LINE_NUMBER,
		[POIssuedByEmployeeCode] = PURCHASE_ORDER.EMP_CODE,
		[POIssuedByEmployeeName] = dbo.advfn_get_emp_name(PURCHASE_ORDER.EMP_CODE, 'FML'),
		[POLineTotal] = CASE WHEN APD.PO_LINE_NUMBER IS NULL THEN NULL ELSE ISNULL(PURCHASE_ORDER_DET.PO_EXT_AMOUNT, 0) + ISNULL(PURCHASE_ORDER_DET.EXT_MARKUP_AMT, 0) END,
		[OrderNumber] = APD.ORDER_NBR,
		[OrderLineNbr] = APD.ORDER_LINE_NBR,
		[OrderPeriod] = APD.ORDER_PERIOD,
		[OrderDescription] = APD.ORDER_DESC,
		[DetailGLAccountCode] = APD.GLACODE,
		[DetailGLAccountDescription] = G2.GLADESC,
		[APDetailComment] = APD.AP_COMMENT,
		[ARInvoiceNumberDirect] = APD.AR_INV_NBR,
		--[ARInvoiceType] = APD.AR_TYPE,
		[ARInvoiceDateDirect] = APD.AR_INV_DATE,
		[Billed] = CAST(CASE WHEN DISBURSEMENT_TYPE = 'P' AND APD.AR_INV_NBR IS NOT NULL THEN 1
						WHEN DISBURSEMENT_TYPE <> 'P' AND APD.ORDER_NBR IS NOT NULL AND 
						(SELECT SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)) FROM AR_SUMMARY AR WHERE APD.ORDER_NBR = AR.ORDER_NBR AND APD.ORDER_LINE_NBR = AR.ORDER_LINE_NBR) <> 0 THEN 1 ELSE 0 END AS bit),
		[VendorTax] = COALESCE(APD.VENDOR_TAX,0),
		[DetailAmount] = APD.NET_AMT,
		[TotalAmount] = COALESCE(APD.VENDOR_TAX,0) + COALESCE(APD.NET_AMT,0),
		--[PaidToVendor] = CASE WHEN COALESCE(Payment.TotalPaid, 0) = COALESCE(H.AP_INV_AMT, 0) + COALESCE(H.AP_SHIPPING, 0) + COALESCE(H.AP_SALES_TAX, 0) THEN COALESCE(APD.VENDOR_TAX,0) + COALESCE(APD.NET_AMT,0) ELSE 0 END,
		[PaidToVendor] = COALESCE(Payment.TotalPaid, 0),
		[VendorServiceTaxAmount] = COALESCE(Payment.VendorServiceTax, 0),
		[TotalPaidToVendor] = COALESCE(Payment.TotalPaid, 0) + COALESCE(Payment.VendorServiceTax, 0),		
		[LastCheckNumber] = APH.AP_CHK_NBR,
		[LastCheckDate] = APH.AP_CHK_DATE,	
		[LastCRCheckNumber] = APD.LAST_CR_CHECK,
		[LastCRCheckDate] = APD.LAST_CR_CHECK_DATE,	
		[BankCode] = APH.BK_CODE,
		[BankDescription] = BANK.BK_DESCRIPTION,
		--[BalanceDue] = CASE WHEN COALESCE(Payment.TotalPaid, 0) = COALESCE(H.AP_INV_AMT, 0) + COALESCE(H.AP_SHIPPING, 0) + COALESCE(H.AP_SALES_TAX, 0) THEN 0 ELSE COALESCE(APD.VENDOR_TAX,0) + COALESCE(APD.NET_AMT,0) END,
		[BalanceDue] = CAST(COALESCE(H.AP_INV_AMT, 0) + COALESCE(H.AP_SHIPPING, 0) + COALESCE(H.AP_SALES_TAX, 0) AS decimal(16,2)) - (COALESCE(Payment.TotalPaid, 0) + COALESCE(Payment.VendorServiceTax, 0)),
		[CampaignID] = CMP.CMP_IDENTIFIER,
		[CampaignCode] = CMP.CMP_CODE,
		[CampaignDescription] = CMP.CMP_NAME,
		[DaysToPayment] = CAST(CASE WHEN APH.AP_CHK_DATE IS NULL THEN DateDiff(d, GETDATE(), H.AP_DATE_PAY) ELSE NULL END AS int),
		[ApprovalStatus] = CASE AMA.[STATUS] 
							WHEN 1 THEN 'Pending Approval'
							WHEN 2 THEN 'Approved'
							WHEN 3 THEN 'Approved with Changes'
							WHEN 4 THEN 'Approval Not Required'
						   END,
		[NonBillable] = CASE WHEN APD.NON_BILLABLE = 1 THEN 'Yes' Else 'No' END,
		[DetailPostingPeriod] = APD.POST_PERIOD,
		[BilledReconciledCostAmount] = CASE WHEN DISBURSEMENT_TYPE = 'P' AND APD.AR_INV_NBR IS NOT NULL THEN COALESCE(APD.VENDOR_TAX,0) + COALESCE(APD.NET_AMT,0)
										    WHEN DISBURSEMENT_TYPE <> 'P' AND APD.ORDER_NBR IS NOT NULL THEN APD.BILLED_RECONCILED ELSE 0 END,
		[AdvanceCostAmountJobComp] = ISNULL(APD.AR_ADVANCE_COST_AMT_JOB,0),
		[AdvanceCostAmountFunction] = ISNULL(APD.AR_ADVANCE_COST_AMT,0),
		[AdvanceRetained] = ISNULL(APD.ADVANCE_BILLED,0),
		[CashReceivedDirect] = ISNULL(APD.TOTAL_CASH_RECEIPT,0),
		[CashReceivedFunction] = ISNULL(APD.TOTAL_CASH_FUNCTION,0),
		[CashReceivedAll] = ISNULL(APD.TOTAL_CASH_ALL,0)
FROM dbo.AP_HEADER H
	INNER JOIN #APIDS Ids ON Ids.AP_ID = H.AP_ID AND Ids.AP_SEQ = H.AP_SEQ 
	LEFT OUTER JOIN dbo.GLACCOUNT G ON H.GLACODE = G.GLACODE 
	LEFT OUTER JOIN #APAR_TOTAL APD ON APD.AP_ID = H.AP_ID 
	--LEFT OUTER JOIN #APAR ARD ON ARD.JOB_NUMBER = APD.JOB_NUMBER AND ARD.JOB_COMPONENT_NBR = APD.JOB_COMPONENT_NBR AND ARD.FNC_CODE = APD.FNC_CODE
	--LEFT OUTER JOIN #APAR ARD1 ON ARD1.ORDER_NBR = APD.ORDER_NBR AND ARD1.ORDER_LINE_NBR = APD.ORDER_LINE_NBR
	LEFT OUTER JOIN dbo.CLIENT C ON APD.CL_CODE = C.CL_CODE 
	LEFT OUTER JOIN dbo.DIVISION D ON APD.CL_CODE = D.CL_CODE AND APD.DIV_CODE = D.DIV_CODE 
	LEFT OUTER JOIN dbo.PRODUCT P ON APD.CL_CODE = P.CL_CODE AND APD.DIV_CODE = P.DIV_CODE AND APD.PRD_CODE = P.PRD_CODE 
	LEFT OUTER JOIN dbo.GLACCOUNT G2 ON APD.GLACODE = G2.GLACODE
	LEFT OUTER JOIN dbo.VENDOR_SERVICE_TAX VST ON H.VENDOR_SERVICE_TAX_ID = VST.VENDOR_SERVICE_TAX_ID 
	LEFT OUTER JOIN (
				SELECT
						[VendorName] = V.VN_NAME,
						[VendorAddress1] = V.VN_ADDRESS1,
						[VendorAddress2] = V.VN_ADDRESS2,
						[VendorAddress3] = V.VN_ADDRESS3,
						[VendorCity] = V.VN_CITY,
						[VendorCounty] = V.VN_COUNTY,
						[VendorState] = V.VN_STATE,
						[VendorZip] = V.VN_ZIP,
						[VendorCountry] = V.VN_COUNTRY,
						[VendorPhone] = V.VN_PHONE,
						[VendorPhoneExt] = V.VN_PHONE_EXT,
						[VendorFaxNumber] = V.VN_FAX_NUMBER,
						[VendorFaxExt] = V.VN_FAX_EXTENTION,
						[VendorEmail] = V.VN_EMAIL,
						[VendorDefaultCategory] = V.VN_CATEGORY,
						[VendorAccountNumber] = V.VN_ACCT_NBR,
						[VendorOfficeCode] = V.OFFICE_CODE,
						[VendorOfficeName] = O.OFFICE_NAME,
						[VendorPayToCode] = V.VN_PAY_TO_CODE,
						V.VN_CODE,
						[VendorPayToName] = V1.VN_PAY_TO_NAME,
						[VendorPayToAddress1] = V1.VN_PAY_TO_ADDRESS1,
						[VendorPayToAddress2] = V1.VN_PAY_TO_ADDRESS2,
						[VendorPayToAddress3] = V1.VN_PAY_TO_ADDRESS3,
						[VendorPayToCity] = V1.VN_PAY_TO_CITY,
						[VendorPayToCounty] = V1.VN_PAY_TO_COUNTY,
						[VendorPayToState] = V1.VN_PAY_TO_STATE,
						[VendorPayToZip] = V1.VN_PAY_TO_ZIP,
						[VendorPayToCountry] = V1.VN_PAY_TO_COUNTRY,
						[VendorPayToPhone] = V1.VN_PAY_TO_PHONE,
						[VendorPayToPhoneExt] = V1.VN_PAY_TO_EXT,
						[VendorPayToFax] = V1.VN_PAY_TO_FAX_NBR,
						[VendorPayToFaxExt] = V1.VN_PAY_TO_FAX_EXT,
						[VendorPayToEmail] = V1.VN_PAY_TO_EMAIL,
						EMP_VENDOR = COALESCE(V.EMP_VENDOR, 0),
						[VendorVCCStatus] = CASE WHEN ISNULL(V.VCC_STATUS, 0) = 0 THEN 'Open'
													WHEN V.VCC_STATUS = 1 THEN 'Accepted'
													WHEN V.VCC_STATUS = 2 THEN 'Declined'
											END,
						[VendorBankCode] = V.BK_CODE,
						[VendorBankName] = B.BK_DESCRIPTION,
						[VendorSpecialTerms] = CASE WHEN V.HAS_SPECIAL_TERMS = 1 THEN 'Y' ELSE 'N' END,
						[VendorNotes] = V.VN_NOTES
				FROM dbo.VENDOR V
					LEFT OUTER JOIN dbo.OFFICE O ON V.OFFICE_CODE = O.OFFICE_CODE
					LEFT OUTER JOIN dbo.VENDOR V1 ON V.VN_PAY_TO_CODE = V1.VN_CODE 
					LEFT OUTER JOIN dbo.BANK B ON V.BK_CODE = B.BK_CODE
				) V ON H.VN_FRL_EMP_CODE = V.VN_CODE 
	LEFT OUTER JOIN (
					SELECT	[TotalPaid] = SUM(COALESCE(AP_CHK_AMT, 0)),
							[VendorServiceTax] = SUM(COALESCE(VENDOR_SERVICE_TAX,0)),
							AP_ID
					FROM dbo.AP_PMT_HIST
					WHERE AP_PMT_HIST.POST_PERIOD BETWEEN @post_period_from AND @post_period_to 	
					GROUP BY AP_ID
					) Payment ON Payment.AP_ID = H.AP_ID
	LEFT OUTER JOIN (
					SELECT	[MaxGLEXACT] = MAX(APH.GLEXACT),
							AP_ID
					FROM dbo.AP_PMT_HIST APH
						INNER JOIN dbo.CHECK_REGISTER CR ON APH.BK_CODE = CR.BK_CODE AND APH.AP_CHK_NBR = CR.CHECK_NBR AND APH.CHK_SEQ = CR.CHK_SEQ 
					WHERE	(VOID_FLAG IS NULL OR VOID_FLAG = 0) AND APH.POST_PERIOD BETWEEN @post_period_from AND @post_period_to 	
					GROUP BY AP_ID
					) LastCheck ON LastCheck.AP_ID = H.AP_ID
	LEFT OUTER JOIN dbo.AP_PMT_HIST APH ON LastCheck.AP_ID = APH.AP_ID AND LastCheck.MaxGLEXACT = APH.GLEXACT 
	--LEFT OUTER JOIN (
	--				SELECT	[MaxGLEXACT] = MAX(CCD.GLEXACT),
	--						AR_INV_NBR,
	--						AR_INV_SEQ,
	--						AR_TYPE
	--				FROM CR_CLIENT_DTL CCD INNER JOIN CR_CLIENT CC ON CCD.REC_ID = CC.REC_ID					
	--				GROUP BY AR_INV_NBR,AR_INV_SEQ,AR_TYPE
	--				) LastCheckCR ON LastCheckCR.AR_INV_NBR = ARD.AR_INV_NBR AND LastCheckCR.AR_TYPE = APD.AR_TYPE
	--LEFT OUTER JOIN dbo.CR_CLIENT_DTL CCD ON LastCheckCR.AR_INV_NBR = CCD.AR_INV_NBR AND LastCheckCR.AR_TYPE = CCD.AR_TYPE AND LastCheckCR.MaxGLEXACT = CCD.GLEXACT 
	--LEFT OUTER JOIN dbo.CR_CLIENT CC ON CCD.REC_ID = CC.REC_ID AND LastCheckCR.MaxGLEXACT = CCD.GLEXACT 	
	LEFT OUTER JOIN (
					SELECT SUM(NET) AS SUM_NET_AMT, AP_ID
					FROM (
							SELECT SUM(COALESCE(NET_AMT, 0)) AS NET, AP_ID
							FROM dbo.AP_INTERNET
							GROUP BY AP_ID UNION ALL

							SELECT SUM(COALESCE(NET_AMT, 0)) AS NET, AP_ID
							FROM dbo.AP_MAGAZINE 
							GROUP BY AP_ID UNION ALL

							SELECT SUM(COALESCE(NET_AMT, 0)) AS NET, AP_ID
							FROM dbo.AP_NEWSPAPER
							GROUP BY AP_ID UNION ALL

							SELECT SUM(COALESCE(NET_AMT, 0)) AS NET, AP_ID
							FROM dbo.AP_OUTDOOR
							GROUP BY AP_ID UNION ALL

							SELECT SUM(COALESCE(EXT_NET_AMT, 0)) AS NET, AP_ID
							FROM dbo.AP_RADIO
							GROUP BY AP_ID UNION ALL

							SELECT SUM(COALESCE(EXT_NET_AMT, 0)) AS NET, AP_ID
							FROM dbo.AP_TV
							GROUP BY AP_ID UNION ALL
							
							SELECT SUM(COALESCE(AP_PROD_EXT_AMT, 0)) AS NET, AP_ID
							FROM dbo.AP_PRODUCTION APP
							GROUP BY AP_ID UNION ALL
							
							SELECT SUM(AP_GL_AMT), AP_ID
							FROM dbo.AP_GL_DIST
							GROUP BY AP_ID
							
						) DetailAmounts
					GROUP BY AP_ID
					) DetailAmount ON DetailAmount.AP_ID = H.AP_ID
	LEFT OUTER JOIN dbo.CAMPAIGN CMP ON APD.CMP_IDENTIFIER = CMP.CMP_IDENTIFIER
	LEFT OUTER JOIN dbo.BANK ON BANK.BK_CODE = APH.BK_CODE
	LEFT OUTER JOIN dbo.PURCHASE_ORDER ON APD.PO_NUMBER = PURCHASE_ORDER.PO_NUMBER
	LEFT OUTER JOIN dbo.PURCHASE_ORDER_DET ON APD.PO_NUMBER = PURCHASE_ORDER_DET.PO_NUMBER AND
											  APD.PO_LINE_NUMBER = PURCHASE_ORDER_DET.LINE_NUMBER
	LEFT OUTER JOIN dbo.AP_MEDIA_APPROVAL AMA ON AMA.AP_ID = H.AP_ID AND AMA.ORDER_NBR = APD.ORDER_NBR AND AMA.LINE_NBR = APD.ORDER_LINE_NBR AND AMA.ACTIVE_REV = 1
WHERE
		((@open_ap_only = 1 AND COALESCE(Payment.TotalPaid, 0) <> (COALESCE(H.AP_INV_AMT, 0) + COALESCE(H.AP_SHIPPING, 0) + COALESCE(H.AP_SALES_TAX, 0)))
		OR
		(@open_ap_only = 0)) --AND APD.ORDER_NBR = 710--AND APD.JOB_NUMBER = 282

GO
