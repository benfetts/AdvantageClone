if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[advsp_ap_invoice_detail_report]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[advsp_ap_invoice_detail_report]
GO

CREATE PROCEDURE advsp_ap_invoice_detail_report 
		@post_period_from varchar(6), @post_period_to varchar(6),
		@open_ap_only bit, @include_broadcast_line_month bit,
		@aging_date smalldatetime, @aging_option_invoice_date bit,
		@debug bit = 0
WITH RECOMPILE
AS

--declare @post_period_from varchar(6), @post_period_to varchar(6),
--		@open_ap_only bit, @include_broadcast_line_month bit,
--		@aging_date smalldatetime, @aging_option_invoice_date bit,
--		@debug bit = 0
		
--set @post_period_from = '202006'
--set @post_period_to = '202007'
--set @open_ap_only = 0
--set @include_broadcast_line_month = 0
--set @aging_date = '7/1/2020'
--set @aging_option_invoice_date = 1

--*PJH 05/14/20 - Added NETCHARGES to [TotalAmount] calc

SET NOCOUNT ON

--DROP TABLE #APIDS
--DROP TABLE #APDETAILS

CREATE TABLE #APIDS (
	AP_ID int NOT NULL,
	AP_SEQ smallint NOT NULL,
	AP_PMT_AMT decimal(14,2)
)
CREATE NONCLUSTERED INDEX ix_tempAPIDS ON #APIDS (AP_ID,AP_SEQ);

CREATE TABLE #APDETAILS (
	AP_ID int NOT NULL,
	DISBURSEMENT_TYPE char(1) NOT NULL,
	CL_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	DIV_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	PRD_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_NUMBER int NULL,
	JOB_DESC varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_COMPONENT_NBR smallint NULL,
	JOB_COMP_DESC varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JOB_COMP varchar(10) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_DESCRIPTION varchar(50) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FNC_TYPE varchar(2) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	PO_NUMBER int NULL,
	PO_LINE_NUMBER smallint NULL,
	AP_COMMENT varchar(max) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	AR_INV_NBR int NULL,
	AR_TYPE varchar(3) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	AR_INV_DATE datetime NULL,
	ORDER_NBR int NULL,
	ORDER_LINE_NBR smallint NULL,
	ORDER_PERIOD varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	ORDER_DESC varchar(40) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	GLACODE varchar(30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	NET_AMT decimal(14, 2) NULL,
	CMP_IDENTIFIER int NULL,
	VENDOR_TAX decimal(14,2) NULL,
	NON_BILLABLE smallint,
	POST_PERIOD varchar(8),
	MODIFIED_BY varchar(100),
	MODIFY_DATE smalldatetime, 
	CLIENT_PO varchar(40),
	BILLED_NET_AMT decimal(14, 2) NULL,
	BILLED_GROSS_AMT decimal(14, 2) NULL,
	PARTIAL_PAYMENT decimal(14, 2) NULL,
	NETCHARGES decimal(14, 2) NULL
)
CREATE NONCLUSTERED INDEX ix_tempAPDETAILS ON #APDETAILS (AP_ID);
--CREATE NONCLUSTERED INDEX [ix_tempAPDETAILS2] ON #APDETAILS ([DISBURSEMENT_TYPE]) INCLUDE ([AP_ID],[ORDER_NBR],[ORDER_LINE_NBR])
--CREATE NONCLUSTERED INDEX [ix_tempAPDETAILS3] ON #APDETAILS ([DISBURSEMENT_TYPE]) INCLUDE ([AP_ID],[PO_NUMBER],[PO_LINE_NUMBER])
--CREATE NONCLUSTERED INDEX [ix_tempAPDETAILS4] ON #APDETAILS ([DISBURSEMENT_TYPE]) INCLUDE ([ORDER_NBR])
--CREATE NONCLUSTERED INDEX [ix_tempAPDETAILS5] ON #APDETAILS ([DISBURSEMENT_TYPE]) INCLUDE ([AP_ID],[JOB_NUMBER],[JOB_COMPONENT_NBR],[FNC_CODE])
--CREATE NONCLUSTERED INDEX [ix_tempAPDETAILS6] ON #APDETAILS ([ORDER_NBR],[ORDER_LINE_NBR]) INCLUDE ([AP_ID])

CREATE TABLE #payments (
	ID int NOT NULL IDENTITY(1,1) PRIMARY KEY,
	[AP_ID] int,
	--[POST_PERIOD] varchar(6),
	[TotalPaid] decimal(14, 2),
	[DiscountAmount] decimal(14, 2),
	[VendorServiceTax] decimal(14, 2),
	UNIQUE NONCLUSTERED (AP_ID, [ID])
	)

CREATE TABLE #other_totals_billed (
	AP_ID int NULL,
	[SOURCE] varchar(1),
	AR_INV_NBR int,
	BILLED_AMT decimal(14, 2) NULL,
	UNIQUE NONCLUSTERED (AP_ID, AR_INV_NBR, [SOURCE])
	)

CREATE TABLE #order_totals_billed (
	ID int NOT NULL IDENTITY(1,1) PRIMARY KEY,
	ORDER_NBR int NULL,
	LINE_NBR smallint NULL,
	AP_ID int NULL,
	BILLED_AMT decimal(14, 2) NULL,
	BILLED_NET_AMT decimal(14, 2) NULL,
	BILLED_GROSS_AMT decimal(14, 2) NULL,
	BILLED_COMM_AMT decimal(14, 2) NULL,
	BILLED_REBATE_AMT decimal(14, 2) NULL,
	UNBILLED_AMT decimal(14, 2) NULL,
	UNIQUE NONCLUSTERED (ORDER_NBR, LINE_NBR, [ID])
)

CREATE TABLE #other_totals_billed_sum (
	AP_ID int NULL,
	--[SOURCE] varchar(1),
	BILLED_AMT decimal(14, 2) NULL
	)

CREATE TABLE #@order_totals_all (
	ID int NOT NULL IDENTITY(1,1) PRIMARY KEY,
	ORDER_NBR int NULL,
	LINE_NBR smallint NULL,
	BILLED_AMT decimal(14, 2) NULL,
	UNIQUE NONCLUSTERED (ORDER_NBR, LINE_NBR, [ID])
	)

CREATE TABLE #cash_receipts (
	AP_ID int, 
	AR_INV_NBR int,
	REC_ID int,
	CRPayment decimal(14, 2) NULL,
	CRAdjustment decimal(14, 2) NULL,
	BalanceAmount decimal(14, 2) NULL,
	ORDER_NBR int NULL,
	LINE_NBR smallint NULL,
	UNIQUE NONCLUSTERED (AP_ID, AR_INV_NBR, REC_ID, ORDER_NBR, LINE_NBR)
)

CREATE TABLE #ar_data (
	ID int NOT NULL IDENTITY(1,1) PRIMARY KEY,
	ORDER_NBR int,
	LINE_NBR int,
	AR_INV_NBR int,
	AR_TYPE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	AR_INV_SEQ int,
	GROUP_NBR int,
	UNIQUE NONCLUSTERED (GROUP_NBR, ORDER_NBR, LINE_NBR, [ID])
	)

INSERT #APIDS
SELECT AP_ID, MAX(AP_SEQ) AP_SEQ, SUM(CAST(COALESCE(AP_INV_AMT, 0) + COALESCE(AP_SHIPPING, 0) + COALESCE(AP_SALES_TAX, 0) AS decimal(16,2)))
FROM dbo.AP_HEADER H
WHERE H.POST_PERIOD BETWEEN @post_period_from AND @post_period_to 
GROUP BY AP_ID


IF @debug = 1 SELECT getdate() 'after AP_HEADER'

INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, AR_INV_NBR, AR_TYPE, AR_INV_DATE, POST_PERIOD, NETCHARGES)--, MODIFIED_BY, MODIFY_DATE)
SELECT A.AP_ID, 'I', IH.CL_CODE, IH.DIV_CODE, IH.PRD_CODE, API.ORDER_NBR, API.ORDER_LINE_NBR, IH.ORDER_DESC, API.GLACODE, SUM(API.NET_AMT), IH.CMP_IDENTIFIER, SUM(API.VENDOR_TAX), NULL, NULL, NULL ,API.POST_PERIOD, SUM(API.NETCHARGES) -- API.MODIFIED_BY, API.MODIFY_DATE  --
FROM dbo.AP_INTERNET API 
	INNER JOIN dbo.INTERNET_HEADER IH ON IH.ORDER_NBR = API.ORDER_NBR 
	INNER JOIN (SELECT DISTINCT AP_ID, MAX(AP_SEQ) AS AP_SEQ FROM #APIDS GROUP BY AP_ID) A ON API.AP_ID = A.AP_ID--  #APIDS A ON API.AP_ID = A.AP_ID 
	--LEFT OUTER JOIN dbo.INTERNET_DETAIL ID ON API.ORDER_NBR = ID.ORDER_NBR AND API.ORDER_LINE_NBR = ID.LINE_NBR AND ID.ACTIVE_REV = 1
	-- OUTER JOIN dbo.ACCT_REC AR ON ID.AR_INV_NBR = AR.AR_INV_NBR AND ID.AR_INV_SEQ = AR.AR_INV_SEQ AND ID.AR_TYPE = AR.AR_TYPE
WHERE API.POST_PERIOD BETWEEN @post_period_from AND @post_period_to  --(API.MODIFY_DELETE IS NULL OR API.MODIFY_DELETE = 0)
GROUP BY A.AP_ID, IH.CL_CODE, IH.DIV_CODE, IH.PRD_CODE, API.ORDER_NBR, API.ORDER_LINE_NBR, IH.ORDER_DESC, API.GLACODE, IH.CMP_IDENTIFIER,API.POST_PERIOD--, API.MODIFIED_BY, API.MODIFY_DATE

IF @debug = 1 SELECT getdate() 'after AP_INTERNET'

INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, AR_INV_NBR, AR_TYPE, AR_INV_DATE, POST_PERIOD, NETCHARGES)--, MODIFIED_BY, MODIFY_DATE)
SELECT A.AP_ID, 'M', VMH.CL_CODE, VMH.DIV_CODE, VMH.PRD_CODE, APM.ORDER_NBR, APM.ORDER_LINE_NBR, VMH.ORDER_DESC, APM.GLACODE, SUM(APM.NET_AMT), VMH.CMP_IDENTIFIER, SUM(APM.VENDOR_TAX),NULL, NULL, NULL ,APM.POST_PERIOD, SUM(APM.NETCHARGES)--, APM.MODIFIED_BY, APM.MODIFY_DATE --
FROM dbo.AP_MAGAZINE APM
	INNER JOIN dbo.V_MAG_HEADER VMH ON VMH.ORDER_NBR = APM.ORDER_NBR 
	INNER JOIN (SELECT DISTINCT AP_ID, MAX(AP_SEQ) AS AP_SEQ FROM #APIDS GROUP BY AP_ID) A ON APM.AP_ID = A.AP_ID--  #APIDS A ON APM.AP_ID = A.AP_ID 
	--LEFT OUTER JOIN dbo.V_MAG_DETAIL VMD ON APM.ORDER_NBR = VMD.ORDER_NBR AND APM.ORDER_LINE_NBR = VMD.LINE_NBR AND VMD.ACTIVE_REV = 1
	--LEFT OUTER JOIN dbo.ACCT_REC AR ON VMD.AR_INV_NBR = AR.AR_INV_NBR AND VMD.AR_INV_SEQ = AR.AR_INV_SEQ AND VMD.AR_TYPE = AR.AR_TYPE 
WHERE APM.POST_PERIOD BETWEEN @post_period_from AND @post_period_to-- (APM.MODIFY_DELETE IS NULL OR APM.MODIFY_DELETE = 0)
GROUP BY A.AP_ID, VMH.CL_CODE, VMH.DIV_CODE, VMH.PRD_CODE, APM.ORDER_NBR, APM.ORDER_LINE_NBR, VMH.ORDER_DESC, APM.GLACODE,VMH.CMP_IDENTIFIER, APM.POST_PERIOD--, APM.MODIFIED_BY, APM.MODIFY_DATE

IF @debug = 1 SELECT getdate() 'after AP_MAGAZINE'

INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, AR_INV_NBR, AR_TYPE, AR_INV_DATE, POST_PERIOD,NETCHARGES)--, MODIFIED_BY, MODIFY_DATE)
SELECT A.AP_ID, 'N', VNH.CL_CODE, VNH.DIV_CODE, VNH.PRD_CODE, APN.ORDER_NBR, APN.ORDER_LINE_NBR, VNH.ORDER_DESC, APN.GLACODE, SUM(NET_AMT), VNH.CMP_IDENTIFIER, SUM(APN.VENDOR_TAX), NULL, NULL, NULL ,APN.POST_PERIOD, SUM(APN.NETCHARGES)--, APN.MODIFIED_BY, APN.MODIFY_DATE --
FROM dbo.AP_NEWSPAPER APN
	INNER JOIN dbo.V_NEWS_HEADER VNH ON VNH.ORDER_NBR = APN.ORDER_NBR 
	INNER JOIN (SELECT DISTINCT AP_ID, MAX(AP_SEQ) AS AP_SEQ FROM #APIDS GROUP BY AP_ID) A ON APN.AP_ID = A.AP_ID--  #APIDS A ON APN.AP_ID = A.AP_ID 
	--LEFT OUTER JOIN dbo.V_NEWS_DETAIL VND ON APN.ORDER_NBR = VND.ORDER_NBR AND APN.ORDER_LINE_NBR = VND.LINE_NBR AND VND.ACTIVE_REV = 1
	--LEFT OUTER JOIN dbo.ACCT_REC AR ON VND.AR_INV_NBR = AR.AR_INV_NBR AND VND.AR_INV_SEQ = AR.AR_INV_SEQ AND VND.AR_TYPE = AR.AR_TYPE 
WHERE APN.POST_PERIOD BETWEEN @post_period_from AND @post_period_to-- (APN.MODIFY_DELETE IS NULL OR APN.MODIFY_DELETE = 0)
GROUP BY A.AP_ID,  VNH.CL_CODE, VNH.DIV_CODE, VNH.PRD_CODE, APN.ORDER_NBR, APN.ORDER_LINE_NBR, VNH.ORDER_DESC, APN.GLACODE,VNH.CMP_IDENTIFIER,APN.POST_PERIOD--, APN.MODIFIED_BY, APN.MODIFY_DATE

IF @debug = 1 SELECT getdate() 'after AP_NEWSPAPER'

INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, AR_INV_NBR, AR_TYPE, AR_INV_DATE, POST_PERIOD, NETCHARGES)--, MODIFIED_BY, MODIFY_DATE)
SELECT A.AP_ID, 'O', OH.CL_CODE, OH.DIV_CODE, OH.PRD_CODE, APO.ORDER_NBR, APO.ORDER_LINE_NBR, OH.ORDER_DESC, APO.GLACODE, SUM(APO.NET_AMT), OH.CMP_IDENTIFIER, SUM(APO.VENDOR_TAX), NULL, NULL, NULL ,APO.POST_PERIOD, SUM(APO.NETCHARGES)--, APO.MODIFIED_BY, APO.MODIFY_DATE --
FROM dbo.AP_OUTDOOR APO
	INNER JOIN dbo.OUTDOOR_HEADER OH ON OH.ORDER_NBR = APO.ORDER_NBR 
	INNER JOIN (SELECT DISTINCT AP_ID, MAX(AP_SEQ) AS AP_SEQ FROM #APIDS GROUP BY AP_ID) A ON APO.AP_ID = A.AP_ID--  #APIDS A ON APO.AP_ID = A.AP_ID 
	--LEFT OUTER JOIN dbo.OUTDOOR_DETAIL OD ON APO.ORDER_NBR = OD.ORDER_NBR AND APO.ORDER_LINE_NBR = OD.LINE_NBR AND OD.ACTIVE_REV = 1
	--LEFT OUTER JOIN dbo.ACCT_REC AR ON OD.AR_INV_NBR = AR.AR_INV_NBR AND OD.AR_INV_SEQ = AR.AR_INV_SEQ AND OD.AR_TYPE = AR.AR_TYPE 
WHERE APO.POST_PERIOD BETWEEN @post_period_from AND @post_period_to-- (APO.MODIFY_DELETE IS NULL OR APO.MODIFY_DELETE = 0)
GROUP BY A.AP_ID, OH.CL_CODE, OH.DIV_CODE, OH.PRD_CODE, APO.ORDER_NBR, APO.ORDER_LINE_NBR, OH.ORDER_DESC, APO.GLACODE,OH.CMP_IDENTIFIER,APO.POST_PERIOD--, APO.MODIFIED_BY, APO.MODIFY_DATE

IF @debug = 1 SELECT getdate() 'after AP_OUTDOOR'

IF @include_broadcast_line_month = 1
	BEGIN
		INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, ORDER_PERIOD, POST_PERIOD, NETCHARGES)--, MODIFIED_BY, MODIFY_DATE)
		SELECT A.AP_ID, 'R', RadioOrders.CL_CODE, RadioOrders.DIV_CODE, RadioOrders.PRD_CODE, APR.ORDER_NBR, APR.ORDER_LINE_NBR, RadioOrders.ORDER_DESC, APR.GLACODE, SUM(APR.EXT_NET_AMT), RadioOrders.CMP_IDENTIFIER, SUM(APR.VENDOR_TAX),
			CAST(APR.BRDCAST_YEAR AS varchar(4)) + CASE APR.BRDCAST_MONTH
													WHEN 'JAN' THEN '01'
													WHEN 'FEB' THEN '02'
													WHEN 'MAR' THEN '03'
													WHEN 'APR' THEN '04'
													WHEN 'MAY' THEN '05'
													WHEN 'JUN' THEN '06'
													WHEN 'JUL' THEN '07'
													WHEN 'AUG' THEN '08'
													WHEN 'SEP' THEN '09'
													WHEN 'OCT' THEN '10'
													WHEN 'NOV' THEN '11'
													WHEN 'DEC' THEN '12' END,APR.POST_PERIOD, SUM(APR.NETCHARGES)--, APR.MODIFIED_BY, APR.MODIFY_DATE
		FROM dbo.AP_RADIO APR
			INNER JOIN (
						SELECT CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.RADIO_HDR
						UNION 
						SELECT RH.CL_CODE, RH.DIV_CODE, RH.PRD_CODE, ORDER_NBR, C.CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.RADIO_HEADER RH
							LEFT OUTER JOIN dbo.CAMPAIGN C ON RH.CMP_IDENTIFIER = C.CMP_IDENTIFIER
						) RadioOrders ON RadioOrders.ORDER_NBR = APR.ORDER_NBR 
			INNER JOIN (SELECT DISTINCT AP_ID, MAX(AP_SEQ) AS AP_SEQ FROM #APIDS GROUP BY AP_ID) A ON APR.AP_ID = A.AP_ID--  #APIDS A ON APR.AP_ID = A.AP_ID 
		WHERE APR.POST_PERIOD BETWEEN @post_period_from AND @post_period_to-- (APR.MODIFY_DELETE IS NULL OR APR.MODIFY_DELETE = 0)
GROUP BY A.AP_ID, RadioOrders.CL_CODE, RadioOrders.DIV_CODE, RadioOrders.PRD_CODE, APR.ORDER_NBR, APR.ORDER_LINE_NBR, RadioOrders.ORDER_DESC, APR.GLACODE,RadioOrders.CMP_IDENTIFIER,
		 CAST(APR.BRDCAST_YEAR AS varchar(4)) + CASE APR.BRDCAST_MONTH
													WHEN 'JAN' THEN '01'
													WHEN 'FEB' THEN '02'
													WHEN 'MAR' THEN '03'
													WHEN 'APR' THEN '04'
													WHEN 'MAY' THEN '05'
													WHEN 'JUN' THEN '06'
													WHEN 'JUL' THEN '07'
													WHEN 'AUG' THEN '08'
													WHEN 'SEP' THEN '09'
													WHEN 'OCT' THEN '10'
													WHEN 'NOV' THEN '11'
													WHEN 'DEC' THEN '12' END,APR.POST_PERIOD--, APR.MODIFIED_BY, APR.MODIFY_DATE
	END
ELSE
	BEGIN
		INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, ORDER_PERIOD, POST_PERIOD, NETCHARGES)--, MODIFIED_BY, MODIFY_DATE)
		SELECT A.AP_ID, 'R', RadioOrders.CL_CODE, RadioOrders.DIV_CODE, RadioOrders.PRD_CODE, APR.ORDER_NBR, APR.ORDER_LINE_NBR, RadioOrders.ORDER_DESC, APR.GLACODE, SUM(APR.EXT_NET_AMT), RadioOrders.CMP_IDENTIFIER, SUM(APR.VENDOR_TAX),
			CAST(APR.BRDCAST_YEAR AS varchar(4)) + CASE APR.BRDCAST_MONTH
													WHEN 'JAN' THEN '01'
													WHEN 'FEB' THEN '02'
													WHEN 'MAR' THEN '03'
													WHEN 'APR' THEN '04'
													WHEN 'MAY' THEN '05'
													WHEN 'JUN' THEN '06'
													WHEN 'JUL' THEN '07'
													WHEN 'AUG' THEN '08'
													WHEN 'SEP' THEN '09'
													WHEN 'OCT' THEN '10'
													WHEN 'NOV' THEN '11'
													WHEN 'DEC' THEN '12' END,APR.POST_PERIOD, SUM(APR.NETCHARGES)--, APR.MODIFIED_BY, APR.MODIFY_DATE
		FROM dbo.AP_RADIO APR
			INNER JOIN (
						SELECT CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.RADIO_HDR
						UNION 
						SELECT RH.CL_CODE, RH.DIV_CODE, RH.PRD_CODE, ORDER_NBR, C.CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.RADIO_HEADER RH
							LEFT OUTER JOIN dbo.CAMPAIGN C ON RH.CMP_IDENTIFIER = C.CMP_IDENTIFIER
						) RadioOrders ON RadioOrders.ORDER_NBR = APR.ORDER_NBR 
			INNER JOIN (SELECT DISTINCT AP_ID, MAX(AP_SEQ) AS AP_SEQ FROM #APIDS GROUP BY AP_ID) A ON APR.AP_ID = A.AP_ID--  #APIDS A ON APR.AP_ID = A.AP_ID 
		WHERE APR.POST_PERIOD BETWEEN @post_period_from AND @post_period_to --(APR.MODIFY_DELETE IS NULL OR APR.MODIFY_DELETE = 0)
GROUP BY A.AP_ID, RadioOrders.CL_CODE, RadioOrders.DIV_CODE, RadioOrders.PRD_CODE, APR.ORDER_NBR, APR.ORDER_LINE_NBR, RadioOrders.ORDER_DESC, APR.GLACODE,RadioOrders.CMP_IDENTIFIER,
		 CAST(APR.BRDCAST_YEAR AS varchar(4)) + CASE APR.BRDCAST_MONTH
													WHEN 'JAN' THEN '01'
													WHEN 'FEB' THEN '02'
													WHEN 'MAR' THEN '03'
													WHEN 'APR' THEN '04'
													WHEN 'MAY' THEN '05'
													WHEN 'JUN' THEN '06'
													WHEN 'JUL' THEN '07'
													WHEN 'AUG' THEN '08'
													WHEN 'SEP' THEN '09'
													WHEN 'OCT' THEN '10'
													WHEN 'NOV' THEN '11'
													WHEN 'DEC' THEN '12' END,APR.POST_PERIOD--, APR.MODIFIED_BY, APR.MODIFY_DATE
	END
IF @debug = 1 SELECT getdate() 'after AP_RADIO'

IF @include_broadcast_line_month = 1
	BEGIN
		INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, ORDER_PERIOD, POST_PERIOD, NETCHARGES)--, MODIFIED_BY, MODIFY_DATE)
		SELECT A.AP_ID, 'T', TvOrders.CL_CODE, TvOrders.DIV_CODE, TvOrders.PRD_CODE, APT.ORDER_NBR, APT.ORDER_LINE_NBR, TvOrders.ORDER_DESC, APT.GLACODE, SUM(APT.EXT_NET_AMT), TvOrders.CMP_IDENTIFIER, SUM(APT.VENDOR_TAX),
			CAST(APT.BRDCAST_YEAR AS varchar(4)) + CASE APT.BRDCAST_MONTH
													WHEN 'JAN' THEN '01'
													WHEN 'FEB' THEN '02'
													WHEN 'MAR' THEN '03'
													WHEN 'APR' THEN '04'
													WHEN 'MAY' THEN '05'
													WHEN 'JUN' THEN '06'
													WHEN 'JUL' THEN '07'
													WHEN 'AUG' THEN '08'
													WHEN 'SEP' THEN '09'
													WHEN 'OCT' THEN '10'
													WHEN 'NOV' THEN '11'
													WHEN 'DEC' THEN '12' END,APT.POST_PERIOD, SUM(APT.NETCHARGES)--, APT.MODIFIED_BY, APT.MODIFY_DATE
		FROM dbo.AP_TV APT
			INNER JOIN (
						SELECT CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.TV_HDR
						UNION 
						SELECT TH.CL_CODE, TH.DIV_CODE, TH.PRD_CODE, ORDER_NBR, C.CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.TV_HEADER TH
							LEFT OUTER JOIN dbo.CAMPAIGN C ON TH.CMP_IDENTIFIER = C.CMP_IDENTIFIER
						) TvOrders ON TvOrders.ORDER_NBR = APT.ORDER_NBR 
			INNER JOIN (SELECT DISTINCT AP_ID, MAX(AP_SEQ) AS AP_SEQ FROM #APIDS GROUP BY AP_ID) A ON APT.AP_ID = A.AP_ID--  #APIDS A ON APT.AP_ID = A.AP_ID 
		WHERE APT.POST_PERIOD BETWEEN @post_period_from AND @post_period_to-- (APT.MODIFY_DELETE IS NULL OR APT.MODIFY_DELETE = 0)
		GROUP BY A.AP_ID, TvOrders.CL_CODE, TvOrders.DIV_CODE, TvOrders.PRD_CODE, APT.ORDER_NBR, APT.ORDER_LINE_NBR, TvOrders.ORDER_DESC, APT.GLACODE, TvOrders.CMP_IDENTIFIER, 
			     CAST(APT.BRDCAST_YEAR AS varchar(4)) + CASE APT.BRDCAST_MONTH
													WHEN 'JAN' THEN '01'
													WHEN 'FEB' THEN '02'
													WHEN 'MAR' THEN '03'
													WHEN 'APR' THEN '04'
													WHEN 'MAY' THEN '05'
													WHEN 'JUN' THEN '06'
													WHEN 'JUL' THEN '07'
													WHEN 'AUG' THEN '08'
													WHEN 'SEP' THEN '09'
													WHEN 'OCT' THEN '10'
													WHEN 'NOV' THEN '11'
													WHEN 'DEC' THEN '12' END,APT.POST_PERIOD--, APT.MODIFIED_BY, APT.MODIFY_DATE
	END
ELSE
	BEGIN
		INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, ORDER_LINE_NBR, ORDER_DESC, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, ORDER_PERIOD, POST_PERIOD, NETCHARGES)--, MODIFIED_BY, MODIFY_DATE)
		SELECT A.AP_ID, 'T', TvOrders.CL_CODE, TvOrders.DIV_CODE, TvOrders.PRD_CODE, APT.ORDER_NBR, APT.ORDER_LINE_NBR, TvOrders.ORDER_DESC, APT.GLACODE, SUM(APT.EXT_NET_AMT), TvOrders.CMP_IDENTIFIER, SUM(APT.VENDOR_TAX),
			CAST(APT.BRDCAST_YEAR AS varchar(4)) + CASE APT.BRDCAST_MONTH
													WHEN 'JAN' THEN '01'
													WHEN 'FEB' THEN '02'
													WHEN 'MAR' THEN '03'
													WHEN 'APR' THEN '04'
													WHEN 'MAY' THEN '05'
													WHEN 'JUN' THEN '06'
													WHEN 'JUL' THEN '07'
													WHEN 'AUG' THEN '08'
													WHEN 'SEP' THEN '09'
													WHEN 'OCT' THEN '10'
													WHEN 'NOV' THEN '11'
													WHEN 'DEC' THEN '12' END,APT.POST_PERIOD, SUM(APT.NETCHARGES)--, APT.MODIFIED_BY, APT.MODIFY_DATE
		FROM dbo.AP_TV APT
			INNER JOIN (
						SELECT CL_CODE, DIV_CODE, PRD_CODE, ORDER_NBR, CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.TV_HDR
						UNION 
						SELECT TH.CL_CODE, TH.DIV_CODE, TH.PRD_CODE, ORDER_NBR, C.CMP_IDENTIFIER, ORDER_DESC
						FROM dbo.TV_HEADER TH
							LEFT OUTER JOIN dbo.CAMPAIGN C ON TH.CMP_IDENTIFIER = C.CMP_IDENTIFIER
						) TvOrders ON TvOrders.ORDER_NBR = APT.ORDER_NBR 
			INNER JOIN (SELECT DISTINCT AP_ID, MAX(AP_SEQ) AS AP_SEQ FROM #APIDS GROUP BY AP_ID) A ON APT.AP_ID = A.AP_ID-- #APIDS A ON APT.AP_ID = A.AP_ID 
		WHERE APT.POST_PERIOD BETWEEN @post_period_from AND @post_period_to-- (APT.MODIFY_DELETE IS NULL OR APT.MODIFY_DELETE = 0)
		GROUP BY A.AP_ID, TvOrders.CL_CODE, TvOrders.DIV_CODE, TvOrders.PRD_CODE, APT.ORDER_NBR, APT.ORDER_LINE_NBR, TvOrders.ORDER_DESC, APT.GLACODE, TvOrders.CMP_IDENTIFIER, 
			     CAST(APT.BRDCAST_YEAR AS varchar(4)) + CASE APT.BRDCAST_MONTH
													WHEN 'JAN' THEN '01'
													WHEN 'FEB' THEN '02'
													WHEN 'MAR' THEN '03'
													WHEN 'APR' THEN '04'
													WHEN 'MAY' THEN '05'
													WHEN 'JUN' THEN '06'
													WHEN 'JUL' THEN '07'
													WHEN 'AUG' THEN '08'
													WHEN 'SEP' THEN '09'
													WHEN 'OCT' THEN '10'
													WHEN 'NOV' THEN '11'
													WHEN 'DEC' THEN '12' END,APT.POST_PERIOD--, APT.MODIFIED_BY, APT.MODIFY_DATE
	END
IF @debug = 1 SELECT getdate() 'after AP_TV'

UPDATE #APDETAILS SET ORDER_PERIOD = CAST(RD.YEAR_NBR AS VARCHAR(4)) + RIGHT('00' + CAST(RD.MONTH_NBR AS varchar(2)), 2)  
FROM #APDETAILS D 
	INNER JOIN dbo.RADIO_DETAIL RD ON D.ORDER_NBR = RD.ORDER_NBR AND D.ORDER_LINE_NBR = RD.LINE_NBR AND RD.ACTIVE_REV = 1
WHERE D.ORDER_PERIOD IS NULL 

IF @debug = 1 SELECT getdate() 'after RADIO_DETAIL'

UPDATE #APDETAILS SET ORDER_PERIOD = CAST(TD.YEAR_NBR AS VARCHAR(4)) + RIGHT('00' + CAST(TD.MONTH_NBR AS varchar(2)), 2)  
FROM #APDETAILS D 
	INNER JOIN dbo.TV_DETAIL TD ON D.ORDER_NBR = TD.ORDER_NBR AND D.ORDER_LINE_NBR = TD.LINE_NBR AND TD.ACTIVE_REV = 1
WHERE D.ORDER_PERIOD IS NULL 

IF @debug = 1 SELECT getdate() 'after TV_DETAIL'


UPDATE #APDETAILS SET ORDER_PERIOD = ORDERS.ORDER_PERIOD 
FROM #APDETAILS D 
	INNER JOIN (
				SELECT ORDER_NBR, LINE_NBR, CAST(DATEPART(YY, [START_DATE]) AS VARCHAR(4)) + RIGHT('0' + CAST(DATEPART(M, [START_DATE]) AS VARCHAR(2)),2) AS ORDER_PERIOD
				FROM dbo.INTERNET_DETAIL 
				WHERE ACTIVE_REV = 1

				UNION 

				SELECT V1.ORDER_NBR, V1.LINE_NBR, CAST(DATEPART(YY, INSERT_DATE) AS VARCHAR(4)) + RIGHT('0' + CAST(DATEPART(M, INSERT_DATE) AS VARCHAR(2)),2) AS ORDER_PERIOD
				FROM dbo.V_MAG_DETAIL V1
					INNER JOIN (SELECT MAX(SEQ_NBR) AS SEQ_NBR, V2.ORDER_NBR, V2.LINE_NBR, V2.REV_NBR 
								FROM dbo.V_MAG_DETAIL V2
									INNER JOIN (SELECT MAX(REV_NBR) AS REV_NBR, ORDER_NBR, LINE_NBR
												FROM dbo.V_MAG_DETAIL 
												GROUP BY ORDER_NBR, LINE_NBR
												) V3 ON V3.ORDER_NBR = V2.ORDER_NBR AND V3.LINE_NBR = V2.LINE_NBR AND V3.REV_NBR = V2.REV_NBR 
								GROUP BY V2.ORDER_NBR, V2.LINE_NBR, V2.REV_NBR
								) DET ON DET.ORDER_NBR = V1.ORDER_NBR AND DET.LINE_NBR = V1.LINE_NBR AND DET.REV_NBR = V1.REV_NBR AND DET.SEQ_NBR = V1.SEQ_NBR 

				UNION

				SELECT V1.ORDER_NBR, V1.LINE_NBR, CAST(DATEPART(YY, INSERT_DATE) AS VARCHAR(4)) + RIGHT('0' + CAST(DATEPART(M, INSERT_DATE) AS VARCHAR(2)),2) AS ORDER_PERIOD
				FROM dbo.V_NEWS_DETAIL V1
					INNER JOIN (SELECT MAX(SEQ_NBR) AS SEQ_NBR, V2.ORDER_NBR, V2.LINE_NBR, V2.REV_NBR 
								FROM dbo.V_NEWS_DETAIL V2
									INNER JOIN (SELECT MAX(REV_NBR) AS REV_NBR, ORDER_NBR, LINE_NBR
												FROM dbo.V_NEWS_DETAIL 
												GROUP BY ORDER_NBR, LINE_NBR
												) V3 ON V3.ORDER_NBR = V2.ORDER_NBR AND V3.LINE_NBR = V2.LINE_NBR AND V3.REV_NBR = V2.REV_NBR 
								GROUP BY V2.ORDER_NBR, V2.LINE_NBR, V2.REV_NBR
								) DET ON DET.ORDER_NBR = V1.ORDER_NBR AND DET.LINE_NBR = V1.LINE_NBR AND DET.REV_NBR = V1.REV_NBR AND DET.SEQ_NBR = V1.SEQ_NBR 

				UNION

				SELECT ORDER_NBR, LINE_NBR, CAST(DATEPART(YY, POST_DATE) AS VARCHAR(4)) + RIGHT('0' + CAST(DATEPART(M, POST_DATE) AS VARCHAR(2)),2) AS ORDER_PERIOD
				FROM dbo.OUTDOOR_DETAIL 
				WHERE ACTIVE_REV = 1
				) ORDERS ON D.ORDER_NBR = ORDERS.ORDER_NBR AND D.ORDER_LINE_NBR = ORDERS.LINE_NBR 

IF @debug = 1 SELECT getdate() 'after UPDATE 1'

/* PJH 08/12/20 - Get the max AR_INV_NBR even if it is not on the current revision */

INSERT INTO #ar_data
SELECT DISTINCT A.ORDER_NBR, A.LINE_NBR, A.AR_INV_NBR, A.AR_TYPE, A.AR_INV_SEQ, 1 
FROM dbo.INTERNET_DETAIL A JOIN 
	(SELECT ORDER_NBR, LINE_NBR, MAX(AR_INV_NBR) AR_INV_NBR
	FROM dbo.INTERNET_DETAIL
	GROUP BY ORDER_NBR, LINE_NBR) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.LINE_NBR AND A.AR_INV_NBR = B.AR_INV_NBR JOIN
#APDETAILS C ON C.ORDER_NBR = A.ORDER_NBR AND C.ORDER_LINE_NBR = A.LINE_NBR

UPDATE #APDETAILS SET AR_INV_NBR = D.AR_INV_NBR, AR_TYPE = D.AR_TYPE, AR_INV_DATE = AR.AR_INV_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN #ar_data D 
		ON APD.ORDER_NBR = D.ORDER_NBR AND APD.ORDER_LINE_NBR = D.LINE_NBR AND D.GROUP_NBR = 1 --AND D.ACTIVE_REV = 1 dbo.V_NEWS_DETAIL 
	LEFT OUTER JOIN dbo.ACCT_REC AR ON D.AR_INV_NBR = AR.AR_INV_NBR AND D.AR_INV_SEQ = AR.AR_INV_SEQ AND D.AR_TYPE = AR.AR_TYPE 
WHERE DISBURSEMENT_TYPE = 'I' AND (AR.AR_INV_SEQ = 0 OR AR.AR_INV_SEQ = 99) AND (MANUAL_INV IS NULL OR MANUAL_INV = 0) AND (VOID_FLAG IS NULL OR VOID_FLAG = 0)

--DELETE #ar_data

INSERT INTO #ar_data
SELECT DISTINCT A.ORDER_NBR, A.LINE_NBR, A.AR_INV_NBR, A.AR_TYPE, A.AR_INV_SEQ, 2
FROM dbo.V_MAG_DETAIL A JOIN 
	(SELECT ORDER_NBR, LINE_NBR, MAX(AR_INV_NBR) AR_INV_NBR
	FROM dbo.V_MAG_DETAIL
	GROUP BY ORDER_NBR, LINE_NBR) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.LINE_NBR AND A.AR_INV_NBR = B.AR_INV_NBR JOIN
#APDETAILS C ON C.ORDER_NBR = A.ORDER_NBR AND C.ORDER_LINE_NBR = A.LINE_NBR

--SELECT * FROM #APDETAILS
UPDATE #APDETAILS SET AR_INV_NBR = D.AR_INV_NBR, AR_TYPE = D.AR_TYPE, AR_INV_DATE = AR.AR_INV_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN #ar_data D 
		ON APD.ORDER_NBR = D.ORDER_NBR AND APD.ORDER_LINE_NBR = D.LINE_NBR AND D.GROUP_NBR = 2  --AND D.ACTIVE_REV = 1 dbo.V_NEWS_DETAIL 
	LEFT OUTER JOIN dbo.ACCT_REC AR ON D.AR_INV_NBR = AR.AR_INV_NBR AND D.AR_INV_SEQ = AR.AR_INV_SEQ AND D.AR_TYPE = AR.AR_TYPE  
WHERE DISBURSEMENT_TYPE = 'M' AND (AR.AR_INV_SEQ = 0 OR AR.AR_INV_SEQ = 99) AND (MANUAL_INV IS NULL OR MANUAL_INV = 0) AND (VOID_FLAG IS NULL OR VOID_FLAG = 0)

--SELECT * FROM #APDETAILS

--DELETE #ar_data

INSERT INTO #ar_data
SELECT DISTINCT A.ORDER_NBR, A.LINE_NBR, A.AR_INV_NBR, A.AR_TYPE, A.AR_INV_SEQ, 3
FROM dbo.V_NEWS_DETAIL A JOIN 
	(SELECT ORDER_NBR, LINE_NBR, MAX(AR_INV_NBR) AR_INV_NBR
	FROM dbo.V_NEWS_DETAIL
	GROUP BY ORDER_NBR, LINE_NBR) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.LINE_NBR AND A.AR_INV_NBR = B.AR_INV_NBR JOIN
#APDETAILS C ON C.ORDER_NBR = A.ORDER_NBR AND C.ORDER_LINE_NBR = A.LINE_NBR

UPDATE #APDETAILS SET AR_INV_NBR = D.AR_INV_NBR, AR_TYPE = D.AR_TYPE, AR_INV_DATE = AR.AR_INV_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN #ar_data D 
		ON APD.ORDER_NBR = D.ORDER_NBR AND APD.ORDER_LINE_NBR = D.LINE_NBR AND D.GROUP_NBR = 3  --AND D.ACTIVE_REV = 1 dbo.V_NEWS_DETAIL 
	LEFT OUTER JOIN dbo.ACCT_REC AR ON D.AR_INV_NBR = AR.AR_INV_NBR AND D.AR_INV_SEQ = AR.AR_INV_SEQ AND D.AR_TYPE = AR.AR_TYPE 
WHERE DISBURSEMENT_TYPE = 'N' AND (AR.AR_INV_SEQ = 0 OR AR.AR_INV_SEQ = 99) AND (MANUAL_INV IS NULL OR MANUAL_INV = 0) AND (VOID_FLAG IS NULL OR VOID_FLAG = 0)

--SELECT * FROM #APDETAILS

--DELETE #ar_data

INSERT INTO #ar_data
SELECT DISTINCT A.ORDER_NBR, A.LINE_NBR, A.AR_INV_NBR, A.AR_TYPE, A.AR_INV_SEQ, 4 
FROM dbo.OUTDOOR_DETAIL A JOIN 
	(SELECT ORDER_NBR, LINE_NBR, MAX(AR_INV_NBR) AR_INV_NBR
	FROM dbo.OUTDOOR_DETAIL
	GROUP BY ORDER_NBR, LINE_NBR) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.LINE_NBR AND A.AR_INV_NBR = B.AR_INV_NBR JOIN
#APDETAILS C ON C.ORDER_NBR = A.ORDER_NBR AND C.ORDER_LINE_NBR = A.LINE_NBR

UPDATE #APDETAILS SET AR_INV_NBR = D.AR_INV_NBR, AR_TYPE = D.AR_TYPE, AR_INV_DATE = AR.AR_INV_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN #ar_data D 
		ON APD.ORDER_NBR = D.ORDER_NBR AND APD.ORDER_LINE_NBR = D.LINE_NBR AND D.GROUP_NBR = 4 --AND D.ACTIVE_REV = 1 dbo.V_NEWS_DETAIL 
	LEFT OUTER JOIN dbo.ACCT_REC AR ON D.AR_INV_NBR = AR.AR_INV_NBR AND D.AR_INV_SEQ = AR.AR_INV_SEQ AND D.AR_TYPE = AR.AR_TYPE 
WHERE DISBURSEMENT_TYPE = 'O' AND (AR.AR_INV_SEQ = 0 OR AR.AR_INV_SEQ = 99) AND (MANUAL_INV IS NULL OR MANUAL_INV = 0) AND (VOID_FLAG IS NULL OR VOID_FLAG = 0)

--SELECT * FROM #APDETAILS

--DELETE #ar_data

INSERT INTO #ar_data
SELECT DISTINCT A.ORDER_NBR, A.LINE_NBR, A.AR_INV_NBR, A.AR_TYPE, A.AR_INV_SEQ, 5 
FROM dbo.TV_DETAIL A JOIN 
	(SELECT ORDER_NBR, LINE_NBR, MAX(AR_INV_NBR) AR_INV_NBR
	FROM dbo.TV_DETAIL
	GROUP BY ORDER_NBR, LINE_NBR) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.LINE_NBR AND A.AR_INV_NBR = B.AR_INV_NBR JOIN
#APDETAILS C ON C.ORDER_NBR = A.ORDER_NBR AND C.ORDER_LINE_NBR = A.LINE_NBR

UPDATE #APDETAILS SET AR_INV_NBR = D.AR_INV_NBR, AR_TYPE = D.AR_TYPE, AR_INV_DATE = AR.AR_INV_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN #ar_data D 
		ON APD.ORDER_NBR = D.ORDER_NBR AND APD.ORDER_LINE_NBR = D.LINE_NBR AND D.GROUP_NBR = 5 --AND D.ACTIVE_REV = 1 dbo.V_NEWS_DETAIL 
	LEFT OUTER JOIN dbo.ACCT_REC AR ON D.AR_INV_NBR = AR.AR_INV_NBR AND D.AR_INV_SEQ = AR.AR_INV_SEQ AND D.AR_TYPE = AR.AR_TYPE 
WHERE DISBURSEMENT_TYPE = 'T' AND (AR.AR_INV_SEQ = 0 OR AR.AR_INV_SEQ = 99) AND (MANUAL_INV IS NULL OR MANUAL_INV = 0) AND (VOID_FLAG IS NULL OR VOID_FLAG = 0)

--SELECT * FROM #APDETAILS

--DELETE #ar_data

INSERT INTO #ar_data
SELECT DISTINCT A.ORDER_NBR, A.LINE_NBR, A.AR_INV_NBR, A.AR_TYPE, A.AR_INV_SEQ, 6 
FROM dbo.RADIO_DETAIL A JOIN 
	(SELECT ORDER_NBR, LINE_NBR, MAX(AR_INV_NBR) AR_INV_NBR
	FROM dbo.RADIO_DETAIL
	GROUP BY ORDER_NBR, LINE_NBR) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.LINE_NBR AND A.AR_INV_NBR = B.AR_INV_NBR JOIN
#APDETAILS C ON C.ORDER_NBR = A.ORDER_NBR AND C.ORDER_LINE_NBR = A.LINE_NBR

UPDATE #APDETAILS SET AR_INV_NBR = D.AR_INV_NBR, AR_TYPE = D.AR_TYPE, AR_INV_DATE = AR.AR_INV_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN #ar_data D 
		ON APD.ORDER_NBR = D.ORDER_NBR AND APD.ORDER_LINE_NBR = D.LINE_NBR AND D.GROUP_NBR = 6 --AND D.ACTIVE_REV = 1 dbo.V_NEWS_DETAIL 
	LEFT OUTER JOIN dbo.ACCT_REC AR ON D.AR_INV_NBR = AR.AR_INV_NBR AND D.AR_INV_SEQ = AR.AR_INV_SEQ AND D.AR_TYPE = AR.AR_TYPE 
WHERE DISBURSEMENT_TYPE = 'R' AND (AR.AR_INV_SEQ = 0 OR AR.AR_INV_SEQ = 99) AND (MANUAL_INV IS NULL OR MANUAL_INV = 0) AND (VOID_FLAG IS NULL OR VOID_FLAG = 0)

--SELECT * FROM #APDETAILS

INSERT #APDETAILS (AP_ID, DISBURSEMENT_TYPE, PO_NUMBER, PO_LINE_NUMBER, AP_COMMENT, GLACODE, NET_AMT, POST_PERIOD)
SELECT AG.AP_ID, 'G', AG.PO_NUMBER, AG.PO_LINE_NUMBER, CAST(AG.AP_COMMENT AS VARCHAR(MAX)), AG.GLACODE, SUM(AG.AP_GL_AMT), POST_PERIOD
FROM dbo.AP_GL_DIST AG
	INNER JOIN (SELECT DISTINCT AP_ID, MAX(AP_SEQ) AS AP_SEQ FROM #APIDS GROUP BY AP_ID) A ON AG.AP_ID = A.AP_ID-- #APIDS A ON AG.AP_ID = A.AP_ID 
WHERE AG.POST_PERIOD BETWEEN @post_period_from AND @post_period_to-- (AG.MODIFY_DELETE IS NULL OR AG.MODIFY_DELETE = 0)
GROUP BY AG.AP_ID, AG.PO_NUMBER, AG.PO_LINE_NUMBER, CAST(AG.AP_COMMENT AS VARCHAR(MAX)), AG.GLACODE, POST_PERIOD

IF @debug = 1 SELECT getdate() 'after AP_GL_DIST'

--SELECT * FROM #APDETAILS

INSERT #APDETAILS  (AP_ID, DISBURSEMENT_TYPE, CL_CODE, DIV_CODE, PRD_CODE, JOB_NUMBER, JOB_DESC, JOB_COMPONENT_NBR, JOB_COMP_DESC, 
					JOB_COMP, FNC_CODE, FNC_DESCRIPTION, FNC_TYPE, PO_NUMBER, PO_LINE_NUMBER, AP_COMMENT, AR_INV_NBR, AR_TYPE, AR_INV_DATE, GLACODE, NET_AMT, CMP_IDENTIFIER, VENDOR_TAX, NON_BILLABLE, POST_PERIOD)--, MODIFIED_BY, MODIFY_DATE)
					
SELECT
	APP.AP_ID,
	'P',
	JL.CL_CODE,
	JL.DIV_CODE,
	JL.PRD_CODE,
	APP.JOB_NUMBER,
	JL.JOB_DESC,
	APP.JOB_COMPONENT_NBR,
	JC.JOB_COMP_DESC,
	RIGHT('000000' + CAST(APP.JOB_NUMBER AS varchar(6)), 6) + '-' + RIGHT('000' + CAST(APP.JOB_COMPONENT_NBR AS varchar(3)), 3),
	APP.FNC_CODE,
	F.FNC_DESCRIPTION,
	F.FNC_TYPE,
	APP.PO_NUMBER,
	APP.PO_LINE_NUMBER,
	CAST(APC.AP_COMMENT AS VARCHAR(MAX)),
	APP.AR_INV_NBR,
	APP.AR_TYPE,
	AR.AR_INV_DATE,
	APP.GLACODE,
	SUM(APP.AP_PROD_EXT_AMT),
	JL.CMP_IDENTIFIER,
	SUM(APP.EXT_NONRESALE_TAX),
	AP_PROD_NOBILL_FLG,
	APP.POST_PERIOD--,
	--APP.MODIFIED_BY,
	--APP.MODIFY_DATE

FROM dbo.AP_PRODUCTION APP
	INNER JOIN (SELECT DISTINCT AP_ID, MAX(AP_SEQ) AS AP_SEQ FROM #APIDS GROUP BY AP_ID) A ON APP.AP_ID = A.AP_ID--#APIDS A ON APP.AP_ID = A.AP_ID 
	INNER JOIN dbo.JOB_LOG JL ON APP.JOB_NUMBER = JL.JOB_NUMBER
	INNER JOIN dbo.JOB_COMPONENT JC ON JC.JOB_NUMBER = APP.JOB_NUMBER AND JC.JOB_COMPONENT_NBR = APP.JOB_COMPONENT_NBR
	INNER JOIN dbo.FUNCTIONS F ON APP.FNC_CODE = F.FNC_CODE
	LEFT OUTER JOIN dbo.AP_PROD_COMMENTS APC ON APC.AP_ID = APP.AP_ID AND APC.LINE_NUMBER = APP.LINE_NUMBER 
												AND APC.JOB_NUMBER = APP.JOB_NUMBER AND APC.JOB_COMPONENT_NBR = APP.JOB_COMPONENT_NBR 
												AND APC.FNC_CODE = APP.FNC_CODE 
	LEFT OUTER JOIN dbo.ACCT_REC AR ON APP.AR_INV_NBR = AR.AR_INV_NBR AND APP.AR_INV_SEQ = AR.AR_INV_SEQ AND APP.AR_TYPE = AR.AR_TYPE  
WHERE APP.POST_PERIOD BETWEEN @post_period_from AND @post_period_to-- (APP.MODIFY_DELETE IS NULL OR APP.MODIFY_DELETE = 0)
GROUP BY APP.AP_ID,
	JL.CL_CODE,
	JL.DIV_CODE,
	JL.PRD_CODE,
	APP.JOB_NUMBER,
	JL.JOB_DESC,
	APP.JOB_COMPONENT_NBR,
	JC.JOB_COMP_DESC,
	RIGHT('000000' + CAST(APP.JOB_NUMBER AS varchar(6)), 6) + '-' + RIGHT('000' + CAST(APP.JOB_COMPONENT_NBR AS varchar(3)), 3),
	APP.FNC_CODE,
	F.FNC_DESCRIPTION,
	F.FNC_TYPE,
	APP.PO_NUMBER,
	APP.PO_LINE_NUMBER,
	CAST(APC.AP_COMMENT AS VARCHAR(MAX)),
	APP.AR_INV_NBR,
	APP.AR_TYPE,
	AR.AR_INV_DATE,
	APP.GLACODE,
	JL.CMP_IDENTIFIER,
	AP_PROD_NOBILL_FLG,
	APP.POST_PERIOD--,
	--APP.MODIFIED_BY,
	--APP.MODIFY_DATE

IF @debug = 1 SELECT getdate() 'after AP_PRODUCTION'

--SELECT * FROM #APIDS
--UPDATE #APDETAILS
--SET MODIFIED_BY = (SELECT API.MODIFIED_BY FROM dbo.AP_INTERNET API WHERE #APDETAILS.AP_ID = API.AP_ID AND #APDETAILS.ORDER_NBR = API.ORDER_NBR AND #APDETAILS.ORDER_LINE_NBR = API.ORDER_LINE_NBR)
--WHERE #APDETAILS.DISBURSEMENT_TYPE = 'I'

/* Billed Orders */
INSERT INTO #order_totals_billed
SELECT A.ORDER_NBR, A.LINE_NBR, MAX(B.AP_ID) AP_ID,
	SUM(A.BILLING_AMT) BILLED_AMT, 
	SUM(ISNULL(A.EXT_NET_AMT, 0) + ISNULL(A.NETCHARGE, 0) + ISNULL(A.ADDL_CHARGE, 0) + ISNULL(A.DISCOUNT_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)) BILLED_NET_AMT, 
	SUM(ISNULL(A.EXT_NET_AMT, 0) + ISNULL(A.NETCHARGE, 0) + ISNULL(A.ADDL_CHARGE, 0) + ISNULL(A.DISCOUNT_AMT, 0) + + ISNULL(A.COMM_AMT, 0) + + ISNULL(A.REBATE_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)
		+ ISNULL(A.STATE_AMT, 0) + ISNULL(A.COUNTY_AMT, 0) + ISNULL(A.CITY_AMT, 0)) BILLED_GROSS_AMT, 
	SUM(ISNULL(A.COMM_AMT, 0)) COMM_AMT, SUM(ISNULL(A.REBATE_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)) REBATE_AMT, 0
FROM INTERNET_DETAIL A JOIN (
	SELECT MAX(AP_ID) AP_ID, ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS GROUP BY ORDER_NBR, ORDER_LINE_NBR
	) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.ORDER_LINE_NBR
	--JOIN AP_HEADER H ON H.AP_ID = B.AP_ID
WHERE A.AR_INV_NBR IS NOT NULL
GROUP BY A.ORDER_NBR, A.LINE_NBR


--SELECT DISTINCT '#APDETAILS', AP_ID, ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS ORDER BY ORDER_NBR, AP_ID
--SELECT '#order_totals_billed', * FROM #order_totals_billed ORDER BY ORDER_NBR

INSERT INTO #order_totals_billed
SELECT A.ORDER_NBR, A.LINE_NBR, MAX(B.AP_ID) AP_ID,
	SUM(A.BILLING_AMT) BILLED_AMT, 
	SUM(ISNULL(A.EXT_NET_AMT, 0) + ISNULL(A.NETCHARGE, 0) + ISNULL(A.ADDL_CHARGE, 0) + ISNULL(A.DISCOUNT_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)) BILLED_NET_AMT, 
	SUM(ISNULL(A.EXT_NET_AMT, 0) + ISNULL(A.NETCHARGE, 0) + ISNULL(A.ADDL_CHARGE, 0) + ISNULL(A.DISCOUNT_AMT, 0) + + ISNULL(A.COMM_AMT, 0) + + ISNULL(A.REBATE_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)
		+ ISNULL(A.STATE_AMT, 0) + ISNULL(A.COUNTY_AMT, 0) + ISNULL(A.CITY_AMT, 0)) BILLED_GROSS_AMT, 
	SUM(ISNULL(A.COMM_AMT, 0)) COMM_AMT, SUM(ISNULL(A.REBATE_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)) REBATE_AMT, 0
FROM OUTDOOR_DETAIL A JOIN (
	SELECT MAX(AP_ID) AP_ID, ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS GROUP BY ORDER_NBR, ORDER_LINE_NBR
	) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.ORDER_LINE_NBR
	--JOIN AP_HEADER H ON H.AP_ID = B.AP_ID
WHERE A.AR_INV_NBR IS NOT NULL
GROUP BY A.ORDER_NBR, A.LINE_NBR


INSERT INTO #order_totals_billed
SELECT A.ORDER_NBR, A.LINE_NBR, MAX(B.AP_ID) AP_ID,
	SUM(A.BILLING_AMT) BILLED_AMT, 
	SUM(ISNULL(A.EXT_NET_AMT, 0) + ISNULL(A.NETCHARGE, 0) + ISNULL(A.ADDL_CHARGE, 0) + ISNULL(A.DISCOUNT_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)) BILLED_NET_AMT, 
	SUM(ISNULL(A.EXT_NET_AMT, 0) + ISNULL(A.NETCHARGE, 0) + ISNULL(A.ADDL_CHARGE, 0) + ISNULL(A.DISCOUNT_AMT, 0) + + ISNULL(A.COMM_AMT, 0) + + ISNULL(A.REBATE_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)
		+ ISNULL(A.STATE_AMT, 0) + ISNULL(A.COUNTY_AMT, 0) + ISNULL(A.CITY_AMT, 0)) BILLED_GROSS_AMT, 
	SUM(ISNULL(A.COMM_AMT, 0)) COMM_AMT, SUM(ISNULL(A.REBATE_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)) REBATE_AMT, 0
FROM MAGAZINE_DETAIL A JOIN (
	SELECT MAX(AP_ID) AP_ID, ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS GROUP BY ORDER_NBR, ORDER_LINE_NBR
	) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.ORDER_LINE_NBR
	--JOIN AP_HEADER H ON H.AP_ID = B.AP_ID
WHERE A.AR_INV_NBR IS NOT NULL
GROUP BY A.ORDER_NBR, A.LINE_NBR


INSERT INTO #order_totals_billed
SELECT A.ORDER_NBR, A.LINE_NBR, MAX(B.AP_ID) AP_ID,
	SUM(A.BILLING_AMT) BILLED_AMT, 
	SUM(ISNULL(A.EXT_NET_AMT, 0) + ISNULL(A.NETCHARGE, 0) + ISNULL(A.ADDL_CHARGE, 0) + ISNULL(A.DISCOUNT_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)) BILLED_NET_AMT, 
	SUM(ISNULL(A.EXT_NET_AMT, 0) + ISNULL(A.NETCHARGE, 0) + ISNULL(A.ADDL_CHARGE, 0) + ISNULL(A.DISCOUNT_AMT, 0) + + ISNULL(A.COMM_AMT, 0) + + ISNULL(A.REBATE_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)
		+ ISNULL(A.STATE_AMT, 0) + ISNULL(A.COUNTY_AMT, 0) + ISNULL(A.CITY_AMT, 0)) BILLED_GROSS_AMT, 
	SUM(ISNULL(A.COMM_AMT, 0)) COMM_AMT, SUM(ISNULL(A.REBATE_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)) REBATE_AMT, 0
FROM NEWSPAPER_DETAIL A JOIN (
	SELECT MAX(AP_ID) AP_ID, ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS GROUP BY ORDER_NBR, ORDER_LINE_NBR
	) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.ORDER_LINE_NBR
	--JOIN AP_HEADER H ON H.AP_ID = B.AP_ID
WHERE A.AR_INV_NBR IS NOT NULL
GROUP BY A.ORDER_NBR, A.LINE_NBR


INSERT INTO #order_totals_billed
SELECT A.ORDER_NBR, A.LINE_NBR, MAX(B.AP_ID) AP_ID,
	SUM(A.BILLING_AMT) BILLED_AMT, 
	SUM(ISNULL(A.EXT_NET_AMT, 0) + ISNULL(A.NETCHARGE, 0) + ISNULL(A.ADDL_CHARGE, 0) + ISNULL(A.DISCOUNT_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)) BILLED_NET_AMT, 
	SUM(ISNULL(A.EXT_NET_AMT, 0) + ISNULL(A.NETCHARGE, 0) + ISNULL(A.ADDL_CHARGE, 0) + ISNULL(A.DISCOUNT_AMT, 0) + + ISNULL(A.COMM_AMT, 0) + + ISNULL(A.REBATE_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)
		+ ISNULL(A.STATE_AMT, 0) + ISNULL(A.COUNTY_AMT, 0) + ISNULL(A.CITY_AMT, 0)) BILLED_GROSS_AMT, 
	SUM(ISNULL(A.COMM_AMT, 0)) COMM_AMT, SUM(ISNULL(A.REBATE_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)) REBATE_AMT, 0
FROM RADIO_DETAIL A JOIN (
	SELECT MAX(AP_ID) AP_ID, ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS GROUP BY ORDER_NBR, ORDER_LINE_NBR
	) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.ORDER_LINE_NBR
	--JOIN AP_HEADER H ON H.AP_ID = B.AP_ID
WHERE A.AR_INV_NBR IS NOT NULL
GROUP BY A.ORDER_NBR, A.LINE_NBR


INSERT INTO #order_totals_billed
SELECT A.ORDER_NBR, A.LINE_NBR, MAX(B.AP_ID) AP_ID,
	SUM(A.BILLING_AMT) BILLED_AMT, 
	SUM(ISNULL(A.EXT_NET_AMT, 0) + ISNULL(A.NETCHARGE, 0) + ISNULL(A.ADDL_CHARGE, 0) + ISNULL(A.DISCOUNT_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)) BILLED_NET_AMT, 
	SUM(ISNULL(A.EXT_NET_AMT, 0) + ISNULL(A.NETCHARGE, 0) + ISNULL(A.ADDL_CHARGE, 0) + ISNULL(A.DISCOUNT_AMT, 0) + + ISNULL(A.COMM_AMT, 0) + + ISNULL(A.REBATE_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)
		+ ISNULL(A.STATE_AMT, 0) + ISNULL(A.COUNTY_AMT, 0) + ISNULL(A.CITY_AMT, 0)) BILLED_GROSS_AMT, 
	SUM(ISNULL(A.COMM_AMT, 0)) COMM_AMT, SUM(ISNULL(A.REBATE_AMT, 0) + ISNULL(A.NON_RESALE_AMT, 0)) REBATE_AMT, 0
FROM TV_DETAIL A JOIN (
	SELECT MAX(AP_ID) AP_ID, ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS GROUP BY ORDER_NBR, ORDER_LINE_NBR
	) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.ORDER_LINE_NBR
	--JOIN AP_HEADER H ON H.AP_ID = B.AP_ID
WHERE A.AR_INV_NBR IS NOT NULL
GROUP BY A.ORDER_NBR, A.LINE_NBR


--SELECT '#order_totals_billed' '#order_totals_billed', * FROM #order_totals_billed

/* All Orders */
INSERT INTO #@order_totals_all
SELECT A.ORDER_NBR, A.LINE_NBR, SUM(A.BILLING_AMT) BILLED_AMT
FROM INTERNET_DETAIL A JOIN (
	SELECT DISTINCT ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS
	) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.ORDER_LINE_NBR
GROUP BY A.ORDER_NBR, A.LINE_NBR


--SELECT * FROM #@order_totals_all WHERE ORDER_NBR IN (4340)

INSERT INTO #@order_totals_all
SELECT A.ORDER_NBR, A.LINE_NBR, SUM(A.BILLING_AMT) BILLED_AMT
FROM OUTDOOR_DETAIL A JOIN (
	SELECT DISTINCT ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS
	) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.ORDER_LINE_NBR
GROUP BY A.ORDER_NBR, A.LINE_NBR


INSERT INTO #@order_totals_all
SELECT A.ORDER_NBR, A.LINE_NBR, SUM(A.BILLING_AMT) BILLED_AMT
FROM MAGAZINE_DETAIL A JOIN (
	SELECT DISTINCT ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS
	) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.ORDER_LINE_NBR
GROUP BY A.ORDER_NBR, A.LINE_NBR


INSERT INTO #@order_totals_all
SELECT A.ORDER_NBR, A.LINE_NBR, SUM(A.BILLING_AMT) BILLED_AMT
FROM NEWSPAPER_DETAIL A JOIN (
	SELECT DISTINCT ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS
	) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.ORDER_LINE_NBR
GROUP BY A.ORDER_NBR, A.LINE_NBR


INSERT INTO #@order_totals_all
SELECT A.ORDER_NBR, A.LINE_NBR, SUM(A.BILLING_AMT) BILLED_AMT
FROM RADIO_DETAIL A JOIN (
	SELECT DISTINCT ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS
	) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.ORDER_LINE_NBR
GROUP BY A.ORDER_NBR, A.LINE_NBR


INSERT INTO #@order_totals_all
SELECT A.ORDER_NBR, A.LINE_NBR, SUM(A.BILLING_AMT) BILLED_AMT
FROM TV_DETAIL A JOIN (
	SELECT DISTINCT ORDER_NBR, ORDER_LINE_NBR FROM #APDETAILS
	) B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.ORDER_LINE_NBR
GROUP BY A.ORDER_NBR, A.LINE_NBR


/******/

UPDATE A SET A.UNBILLED_AMT = ISNULL(B.BILLED_AMT - A.BILLED_AMT, 0)
FROM #order_totals_billed A
	LEFT OUTER JOIN #@order_totals_all B ON A.ORDER_NBR = B.ORDER_NBR AND A.LINE_NBR = B.LINE_NBR 

/******/

UPDATE #APDETAILS SET MODIFIED_BY =API.MODIFIED_BY, MODIFY_DATE = API.MODIFY_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.AP_MAGAZINE API ON APD.AP_ID = API.AP_ID AND APD.ORDER_NBR = API.ORDER_NBR AND APD.ORDER_LINE_NBR = API.ORDER_LINE_NBR 
WHERE DISBURSEMENT_TYPE = 'M'


UPDATE #APDETAILS SET MODIFIED_BY =API.MODIFIED_BY, MODIFY_DATE = API.MODIFY_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.AP_NEWSPAPER API ON APD.AP_ID = API.AP_ID AND APD.ORDER_NBR = API.ORDER_NBR AND APD.ORDER_LINE_NBR = API.ORDER_LINE_NBR 
WHERE DISBURSEMENT_TYPE = 'N'


UPDATE #APDETAILS SET MODIFIED_BY =API.MODIFIED_BY, MODIFY_DATE = API.MODIFY_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.AP_INTERNET API ON APD.AP_ID = API.AP_ID AND APD.ORDER_NBR = API.ORDER_NBR AND APD.ORDER_LINE_NBR = API.ORDER_LINE_NBR 
WHERE DISBURSEMENT_TYPE = 'I'


UPDATE #APDETAILS SET MODIFIED_BY =API.MODIFIED_BY, MODIFY_DATE = API.MODIFY_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.AP_OUTDOOR API ON APD.AP_ID = API.AP_ID AND APD.ORDER_NBR = API.ORDER_NBR AND APD.ORDER_LINE_NBR = API.ORDER_LINE_NBR 
WHERE DISBURSEMENT_TYPE = 'O'


UPDATE #APDETAILS SET MODIFIED_BY =API.MODIFIED_BY, MODIFY_DATE = API.MODIFY_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.AP_RADIO API ON APD.AP_ID = API.AP_ID AND APD.ORDER_NBR = API.ORDER_NBR AND APD.ORDER_LINE_NBR = API.ORDER_LINE_NBR 
WHERE DISBURSEMENT_TYPE = 'R'


UPDATE #APDETAILS SET MODIFIED_BY =API.MODIFIED_BY, MODIFY_DATE = API.MODIFY_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.AP_TV API ON APD.AP_ID = API.AP_ID AND APD.ORDER_NBR = API.ORDER_NBR AND APD.ORDER_LINE_NBR = API.ORDER_LINE_NBR 
WHERE DISBURSEMENT_TYPE = 'T'


UPDATE #APDETAILS SET MODIFIED_BY =API.MODIFIED_BY, MODIFY_DATE = API.MODIFY_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.AP_PRODUCTION API ON APD.AP_ID = API.AP_ID AND APD.JOB_NUMBER = API.JOB_NUMBER AND APD.JOB_COMPONENT_NBR = API.JOB_COMPONENT_NBR AND API.FNC_CODE = APD.FNC_CODE 
WHERE DISBURSEMENT_TYPE = 'P'


UPDATE #APDETAILS SET MODIFIED_BY =API.MODIFIED_BY, MODIFY_DATE = API.MODIFY_DATE
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.AP_GL_DIST API ON APD.AP_ID = API.AP_ID AND APD.PO_NUMBER = API.PO_NUMBER AND APD.PO_LINE_NUMBER = API.PO_LINE_NUMBER 
WHERE DISBURSEMENT_TYPE = 'G'


--Client PO
UPDATE #APDETAILS SET CLIENT_PO =API.CLIENT_PO
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.MAGAZINE_HEADER API ON APD.ORDER_NBR = API.ORDER_NBR
WHERE DISBURSEMENT_TYPE = 'M'


UPDATE #APDETAILS SET CLIENT_PO =API.CLIENT_PO
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.NEWSPAPER_HEADER API ON APD.ORDER_NBR = API.ORDER_NBR 
WHERE DISBURSEMENT_TYPE = 'N'


UPDATE #APDETAILS SET CLIENT_PO =API.CLIENT_PO
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.INTERNET_HEADER API ON  APD.ORDER_NBR = API.ORDER_NBR 
WHERE DISBURSEMENT_TYPE = 'I'


UPDATE #APDETAILS SET CLIENT_PO =API.CLIENT_PO
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.OUTDOOR_HEADER API ON APD.ORDER_NBR = API.ORDER_NBR 
WHERE DISBURSEMENT_TYPE = 'O'


UPDATE #APDETAILS SET CLIENT_PO =API.CLIENT_PO
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.RADIO_HEADER API ON APD.ORDER_NBR = API.ORDER_NBR 
WHERE DISBURSEMENT_TYPE = 'R'


UPDATE #APDETAILS SET CLIENT_PO =API.CLIENT_PO
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.RADIO_HDR API ON APD.ORDER_NBR = API.ORDER_NBR 
WHERE DISBURSEMENT_TYPE = 'R'


UPDATE #APDETAILS SET CLIENT_PO =API.CLIENT_PO
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.TV_HEADER API ON APD.ORDER_NBR = API.ORDER_NBR 
WHERE DISBURSEMENT_TYPE = 'T'


UPDATE #APDETAILS SET CLIENT_PO =API.CLIENT_PO
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.TV_HDR API ON APD.ORDER_NBR = API.ORDER_NBR 
WHERE DISBURSEMENT_TYPE = 'T'


UPDATE #APDETAILS SET CLIENT_PO =API.JOB_CL_PO_NBR
FROM #APDETAILS APD
	LEFT OUTER JOIN dbo.JOB_COMPONENT API ON  APD.JOB_NUMBER = API.JOB_NUMBER AND APD.JOB_COMPONENT_NBR = API.JOB_COMPONENT_NBR
WHERE DISBURSEMENT_TYPE = 'P'


--SELECT * FROM #APDETAILS APD 
--	LEFT OUTER JOIN #cash_receipts CRD ON CRD.ORDER_NBR = APD.ORDER_NBR AND CRD.LINE_NBR = APD.ORDER_LINE_NBR
--WHERE ISNULL(APD.ORDER_NBR, 0) > 0

--SELECT * FROM #cash_receipts

/* Get Total Billed */

INSERT INTO #other_totals_billed
SELECT OTB.AP_ID, 'I', AR.AR_INV_NBR,
		MAX(COALESCE(AR.AR_INV_AMOUNT,0))
	FROM #order_totals_billed OTB
		JOIN (SELECT DISTINCT ORDER_NBR, LINE_NBR, AR_INV_NBR FROM INTERNET_DETAIL) OLD ON OLD.ORDER_NBR = OTB.ORDER_NBR AND OLD.LINE_NBR = OTB.LINE_NBR
		JOIN (SELECT AR_INV_NBR, SUM(AR_INV_AMOUNT) AR_INV_AMOUNT FROM ACCT_REC GROUP BY AR_INV_NBR) AR ON AR.AR_INV_NBR = OLD.AR_INV_NBR
	WHERE NOT EXISTS (SELECT AP_ID FROM #other_totals_billed A WHERE A.AP_ID = OTB.AP_ID AND A.AR_INV_NBR = AR.AR_INV_NBR)
	GROUP BY
			OTB.AP_ID, AR.AR_INV_NBR


INSERT INTO #other_totals_billed
SELECT OTB.AP_ID, 'O', AR.AR_INV_NBR,
		MAX(COALESCE(AR.AR_INV_AMOUNT,0))
	FROM #order_totals_billed OTB 
		JOIN (SELECT DISTINCT ORDER_NBR, LINE_NBR, AR_INV_NBR FROM OUTDOOR_DETAIL) OLD ON OLD.ORDER_NBR = OTB.ORDER_NBR AND OLD.LINE_NBR = OTB.LINE_NBR
		JOIN (SELECT AR_INV_NBR, SUM(AR_INV_AMOUNT) AR_INV_AMOUNT FROM ACCT_REC GROUP BY AR_INV_NBR) AR ON AR.AR_INV_NBR = OLD.AR_INV_NBR
	WHERE NOT EXISTS (SELECT AP_ID FROM #other_totals_billed A WHERE A.AP_ID = OTB.AP_ID  AND A.AR_INV_NBR = AR.AR_INV_NBR)
	GROUP BY
			OTB.AP_ID, AR.AR_INV_NBR


INSERT INTO #other_totals_billed
SELECT OTB.AP_ID, 'M', AR.AR_INV_NBR,
		MAX(COALESCE(AR.AR_INV_AMOUNT,0))
	FROM #order_totals_billed OTB 
		JOIN (SELECT DISTINCT ORDER_NBR, LINE_NBR, AR_INV_NBR FROM MAGAZINE_DETAIL) OLD ON OLD.ORDER_NBR = OTB.ORDER_NBR AND OLD.LINE_NBR = OTB.LINE_NBR
		JOIN (SELECT AR_INV_NBR, SUM(AR_INV_AMOUNT) AR_INV_AMOUNT FROM ACCT_REC GROUP BY AR_INV_NBR) AR ON AR.AR_INV_NBR = OLD.AR_INV_NBR
	WHERE NOT EXISTS (SELECT AP_ID FROM #other_totals_billed A WHERE A.AP_ID = OTB.AP_ID  AND A.AR_INV_NBR = AR.AR_INV_NBR)
	GROUP BY
			OTB.AP_ID, AR.AR_INV_NBR


INSERT INTO #other_totals_billed
SELECT OTB.AP_ID, 'N', AR.AR_INV_NBR,
		MAX(COALESCE(AR.AR_INV_AMOUNT,0))
	FROM #order_totals_billed OTB 
		JOIN (SELECT DISTINCT ORDER_NBR, LINE_NBR, AR_INV_NBR FROM NEWSPAPER_DETAIL) OLD ON OLD.ORDER_NBR = OTB.ORDER_NBR AND OLD.LINE_NBR = OTB.LINE_NBR
		JOIN (SELECT AR_INV_NBR, SUM(AR_INV_AMOUNT) AR_INV_AMOUNT FROM ACCT_REC GROUP BY AR_INV_NBR) AR ON AR.AR_INV_NBR = OLD.AR_INV_NBR
	WHERE NOT EXISTS (SELECT AP_ID FROM #other_totals_billed A WHERE A.AP_ID = OTB.AP_ID  AND A.AR_INV_NBR = AR.AR_INV_NBR)
	GROUP BY
			OTB.AP_ID, AR.AR_INV_NBR


INSERT INTO #other_totals_billed
SELECT OTB.AP_ID, 'R', AR.AR_INV_NBR,
		MAX(COALESCE(AR.AR_INV_AMOUNT,0))
	FROM #order_totals_billed OTB 
		JOIN (SELECT DISTINCT ORDER_NBR, LINE_NBR, AR_INV_NBR FROM RADIO_DETAIL) OLD ON OLD.ORDER_NBR = OTB.ORDER_NBR AND OLD.LINE_NBR = OTB.LINE_NBR
		JOIN (SELECT AR_INV_NBR, SUM(AR_INV_AMOUNT) AR_INV_AMOUNT FROM ACCT_REC GROUP BY AR_INV_NBR) AR ON AR.AR_INV_NBR = OLD.AR_INV_NBR
	WHERE NOT EXISTS (SELECT AP_ID FROM #other_totals_billed A WHERE A.AP_ID = OTB.AP_ID  AND A.AR_INV_NBR = AR.AR_INV_NBR)
	GROUP BY
			OTB.AP_ID, AR.AR_INV_NBR


INSERT INTO #other_totals_billed
SELECT OTB.AP_ID, 'T', AR.AR_INV_NBR,
		MAX(COALESCE(AR.AR_INV_AMOUNT,0))
	FROM #order_totals_billed OTB 
		JOIN (SELECT DISTINCT ORDER_NBR, LINE_NBR, AR_INV_NBR FROM TV_DETAIL) OLD ON OLD.ORDER_NBR = OTB.ORDER_NBR AND OLD.LINE_NBR = OTB.LINE_NBR
		JOIN (SELECT AR_INV_NBR, SUM(AR_INV_AMOUNT) AR_INV_AMOUNT FROM ACCT_REC GROUP BY AR_INV_NBR) AR ON AR.AR_INV_NBR = OLD.AR_INV_NBR
	WHERE NOT EXISTS (SELECT AP_ID FROM #other_totals_billed A WHERE A.AP_ID = OTB.AP_ID  AND A.AR_INV_NBR = AR.AR_INV_NBR)
	GROUP BY
			OTB.AP_ID, AR.AR_INV_NBR


INSERT INTO #other_totals_billed
SELECT APD.AP_ID, 'P', AR.AR_INV_NBR,
		MAX(COALESCE(AR.AR_INV_AMOUNT,0))
	FROM #APDETAILS APD 
		JOIN (SELECT DISTINCT AP_ID, AR_INV_NBR FROM AP_PRODUCTION) APP ON APP.AP_ID = APD.AP_ID
		JOIN (SELECT AR_INV_NBR, SUM(AR_INV_AMOUNT) AR_INV_AMOUNT FROM ACCT_REC GROUP BY AR_INV_NBR) AR ON AR.AR_INV_NBR = APP.AR_INV_NBR
	WHERE NOT EXISTS (SELECT AP_ID FROM #other_totals_billed A WHERE A.AP_ID = APD.AP_ID  AND A.AR_INV_NBR = APP.AR_INV_NBR)
	GROUP BY
			APD.AP_ID, AR.AR_INV_NBR


--SELECT * FROM #other_totals_billed

--SELECT * FROM #APDETAILS

INSERT INTO #other_totals_billed_sum
SELECT AP_ID, SUM(BILLED_AMT) BILLED_AMT FROM #other_totals_billed
GROUP BY AP_ID


/* Get Cash Receipts */

INSERT INTO #cash_receipts
SELECT OTB.AP_ID,
	0 /*CCD.AR_INV_NBR*/, 0 /*MAX(CCD.REC_ID)*/,
	[CRPayment] = SUM(COALESCE(CCD.CR_PAY_AMT,0)),
	[CRAdjustment] = SUM(COALESCE(CCD.CR_ADJ_AMT,0)),
	[BalanceAmount] = (SUM(COALESCE(CCD.CR_PAY_AMT,0)) + SUM(COALESCE(CCD.CR_ADJ_AMT,0))),
	[OrdeNbr] = 0, 
	[LineNumber] = 0 
	FROM dbo.CR_CLIENT_DTL CCD
			JOIN dbo.CR_CLIENT CC ON CCD.REC_ID = CC.REC_ID AND CCD.SEQ_NBR = CC.SEQ_NBR
			JOIN #other_totals_billed OTB ON OTB.AR_INV_NBR = CCD.AR_INV_NBR 
	WHERE
			CCD.POST_PERIOD between @post_period_from AND @post_period_to
	GROUP BY
			OTB.AP_ID --CCD.AR_INV_NBR
	HAVING SUM(COALESCE(CCD.CR_PAY_AMT,0)) <> 0


INSERT INTO #cash_receipts
SELECT OTB.AP_ID,
	0 /*CCD.AR_INV_NBR*/, 0 /*CCD.REC_ID*/,
	[CRPayment] = SUM(COALESCE(CCDP.PAYMENT_AMOUNT,0)),
	--[CRAdjustment] = 0, 
	--[BalanceAmount] = 0, 
	[CRAdjustment] = SUM(COALESCE(CCD.CR_ADJ_AMT,0)),
	[BalanceAmount] = (SUM(COALESCE(CCD.CR_PAY_AMT,0)) + SUM(COALESCE(CCD.CR_ADJ_AMT,0))),
	[OrdeNbr] = CCDP.ORDER_NBR, 
	[LineNumber] = CCDP.ORDER_LINE_NBR
FROM #APDETAILS APD 
		JOIN dbo.CR_CLIENT_DTL_PAYMENT CCDP ON CCDP.ORDER_NBR = APD.ORDER_NBR AND CCDP.ORDER_LINE_NBR = APD.ORDER_LINE_NBR
		JOIN dbo.CR_CLIENT_DTL CCD ON CCDP.REC_ID = CCD.REC_ID AND CCDP.SEQ_NBR = CCD.SEQ_NBR AND CCDP.REC_ITEM_ID = CCD.REC_ITEM_ID
		JOIN #other_totals_billed OTB ON OTB.AR_INV_NBR = CCD.AR_INV_NBR
WHERE	CCD.POST_PERIOD between @post_period_from AND @post_period_to
GROUP BY
		OTB.AP_ID, CCDP.ORDER_NBR, CCDP.ORDER_LINE_NBR --CCD.REC_ID, CCD.AR_INV_NBR,
HAVING SUM(COALESCE(CCDP.PAYMENT_AMOUNT,0)) <> 0


--SELECT '#order_totals_billed' '#order_totals_billed', * FROM #order_totals_billed ORDER BY AP_ID
--SELECT '#other_totals_billed' '#other_totals_billed', * FROM #other_totals_billed ORDER BY AP_ID, AR_INV_NBR
--SELECT '#other_totals_billed_sum' '#other_totals_billed_sum', * FROM #other_totals_billed_sum ORDER BY AP_ID
--SELECT '#cash_receipts' '#cash_receipts', * FROM #cash_receipts
--SELECT '#APIDS' '#APIDS', * FROM #APIDS
--SELECT '#APDETAILS' '#APDETAILS', * FROM #APDETAILS

INSERT INTO #payments (AP_ID, TotalPaid, DiscountAmount, VendorServiceTax)
SELECT	A.AP_ID,
		[TotalPaid] = SUM(COALESCE(AP_CHK_AMT, 0)),
		[DiscountAmount] = SUM(COALESCE(AP_DISC_AMT,0)),
		[VendorServiceTax] = SUM(COALESCE(VENDOR_SERVICE_TAX,0))		
FROM dbo.AP_PMT_HIST A JOIN #APIDS B ON A.AP_ID = B.AP_ID --AND B.AP_SEQ = 0
WHERE A.POST_PERIOD <= @post_period_to 	
GROUP BY A.AP_ID


--SELECT '#payments' '#payments', * FROM #payments

SELECT A.* FROM (
SELECT
		[ID] = NEWID(),
		[VendorCode] = H.VN_FRL_EMP_CODE,
		[VendorName],
		[VendorAddress1],
		[VendorAddress2],
		[VendorAddress3],
		[VendorCity],
		[VendorCounty],
		[VendorState],
		[VendorZip],
		[VendorCountry],
		[VendorPhone],
		[VendorPhoneExt],
		[VendorFaxNumber],
		[VendorFaxExt],
		[VendorEmail],
		[VendorPayToCode],
		[VendorPayToName],
		[VendorPayToAddress1],
		[VendorPayToAddress2],
		[VendorPayToAddress3],
		[VendorPayToCity],
		[VendorPayToCounty],
		[VendorPayToState],
		[VendorPayToZip],
		[VendorPayToCountry],
		[VendorPayToPhone],
		[VendorPayToPhoneExt],
		[VendorPayToFax],
		[VendorPayToFaxExt],
		[VendorPayToEmail],
		[VendorDefaultCategory],
		[VendorAccountNumber],
		[VendorOfficeCode],
		[VendorOfficeName],
		[VendorVCCStatus],
		[VendorBankCode],
		[VendorBankName],
		[VendorSpecialTerms],
		[VendorNotes] = CAST([VendorNotes] AS VARCHAR(MAX)),
		[VendorServiceTaxCode] = VST.CODE,
		[VendorServiceTaxDescription] = VST.[DESCRIPTION],
		[EmployeeVendor] = CASE WHEN EMP_VENDOR = 1 THEN 'Yes' ELSE 'No' END,
		[SubjectToVST] = CASE WHEN ISNULL(H.SERVICE_TAX_ENABLED,0) = 0 THEN 'No' ELSE 'Yes' END,		
		[APIdentifier] = H.AP_ID,
		[APType] = CASE WHEN EMP_VENDOR = 1 THEN 'E' ELSE H.AP_TYPE END,
		[InvoiceNumber] = H.AP_INV_VCHR,
		[APDescription] = H.AP_DESC,
		[EntryDate] = DATEADD(dd, 0, DATEDIFF(dd, 0, H.CREATE_DATE)),
		[EntryBy] = H.CREATED_BY,
        [ModifiedBy] = H.MODIFIED_BY,
        [ModifiedDate] = H.MODIFY_DATE,
		[IsDeleted] = CASE WHEN ISNULL(H.DELETE_FLAG, 0) = 1 THEN 'Yes' ELSE 'No' END,
        [BatchName] = H.BATCH_NAME,
		[InvoiceDate] = H.AP_INV_DATE,
		[DateToPay] = H.AP_DATE_PAY,
		[PostingPeriod] = H.POST_PERIOD,
		[APGLXact] = H.GLEXACT,
		[APGLAccountCode] = H.GLACODE,
		[APGLAccountDescription] = G.GLADESC,
		[DaysOpen] = CASE WHEN @aging_option_invoice_date = 1 THEN DATEDIFF(d, H.AP_INV_DATE, @aging_date)
						  WHEN @aging_option_invoice_date = 0 THEN DATEDIFF(d, H.AP_DATE_PAY, @aging_date) END,
		[OnPaymentHold] = CAST(COALESCE(H.PAYMENT_HOLD, 0) AS bit),
		[DisbursementType] = APD.DISBURSEMENT_TYPE,
		[ClientCode] = APD.CL_CODE,
		[ClientName] = C.CL_NAME,
		[DivisionCode] = APD.DIV_CODE,
		[DivisonName] = D.DIV_NAME,
		[ProductCode] = APD.PRD_CODE,
		[ProductDescription] = P.PRD_DESCRIPTION,
		[JobNumber] = APD.JOB_NUMBER,
		[JobDescription] = APD.JOB_DESC,
		[JobComponentNbr] = APD.JOB_COMPONENT_NBR,
		[JobComponentDesc] = APD.JOB_COMP_DESC,
		[JobComponent] = APD.JOB_COMP,
		[FunctionCode] = APD.FNC_CODE,
		[FunctionDescription] = APD.FNC_DESCRIPTION,
		[PONumber] = APD.PO_NUMBER,
		[POLineNumber] = APD.PO_LINE_NUMBER,
		[POIssuedByEmployeeCode] = PURCHASE_ORDER.EMP_CODE,
		[POIssuedByEmployeeName] = dbo.advfn_get_emp_name(PURCHASE_ORDER.EMP_CODE, 'FML'),
		[POLineTotal] = CASE WHEN APD.PO_LINE_NUMBER IS NULL THEN NULL ELSE ISNULL(PURCHASE_ORDER_DET.PO_EXT_AMOUNT, 0) + ISNULL(PURCHASE_ORDER_DET.EXT_MARKUP_AMT, 0) END,
		[OrderNumber] = APD.ORDER_NBR,
		[OrderLineNbr] = APD.ORDER_LINE_NBR,
		[OrderPeriod] = APD.ORDER_PERIOD,
		[OrderDescription] = APD.ORDER_DESC,
		[DetailGLAccountCode] = APD.GLACODE,
		[DetailGLAccountDescription] = G2.GLADESC,
		[APDetailComment] = APD.AP_COMMENT,
		[ARInvoiceNumberDirect] = APD.AR_INV_NBR,
		--[ARInvoiceType] = APD.AR_TYPE,
		[ARInvoiceDateDirect] = APD.AR_INV_DATE,
		[Billed] = CAST(CASE WHEN DISBURSEMENT_TYPE = 'P' AND APD.AR_INV_NBR IS NOT NULL THEN 1
						WHEN DISBURSEMENT_TYPE <> 'P' AND APD.ORDER_NBR IS NOT NULL AND 
						(SELECT SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)) FROM AR_SUMMARY AR WHERE APD.ORDER_NBR = AR.ORDER_NBR AND APD.ORDER_LINE_NBR = AR.ORDER_LINE_NBR) <> 0 THEN 1 ELSE 0 END AS bit),
		[VendorTax] = SUM(COALESCE(APD.VENDOR_TAX,0)),
		[DetailAmount] = SUM(APD.NET_AMT),
		[TotalAmount] = SUM(COALESCE(APD.VENDOR_TAX,0) + COALESCE(APD.NET_AMT,0) + COALESCE(APD.NETCHARGES,0)),
		--[PaidToVendor] = CASE WHEN COALESCE(Payment.TotalPaid, 0) = COALESCE(H.AP_INV_AMT, 0) + COALESCE(H.AP_SHIPPING, 0) + COALESCE(H.AP_SALES_TAX, 0) THEN COALESCE(APD.VENDOR_TAX,0) + COALESCE(APD.NET_AMT,0) ELSE 0 END,
		[PaidToVendor] = SUM(COALESCE(Payment.TotalPaid, 0)),
		[VendorServiceTaxAmount] = SUM(COALESCE(Payment.VendorServiceTax, 0)),
		[TotalPaidToVendor] = SUM(COALESCE(Payment.TotalPaid, 0) + COALESCE(Payment.VendorServiceTax, 0)),		
		[LastCheckNumber] = APH.AP_CHK_NBR,
		[LastCheckDate] = APH.AP_CHK_DATE,	
		[BankCode] = APH.BK_CODE,
		[BankDescription] = BANK.BK_DESCRIPTION,
		--[BalanceDue] = CASE WHEN COALESCE(Payment.TotalPaid, 0) = COALESCE(H.AP_INV_AMT, 0) + COALESCE(H.AP_SHIPPING, 0) + COALESCE(H.AP_SALES_TAX, 0) THEN 0 ELSE COALESCE(APD.VENDOR_TAX,0) + COALESCE(APD.NET_AMT,0) END,
		--[BalanceDue] = (SELECT SUM(CAST(COALESCE(AH.AP_INV_AMT, 0) + COALESCE(AH.AP_SHIPPING, 0) + COALESCE(AH.AP_SALES_TAX, 0) AS decimal(16,2)))			--PJH 03/04/2020
		--				FROM AP_HEADER AH WHERE AH.AP_ID = H.AP_ID AND AH.POST_PERIOD BETWEEN @post_period_from AND @post_period_to 
		--				GROUP BY AH.AP_ID) - SUM((COALESCE(Payment.TotalPaid, 0) + COALESCE(Payment.VendorServiceTax, 0) + COALESCE(Payment.DiscountAmount, 0))),
		[BalanceDue] = SUM(COALESCE(H.AP_INV_AMT, 0) + COALESCE(H.AP_SHIPPING, 0) + COALESCE(H.AP_SALES_TAX, 0))		--PJH 03/04/2020
						- SUM((COALESCE(Payment.TotalPaid, 0) + COALESCE(Payment.VendorServiceTax, 0) + COALESCE(Payment.DiscountAmount, 0))),
		--[BalanceDue2] = SUM(COALESCE(H.AP_INV_AMT, 0) + COALESCE(H.AP_SHIPPING, 0) + COALESCE(H.AP_SALES_TAX, 0)),
		[CampaignID] = CMP.CMP_IDENTIFIER,
		[CampaignCode] = CMP.CMP_CODE,
		[CampaignDescription] = CMP.CMP_NAME,
		[DaysToPayment] = CAST(CASE WHEN APH.AP_CHK_DATE IS NULL THEN DateDiff(d, GETDATE(), H.AP_DATE_PAY) ELSE NULL END AS int),
		[ApprovalStatus] = CASE AMA.[STATUS] 
							WHEN 1 THEN 'Pending Approval'
							WHEN 2 THEN 'Approved'
							WHEN 3 THEN 'Approved with Changes'
							WHEN 4 THEN 'Approval Not Required'
						   END,
		[NonBillable] = CASE WHEN APD.NON_BILLABLE = 1 THEN 'Yes' Else 'No' END,
		[DetailPostingPeriod] = APD.POST_PERIOD,
		[ARInvoiceAmount] = MAX(ISNULL(OTB2.BILLED_AMT,0)),  --(SELECT SUM(AR_INV_AMOUNT) FROM ACCT_REC AR WHERE AR.AR_INV_NBR = APD.AR_INV_NBR),
		[CashReceivedAmount] = MAX(ISNULL(CR.BalanceAmount,0)), --(CR.BalanceAmount),
		[PartialPaymentIndicator] = CASE WHEN MAX(ISNULL(OTB2.BILLED_AMT,0)) - MAX(ISNULL(CR.BalanceAmount,0)) > 0 AND MAX(ISNULL(CR.BalanceAmount,0)) <> 0 THEN '*' ELSE '' END, 
		--CASE WHEN (SELECT SUM(AR_INV_AMOUNT) FROM ACCT_REC AR WHERE AR.AR_INV_NBR = APD.AR_INV_NBR) - SUM(CR.BalanceAmount) > 0 THEN '*' ELSE '' END,

		[CashReceivedAmtByOrderLine] = MAX(ISNULL(CRD.CRPayment, 0)),
		[BilledNetAmountByOrderLine] = MAX(ISNULL(OTB.BILLED_NET_AMT, 0)),
		[BilledGrossAmountByOrderLine] = MAX(ISNULL(OTB.BILLED_GROSS_AMT, 0)),
		[UnbilledAmountByOrderLine] = MAX(ISNULL(OTB.UNBILLED_AMT, 0)),

        [DetailModifiedBy] = APD.MODIFIED_BY,
        [DetailModifiedDate] = APD.MODIFY_DATE,
		[ClientPO] = APD.CLIENT_PO


		--,H.AP_ID   /* DEBUG */

FROM --dbo.AP_HEADER H
		(SELECT	H.AP_ID,																														--PJH 03/04/2020
			(H.AP_SEQ) AP_SEQ,
			(H.VN_FRL_EMP_CODE) VN_FRL_EMP_CODE,
			(CAST(H.SERVICE_TAX_ENABLED AS int)) SERVICE_TAX_ENABLED,
			(H.AP_TYPE) AP_TYPE,
			(H.AP_INV_VCHR) AP_INV_VCHR,
			(H.AP_DESC) AP_DESC,
			(H.CREATE_DATE) CREATE_DATE,
			(H.AP_INV_DATE) AP_INV_DATE,
			(H.AP_DATE_PAY) AP_DATE_PAY,
			(H.POST_PERIOD) POST_PERIOD,
			(HH.AP_INV_AMT), 
			(HH.AP_SHIPPING), 
			(HH.AP_SALES_TAX), 
			(COALESCE(H.AP_DISC_PCT, 0)) AP_DISC_PCT,
			(H.VT_CODE) VT_CODE,
			(H.GLEXACT) GLEXACT,
			(H.GLESEQ) GLESEQ,
			(H.GLACODE) GLACODE,
			(H.CURRENCY_CODE) CURRENCY_CODE,
			(H.CURRENCY_RATE) CURRENCY_RATE,
			(H.AP_GLACODE_XCHG) AP_GLACODE_XCHG,
			(COALESCE(H.PAYMENT_HOLD, 0)) PAYMENT_HOLD,
			(COALESCE(H.FLAG_1099, 0)) FLAG_1099,
			(H.VENDOR_SERVICE_TAX_ID) VENDOR_SERVICE_TAX_ID,
			(H.CREATED_BY) CREATED_BY,
			(H.MODIFIED_BY) MODIFIED_BY,
			(H.MODIFY_DATE) MODIFY_DATE,
			(H.BATCH_NAME) BATCH_NAME,
			(H.DELETE_FLAG) DELETE_FLAG
		FROM dbo.AP_HEADER H JOIN
			(SELECT AP_ID, MAX(AP_SEQ) AP_SEQ, 			
					SUM(COALESCE(AP_INV_AMT, 0)) AP_INV_AMT, 
					SUM(COALESCE(AP_SHIPPING, 0)) AP_SHIPPING,
					SUM(COALESCE(AP_SALES_TAX, 0)) AP_SALES_TAX 
			FROM dbo.AP_HEADER GROUP BY AP_ID) HH ON HH.AP_ID = H.AP_ID AND HH.AP_SEQ = H.AP_SEQ
		WHERE H.POST_PERIOD BETWEEN @post_period_from AND @post_period_to 
		--GROUP BY H.AP_ID
		) H
	INNER JOIN (SELECT DISTINCT AP_ID, MAX(AP_SEQ) AS AP_SEQ FROM #APIDS GROUP BY AP_ID) Ids ON Ids.AP_ID = H.AP_ID AND Ids.AP_SEQ = H.AP_SEQ --#APIDS Ids ON Ids.AP_ID = H.AP_ID AND Ids.AP_SEQ = H.AP_SEQ 
	LEFT OUTER JOIN dbo.GLACCOUNT G ON H.GLACODE = G.GLACODE 
	LEFT OUTER JOIN #APDETAILS APD ON APD.AP_ID = H.AP_ID 
	LEFT OUTER JOIN dbo.CLIENT C ON APD.CL_CODE = C.CL_CODE 
	LEFT OUTER JOIN dbo.DIVISION D ON APD.CL_CODE = D.CL_CODE AND APD.DIV_CODE = D.DIV_CODE 
	LEFT OUTER JOIN dbo.PRODUCT P ON APD.CL_CODE = P.CL_CODE AND APD.DIV_CODE = P.DIV_CODE AND APD.PRD_CODE = P.PRD_CODE 
	LEFT OUTER JOIN dbo.GLACCOUNT G2 ON APD.GLACODE = G2.GLACODE
	LEFT OUTER JOIN dbo.VENDOR_SERVICE_TAX VST ON H.VENDOR_SERVICE_TAX_ID = VST.VENDOR_SERVICE_TAX_ID 
	LEFT OUTER JOIN (
				SELECT
						[VendorName] = V.VN_NAME,
						[VendorAddress1] = V.VN_ADDRESS1,
						[VendorAddress2] = V.VN_ADDRESS2,
						[VendorAddress3] = V.VN_ADDRESS3,
						[VendorCity] = V.VN_CITY,
						[VendorCounty] = V.VN_COUNTY,
						[VendorState] = V.VN_STATE,
						[VendorZip] = V.VN_ZIP,
						[VendorCountry] = V.VN_COUNTRY,
						[VendorPhone] = V.VN_PHONE,
						[VendorPhoneExt] = V.VN_PHONE_EXT,
						[VendorFaxNumber] = V.VN_FAX_NUMBER,
						[VendorFaxExt] = V.VN_FAX_EXTENTION,
						[VendorEmail] = V.VN_EMAIL,
						[VendorDefaultCategory] = V.VN_CATEGORY,
						[VendorAccountNumber] = V.VN_ACCT_NBR,
						[VendorOfficeCode] = V.OFFICE_CODE,
						[VendorOfficeName] = O.OFFICE_NAME,
						[VendorPayToCode] = V.VN_PAY_TO_CODE,
						V.VN_CODE,
						[VendorPayToName] = V1.VN_PAY_TO_NAME,
						[VendorPayToAddress1] = V1.VN_PAY_TO_ADDRESS1,
						[VendorPayToAddress2] = V1.VN_PAY_TO_ADDRESS2,
						[VendorPayToAddress3] = V1.VN_PAY_TO_ADDRESS3,
						[VendorPayToCity] = V1.VN_PAY_TO_CITY,
						[VendorPayToCounty] = V1.VN_PAY_TO_COUNTY,
						[VendorPayToState] = V1.VN_PAY_TO_STATE,
						[VendorPayToZip] = V1.VN_PAY_TO_ZIP,
						[VendorPayToCountry] = V1.VN_PAY_TO_COUNTRY,
						[VendorPayToPhone] = V1.VN_PAY_TO_PHONE,
						[VendorPayToPhoneExt] = V1.VN_PAY_TO_EXT,
						[VendorPayToFax] = V1.VN_PAY_TO_FAX_NBR,
						[VendorPayToFaxExt] = V1.VN_PAY_TO_FAX_EXT,
						[VendorPayToEmail] = V1.VN_EMAIL,
						EMP_VENDOR = COALESCE(V.EMP_VENDOR, 0),
						[VendorVCCStatus] = CASE WHEN ISNULL(V.VCC_STATUS, 0) = 0 THEN 'Open'
													WHEN V.VCC_STATUS = 1 THEN 'Accepted'
													WHEN V.VCC_STATUS = 2 THEN 'Declined'
											END,
						[VendorBankCode] = V.BK_CODE,
						[VendorBankName] = B.BK_DESCRIPTION,
						[VendorSpecialTerms] = CASE WHEN V.HAS_SPECIAL_TERMS = 1 THEN 'Y' ELSE 'N' END,
						[VendorNotes] = V.VN_NOTES
				FROM dbo.VENDOR V
					LEFT OUTER JOIN dbo.OFFICE O ON V.OFFICE_CODE = O.OFFICE_CODE
					LEFT OUTER JOIN dbo.VENDOR V1 ON V.VN_PAY_TO_CODE = V1.VN_CODE 
					LEFT OUTER JOIN dbo.BANK B ON V.BK_CODE = B.BK_CODE
				) V ON H.VN_FRL_EMP_CODE = V.VN_CODE 
	LEFT OUTER JOIN #payments Payment ON Payment.AP_ID = H.AP_ID																					--PJH 03/04/2020
					--SELECT	[TotalPaid] = SUM(COALESCE(AP_CHK_AMT, 0)),  -- ORIG 03/2020
					--		[DiscountAmount] = SUM(COALESCE(AP_DISC_AMT,0)),
					--		[VendorServiceTax] = SUM(COALESCE(VENDOR_SERVICE_TAX,0)),
					--		AP_ID
					--FROM dbo.AP_PMT_HIST
					--WHERE AP_PMT_HIST.POST_PERIOD <= @post_period_to 	
					--GROUP BY AP_ID
					--) Payment ON Payment.AP_ID = H.AP_ID
	LEFT OUTER JOIN (
					SELECT PH.AP_ID, PH.BK_CODE, AP_CHK_NBR , AP_CHK_DATE FROM AP_PMT_HIST PH														--PJH 03/04/2020
					JOIN (SELECT PH.AP_ID, MAX(PH.GLEXACT) GLEXACT FROM AP_PMT_HIST PH GROUP BY PH.AP_ID) MX ON MX.AP_ID = PH.AP_ID AND MX.GLEXACT = PH.GLEXACT
					GROUP BY PH.AP_ID, PH.BK_CODE, PH.AP_CHK_NBR , PH.AP_CHK_DATE
					) APH ON APH.AP_ID = H.AP_ID
	--LEFT OUTER JOIN dbo.AP_PMT_HIST APH ON LastCheck.AP_ID = APH.AP_ID AND LastCheck.MaxGLEXACT = APH.GLEXACT 
	LEFT OUTER JOIN dbo.CAMPAIGN CMP ON APD.CMP_IDENTIFIER = CMP.CMP_IDENTIFIER
	LEFT OUTER JOIN dbo.BANK ON BANK.BK_CODE = APH.BK_CODE
	LEFT OUTER JOIN dbo.PURCHASE_ORDER ON APD.PO_NUMBER = PURCHASE_ORDER.PO_NUMBER
	LEFT OUTER JOIN dbo.PURCHASE_ORDER_DET ON APD.PO_NUMBER = PURCHASE_ORDER_DET.PO_NUMBER AND
											  APD.PO_LINE_NUMBER = PURCHASE_ORDER_DET.LINE_NUMBER
	LEFT OUTER JOIN dbo.AP_MEDIA_APPROVAL AMA ON AMA.AP_ID = H.AP_ID AND AMA.ORDER_NBR = APD.ORDER_NBR AND AMA.LINE_NBR = APD.ORDER_LINE_NBR AND AMA.ACTIVE_REV = 1
	--LEFT OUTER JOIN (SELECT CCD.AR_INV_NBR,
	--					    [CRPayment] = SUM(COALESCE(CCD.CR_PAY_AMT,0)),
	--					    [CRAdjustment] = SUM(COALESCE(CCD.CR_ADJ_AMT,0)),
	--					    [BalanceAmount] = (SUM(COALESCE(CCD.CR_PAY_AMT,0)) + SUM(COALESCE(CCD.CR_ADJ_AMT,0)))
	--				 FROM dbo.CR_CLIENT_DTL CCD
	--				 			INNER JOIN dbo.CR_CLIENT CC ON CCD.REC_ID = CC.REC_ID AND CCD.SEQ_NBR = CC.SEQ_NBR  
	--				 WHERE
	--				 			CCD.POST_PERIOD between @post_period_from AND @post_period_to
	--				 GROUP BY
	--							CCD.AR_INV_NBR) CR ON CR.AR_INV_NBR = APD.AR_INV_NBR
	LEFT OUTER JOIN (SELECT [AP_ID] = [AP_ID],																										--PJH 03/04/2020
							[AR_INV_NBR] = 0,  /* Invoice level summary amts */
							[CRPayment] = SUM(COALESCE([CRPayment],0)),
						    [CRAdjustment] = SUM(COALESCE([CRAdjustment],0)),
						    [BalanceAmount] = SUM(COALESCE([BalanceAmount],0)) 
					 FROM #cash_receipts
					 WHERE ISNULL(ORDER_NBR, 0) = 0
					 GROUP BY [AP_ID]
					) CR ON CR.AP_ID = APD.AP_ID
	LEFT OUTER JOIN #cash_receipts CRD ON  CRD.AP_ID = APD.AP_ID AND CRD.ORDER_NBR = APD.ORDER_NBR AND CRD.LINE_NBR = APD.ORDER_LINE_NBR			--PJH 03/04/2020
	LEFT OUTER JOIN #order_totals_billed OTB ON OTB.AP_ID = APD.AP_ID AND OTB.ORDER_NBR = APD.ORDER_NBR AND OTB.LINE_NBR = APD.ORDER_LINE_NBR		--PJH 03/04/2020
	LEFT OUTER JOIN #other_totals_billed_sum OTB2 ON OTB2.AP_ID = APD.AP_ID	
	JOIN #APIDS APID ON APID.AP_ID = H.AP_ID																										--PJH 03/04/2020
WHERE
		((@open_ap_only = 1 AND (COALESCE(Payment.TotalPaid, 0) <> 
				COALESCE(APID.AP_PMT_AMT, 0)))
		OR
		(@open_ap_only = 0)) --AND  H.POST_PERIOD BETWEEN @post_period_from AND @post_period_to 
GROUP BY H.VN_FRL_EMP_CODE,
		[VendorName],
		[VendorAddress1],
		[VendorAddress2],
		[VendorAddress3],
		[VendorCity],
		[VendorCounty],
		[VendorState],
		[VendorZip],
		[VendorCountry],
		[VendorPhone],
		[VendorPhoneExt],
		[VendorFaxNumber],
		[VendorFaxExt],
		[VendorEmail],
		[VendorPayToCode],
		[VendorPayToName],
		[VendorPayToAddress1],
		[VendorPayToAddress2],
		[VendorPayToAddress3],
		[VendorPayToCity],
		[VendorPayToCounty],
		[VendorPayToState],
		[VendorPayToZip],
		[VendorPayToCountry],
		[VendorPayToPhone],
		[VendorPayToPhoneExt],
		[VendorPayToFax],
		[VendorPayToFaxExt],
		[VendorPayToEmail],
		[VendorDefaultCategory],
		[VendorAccountNumber],
		[VendorOfficeCode],
		[VendorOfficeName],
		[VendorVCCStatus],
		[VendorBankCode],
		[VendorBankName],
		[VendorSpecialTerms],
		CAST([VendorNotes] AS VARCHAR(MAX)),
		VST.CODE,
		VST.[DESCRIPTION],
		CASE WHEN EMP_VENDOR = 1 THEN 'Yes' ELSE 'No' END,
		CASE WHEN ISNULL(H.SERVICE_TAX_ENABLED,0) = 0 THEN 'No' ELSE 'Yes' END,		
		H.AP_ID,
		CASE WHEN EMP_VENDOR = 1 THEN 'E' ELSE H.AP_TYPE END,
		H.AP_INV_VCHR,
		H.AP_DESC,
		H.CREATE_DATE,
		H.CREATED_BY,
        H.MODIFIED_BY,
        H.MODIFY_DATE,
		ISNULL(H.DELETE_FLAG, 0),
        H.BATCH_NAME,
		H.AP_INV_DATE,
		H.AP_DATE_PAY,
		H.POST_PERIOD,
		H.GLEXACT,
		H.GLACODE,
		G.GLADESC,
		CASE WHEN @aging_option_invoice_date = 1 THEN DATEDIFF(d, H.AP_INV_DATE, @aging_date)
			 WHEN @aging_option_invoice_date = 0 THEN DATEDIFF(d, H.AP_DATE_PAY, @aging_date) END,
		CAST(COALESCE(H.PAYMENT_HOLD, 0) AS bit),
		APD.DISBURSEMENT_TYPE,
		APD.CL_CODE,
		C.CL_NAME,
		APD.DIV_CODE,
		D.DIV_NAME,
		APD.PRD_CODE,
		P.PRD_DESCRIPTION,
		APD.JOB_NUMBER,
		APD.JOB_DESC,
		APD.JOB_COMPONENT_NBR,
		APD.JOB_COMP_DESC,
		APD.JOB_COMP,
		APD.FNC_CODE,
		APD.FNC_DESCRIPTION,
		APD.PO_NUMBER,
		APD.PO_LINE_NUMBER,
		PURCHASE_ORDER.EMP_CODE,
		dbo.advfn_get_emp_name(PURCHASE_ORDER.EMP_CODE, 'FML'),
		CASE WHEN APD.PO_LINE_NUMBER IS NULL THEN NULL ELSE ISNULL(PURCHASE_ORDER_DET.PO_EXT_AMOUNT, 0) + ISNULL(PURCHASE_ORDER_DET.EXT_MARKUP_AMT, 0) END,
		APD.ORDER_NBR,
		APD.ORDER_LINE_NBR,
		APD.ORDER_PERIOD,
		APD.ORDER_DESC,
		APD.GLACODE,
		G2.GLADESC,
		APD.AP_COMMENT,
		APD.AR_INV_NBR,
		APD.AR_INV_DATE,
		APH.AP_CHK_NBR,
		APH.AP_CHK_DATE,	
		APH.BK_CODE,
		BANK.BK_DESCRIPTION,
		CMP.CMP_IDENTIFIER,
		CMP.CMP_CODE,
		CMP.CMP_NAME,
		CAST(CASE WHEN APH.AP_CHK_DATE IS NULL THEN DateDiff(d, GETDATE(), H.AP_DATE_PAY) ELSE NULL END AS int),
		CASE AMA.[STATUS] 
							WHEN 1 THEN 'Pending Approval'
							WHEN 2 THEN 'Approved'
							WHEN 3 THEN 'Approved with Changes'
							WHEN 4 THEN 'Approval Not Required'
						   END,
		CASE WHEN APD.NON_BILLABLE = 1 THEN 'Yes' Else 'No' END,
		APD.POST_PERIOD,
        APD.MODIFIED_BY,
        APD.MODIFY_DATE,
		APD.CLIENT_PO

) AS A

--WHERE A.BalanceDue <> 0

IF @debug = 1 SELECT getdate() 'DONE'

GO

GRANT EXECUTE ON [advsp_ap_invoice_detail_report] TO PUBLIC AS dbo
GO