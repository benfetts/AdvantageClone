-- DROP PROCEDURE advsp_billing_approval_detail_calculate_amounts
CREATE PROCEDURE advsp_billing_approval_detail_calculate_amounts
@BA_DTL_ID INT
AS
BEGIN
/*=============== QUERY ===============*/

	--	DECLARE VARIABLES
	BEGIN

		DECLARE
			@FNC_CODE AS VARCHAR(6),
			@JOB_NUMBER AS INT,
			@JOB_COMPONENT_NBR AS SMALLINT,
			@BA_ID INT,

			@MARKUP_AMOUNT DECIMAL(14,2),
			@MARKUP_PERCENT DECIMAL (6,3),
			@NET_AMOUNT DECIMAL (14,2),

			@NET_TAX_AMOUNT DECIMAL (14,2),
			@MARKUP_TAX_AMOUNT DECIMAL (14,2),

			@AGENCY_TAX_ON_BILLING BIT,
			@FNC_TYPE VARCHAR(1),

			@BILLING_RATE AS DECIMAL(9,2),
			@RATE_LEVEL AS SMALLINT,
			@TAX_CODE AS VARCHAR(4),
			@TAX_LEVEL SMALLINT,
			@NOBILL_FLAG SMALLINT,
			@NOBILL_LEVEL SMALLINT,
			@COMM DECIMAL(9,3),
			@COMM_LEVEL SMALLINT,
			@TAX_COMM SMALLINT,
			@TAX_COMM_ONLY SMALLINT,
			@TAX_COMM_FLAGS_LEVEL SMALLINT,
			@FEE_TIME_FLAG SMALLINT,
			@FEE_TIME_LEVEL SMALLINT,

			@APPR_TAX_STATE_PCT  AS DECIMAL(8,4),
			@APPR_TAX_COUNTY_PCT AS DECIMAL(8,4),
			@APPR_TAX_CITY_PCT AS DECIMAL(8,4),
			@APPR_TAX_RESALE SMALLINT,
			@APPR_VENDOR_TAX AS DECIMAL (14,2)
		;

	END

	--	GET DATA FROM TABLES
	BEGIN

		--  Base this on what is in the table, which should all be stored.
		SELECT
			@FNC_CODE = FNC_CODE,
			@JOB_NUMBER = JOB_NUMBER,
			@JOB_COMPONENT_NBR = JOB_COMPONENT_NBR,
			@BA_ID = BA_ID,
			@APPR_TAX_RESALE = ISNULL(APPR_TAX_RESALE, 0),
			@APPR_TAX_STATE_PCT = ISNULL(APPR_TAX_STATE_PCT, 0.0000),
			@APPR_TAX_COUNTY_PCT = ISNULL(APPR_TAX_COUNTY_PCT, 0.0000),
			@APPR_TAX_CITY_PCT = ISNULL(APPR_TAX_CITY_PCT, 0.0000),
			@MARKUP_AMOUNT  = ISNULL(APPR_MARKUP_AMT, 0.000),
			@NET_AMOUNT = ISNULL(APPR_NET, 0.00),
			@MARKUP_PERCENT = ISNULL(APPR_MARKUP_PCT, 0.000),
			@TAX_COMM = ISNULL(APPR_TAX_COMM, 0),
			@TAX_COMM_ONLY = ISNULL(APPR_TAX_COMM_ONLY, 0)
		FROM
			BILL_APPR_DTL WITH(NOLOCK)
		WHERE
			BA_DTL_ID = @BA_DTL_ID;

		--------	PREP PERCENTAGES FOR MATH
		------SET @APPR_TAX_STATE_PCT = ROUND(@APPR_TAX_STATE_PCT / 100.000, 4);
		------SET @APPR_TAX_COUNTY_PCT = ROUND(@APPR_TAX_COUNTY_PCT / 100.000, 4);
		------SET @APPR_TAX_CITY_PCT = ROUND(@APPR_TAX_CITY_PCT / 100.000, 4);
		------SET @MARKUP_PERCENT = ROUND(@MARKUP_PERCENT / 100.000, 3);

		--	GET AGENCY TAX FLAG
		SELECT 
			@AGENCY_TAX_ON_BILLING = CAST(ISNULL(INV_TAX_FLAG, 0) AS BIT) 
		FROM 
			AGENCY WITH(NOLOCK);
	
		-- GET FUNCTION TYPE (E, I, V)
		SELECT
			@FNC_TYPE = FNC_TYPE
		FROM
			FUNCTIONS WITH(NOLOCK)
		WHERE
			FNC_CODE = @FNC_CODE;

	END

	--	Calculate markup based on net * markup percent.
	BEGIN
		SET @MARKUP_AMOUNT = (@NET_AMOUNT * @MARKUP_PERCENT) / 100.000;
		UPDATE BILL_APPR_DTL SET APPR_MARKUP_AMT = @MARKUP_AMOUNT WHERE BA_DTL_ID = @BA_DTL_ID;
	END

	--  GET THE TAX AMOUNTS AHEAD OF TIME SO IT IS IN ONE PLACE
	BEGIN
		SET @MARKUP_TAX_AMOUNT = ((@MARKUP_AMOUNT * @APPR_TAX_STATE_PCT) / 100.000) + ((@MARKUP_AMOUNT * @APPR_TAX_COUNTY_PCT) / 100.000) + ((@MARKUP_AMOUNT * @APPR_TAX_CITY_PCT) / 100.000);
		SET @NET_TAX_AMOUNT = ((@NET_AMOUNT * @APPR_TAX_STATE_PCT) / 100.000) + ((@NET_AMOUNT * @APPR_TAX_COUNTY_PCT) / 100.000) + ((@NET_AMOUNT * @APPR_TAX_CITY_PCT) / 100.000); 
		--SELECT @MARKUP_TAX_AMOUNT AS MARKUP_TAX_AMOUNT, @NET_TAX_AMOUNT AS NET_TAX_AMOUNT;
	END
	--	E – Employee Functions or I-Income Only Functions
	IF @FNC_TYPE = 'E' OR @FNC_TYPE = 'I'
	BEGIN
		IF @AGENCY_TAX_ON_BILLING = 0
		BEGIN
			IF @TAX_COMM = 1
			BEGIN
				UPDATE BILL_APPR_DTL SET APPR_RESALE_TAX = @NET_TAX_AMOUNT + @MARKUP_TAX_AMOUNT WHERE BA_DTL_ID = @BA_DTL_ID;
			END
			IF @TAX_COMM = 0
			BEGIN
				UPDATE BILL_APPR_DTL SET APPR_RESALE_TAX = @NET_TAX_AMOUNT WHERE BA_DTL_ID = @BA_DTL_ID;
			END
			IF @TAX_COMM_ONLY = 1
			BEGIN
				UPDATE BILL_APPR_DTL SET APPR_RESALE_TAX = @MARKUP_TAX_AMOUNT WHERE BA_DTL_ID = @BA_DTL_ID;
			END
		END
		ELSE
		BEGIN
			PRINT 'If Agency Tax on Billing is True – do not calculate any tax.'
		END
	END

	--	V – Vendor Functions
	IF @FNC_TYPE = 'V'
	BEGIN
		IF @AGENCY_TAX_ON_BILLING = 0
		BEGIN
		    IF @APPR_TAX_RESALE = 1
			BEGIN
				IF @TAX_COMM = 1
				BEGIN
					UPDATE BILL_APPR_DTL SET APPR_RESALE_TAX = @NET_TAX_AMOUNT + @MARKUP_TAX_AMOUNT WHERE BA_DTL_ID = @BA_DTL_ID;
				END
				IF @TAX_COMM = 0
				BEGIN
					UPDATE BILL_APPR_DTL SET APPR_RESALE_TAX = @NET_TAX_AMOUNT WHERE BA_DTL_ID = @BA_DTL_ID;
				END
				IF @TAX_COMM_ONLY = 1
				BEGIN
					UPDATE BILL_APPR_DTL SET APPR_RESALE_TAX = @MARKUP_TAX_AMOUNT WHERE BA_DTL_ID = @BA_DTL_ID;
				END
			END
		    IF @APPR_TAX_RESALE = 0
			BEGIN
				IF @TAX_COMM = 1
				BEGIN
					UPDATE BILL_APPR_DTL SET APPR_VENDOR_TAX = @NET_TAX_AMOUNT, APPR_RESALE_TAX = @MARKUP_TAX_AMOUNT WHERE BA_DTL_ID = @BA_DTL_ID;
				END
				IF @TAX_COMM = 0
				BEGIN
					UPDATE BILL_APPR_DTL SET APPR_VENDOR_TAX = @NET_TAX_AMOUNT WHERE BA_DTL_ID = @BA_DTL_ID;
				END
				IF @TAX_COMM_ONLY = 1
				BEGIN
					UPDATE BILL_APPR_DTL SET APPR_RESALE_TAX = @MARKUP_TAX_AMOUNT WHERE BA_DTL_ID = @BA_DTL_ID;
				END
			END
		END
		ELSE
		BEGIN --	AGENCY TAX ON BILLING TRUE
		    IF @APPR_TAX_RESALE = 0
			BEGIN
				UPDATE BILL_APPR_DTL SET APPR_VENDOR_TAX = @NET_TAX_AMOUNT, APPR_RESALE_TAX = @MARKUP_TAX_AMOUNT WHERE BA_DTL_ID = @BA_DTL_ID;
			END
		    IF @APPR_TAX_RESALE = 1
			BEGIN
				PRINT 'DO NOT CALCULATE ANY TAX';
			END
		END
	END


		SELECT
			@APPR_VENDOR_TAX = APPR_VENDOR_TAX
		FROM
			BILL_APPR_DTL WITH(NOLOCK)
		WHERE
			BA_DTL_ID = @BA_DTL_ID;

	--  Recalculate and update Approved Amount to equal Net and Markup Amount ONLY.  No resale tax.
	BEGIN
		UPDATE BILL_APPR_DTL SET APPROVED_AMT = @NET_AMOUNT + @MARKUP_AMOUNT + @APPR_VENDOR_TAX WHERE BA_DTL_ID = @BA_DTL_ID;
	END
/*=============== QUERY ===============*/
END