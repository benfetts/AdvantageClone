CREATE PROC advsp_clientcashreceipt_select_open_invoices_by_client
	@client_code varchar(6), @client_cash_receipt_id int = NULL, @include_open_invoices bit, @UserCode varchar(100) = NULL
AS
BEGIN

	SET NOCOUNT ON;

	DECLARE @EmployeeCode varchar(6),
			@HasCDPLimits bit
	
	SET @HasCDPLimits = 0

	CREATE TABLE #OPEN_INVOICES (
		AR_INV_NBR int NOT NULL,
		AR_INV_SEQ smallint NOT NULL,
		AR_INV_DATE datetime NULL,
		AR_INV_AMOUNT decimal(15,2) NULL,
		GLACODE_AR varchar(30),
		DIV_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		PRD_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		AR_TYPE varchar(3) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
		OFFICE_CODE varchar(4) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		AR_DESCRIPTION varchar(40) NULL,
		GLOXGLOFFICE varchar(20) NULL,
		SC_CODE varchar(6) NULL,
		GLACodeAdjustment varchar(30) NULL,
		GLACodeAdjustmentDescription varchar(75) NULL,
		REC_ID int NULL,
		PAYMENT_AMOUNT DECIMAL(15,2) NULL,
		ADJUSTMENT_AMOUNT DECIMAL(15,2) NULL,
		OTHER_PAYMENTS DECIMAL(15,2) NULL,
		CATEGORY varchar(20) NULL,
		SEQ_NBR smallint NULL,
		REC_ITEM_ID smallint NULL,
		MANUAL_INV smallint NULL,
		CL_CODE varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL
	)

	CREATE TABLE #PAYMENTS (
		PAYMENTS decimal(15,2) NOT NULL,
		AR_INV_NBR int NOT NULL,
		AR_INV_SEQ smallint NOT NULL
	)


	IF @client_cash_receipt_id IS NOT NULL
		INSERT #OPEN_INVOICES 
		SELECT DISTINCT A.AR_INV_NBR, A.AR_INV_SEQ, AR_INV_DATE, B.AR_INV_AMOUNT, D.GLACODE_AR,
			B.DIV_CODE, B.PRD_CODE, A.AR_TYPE, B.OFFICE_CODE, B.AR_DESCRIPTION, GLOXGLOFFICE, SC_CODE,
			D.GLACODE_ADJ, G.GLADESC, A.REC_ID, PA.PMT, PA.ADJ, 0, INVOICE_CATEGORY.INV_CAT_DESC, A.SEQ_NBR, A.REC_ITEM_ID, B.MANUAL_INV, B.CL_CODE
		FROM dbo.CR_CLIENT_DTL A
			INNER JOIN dbo.ACCT_REC B ON A.AR_INV_NBR = B.AR_INV_NBR AND A.AR_INV_SEQ = B.AR_INV_SEQ
			LEFT OUTER JOIN dbo.GLOXREF C ON B.OFFICE_CODE = C.GLOXOFFICE
			INNER JOIN (SELECT MAX(REC_ITEM_ID) MAX_REC_ITEM_ID, AR_INV_NBR, AR_INV_SEQ
						FROM dbo.CR_CLIENT_DTL
						WHERE REC_ID = @client_cash_receipt_id
						AND AR_TYPE = 'IN'
						AND (MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
						GROUP BY AR_INV_NBR, AR_INV_SEQ) RECITEM ON A.AR_INV_NBR = RECITEM.AR_INV_NBR AND A.AR_INV_SEQ = RECITEM.AR_INV_SEQ AND A.REC_ITEM_ID = RECITEM.MAX_REC_ITEM_ID 
			INNER JOIN (
						SELECT MAX(SEQ_NBR) MAX_SEQ_NBR, AR_INV_NBR, AR_INV_SEQ, REC_ITEM_ID 
						FROM dbo.CR_CLIENT_DTL
						WHERE REC_ID = @client_cash_receipt_id
						AND AR_TYPE = 'IN'
						AND (MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
						GROUP BY AR_INV_NBR, AR_INV_SEQ, REC_ITEM_ID) SEQ ON RECITEM.AR_INV_NBR = SEQ.AR_INV_NBR AND RECITEM.AR_INV_SEQ = SEQ.AR_INV_SEQ AND RECITEM.MAX_REC_ITEM_ID = SEQ.REC_ITEM_ID 
			INNER JOIN CR_CLIENT_DTL D ON D.AR_INV_NBR = SEQ.AR_INV_NBR AND D.AR_INV_SEQ = SEQ.AR_INV_SEQ AND D.SEQ_NBR = SEQ.MAX_SEQ_NBR AND D.REC_ITEM_ID = RECITEM.MAX_REC_ITEM_ID 
			LEFT OUTER JOIN (SELECT SUM(COALESCE(CR_PAY_AMT,0)) PMT, SUM(COALESCE(CR_ADJ_AMT,0)) ADJ, AR_INV_NBR, AR_INV_SEQ
						FROM dbo.CR_CLIENT_DTL
						WHERE REC_ID = @client_cash_receipt_id
						AND (MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
						GROUP BY AR_INV_NBR, AR_INV_SEQ) PA ON A.AR_INV_NBR = PA.AR_INV_NBR AND A.AR_INV_SEQ = PA.AR_INV_SEQ 
			LEFT OUTER JOIN GLACCOUNT G ON D.GLACODE_ADJ = G.GLACODE
			LEFT OUTER JOIN dbo.INVOICE_CATEGORY ON B.INV_CAT = INVOICE_CATEGORY.INV_CAT 
		WHERE A.REC_ID = @client_cash_receipt_id
		AND D.REC_ID = @client_cash_receipt_id
		AND (A.MODIFY_DELETE IS NULL OR A.MODIFY_DELETE = 0)
		AND B.AR_TYPE IN ( 'IN', 'VO' )
		AND A.AR_INV_SEQ != 99
		AND A.AR_INV_NBR NOT IN ( SELECT d.AR_INV_NBR
									FROM dbo.ACCT_REC d
									WHERE d.AR_INV_NBR = A.AR_INV_NBR
									AND d.AR_TYPE = 'VO' )

	IF @client_cash_receipt_id IS NULL OR @include_open_invoices = 1
		INSERT #OPEN_INVOICES
		SELECT	AR.AR_INV_NBR, AR.AR_INV_SEQ, AR.AR_INV_DATE, COALESCE(AR.AR_INV_AMOUNT,0), AR.GLACODE_AR,
			AR.DIV_CODE, AR.PRD_CODE, AR.AR_TYPE, AR.OFFICE_CODE, AR.AR_DESCRIPTION, O.GLOXGLOFFICE, AR.SC_CODE,
			NULL, NULL, NULL, NULL, NULL, 0, INVOICE_CATEGORY.INV_CAT_DESC, NULL, NULL, AR.MANUAL_INV, AR.CL_CODE
		FROM	dbo.ACCT_REC AR
			LEFT OUTER JOIN #OPEN_INVOICES OI ON AR.AR_INV_NBR = OI.AR_INV_NBR AND AR.AR_INV_SEQ = OI.AR_INV_SEQ 
			LEFT OUTER JOIN dbo.GLOXREF O ON (AR.OFFICE_CODE = O.GLOXOFFICE)
			LEFT OUTER JOIN dbo.INVOICE_CATEGORY ON AR.INV_CAT = INVOICE_CATEGORY.INV_CAT 
		WHERE	AR.CL_CODE = @client_code
		AND		OI.AR_INV_NBR IS NULL AND OI.AR_INV_SEQ IS NULL
		AND		VOID_FLAG IS NULL
		AND		AR.AR_INV_SEQ != 99
		AND		AR.AR_TYPE IN ( 'IN', 'VO' )
	
	INSERT #PAYMENTS
	SELECT SUM(COALESCE(CR_PAY_AMT, 0)) + SUM(COALESCE(CR_ADJ_AMT, 0)), D.AR_INV_NBR, D.AR_INV_SEQ 
	FROM dbo.CR_CLIENT_DTL D
		INNER JOIN #OPEN_INVOICES I ON D.AR_INV_NBR = I.AR_INV_NBR AND D.AR_INV_SEQ = I.AR_INV_SEQ
	WHERE	(MODIFY_DELETE IS NULL OR MODIFY_DELETE = 0)
	AND		((D.REC_ID <> @client_cash_receipt_id) OR (@client_cash_receipt_id IS NULL))
	GROUP BY D.AR_INV_NBR, D.AR_INV_SEQ 

	UPDATE #OPEN_INVOICES SET OTHER_PAYMENTS = P.PAYMENTS
	FROM #PAYMENTS P
		INNER JOIN #OPEN_INVOICES I ON P.AR_INV_NBR = I.AR_INV_NBR AND P.AR_INV_SEQ = I.AR_INV_SEQ

	DELETE #OPEN_INVOICES 
	WHERE COALESCE(AR_INV_AMOUNT,0) - COALESCE(OTHER_PAYMENTS,0) - COALESCE(PAYMENT_AMOUNT,0) - COALESCE(ADJUSTMENT_AMOUNT,0) = 0
	AND REC_ID IS NULL

	IF @UserCode IS NOT NULL BEGIN

		SELECT @EmployeeCode = EMP_CODE
		FROM dbo.SEC_USER
		WHERE UPPER(USER_CODE) = UPPER(@UserCode)

		IF (SELECT COUNT(1) FROM dbo.SEC_CLIENT WHERE UPPER([USER_ID]) = UPPER(@UserCode)) > 0
			SET @HasCDPLimits = 1

	END

	SELECT *
	FROM (
		SELECT	ARInvoiceNumber = I.AR_INV_NBR,
				ARInvoiceSequenceNumber = I.AR_INV_SEQ,
				ARDescription = AR_DESCRIPTION,
				InvoiceDate = AR_INV_DATE,
				OriginalInvoiceAmount = I.AR_INV_AMOUNT,
				PaymentAmount = I.PAYMENT_AMOUNT,
				AdjustmentAmount = I.ADJUSTMENT_AMOUNT,
				DivisionCode = DIV_CODE,
				ProductCode = PRD_CODE,
				OfficeCode = OFFICE_CODE,
				SalesClassCode = I.SC_CODE,
				CollectionNote = N.COLLECT_NOTES,
				ARType = I.AR_TYPE,
				GeneralLedgerOfficeCrossReferenceCode = GLOXGLOFFICE,
				GLACodeAdjustment,
				GLACodeAdjustmentDescription,
				GLACodeAR = I.GLACODE_AR,
				PaymentAmountCopy = I.PAYMENT_AMOUNT,
				AdjustmentAmountCopy = I.ADJUSTMENT_AMOUNT,
				GLACodeAdjustmentCopy = GLACodeAdjustment,
				OrderVal = CASE WHEN COALESCE(I.PAYMENT_AMOUNT,0) <> 0 OR COALESCE(I.ADJUSTMENT_AMOUNT,0) <> 0 THEN 0 ELSE 1 END,
				CollectionNoteCopy = N.COLLECT_NOTES,
				OtherPayments = I.OTHER_PAYMENTS,
				Category = I.CATEGORY,
				ClientCashReceiptID = I.REC_ID,
				ClientCashReceiptSequenceNumber = I.SEQ_NBR,
				ClientCashReceiptDetailItemID = I.REC_ITEM_ID,
				IsManualInvoice = CAST(COALESCE(I.MANUAL_INV, 0) AS bit),
				ClientCode = I.CL_CODE
		FROM #OPEN_INVOICES I
			LEFT OUTER JOIN AR_COLL_NOTES N ON I.AR_INV_NBR = N.AR_INV_NBR AND I.AR_INV_SEQ = N.AR_INV_SEQ AND I.AR_TYPE = N.AR_TYPE 
		) INVOICES
	WHERE
		 @UserCode IS NULL
		 OR  
		 (@UserCode IS NOT NULL
			AND
			(
			( @HasCDPLimits = 1 AND EXISTS (
											SELECT 1
											FROM dbo.SEC_CLIENT sc
											WHERE UPPER(sc.[USER_ID]) = UPPER(@UserCode)
											AND sc.CL_CODE = INVOICES.ClientCode
											AND (INVOICES.DivisionCode IS NULL OR sc.DIV_CODE = INVOICES.DivisionCode)
											AND (INVOICES.ProductCode IS NULL OR sc.PRD_CODE = INVOICES.ProductCode)
											AND (INVOICES.OfficeCode IS NULL OR (INVOICES.OfficeCode IS NOT NULL AND INVOICES.OfficeCode IN (SELECT OFFICE_CODE FROM dbo.advtf_employee_office_limits (@EmployeeCode))))
										   ))
			OR
			( @HasCDPLimits = 0 AND (INVOICES.OfficeCode IS NULL OR (INVOICES.OfficeCode IS NOT NULL AND INVOICES.OfficeCode IN (SELECT OFFICE_CODE FROM dbo.advtf_employee_office_limits (@EmployeeCode)))))
			)
		)
	ORDER BY OrderVal, ARInvoiceNumber, ARInvoiceSequenceNumber
END
GO
