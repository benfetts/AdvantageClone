SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING OFF
GO

IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[advsp_collect_actuals]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1 )
	DROP PROCEDURE [dbo].[advsp_collect_actuals]
GO

-- BJL 08/29/2012 - Added DSC

CREATE PROCEDURE [dbo].[advsp_collect_actuals] @period1 varchar(6),	@period2 varchar(6)
AS

SET ANSI_WARNINGS OFF

DECLARE @DATE1 VARCHAR(10)
DECLARE @DATE2 VARCHAR(10)
DECLARE @MONTH AS VARCHAR(2)
DECLARE @YEAR AS VARCHAR(4)
DECLARE @DAYS AS INTEGER
DECLARE @TMPDATE AS DATETIME
DECLARE @DATEDATE AS DATETIME
DECLARE @rc int

SET @YEAR = SUBSTRING(@period1,1,4)
SET @MONTH = SUBSTRING(@period1,5,2)
SET @DATE1 = @MONTH + '/1/' + @YEAR

SET @YEAR = SUBSTRING(@period2,1,4)
SET @MONTH = SUBSTRING(@period2,5,2)

SET @DATEDATE = @MONTH + '/1/' + @YEAR
SET @TMPDATE = DATEADD(month, 1, @DATEDATE)
SET @DAYS = DATEDIFF(day, @DATEDATE, @TMPDATE)

SET @DATE2 = @MONTH + '/' + CAST(@DAYS AS VARCHAR(2)) + '/' + @YEAR

CREATE TABLE #TASK_LIST ( 
	JOB_NUMBER			integer, 
	JOB_COMPONENT_NBR	smallint, 
	CL_CODE				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS, 
	DIV_CODE			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS, 
	PRD_CODE			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS, 
	OFFICE_CODE			varchar(4) COLLATE SQL_Latin1_General_CP1_CS_AS,
	PPERIOD				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS, 
	ACTUALS_TYPE		varchar(20) COLLATE SQL_Latin1_General_CP1_CS_AS, 
	SC_CODE				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS, 
	FNC_CODE			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS, 
	BILL_PERIOD			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS, 
	AMOUNT				decimal(18,2) );
	
DELETE FROM dbo.ACTUALS_ACC 
	  WHERE PPERIOD BETWEEN @period1 AND @period2 
		 OR BILL_PERIOD BETWEEN @period1 AND @period2
--AND ACTUAL_GRP IN (0,1,2)

--GOTO SKIP

--SELECT @DATE1 '@DATE1', @DATE2 '@DATE2'

-- INSERT ACTUALS

INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT )	
--	 SELECT 0, 'fee', JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, PP.PPPERIOD, 
--			JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 'P', JL.SC_CODE, [IO].FNC_CODE, AR.AR_POST_PERIOD, 
--			ISNULL( SUM( [IO].IO_AMOUNT + [IO].EXT_MARKUP_AMT ), 0 )
--	   FROM dbo.POSTPERIOD PP, dbo.JOB_COMPONENT JC, dbo.JOB_LOG JL, dbo.INCOME_ONLY [IO] LEFT OUTER JOIN dbo.ACCT_REC AR 
--	     ON [IO].AR_INV_NBR = AR.AR_INV_NBR 
--	    AND [IO].AR_INV_SEQ = AR.AR_INV_SEQ 
--	    AND [IO].AR_TYPE = AR.AR_TYPE
--	  WHERE [IO].IO_INV_DATE BETWEEN PP.PPSRTDATE AND PP.PPENDDATE
--		AND JC.JOB_NUMBER = [IO].JOB_NUMBER
--		AND JC.JOB_COMPONENT_NBR = [IO].JOB_COMPONENT_NBR
--		AND JC.JOB_NUMBER = JL.JOB_NUMBER
--		AND ( PP.PPPERIOD BETWEEN @period1 AND @period2 OR AR.AR_POST_PERIOD BETWEEN @period1 AND @period2 )
--   GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, PP.PPPERIOD, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
--			JL.SC_CODE, [IO].FNC_CODE, AR.AR_POST_PERIOD

	 SELECT 0, 'fee', JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, PP.PPPERIOD, 
			JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 'P', JL.SC_CODE, [IO].FNC_CODE, NULL, 
			ISNULL( SUM( [IO].IO_AMOUNT + [IO].EXT_MARKUP_AMT ), 0 )
	   FROM dbo.POSTPERIOD PP, dbo.JOB_COMPONENT JC, dbo.JOB_LOG JL, dbo.INCOME_ONLY [IO] 
	  WHERE [IO].IO_INV_DATE BETWEEN PP.PPSRTDATE AND PP.PPENDDATE
		AND JC.JOB_NUMBER = [IO].JOB_NUMBER
		AND JC.JOB_COMPONENT_NBR = [IO].JOB_COMPONENT_NBR
		AND JC.JOB_NUMBER = JL.JOB_NUMBER
		AND ( PP.PPPERIOD BETWEEN @period1 AND @period2 )
   GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, PP.PPPERIOD, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
			JL.SC_CODE, [IO].FNC_CODE
UNION
	 SELECT 0, 'fee', OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, 'P', SC_CODE, FNC_CODE, SALE_POST_PERIOD, 
			ISNULL( SUM( INC_ONLY_AMT ), 0 ) + ISNULL( SUM( COMMISSION_AMT ), 0 ) 
			+ ISNULL( SUM( AB_INC_AMT ), 0 )
			+ ISNULL( SUM( AB_COMMISSION_AMT ), 0 )
			+ ISNULL( SUM( AB_SALE_AMT ), 0 )
	   FROM AR_SUMMARY 
	  WHERE ( SALE_POST_PERIOD BETWEEN @period1 AND @period2 )  AND JOB_NUMBER IS NOT NULL
				AND (FNC_TYPE = 'I')
				AND (AB_REC_FLAG IS NULL OR AB_REC_FLAG = 2)
   GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, 
			SC_CODE, FNC_CODE, SALE_POST_PERIOD	
UNION
	 SELECT 0, 'fee', OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, 'P', SC_CODE, FNC_CODE, SALE_POST_PERIOD, 
			ISNULL( SUM( INC_ONLY_AMT ), 0 ) + ISNULL( SUM( COMMISSION_AMT ), 0 ) 
			+ ISNULL( SUM( AB_SALE_AMT ), 0 )
	   FROM AR_SUMMARY 
	  WHERE ( SALE_POST_PERIOD BETWEEN @period1 AND @period2 )  AND JOB_NUMBER IS NOT NULL
				AND (FNC_TYPE = 'I')
				AND (AB_REC_FLAG = 1)
   GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, 
			SC_CODE, FNC_CODE, SALE_POST_PERIOD				
					
			
INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT )	
--	 SELECT 0, 'lab', JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, PP.PPPERIOD, 
--			JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 'P', JL.SC_CODE, ETD.FNC_CODE, AR.AR_POST_PERIOD, 
--			ISNULL( SUM( ETD.TOTAL_BILL + ETD.EXT_MARKUP_AMT ), 0 )
--	   FROM	dbo.POSTPERIOD PP, dbo.JOB_COMPONENT JC, dbo.JOB_LOG JL, dbo.EMP_TIME ET, dbo.EMP_TIME_DTL ETD LEFT OUTER JOIN dbo.ACCT_REC AR 
--	     ON ETD.AR_INV_NBR = AR.AR_INV_NBR 
--	    AND ETD.AR_INV_SEQ = AR.AR_INV_SEQ
--	  WHERE ET.EMP_DATE BETWEEN PP.PPSRTDATE AND PP.PPENDDATE
--		AND ET.ET_ID = ETD.ET_ID
--		AND JC.JOB_NUMBER = ETD.JOB_NUMBER
--		AND JC.JOB_COMPONENT_NBR = ETD.JOB_COMPONENT_NBR
--		AND JC.JOB_NUMBER = JL.JOB_NUMBER
--		AND ( PP.PPPERIOD BETWEEN @period1 AND @period2 OR AR.AR_POST_PERIOD BETWEEN @period1 AND @period2 )
--   GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, PP.PPPERIOD, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, JL.SC_CODE, ETD.FNC_CODE, AR.AR_POST_PERIOD

	 SELECT 0, 'lab', JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, PP.PPPERIOD, 
			JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 'P', JL.SC_CODE, ETD.FNC_CODE, NULL, 
			ISNULL( SUM( ETD.TOTAL_BILL + ETD.EXT_MARKUP_AMT ), 0 )
	   FROM	dbo.POSTPERIOD PP, dbo.JOB_COMPONENT JC, dbo.JOB_LOG JL, dbo.EMP_TIME ET, dbo.EMP_TIME_DTL ETD 
	  WHERE ET.EMP_DATE BETWEEN PP.PPSRTDATE AND PP.PPENDDATE
		AND ET.ET_ID = ETD.ET_ID
		AND JC.JOB_NUMBER = ETD.JOB_NUMBER
		AND JC.JOB_COMPONENT_NBR = ETD.JOB_COMPONENT_NBR
		AND JC.JOB_NUMBER = JL.JOB_NUMBER
		AND ( PP.PPPERIOD BETWEEN @period1 AND @period2 )
   GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, PP.PPPERIOD, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, JL.SC_CODE, ETD.FNC_CODE
UNION
	 SELECT 0, 'lab', OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD AS PPPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, 'P', SC_CODE, FNC_CODE, SALE_POST_PERIOD AS PPPERIOD_PP, 
			SUM ( ISNULL( EMP_TIME_AMT, 0 ) )+ SUM( ISNULL( COMMISSION_AMT, 0 ) ) 
			+ SUM( ISNULL( AB_INC_AMT, 0 ) )
			+ SUM( ISNULL( AB_COMMISSION_AMT, 0 ) )
			+ SUM( ISNULL( AB_SALE_AMT, 0 ) )
	   FROM	 AR_SUMMARY 
	  WHERE ( SALE_POST_PERIOD BETWEEN @period1 AND @period2  ) AND JOB_NUMBER IS NOT NULL
				AND (FNC_TYPE = 'E')
				AND (AB_REC_FLAG IS NULL OR AB_REC_FLAG = 2)
   GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, SC_CODE, FNC_CODE,  SALE_POST_PERIOD 
UNION
	 SELECT 0, 'lab', OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD AS PPPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, 'P', SC_CODE, FNC_CODE, SALE_POST_PERIOD AS PPPERIOD_PP, 
			SUM ( ISNULL( EMP_TIME_AMT, 0 ) )+ SUM( ISNULL( COMMISSION_AMT, 0 ) ) 
			+ SUM( ISNULL( AB_SALE_AMT, 0 ) )
	   FROM	 AR_SUMMARY 
	  WHERE ( SALE_POST_PERIOD BETWEEN @period1 AND @period2  ) AND JOB_NUMBER IS NOT NULL
				AND (FNC_TYPE = 'E')
				AND (AB_REC_FLAG = 1)
   GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, SC_CODE, FNC_CODE,  SALE_POST_PERIOD 
   ORDER BY JOB_NUMBER   

INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT )	
--	 SELECT 0, 'cos', JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, AP.POST_PERIOD, 
--			JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 'P', JL.SC_CODE, AP.FNC_CODE, AR.AR_POST_PERIOD, 
--			ISNULL( SUM( AP.AP_PROD_EXT_AMT + AP.EXT_NONRESALE_TAX ), 0 )
--	   FROM dbo.JOB_COMPONENT JC, dbo.JOB_LOG JL, dbo.AP_PRODUCTION AP LEFT OUTER JOIN dbo.ACCT_REC AR 
--	     ON AP.AR_INV_NBR = AR.AR_INV_NBR 
--	    AND AP.AR_INV_SEQ = AR.AR_INV_SEQ 
--	    AND AP.AR_TYPE = AR.AR_TYPE
--	  WHERE JC.JOB_NUMBER = AP.JOB_NUMBER
--		AND JC.JOB_COMPONENT_NBR = AP.JOB_COMPONENT_NBR
--		AND JC.JOB_NUMBER = JL.JOB_NUMBER
--		AND ( AP.AP_PROD_NOBILL_FLG IS NULL OR AP.AP_PROD_NOBILL_FLG = 0 )
--		AND ( AP.POST_PERIOD BETWEEN @period1 AND @period2 OR AR.AR_POST_PERIOD BETWEEN @period1 AND @period2 )
--   GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, AP.POST_PERIOD, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, JL.SC_CODE,AP.FNC_CODE, AR.AR_POST_PERIOD

	 SELECT 0, 'cos', JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, AP.POST_PERIOD, 
			JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 'P', JL.SC_CODE, AP.FNC_CODE, NULL, 
			ISNULL( SUM( AP.AP_PROD_EXT_AMT + AP.EXT_NONRESALE_TAX ), 0 )
	   FROM dbo.JOB_COMPONENT JC, dbo.JOB_LOG JL, dbo.AP_PRODUCTION AP 
	  WHERE JC.JOB_NUMBER = AP.JOB_NUMBER
		AND JC.JOB_COMPONENT_NBR = AP.JOB_COMPONENT_NBR
		AND JC.JOB_NUMBER = JL.JOB_NUMBER
		AND ( AP.AP_PROD_NOBILL_FLG IS NULL OR AP.AP_PROD_NOBILL_FLG = 0 )
		AND ( AP.POST_PERIOD BETWEEN @period1 AND @period2 )
   GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, AP.POST_PERIOD, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, JL.SC_CODE,AP.FNC_CODE
UNION
     SELECT 0, 'cos', AR.OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, 
			AR.JOB_NUMBER, AR.JOB_COMPONENT_NBR, 'P', SC_CODE, AR.FNC_CODE, SALE_POST_PERIOD PP, 
			SUM( ISNULL(COST_AMT, 0) ) + SUM( ISNULL(NON_RESALE_AMT, 0) ) + SUM( ISNULL(NET_CHARGE_AMT, 0) ) 
			+ SUM( ISNULL( AB_COST_AMT, 0 ) )
			+ SUM( ISNULL( AB_NONRESALE_AMT, 0 ) )
	   FROM AR_SUMMARY AR
	  WHERE ( SALE_POST_PERIOD BETWEEN @period1 AND @period2 ) AND JOB_NUMBER IS NOT NULL
				AND (FNC_TYPE = 'V') --????
				AND (AB_REC_FLAG IS NULL OR AB_REC_FLAG = 2)
   GROUP BY AR.OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, AR.JOB_NUMBER, AR.JOB_COMPONENT_NBR, SC_CODE,  AR.FNC_CODE, SALE_POST_PERIOD  
UNION
     SELECT 0, 'cos', AR.OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, 
			AR.JOB_NUMBER, AR.JOB_COMPONENT_NBR, 'P', SC_CODE, AR.FNC_CODE, SALE_POST_PERIOD PP, 
			SUM( ISNULL(COST_AMT, 0) ) + SUM( ISNULL(NON_RESALE_AMT, 0) ) + SUM( ISNULL(NET_CHARGE_AMT, 0) ) 
			+ SUM( ISNULL( AB_SALE_AMT, 0 ) )
	   FROM AR_SUMMARY AR
	  WHERE ( SALE_POST_PERIOD BETWEEN @period1 AND @period2 ) AND JOB_NUMBER IS NOT NULL
				AND (FNC_TYPE = 'V') --????
				AND (AB_REC_FLAG = 1)
   GROUP BY AR.OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, AR.JOB_NUMBER, AR.JOB_COMPONENT_NBR, SC_CODE,  AR.FNC_CODE, SALE_POST_PERIOD  
	 ORDER BY JOB_NUMBER	 

/* Non Bill */
INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT )	
SELECT 0, 'de',  	JL.OFFICE_CODE, 	JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, 
	AP.POST_PERIOD, 	JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 	'P', 
	JL.SC_CODE,	AP.FNC_CODE, 	AP.POST_PERIOD, 
	SUM(ISNULL(AP.AP_PROD_EXT_AMT,0) + ISNULL(AP.EXT_NONRESALE_TAX,0))
FROM JOB_COMPONENT JC, 
	JOB_LOG JL, 
	AP_PRODUCTION AP 
WHERE JC.JOB_NUMBER = AP.JOB_NUMBER
   AND JC.JOB_COMPONENT_NBR = AP.JOB_COMPONENT_NBR
   AND JC.JOB_NUMBER = JL.JOB_NUMBER
   AND AP.AP_PROD_NOBILL_FLG = 1
   AND AP.POST_PERIOD BETWEEN @period1 AND @period2
GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, AP.POST_PERIOD, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, JL.SC_CODE,AP.FNC_CODE, AP.POST_PERIOD

INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT )	
--SELECT 0, 'com',  
--	JL.OFFICE_CODE, 	JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, 	AP.POST_PERIOD, 
--	JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 	'P', 	JL.SC_CODE,	AP.FNC_CODE, 
--	AR.AR_POST_PERIOD, AMOUNT = 
--		CASE  AP.AP_PROD_NOBILL_FLG
--			WHEN 1 THEN 0 
--			ELSE ISNULL(SUM(AP.EXT_MARKUP_AMT),0)
--		END
--FROM JOB_COMPONENT JC, 
--	JOB_LOG JL,  
--	AP_PRODUCTION AP LEFT OUTER JOIN ACCT_REC AR ON AP.AR_INV_NBR = AR.AR_INV_NBR AND AP.AR_INV_SEQ = AR.AR_INV_SEQ AND AP.AR_TYPE = AR.AR_TYPE
--WHERE JC.JOB_NUMBER = AP.JOB_NUMBER
--    AND JC.JOB_COMPONENT_NBR = AP.JOB_COMPONENT_NBR
--    AND JC.JOB_NUMBER = JL.JOB_NUMBER
--    AND ( AP.POST_PERIOD BETWEEN @period1 AND @period2 OR AR.AR_POST_PERIOD BETWEEN @period1 AND @period2 )
--GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, AP.POST_PERIOD, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, JL.SC_CODE,AP.FNC_CODE, AR.AR_POST_PERIOD, AP.AP_PROD_NOBILL_FLG

	SELECT 0, 'com',  
		JL.OFFICE_CODE, 	JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, 	AP.POST_PERIOD, 
		JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 	'P', 	JL.SC_CODE,	AP.FNC_CODE, NULL, 
		AMOUNT = 
			CASE  AP.AP_PROD_NOBILL_FLG
				WHEN 1 THEN 0 
				ELSE ISNULL(SUM(AP.EXT_MARKUP_AMT),0)
			END
	FROM JOB_COMPONENT JC, 
		JOB_LOG JL,  
		AP_PRODUCTION AP
	WHERE JC.JOB_NUMBER = AP.JOB_NUMBER
		AND JC.JOB_COMPONENT_NBR = AP.JOB_COMPONENT_NBR
		AND JC.JOB_NUMBER = JL.JOB_NUMBER
		AND ( AP.POST_PERIOD BETWEEN @period1 AND @period2 )
	GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, AP.POST_PERIOD, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, JL.SC_CODE,AP.FNC_CODE, AP.AP_PROD_NOBILL_FLG
UNION
     SELECT 0, 'com', AR.OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, 
			AR.JOB_NUMBER, AR.JOB_COMPONENT_NBR, 'P', SC_CODE, AR.FNC_CODE, SALE_POST_PERIOD PP, 
			SUM(ISNULL(COMMISSION_AMT,0)) + SUM(ISNULL(REBATE_AMT, 0))
			+ SUM(ISNULL(AB_COMMISSION_AMT, 0))
	   FROM AR_SUMMARY AR
	  WHERE ( SALE_POST_PERIOD BETWEEN @period1 AND @period2 ) AND JOB_NUMBER IS NOT NULL
				--AND (FNC_TYPE = 'V') --????
				AND (AB_REC_FLAG IS NULL OR AB_REC_FLAG = 2)
   GROUP BY AR.OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, AR.JOB_NUMBER, AR.JOB_COMPONENT_NBR, SC_CODE,  AR.FNC_CODE, SALE_POST_PERIOD  
UNION
     SELECT 0, 'com', AR.OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, 
			AR.JOB_NUMBER, AR.JOB_COMPONENT_NBR, 'P', SC_CODE, AR.FNC_CODE, SALE_POST_PERIOD PP, 
			SUM(ISNULL(COMMISSION_AMT,0)) + SUM(ISNULL(REBATE_AMT, 0))
			+ SUM(ISNULL(AB_COMMISSION_AMT, 0))
	   FROM AR_SUMMARY AR
	  WHERE ( SALE_POST_PERIOD BETWEEN @period1 AND @period2 ) AND JOB_NUMBER IS NOT NULL
				AND (FNC_TYPE <> 'R') --????
				AND (AB_REC_FLAG = 1)
   GROUP BY AR.OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, AR.JOB_NUMBER, AR.JOB_COMPONENT_NBR, SC_CODE,  AR.FNC_CODE, SALE_POST_PERIOD  
	 ORDER BY JOB_NUMBER		 

/*  No Change */
INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT )	
SELECT 0, 'oop', 
	JL.OFFICE_CODE, 
	JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, 
	PP.PPPERIOD, 
	JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	'P', 
	JL.SC_CODE,
	OOP.FNC_CODE, 
	PP.PPPERIOD, 
	ISNULL(SUM(OOP.AMOUNT),0)
FROM  POSTPERIOD PP, 
	JOB_COMPONENT JC, 
   	JOB_LOG JL, 
	CLIENT_OOP OOP
WHERE OOP.INV_DATE BETWEEN PP.PPSRTDATE AND PP.PPENDDATE
     AND JC.JOB_NUMBER = OOP.JOB_NUMBER
     AND JC.JOB_COMPONENT_NBR = OOP.JOB_COMPONENT_NBR
     AND JC.JOB_NUMBER = JL.JOB_NUMBER
     AND PP.PPPERIOD BETWEEN @period1 AND @period2
GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, PP.PPPERIOD, 
	JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, JL.SC_CODE,
	OOP.FNC_CODE, PP.PPPERIOD

/* Commision + Rebate for AR_SUMMARY - Billed Only */
INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT )	
--SELECT 0, 'com', 	OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, AR_POST_PERIOD, 
--	JOB_NUMBER, JOB_COMPONENT_NBR, 'M', SC_CODE,	'', 	AR_POST_PERIOD, 
--	ISNULL(SUM(AR_COMM_AMT), 0)
--FROM  ACCT_REC
--WHERE REC_TYPE IN ( 'M','N','I','O','R','T' ) 
--AND ( AR_INV_SEQ = 0 OR AR_INV_SEQ = 99 ) 
--AND ( MANUAL_INV = 0 OR MANUAL_INV IS NULL )  
--AND ( VOID_FLAG <> 1 OR VOID_FLAG IS NULL )
--     AND AR_POST_PERIOD BETWEEN @period1 AND @period2
--GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, AR_POST_PERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, SC_CODE, AR_POST_PERIOD
	SELECT 0, 'com', 
		AR.OFFICE_CODE, 
		AR.CL_CODE, AR.DIV_CODE, AR.PRD_CODE, 
		SALE_POST_PERIOD, --AR_POST_PERIOD
		AR.JOB_NUMBER, AR.JOB_COMPONENT_NBR, 
		'M', 
		AR.SC_CODE,
		NULL, 
		SALE_POST_PERIOD AS PP, 
		SUM(ISNULL(AR.COMMISSION_AMT,0))
	FROM  AR_SUMMARY AR 
	WHERE ORDER_NBR IS NOT NULL --REC_TYPE IN ( 'M','N','I','O','R','T' ) 
	AND ( AR.AR_INV_SEQ = 0 OR AR.AR_INV_SEQ = 99 ) 
	AND ( MANUAL_FLAG = 0 OR MANUAL_FLAG IS NULL )  --MANUAL_INV
	AND ( SALE_POST_PERIOD BETWEEN @period1 AND @period2 )
	GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, SC_CODE, SALE_POST_PERIOD
	ORDER BY JOB_NUMBER, JOB_COMPONENT_NBR, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, SC_CODE
	
/******* PJH 12/14/16 - per EC ******************************/

INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT )		
	SELECT 0, 'com', 
		AR.OFFICE_CODE, 
		AR.CL_CODE, AR.DIV_CODE, AR.PRD_CODE, 
		SALE_POST_PERIOD, --AR_POST_PERIOD
		AR.JOB_NUMBER, AR.JOB_COMPONENT_NBR, 
		'M', 
		AR.SC_CODE,
		NULL, 
		SALE_POST_PERIOD AS PP, 
		SUM(ISNULL(AR.REBATE_AMT,0)) 
	FROM  AR_SUMMARY AR 
	WHERE ORDER_NBR IS NOT NULL --REC_TYPE IN ( 'M','N','I','O','R','T' ) 
	AND ( AR.AR_INV_SEQ = 0 OR AR.AR_INV_SEQ = 99 ) 
	AND ( MANUAL_FLAG = 0 OR MANUAL_FLAG IS NULL )  --MANUAL_INV
	AND ( SALE_POST_PERIOD BETWEEN @period1 AND @period2 )
	GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, SC_CODE, SALE_POST_PERIOD
	ORDER BY JOB_NUMBER, JOB_COMPONENT_NBR, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, SC_CODE		

INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT )	
--SELECT 0, 'cos', 
--	OFFICE_CODE, 
--	CL_CODE, DIV_CODE, PRD_CODE, 
--	AR_POST_PERIOD, 
--	JOB_NUMBER, JOB_COMPONENT_NBR, 
--	'M', 
--	SC_CODE,
--	'', 
--	AR_POST_PERIOD, 
--	ISNULL(SUM(AR_COS_AMT),0)
--FROM  ACCT_REC
--WHERE REC_TYPE IN ( 'M','N','I','O','R','T' ) 
--	AND ( AR_INV_SEQ = 0 OR AR_INV_SEQ = 99 ) 
--	AND ( MANUAL_INV = 0 OR MANUAL_INV IS NULL )  
--	AND ( VOID_FLAG <> 1 OR VOID_FLAG IS NULL )
--     	AND AR_POST_PERIOD BETWEEN @period1 AND @period2
--GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, AR_POST_PERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, SC_CODE, AR_POST_PERIOD
	SELECT 0, 'cos', 
		AR.OFFICE_CODE, 
		AR.CL_CODE, AR.DIV_CODE, AR.PRD_CODE, 
		SALE_POST_PERIOD, --AR_POST_PERIOD
		AR.JOB_NUMBER, AR.JOB_COMPONENT_NBR, 
		'M', 
		AR.SC_CODE,
		NULL, 
		SALE_POST_PERIOD AS PP, 
		SUM( ISNULL(COST_AMT, 0) ) + SUM( ISNULL(NON_RESALE_AMT, 0) ) + SUM( ISNULL(NET_CHARGE_AMT, 0) ) + SUM( ISNULL(DISCOUNT_AMT, 0) ) 
	FROM  AR_SUMMARY AR 
	WHERE ORDER_NBR IS NOT NULL --REC_TYPE IN ( 'M','N','I','O','R','T' ) 
	AND ( AR.AR_INV_SEQ = 0 OR AR.AR_INV_SEQ = 99 ) 
	AND ( MANUAL_FLAG = 0 OR MANUAL_FLAG IS NULL )  --MANUAL_INV
	AND ( SALE_POST_PERIOD BETWEEN @period1 AND @period2 )
	GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, SC_CODE, SALE_POST_PERIOD
	ORDER BY JOB_NUMBER, JOB_COMPONENT_NBR, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD
	
/******* PJH 12/14/16 Added per EC ****************************/

INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT )	
	SELECT 0, 'com', 
		AR.OFFICE_CODE, 
		AR.CL_CODE, AR.DIV_CODE, AR.PRD_CODE, 
		SALE_POST_PERIOD, --AR_POST_PERIOD
		AR.JOB_NUMBER, AR.JOB_COMPONENT_NBR, 
		'M', 
		AR.SC_CODE,
		NULL, 
		SALE_POST_PERIOD AS PP, 
		SUM(ISNULL(ADDITIONAL_AMT, 0)) 
	FROM  AR_SUMMARY AR 
	WHERE ORDER_NBR IS NOT NULL --REC_TYPE IN ( 'M','N','I','O','R','T' ) 
	AND ( AR.AR_INV_SEQ = 0 OR AR.AR_INV_SEQ = 99 ) 
	AND ( MANUAL_FLAG = 0 OR MANUAL_FLAG IS NULL )  --MANUAL_INV
	AND ( SALE_POST_PERIOD BETWEEN @period1 AND @period2 )
	GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, SC_CODE, SALE_POST_PERIOD
	ORDER BY JOB_NUMBER, JOB_COMPONENT_NBR, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD		
	
-- INSERT I/O BILLING & INCOME APPROVAL  ************************

INSERT INTO ACTUALS_ACC (ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, 
			PPERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT)	
 SELECT 0, 'fee', OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, 
		JOB_NUMBER, JOB_COMPONENT_NBR, 'P', SC_CODE, FNC_CODE, SALE_POST_PERIOD, 
		ISNULL( SUM( AB_SALE_AMT ), 0 )
   FROM AR_SUMMARY 
  WHERE ( SALE_POST_PERIOD BETWEEN @period1 AND @period2 )  AND JOB_NUMBER IS NOT NULL
			AND (FNC_TYPE = 'R')
			AND (AB_REC_FLAG = 1)
GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, SALE_POST_PERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, 
		SC_CODE, FNC_CODE, SALE_POST_PERIOD	


-- INSERT FORECAST BILLING APPROVAL  ************************

INSERT INTO ACTUALS_ACC (ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, 
			PPERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT)	

SELECT 1, 'fee',
 	JL.OFFICE_CODE, 
	JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, 
	CAST(DATEPART(YEAR, BAC.BA_CL_DATE) AS VARCHAR(4)) +
 		CASE LEN(CAST(DATEPART(MONTH, BAC.BA_CL_DATE) AS VARCHAR(2)))
 			WHEN 1 THEN '0' + CAST(DATEPART(MONTH, BAC.BA_CL_DATE) AS VARCHAR(2))
 			WHEN 2 THEN CAST(DATEPART(MONTH, BAC.BA_CL_DATE) AS VARCHAR(2))
 	END,
	JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	'P',
	JL.SC_CODE,
	BAD.FNC_CODE, 
	NULL, /* '' */ 
	ISNULL(SUM(BAD.APPR_NET + BAD.APPR_MARKUP_AMT),0)

FROM JOB_COMPONENT JC
   	INNER JOIN JOB_LOG JL ON JC.JOB_NUMBER = JL.JOB_NUMBER
   	INNER JOIN BILL_APPR_HDR BAH ON BAH.JOB_NUMBER = JC.JOB_NUMBER
   		AND BAH.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR
   	INNER JOIN BILL_APPR_DTL BAD ON BAD.BA_ID = BAH.BA_ID
   		AND BAD.JOB_NUMBER = BAH.JOB_NUMBER
   		AND BAD.JOB_COMPONENT_NBR = BAH.JOB_COMPONENT_NBR
   	INNER JOIN BILL_APPR_CL BAC ON BAC.BA_ID = BAH.BA_ID
	INNER JOIN FUNCTIONS F ON F.FNC_CODE = BAD.FNC_CODE

WHERE F.FNC_TYPE = 'I'
     AND  BAC.BA_CL_DATE BETWEEN @DATE1 AND @DATE2

GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, BAC.BA_CL_DATE, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	JL.SC_CODE, BAD.FNC_CODE

INSERT INTO ACTUALS_ACC (ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, 
			PPERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT)	
SELECT 1, 'lab',
 	JL.OFFICE_CODE, 
	JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, 
	CAST(DATEPART(YEAR, BAC.BA_CL_DATE) AS VARCHAR(4)) +
 		CASE LEN(CAST(DATEPART(MONTH, BAC.BA_CL_DATE) AS VARCHAR(2)))
 			WHEN 1 THEN '0' + CAST(DATEPART(MONTH, BAC.BA_CL_DATE) AS VARCHAR(2))
 			WHEN 2 THEN CAST(DATEPART(MONTH, BAC.BA_CL_DATE) AS VARCHAR(2))
 	END,
	JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	'P',
	JL.SC_CODE,
	BAD.FNC_CODE, 
	NULL, /* '' */
	ISNULL(SUM(BAD.APPR_NET + BAD.APPR_MARKUP_AMT),0)

FROM JOB_COMPONENT JC
   	INNER JOIN JOB_LOG JL ON JC.JOB_NUMBER = JL.JOB_NUMBER
   	INNER JOIN BILL_APPR_HDR BAH ON BAH.JOB_NUMBER = JC.JOB_NUMBER
   		AND BAH.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR
   	INNER JOIN BILL_APPR_DTL BAD ON BAD.BA_ID = BAH.BA_ID
   		AND BAD.JOB_NUMBER = BAH.JOB_NUMBER
   		AND BAD.JOB_COMPONENT_NBR = BAH.JOB_COMPONENT_NBR
   	INNER JOIN BILL_APPR_CL BAC ON BAC.BA_ID = BAH.BA_ID
	INNER JOIN FUNCTIONS F ON F.FNC_CODE = BAD.FNC_CODE

WHERE F.FNC_TYPE = 'E'
     AND  BAC.BA_CL_DATE BETWEEN @DATE1 AND @DATE2

GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, BAC.BA_CL_DATE, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
JL.SC_CODE, BAD.FNC_CODE

INSERT INTO ACTUALS_ACC (ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, 
			PPERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT)	
SELECT 1, 'cos',
 	JL.OFFICE_CODE, 
	JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, 
	CAST(DATEPART(YEAR, BAC.BA_CL_DATE) AS VARCHAR(4)) +
 		CASE LEN(CAST(DATEPART(MONTH, BAC.BA_CL_DATE) AS VARCHAR(2)))
 			WHEN 1 THEN '0' + CAST(DATEPART(MONTH, BAC.BA_CL_DATE) AS VARCHAR(2))
 			WHEN 2 THEN CAST(DATEPART(MONTH, BAC.BA_CL_DATE) AS VARCHAR(2))
 	END,
	JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	'P',
	JL.SC_CODE,
	BAD.FNC_CODE, 
	NULL, /* '' */
	ISNULL(SUM(BAD.APPR_NET + BAD.APPR_VENDOR_TAX),0)

FROM JOB_COMPONENT JC
   	INNER JOIN JOB_LOG JL ON JC.JOB_NUMBER = JL.JOB_NUMBER
   	INNER JOIN BILL_APPR_HDR BAH ON BAH.JOB_NUMBER = JC.JOB_NUMBER
   		AND BAH.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR
   	INNER JOIN BILL_APPR_DTL BAD ON BAD.BA_ID = BAH.BA_ID
   		AND BAD.JOB_NUMBER = BAH.JOB_NUMBER
   		AND BAD.JOB_COMPONENT_NBR = BAH.JOB_COMPONENT_NBR
   	INNER JOIN BILL_APPR_CL BAC ON BAC.BA_ID = BAH.BA_ID
	INNER JOIN FUNCTIONS F ON F.FNC_CODE = BAD.FNC_CODE

WHERE F.FNC_TYPE = 'V'
     AND ( BAD.ROW_TYPE = 0 OR BAD.ROW_TYPE IS NULL )
     AND BAC.BA_CL_DATE BETWEEN @DATE1 AND @DATE2

GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, BAC.BA_CL_DATE, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
JL.SC_CODE, BAD.FNC_CODE


INSERT INTO ACTUALS_ACC (ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, 
			PPERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT)	
SELECT 1, 'com',
 	JL.OFFICE_CODE, 
	JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, 
	CAST(DATEPART(YEAR, BAC.BA_CL_DATE) AS VARCHAR(4)) +
 		CASE LEN(CAST(DATEPART(MONTH, BAC.BA_CL_DATE) AS VARCHAR(2)))
 			WHEN 1 THEN '0' + CAST(DATEPART(MONTH, BAC.BA_CL_DATE) AS VARCHAR(2))
 			WHEN 2 THEN CAST(DATEPART(MONTH, BAC.BA_CL_DATE) AS VARCHAR(2))
 	END,
	JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	'P',
	JL.SC_CODE,
	BAD.FNC_CODE, 
	NULL, /* '' */
	ISNULL(SUM(BAD.APPR_MARKUP_AMT),0)

FROM JOB_COMPONENT JC
   	INNER JOIN JOB_LOG JL ON JC.JOB_NUMBER = JL.JOB_NUMBER
   	INNER JOIN BILL_APPR_HDR BAH ON BAH.JOB_NUMBER = JC.JOB_NUMBER
   		AND BAH.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR
   	INNER JOIN BILL_APPR_DTL BAD ON BAD.BA_ID = BAH.BA_ID
   		AND BAD.JOB_NUMBER = BAH.JOB_NUMBER
   		AND BAD.JOB_COMPONENT_NBR = BAH.JOB_COMPONENT_NBR
   	INNER JOIN BILL_APPR_CL BAC ON BAC.BA_ID = BAH.BA_ID
	INNER JOIN FUNCTIONS F ON F.FNC_CODE = BAD.FNC_CODE

WHERE F.FNC_TYPE = 'V'
     AND ( BAD.ROW_TYPE = 0 OR BAD.ROW_TYPE IS NULL )
     AND BAC.BA_CL_DATE BETWEEN @DATE1 AND @DATE2

GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, BAC.BA_CL_DATE, JC.JOB_NUMBER, 
JC.JOB_COMPONENT_NBR, JL.SC_CODE, BAD.FNC_CODE


-- INSERT FORECAST APPROVED ESTIMATE ****************

INSERT INTO ACTUALS_ACC (ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, 
	ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT)	

SELECT 2, 'fee',
 	JL.OFFICE_CODE, 
	JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, 
	CAST(DATEPART(YEAR, EA.EST_APPR_DATE) AS VARCHAR(4)) +
 		CASE LEN(CAST(DATEPART(MONTH, EA.EST_APPR_DATE) AS VARCHAR(2)))
 			WHEN 1 THEN '0' + CAST(DATEPART(MONTH, EA.EST_APPR_DATE) AS VARCHAR(2))
 			WHEN 2 THEN CAST(DATEPART(MONTH, EA.EST_APPR_DATE) AS VARCHAR(2))
 	END,
	JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	'P',
	JL.SC_CODE,
	ERD.FNC_CODE, 
	CAST(DATEPART(YEAR, JC.JOB_FIRST_USE_DATE) AS VARCHAR(4)) +
 		CASE LEN(CAST(DATEPART(MONTH, JC.JOB_FIRST_USE_DATE) AS VARCHAR(2)))
 			WHEN 1 THEN '0' + CAST(DATEPART(MONTH, JC.JOB_FIRST_USE_DATE) AS VARCHAR(2))
 			WHEN 2 THEN CAST(DATEPART(MONTH, JC.JOB_FIRST_USE_DATE) AS VARCHAR(2))
 	END, 
	ISNULL(SUM(ERD.EST_REV_EXT_AMT + ERD.EXT_MARKUP_AMT), 0)

FROM  JOB_COMPONENT JC
   	INNER JOIN JOB_LOG JL ON JC.JOB_NUMBER = JL.JOB_NUMBER
   	INNER JOIN ESTIMATE_APPROVAL EA ON EA.JOB_NUMBER = JC.JOB_NUMBER
   				AND EA.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR
   	INNER JOIN ESTIMATE_REV_DET ERD ON ERD.ESTIMATE_NUMBER = EA.ESTIMATE_NUMBER
   				AND ERD.EST_COMPONENT_NBR = EA.EST_COMPONENT_NBR
   				AND ERD.EST_QUOTE_NBR = EA.EST_QUOTE_NBR
   				AND ERD.EST_REV_NBR = EA.EST_REVISION_NBR
				AND ERD.EST_FNC_TYPE = 'I'

WHERE  ( JC.JOB_FIRST_USE_DATE BETWEEN @DATE1 AND @DATE2
     	OR EA.EST_APPR_DATE BETWEEN @DATE1 AND @DATE2 )

GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, EA.EST_APPR_DATE, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	JL.SC_CODE, ERD.FNC_CODE, JC.JOB_FIRST_USE_DATE

INSERT INTO ACTUALS_ACC (ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, 
	ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT)	
SELECT 2, 'lab',
 	JL.OFFICE_CODE, 
	JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, 
	CAST(DATEPART(YEAR, EA.EST_APPR_DATE) AS VARCHAR(4)) +
 		CASE LEN(CAST(DATEPART(MONTH, EA.EST_APPR_DATE) AS VARCHAR(2)))
 			WHEN 1 THEN '0' + CAST(DATEPART(MONTH, EA.EST_APPR_DATE) AS VARCHAR(2))
 			WHEN 2 THEN CAST(DATEPART(MONTH, EA.EST_APPR_DATE) AS VARCHAR(2))
 	END,
	JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	'P',
	JL.SC_CODE,
	ERD.FNC_CODE, 
	CAST(DATEPART(YEAR, JC.JOB_FIRST_USE_DATE) AS VARCHAR(4)) +
 		CASE LEN(CAST(DATEPART(MONTH, JC.JOB_FIRST_USE_DATE) AS VARCHAR(2)))
 			WHEN 1 THEN '0' + CAST(DATEPART(MONTH, JC.JOB_FIRST_USE_DATE) AS VARCHAR(2))
 			WHEN 2 THEN CAST(DATEPART(MONTH, JC.JOB_FIRST_USE_DATE) AS VARCHAR(2))
 	END, 
	ISNULL(SUM(ERD.EST_REV_EXT_AMT + ERD.EXT_MARKUP_AMT), 0)

FROM  JOB_COMPONENT JC
   	INNER JOIN JOB_LOG JL ON JC.JOB_NUMBER = JL.JOB_NUMBER
   	INNER JOIN ESTIMATE_APPROVAL EA ON EA.JOB_NUMBER = JC.JOB_NUMBER
   				AND EA.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR
   	INNER JOIN ESTIMATE_REV_DET ERD ON ERD.ESTIMATE_NUMBER = EA.ESTIMATE_NUMBER
   				AND ERD.EST_COMPONENT_NBR = EA.EST_COMPONENT_NBR
   				AND ERD.EST_QUOTE_NBR = EA.EST_QUOTE_NBR
   				AND ERD.EST_REV_NBR = EA.EST_REVISION_NBR
   				AND ERD.EST_FNC_TYPE = 'E'

WHERE  ( JC.JOB_FIRST_USE_DATE BETWEEN @DATE1 AND @DATE2
     	OR EA.EST_APPR_DATE BETWEEN @DATE1 AND @DATE2 )

GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, EA.EST_APPR_DATE, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	JL.SC_CODE, ERD.FNC_CODE, JC.JOB_FIRST_USE_DATE

INSERT INTO ACTUALS_ACC (ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, 
	ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT)	
SELECT 2, 'cos',
 	JL.OFFICE_CODE, 
	JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, 
	CAST(DATEPART(YEAR, EA.EST_APPR_DATE) AS VARCHAR(4)) +
 		CASE LEN(CAST(DATEPART(MONTH, EA.EST_APPR_DATE) AS VARCHAR(2)))
 			WHEN 1 THEN '0' + CAST(DATEPART(MONTH, EA.EST_APPR_DATE) AS VARCHAR(2))
 			WHEN 2 THEN CAST(DATEPART(MONTH, EA.EST_APPR_DATE) AS VARCHAR(2))
 	END,
	JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	'P',
	JL.SC_CODE,
	ERD.FNC_CODE, 
	CAST(DATEPART(YEAR, JC.JOB_FIRST_USE_DATE) AS VARCHAR(4)) +
 		CASE LEN(CAST(DATEPART(MONTH, JC.JOB_FIRST_USE_DATE) AS VARCHAR(2)))
 			WHEN 1 THEN '0' + CAST(DATEPART(MONTH, JC.JOB_FIRST_USE_DATE) AS VARCHAR(2))
 			WHEN 2 THEN CAST(DATEPART(MONTH, JC.JOB_FIRST_USE_DATE) AS VARCHAR(2))
 	END, 
	ISNULL(SUM(ERD.EST_REV_EXT_AMT) + SUM(ERD.EXT_NONRESALE_TAX), 0)

FROM  JOB_COMPONENT JC
   	INNER JOIN JOB_LOG JL ON JC.JOB_NUMBER = JL.JOB_NUMBER
   	INNER JOIN ESTIMATE_APPROVAL EA ON EA.JOB_NUMBER = JC.JOB_NUMBER
   				AND EA.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR
   	INNER JOIN ESTIMATE_REV_DET ERD ON ERD.ESTIMATE_NUMBER = EA.ESTIMATE_NUMBER
   				AND ERD.EST_COMPONENT_NBR = EA.EST_COMPONENT_NBR
   				AND ERD.EST_QUOTE_NBR = EA.EST_QUOTE_NBR
   				AND ERD.EST_REV_NBR = EA.EST_REVISION_NBR
   				AND ERD.EST_FNC_TYPE = 'V'
   				AND ( ERD.EST_NONBILL_FLAG = 0 OR ERD.EST_NONBILL_FLAG IS NULL )

WHERE ( JC.JOB_FIRST_USE_DATE BETWEEN @DATE1 AND @DATE2
     	OR EA.EST_APPR_DATE BETWEEN @DATE1 AND @DATE2 )

GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, EA.EST_APPR_DATE, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	JL.SC_CODE, ERD.FNC_CODE, JC.JOB_FIRST_USE_DATE

INSERT INTO ACTUALS_ACC (ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, 
	ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT)	
SELECT 2, 'com',
 	JL.OFFICE_CODE, 
	JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, 
	CAST(DATEPART(YEAR, EA.EST_APPR_DATE) AS VARCHAR(4)) +
 		CASE LEN(CAST(DATEPART(MONTH, EA.EST_APPR_DATE) AS VARCHAR(2)))
 			WHEN 1 THEN '0' + CAST(DATEPART(MONTH, EA.EST_APPR_DATE) AS VARCHAR(2))
 			WHEN 2 THEN CAST(DATEPART(MONTH, EA.EST_APPR_DATE) AS VARCHAR(2))
 	END,
	JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	'P',
	JL.SC_CODE,
	ERD.FNC_CODE, 
	CAST(DATEPART(YEAR, JC.JOB_FIRST_USE_DATE) AS VARCHAR(4)) +
 		CASE LEN(CAST(DATEPART(MONTH, JC.JOB_FIRST_USE_DATE) AS VARCHAR(2)))
 			WHEN 1 THEN '0' + CAST(DATEPART(MONTH, JC.JOB_FIRST_USE_DATE) AS VARCHAR(2))
 			WHEN 2 THEN CAST(DATEPART(MONTH, JC.JOB_FIRST_USE_DATE) AS VARCHAR(2))
 	END, 
	ISNULL(SUM(ERD.EXT_MARKUP_AMT), 0)

FROM  JOB_COMPONENT JC
   	INNER JOIN JOB_LOG JL ON JC.JOB_NUMBER = JL.JOB_NUMBER
   	INNER JOIN ESTIMATE_APPROVAL EA ON EA.JOB_NUMBER = JC.JOB_NUMBER
   				AND EA.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR
   	INNER JOIN ESTIMATE_REV_DET ERD ON ERD.ESTIMATE_NUMBER = EA.ESTIMATE_NUMBER
   				AND ERD.EST_COMPONENT_NBR = EA.EST_COMPONENT_NBR
   				AND ERD.EST_QUOTE_NBR = EA.EST_QUOTE_NBR
   				AND ERD.EST_REV_NBR = EA.EST_REVISION_NBR
   				AND ERD.EST_FNC_TYPE = 'V'
   				AND  ( ERD.EST_NONBILL_FLAG = 0 OR ERD.EST_NONBILL_FLAG IS NULL )
WHERE ( JC.JOB_FIRST_USE_DATE BETWEEN @DATE1 AND @DATE2
     	OR EA.EST_APPR_DATE BETWEEN @DATE1 AND @DATE2 )

GROUP BY JL.OFFICE_CODE, JL.CL_CODE, JL.DIV_CODE, JL.PRD_CODE, EA.EST_APPR_DATE, JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR, 
	JL.SC_CODE, ERD.FNC_CODE, JC.JOB_FIRST_USE_DATE

-- BJL 08/17/2011
-- INSERT EMPLOYEE TIME FORECAST **********************************

-- Alternate employee (Time)
INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT )	

	 SELECT 4, 'lab', od.OFFICE_CODE, odjc.CL_CODE, odjc.DIV_CODE, odjc.PRD_CODE, eh.PPPERIOD, 
			odjc.JOB_NUMBER, odjc.JOB_COMPONENT_NBR, 'P', jl.SC_CODE, NULL, /* '' */  eh.PPPERIOD,
 			ISNULL( SUM( odae.[BILL_RATE] * odjcae.[HOURS] ), 0 )  
  	   FROM dbo.ETF_OFFDTLAE odae
 INNER JOIN ((((( dbo.ETF_OFFDTL od INNER JOIN dbo.ETF_HDR eh 
											ON od.ETF_ID = eh.ETF_ID ) 
									INNER JOIN dbo.ETF_OFFDTLJC odjc
											ON od.ETF_OFFDTL_ID = odjc.ETF_OFFDTL_ID ) 
									INNER JOIN dbo.ETF_OFFDTLJC_AE odjcae
											ON odjc.ETF_OFFDTLJC_ID = odjcae.ETF_OFFDTLJC_ID )
									INNER JOIN dbo.JOB_LOG jl 
											ON odjc.JOB_NUMBER = jl.JOB_NUMBER )
									INNER JOIN dbo.JOB_COMPONENT jc 
											ON odjc.JOB_NUMBER = jc.JOB_NUMBER 
										   AND odjc.JOB_COMPONENT_NBR = jc.JOB_COMPONENT_NBR ) 
		 ON ( odae.ETF_OFFDTLAE_ID = odjcae.ETF_OFFDTLAE_ID ) 
		AND ( odae.ETF_OFFDTL_ID = od.ETF_OFFDTL_ID )
	  WHERE ( od.APPROVED = 1 )
	    AND ( eh.PPPERIOD BETWEEN @period1 AND @period2 )	  
   GROUP BY	od.OFFICE_CODE, odjc.CL_CODE, odjc.DIV_CODE, odjc.PRD_CODE, eh.PPPERIOD,  
			odjc.JOB_NUMBER, odjc.JOB_COMPONENT_NBR, jl.SC_CODE, jc.JOB_FIRST_USE_DATE  
UNION
-- Standard employee (Time)
	 SELECT 4, 'lab', od.OFFICE_CODE, odjc.CL_CODE, odjc.DIV_CODE, odjc.PRD_CODE, eh.PPPERIOD, 
			odjc.JOB_NUMBER, odjc.JOB_COMPONENT_NBR, 'P', jl.SC_CODE, NULL, /* '' */  eh.PPPERIOD, 
 			ISNULL( SUM( ode.[BILL_RATE] * odjce.[HOURS] ), 0 ) 
	   FROM ((((( dbo.ETF_OFFDTL od INNER JOIN dbo.ETF_HDR eh 
											ON od.ETF_ID = eh.ETF_ID ) 
									INNER JOIN dbo.ETF_OFFDTLJC odjc 
											ON od.ETF_OFFDTL_ID = odjc.ETF_OFFDTL_ID ) 
									INNER JOIN dbo.ETF_OFFDTLEMP ode
											ON od.ETF_OFFDTL_ID = ode.ETF_OFFDTL_ID )
									INNER JOIN dbo.JOB_LOG jl 
											ON odjc.JOB_NUMBER = jl.JOB_NUMBER )
									INNER JOIN dbo.JOB_COMPONENT jc 
											ON odjc.JOB_NUMBER = jc.JOB_NUMBER 
										   AND odjc.JOB_COMPONENT_NBR = jc.JOB_COMPONENT_NBR )										   
 INNER JOIN dbo.ETF_OFFDTLJC_EMP odjce 
		 ON ( ode.ETF_OFFDTLEMP_ID = odjce.ETF_OFFDTLEMP_ID ) 
		AND ( odjc.ETF_OFFDTLJC_ID = odjce.ETF_OFFDTLJC_ID )
	  WHERE ( od.APPROVED = 1 )
	    AND ( eh.PPPERIOD BETWEEN @period1 AND @period2 )
   GROUP BY od.OFFICE_CODE, odjc.CL_CODE, odjc.DIV_CODE, odjc.PRD_CODE, eh.PPPERIOD,  
			odjc.JOB_NUMBER, odjc.JOB_COMPONENT_NBR, jl.SC_CODE, jc.JOB_FIRST_USE_DATE

-- BJL 08/29/2012
-- Alternate employee (DSC)
INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, PPERIOD, 
			JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, BILL_PERIOD, AMOUNT )	

	 SELECT 4, 'dsc', od.OFFICE_CODE, odjc.CL_CODE, odjc.DIV_CODE, odjc.PRD_CODE, eh.PPPERIOD, 
			odjc.JOB_NUMBER, odjc.JOB_COMPONENT_NBR, 'P', jl.SC_CODE, NULL, /* '' */  eh.PPPERIOD,
 			ISNULL( SUM( odae.[COST_RATE] * odjcae.[HOURS] ), 0 )  
  	   FROM dbo.ETF_OFFDTLAE odae
 INNER JOIN ((((( dbo.ETF_OFFDTL od INNER JOIN dbo.ETF_HDR eh 
											ON od.ETF_ID = eh.ETF_ID ) 
									INNER JOIN dbo.ETF_OFFDTLJC odjc
											ON od.ETF_OFFDTL_ID = odjc.ETF_OFFDTL_ID ) 
									INNER JOIN dbo.ETF_OFFDTLJC_AE odjcae
											ON odjc.ETF_OFFDTLJC_ID = odjcae.ETF_OFFDTLJC_ID )
									INNER JOIN dbo.JOB_LOG jl 
											ON odjc.JOB_NUMBER = jl.JOB_NUMBER )
									INNER JOIN dbo.JOB_COMPONENT jc 
											ON odjc.JOB_NUMBER = jc.JOB_NUMBER 
										   AND odjc.JOB_COMPONENT_NBR = jc.JOB_COMPONENT_NBR ) 
		 ON ( odae.ETF_OFFDTLAE_ID = odjcae.ETF_OFFDTLAE_ID ) 
		AND ( odae.ETF_OFFDTL_ID = od.ETF_OFFDTL_ID )
	  WHERE ( od.APPROVED = 1 )
	    AND ( eh.PPPERIOD BETWEEN @period1 AND @period2 )	  
   GROUP BY	od.OFFICE_CODE, odjc.CL_CODE, odjc.DIV_CODE, odjc.PRD_CODE, eh.PPPERIOD,  
			odjc.JOB_NUMBER, odjc.JOB_COMPONENT_NBR, jl.SC_CODE, jc.JOB_FIRST_USE_DATE  
UNION
-- Standard employee (DSC)
	 SELECT 4, 'dsc', od.OFFICE_CODE, odjc.CL_CODE, odjc.DIV_CODE, odjc.PRD_CODE, eh.PPPERIOD, 
			odjc.JOB_NUMBER, odjc.JOB_COMPONENT_NBR, 'P', jl.SC_CODE, NULL, /* '' */  eh.PPPERIOD, 
 			ISNULL( SUM( ode.[COST_RATE] * odjce.[HOURS] ), 0 ) 
 	   FROM ((((( dbo.ETF_OFFDTL od INNER JOIN dbo.ETF_HDR eh 
											ON od.ETF_ID = eh.ETF_ID ) 
									INNER JOIN dbo.ETF_OFFDTLJC odjc 
											ON od.ETF_OFFDTL_ID = odjc.ETF_OFFDTL_ID ) 
									INNER JOIN dbo.ETF_OFFDTLEMP ode
											ON od.ETF_OFFDTL_ID = ode.ETF_OFFDTL_ID )
									INNER JOIN dbo.JOB_LOG jl 
											ON odjc.JOB_NUMBER = jl.JOB_NUMBER )
									INNER JOIN dbo.JOB_COMPONENT jc 
											ON odjc.JOB_NUMBER = jc.JOB_NUMBER 
										   AND odjc.JOB_COMPONENT_NBR = jc.JOB_COMPONENT_NBR )										   
 INNER JOIN dbo.ETF_OFFDTLJC_EMP odjce 
		 ON ( ode.ETF_OFFDTLEMP_ID = odjce.ETF_OFFDTLEMP_ID ) 
		AND ( odjc.ETF_OFFDTLJC_ID = odjce.ETF_OFFDTLJC_ID )
	  WHERE ( od.APPROVED = 1 )
	    AND ( eh.PPPERIOD BETWEEN @period1 AND @period2 )
   GROUP BY od.OFFICE_CODE, odjc.CL_CODE, odjc.DIV_CODE, odjc.PRD_CODE, eh.PPPERIOD,  
			odjc.JOB_NUMBER, odjc.JOB_COMPONENT_NBR, jl.SC_CODE, jc.JOB_FIRST_USE_DATE
 
-- INSERT PROJECT SCHEDULE **********************************
INSERT INTO #TASK_LIST ( JOB_NUMBER, JOB_COMPONENT_NBR, CL_CODE, DIV_CODE,
            PRD_CODE, SC_CODE, FNC_CODE, PPERIOD, OFFICE_CODE, AMOUNT )
EXECUTE [dbo].[advsp_collect_project_schedule_cost_by_ppd] @period1, @period2

INSERT INTO dbo.ACTUALS_ACC ( ACTUAL_GRP, CATEGORY_CODE, OFFICE_CODE, CL_CODE, DIV_CODE, 
			PRD_CODE, PPERIOD, JOB_NUMBER, JOB_COMPONENT_NBR, ACTUALS_TYPE, SC_CODE, FNC_CODE, AMOUNT )	
	 SELECT 5, 'lab', tl.OFFICE_CODE, tl.CL_CODE, tl.DIV_CODE, tl.PRD_CODE, tl.PPERIOD, 
			tl.JOB_NUMBER, tl.JOB_COMPONENT_NBR, 'P', tl.SC_CODE, tl.FNC_CODE, tl.AMOUNT
	    FROM #TASK_LIST tl

SKIP:

--Insert Media Actuals
EXEC advsp_insertmediaactuals @period1, @period2
GO


IF ( @@ERROR = 0 )
	GRANT EXECUTE ON [advsp_collect_actuals] TO PUBLIC AS dbo
GO
