
/****** Object:  StoredProcedure [dbo].[advsp_collect_project_schedule_cost_by_ppd]    Script Date: 04/26/2013 13:36:23 ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[advsp_collect_project_schedule_cost_by_ppd]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[advsp_collect_project_schedule_cost_by_ppd]
GO


/****** Object:  StoredProcedure [dbo].[advsp_collect_project_schedule_cost_by_ppd]    Script Date: 04/26/2013 13:36:23 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[advsp_collect_project_schedule_cost_by_ppd] @ppd_start_in varchar(6), @ppd_end_in varchar(6)
AS

    SET ANSI_NULLS ON
    SET ANSI_WARNINGS OFF
    SET ARITHABORT OFF
    SET ARITHIGNORE ON
    
	DECLARE @Records integer, @Count integer, @Recordcomp integer, @Countcomp integer, @jNum integer, @cNum integer
	
	/*PJH 05/01/2013 - added CL_CODE, DIV_CODE, PRD_CODE, SC_CODE*/
	CREATE TABLE #PROJECT_TASK_LIST (
        [ROW_ID]				integer identity(1,1) NOT NULL,
		[JOB_NUMBER]			integer,
		[JOB_COMPONENT_NBR]		smallint,
		[SEQ_NBR]				smallint,
		[EST_FUNC]				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
		[POST_PERIOD]			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
		[OFFICE_CODE]			varchar(4) COLLATE SQL_Latin1_General_CP1_CS_AS,
		[CL_CODE]				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
		[DIV_CODE]				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
		[PRD_CODE]				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS,	
		[SC_CODE]				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS,				
		[START_DATE]			datetime,
		[END_DATE]				datetime,
        [EMP_CODE]				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
		[HOURS_ALLOWED]			decimal(15,2),
		[RATE_LEVEL]			smallint,
        [BILL_RATE]				decimal(15,3),
		[PROJ_AMT]				decimal(18,2));
		
	/*PJH 05/01/2013 - added JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, JOB_LOG.SC_CODE*/
	INSERT INTO #PROJECT_TASK_LIST
		 SELECT	V_JOB_TRAFFIC_DET.JOB_NUMBER, V_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR, 
				V_JOB_TRAFFIC_DET.SEQ_NBR, V_JOB_TRAFFIC_DET.FNC_EST,
				POST_PERIOD = COALESCE((   SELECT p.PPPERIOD 
											 FROM POSTPERIOD p 
											WHERE COALESCE( V_JOB_TRAFFIC_DET.JOB_REVISED_DATE, V_JOB_TRAFFIC_DET.TASK_START_DATE )
									      BETWEEN p.PPSRTDATE AND p.PPENDDATE ), @ppd_end_in ),
				JOB_LOG.OFFICE_CODE, JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, JOB_LOG.SC_CODE,
				V_JOB_TRAFFIC_DET.TASK_START_DATE, V_JOB_TRAFFIC_DET.JOB_REVISED_DATE, 
				V_JOB_TRAFFIC_DET.EMP_CODE, ISNULL( V_JOB_TRAFFIC_DET.JOB_HRS, 0 ), NULL, 0.00, 0.00
		   FROM	V_JOB_TRAFFIC_DET 
	 INNER JOIN JOB_COMPONENT ON V_JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER 
			AND V_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
	 INNER JOIN JOB_LOG ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
	      WHERE JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN ( 6, 12 )
			AND (
				( V_JOB_TRAFFIC_DET.JOB_REVISED_DATE BETWEEN ( SELECT p1.PPSRTDATE FROM POSTPERIOD p1 WHERE p1.PPPERIOD = @ppd_start_in )
														 AND ( SELECT p2.PPENDDATE FROM POSTPERIOD p2 WHERE p2.PPPERIOD = @ppd_end_in ))
			OR														 
				( V_JOB_TRAFFIC_DET.TASK_START_DATE BETWEEN ( SELECT p3.PPSRTDATE FROM POSTPERIOD p3 WHERE p3.PPPERIOD = @ppd_start_in )
														AND ( SELECT p4.PPENDDATE FROM POSTPERIOD p4 WHERE p4.PPPERIOD = @ppd_end_in )))  
	   ORDER BY V_JOB_TRAFFIC_DET.TASK_START_DATE

    DECLARE @DAY_COUNT AS integer, @DAY_INCREMENT AS integer, @IS_WORK_DAY AS integer	
	DECLARE @WORK_DAYS_TODAY AS decimal(15,5), @WORK_DAYS_TOTAL AS decimal(15,5), @CURR_JOB_NUMBER AS integer, @CURR_JOB_COMPONENT_NBR integer
	DECLARE @CURR_SEQ_NBR integer, @CURR_EST_FUNC varchar(6), @CURR_START_DATE smalldatetime, @CURR_END_DATE smalldatetime, @CURR_EMP_CODE varchar(6)
	DECLARE @CURR_HOURS_ALLOWED decimal(15,2), @CURR_ACTUAL_HOURS decimal(15,2), @CURR_ACTUAL_AMT decimal(15,4), @SUM_ACTUAL_HOURS decimal(15,2)
	DECLARE @CURR_BILL_RATE decimal(15,3), @CURR_ROW_ID integer, @CURR_CL_CODE varchar(6), @CURR_DIV_CODE varchar(6), @CURR_PRD_CODE varchar(6)
	DECLARE @CURR_SC_CODE varchar(6), @CURR_DAY_OF_WEEK smallint, @ROW_BILLING_RATE decimal(9,2), @ROW_RATE_LEVEL smallint,	@ROW_TAX_CODE varchar(4)
	DECLARE @ROW_TAX_LEVEL smallint, @ROW_NOBILL_FLAG smallint, @ROW_NOBILL_LEVEL smallint, @ROW_COMM decimal(9,3), @ROW_COMM_LEVEL smallint
	DECLARE @ROW_TAX_COMM smallint, @ROW_TAX_COMM_ONLY smallint, @ROW_TAX_COMM_FLAGS_LEVEL smallint, @ROW_FEE_TIME_FLAG smallint, @ROW_FEE_TIME_LEVEL smallint

	DECLARE @EMP_TITLE_ID integer
			
    DECLARE taskcur CURSOR FOR
	 SELECT ROW_ID
       FROM #PROJECT_TASK_LIST ;
        
	OPEN taskcur;
	FETCH NEXT FROM taskcur INTO @CURR_ROW_ID;
        
	WHILE ( @@FETCH_STATUS = 0 )
	BEGIN
		/*PJH 05/01/2013 - Get CL/DIV/PRD and pass to rate SP*/
		/*SELECT @CURR_JOB_NUMBER = JOB_NUMBER, @CURR_JOB_COMPONENT_NBR = JOB_COMPONENT_NBR, @CURR_SEQ_NBR = SEQ_NBR, 
				@CURR_EST_FUNC = EST_FUNC, @CURR_START_DATE = [START_DATE], @CURR_END_DATE = END_DATE, @CURR_EMP_CODE = EMP_CODE, 
				@CURR_HOURS_ALLOWED = HOURS_ALLOWED 
	       FROM #PROJECT_TASK_LIST 
	      WHERE ROW_ID = @CURR_ROW_ID;
	     */ 
		 SELECT @CURR_JOB_NUMBER = A.JOB_NUMBER, @CURR_JOB_COMPONENT_NBR = JOB_COMPONENT_NBR, @CURR_SEQ_NBR = SEQ_NBR, 
				@CURR_EST_FUNC = EST_FUNC, @CURR_START_DATE = [START_DATE], @CURR_END_DATE = END_DATE, @CURR_EMP_CODE = EMP_CODE, 
				@CURR_HOURS_ALLOWED = HOURS_ALLOWED, @CURR_CL_CODE = A.CL_CODE, @CURR_DIV_CODE = A.DIV_CODE, 
				@CURR_PRD_CODE = A.PRD_CODE, @CURR_SC_CODE = A.SC_CODE 
	       FROM #PROJECT_TASK_LIST A
	      WHERE ROW_ID = @CURR_ROW_ID;	      

		SET @CURR_ACTUAL_HOURS = 0
		
		-- GET DAYS (LOOP)
		--=================================================================================================
								                
		SET @DAY_INCREMENT = -1;
		SELECT @DAY_COUNT = DATEDIFF(dd, @CURR_START_DATE, @CURR_END_DATE) + 1;
        --SET @ADJ_HOURS = @CURR_HOURS_ALLOWED / [dbo].[wvfn_get_emp_workday_count](@CURR_EMP_CODE,@CURR_START_DATE,@CURR_END_DATE,1)
		--PJH02/02/18 - added NULL for 
		EXECUTE dbo.usp_wv_Estimating_GetBillingRates @THIS_FNC_CODE = @CURR_EST_FUNC, @THIS_JOB_NUMBER = @CURR_JOB_NUMBER,	
			@THIS_JOB_COMPONENT_NBR = @CURR_JOB_COMPONENT_NBR, @THIS_CL_CODE = @CURR_CL_CODE, @THIS_DIV_CODE = @CURR_DIV_CODE, 
			@THIS_PRD_CODE = @CURR_PRD_CODE, @THIS_SC_CODE = @CURR_SC_CODE, @THIS_EMP_CODE = @CURR_EMP_CODE, @THIS_EMP_TITLE_ID = @EMP_TITLE_ID,
			@THIS_BILLING_RATE = @ROW_BILLING_RATE OUTPUT, @THIS_RATE_LEVEL = @ROW_RATE_LEVEL OUTPUT,
			@THIS_TAX_CODE = @ROW_TAX_CODE OUTPUT, @THIS_TAX_LEVEL = @ROW_TAX_LEVEL OUTPUT,
			@THIS_NOBILL_FLAG = @ROW_NOBILL_FLAG OUTPUT, @THIS_NOBILL_LEVEL = @ROW_NOBILL_LEVEL OUTPUT,
			@THIS_COMM = @ROW_COMM OUTPUT, @THIS_COMM_LEVEL = @ROW_COMM_LEVEL OUTPUT,
			@THIS_TAX_COMM = @ROW_TAX_COMM OUTPUT, @THIS_TAX_COMM_ONLY = @ROW_TAX_COMM_ONLY OUTPUT,
			@THIS_TAX_COMM_FLAGS_LEVEL = @ROW_TAX_COMM_FLAGS_LEVEL OUTPUT, @THIS_FEE_TIME_FLAG = @ROW_FEE_TIME_FLAG OUTPUT,
			@THIS_FEE_TIME_LEVEL = @ROW_FEE_TIME_LEVEL OUTPUT;
		/*PJH 05/01/2013 - added RATE_LEVEL = @ROW_RATE_LEVEL*/
		 UPDATE #PROJECT_TASK_LIST 
		    SET BILL_RATE = @ROW_BILLING_RATE,
				RATE_LEVEL = @ROW_RATE_LEVEL,
				PROJ_AMT = ( HOURS_ALLOWED * @ROW_BILLING_RATE )
		  WHERE CURRENT OF taskcur ;
		  
        FETCH NEXT FROM taskcur INTO @CURR_ROW_ID;
	END
        
	CLOSE taskcur;
	DEALLOCATE taskcur;
	
	--GETS THE REST OF THE RETURN VAR INFO HERE
	
	SELECT #PROJECT_TASK_LIST.JOB_NUMBER, #PROJECT_TASK_LIST.JOB_COMPONENT_NBR, 
		   #PROJECT_TASK_LIST.CL_CODE, #PROJECT_TASK_LIST.DIV_CODE, #PROJECT_TASK_LIST.PRD_CODE, #PROJECT_TASK_LIST.SC_CODE,
		   #PROJECT_TASK_LIST.EST_FUNC, #PROJECT_TASK_LIST.POST_PERIOD, 
		   #PROJECT_TASK_LIST.OFFICE_CODE, SUM( COALESCE( #PROJECT_TASK_LIST.PROJ_AMT, 0.00 ))
	  FROM #PROJECT_TASK_LIST 
  GROUP BY #PROJECT_TASK_LIST.JOB_NUMBER, #PROJECT_TASK_LIST.JOB_COMPONENT_NBR, 
		   #PROJECT_TASK_LIST.CL_CODE,#PROJECT_TASK_LIST.DIV_CODE, #PROJECT_TASK_LIST.PRD_CODE, #PROJECT_TASK_LIST.SC_CODE,
		   #PROJECT_TASK_LIST.EST_FUNC, #PROJECT_TASK_LIST.POST_PERIOD, 
		   #PROJECT_TASK_LIST.OFFICE_CODE	
		   
/*PJH 05/01/2013 - Job info is collected above now*/
/*	SELECT #PROJECT_TASK_LIST.JOB_NUMBER, #PROJECT_TASK_LIST.JOB_COMPONENT_NBR, 
		   JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, #PROJECT_TASK_LIST.SC_CODE,
		   #PROJECT_TASK_LIST.EST_FUNC, #PROJECT_TASK_LIST.POST_PERIOD, 
		   #PROJECT_TASK_LIST.OFFICE_CODE, SUM( COALESCE( #PROJECT_TASK_LIST.PROJ_AMT, 0.00 ))
	  FROM #PROJECT_TASK_LIST 
INNER JOIN JOB_LOG ON JOB_LOG.JOB_NUMBER = #PROJECT_TASK_LIST.JOB_NUMBER	  
INNER JOIN JOB_COMPONENT ON JOB_COMPONENT.JOB_NUMBER = #PROJECT_TASK_LIST.JOB_NUMBER
	   AND JOB_COMPONENT.JOB_COMPONENT_NBR = #PROJECT_TASK_LIST.JOB_COMPONENT_NBR
  GROUP BY #PROJECT_TASK_LIST.JOB_NUMBER, #PROJECT_TASK_LIST.JOB_COMPONENT_NBR, 
		   JOB_LOG.CL_CODE,JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, #PROJECT_TASK_LIST.SC_CODE,
		   #PROJECT_TASK_LIST.EST_FUNC, #PROJECT_TASK_LIST.POST_PERIOD, 
		   #PROJECT_TASK_LIST.OFFICE_CODE			    
*/
	DROP TABLE #PROJECT_TASK_LIST;


GO


