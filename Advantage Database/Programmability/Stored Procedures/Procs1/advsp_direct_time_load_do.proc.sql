IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[advsp_direct_time_load_do]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1 )
	DROP PROCEDURE [dbo].[advsp_direct_time_load_do]
GO

CREATE PROCEDURE [dbo].[advsp_direct_time_load_do] 
	@DATE_TYPE AS int,
	@START_DATE AS smalldatetime,
	@END_DATE AS smalldatetime,
	@EmployeeCode varchar(6),
	@ClientCode varchar(6),
	@Job integer,
	@Comp smallint,
	@UserID VarChar(100)
AS
BEGIN

	Declare @Restrictions Int, @RestrictionsEmp Int
	DECLARE @sql 		varchar(8000)
	DECLARE @sql_from 	varchar(8000)
	DECLARE @sql_where 	varchar(8000)
	DECLARE @EMP_CODE AS VARCHAR(6)
	DECLARE @RestrictionsOffice AS INTEGER

	SELECT @EMP_CODE = EMP_CODE FROM SEC_USER WHERE UPPER(USER_CODE) = UPPER(@UserID)

	SELECT @RestrictionsOffice = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CODE

	Select @Restrictions = Count(*) 
	FROM SEC_CLIENT
	WHERE UPPER(USER_ID) = UPPER(@UserID)

	Select @RestrictionsEmp = Count(*) 
	FROM SEC_EMP
	WHERE UPPER(USER_ID) = UPPER(@UserID)	
	
set @sql = ' SELECT  
		[EmployeeCode] = ET.EMP_CODE, 
		[Employee] = CASE WHEN EMP.EMP_MI IS NULL OR EMP.EMP_MI = '''' THEN EMP.EMP_FNAME + '' '' + EMP.EMP_LNAME ELSE EMP.EMP_FNAME + '' '' + EMP.EMP_MI + ''. '' + EMP.EMP_LNAME END, 
		[EmployeeFirstName] = EMP.EMP_FNAME,
		[EmployeeLastName] = EMP.EMP_LNAME,
		[EmployeeLastFirst] = EMP.EMP_LNAME + '', '' + EMP.EMP_FNAME,
		[EmployeeTitle] = ET.EMPLOYEE_TITLE,
		[EmployeeAccountNumber] = EMP.EMP_ACCOUNT_NBR,
		[IsEmployeeFreelance] = CASE WHEN ISNULL(EMP.FREELANCE, 0) = 1 THEN ''Yes'' ELSE ''No'' END,
		[IsActiveFreelance] = CASE WHEN ISNULL(EMP.FREELANCE, 0) = 1 THEN CASE WHEN EMP.IS_ACTIVE_FREELANCE = 1 THEN ''Yes'' ELSE ''No'' END ELSE ''No'' END,
		[ClientCode] = J.CL_CODE, 
		[ClientDescription] = C.CL_NAME, 
		[DivisionCode] = J.DIV_CODE, 
		[DivisionDescription] = D.DIV_NAME, 
		[ProductCode] = J.PRD_CODE, 
		[ProductDescription] = P.PRD_DESCRIPTION, 
		[CDPName] = CASE WHEN C.CL_NAME = D.DIV_NAME AND D.DIV_NAME = P.PRD_DESCRIPTION THEN C.CL_NAME
						 WHEN C.CL_NAME = D.DIV_NAME AND D.DIV_NAME <> P.PRD_DESCRIPTION THEN C.CL_NAME + ''|'' + P.PRD_DESCRIPTION
						 WHEN C.CL_NAME <> D.DIV_NAME AND D.DIV_NAME = P.PRD_DESCRIPTION THEN C.CL_NAME + ''|'' + D.DIV_NAME ELSE C.CL_NAME + ''|'' + D.DIV_NAME + ''|'' + P.PRD_DESCRIPTION END,
		[JobNumber] = ET.JOB_NUMBER, 
		[JobDescription] = J.JOB_DESC, 
		[JobComponentNumber] = ET.JOB_COMPONENT_NBR, 
		[JobComponentDescription] = JC.JOB_COMP_DESC, 
		[JobComponent] = REPLICATE(''0'', (6 - LEN(CAST(ET.JOB_NUMBER AS VARCHAR(6))))) + CAST(ET.JOB_NUMBER AS VARCHAR(6)) + ''-'' + REPLICATE(''0'', (3 - LEN(CAST(ET.JOB_COMPONENT_NBR AS VARCHAR(3))))) + CAST(ET.JOB_COMPONENT_NBR AS VARCHAR(3)) + ''|'' + CASE WHEN J.JOB_DESC = JC.JOB_COMP_DESC THEN J.JOB_DESC ELSE J.JOB_DESC + ''|'' + JC.JOB_COMP_DESC END,
		[JobComponentName] = CASE WHEN J.JOB_DESC = JC.JOB_COMP_DESC THEN J.JOB_DESC ELSE J.JOB_DESC + '', '' + JC.JOB_COMP_DESC END,
		[FunctionCode] = ET.FNC_CODE, 
		[FunctionDescription] = F.FNC_DESCRIPTION, 
		[Date] = ET.EMP_DATE, 
		[DateEntered] = ET.DATE_ENTERED,
		[Hours] = SUM(ET.EMP_HOURS),
		[Amount] = SUM(ET.TOTAL_BILL), 
		[MarkupAmount] = SUM(ET.EXT_MARKUP_AMT), 
		[ResaleTax] = SUM(ET.EXT_STATE_RESALE) + SUM(ET.EXT_COUNTY_RESALE) + SUM(ET.EXT_CITY_RESALE), 
		[TotalAmount] = SUM(ET.TOTAL_BILL) + SUM(ET.EXT_MARKUP_AMT), 
		[TotalBilled] = CASE WHEN ISNUMERIC(ET.AR_INV_NBR) = 1 THEN SUM(ET.TOTAL_BILL) + SUM(ET.EXT_MARKUP_AMT) ELSE 0.0 END, 
		[TotalAmountWithTax] = SUM(ET.TOTAL_BILL) + SUM(ET.EXT_MARKUP_AMT) + SUM(ET.EXT_STATE_RESALE) + SUM(ET.EXT_COUNTY_RESALE) + SUM(ET.EXT_CITY_RESALE),
		[TotalBilledWithTax] = CASE WHEN ISNUMERIC(ET.AR_INV_NBR) = 1 THEN SUM(ET.TOTAL_BILL) + SUM(ET.EXT_MARKUP_AMT) + SUM(ET.EXT_STATE_RESALE) + SUM(ET.EXT_COUNTY_RESALE) + SUM(ET.EXT_CITY_RESALE) ELSE 0.0 END, 
		[NonBillable] = CASE WHEN ISNULL(ET.EMP_NON_BILL_FLAG, 0) = 1 THEN ''Yes'' ELSE ''No'' END, 
		[Billed] = CASE WHEN ISNUMERIC(ET.AR_INV_NBR) = 1 THEN ''Yes'' ELSE ''No'' END, 
		[FunctionHeadingDescription] = FH.FNC_HEADING_DESC, 
		[Comments] = CAST(ET.EMP_COMMENT AS varchar(4000)),
		[IsFeeTime] = CASE WHEN ISNULL(ET.FEE_TIME, 0) = 1 THEN ''Yes'' ELSE ''No'' END,
		[Rate] = ET.EMP_BILL_RATE,
		[UserID] = ET.[USER_ID],
		[Grouping] = J.CL_CODE + ''|'' + J.DIV_CODE + ''|'' + J.PRD_CODE + ''|'' + CAST(ET.JOB_NUMBER AS VARCHAR(6)) + ''|'' + CAST(ET.JOB_COMPONENT_NBR AS VARCHAR(3))'
SELECT @sql_from = ' FROM 
		(SELECT 
			ET.ET_ID,
			ET.EMP_CODE,
			ET.EMP_DATE,
			EMP_TOT_HRS = ETDH.EMP_HOURS,
			ET.APPR_USER,
			ET.APPR_DATE,
			ET.APPR_PENDING,
			ET.APPR_FLAG,
			ETD.SEQ_NBR,
			ETD.ET_DTL_ID,
			ETD.DP_TM_CODE,  
			ETD.PROD_CAT_CODE, 
			ETD.JOB_NUMBER, 
			ETD.JOB_COMPONENT_NBR,
			ETD.FNC_CODE, 
			ETD.DATE_ENTERED,
			ETD.EMP_NON_BILL_FLAG,
			ETD.AR_INV_NBR, 
			ETD.AR_TYPE,
			FEE_TIME = ISNULL(ETD.FEE_TIME, 0),
			ETD.EMP_HOURS,
			ETD.TOTAL_BILL, 
			ETD.EXT_MARKUP_AMT, 
			ETD.EXT_STATE_RESALE,
			ETD.EXT_COUNTY_RESALE,
			ETD.EXT_CITY_RESALE,
			EMPT.EMPLOYEE_TITLE,
			ETD.EMP_RATE_FROM,
			ETD.ADJ_COMMENTS,
			ETD.[USER_ID],
			TF.TRF_CODE,
			TF.TRF_DESC,
			ETD.EDIT_FLAG,
			ETD.EMP_BILL_RATE,
			EMP_COMMENT = (SELECT TOP 1 CAST(ETDC.EMP_COMMENT AS varchar(4000))	FROM [dbo].[EMP_TIME_DTL_CMTS] AS ETDC WHERE ETD.ET_ID = ETDC.ET_ID AND ETD.ET_DTL_ID = ETDC.ET_DTL_ID AND ETDC.ET_SOURCE = ''D'' ORDER BY ETDC.SEQ_NBR DESC)
		FROM 
			[dbo].[EMP_TIME] AS ET INNER JOIN 
			[dbo].[EMP_TIME_DTL] AS ETD ON ETD.ET_ID = ET.ET_ID LEFT OUTER JOIN 
			[dbo].[EMPLOYEE_TITLE] AS EMPT ON EMPT.EMPLOYEE_TITLE_ID = ETD.EMPLOYEE_TITLE_ID LEFT OUTER JOIN
			[dbo].[TRAFFIC_FNC] AS TF ON ETD.TRF_CODE = TF.TRF_CODE LEFT OUTER JOIN
			(SELECT 
				ET_ID, 
				EMP_HOURS = SUM(EMP_HOURS) 
			 FROM
				(SELECT ET_ID, EMP_HOURS = SUM(EMP_HOURS) 
				 FROM dbo.EMP_TIME_DTL
				 GROUP BY ET_ID
				 
				 UNION ALL
				 
				 SELECT ET_ID, EMP_HOURS = SUM(EMP_HOURS) 
				 FROM dbo.EMP_TIME_NP 
				 GROUP BY ET_ID) AS ETH
			 GROUP BY ET_ID) AS ETDH ON ETDH.ET_ID = ET.ET_ID
		WHERE 
			ETD.EMP_HOURS <> 0 AND 
			1 = CASE WHEN ''' + @EmployeeCode + ''' <> '''' THEN CASE WHEN ET.EMP_CODE = ''' + @EmployeeCode + ''' THEN 1 ELSE 0 END ELSE 1 END AND
			1 = CASE WHEN ' + CAST(@DATE_TYPE AS VARCHAR(1)) + ' = 0 THEN CASE WHEN ET.EMP_DATE >= ''' + CAST(@START_DATE AS VARCHAR) + ''' AND ET.EMP_DATE <= CONVERT(DATETIME, ''' + CAST(@END_DATE AS VARCHAR) + ''', 101) THEN 1 ELSE 0 END
					 WHEN ' + CAST(@DATE_TYPE AS VARCHAR(1)) + ' = 1 THEN CASE WHEN ETD.DATE_ENTERED >= ''' + CAST(@START_DATE AS VARCHAR) + ''' AND ETD.DATE_ENTERED <= CONVERT(DATETIME, ''' + CAST(@END_DATE AS VARCHAR) + ''' , 101) THEN 1 ELSE 0 END
					 WHEN ' + CAST(@DATE_TYPE AS VARCHAR(1)) + ' = 2 THEN CASE WHEN ET.APPR_DATE >= ''' + CAST(@START_DATE AS VARCHAR) + ''' AND ET.APPR_DATE <= CONVERT(DATETIME, ''' + CAST(@END_DATE AS VARCHAR) + ''' , 101) THEN 1 ELSE 0 END 
					 WHEN ' + CAST(@DATE_TYPE AS VARCHAR(1)) + ' = 3 THEN 1 END AND (ETD.EDIT_FLAG IS NULL OR ETD.EDIT_FLAG = 0)) AS ET INNER JOIN 		    	
			
		[dbo].[JOB_LOG] AS J ON ET.JOB_NUMBER = J.JOB_NUMBER INNER JOIN 
		[dbo].[EMPLOYEE] AS EMP ON ET.EMP_CODE = EMP.EMP_CODE INNER JOIN 
		[dbo].[CLIENT] AS C ON J.CL_CODE = C.CL_CODE INNER JOIN 
		[dbo].[DIVISION] AS D ON J.CL_CODE = D.CL_CODE AND 
								 J.DIV_CODE = D.DIV_CODE INNER JOIN 
		[dbo].[PRODUCT] AS P ON J.CL_CODE = P.CL_CODE AND 
								J.DIV_CODE = P.DIV_CODE AND 
								J.PRD_CODE = P.PRD_CODE INNER JOIN 
		[dbo].[JOB_COMPONENT] AS JC ON ET.JOB_NUMBER = JC.JOB_NUMBER AND 
									   ET.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR INNER JOIN 
		[dbo].[FUNCTIONS] AS F ON ET.FNC_CODE = F.FNC_CODE LEFT OUTER JOIN 
		[dbo].[FNC_HEADING] AS FH ON F.FNC_HEADING_ID = FH.FNC_HEADING_ID LEFT OUTER JOIN
		[dbo].[FUNCTIONS] AS FC ON F.FNC_CONSOLIDATION = FC.FNC_CODE'

If @Restrictions > 0
	Begin
	  SELECT @sql_from = @sql_from + ' INNER JOIN SEC_CLIENT ON J.CL_CODE = SEC_CLIENT.CL_CODE AND J.DIV_CODE = SEC_CLIENT.DIV_CODE AND J.PRD_CODE = SEC_CLIENT.PRD_CODE '

	End

If @RestrictionsEmp > 0 
	Begin
	  SELECT @sql_from = @sql_from + ' INNER JOIN [dbo].[advtf_sec_emp] (''' + @UserID + ''') AS SEC_EMP ON ET.EMP_CODE = SEC_EMP.EMP_CODE '	 
	End

If @RestrictionsOffice > 0 
	Begin
	  SELECT @sql_from = @sql_from  + ' INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = J.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''''
	End	

SELECT @sql_where = ' WHERE 1 = CASE WHEN ''' + @ClientCode + ''' <> '''' AND ''' + @ClientCode + ''' <> ''%'' THEN CASE WHEN J.CL_CODE = ''' + @ClientCode + ''' THEN 1 ELSE 0 END ELSE CASE WHEN ''' + @ClientCode + ''' = ''%'' THEN 1 ELSE 0 END END AND
	      1 = CASE WHEN ' + CAST(@Job AS VARCHAR(8)) + ' <> 0 THEN CASE WHEN JC.JOB_NUMBER = ' + CAST(@Job AS VARCHAR(8)) + ' AND JC.JOB_COMPONENT_NBR = ' + CAST(@Comp AS VARCHAR(8)) + ' THEN 1 ELSE 0 END ELSE 1 END'
If @Restrictions > 0
	Begin
	  SELECT @sql_where = @sql_where + ' AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @UserID + ''')) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) '
	End	
SELECT @sql_where = @sql_where + ' GROUP BY 
		ET.EMP_CODE, 
		CASE WHEN EMP.EMP_MI IS NULL OR EMP.EMP_MI = '''' THEN EMP.EMP_FNAME + '' '' + EMP.EMP_LNAME ELSE EMP.EMP_FNAME + '' '' + EMP.EMP_MI + ''. '' + EMP.EMP_LNAME END, 
		EMP.EMP_FNAME,
		EMP.EMP_LNAME,
		ET.EMPLOYEE_TITLE,
		EMP.EMP_ACCOUNT_NBR,
		ISNULL(EMP.FREELANCE, 0),
		EMP.IS_ACTIVE_FREELANCE,
		J.CL_CODE, 
		C.CL_NAME, 
		J.DIV_CODE, 
		D.DIV_NAME, 
		J.PRD_CODE, 
		P.PRD_DESCRIPTION, 
		ET.JOB_NUMBER, 
		J.JOB_DESC, 
		ET.JOB_COMPONENT_NBR, 
		JC.JOB_COMP_DESC, 
		JC.EMP_CODE, 
		ET.FNC_CODE, 
		F.FNC_DESCRIPTION, 
		ET.EMP_DATE,
		ET.DATE_ENTERED,
		ET.EMP_TOT_HRS,
		ET.EMP_NON_BILL_FLAG,
		ISNUMERIC(ET.AR_INV_NBR), 
		FH.FNC_HEADING_DESC, 
		CAST(ET.EMP_COMMENT AS VARCHAR(4000)),
		ISNULL(ET.FEE_TIME, 0),
		ET.EMP_BILL_RATE,
		ET.[USER_ID]'

PRINT(@sql + @sql_from + @sql_where)
EXEC(@sql + @sql_from + @sql_where)		

END
GO

