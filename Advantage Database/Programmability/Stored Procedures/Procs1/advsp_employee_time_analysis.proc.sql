--00 2/25/2021 Log 4077-3962 Employee Time Analysis by Client

IF EXISTS (Select * from dbo.sysobjects where id = object_id(N'[dbo].[advsp_employee_time_analysis]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[advsp_employee_time_analysis]

GO

CREATE PROCEDURE [dbo].[advsp_employee_time_analysis] (
	@START_DATE datetime = '1/1/1900',
	@END_DATE datetime = '12/31/2900',
	@OFFICE_LIST AS VARCHAR(Max) = NULL,
	@DepartmentsList varchar(Max) = NULL,
	@EmployeesList varchar(Max) = NULL,
	@IncludeInactiveEmployees smallint = 0,
	@FeeTimeOption smallint = 1
	--@UserID varchar(100)
	)

	--Parameters
	--@OFFICE is the EMPLOYEE office
	--@DepartmentsList is the EMPLOYEE default department
	--@IncludeTerminated 1 = Exclude terminated employees (default)
	--@FeeTimeOption 1 = Show Fee Time As Billable (default) or 0 = Include Fee Time As Nonbillable
	--@UserID ?

AS
BEGIN
SET NOCOUNT ON;

--========================
--MAIN DATA TABLE
--========================
CREATE TABLE #EmployeeTimeAnalysis (
	EMP_CODE				varchar(6)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_NAME				varchar(61)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_FNAME				varchar(30)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_LNAME				varchar(30)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_TITLE				varchar(50)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	DP_TM_CODE				varchar(4)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	DP_TM_DESC				varchar(30)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_PERIOD				varchar(6)		COLLATE	SQL_Latin1_General_CP1_CS_AS,	--EMP_DATE Year+Month
	PPPERIOD				varchar(6)		COLLATE SQL_Latin1_General_CP1_CS_AS,	--EMP_DATE GL Period
	TIME_TYPE				varchar(8)		COLLATE SQL_Latin1_General_CP1_CS_AS,	--Direct or Indirect
	TYPE_ORDER				smallint,
	TYPE_DESCRIPTION		varchar(20)		COLLATE SQL_Latin1_General_CP1_CS_AS,	--1-Client, 2-New Bus, 3-Agency, 4-Non Client
	CL_CODE					varchar(40)		COLLATE SQL_Latin1_General_CP1_CS_AS,	--Direct CL_CODE, Indirect CATEGORY DESCRIPTION
	CL_NAME					varchar(40)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	DIV_CODE				varchar(6)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	DIV_NAME				varchar(40)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	PRD_CODE				varchar(6)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	PRD_DESCRIPTION			varchar(40)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	SC_CODE					varchar(6)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	SC_DESCRIPTION			varchar(30)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	CURRENT_FLAG			smallint,
	TOTAL_HOURS				decimal(7,2),
	TOTAL_COST				decimal(14,2),
	DIRECT_HOURS			decimal(7,2),
	DIRECT_BILL_AMT			decimal(14,2),
	DIRECT_MARKUP_AMT		decimal(14,2),
	DIRECT_TOTAL_AMT		decimal(14,2),
	BILLABLE_HOURS			decimal(7,2),
	BILLABLE_BILL_AMT		decimal(14,2),
	BILLABLE_MARKUP_AMT		decimal(14,2),
	BILLABLE_TOTAL_AMT		decimal(14,2),
	NON_BILL_HOURS			decimal(7,2),
	NON_BILL_BILL_AMT		decimal(14,2),
	NON_BILL_MARKUP_AMT		decimal(14,2),
	NON_BILL_TOTAL_AMT		decimal(14,2),		
	BILLED_HOURS			decimal(7,2),
	BILLED_BILL_AMT			decimal(14,2),
	BILLED_MARKUP_AMT		decimal(14,2),
	BILLED_TOTAL_AMT		decimal(14,2),
	UNBILLED_HOURS			decimal(7,2),
	UNBILLED_BILL_AMT		decimal(14,2),
	UNBILLED_MARKUP_AMT		decimal(14,2),
	UNBILLED_TOTAL_AMT		decimal(14,2),
	NON_DIRECT_HOURS		decimal(7,2),
	NON_DIRECT_AMT			decimal(14,2))
								
--Begin Select Employees
CREATE TABLE #Employees (
	EMP_CODE		varchar(6)	COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_FNAME		varchar(30)	COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_LNAME		varchar(30)	COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_TITLE		varchar(50)	COLLATE SQL_Latin1_General_CP1_CS_AS,
	DP_TM_CODE		varchar(4)	COLLATE SQL_Latin1_General_CP1_CS_AS,
	OFFICE_CODE		varchar(4)	COLLATE SQL_Latin1_General_CP1_CS_AS)
IF @IncludeInactiveEmployees = 0
	INSERT INTO #Employees
	SELECT 
		E.EMP_CODE,
		E.EMP_FNAME,
		E.EMP_LNAME,
		E.EMP_TITLE,
		E.DP_TM_CODE,
		E.OFFICE_CODE
	FROM dbo.EMPLOYEE AS E
	WHERE E.EMP_TERM_DATE IS NULL
		AND (@EmployeesList IS NULL OR (@EmployeesList IS NOT NULL AND E.EMP_CODE IN (SELECT * from dbo.udf_split_list(@EmployeesList, ','))))
		AND	(@DepartmentsList IS NULL OR (@DepartmentsList IS NOT NULL AND E.DP_TM_CODE IN (SELECT * from dbo.udf_split_list(@DepartmentsList, ','))))
		AND	(@OFFICE_LIST IS NULL OR (@OFFICE_LIST IS NOT NULL AND E.OFFICE_CODE IN (SELECT * from dbo.udf_split_list(@OFFICE_LIST, ','))))
ELSE
	INSERT INTO #Employees
	SELECT
		E.EMP_CODE,
		E.EMP_FNAME,
		E.EMP_LNAME,
		E.EMP_TITLE,
		E.DP_TM_CODE,
		E.OFFICE_CODE
	FROM dbo.EMPLOYEE AS E
	WHERE (@EmployeesList IS NULL OR (@EmployeesList IS NOT NULL AND E.EMP_CODE IN (SELECT * from dbo.udf_split_list(@EmployeesList, ','))))
		AND	(@DepartmentsList IS NULL OR (@DepartmentsList IS NOT NULL AND E.DP_TM_CODE IN (SELECT * from dbo.udf_split_list(@DepartmentsList, ','))))
		AND	(@OFFICE_LIST IS NULL OR (@OFFICE_LIST IS NOT NULL AND E.OFFICE_CODE IN (SELECT * from dbo.udf_split_list(@OFFICE_LIST, ','))))
--End Select Employees
--SELECT * FROM #Employees

--Begin Direct Time Gather
CREATE TABLE #DirectTime (
	OFFICE_CODE			varchar(6)	COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_CODE			varchar(6)	COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_FNAME			varchar(30)	COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_LNAME			varchar(30)	COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_TITLE			varchar(50)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	DP_TM_CODE			varchar(4)	COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_DATE			smalldatetime,
	JOB_NUMBER			integer,
	JOB_COMPONENT_NBR	integer,
	FNC_CODE			varchar(6)	COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_HOURS			decimal(7,2),
	TOTAL_COST			decimal(14,2),
	TOTAL_BILL			decimal(14,2),
	EXT_MARKUP_AMT		decimal(14,2),
	EXT_STATE_RESALE	decimal(14,2),
	EXT_COUNTY_RESALE	decimal(14,2),
	EXT_CITY_RESALE		decimal(14,2),
	LINE_TOTAL			decimal(14,2),
	FEE_TIME			smallint,
	NON_BILL_FLAG		smallint,
	AB_FLAG				smallint,
	BILL_HOLD			smallint,
	NEW_BUSINESS		smallint,
	AGENCY_CLIENT		smallint,
	AR_INV_NBR			integer,
	AR_INV_SEQ			integer,
	AR_TYPE				varchar(3)	COLLATE SQL_Latin1_General_CP1_CS_AS)			
INSERT INTO #DirectTime
SELECT
	E.OFFICE_CODE,
	E.EMP_CODE,
	E.EMP_FNAME,
	E.EMP_LNAME,
	E.EMP_TITLE,
	E.DP_TM_CODE,
	ET.EMP_DATE,
	ETD.JOB_NUMBER,
	ETD.JOB_COMPONENT_NBR,
	ETD.FNC_CODE,
	ISNULL(ETD.EMP_HOURS,0),
	ISNULL(ETD.TOTAL_COST,0),
	ISNULL(ETD.TOTAL_BILL,0),
	ISNULL(ETD.EXT_MARKUP_AMT,0),
	ISNULL(ETD.EXT_STATE_RESALE,0),
	ISNULL(ETD.EXT_COUNTY_RESALE,0),
	ISNULL(ETD.EXT_CITY_RESALE,0),
	ISNULL(ETD.LINE_TOTAL,0),
	CASE WHEN (@FeeTimeOption = 1 AND ISNULL(ETD.FEE_TIME,0) <> 0) THEN ETD.FEE_TIME ELSE 0 END AS FEE_FLAG,
	CASE WHEN (@FeeTimeOption = 1 AND ISNULL(ETD.FEE_TIME,0) <> 0) THEN 0
		WHEN ISNULL(ETD.EMP_NON_BILL_FLAG,0) <> 0 THEN 1
		ELSE 0 END AS NON_BILL_FLAG,
	ISNULL(ETD.AB_FLAG,0),
	ISNULL(ETD.BILL_HOLD_FLG,0),
	ISNULL(CL.NEW_BUSINESS,0),
	CASE WHEN AC.CL_CODE IS NULL THEN 0 ELSE 1 END AS AGENCY_CLIENT,
	ETD.AR_INV_NBR,
	ETD.AR_INV_SEQ,
	ETD.AR_TYPE
FROM #Employees AS E
JOIN dbo.EMP_TIME AS ET ON ET.EMP_CODE = E.EMP_CODE
JOIN dbo.EMP_TIME_DTL AS ETD ON ETD.ET_ID = ET.ET_ID
JOIN dbo.JOB_LOG AS JL ON JL.JOB_NUMBER = ETD.JOB_NUMBER
JOIN dbo.CLIENT AS CL ON CL.CL_CODE = JL.CL_CODE
LEFT JOIN dbo.AGENCY_CLIENTS AS AC ON AC.CL_CODE = CL.CL_CODE
WHERE ET.EMP_DATE BETWEEN @START_DATE AND @END_DATE
--SELECT * FROM #DirectTime

--Append Direct Client Time to #EmployeeTimeAnalysis
INSERT INTO #EmployeeTimeAnalysis
SELECT
	ET.EMP_CODE,
	--CONCAT(ET.EMP_FNAME,' ',ET.EMP_LNAME) AS EMP_NAME,  CONCAT is for SQL2012+
    [dbo].[advfn_get_emp_name](ET.EMP_CODE,'FML'),
	ET.EMP_FNAME,
	ET.EMP_LNAME,
	ET.EMP_TITLE,
	ET.DP_TM_CODE,
	TM.DP_TM_DESC,
	(YEAR(ET.EMP_DATE)*100)+MONTH(ET.EMP_DATE) AS EMP_PERIOD,
	(SELECT PPPERIOD FROM POSTPERIOD WHERE ET.EMP_DATE BETWEEN PPSRTDATE AND PPENDDATE AND PPGLMONTH NOT IN (13,99)) AS PPPERIOD,
	'Direct',
	CASE WHEN ET.NEW_BUSINESS = 1 THEN 2
		WHEN ET.AGENCY_CLIENT = 1 THEN 3
		ELSE 1 END AS TYPE_ORDER,
	CASE WHEN ET.NEW_BUSINESS = 1 THEN 'New Business'
		WHEN ET.AGENCY_CLIENT = 1 THEN 'Agency Client Time'
		ELSE 'Client Time' END AS TYPE_DESCRIPTION,
	JL.CL_CODE,
	CL.CL_NAME,
	JL.DIV_CODE,
	DV.DIV_NAME,
	JL.PRD_CODE,
	PR.PRD_DESCRIPTION,
	JL.SC_CODE,
	SC.SC_DESCRIPTION,
	CASE WHEN (YEAR(ET.EMP_DATE)*100)+MONTH(ET.EMP_DATE) = (YEAR(@END_DATE)*100)+MONTH(@END_DATE) THEN 1 ELSE 0 END AS CURRENT_FLAG,
	ET.EMP_HOURS, --As Total Hours
	ET.TOTAL_COST,
	ET.EMP_HOURS, --As Direct Hours
	ET.TOTAL_BILL,
	ET.EXT_MARKUP_AMT,
	ET.TOTAL_BILL+ET.EXT_MARKUP_AMT,  --Note potential variance: The original version includes emp_time_dtl.resale tax if exists
	CASE WHEN ET.NON_BILL_FLAG = 0 THEN ET.EMP_HOURS ELSE 0 END AS BILLABLE_HOURS,
	CASE WHEN ET.NON_BILL_FLAG = 0 THEN ET.TOTAL_BILL ELSE 0 END AS BILLABLE_BILL_AMT,
	CASE WHEN ET.NON_BILL_FLAG = 0 THEN ET.EXT_MARKUP_AMT ELSE 0 END AS BILLABLE_MARKUP_AMT,
	CASE WHEN ET.NON_BILL_FLAG = 0 THEN ET.TOTAL_BILL + ET.EXT_MARKUP_AMT ELSE 0 END AS BILLABLE_TOTAL_AMT,
	CASE WHEN ET.NON_BILL_FLAG = 1 THEN ET.EMP_HOURS ELSE 0 END AS NON_BILL_HOURS,
	CASE WHEN ET.NON_BILL_FLAG = 1 THEN ET.TOTAL_BILL ELSE 0 END AS NON_BILL_AMT,
	CASE WHEN ET.NON_BILL_FLAG = 1 THEN ET.EXT_MARKUP_AMT ELSE 0 END AS NON_BILL_MARKUP_AMT,
	CASE WHEN ET.NON_BILL_FLAG = 1 THEN ET.TOTAL_BILL + ET.EXT_MARKUP_AMT ELSE 0 END AS NON_BILL_TOTAL_AMT,
	CASE WHEN (ISNULL(ET.AR_INV_NBR,0) <> 0 OR ET.FEE_TIME <> 0) THEN ET.EMP_HOURS ELSE 0 END AS BILLED_HOURS,
	CASE WHEN (ISNULL(ET.AR_INV_NBR,0) <> 0 OR ET.FEE_TIME <> 0) THEN ET.TOTAL_BILL ELSE 0 END AS BILLED_BILL_AMT,
	CASE WHEN (ISNULL(ET.AR_INV_NBR,0) <> 0 OR ET.FEE_TIME <> 0) THEN ET.EXT_MARKUP_AMT ELSE 0 END AS BILLED_MARKUP_AMT,
	CASE WHEN (ISNULL(ET.AR_INV_NBR,0) <> 0 OR ET.FEE_TIME <> 0) THEN ET.TOTAL_BILL + ET.EXT_MARKUP_AMT ELSE 0 END AS BILLED_TOTAL_AMT,
	CASE WHEN (ISNULL(ET.AR_INV_NBR,0) = 0 AND ET.FEE_TIME = 0 AND ET.NON_BILL_FLAG = 0) THEN ET.EMP_HOURS ELSE 0 END AS UNBILLED_HOURS,
	CASE WHEN (ISNULL(ET.AR_INV_NBR,0) = 0 AND ET.FEE_TIME = 0 AND ET.NON_BILL_FLAG = 0) THEN ET.TOTAL_BILL ELSE 0 END AS UNBILLED_BILL_AMT,
	CASE WHEN (ISNULL(ET.AR_INV_NBR,0) = 0 AND ET.FEE_TIME = 0 AND ET.NON_BILL_FLAG = 0) THEN ET.EXT_MARKUP_AMT ELSE 0 END AS UNBILLED_MARKUP_AMT,
	CASE WHEN (ISNULL(ET.AR_INV_NBR,0) = 0 AND ET.FEE_TIME = 0 AND ET.NON_BILL_FLAG = 0) THEN ET.TOTAL_BILL + ET.EXT_MARKUP_AMT ELSE 0 END AS UNBILLED_TOTAL_AMT,
	0.00,
	0.00
FROM #DirectTime AS ET
JOIN dbo.DEPT_TEAM AS TM ON TM.DP_TM_CODE = ET.DP_TM_CODE
JOIN dbo.JOB_LOG AS JL ON JL.JOB_NUMBER = ET.JOB_NUMBER
JOIN dbo.CLIENT AS CL ON CL.CL_CODE = JL.CL_CODE
JOIN dbo.DIVISION AS DV ON DV.CL_CODE = JL.CL_CODE AND DV.DIV_CODE = JL.DIV_CODE
JOIN dbo.PRODUCT AS PR ON PR.CL_CODE = JL.CL_CODE AND PR.DIV_CODE = JL.DIV_CODE AND PR.PRD_CODE = JL.PRD_CODE
JOIN dbo.SALES_CLASS AS SC ON SC.SC_CODE = JL.SC_CODE
--End Direct Time Gather

--Begin Indirect Time Gather
CREATE TABLE #IndirectTime (
	OFFICE_CODE			varchar(6)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_CODE			varchar(6)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_FNAME			varchar(30)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_LNAME			varchar(30)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_TITLE			varchar(50)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	DP_TM_CODE			varchar(4)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_DATE			smalldatetime,
	CATEGORY			varchar(10)		COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_HOURS			decimal(7,2),
	TOTAL_COST			decimal(14,2))
INSERT INTO #IndirectTime
SELECT
	E.OFFICE_CODE,
	E.EMP_CODE,
	E.EMP_FNAME,
	E.EMP_LNAME,
	E.EMP_TITLE,
	E.DP_TM_CODE,
	ET.EMP_DATE,
	ETD.CATEGORY,
	ISNULL(ETD.EMP_HOURS,0),
	ISNULL(ETD.TOTAL_COST,0)
FROM #Employees AS E
JOIN dbo.EMP_TIME AS ET ON ET.EMP_CODE = E.EMP_CODE
JOIN dbo.EMP_TIME_NP AS ETD ON ETD.ET_ID = ET.ET_ID
WHERE ET.EMP_DATE BETWEEN @START_DATE AND @END_DATE
--Select * from #IndirectTime

--Append Indirect Client Time to #EmployeeTimeAnalysis
INSERT INTO #EmployeeTimeAnalysis
SELECT
	ET.EMP_CODE,
	--CONCAT(ET.EMP_FNAME,' ',ET.EMP_LNAME) AS EMP_NAME,    CONCAT is for SQL2012+
    [dbo].[advfn_get_emp_name](ET.EMP_CODE,'FML'),
	ET.EMP_FNAME,
	ET.EMP_LNAME,
	ET.EMP_TITLE,
	ET.DP_TM_CODE,
	TM.DP_TM_DESC,
	(YEAR(ET.EMP_DATE)*100)+MONTH(ET.EMP_DATE) AS EMP_PERIOD,
	(SELECT PPPERIOD FROM POSTPERIOD WHERE ET.EMP_DATE BETWEEN PPSRTDATE AND PPENDDATE AND PPGLMONTH NOT IN (13,99)) AS PPPERIOD,
	'Indirect',
	4,
	'Non Client Time',
	TC.DESCRIPTION, --As CL_CODE
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	CASE WHEN (YEAR(ET.EMP_DATE)*100)+MONTH(ET.EMP_DATE) = (YEAR(@END_DATE)*100)+MONTH(@END_DATE) THEN 1 ELSE 0 END AS CURRENT_FLAG,
	ET.EMP_HOURS, --As Total Hours
	ET.TOTAL_COST,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	0.00,
	ET.EMP_HOURS, --As Total Indirect Hours
	ET.TOTAL_COST --As Total Indirect Amount
FROM #IndirectTime AS ET
JOIN dbo.DEPT_TEAM AS TM ON TM.DP_TM_CODE = ET.DP_TM_CODE
JOIN dbo.TIME_CATEGORY AS TC ON TC.CATEGORY = ET.CATEGORY  
--End Indirect Time Gather

--SELECT * FROM #EmployeeTimeAnalysis
SELECT
	EMP_CODE AS EmployeeCode,
	EMP_NAME AS EmployeeName,
	EMP_FNAME AS EmployeeFirstName,
	EMP_LNAME AS EmployeeLastName,
	EMP_TITLE AS EmployeeTitle,
	DP_TM_CODE AS DepartmentCode,
	DP_TM_DESC AS DepartmentName,
	EMP_PERIOD AS [Date],
	PPPERIOD AS GLPeriod,
	TIME_TYPE AS [Type],
	TYPE_ORDER AS TypeOrder,
	TYPE_DESCRIPTION AS TypeDescription,
	CL_CODE AS ClientCode,
	CL_NAME AS ClientName,
	DIV_CODE AS DivisionCode,
	DIV_NAME AS DivisionName,
	PRD_CODE AS ProductCode,
	PRD_DESCRIPTION AS ProductName,
	SC_CODE AS SalesClassCode,
	SC_DESCRIPTION AS SalesClass,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(TOTAL_HOURS) ELSE 0 END AS CurrentHours,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(TOTAL_COST) ELSE 0 END AS CurrentCostAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(DIRECT_HOURS) ELSE 0 END AS CurrentDirectHours,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(DIRECT_BILL_AMT) ELSE 0 END AS CurrentDirectAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(DIRECT_MARKUP_AMT) ELSE 0 END AS CurrentDirectMarkupAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(DIRECT_TOTAL_AMT) ELSE 0 END AS CurrentDirectTotalAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(BILLABLE_HOURS) ELSE 0 END AS CurrentBillableHours,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(BILLABLE_BILL_AMT) ELSE 0 END AS CurrentBillableAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(BILLABLE_MARKUP_AMT) ELSE 0 END AS CurrentBillableMarkupAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(BILLABLE_TOTAL_AMT) ELSE 0 END AS CurrentBillableTotalAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(NON_BILL_HOURS) ELSE 0 END AS CurrentNonBillableHours,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(NON_BILL_BILL_AMT) ELSE 0 END AS	CurrentNonBillableAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(NON_BILL_MARKUP_AMT) ELSE 0 END AS CurrentNonBillableMarkupAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(NON_BILL_TOTAL_AMT) ELSE 0 END AS CurrentNonBillableTotalAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(BILLED_HOURS) ELSE 0 END AS CurrentBilledHours,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(BILLED_BILL_AMT) ELSE 0 END AS CurrentBilledAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(BILLED_MARKUP_AMT) ELSE 0 END AS CurrentBilledMarkupAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(BILLED_TOTAL_AMT) ELSE 0 END AS CurrentBilledTotalAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(UNBILLED_HOURS) ELSE 0 END AS CurrentUnbilledHours,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(UNBILLED_BILL_AMT) ELSE 0 END AS CurrentUnbilledAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(UNBILLED_MARKUP_AMT) ELSE 0 END AS CurrentUnbilledMarkupAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(UNBILLED_TOTAL_AMT) ELSE 0 END AS CurrentUnbilledTotalAmount,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(NON_DIRECT_HOURS) ELSE 0 END AS CurrentNonDirectHours,
	CASE WHEN CURRENT_FLAG = 1 THEN SUM(NON_DIRECT_AMT) ELSE 0 END AS CurrentNonDirectAmount,
	SUM(TOTAL_HOURS) AS ToDateHours,
	SUM(TOTAL_COST) AS ToDateCostAmount,
	SUM(DIRECT_HOURS) AS ToDateDirectHours,
	SUM(DIRECT_BILL_AMT) AS ToDateDirectAmount,
	SUM(DIRECT_MARKUP_AMT) AS ToDateDirectMarkupAmount,
	SUM(DIRECT_TOTAL_AMT) AS ToDateDirectTotalAmount,
	SUM(BILLABLE_HOURS) AS ToDateBillableHours,
	SUM(BILLABLE_BILL_AMT) AS ToDateBillableAmount,
	SUM(BILLABLE_MARKUP_AMT) AS ToDateBillableMarkupAmount,
	SUM(BILLABLE_TOTAL_AMT) AS ToDateBillableTotalAmount,
	SUM(NON_BILL_HOURS) AS ToDateNonBillableHours,
	SUM(NON_BILL_BILL_AMT) AS ToDateNonBillableAmount,
	SUM(NON_BILL_MARKUP_AMT) AS ToDateNonBillableMarkupAmount,
	SUM(NON_BILL_TOTAL_AMT) AS ToDateNonBillableTotalAmount,
	SUM(BILLED_HOURS) AS ToDateBilledHours,
	SUM(BILLED_BILL_AMT) AS ToDateBilledAmount,
	SUM(BILLED_MARKUP_AMT) AS ToDateBilledMarkupAmount,
	SUM(BILLED_TOTAL_AMT) AS ToDateBilledTotalAmount,
	SUM(UNBILLED_HOURS) AS ToDateUnbilledHours,
	SUM(UNBILLED_BILL_AMT) AS ToDateUnbilledAmount,
	SUM(UNBILLED_MARKUP_AMT) AS ToDateUnbilledMarkupAmount,
	SUM(UNBILLED_TOTAL_AMT) AS ToDateUnbilledTotalAmount,
	SUM(NON_DIRECT_HOURS) AS ToDateNonDirectHours,
	SUM(NON_DIRECT_AMT) AS ToDateNonDirectAmount
FROM #EmployeeTimeAnalysis
GROUP BY EMP_CODE, EMP_NAME, EMP_FNAME, EMP_LNAME, EMP_TITLE, DP_TM_CODE, DP_TM_DESC, EMP_PERIOD, PPPERIOD, TIME_TYPE, TYPE_ORDER, TYPE_DESCRIPTION, CL_CODE, CL_NAME, DIV_CODE, DIV_NAME, PRD_CODE, PRD_DESCRIPTION, SC_CODE, SC_DESCRIPTION, CURRENT_FLAG
ORDER BY EMP_CODE, TIME_TYPE, TYPE_ORDER, CL_CODE, DIV_CODE, PRD_CODE, EMP_PERIOD

END
GO

BEGIN

	GRANT ALL ON [advsp_employee_time_analysis] TO PUBLIC AS dbo

END
GO