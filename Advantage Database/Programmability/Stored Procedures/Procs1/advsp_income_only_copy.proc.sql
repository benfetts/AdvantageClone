CREATE PROCEDURE [dbo].[advsp_income_only_copy]
	@COPY_FROM_CL_CODE VARCHAR(6) = NULL,
	@COPY_FROM_DIV_CODE VARCHAR(6) = NULL,
	@COPY_FROM_PRD_CODE VARCHAR(6) = NULL,
	@COPY_FROM_JOB_NUMBER INT = 0,
	@COPY_FROM_JOB_COMPONENT_NBR SMALLINT = 0,
	@COPY_FROM_IO_IDS VARCHAR(MAX) = NULL,
	@COPY_TO_JOB_NUMBER INT,
	@COPY_TO_JOB_COMPONENT_NBR SMALLINT,
	@USER_ID VARCHAR(100),
	@INCLUDE_MEDIA_ORDER_INFO BIT
AS
BEGIN
		
	DECLARE @CL_CODE VARCHAR(6)
	DECLARE @DIV_CODE VARCHAR(6)
	DECLARE @PRD_CODE VARCHAR(6)
	DECLARE @SC_CODE VARCHAR(6)
	DECLARE @FNC_CODE VARCHAR(6)
	DECLARE @FNC_TYPE VARCHAR(1)
	DECLARE @IO_INV_DATE DATETIME
	DECLARE @TAX_CODE VARCHAR(4)
	DECLARE @TAX_COMM SMALLINT 
	DECLARE @TAX_COMM_ONLY SMALLINT 
	DECLARE @NON_BILL_FLAG SMALLINT
	DECLARE @ROWCOUNT INT
	DECLARE @COUNTER INT

	DECLARE @NEW_IO_IDS TABLE (
		IO_ID INT NOT NULL
	)

	DECLARE @INCOME_ONLY_TABLE TABLE (
		[ROWID] INT IDENTITY(1,1),
		[JOB_NUMBER] INT NOT NULL, -- COPY
		[JOB_COMPONENT_NBR] SMALLINT NOT NULL, -- COPY
		[FNC_CODE] VARCHAR (6) NOT NULL, -- COPY
		[FNC_TYPE] VARCHAR(1) NOT NULL, -- GET FROM FUNCTIONS
		[IO_INV_DATE] DATETIME NULL, -- COPY
		[IO_AMOUNT] DECIMAL (14, 2) NULL, -- COPY
		[IO_DESC] VARCHAR(100) NULL, -- COPY
		[IO_COMM_PCT] DECIMAL (9, 3) NULL, -- COPY
		[TAX_CODE] VARCHAR (4) NULL, -- UPDATE VIA RATE   
		[TAX_STATE_PCT] DECIMAL (8, 4) NULL, -- UPDATE VIA TAX CODE   
		[TAX_COUNTY_PCT] DECIMAL (8, 4) NULL, -- UPDATE VIA TAX CODE 
		[TAX_CITY_PCT] DECIMAL (8, 4) NULL, -- UPDATE VIA TAX CODE 
		[TAX_COMM] SMALLINT NULL, -- UPDATE VIA RATE
		[TAX_COMM_ONLY] SMALLINT NULL, -- UPDATE VIA RATE
		[TAX_RESALE] SMALLINT NULL, -- UPDATE
		[DP_TM_CODE] VARCHAR (4) NULL, -- GET FROM FUNCTIONS
		[EXT_MARKUP_AMT] DECIMAL (14, 2) NULL, -- CALCULATE
		[EXT_STATE_RESALE] DECIMAL (14, 2) NULL, -- CALCULATE
		[EXT_COUNTY_RESALE] DECIMAL (14, 2) NULL, -- CALCULATE
		[EXT_CITY_RESALE] DECIMAL (14, 2) NULL, -- CALCULATE
		[IO_QTY] DECIMAL (14, 2) NULL, -- COPY
		[IO_RATE] DECIMAL (12, 4) NULL, -- COPY
		[LINE_TOTAL] DECIMAL (14, 2) NULL, -- CALCULATE 
		[NON_BILL_FLAG] SMALLINT NULL, -- UPDATE VIA RATE
		[IO_COMMENT] TEXT NULL,
		[TAXABLE_AMOUNT] DECIMAL(14, 2) NULL, -- COPY
		[AB_FLAG] SMALLINT NULL, -- COPY
		[ORDER_NBR] INT NULL, -- COPY
		[LINE_NBR] SMALLINT NULL -- COPY
	)

	DECLARE RATE_CURSOR CURSOR FOR 
		SELECT DISTINCT FNC_CODE, FNC_TYPE, IO_INV_DATE FROM @INCOME_ONLY_TABLE

	/*
		Get Records to Copy
	*/
	INSERT INTO @INCOME_ONLY_TABLE (JOB_NUMBER, JOB_COMPONENT_NBR, FNC_CODE, FNC_TYPE, IO_INV_DATE, IO_AMOUNT, IO_DESC, IO_COMM_PCT, IO_QTY, IO_RATE, EXT_MARKUP_AMT, IO_COMMENT, DP_TM_CODE, AB_FLAG, ORDER_NBR, LINE_NBR)
		SELECT 
			@COPY_TO_JOB_NUMBER, 
			@COPY_TO_JOB_COMPONENT_NBR,
			[COPY_INCOME_ONLY].FunctionCode,
			[FUNCTIONS].FNC_TYPE,
			[COPY_INCOME_ONLY].InvoiceDate,
			[COPY_INCOME_ONLY].Amount,
			[COPY_INCOME_ONLY].[Description],
			[COPY_INCOME_ONLY].CommissionPercent,
			[COPY_INCOME_ONLY].Quantity,
			[COPY_INCOME_ONLY].Rate,
			[COPY_INCOME_ONLY].MarkupAmount,
			[COPY_INCOME_ONLY].Comment,
			FUNCTIONS.DP_TM_CODE,
			ISNULL(JOB_COMPONENT.AB_FLAG, 0),
			CASE WHEN @INCLUDE_MEDIA_ORDER_INFO = 1 THEN [COPY_INCOME_ONLY].OrderNumber ELSE NULL END,
			CASE WHEN @INCLUDE_MEDIA_ORDER_INFO = 1 THEN [COPY_INCOME_ONLY].OrderLineNumber ELSE NULL END
	FROM 
		dbo.[advtf_income_only_load](@COPY_FROM_CL_CODE, @COPY_FROM_DIV_CODE, @COPY_FROM_PRD_CODE, @COPY_FROM_JOB_NUMBER, @COPY_FROM_JOB_COMPONENT_NBR, 0, @COPY_FROM_IO_IDS, @USER_ID) as [COPY_INCOME_ONLY] JOIN
		dbo.FUNCTIONS ON [COPY_INCOME_ONLY].FunctionCode = FUNCTIONS.FNC_CODE JOIN
		dbo.JOB_COMPONENT ON JOB_COMPONENT.JOB_NUMBER = @COPY_TO_JOB_NUMBER AND
							 JOB_COMPONENT.JOB_COMPONENT_NBR = @COPY_TO_JOB_COMPONENT_NBR
	
	/*
		Check if Rows to Copy Exist, Continue or Exit
	*/

	SELECT @ROWCOUNT = COUNT(*) FROM @INCOME_ONLY_TABLE

	IF @ROWCOUNT > 0
	BEGIN
	
		SELECT
			@CL_CODE = JOB_LOG.CL_CODE,
			@DIV_CODE = JOB_LOG.DIV_CODE,
			@PRD_CODE = JOB_LOG.PRD_CODE,
			@SC_CODE = JOB_LOG.SC_CODE
		FROM
			dbo.JOB_LOG
		WHERE
			JOB_LOG.JOB_NUMBER = @COPY_TO_JOB_NUMBER

		/*
			Update Tax Commission Flag, Tax Commission Only Flag, Tax Code, and Non Billable Flag
		*/

		OPEN RATE_CURSOR

		FETCH NEXT FROM RATE_CURSOR INTO @FNC_CODE, @FNC_TYPE, @IO_INV_DATE

		WHILE @@FETCH_STATUS = 0
		BEGIN

			SELECT
				@TAX_CODE = BILLING_RATE.TAX_CODE,
				@TAX_COMM = BILLING_RATE.TAX_COMM,
				@TAX_COMM_ONLY = BILLING_RATE.TAX_COMM_ONLY,
				@NON_BILL_FLAG = BILLING_RATE.NOBILL_FLAG
			FROM
				dbo.advtf_get_billing_rate(NULL, @IO_INV_DATE, @FNC_CODE, @CL_CODE, @DIV_CODE, @PRD_CODE, @SC_CODE, @FNC_TYPE, @COPY_TO_JOB_NUMBER, @COPY_TO_JOB_COMPONENT_NBR, NULL) BILLING_RATE

			UPDATE
				@INCOME_ONLY_TABLE
			SET
				TAX_CODE = @TAX_CODE,
				TAX_COMM = @TAX_COMM,
				TAX_COMM_ONLY = @TAX_COMM_ONLY,
				NON_BILL_FLAG = @NON_BILL_FLAG
			WHERE
				FNC_CODE = @FNC_CODE AND
				IO_INV_DATE = @IO_INV_DATE
						
			FETCH NEXT FROM RATE_CURSOR INTO @FNC_CODE, @FNC_TYPE, @IO_INV_DATE

		END

		CLOSE RATE_CURSOR
		DEALLOCATE RATE_CURSOR
		
		/*
			Update Sales Tax
		*/
		IF (SELECT AGENCY.INV_TAX_FLAG FROM dbo.AGENCY) = 1 -- Apply Tax Upon Billing
		BEGIN
		
			UPDATE
				@INCOME_ONLY_TABLE
			SET
				TAX_RESALE = 0,
				TAX_CITY_PCT = 0,
				TAX_COUNTY_PCT = 0,
				TAX_STATE_PCT = 0,
				TAX_CODE = NULL,
				EXT_CITY_RESALE = 0,
				EXT_COUNTY_RESALE = 0,
				EXT_STATE_RESALE = 0,
				TAX_COMM = 0,
				TAX_COMM_ONLY = 0

		END
		ELSE
		BEGIN

			UPDATE
				[INCOME_ONLY_COPY]
			SET
				[INCOME_ONLY_COPY].TAX_RESALE = ISNULL(SALES_TAX.TAX_RESALE, 0),
				[INCOME_ONLY_COPY].TAX_CITY_PCT = ISNULL(SALES_TAX.TAX_CITY_PERCENT, 0),
				[INCOME_ONLY_COPY].TAX_COUNTY_PCT = ISNULL(SALES_TAX.TAX_COUNTY_PERCENT, 0),
				[INCOME_ONLY_COPY].TAX_STATE_PCT = ISNULL(SALES_TAX.TAX_STATE_PERCENT, 0)
			FROM
				@INCOME_ONLY_TABLE [INCOME_ONLY_COPY] LEFT OUTER JOIN
				dbo.SALES_TAX ON [INCOME_ONLY_COPY].TAX_CODE = SALES_TAX.TAX_CODE

			UPDATE 
				@INCOME_ONLY_TABLE
			SET		
				TAXABLE_AMOUNT = CASE 
									WHEN TAX_COMM = 1 THEN 
										CASE
											WHEN TAX_COMM_ONLY = 1 THEN ISNULL(EXT_MARKUP_AMT, 0)
											ELSE ISNULL(EXT_MARKUP_AMT, 0) + ISNULL(IO_AMOUNT, 0)
										END
									ELSE ISNULL(IO_AMOUNT, 0)
								 END
		
			UPDATE 
				@INCOME_ONLY_TABLE
			SET
				EXT_CITY_RESALE = CAST(ISNULL(TAXABLE_AMOUNT, 0) * (ISNULL(TAX_CITY_PCT, 0) / 100) AS DECIMAL(14, 2)),
				EXT_COUNTY_RESALE = CAST(ISNULL(TAXABLE_AMOUNT, 0) * (ISNULL(TAX_COUNTY_PCT, 0) / 100) AS DECIMAL(14, 2)),
				EXT_STATE_RESALE = CAST(ISNULL(TAXABLE_AMOUNT, 0) * (ISNULL(TAX_STATE_PCT, 0) / 100) AS DECIMAL(14, 2))

		END

		UPDATE 
			@INCOME_ONLY_TABLE
		SET
			LINE_TOTAL = CAST(ISNULL(IO_AMOUNT, 0) + ISNULL(EXT_MARKUP_AMT, 0) + ISNULL(EXT_CITY_RESALE, 0) + ISNULL(EXT_COUNTY_RESALE, 0) + ISNULL(EXT_STATE_RESALE, 0) AS DECIMAL(14, 2))

	
		SET @COUNTER = 1

		WHILE @COUNTER <= @ROWCOUNT
		BEGIN

			INSERT INTO @NEW_IO_IDS (IO_ID)
				(SELECT ISNULL(MAX(IO_ID), 1) + 1 FROM dbo.INCOME_ONLY)

			INSERT INTO dbo.INCOME_ONLY ([IO_ID], [SEQ_NBR], [JOB_NUMBER], [JOB_COMPONENT_NBR], [FNC_CODE], [IO_INV_DATE], [IO_AMOUNT], 
										 [IO_DESC], [IO_COMM_PCT], [TAX_CODE], [TAX_STATE_PCT], [TAX_COUNTY_PCT], [TAX_CITY_PCT], [TAX_COMM], 
										 [TAX_COMM_ONLY], [TAX_RESALE], [DP_TM_CODE], [EXT_MARKUP_AMT], [EXT_STATE_RESALE], [EXT_COUNTY_RESALE], 
										 [EXT_CITY_RESALE], [IO_QTY], [IO_RATE], [LINE_TOTAL], [NON_BILL_FLAG], [IO_COMMENT], [MODIFIED_BY], 
										 [MODIFY_DATE], [AB_FLAG], [ORDER_NBR], [LINE_NBR])
				SELECT
					[IO_ID] = (SELECT MAX(IO_ID) FROM @NEW_IO_IDS),
					0,
					[JOB_NUMBER], 
					[JOB_COMPONENT_NBR], 
					[FNC_CODE], 
					[IO_INV_DATE], 
					[IO_AMOUNT],
					[IO_DESC],
					[IO_COMM_PCT], 
					[TAX_CODE], 
					[TAX_STATE_PCT], 
					[TAX_COUNTY_PCT], 
					[TAX_CITY_PCT],
					[TAX_COMM], 
					[TAX_COMM_ONLY], 
					[TAX_RESALE], 
					[DP_TM_CODE], 
					[EXT_MARKUP_AMT],
					[EXT_STATE_RESALE],
					[EXT_COUNTY_RESALE],
					[EXT_CITY_RESALE],
					[IO_QTY],
					[IO_RATE],
					[LINE_TOTAL],
					[NON_BILL_FLAG], 
					[IO_COMMENT],
					@USER_ID,
					GETDATE(),
					[AB_FLAG],
					[ORDER_NBR],
					[LINE_NBR]
				FROM
					@INCOME_ONLY_TABLE
				WHERE
					ROWID = @COUNTER

				SET @COUNTER = @COUNTER + 1
		
		END
		
		UPDATE 
			dbo.ASSIGN_NBR
		SET
			LAST_NBR = (SELECT MAX(IO_ID) FROM dbo.INCOME_ONLY)
		WHERE
			COLUMNNAME = 'IO_ID'

	END

	SELECT IO_ID FROM @NEW_IO_IDS

END
GO