if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[advsp_job_detail_analysis_currentprior_load]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[advsp_job_detail_analysis_currentprior_load]
GO

CREATE PROCEDURE [dbo].[advsp_job_detail_analysis_currentprior_load]
	@OPEN_JOB_ONLY AS bit = 1,
	@EXCLUDE_NONBILL_HRS AS bit = 0,
	@OFFICE_LIST AS varchar(MAX) = NULL,
	@CLIENT_LIST AS varchar(MAX) = NULL,
	@DIVISION_LIST AS varchar(MAX) = NULL,
	@PRODUCT_LIST AS varchar(MAX) = NULL,
	@JOB_LIST AS varchar(MAX) = NULL,
	@ACCT_EXEC_LIST AS varchar(MAX) = NULL,
	@SALES_CLASS_LIST AS varchar(MAX) = NULL,
	@DATE_CUTOFF AS VARCHAR(6),
	@USER_CODE AS varchar(100)

AS
BEGIN

	if @OFFICE_LIST = ''
	Begin
		SET @OFFICE_LIST = NULL
	End
	if @CLIENT_LIST = ''
	Begin
		SET @CLIENT_LIST = NULL
	End
	if @DIVISION_LIST = ''
	Begin
		SET @DIVISION_LIST = NULL
	End
	if @PRODUCT_LIST = ''
	Begin
		SET @PRODUCT_LIST = NULL
	End
	if @JOB_LIST = ''
	Begin
		SET @JOB_LIST = NULL
	End
	if @ACCT_EXEC_LIST = ''
	Begin
		SET @ACCT_EXEC_LIST = NULL
	End
	if @SALES_CLASS_LIST = ''
	Begin
		SET @SALES_CLASS_LIST = NULL
	End

	DECLARE @StartDate smalldatetime, @EndDate smalldatetime

	SELECT @StartDate = PPSRTDATE
	FROM POSTPERIOD
	WHERE PPPERIOD = @DATE_CUTOFF

	SELECT @EndDate = PPENDDATE
	FROM POSTPERIOD
	WHERE PPPERIOD = @DATE_CUTOFF


CREATE TABLE #jobDetail( 	
    RowID int IDENTITY(1, 1),
	MarkupPercent		decimal(15,2),
	JobComponent		varchar(60) NULL,
	IsNonBillable		varchar(60) NULL,
	Hold				varchar(60) NULL,
	AdvanceBillFlag		smallint,
	ClientCode			varchar(6) NULL,
	ClientDescription	varchar(40) NULL,
	DivisionCode		varchar(6) NULL,
	DivisionDescription	varchar(40) NULL,
	ProductCode			varchar(6) NULL,
	ProductDescription 	varchar(40) NULL,
	AccountExecutiveCode	varchar(6) NULL,
	AccountExecutive	varchar(100) NULL,
	ClientReference 	varchar(30) NULL,
	JobNumber			int,
	JobDescription		varchar(60) NULL,
	SalesClassCode		varchar(6) NULL,
	JobComponentNumber	smallint,
	ComponentDescription		varchar(60) NULL,
	JobTypeCode			varchar(10) NULL,
	FunctionTypeOrder	int,
	FunctionType  		varchar(3) NULL,
	FunctionTypeDescription		varchar(30) NULL,
	[Order] 		int,
	[FunctionCode]		varchar(6) NULL,
	[FunctionDescription]	varchar(60) NULL,
	[ItemDescription]		varchar(100) NULL,
	[ItemDate]		smalldatetime,
	[ItemCode]		varchar(60) NULL,
	[ClientPO]		varchar(40) NULL,
	[SumOfEstimateHours]	decimal(15,2),
	[SumOfEstimate]		decimal(15,2),
	[SumOfEstimateCont]			decimal(15,2),
	[SumOfEstimateNetCost] 			decimal(15,2),
	[SumOfEstimateNetAmount]		decimal(15,2),
	[SumOfEstimateExtMarkup]          		decimal(15,2),
	[SumOfEstimateVenTax]    		    decimal(15,2),
	[SumOfEstimateResaleTax]			   decimal(15,2),
	[SumOfIncomeOnly]    		decimal(15,2),
	[SumOfBillEmpHours]			decimal(15,2),
	[SumOfTotalBill]			decimal(15,2),
	[SumOfAPQuantity]		decimal(15,2),
	[SumOfAPNetCost]		decimal(15,2),
	[SumOfExtMarkupAmount]	decimal(15,2),
	[SumOfVenTax]		decimal(15,2),
	[SumOfResaleTax]     decimal(15,2),
	[SumOfResaleBilled]		decimal(15,2),
	[SumOfOpenPOAmount]             decimal(15,2),
	[SumOfLineTotal]      decimal(15,2),
	[SumOfNonBillableEmpHours]           decimal(15,2),
	[SumOfNonBillableAmount]            decimal(15,2),
	[SumOfBilledAmount]       decimal(15,2),
	[SumOfAdvanceBilled]       decimal(15,2),
	[SumOfAdvanceTotal]           decimal(15,2),
	[SumOfAdvanceResale]          decimal(15,2),
	[SumOfAdvanceResaleBilled]           decimal(15,2),
	[SumOfAdvanceFinalBilled]        decimal(15,2),
	[SumOfBilledCost]         		decimal(15,2),
	[SumOfUnbilled]         		decimal(15,2),
	[ProcessDesc]		varchar(100),
	[JobProcessControl]      smallint,
	[Code]               varchar(6) NULL,
	[ZeroMU]           decimal(15,2),
	[IsAdvanceBill]        smalldatetime,
	[EstimateNumber]				varchar(30),
	[EstimateComponentNumber]      int,
	[GlexActBill]		int)



	INSERT INTO #jobDetail
	SELECT
		--[ID] = ISNULL(NEWID(), NEWID()),
		[MarkupPercent] = SJDA.[MarkupPercent],
		[JobComponent] = SJDA.[JobComponent],
		[IsNonBillable] = CASE SJDA.NB_FLAG WHEN 1 THEN 'Non-Billable'
												   ELSE 'Billable' END,
		[Hold] = CASE JC.JOB_BILL_HOLD WHEN 1 THEN 'Temporary'
									   WHEN 2 THEN 'Permanent'
									   ELSE 'None' END,
		[AdvanceBillFlag] = JC.AB_FLAG,
		[ClientCode] = SJDA.[ClientCode],
		[ClientDescription] = SJDA.[ClientDescription],
		[DivisionCode] = SJDA.[DivisionCode],
		[DivisionDescription] = SJDA.[DivisionDescription],
		[ProductCode] = SJDA.[ProductCode],
		[ProductDescription] = SJDA.[ProductDescription],
		[AccountExecutiveCode] = SJDA.[AccountExecutiveCode],
		[AccountExecutive] = SJDA.[AccountExecutive],
		[ClientReference] = SJDA.[ClientReference],
		[JobNumber] = SJDA.[JOB_NUMBER],
		[JobDescription] = SJDA.[JobDescription],
		[SalesClassCode] = SJDA.[SalesClassCode],
		[JobComponentNumber] = SJDA.[JOB_COMPONENT_NBR],
		[ComponentDescription] = SJDA.[ComponentDescription],
		[JobTypeCode] = SJDA.[JobTypeCode],
		[FunctionTypeOrder] = CASE SJDA.FNC_TYPE WHEN 'E' THEN 1
														WHEN 'V' THEN 2
														WHEN 'I' THEN 3 END,
		[FunctionType] = SJDA.FNC_TYPE,
		[FunctionTypeDescription] = CASE SJDA.FNC_TYPE WHEN 'E' THEN 'Employee Time'
													   WHEN 'V' THEN 'Vendor'
													   WHEN 'I' THEN ' Income Only' END,
		[Order] = SJDA.[ORDER],
		[FunctionCode] = SJDA.FNC_CODE,
		[FunctionDescription] = SJDA.[FunctionDescription],
		[ItemDescription] = SJDA.ITEM_DESC,
		[ItemDate] = SJDA.[DATE],	
		[ItemCode] = SJDA.ITEM_CODE,
		[ClientPO] = SJDA.[ClientPO],
		[SumOfEstimateHours] = SJDA.SumOfESTIMATE_HRS_QTY,
		[SumOfEstimate] = SJDA.SumOfESTIMATE,
		[SumOfEstimateCont] = SJDA.SumOfESTCONT,
		[SumOfEstimateNetCost] = SJDA.SumOfEST_NET_COST,
		[SumOfEstimateNetAmount] = SJDA.SumOfEST_NET_AMT,
		[SumOfEstimateExtMarkup] = SJDA.SumOfEST_EXT_MARKUP,
		[SumOfEstimateVenTax] = SJDA.SumOfEST_VEN_TAX,
		[SumOfEstimateResaleTax] = SJDA.SumOfEST_RESALE_TAX,
		[SumOfIncomeOnly] = SJDA.SumOfINCOME_ONLY,
		[SumOfBillEmpHours] = SJDA.SumOfBILL_EMP_HOURS,
		[SumOfTotalBill] = SJDA.SumOfTOTAL_BILL,
		[SumOfAPQuantity] = SJDA.SumOfAP_QUANTITY,
		[SumOfAPNetCost] = SJDA.SumOfAP_NET_COST,
		[SumOfExtMarkupAmount] = SJDA.SumOfEXT_MARKUP_AMT,
		[SumOfVenTax] = SJDA.SumOfVEN_TAX,
		[SumOfResaleTax] = SJDA.SumOfRESALE_TAX,
		[SumOfResaleBilled] = SJDA.SumOfRESALE_BILLED,
		[SumOfOpenPOAmount] = SJDA.SumOfOPEN_PO_AMT,
		[SumOfLineTotal] = SJDA.SumOfLINE_TOTAL,
		[SumOfNonBillableEmpHours] = SJDA.SumOfNB_EMP_HOURS,
		[SumOfNonBillableAmount] = SJDA.SumOfNB_AMOUNT,
		[SumOfBilledAmount] = SJDA.SumOfAMT_BILLED,
		[SumOfAdvanceBilled] = SJDA.SumOfADVANCE_BILLED,
		[SumOfAdvanceTotal] = SJDA.SumOfADVANCE_TOTAL,
		[SumOfAdvanceResale] = SJDA.SumOfADVANCE_RESALE,
		[SumOfAdvanceResaleBilled] = SJDA.SumOfADVANCE_RESALE_BILLED,
		[SumOfAdvanceFinalBilled] = SJDA.SumOfADVANCE_FINAL_BILLED,
		[SumOfBilledCost] = SJDA.SumOfCOST_BILLED,
		[SumOfUnbilled] = SJDA.SumOfUNBILLED,
		[ProcessDesc] = SJDA.[JobProcessControl],
		[JobProcessControl] =  JC.JOB_PROCESS_CONTRL,
		[Code] = CASE WHEN SJDA.SumOfESTIMATE = 0 AND SJDA.SumOfTOTAL_BILL = 0 AND SJDA.SumOfLINE_TOTAL = 0 AND 
						   SJDA.SumOfOPEN_PO_AMT = 0 AND SJDA.SumOfADVANCE_TOTAL = 0 AND SJDA.SumOfAMT_BILLED = 0 AND 
						   SJDA.SumOfADVANCE_BILLED = 0 AND SJDA.SumOfNB_AMOUNT = 0 AND SJDA.SumOfCOST_BILLED = 0 AND 
						   SJDA.SumOfBILL_EMP_HOURS = 0 THEN 'X' ELSE NULL END,	
		[ZeroMU] = SJDA.SumOfEXT_MARKUP_AMT,
		[IsAdvanceBill] = CASE WHEN SJDA.SumOfADVANCE_TOTAL > 0 THEN 'Y' ELSE '' END,
		[EstimateNumber] = SJDA.[EstimateNumber],
		[EstimateComponentNumber] = SJDA.[EstimateComponentNumber],
		[GlexActBill] = SJDA.[GL_XACT_BILL]
	FROM
		(SELECT
			[JOB_NUMBER] = JDA.JOB_NUMBER,
			[JOB_COMPONENT_NBR] = JDA.JOB_COMPONENT_NBR,
			[ORDER] = JDA.[ORDER],
			[FNC_TYPE] = JDA.FNC_TYPE,
			[FNC_CODE] = JDA.FNC_CODE,
			[ITEM_DESC] = JDA.ITEM_DESC,
			[DATE] = JDA.[DATE],
			[ITEM_CODE] = JDA.ITEM_CODE,
			--[BILL_PERIOD] = JDA.BILL_PERIOD,
			[NONAP_DATE] = JDA.NONAP_DATE,
			[NB_FLAG] = JDA.NB_FLAG,
			[SumOfESTIMATE_HRS_QTY] = SUM(JDA.ESTIMATE_HRS_QTY),
			[SumOfESTIMATE] = SUM(JDA.ESTIMATE),
			[SumOfESTCONT] = SUM(JDA.ESTCONT),
			[SumOfEST_NET_COST] = SUM(JDA.EST_NET_COST),
			[SumOfEST_NET_AMT] = SUM(JDA.EST_NET_AMT),
			[SumOfEST_EXT_MARKUP] = SUM(JDA.EST_EXT_MARKUP),
			[SumOfEST_VEN_TAX] = SUM(JDA.EST_VEN_TAX),
			[SumOfEST_RESALE_TAX] = SUM(JDA.EST_RESALE_TAX),
			[SumOfBILL_EMP_HOURS] = SUM(JDA.BILL_EMP_HOURS),
			[SumOfNB_EMP_HOURS] = SUM(JDA.NB_EMP_HOURS),
			[SumOfINCOME_ONLY] = SUM(JDA.INCOME_ONLY),
			[SumOfAP_QUANTITY] = SUM(JDA.AP_QUANTITY),
			[SumOfAP_NET_COST] = SUM(JDA.AP_NET_COST),
			[SumOfEXT_MARKUP_AMT] = SUM(JDA.EXT_MARKUP_AMT),
			[SumOfTOTAL_BILL] = SUM(JDA.TOTAL_BILL),
			[SumOfLINE_TOTAL] = SUM(JDA.LINE_TOTAL),
			[SumOfNB_AMOUNT] = SUM(JDA.NB_AMOUNT),
			[SumOfAMT_BILLED] = SUM(JDA.AMT_BILLED),
			[SumOfRESALE_TAX] = SUM(JDA.RESALE_TAX),
			[SumOfRESALE_BILLED] = SUM(JDA.RESALE_BILLED),
			[SumOfVEN_TAX] = SUM(JDA.VEN_TAX),
			[SumOfAMT_BILLED_NORTAX] = SUM(JDA.AMT_BILLED - JDA.RESALE_BILLED),
			[SumOfADVANCE_BILLED] = SUM(JDA.ADVANCE_BILLED),
			[SumOfADVANCE_BILLED_NOTAX] = SUM(JDA.ADVANCE_BILLED_NOTAX),
			[SumOfADVANCE_TOTAL] = SUM(JDA.ADVANCE_TOTAL),
			[SumOfADVANCE_TOTAL_NOTAX] = SUM(JDA.ADVANCE_TOTAL_NOTAX),
			[SumOfADVANCE_RESALE] = SUM(JDA.ADVANCE_RESALE),
			[SumOfADVANCE_RESALE_BILLED] = SUM(JDA.ADVANCE_RESALE_BILLED),
			[SumOfADVANCE_FINAL_BILLED] =  SUM(JDA.ADVANCE_FINAL),--SUM(CASE JDA.AB_FLAG WHEN 5 THEN JDA.AMT_BILLED ELSE 0 END),
			[SumOfOPEN_PO_AMT] = SUM(JDA.OPEN_PO_AMT),
			[SumOfCOST_BILLED] = SUM(JDA.COST_BILLED),
			[SumOfUNBILLED] = SUM(JDA.UNBILLED),
			JDA.[JobProcessControl],
			JDA.[MarkupPercent],
			JDA.[ClientPO],
			JDA.[BillHold],
			JDA.[AdvanceBillFlag],
			JDA.[ClientCode],
			JDA.[ClientDescription],
			JDA.[DivisionCode],
			JDA.[DivisionDescription],
			JDA.[ProductCode],
			JDA.[ProductDescription],
			JDA.[AccountExecutiveCode],
			JDA.[AccountExecutive],
			JDA.[ClientReference],
			JDA.[JobDescription],
			JDA.[SalesClassCode],
			JDA.[ComponentDescription],
			JDA.[JobTypeCode],
			JDA.[EstimateNumber],
			JDA.[EstimateComponentNumber],
			JDA.[JobComponent],
			JDA.[FunctionDescription],
			JDA.[GL_XACT_BILL]	
		FROM
			(SELECT
				[REC_SOURCE] = JD.[ResourceType],
				[JOB_NUMBER] = JD.[JobNumber],
				[JOB_COMPONENT_NBR] = JD.[JobComponentNumber],
				[FNC_TYPE] = JD.[FunctionType],
				[FNC_CODE] = JD.[FunctionCode],
				[FNC_DESC]	= JD.[FunctionDescription],
				[POST_PERIOD] = JD.[PostPeriodCode],
				[DATE] = JD.[ItemDate],
				[NONAP_DATE] = CASE JD.[FunctionType] WHEN 'E' THEN JD.[ItemDate] ELSE NULL END,
				[ITEM_ID] = JD.	[ItemID],
				[ITEM_SEQ] = JD.[ItemSequenceNumber],
				[AP_ID] = NULL,
				[VN_EMP_CODE] = JD.[ItemCode],
				[ITEM_DESC] = JD.[ItemDescription],
				[ITEM_CODE] = CASE JD.[ResourceType] WHEN 'AB' THEN CAST(JD.[ItemID] AS varchar) WHEN 'E' THEN NULL WHEN 'I' THEN NULL WHEN 'V' THEN JD.[ItemExtra] WHEN 'PO' THEN 'PO #: ' + CAST(JD.[PurchaseOrderNumber] AS varchar) END,
				[BILL_EMP_HOURS] = CASE WHEN JD.[ResourceType] = 'E' AND JD.[IsNonBillable] = 0 THEN JD.[Hours] ELSE 0 END,
				[NB_EMP_HOURS] = CASE WHEN JD.[ResourceType] = 'E' AND JD.[IsNonBillable] = 1 THEN JD.[Hours] ELSE 0 END,
				[BILLED_EMP_HOURS] = CASE WHEN (JD.[ResourceType] = 'E' AND JD.[AccountsReceivableInvoiceNumber] IS NOT NULL) OR JD.[AdvanceBillFlagDetail] = 3 THEN JD.[Hours] ELSE 0 END,
				[AP_QUANTITY] = CASE JD.[ResourceType] WHEN 'V' THEN JD.[Quantity] ELSE 0 END,
				[AP_NET_COST] = CASE WHEN JD.[ResourceType] = 'V' OR JD.[AdvanceBillFlagDetail] = 3 THEN JD.[CostAmount] ELSE 0 END,
				[EXT_MARKUP_AMT] = CASE WHEN JD.[ResourceType] IN('E','I','V') AND JD.[IsNonBillable] = 0 THEN JD.[ExtMarkupAmount] ELSE 0 END,
				[EXT_MARKUP_BILLED] = CASE WHEN (JD.[ResourceType] IN('E','I','V') AND JD.[AccountsReceivableInvoiceNumber] IS NOT NULL) OR JD.[AdvanceBillFlagDetail] = 3 THEN JD.[ExtMarkupAmount] ELSE 0 END,
				[TOTAL_BILL] = CASE WHEN JD.[ResourceType] = 'E' AND JD.[IsNonBillable] = 0 THEN JD.[BillableLessResale] ELSE 0 END,
				[INCOME_ONLY] = CASE WHEN JD.[ResourceType] = 'I' THEN JD.[Total] - JD.[ResaleTaxAmount] ELSE 0 END,
				[LINE_TOTAL] = CASE WHEN JD.[ResourceType] IN('E','I','V') AND JD.[IsNonBillable] = 0 THEN JD.[Total] ELSE 0 END,
				[CLIENT_OOP_AMT] = NULL,
				[NB_AMOUNT] = CASE WHEN JD.[ResourceType] IN('E','V') AND JD.[IsNonBillable] = 1 THEN JD.[Total] - JD.[ResaleTaxAmount] ELSE 0 END,
				[NB_AP_NET_COST] = CASE WHEN JD.[ResourceType] = 'V' AND JD.[IsNonBillable] = 1 THEN ISNULL(JD.[CostAmount],0) ELSE 0 END,
				[NB_NET_TAX] = CASE JD.[IsNonBillable] WHEN 1 THEN ISNULL(JD.[NonResaleTaxAmount],0) ELSE 0 END,
				[NB_MARKUP_AMT] = CASE WHEN JD.[ResourceType] IN('E','I','V') AND JD.[IsNonBillable] = 1 THEN ISNULL(JD.[ExtMarkupAmount],0) ELSE 0 END,
				[COST_BILLED] = CASE WHEN JD.[ResourceType] = 'V' AND JD.[IsNonBillable] = 0 AND (JD.[AccountsReceivableInvoiceNumber] IS NOT NULL OR JD.[AdvanceBillFlagDetail] = 3) THEN JD.[CostAmount] + JD.[NonResaleTaxAmount] ELSE 0 END,
				[AMT_BILLED] = CASE WHEN JD.[AccountsReceivableInvoiceNumber] IS NOT NULL OR JD.[AdvanceBillFlagDetail] = 3 THEN JD.[Total] ELSE 0 END,
				[ACT_STATE_TAX] = NULL,
				[ACT_COUNTY_TAX] = NULL,
				[ACT_CITY_TAX] = NULL,
				[RESALE_TAX] = CASE WHEN JD.[ResourceType] IN('E','I','V') AND JD.[IsNonBillable] = 0 THEN JD.[ResaleTaxAmount] ELSE 0 END,
				[RESALE_BILLED] = CASE WHEN (JD.[AccountsReceivableInvoiceNumber] IS NOT NULL OR JD.[AdvanceBillFlagDetail] = 3) AND JD.[IsNonBillable] = 0  THEN JD.[ResaleTaxAmount] ELSE 0 END,
				[VEN_TAX] = CASE WHEN JD.[ResourceType] = 'V' AND JD.[IsNonBillable] = 0 AND (JD.[AccountsReceivableInvoiceNumber] IS NOT NULL OR JD.[AdvanceBillFlagDetail] = 3) THEN JD.[NonResaleTaxAmount] ELSE 0 END,
				[ADVANCE_BILLED] = CASE WHEN (JD.[ResourceType] = 'AB' AND JD.[AccountsReceivableInvoiceNumber] IS NOT NULL) OR JD.[AdvanceBillFlagDetail] = 3 THEN JD.[BilledWithResale] ELSE 0 END,
				[ADVANCE_TOTAL] = CASE JD.[ResourceType] WHEN 'AB' THEN JD.[Total] ELSE 0 END,
				[ADVANCE_TOTAL_NOTAX] = CASE JD.[ResourceType] WHEN 'AB' THEN JD.[Total] - JD.[ResaleTaxAmount] ELSE 0 END,
				[ADVANCE_BILLED_NOTAX] = CASE WHEN (JD.[ResourceType] = 'AB' AND JD.[AccountsReceivableInvoiceNumber] IS NOT NULL) OR JD.[AdvanceBillFlagDetail] = 3 THEN JD.[Total] - JD.[ResaleTaxAmount] ELSE 0 END,
				[ADVANCE_RESALE] = CASE JD.[ResourceType] WHEN 'AB' THEN JD.[ResaleTaxAmount] ELSE 0 END,
				[ADVANCE_RESALE_BILLED] = CASE WHEN (JD.[ResourceType] = 'AB' AND JD.[AccountsReceivableInvoiceNumber] IS NOT NULL) OR JD.[AdvanceBillFlagDetail] = 3 THEN JD.[ResaleTaxAmount] ELSE 0 END,
				[ADVANCE_ADJUSTED] = NULL,
				[ADVANCE_COST_BILLED] = CASE WHEN (JD.[ResourceType] = 'AB' AND JD.[FunctionType] = 'V') AND (JD.[AccountsReceivableInvoiceNumber] IS NOT NULL OR JD.[AdvanceBillFlagDetail] = 3) THEN JD.[Total] - JD.[ExtMarkupAmount] - JD.[ResaleTaxAmount] ELSE 0 END,
				[ADVANCE_FINAL] = CASE WHEN JD.[ResourceType] = 'AB' AND JD.[AccountsReceivableInvoiceNumber] IS NOT NULL AND JD.[AdvanceBillFlagDetail] = 5 THEN JD.[BilledAmount] ELSE 0 END,
				[PO_EXT_AMT] = NULL,
				[OPEN_PO_AMT] = ISNULL(JD.[OpenPurchaseOrderAmount],0),
				[ESTIMATE] = ISNULL(JD.[EstimateTotalAmount],0) + ISNULL(JD.[EstimateContTotalAmount],0),
				[ESTIMATE_HRS_QTY] = CASE WHEN (JD.[ResourceType] IN('ES','EI') AND JD.[FunctionType] IN('V')) THEN JD.[EstimateQuantity] ELSE JD.[EstimateHours] END,
				[ESTCONT] = JD.[EstimateContTotalAmount],
				[EST_NET_COST] = JD.[EstimateCostAmount],
				[EST_NET_AMT] = JD.[EstimateNetAmount],
				[EST_EXT_MARKUP] = JD.[EstimateMarkupAmount],
				[EST_VEN_TAX] = JD.[EstimateNonResaleTaxAmount],
				[EST_RESALE_TAX] = JD.[EstimateResaleTaxAmount],
				[NB_FLAG] = JD.[IsNonBillable],
				[ORDER] = CASE JD.[ResourceType] WHEN 'ES' THEN 1 WHEN 'AB' THEN 2 WHEN 'E' THEN 3 WHEN 'I' THEN 4 WHEN 'V' THEN 5 WHEN 'PO' THEN 6 END,
				[AR_INV_NBR] = JD.[AccountsReceivableInvoiceNumber],
				[AR_INV_TYPE] = JD.[AccountsReceivableInvoiceType],
				[GL_XACT_BILL] = JD.[GlexActBill],
				[BILL_TYPE] = CASE WHEN (JD.[ResourceType] IN('V','I') OR (JD.[ResourceType] = 'E' AND JD.[FeeTime] = 0)) AND JD.[AccountsReceivableInvoiceNumber] IS NOT NULL THEN 'P' WHEN JD.[ResourceType] = 'AB' AND JD.[AdvanceBillFlagDetail] IN(1,2) THEN 'A' WHEN JD.[ResourceType] = 'AB' AND JD.[AdvanceBillFlagDetail] = 5 THEN 'F' WHEN JD.[ResourceType] = 'AB' THEN 'R' ELSE NULL END,
				[AB_FLAG] = JD.[AdvanceBillFlagDetail],
				[BILL_PERIOD] = JD.[AccountsReceivablePostPeriodCode],
				[EMP_BILL_RATE] = NULL,
				[SELECT_FLAG] = CASE WHEN JD.[ResourceType] = 'C' OR (JD.[ResourceType] = 'I' AND JD.[IsNonBillable] = 1) THEN 0 ELSE 1 END,
				[UNBILLED] = CASE WHEN JD.[AccountsReceivableInvoiceNumber] IS NULL THEN JD.[UnbilledAmount] ELSE 0 END,
				JD.[JobProcessControl],
				JD.[MarkupPercent],
				JD.[ClientPO],
				JD.[BillHold],
				JD.[AdvanceBillFlag],
				JD.[ClientCode],
				JD.[ClientDescription],
				JD.[DivisionCode],
				JD.[DivisionDescription],
				JD.[ProductCode],
				JD.[ProductDescription],
				JD.[AccountExecutiveCode],
				JD.[AccountExecutive],
				JD.[ClientReference],
				JD.[JobDescription],
				JD.[SalesClassCode],
				JD.[ComponentDescription],
				JD.[JobTypeCode],
				JD.[EstimateNumber],
				JD.[EstimateComponentNumber],
				JD.[JobComponent],
				JD.[FunctionDescription]
			FROM
				(SELECT	
					C.[ResourceType],
					C.[JobNumber],
					C.[JobComponentNumber],
					C.[FunctionType],
					C.[FunctionConsolidationCode],
					C.[FunctionConsolidation],
					C.[FunctionHeading],
					C.[FunctionCode],
					C.[FunctionDescription],
					C.[ItemID],
					C.[ItemSequenceNumber],
					C.[ItemDate],
					C.[PostPeriodCode],
					C.[ItemCode],
					C.[ItemDescription],
					C.[ItemComment],
					C.[ItemExtra],
					C.[FeeTime],
					C.[Hours],
					C.[Quantity],
					C.[BillableLessResale],
					C.[BillableTotal],
					C.[ExtMarkupAmount],
					C.[NonResaleTaxAmount],
					C.[ResaleTaxAmount],
					C.[Total],
					C.[CostAmount],
					C.[NetAmount],
					C.[AccountsReceivablePostPeriodCode],
					C.[AccountsReceivableInvoiceNumber],
					C.[AccountsReceivableInvoiceType],
					C.[AdvanceBillFlagDetail],
					C.[IsNonBillable],
					C.[GlexActBill],
					C.[EstimateHours],
					C.[EstimateQuantity],
					C.[EstimateTotalAmount],
					C.[EstimateContTotalAmount],
					C.[EstimateNonResaleTaxAmount],
					C.[EstimateResaleTaxAmount],
					C.[EstimateMarkupAmount],
					C.[EstimateCostAmount],
					C.[IsEstimateNonBillable],
					C.[EstimateFeeTime],
					C.[EstimateNetAmount],
					C.[PurchaseOrderNumber],
					C.[OpenPurchaseOrderAmount],
					C.[OpenPurchaseOrderGrossAmount],
					C.[BilledAmount],
					C.[BilledWithResale],
					C.[BilledHours],
					C.[BilledQuantity],
					C.[FeeTimeAmount],
					C.[FeeTimeHours],
					C.[UnbilledAmount],
					C.[UnbilledAmountLessResale],
					C.[UnbilledHours],
					C.[UnbilledQuantity],
					C.[NonBillableAmount],
					C.[NonBillableHours],
					C.[NonBillableQuantity],
					C.[IsNewBusiness],
					C.[Agency],
					C.[BillingApprovalHours],
					C.[BillingApprovalCostAmount],
					C.[BillingApprovalExtNetAmount],
					C.[BillingApprovalTotalAmount],
					C.[JobProcessControl],
					C.[MarkupPercent],
					C.[ClientPO],
					C.[BillHold],
					C.[AdvanceBillFlag],
					C.[ClientCode],
					C.[ClientDescription],
					C.[DivisionCode],
					C.[DivisionDescription],
					C.[ProductCode],
					C.[ProductDescription],
					C.[AccountExecutiveCode],
					C.[AccountExecutive],
					C.[ClientReference],
					C.[JobDescription],
					C.[SalesClassCode],
					C.[ComponentDescription],
					C.[JobTypeCode],
					C.[EstimateNumber],
					C.[EstimateComponentNumber],
					C.[JobComponent]
				FROM 
					[dbo].[V_DRPT_JOB_DETAILS_ITEM_C] AS C INNER JOIN dbo.advtf_user_job_limits(@USER_CODE) JL ON C.JobNumber = JL.JOB_NUMBER
				WHERE
					1 = CASE WHEN @OPEN_JOB_ONLY = 1 AND (C.[JobProcessControl] = 'Closed' OR C.[JobProcessControl] = 'Archive') THEN 0 ELSE 1 END AND
					1 = CASE WHEN @EXCLUDE_NONBILL_HRS = 1 AND C.[IsNonBillable] = 1 THEN 0 ELSE 1 END AND
					(C.OfficeCode IN (SELECT * FROM dbo.udf_split_list(@OFFICE_LIST, ',')) OR @OFFICE_LIST IS NULL) AND
					(C.ClientCode IN (SELECT * FROM dbo.udf_split_list(@CLIENT_LIST, ',')) OR @CLIENT_LIST IS NULL) AND
					1 = CASE WHEN @DIVISION_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode) IN (SELECT * FROM dbo.udf_split_list(@DIVISION_LIST, ',')) THEN 1 ELSE 0 END AND
					1 = CASE WHEN @PRODUCT_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode + '|' + C.ProductCode) IN (SELECT * FROM dbo.udf_split_list(@PRODUCT_LIST, ',')) THEN 1 ELSE 0 END AND
					(C.JobNumber IN (SELECT * FROM dbo.udf_split_list(@JOB_LIST, ',')) OR @JOB_LIST IS NULL) AND
					(C.AccountExecutiveCode IN (SELECT * FROM dbo.udf_split_list(@ACCT_EXEC_LIST, ',')) OR @ACCT_EXEC_LIST IS NULL) AND
					(C.SalesClassCode IN (SELECT * FROM dbo.udf_split_list(@SALES_CLASS_LIST, ',')) OR @SALES_CLASS_LIST IS NULL)
					
				UNION ALL
				
				SELECT	
					C.[ResourceType],
					C.[JobNumber],
					C.[JobComponentNumber],
					C.[FunctionType],
					C.[FunctionConsolidationCode],
					C.[FunctionConsolidation],
					C.[FunctionHeading],
					C.[FunctionCode],
					C.[FunctionDescription],
					C.[ItemID],
					C.[ItemSequenceNumber],
					C.[ItemDate],
					C.[PostPeriodCode],
					C.[ItemCode],
					C.[ItemDescription],
					C.[ItemComment],
					C.[ItemExtra],
					C.[FeeTime],
					C.[Hours],
					C.[Quantity],
					C.[BillableLessResale],
					C.[BillableTotal],
					C.[ExtMarkupAmount],
					C.[NonResaleTaxAmount],
					C.[ResaleTaxAmount],
					C.[Total],
					C.[CostAmount],
					C.[NetAmount],
					C.[AccountsReceivablePostPeriodCode],
					C.[AccountsReceivableInvoiceNumber],
					C.[AccountsReceivableInvoiceType],
					C.[AdvanceBillFlagDetail],
					C.[IsNonBillable],
					C.[GlexActBill],
					C.[EstimateHours],
					C.[EstimateQuantity],
					C.[EstimateTotalAmount],
					C.[EstimateContTotalAmount],
					C.[EstimateNonResaleTaxAmount],
					C.[EstimateResaleTaxAmount],
					C.[EstimateMarkupAmount],
					C.[EstimateCostAmount],
					C.[IsEstimateNonBillable],
					C.[EstimateFeeTime],
					C.[EstimateNetAmount],
					C.[PurchaseOrderNumber],
					C.[OpenPurchaseOrderAmount],
					C.[OpenPurchaseOrderGrossAmount],
					C.[BilledAmount],
					C.[BilledWithResale],
					C.[BilledHours],
					C.[BilledQuantity],
					C.[FeeTimeAmount],
					C.[FeeTimeHours],
					C.[UnbilledAmount],
					C.[UnbilledAmountLessResale],
					C.[UnbilledHours],
					C.[UnbilledQuantity],
					C.[NonBillableAmount],
					C.[NonBillableHours],
					C.[NonBillableQuantity],
					C.[IsNewBusiness],
					C.[Agency],
					C.[BillingApprovalHours],
					C.[BillingApprovalCostAmount],
					C.[BillingApprovalExtNetAmount],
					C.[BillingApprovalTotalAmount],
					C.[JobProcessControl],
					C.[MarkupPercent],
					C.[ClientPO],
					C.[BillHold],
					C.[AdvanceBillFlag],
					C.[ClientCode],
					C.[ClientDescription],
					C.[DivisionCode],
					C.[DivisionDescription],
					C.[ProductCode],
					C.[ProductDescription],
					C.[AccountExecutiveCode],
					C.[AccountExecutive],
					C.[ClientReference],
					C.[JobDescription],
					C.[SalesClassCode],
					C.[ComponentDescription],
					C.[JobTypeCode],
					C.[EstimateNumber],
					C.[EstimateComponentNumber],
					C.[JobComponent]
				FROM 
					[dbo].[V_DRPT_JOB_DETAILS_ITEM_E] AS C INNER JOIN dbo.advtf_user_job_limits(@USER_CODE) JL ON C.JobNumber = JL.JOB_NUMBER
				WHERE
					1 = CASE WHEN @OPEN_JOB_ONLY = 1 AND (C.[JobProcessControl] = 'Closed' OR C.[JobProcessControl] = 'Archive') THEN 0 ELSE 1 END AND
					1 = CASE WHEN @EXCLUDE_NONBILL_HRS = 1 AND C.[IsNonBillable] = 1 THEN 0 ELSE 1 END AND
					(C.OfficeCode IN (SELECT * FROM dbo.udf_split_list(@OFFICE_LIST, ',')) OR @OFFICE_LIST IS NULL) AND
					(C.ClientCode IN (SELECT * FROM dbo.udf_split_list(@CLIENT_LIST, ',')) OR @CLIENT_LIST IS NULL) AND
					1 = CASE WHEN @DIVISION_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode) IN (SELECT * FROM dbo.udf_split_list(@DIVISION_LIST, ',')) THEN 1 ELSE 0 END AND
					1 = CASE WHEN @PRODUCT_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode + '|' + C.ProductCode) IN (SELECT * FROM dbo.udf_split_list(@PRODUCT_LIST, ',')) THEN 1 ELSE 0 END AND
					(C.JobNumber IN (SELECT * FROM dbo.udf_split_list(@JOB_LIST, ',')) OR @JOB_LIST IS NULL) AND
					(C.AccountExecutiveCode IN (SELECT * FROM dbo.udf_split_list(@ACCT_EXEC_LIST, ',')) OR @ACCT_EXEC_LIST IS NULL) AND
					(C.SalesClassCode IN (SELECT * FROM dbo.udf_split_list(@SALES_CLASS_LIST, ',')) OR @SALES_CLASS_LIST IS NULL)
					-- AND (C.[Hours] > 0)
					
				UNION ALL
				
				SELECT	
					C.[ResourceType],
					C.[JobNumber],
					C.[JobComponentNumber],
					C.[FunctionType],
					C.[FunctionConsolidationCode],
					C.[FunctionConsolidation],
					C.[FunctionHeading],
					C.[FunctionCode],
					C.[FunctionDescription],
					C.[ItemID],
					C.[ItemSequenceNumber],
					C.[ItemDate],
					C.[PostPeriodCode],
					C.[ItemCode],
					C.[ItemDescription],
					C.[ItemComment],
					C.[ItemExtra],
					C.[FeeTime],
					C.[Hours],
					C.[Quantity],
					C.[BillableLessResale],
					C.[BillableTotal],
					C.[ExtMarkupAmount],
					C.[NonResaleTaxAmount],
					C.[ResaleTaxAmount],
					C.[Total],
					C.[CostAmount],
					C.[NetAmount],
					C.[AccountsReceivablePostPeriodCode],
					C.[AccountsReceivableInvoiceNumber],
					C.[AccountsReceivableInvoiceType],
					C.[AdvanceBillFlagDetail],
					C.[IsNonBillable],
					C.[GlexActBill],
					C.[EstimateHours],
					C.[EstimateQuantity],
					C.[EstimateTotalAmount],
					C.[EstimateContTotalAmount],
					C.[EstimateNonResaleTaxAmount],
					C.[EstimateResaleTaxAmount],
					C.[EstimateMarkupAmount],
					C.[EstimateCostAmount],
					C.[IsEstimateNonBillable],
					C.[EstimateFeeTime],
					C.[EstimateNetAmount],
					C.[PurchaseOrderNumber],
					C.[OpenPurchaseOrderAmount],
					C.[OpenPurchaseOrderGrossAmount],
					C.[BilledAmount],
					C.[BilledWithResale],
					C.[BilledHours],
					C.[BilledQuantity],
					C.[FeeTimeAmount],
					C.[FeeTimeHours],
					C.[UnbilledAmount],
					C.[UnbilledAmountLessResale],
					C.[UnbilledHours],
					C.[UnbilledQuantity],
					C.[NonBillableAmount],
					C.[NonBillableHours],
					C.[NonBillableQuantity],
					C.[IsNewBusiness],
					C.[Agency],
					C.[BillingApprovalHours],
					C.[BillingApprovalCostAmount],
					C.[BillingApprovalExtNetAmount],
					C.[BillingApprovalTotalAmount],
					C.[JobProcessControl],
					C.[MarkupPercent],
					C.[ClientPO],
					C.[BillHold],
					C.[AdvanceBillFlag],
					C.[ClientCode],
					C.[ClientDescription],
					C.[DivisionCode],
					C.[DivisionDescription],
					C.[ProductCode],
					C.[ProductDescription],
					C.[AccountExecutiveCode],
					C.[AccountExecutive],
					C.[ClientReference],
					C.[JobDescription],
					C.[SalesClassCode],
					C.[ComponentDescription],
					C.[JobTypeCode],
					C.[EstimateNumber],
					C.[EstimateComponentNumber],
					C.[JobComponent]
				FROM 
					[dbo].[V_DRPT_JOB_DETAILS_ITEM_V] AS C INNER JOIN dbo.advtf_user_job_limits(@USER_CODE) JL ON C.JobNumber = JL.JOB_NUMBER
				WHERE
					1 = CASE WHEN @OPEN_JOB_ONLY = 1 AND (C.[JobProcessControl] = 'Closed' OR C.[JobProcessControl] = 'Archive') THEN 0 ELSE 1 END AND
					1 = CASE WHEN @EXCLUDE_NONBILL_HRS = 1 AND C.[IsNonBillable] = 1 THEN 0 ELSE 1 END AND
					(C.OfficeCode IN (SELECT * FROM dbo.udf_split_list(@OFFICE_LIST, ',')) OR @OFFICE_LIST IS NULL) AND
					(C.ClientCode IN (SELECT * FROM dbo.udf_split_list(@CLIENT_LIST, ',')) OR @CLIENT_LIST IS NULL) AND
					1 = CASE WHEN @DIVISION_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode) IN (SELECT * FROM dbo.udf_split_list(@DIVISION_LIST, ',')) THEN 1 ELSE 0 END AND
					1 = CASE WHEN @PRODUCT_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode + '|' + C.ProductCode) IN (SELECT * FROM dbo.udf_split_list(@PRODUCT_LIST, ',')) THEN 1 ELSE 0 END AND
					(C.JobNumber IN (SELECT * FROM dbo.udf_split_list(@JOB_LIST, ',')) OR @JOB_LIST IS NULL) AND
					(C.AccountExecutiveCode IN (SELECT * FROM dbo.udf_split_list(@ACCT_EXEC_LIST, ',')) OR @ACCT_EXEC_LIST IS NULL) AND
					(C.SalesClassCode IN (SELECT * FROM dbo.udf_split_list(@SALES_CLASS_LIST, ',')) OR @SALES_CLASS_LIST IS NULL)
					
				UNION ALL
								
				SELECT	
					C.[ResourceType],
					C.[JobNumber],
					C.[JobComponentNumber],
					C.[FunctionType],
					C.[FunctionConsolidationCode],
					C.[FunctionConsolidation],
					C.[FunctionHeading],
					C.[FunctionCode],
					C.[FunctionDescription],
					C.[ItemID],
					C.[ItemSequenceNumber],
					C.[ItemDate],
					C.[PostPeriodCode],
					C.[ItemCode],
					C.[ItemDescription],
					C.[ItemComment],
					C.[ItemExtra],
					C.[FeeTime],
					C.[Hours],
					C.[Quantity],
					C.[BillableLessResale],
					C.[BillableTotal],
					C.[ExtMarkupAmount],
					C.[NonResaleTaxAmount],
					C.[ResaleTaxAmount],
					C.[Total],
					C.[CostAmount],
					C.[NetAmount],
					C.[AccountsReceivablePostPeriodCode],
					C.[AccountsReceivableInvoiceNumber],
					C.[AccountsReceivableInvoiceType],
					C.[AdvanceBillFlagDetail],
					C.[IsNonBillable],
					C.[GlexActBill],
					C.[EstimateHours],
					C.[EstimateQuantity],
					C.[EstimateTotalAmount],
					C.[EstimateContTotalAmount],
					C.[EstimateNonResaleTaxAmount],
					C.[EstimateResaleTaxAmount],
					C.[EstimateMarkupAmount],
					C.[EstimateCostAmount],
					C.[IsEstimateNonBillable],
					C.[EstimateFeeTime],
					C.[EstimateNetAmount],
					C.[PurchaseOrderNumber],
					C.[OpenPurchaseOrderAmount],
					C.[OpenPurchaseOrderGrossAmount],
					C.[BilledAmount],
					C.[BilledWithResale],
					C.[BilledHours],
					C.[BilledQuantity],
					C.[FeeTimeAmount],
					C.[FeeTimeHours],
					C.[UnbilledAmount],
					C.[UnbilledAmountLessResale],
					C.[UnbilledHours],
					C.[UnbilledQuantity],
					C.[NonBillableAmount],
					C.[NonBillableHours],
					C.[NonBillableQuantity],
					C.[IsNewBusiness],
					C.[Agency],
					C.[BillingApprovalHours],
					C.[BillingApprovalCostAmount],
					C.[BillingApprovalExtNetAmount],
					C.[BillingApprovalTotalAmount],
					C.[JobProcessControl],
					C.[MarkupPercent],
					C.[ClientPO],
					C.[BillHold],
					C.[AdvanceBillFlag],
					C.[ClientCode],
					C.[ClientDescription],
					C.[DivisionCode],
					C.[DivisionDescription],
					C.[ProductCode],
					C.[ProductDescription],
					C.[AccountExecutiveCode],
					C.[AccountExecutive],
					C.[ClientReference],
					C.[JobDescription],
					C.[SalesClassCode],
					C.[ComponentDescription],
					C.[JobTypeCode],
					C.[EstimateNumber],
					C.[EstimateComponentNumber],
					C.[JobComponent]
				FROM 
					[dbo].[V_DRPT_JOB_DETAILS_ITEM_I] AS C INNER JOIN dbo.advtf_user_job_limits(@USER_CODE) JL ON C.JobNumber = JL.JOB_NUMBER
				WHERE
					1 = CASE WHEN @OPEN_JOB_ONLY = 1 AND (C.[JobProcessControl] = 'Closed' OR C.[JobProcessControl] = 'Archive') THEN 0 ELSE 1 END AND
					1 = CASE WHEN @EXCLUDE_NONBILL_HRS = 1 AND C.[IsNonBillable] = 1 THEN 0 ELSE 1 END AND
					(C.OfficeCode IN (SELECT * FROM dbo.udf_split_list(@OFFICE_LIST, ',')) OR @OFFICE_LIST IS NULL) AND
					(C.ClientCode IN (SELECT * FROM dbo.udf_split_list(@CLIENT_LIST, ',')) OR @CLIENT_LIST IS NULL) AND
					1 = CASE WHEN @DIVISION_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode) IN (SELECT * FROM dbo.udf_split_list(@DIVISION_LIST, ',')) THEN 1 ELSE 0 END AND
					1 = CASE WHEN @PRODUCT_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode + '|' + C.ProductCode) IN (SELECT * FROM dbo.udf_split_list(@PRODUCT_LIST, ',')) THEN 1 ELSE 0 END AND
					(C.JobNumber IN (SELECT * FROM dbo.udf_split_list(@JOB_LIST, ',')) OR @JOB_LIST IS NULL) AND
					(C.AccountExecutiveCode IN (SELECT * FROM dbo.udf_split_list(@ACCT_EXEC_LIST, ',')) OR @ACCT_EXEC_LIST IS NULL) AND
					(C.SalesClassCode IN (SELECT * FROM dbo.udf_split_list(@SALES_CLASS_LIST, ',')) OR @SALES_CLASS_LIST IS NULL)
					
				UNION ALL
												
				SELECT	
					C.[ResourceType],
					C.[JobNumber],
					C.[JobComponentNumber],
					C.[FunctionType],
					C.[FunctionConsolidationCode],
					C.[FunctionConsolidation],
					C.[FunctionHeading],
					C.[FunctionCode],
					C.[FunctionDescription],
					C.[ItemID],
					C.[ItemSequenceNumber],
					C.[ItemDate],
					C.[PostPeriodCode],
					C.[ItemCode],
					C.[ItemDescription],
					C.[ItemComment],
					C.[ItemExtra],
					C.[FeeTime],
					C.[Hours],
					C.[Quantity],
					C.[BillableLessResale],
					C.[BillableTotal],
					C.[ExtMarkupAmount],
					C.[NonResaleTaxAmount],
					C.[ResaleTaxAmount],
					C.[Total],
					C.[CostAmount],
					C.[NetAmount],
					C.[AccountsReceivablePostPeriodCode],
					C.[AccountsReceivableInvoiceNumber],
					C.[AccountsReceivableInvoiceType],
					C.[AdvanceBillFlagDetail],
					C.[IsNonBillable],
					C.[GlexActBill],
					C.[EstimateHours],
					C.[EstimateQuantity],
					C.[EstimateTotalAmount],
					C.[EstimateContTotalAmount],
					C.[EstimateNonResaleTaxAmount],
					C.[EstimateResaleTaxAmount],
					C.[EstimateMarkupAmount],
					C.[EstimateCostAmount],
					C.[IsEstimateNonBillable],
					C.[EstimateFeeTime],
					C.[EstimateNetAmount],
					C.[PurchaseOrderNumber],
					C.[OpenPurchaseOrderAmount],
					C.[OpenPurchaseOrderGrossAmount],
					C.[BilledAmount],
					C.[BilledWithResale],
					C.[BilledHours],
					C.[BilledQuantity],
					C.[FeeTimeAmount],
					C.[FeeTimeHours],
					C.[UnbilledAmount],
					C.[UnbilledAmountLessResale],
					C.[UnbilledHours],
					C.[UnbilledQuantity],
					C.[NonBillableAmount],
					C.[NonBillableHours],
					C.[NonBillableQuantity],
					C.[IsNewBusiness],
					C.[Agency],
					C.[BillingApprovalHours],
					C.[BillingApprovalCostAmount],
					C.[BillingApprovalExtNetAmount],
					C.[BillingApprovalTotalAmount],
					C.[JobProcessControl],
					C.[MarkupPercent],
					C.[ClientPO],
					C.[BillHold],
					C.[AdvanceBillFlag],
					C.[ClientCode],
					C.[ClientDescription],
					C.[DivisionCode],
					C.[DivisionDescription],
					C.[ProductCode],
					C.[ProductDescription],
					C.[AccountExecutiveCode],
					C.[AccountExecutive],
					C.[ClientReference],
					C.[JobDescription],
					C.[SalesClassCode],
					C.[ComponentDescription],
					C.[JobTypeCode],
					C.[EstimateNumber],
					C.[EstimateComponentNumber],
					C.[JobComponent]
				FROM 
					[dbo].[V_DRPT_JOB_DETAILS_ITEM_AB] AS C INNER JOIN dbo.advtf_user_job_limits(@USER_CODE) JL ON C.JobNumber = JL.JOB_NUMBER
				WHERE
					1 = CASE WHEN @OPEN_JOB_ONLY = 1 AND (C.[JobProcessControl] = 'Closed' OR C.[JobProcessControl] = 'Archive') THEN 0 ELSE 1 END AND
					1 = CASE WHEN @EXCLUDE_NONBILL_HRS = 1 AND C.[IsNonBillable] = 1 THEN 0 ELSE 1 END AND
					(C.OfficeCode IN (SELECT * FROM dbo.udf_split_list(@OFFICE_LIST, ',')) OR @OFFICE_LIST IS NULL) AND
					(C.ClientCode IN (SELECT * FROM dbo.udf_split_list(@CLIENT_LIST, ',')) OR @CLIENT_LIST IS NULL) AND
					1 = CASE WHEN @DIVISION_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode) IN (SELECT * FROM dbo.udf_split_list(@DIVISION_LIST, ',')) THEN 1 ELSE 0 END AND
					1 = CASE WHEN @PRODUCT_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode + '|' + C.ProductCode) IN (SELECT * FROM dbo.udf_split_list(@PRODUCT_LIST, ',')) THEN 1 ELSE 0 END AND
					(C.JobNumber IN (SELECT * FROM dbo.udf_split_list(@JOB_LIST, ',')) OR @JOB_LIST IS NULL) AND
					(C.AccountExecutiveCode IN (SELECT * FROM dbo.udf_split_list(@ACCT_EXEC_LIST, ',')) OR @ACCT_EXEC_LIST IS NULL) AND
					(C.SalesClassCode IN (SELECT * FROM dbo.udf_split_list(@SALES_CLASS_LIST, ',')) OR @SALES_CLASS_LIST IS NULL)
					
				UNION ALL
												
				SELECT	
					C.[ResourceType],
					C.[JobNumber],
					C.[JobComponentNumber],
					C.[FunctionType],
					C.[FunctionConsolidationCode],
					C.[FunctionConsolidation],
					C.[FunctionHeading],
					C.[FunctionCode],
					C.[FunctionDescription],
					C.[ItemID],
					C.[ItemSequenceNumber],
					C.[DueDate] AS [ItemDate],
					C.[PostPeriodCode],
					C.[ItemCode],
					C.[ItemDescription],
					C.[ItemComment],
					C.[ItemExtra],
					C.[FeeTime],
					C.[Hours],
					C.[Quantity],
					C.[BillableLessResale],
					C.[BillableTotal],
					C.[ExtMarkupAmount],
					C.[NonResaleTaxAmount],
					C.[ResaleTaxAmount],
					C.[Total],
					C.[CostAmount],
					C.[NetAmount],
					C.[AccountsReceivablePostPeriodCode],
					C.[AccountsReceivableInvoiceNumber],
					C.[AccountsReceivableInvoiceType],
					C.[AdvanceBillFlagDetail],
					C.[IsNonBillable],
					C.[GlexActBill],
					C.[EstimateHours],
					C.[EstimateQuantity],
					C.[EstimateTotalAmount],
					C.[EstimateContTotalAmount],
					C.[EstimateNonResaleTaxAmount],
					C.[EstimateResaleTaxAmount],
					C.[EstimateMarkupAmount],
					C.[EstimateCostAmount],
					C.[IsEstimateNonBillable],
					C.[EstimateFeeTime],
					C.[EstimateNetAmount],
					C.[PurchaseOrderNumber],
					C.[OpenPurchaseOrderAmount],
					C.[OpenPurchaseOrderGrossAmount],
					C.[BilledAmount],
					C.[BilledWithResale],
					C.[BilledHours],
					C.[BilledQuantity],
					C.[FeeTimeAmount],
					C.[FeeTimeHours],
					C.[UnbilledAmount],
					C.[UnbilledAmountLessResale],
					C.[UnbilledHours],
					C.[UnbilledQuantity],
					C.[NonBillableAmount],
					C.[NonBillableHours],
					C.[NonBillableQuantity],
					C.[IsNewBusiness],
					C.[Agency],
					C.[BillingApprovalHours],
					C.[BillingApprovalCostAmount],
					C.[BillingApprovalExtNetAmount],
					C.[BillingApprovalTotalAmount],
					C.[JobProcessControl],
					C.[MarkupPercent],
					C.[ClientPO],
					C.[BillHold],
					C.[AdvanceBillFlag],
					C.[ClientCode],
					C.[ClientDescription],
					C.[DivisionCode],
					C.[DivisionDescription],
					C.[ProductCode],
					C.[ProductDescription],
					C.[AccountExecutiveCode],
					C.[AccountExecutive],
					C.[ClientReference],
					C.[JobDescription],
					C.[SalesClassCode],
					C.[ComponentDescription],
					C.[JobTypeCode],
					C.[EstimateNumber],
					C.[EstimateComponentNumber],
					C.[JobComponent]
				FROM 
					[dbo].[V_DRPT_JOB_DETAILS_ITEM_ES] AS C INNER JOIN dbo.advtf_user_job_limits(@USER_CODE) JL ON C.JobNumber = JL.JOB_NUMBER
				WHERE
					1 = CASE WHEN @OPEN_JOB_ONLY = 1 AND (C.[JobProcessControl] = 'Closed' OR C.[JobProcessControl] = 'Archive') THEN 0 ELSE 1 END AND
					1 = CASE WHEN @EXCLUDE_NONBILL_HRS = 1 AND C.[IsNonBillable] = 1 THEN 0 ELSE 1 END AND
					(C.OfficeCode IN (SELECT * FROM dbo.udf_split_list(@OFFICE_LIST, ',')) OR @OFFICE_LIST IS NULL) AND
					(C.ClientCode IN (SELECT * FROM dbo.udf_split_list(@CLIENT_LIST, ',')) OR @CLIENT_LIST IS NULL) AND
					1 = CASE WHEN @DIVISION_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode) IN (SELECT * FROM dbo.udf_split_list(@DIVISION_LIST, ',')) THEN 1 ELSE 0 END AND
					1 = CASE WHEN @PRODUCT_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode + '|' + C.ProductCode) IN (SELECT * FROM dbo.udf_split_list(@PRODUCT_LIST, ',')) THEN 1 ELSE 0 END AND
					(C.JobNumber IN (SELECT * FROM dbo.udf_split_list(@JOB_LIST, ',')) OR @JOB_LIST IS NULL) AND
					(C.AccountExecutiveCode IN (SELECT * FROM dbo.udf_split_list(@ACCT_EXEC_LIST, ',')) OR @ACCT_EXEC_LIST IS NULL) AND
					(C.SalesClassCode IN (SELECT * FROM dbo.udf_split_list(@SALES_CLASS_LIST, ',')) OR @SALES_CLASS_LIST IS NULL)
					
				UNION ALL
												
				SELECT	
					C.[ResourceType],
					C.[JobNumber],
					C.[JobComponentNumber],
					C.[FunctionType],
					C.[FunctionConsolidationCode],
					C.[FunctionConsolidation],
					C.[FunctionHeading],
					C.[FunctionCode],
					C.[FunctionDescription],
					C.[ItemID],
					C.[ItemSequenceNumber],
					C.[ItemDate],
					C.[PostPeriodCode],
					C.[ItemCode],
					C.[ItemDescription],
					C.[ItemComment],
					C.[ItemExtra],
					C.[FeeTime],
					C.[Hours],
					C.[Quantity],
					C.[BillableLessResale],
					C.[BillableTotal],
					C.[ExtMarkupAmount],
					C.[NonResaleTaxAmount],
					C.[ResaleTaxAmount],
					C.[Total],
					C.[CostAmount],
					C.[NetAmount],
					C.[AccountsReceivablePostPeriodCode],
					C.[AccountsReceivableInvoiceNumber],
					C.[AccountsReceivableInvoiceType],
					C.[AdvanceBillFlagDetail],
					C.[IsNonBillable],
					C.[GlexActBill],
					C.[EstimateHours],
					C.[EstimateQuantity],
					C.[EstimateTotalAmount],
					C.[EstimateContTotalAmount],
					C.[EstimateNonResaleTaxAmount],
					C.[EstimateResaleTaxAmount],
					C.[EstimateMarkupAmount],
					C.[EstimateCostAmount],
					C.[IsEstimateNonBillable],
					C.[EstimateFeeTime],
					C.[EstimateNetAmount],
					C.[PurchaseOrderNumber],
					C.[OpenPurchaseOrderAmount],
					C.[OpenPurchaseOrderGrossAmount],
					C.[BilledAmount],
					C.[BilledWithResale],
					C.[BilledHours],
					C.[BilledQuantity],
					C.[FeeTimeAmount],
					C.[FeeTimeHours],
					C.[UnbilledAmount],
					C.[UnbilledAmountLessResale],
					C.[UnbilledHours],
					C.[UnbilledQuantity],
					C.[NonBillableAmount],
					C.[NonBillableHours],
					C.[NonBillableQuantity],
					C.[IsNewBusiness],
					C.[Agency],
					C.[BillingApprovalHours],
					C.[BillingApprovalCostAmount],
					C.[BillingApprovalExtNetAmount],
					C.[BillingApprovalTotalAmount],
					C.[JobProcessControl],
					C.[MarkupPercent],
					C.[ClientPO],
					C.[BillHold],
					C.[AdvanceBillFlag],
					C.[ClientCode],
					C.[ClientDescription],
					C.[DivisionCode],
					C.[DivisionDescription],
					C.[ProductCode],
					C.[ProductDescription],
					C.[AccountExecutiveCode],
					C.[AccountExecutive],
					C.[ClientReference],
					C.[JobDescription],
					C.[SalesClassCode],
					C.[ComponentDescription],
					C.[JobTypeCode],
					C.[EstimateNumber],
					C.[EstimateComponentNumber],
					C.[JobComponent]
				FROM 
					[dbo].[V_DRPT_JOB_DETAILS_ITEM_EI] AS C INNER JOIN dbo.advtf_user_job_limits(@USER_CODE) JL ON C.JobNumber = JL.JOB_NUMBER
				WHERE
					1 = CASE WHEN @OPEN_JOB_ONLY = 1 AND (C.[JobProcessControl] = 'Closed' OR C.[JobProcessControl] = 'Archive') THEN 0 ELSE 1 END AND
					1 = CASE WHEN @EXCLUDE_NONBILL_HRS = 1 AND C.[IsNonBillable] = 1 THEN 0 ELSE 1 END AND
					(C.OfficeCode IN (SELECT * FROM dbo.udf_split_list(@OFFICE_LIST, ',')) OR @OFFICE_LIST IS NULL) AND
					(C.ClientCode IN (SELECT * FROM dbo.udf_split_list(@CLIENT_LIST, ',')) OR @CLIENT_LIST IS NULL) AND
					1 = CASE WHEN @DIVISION_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode) IN (SELECT * FROM dbo.udf_split_list(@DIVISION_LIST, ',')) THEN 1 ELSE 0 END AND
					1 = CASE WHEN @PRODUCT_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode + '|' + C.ProductCode) IN (SELECT * FROM dbo.udf_split_list(@PRODUCT_LIST, ',')) THEN 1 ELSE 0 END AND
					(C.JobNumber IN (SELECT * FROM dbo.udf_split_list(@JOB_LIST, ',')) OR @JOB_LIST IS NULL) AND
					(C.AccountExecutiveCode IN (SELECT * FROM dbo.udf_split_list(@ACCT_EXEC_LIST, ',')) OR @ACCT_EXEC_LIST IS NULL) AND
					(C.SalesClassCode IN (SELECT * FROM dbo.udf_split_list(@SALES_CLASS_LIST, ',')) OR @SALES_CLASS_LIST IS NULL)
					
				UNION ALL
																
				SELECT	
					C.[ResourceType],
					C.[JobNumber],
					C.[JobComponentNumber],
					C.[FunctionType],
					C.[FunctionConsolidationCode],
					C.[FunctionConsolidation],
					C.[FunctionHeading],
					C.[FunctionCode],
					C.[FunctionDescription],
					C.[ItemID],
					C.[ItemSequenceNumber],
					C.[ItemDate],
					C.[PostPeriodCode],
					C.[ItemCode],
					C.[ItemDescription],
					C.[ItemComment],
					C.[ItemExtra],
					C.[FeeTime],
					C.[Hours],
					C.[Quantity],
					C.[BillableLessResale],
					C.[BillableTotal],
					C.[ExtMarkupAmount],
					C.[NonResaleTaxAmount],
					C.[ResaleTaxAmount],
					C.[Total],
					C.[CostAmount],
					C.[NetAmount],
					C.[AccountsReceivablePostPeriodCode],
					C.[AccountsReceivableInvoiceNumber],
					C.[AccountsReceivableInvoiceType],
					C.[AdvanceBillFlagDetail],
					C.[IsNonBillable],
					C.[GlexActBill],
					C.[EstimateHours],
					C.[EstimateQuantity],
					C.[EstimateTotalAmount],
					C.[EstimateContTotalAmount],
					C.[EstimateNonResaleTaxAmount],
					C.[EstimateResaleTaxAmount],
					C.[EstimateMarkupAmount],
					C.[EstimateCostAmount],
					C.[IsEstimateNonBillable],
					C.[EstimateFeeTime],
					C.[EstimateNetAmount],
					C.[PurchaseOrderNumber],
					C.[OpenPurchaseOrderAmount],
					C.[OpenPurchaseOrderGrossAmount],
					C.[BilledAmount],
					C.[BilledWithResale],
					C.[BilledHours],
					C.[BilledQuantity],
					C.[FeeTimeAmount],
					C.[FeeTimeHours],
					C.[UnbilledAmount],
					C.[UnbilledAmountLessResale],
					C.[UnbilledHours],
					C.[UnbilledQuantity],
					C.[NonBillableAmount],
					C.[NonBillableHours],
					C.[NonBillableQuantity],
					C.[IsNewBusiness],
					C.[Agency],
					C.[BillingApprovalHours],
					C.[BillingApprovalCostAmount],
					C.[BillingApprovalExtNetAmount],
					C.[BillingApprovalTotalAmount],
					C.[JobProcessControl],
					C.[MarkupPercent],
					C.[ClientPO],
					C.[BillHold],
					C.[AdvanceBillFlag],
					C.[ClientCode],
					C.[ClientDescription],
					C.[DivisionCode],
					C.[DivisionDescription],
					C.[ProductCode],
					C.[ProductDescription],
					C.[AccountExecutiveCode],
					C.[AccountExecutive],
					C.[ClientReference],
					C.[JobDescription],
					C.[SalesClassCode],
					C.[ComponentDescription],
					C.[JobTypeCode],
					C.[EstimateNumber],
					C.[EstimateComponentNumber],
					C.[JobComponent]
				FROM 
					[dbo].[V_DRPT_JOB_DETAILS_ITEM_PO] AS C INNER JOIN dbo.advtf_user_job_limits(@USER_CODE) JL ON C.JobNumber = JL.JOB_NUMBER
				WHERE
					1 = CASE WHEN @OPEN_JOB_ONLY = 1 AND (C.[JobProcessControl] = 'Closed' OR C.[JobProcessControl] = 'Archive') THEN 0 ELSE 1 END AND
					1 = CASE WHEN @EXCLUDE_NONBILL_HRS = 1 AND C.[IsNonBillable] = 1 THEN 0 ELSE 1 END AND
					(C.OfficeCode IN (SELECT * FROM dbo.udf_split_list(@OFFICE_LIST, ',')) OR @OFFICE_LIST IS NULL) AND
					(C.ClientCode IN (SELECT * FROM dbo.udf_split_list(@CLIENT_LIST, ',')) OR @CLIENT_LIST IS NULL) AND
					1 = CASE WHEN @DIVISION_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode) IN (SELECT * FROM dbo.udf_split_list(@DIVISION_LIST, ',')) THEN 1 ELSE 0 END AND
					1 = CASE WHEN @PRODUCT_LIST IS NULL THEN 1 WHEN (C.ClientCode + '|' + C.DivisionCode + '|' + C.ProductCode) IN (SELECT * FROM dbo.udf_split_list(@PRODUCT_LIST, ',')) THEN 1 ELSE 0 END AND
					(C.JobNumber IN (SELECT * FROM dbo.udf_split_list(@JOB_LIST, ',')) OR @JOB_LIST IS NULL) AND
					(C.AccountExecutiveCode IN (SELECT * FROM dbo.udf_split_list(@ACCT_EXEC_LIST, ',')) OR @ACCT_EXEC_LIST IS NULL) AND
					(C.SalesClassCode IN (SELECT * FROM dbo.udf_split_list(@SALES_CLASS_LIST, ',')) OR @SALES_CLASS_LIST IS NULL)) AS JD) AS JDA
		GROUP BY 
			JDA.JOB_NUMBER, 
			JDA.JOB_COMPONENT_NBR, 
			JDA.[ORDER], 
			JDA.FNC_TYPE, 
			JDA.FNC_CODE, 
			JDA.ITEM_DESC,
			JDA.[DATE], 
			JDA.ITEM_CODE,
			--JDA.BILL_PERIOD, 
			JDA.NONAP_DATE, 
			JDA.NB_FLAG,
			JDA.[JobProcessControl],
			JDA.[MarkupPercent],
			JDA.[ClientPO],
			JDA.[BillHold],
			JDA.[AdvanceBillFlag],
			JDA.[ClientCode],
			JDA.[ClientDescription],
			JDA.[DivisionCode],
			JDA.[DivisionDescription],
			JDA.[ProductCode],
			JDA.[ProductDescription],
			JDA.[AccountExecutiveCode],
			JDA.[AccountExecutive],
			JDA.[ClientReference],
			JDA.[JobDescription],
			JDA.[SalesClassCode],
			JDA.[ComponentDescription],
			JDA.[JobTypeCode],
			JDA.[EstimateNumber],
			JDA.[EstimateComponentNumber],
			JDA.[JobComponent],
			JDA.[FunctionDescription],
			JDA.[GL_XACT_BILL]	) AS SJDA INNER JOIN
		(SELECT 
			JC.JOB_NUMBER, 
			JC.JOB_COMPONENT_NBR,
			JC.JOB_BILL_HOLD,
			JC.AB_FLAG,
			JC.JOB_PROCESS_CONTRL 
		 FROM [dbo].[JOB_COMPONENT] JC) AS JC ON JC.JOB_NUMBER = SJDA.JOB_NUMBER AND
																	 JC.JOB_COMPONENT_NBR = SJDA.JOB_COMPONENT_NBR

	--SELECT @StartDate, @EndDate																		
	--SELECT * FROM #jobDetail --WHERE JobNumber = 253

CREATE TABLE #jobDetailtotal( 	
    RowID int IDENTITY(1, 1),	
	ClientCode			varchar(6) NULL,
	ClientDescription	varchar(40) NULL,
	DivisionCode		varchar(6) NULL,
	DivisionDescription	varchar(40) NULL,
	ProductCode			varchar(6) NULL,
	ProductDescription 	varchar(40) NULL,
	JobNumber			int,
	JobDescription		varchar(60) NULL,
	JobComponentNumber	smallint,
	ComponentDescription		varchar(60) NULL,
	FunctionType         varchar(3) NULL,
	[SumOfEstimateHours]  		decimal(15,2),
	[SumOfEstimate] 		decimal(15,2),
	[SumOfEstimateCont] 		decimal(15,2),
	[SumOfEstimateNetCost]  		decimal(15,2),
	[SumOfEstimateNetAmount]  		decimal(15,2),
	[SumOfEstimateExtMarkup]  		decimal(15,2),
	[SumOfEstimateVenTax]  		decimal(15,2),
	[SumOfEstimateResaleTax]    decimal(15,2),
	[CurrentMonthSumOfEstimateHours]  		decimal(15,2),
	[CurrentMonthSumOfEstimate] 		decimal(15,2),
	[CurrentMonthSumOfEstimateCont] 		decimal(15,2),
	[CurrentMonthSumOfEstimateNetCost]  		decimal(15,2),
	[CurrentMonthSumOfEstimateNetAmount]  		decimal(15,2),
	[CurrentMonthSumOfEstimateExtMarkup]  		decimal(15,2),
	[CurrentMonthSumOfEstimateVenTax]  		decimal(15,2),
	[CurrentMonthSumOfEstimateResaleTax] decimal(15,2),
	[CurrentMonthSumOfIncomeOnly]  		decimal(15,2),
	[CurrentMonthSumOfBillEmpHours] 		decimal(15,2),
	[CurrentMonthSumOfTotalBill] 		decimal(15,2),
	[CurrentMonthSumOfAPQuantity]  		decimal(15,2),
	[CurrentMonthSumOfAPNetCost] 		decimal(15,2),
	[CurrentMonthSumOfExtMarkupAmount] 		decimal(15,2),
	[CurrentMonthSumOfVenTax]  		decimal(15,2),
	[CurrentMonthSumOfResaleTax] 		decimal(15,2),
	[CurrentMonthSumOfResaleBilled]  		decimal(15,2),
	[CurrentMonthSumOfOpenPOAmount]  		decimal(15,2),
	[CurrentMonthSumOfLineTotal]  		decimal(15,2),
	[CurrentMonthSumOfNonBillableEmpHours] 		decimal(15,2),
	[CurrentMonthSumOfNonBillableAmount]  		decimal(15,2),
	[CurrentMonthSumOfBilledAmount] 		decimal(15,2),
	[CurrentMonthSumOfAdvanceBilled] 		decimal(15,2),
	[CurrentMonthSumOfAdvanceTotal] 		decimal(15,2),
	[CurrentMonthSumOfAdvanceResale] 		decimal(15,2),
	[CurrentMonthSumOfAdvanceResaleBilled] 		decimal(15,2),
	[CurrentMonthSumOfAdvanceFinalBilled] 		decimal(15,2),
	[CurrentMonthSumOfBilledCost]  		decimal(15,2),
	[CurrentMonthSumOfUnbilled]  		decimal(15,2),
	[CurrentMonthZeroMU]  		decimal(15,2),
	[PriorMonthsSumOfEstimateHours] 		decimal(15,2),
	[PriorMonthsSumOfEstimate] 		decimal(15,2),
	[PriorMonthsSumOfEstimateCont] 		decimal(15,2),
	[PriorMonthsSumOfEstimateNetCost]  		decimal(15,2),
	[PriorMonthsSumOfEstimateNetAmount]  		decimal(15,2),
	[PriorMonthsSumOfEstimateExtMarkup]  		decimal(15,2),
	[PriorMonthsSumOfEstimateVenTax]  		decimal(15,2),
	[PriorMonthsSumOfEstimateResaleTax]  		decimal(15,2),
	[PriorMonthsSumOfIncomeOnly]  		decimal(15,2),
	[PriorMonthsSumOfBillEmpHours]  		decimal(15,2),
	[PriorMonthsSumOfTotalBill]  		decimal(15,2),
	[PriorMonthsSumOfAPQuantity] 		decimal(15,2),
	[PriorMonthsSumOfAPNetCost]  		decimal(15,2),
	[PriorMonthsSumOfExtMarkupAmount]  		decimal(15,2),
	[PriorMonthsSumOfVenTax]  		decimal(15,2),
	[PriorMonthsSumOfResaleTax]  		decimal(15,2),
	[PriorMonthsSumOfResaleBilled]  		decimal(15,2),
	[PriorMonthsSumOfOpenPOAmount] 		decimal(15,2),
	[PriorMonthsSumOfLineTotal] 		decimal(15,2),
	[PriorMonthsSumOfNonBillableEmpHours] 		decimal(15,2),
	[PriorMonthsSumOfNonBillableAmount]  		decimal(15,2),
	[PriorMonthsSumOfBilledAmount]  		decimal(15,2),
	[PriorMonthsSumOfAdvanceBilled]  		decimal(15,2),
	[PriorMonthsSumOfAdvanceTotal]  		decimal(15,2),
	[PriorMonthsSumOfAdvanceResale]  		decimal(15,2),
	[PriorMonthsSumOfAdvanceResaleBilled] 		decimal(15,2),
	[PriorMonthsSumOfAdvanceFinalBilled]  		decimal(15,2),
	[PriorMonthsSumOfBilledCost]  		decimal(15,2),
	[PriorMonthsSumOfUnbilled] 		decimal(15,2),
	[PriorMonthsZeroMU]  		decimal(15,2)
	)

	INSERT INTO #jobDetailtotal
	SELECT		
		[ClientCode],[ClientDescription],[DivisionCode],[DivisionDescription],[ProductCode],[ProductDescription],[JobNumber],[JobDescription],[JobComponentNumber],[ComponentDescription],[FunctionType],0,0,0,0,0,0,0,0,
		[CurrentMonthSumOfEstimateHours] = SUM([SumOfEstimateHours]),
		[CurrentMonthSumOfEstimate] = SUM(SumOfEstimate),
		[CurrentMonthSumOfEstimateCont] = SUM(SumOfEstimateCont),
		[CurrentMonthSumOfEstimateNetCost] = SUM(SumOfEstimateNetCost),
		[CurrentMonthSumOfEstimateNetAmount] = SUM(SumOfEstimateNetAmount),
		[CurrentMonthSumOfEstimateExtMarkup] = SUM(SumOfEstimateExtMarkup),
		[CurrentMonthSumOfEstimateVenTax] = SUM(SumOfEstimateVenTax),
		[CurrentMonthSumOfEstimateResaleTax] = SUM(SumOfEstimateResaleTax),
		[CurrentMonthSumOfIncomeOnly] = SUM(SumOfIncomeOnly),
		[CurrentMonthSumOfBillEmpHours] = SUM(SumOfBillEmpHours),
		[CurrentMonthSumOfTotalBill] = SUM(SumOfTotalBill),
		[CurrentMonthSumOfAPQuantity] = SUM(SumOfAPQuantity),
		[CurrentMonthSumOfAPNetCost] = SUM(SumOfAPNetCost),
		[CurrentMonthSumOfExtMarkupAmount] = SUM(SumOfExtMarkupAmount),
		[CurrentMonthSumOfVenTax] = SUM(SumOfVenTax),
		[CurrentMonthSumOfResaleTax] = SUM(SumOfResaleTax),
		[CurrentMonthSumOfResaleBilled] = SUM(SumOfResaleBilled),
		[CurrentMonthSumOfOpenPOAmount] = SUM(SumOfOpenPOAmount),
		[CurrentMonthSumOfLineTotal] = SUM(SumOfLineTotal),
		[CurrentMonthSumOfNonBillableEmpHours] = SUM(SumOfNonBillableEmpHours),
		[CurrentMonthSumOfNonBillableAmount] = SUM(SumOfNonBillableAmount),
		0,
		[CurrentMonthSumOfAdvanceBilled] = SUM(SumOfAdvanceBilled),
		[CurrentMonthSumOfAdvanceTotal] = SUM(SumOfAdvanceTotal),
		[CurrentMonthSumOfAdvanceResale] = SUM(SumOfAdvanceResale),
		[CurrentMonthSumOfAdvanceResaleBilled] = SUM(SumOfAdvanceResaleBilled),
		[CurrentMonthSumOfAdvanceFinalBilled] = SUM(SumOfAdvanceFinalBilled),
		[CurrentMonthSumOfBilledCost] = SUM(SumOfBilledCost),
		[CurrentMonthSumOfUnbilled] = SUM(SumOfUnbilled),
		[CurrentMonthZeroMU] = SUM(ZeroMU),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	FROM #jobDetail
	WHERE (([ItemDate] >= @StartDate AND [ItemDate] <= @EndDate) OR [ItemDate] IS NULL) --AND (FunctionType = 'E' OR FunctionType = 'I')
	GROUP BY [ClientCode],
		[ClientDescription],
		[DivisionCode],
		[DivisionDescription],
		[ProductCode],
		[ProductDescription],
		[JobNumber],
		[JobDescription],
		[JobComponentNumber],
		[ComponentDescription],
		[FunctionType]

	UNION

	SELECT		
		[ClientCode],[ClientDescription],[DivisionCode],[DivisionDescription],[ProductCode],[ProductDescription],[JobNumber],[JobDescription],[JobComponentNumber],[ComponentDescription],[FunctionType],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		[CurrentMonthSumOfBilledAmount] = SUM(SumOfBilledAmount),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	FROM #jobDetail LEFT OUTER JOIN
		 GLENTHDR GL ON GL.GLEHXACT = #jobDetail.GlexActBill
	WHERE GLEHPP = @DATE_CUTOFF --AND (FunctionType = 'E' OR FunctionType = 'I')
	GROUP BY [ClientCode],
		[ClientDescription],
		[DivisionCode],
		[DivisionDescription],
		[ProductCode],
		[ProductDescription],
		[JobNumber],
		[JobDescription],
		[JobComponentNumber],
		[ComponentDescription],
		[FunctionType]

	UNION

	SELECT		
		[ClientCode],[ClientDescription],[DivisionCode],[DivisionDescription],[ProductCode],[ProductDescription],[JobNumber],[JobDescription],[JobComponentNumber],[ComponentDescription],[FunctionType],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		[PriorMonthsSumOfEstimateHours] = SUM([SumOfEstimateHours]),
		[PriorMonthsSumOfEstimate] = SUM(SumOfEstimate),
		[PriorMonthsSumOfEstimateCont] = SUM(SumOfEstimateCont),
		[PriorMonthsSumOfEstimateNetCost] = SUM(SumOfEstimateNetCost),
		[PriorMonthsSumOfEstimateNetAmount] = SUM(SumOfEstimateNetAmount),
		[PriorMonthsSumOfEstimateExtMarkup] = SUM(SumOfEstimateExtMarkup),
		[PriorMonthsSumOfEstimateVenTax] = SUM(SumOfEstimateVenTax),
		[PriorMonthsSumOfEstimateResaleTax] = SUM(SumOfEstimateResaleTax),
		[PriorMonthsSumOfIncomeOnly] = SUM(SumOfIncomeOnly),
		[PriorMonthsSumOfBillEmpHours] = SUM(SumOfBillEmpHours),
		[PriorMonthsSumOfTotalBill] = SUM(SumOfTotalBill),
		[PriorMonthsSumOfAPQuantity] = SUM(SumOfAPQuantity),
		[PriorMonthsSumOfAPNetCost] = SUM(SumOfAPNetCost),
		[PriorMonthsSumOfExtMarkupAmount] = SUM(SumOfExtMarkupAmount),
		[PriorMonthsSumOfVenTax] = SUM(SumOfVenTax),
		[PriorMonthsSumOfResaleTax] = SUM(SumOfResaleTax),
		[PriorMonthsSumOfResaleBilled] = SUM(SumOfResaleBilled),
		[PriorMonthsSumOfOpenPOAmount] = SUM(SumOfOpenPOAmount),
		[PriorMonthsSumOfLineTotal] = SUM(SumOfLineTotal),
		[PriorMonthsSumOfNonBillableEmpHours] = SUM(SumOfNonBillableEmpHours),
		[PriorMonthsSumOfNonBillableAmount] = SUM(SumOfNonBillableAmount),
		0,
		[PriorMonthsSumOfAdvanceBilled] = SUM(SumOfAdvanceBilled),
		[PriorMonthsSumOfAdvanceTotal] = SUM(SumOfAdvanceTotal),
		[PriorMonthsSumOfAdvanceResale] = SUM(SumOfAdvanceResale),
		[PriorMonthsSumOfAdvanceResaleBilled] = SUM(SumOfAdvanceResaleBilled),
		[PriorMonthsSumOfAdvanceFinalBilled] = SUM(SumOfAdvanceFinalBilled),
		[PriorMonthsSumOfBilledCost] = SUM(SumOfBilledCost),
		[PriorMonthsSumOfUnbilled] = SUM(SumOfUnbilled),
		[PriorMonthZeroMU] = SUM(ZeroMU)
	FROM #jobDetail
	WHERE [ItemDate] < @StartDate --AND (FunctionType = 'E' OR FunctionType = 'I')
	GROUP BY [ClientCode],
		[ClientDescription],
		[DivisionCode],
		[DivisionDescription],
		[ProductCode],
		[ProductDescription],
		[JobNumber],
		[JobDescription],
		[JobComponentNumber],
		[ComponentDescription],
		[FunctionType]

	UNION

	SELECT		
		[ClientCode],[ClientDescription],[DivisionCode],[DivisionDescription],[ProductCode],[ProductDescription],[JobNumber],[JobDescription],[JobComponentNumber],[ComponentDescription],[FunctionType],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[PriorMonthsSumOfBilledAmount] = SUM(SumOfBilledAmount),0,0,0,0,0,0,0,0
	FROM #jobDetail LEFT OUTER JOIN
		 GLENTHDR GL ON GL.GLEHXACT = #jobDetail.GlexActBill
	WHERE GLEHPP < @DATE_CUTOFF --AND (FunctionType = 'E' OR FunctionType = 'I')
	GROUP BY [ClientCode],
		[ClientDescription],
		[DivisionCode],
		[DivisionDescription],
		[ProductCode],
		[ProductDescription],
		[JobNumber],
		[JobDescription],
		[JobComponentNumber],
		[ComponentDescription],
		[FunctionType]

	UNION

	SELECT		
		[ClientCode],[ClientDescription],[DivisionCode],[DivisionDescription],[ProductCode],[ProductDescription],[JobNumber],[JobDescription],[JobComponentNumber],[ComponentDescription],[FunctionType],
		[SumOfEstimateHours] = SUM([SumOfEstimateHours]),
		[SumOfEstimate] = SUM(SumOfEstimate),
		[SumOfEstimateCont] = SUM(SumOfEstimateCont),
		[SumOfEstimateNetCost] = SUM(SumOfEstimateNetCost),
		[SumOfEstimateNetAmount] = SUM(SumOfEstimateNetAmount),
		[SumOfEstimateExtMarkup] = SUM(SumOfEstimateExtMarkup),
		[SumOfEstimateVenTax] = SUM(SumOfEstimateVenTax),
		[SumOfEstimateResaleTax] = SUM(SumOfEstimateResaleTax),
		0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	FROM #jobDetail
	WHERE [ItemDescription] = 'Estimate Amount'
	GROUP BY [ClientCode],
		[ClientDescription],
		[DivisionCode],
		[DivisionDescription],
		[ProductCode],
		[ProductDescription],
		[JobNumber],
		[JobDescription],
		[JobComponentNumber],
		[ComponentDescription],
		[FunctionType]

--SELECT * FROM #jobDetailtotal
	

  SELECT 
    ClientCode,
	ClientDescription,
	DivisionCode,
	DivisionDescription,
	ProductCode,
	ProductDescription,
	JobNumber,
	JobDescription,
	JobComponentNumber,
	ComponentDescription,
	FunctionType,
	SUM([SumOfEstimateHours]) AS [SumOfEstimateHours],
	SUM([SumOfEstimate]) AS [SumOfEstimate],
	SUM([SumOfEstimateCont]) AS [SumOfEstimateCont],
	SUM([SumOfEstimateNetCost]) AS [SumOfEstimateNetCost],
	SUM([SumOfEstimateNetAmount]) AS [SumOfEstimateNetAmount],
	SUM([SumOfEstimateExtMarkup]) AS [SumOfEstimateExtMarkup],
	SUM([SumOfEstimateVenTax]) AS [SumOfEstimateVenTax],
	SUM([SumOfEstimateResaleTax]) AS [SumOfEstimateResaleTax],
	SUM([CurrentMonthSumOfEstimateHours]) AS [CurrentMonthSumOfEstimateHours],
	SUM([CurrentMonthSumOfEstimate]) AS [CurrentMonthSumOfEstimate],
	SUM([CurrentMonthSumOfEstimateCont]) AS [CurrentMonthSumOfEstimateCont],
	SUM([CurrentMonthSumOfEstimateNetCost]) AS [CurrentMonthSumOfEstimateNetCost],
	SUM([CurrentMonthSumOfEstimateNetAmount]) AS [CurrentMonthSumOfEstimateNetAmount],
	SUM([CurrentMonthSumOfEstimateExtMarkup]) AS [CurrentMonthSumOfEstimateExtMarkup],
	SUM([CurrentMonthSumOfEstimateVenTax]) AS [CurrentMonthSumOfEstimateVenTax],
	SUM([CurrentMonthSumOfEstimateResaleTax]) AS [CurrentMonthSumOfEstimateResaleTax],
	SUM([CurrentMonthSumOfIncomeOnly]) AS [CurrentMonthSumOfIncomeOnly],
	SUM([CurrentMonthSumOfBillEmpHours]) AS [CurrentMonthSumOfBillEmpHours],
	SUM([CurrentMonthSumOfTotalBill]) AS [CurrentMonthSumOfTotalBill],
	SUM([CurrentMonthSumOfAPQuantity]) AS [CurrentMonthSumOfAPQuantity],
	SUM([CurrentMonthSumOfAPNetCost]) AS [CurrentMonthSumOfAPNetCost],
	SUM([CurrentMonthSumOfExtMarkupAmount]) AS [CurrentMonthSumOfExtMarkupAmount],
	SUM([CurrentMonthSumOfVenTax]) AS [CurrentMonthSumOfVenTax],
	SUM([CurrentMonthSumOfResaleTax]) AS [CurrentMonthSumOfResaleTax],
	SUM([CurrentMonthSumOfResaleBilled]) AS [CurrentMonthSumOfResaleBilled],
	SUM([CurrentMonthSumOfOpenPOAmount]) AS [CurrentMonthSumOfOpenPOAmount],
	SUM([CurrentMonthSumOfLineTotal]) AS [CurrentMonthSumOfLineTotal],
	SUM([CurrentMonthSumOfNonBillableEmpHours]) AS [CurrentMonthSumOfNonBillableEmpHours],
	SUM([CurrentMonthSumOfNonBillableAmount]) AS [CurrentMonthSumOfNonBillableAmount],
	SUM([CurrentMonthSumOfBilledAmount]) AS [CurrentMonthSumOfBilledAmount],
	SUM([CurrentMonthSumOfAdvanceBilled]) AS [CurrentMonthSumOfAdvanceBilled],
	SUM([CurrentMonthSumOfAdvanceTotal]) AS [CurrentMonthSumOfAdvanceTotal],
	SUM([CurrentMonthSumOfAdvanceResale]) AS [CurrentMonthSumOfAdvanceResale],
	SUM([CurrentMonthSumOfAdvanceResaleBilled]) AS [CurrentMonthSumOfAdvanceResaleBilled],
	SUM([CurrentMonthSumOfAdvanceFinalBilled]) AS [CurrentMonthSumOfAdvanceFinalBilled],
	SUM([CurrentMonthSumOfBilledCost]) AS [CurrentMonthSumOfBilledCost],
	SUM([CurrentMonthSumOfUnbilled]) AS [CurrentMonthSumOfUnbilled],
	SUM([CurrentMonthZeroMU]) AS [CurrentMonthZeroMU],
	SUM([PriorMonthsSumOfEstimateHours]) AS [PriorMonthsSumOfEstimateHours],
	SUM([PriorMonthsSumOfEstimate]) AS [PriorMonthsSumOfEstimate],
	SUM([PriorMonthsSumOfEstimateCont]) AS [PriorMonthsSumOfEstimateCont],
	SUM([PriorMonthsSumOfEstimateNetCost]) AS [PriorMonthsSumOfEstimateNetCost],
	SUM([PriorMonthsSumOfEstimateNetAmount]) AS [PriorMonthsSumOfEstimateNetAmount],
	SUM([PriorMonthsSumOfEstimateExtMarkup]) AS [PriorMonthsSumOfEstimateExtMarkup],
	SUM([PriorMonthsSumOfEstimateVenTax]) AS [PriorMonthsSumOfEstimateVenTax],
	SUM([PriorMonthsSumOfEstimateResaleTax]) AS [PriorMonthsSumOfEstimateResaleTax],
	SUM([PriorMonthsSumOfIncomeOnly]) AS [PriorMonthsSumOfIncomeOnly],
	SUM([PriorMonthsSumOfBillEmpHours]) AS [PriorMonthsSumOfBillEmpHours],
	SUM([PriorMonthsSumOfTotalBill]) AS [PriorMonthsSumOfTotalBill],
	SUM([PriorMonthsSumOfAPQuantity]) AS [PriorMonthsSumOfAPQuantity],
	SUM([PriorMonthsSumOfAPNetCost]) AS [PriorMonthsSumOfAPNetCost],
	SUM([PriorMonthsSumOfExtMarkupAmount]) AS [PriorMonthsSumOfExtMarkupAmount],
	SUM([PriorMonthsSumOfVenTax]) AS [PriorMonthsSumOfVenTax],
	SUM([PriorMonthsSumOfResaleTax]) AS [PriorMonthsSumOfResaleTax],
	SUM([PriorMonthsSumOfResaleBilled]) AS [PriorMonthsSumOfResaleBilled],
	SUM([PriorMonthsSumOfOpenPOAmount]) AS [PriorMonthsSumOfOpenPOAmount],
	SUM([PriorMonthsSumOfLineTotal]) AS [PriorMonthsSumOfLineTotal],
	SUM([PriorMonthsSumOfNonBillableEmpHours]) AS [PriorMonthsSumOfNonBillableEmpHours],
	SUM([PriorMonthsSumOfNonBillableAmount]) AS [PriorMonthsSumOfNonBillableAmount],
	SUM([PriorMonthsSumOfBilledAmount]) AS [PriorMonthsSumOfBilledAmount],
	SUM([PriorMonthsSumOfAdvanceBilled]) AS [PriorMonthsSumOfAdvanceBilled],
	SUM([PriorMonthsSumOfAdvanceTotal]) AS [PriorMonthsSumOfAdvanceTotal],
	SUM([PriorMonthsSumOfAdvanceResale]) AS [PriorMonthsSumOfAdvanceResale],
	SUM([PriorMonthsSumOfAdvanceResaleBilled]) AS [PriorMonthsSumOfAdvanceResaleBilled],
	SUM([PriorMonthsSumOfAdvanceFinalBilled]) AS [PriorMonthsSumOfAdvanceFinalBilled],
	SUM([PriorMonthsSumOfBilledCost]) AS [PriorMonthsSumOfBilledCost],
	SUM([PriorMonthsSumOfUnbilled]) AS [PriorMonthsSumOfUnbilled],
	SUM([PriorMonthsZeroMU]) AS [PriorMonthsZeroMU]
	FROM #jobDetailtotal
	GROUP BY [ClientCode],
		[ClientDescription],
		[DivisionCode],
		[DivisionDescription],
		[ProductCode],
		[ProductDescription],
		[JobNumber],
		[JobDescription],
		[JobComponentNumber],
		[ComponentDescription],
		[FunctionType]
		

END

