CREATE PROCEDURE [dbo].[advsp_job_forecast_report]
	@SEARCH_DATE SMALLDATETIME
AS
BEGIN

	DECLARE @JOBSUM TABLE (
		JF_ID INT,
		JF_REV_ID INT,
		JF_JOB_ID INT,
		BILLING_AMT DECIMAL(38,2),
		REVENUE_AMT DECIMAL(38,2),
		ACTUAL_BILLING_AMT DECIMAL(38,2),
		ACTUAL_REVENUE_AMT DECIMAL(38,2)
	)

	INSERT INTO @JOBSUM
		SELECT
 			JF_ID,
 			JF_REV_ID,
 			JF_JOB_ID,
 			BILLING_AMT = SUM(BILLING_AMT),
 			REVENUE_AMT = SUM(REVENUE_AMT),
 			ACTUAL_BILLING_AMT = SUM(ACTUAL_BILLING_AMT),
 			ACTUAL_REVENUE_AMT = SUM(ACTUAL_REVENUE_AMT)
 		FROM
 			dbo.V_JF_JOB_DTL_ACTUALS
 		GROUP BY
 			JF_ID,
 			JF_REV_ID,
 			JF_JOB_ID

	SELECT
		[ID] = NEWID(),
		[ClientCode] = JOB_LOG.CL_CODE,
		[ClientName] = CLIENT.CL_NAME,
		[DivisionCode] = JOB_LOG.DIV_CODE,
		[DivisionName] = DIVISION.DIV_NAME,
		[ProductCode] = JOB_LOG.PRD_CODE,
		[ProductName] = PRODUCT.PRD_DESCRIPTION,
		[OfficeCode] = PRODUCT.OFFICE_CODE,
		[OfficeName] = OFFICE.OFFICE_NAME,
		[NewBusiness] = CASE WHEN CLIENT.NEW_BUSINESS = 1 THEN 'Yes' ELSE 'No' END,
		[ProductUDV1] = PRODUCT.USER_DEFINED1,
		[ProductUDV2] = PRODUCT.USER_DEFINED2,
		[ProductUDV3] = PRODUCT.USER_DEFINED3,
		[ProductUDV4] = PRODUCT.USER_DEFINED4,
		[Industry] = INDUSTRY.[DESCRIPTION],
		[Specialty] = SPECIALTY.[DESCRIPTION],
		[Region] = REGION.REGION_DESC,
		[NumberOfEmployees] = COMPANY_PROFILE.NUM_EMPLOYEES,
		[Source] = [SOURCE].[DESCRIPTION],
		[Probability] = ACTIVITY.PROBABILITY,
		[Rating] = RATING.[DESCRIPTION],
		[CurrentProvider] = ACTIVITY.CURRENT_PROVIDER,
		[LeadDate] = ACTIVITY.LEAD_DATE,
		[SoldDate] = ACTIVITY.SOLD_DATE,
		[LostDate] = ACTIVITY.LOST_DATE,
		[JobNumber] = JOB_LOG.JOB_NUMBER,
		[JobDescription] = JOB_LOG.JOB_DESC,
		[JobTemplateCode] = JOB_COMPONENT.JOB_TMPLT_CODE,
		[SalesClassCode] = JOB_LOG.SC_CODE,
		[SalesClassDescription] = SALES_CLASS.SC_DESCRIPTION,
		[CampaignCode] = CAMPAIGN.CMP_CODE,
		[CampaignName] = CAMPAIGN.CMP_NAME,
		[ClientReference] = JOB_LOG.JOB_CLI_REF,
		[SalesClassFormatCode] = JOB_LOG.FORMAT_CODE,
		[SalesClassFormatDescription] = SC_FORMAT.FORMAT_DESC,
		[ComplexityCode] = JOB_LOG.COMPLEX_CODE,
		[ComplexityDescription] = COMPLEXITY.COMPLEX_DESC,
		[PromotionCode] = JOB_LOG.PROMO_CODE,
		[PromotionDescription] = PROMO_TYPE.PROMO_DESC,
		[JobUDF1] = JOB_LOG_UDV1.UDV_DESC,
		[JobUDF2] = JOB_LOG_UDV2.UDV_DESC,
		[JobUDF3] = JOB_LOG_UDV3.UDV_DESC,
		[JobUDF4] = JOB_LOG_UDV4.UDV_DESC,
		[JobUDF5] = JOB_LOG_UDV5.UDV_DESC,
		[JobCreateDate] = JOB_LOG.CREATE_DATE,
		[JobDateOpened] = JOB_LOG.JOB_DATE_OPENED,
		[AccountNumber] = JOB_COMPONENT.ACCT_NBR,
		[JobComponentNumber] = JOB_COMPONENT.JOB_COMPONENT_NBR,
		[JobComponent] = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_NUMBER), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_COMPONENT_NBR), 2),
		[JobComponentDescription] = JOB_COMPONENT.JOB_COMP_DESC,
		[AccountExecutiveCode] = JOB_COMPONENT.EMP_CODE,
		[AccountExecutive] = COALESCE((RTRIM(JCEMP.EMP_FNAME) + ' '), '') + COALESCE((JCEMP.EMP_MI + '. '), '') + COALESCE(JCEMP.EMP_LNAME, ''),
		[AlertGroup] = JOB_COMPONENT.EMAIL_GR_CODE,
		[ClientContactCode] = CDP_CONTACT_HDR.CONT_CODE, 
		[ClientContact] = COALESCE((RTRIM(CDP_CONTACT_HDR.CONT_FNAME) + ' '), '') + COALESCE((CDP_CONTACT_HDR.CONT_MI + '. '), '') + COALESCE(CDP_CONTACT_HDR.CONT_LNAME, ''),
		[JobTypeCode] = JOB_COMPONENT.JT_CODE,
		[JobTypeDescription] = JOB_TYPE.JT_DESC,
		[DepartmentCode] = JOB_COMPONENT.DP_TM_CODE,
		[DepartmentDescription] = DEPT_TEAM.DP_TM_DESC,
		[ClientPO] = JOB_COMPONENT.JOB_CL_PO_NBR,
		[AdNumber] = JOB_COMPONENT.AD_NBR,
		[AdNumberDescription] = AD_NUMBER.AD_NBR_DESC,
		[MarketCode] = JOB_COMPONENT.MARKET_CODE,
		[MarketDescription] = MARKET.MARKET_DESC,
		[Format] = JOB_COMPONENT.JOB_AD_SIZE,
		[JobComponentUDV1] = JOB_CMP_UDV1.UDV_DESC,
		[JobComponentUDV2] = JOB_CMP_UDV2.UDV_DESC,
		[JobComponentUDV3] = JOB_CMP_UDV3.UDV_DESC,
		[JobComponentUDV4] = JOB_CMP_UDV4.UDV_DESC,
		[JobComponentUDV5] = JOB_CMP_UDV5.UDV_DESC,
		[FiscalPeriodCode] = JOB_COMPONENT.FISCAL_PERIOD_CODE,
		[FiscalPeriodDescription] = FISCAL_PERIOD.FISCAL_PERIOD_DESC,
		[DateOpened] = JOB_COMPONENT.JOB_COMP_DATE,
		[JobProcessControlNumber] = JOB_COMPONENT.JOB_PROCESS_CONTRL,
		[JobProcessControlDescription] = JOB_PROC_CONTROLS.JOB_PROCESS_DESC,
		[NonBillable] = CASE WHEN JOB_COMPONENT.NOBILL_FLAG = 1 THEN 'Yes' ELSE 'No' END,
		[StatusCode] = JOB_TRAFFIC.TRF_CODE,
		[StatusDescription] = TRAFFIC.TRF_DESCRIPTION,
		[ManagerCode] = JOB_TRAFFIC.MGR_EMP_CODE,
		[Manager] = COALESCE((RTRIM(TRFEMP.EMP_FNAME) + ' '), '') + COALESCE((TRFEMP.EMP_MI + '. '), '') + COALESCE(TRFEMP.EMP_LNAME, ''),
		[GutPercentComplete] = JOB_TRAFFIC.PERCENT_COMPLETE,
		[StartDate] = JOB_COMPONENT.[START_DATE], 
		[DueDate] = JOB_COMPONENT.JOB_FIRST_USE_DATE, 
		[CompletedDate] = JOB_TRAFFIC.COMPLETED_DATE, 
		[JobForecastID] = FCDTL.JF_ID,
		[JobForecastRevisionID] = FCDTL.JF_REV_ID,
		[JobForecastJobID] = FCDTL.JF_JOB_ID,
		[ForecastDescription] = FCDTL.JF_DESCRIPTION,
 		[PostPeriodStart] = FCDTL.PPPERIOD_START,
 		[PostPeriodEnd] = FCDTL.PPPERIOD_END,
 		[Budget] = FCDTL.BUDGET,
 		[AssignedToOfficeCode] = FCDTL.OFFICE_CODE,
 		[AssignedToOfficeName] = FCDTL.OFFICE_NAME,
 		[AssignedToUserCode] = FCDTL.USER_ASSIGNED,
 		[AssignedToUserName] = FCDTL.USER_ASSIGNED_NAME,
 		[ForecastComment] = FCDTL.JF_COMMENT,
 		[ForecastJobComment] = FCDTL.JF_JOB_COMMENT,
 		[ForecastCreatedDate] = FCDTL.CREATED_DATE,
 		[ForecastModifiedDate] = FCDTL.MODIFIED_DATE,
 		[ForecastApprovedDate] = FCDTL.APPROVED_DATE,
 		[ApprovedRevisionNumber] = FCDTL.APPROVED_REV_NBR,
 		[HighestRevisionNumber] = FCDTL.MAX_REV_NBR,
 		[Approved] = FCDTL.APPROVED,
 		[Forecast] = FCDTL.FORECAST,
 		[Actual] = FCDTL.ACTUAL,
 		[Variance] = FCDTL.FORECAST - FCDTL.ACTUAL,
 		[PostPeriod] = FCDTL.PPPERIOD,
 		[PostPeriodBillingAmount] = FCDTL.POSTPERIOD_BILLING_AMT,
 		[PostPeriodRevenueAmount] = FCDTL.POSTPERIOD_REVENUE_AMT,
 		[TotalJobBillingAmount] = FCDTL.TOTAL_JOB_BILLING_AMT,
 		[TotalJobRevenueAmount] = FCDTL.TOTAL_JOB_REVENUE_AMT,
 		[ActualJobBillingAmount] = FCDTL.ACTUAL_JOB_BILLING_AMT,
 		[ActualJobRevenueAmount] = FCDTL.ACTUAL_JOB_REVENUE_AMT,
 		[TotalActualJobBillingAmount] = FCDTL.TOTAL_JOB_ACTUAL_BILLING_AMT,
 		[TotalActualJobRevenueAmount] = FCDTL.TOTAL_JOB_ACTUAL_REVENUE_AMT,
		[TotalOpenPurchaseOrderBillableAmount] = POINFO.TOTAL_BILLABLE_AMT,
		[TotalOpenPurchaseOrderRevenueAmount] = POINFO.TOTAL_REVENUE_AMT,
		[EstimateNumber] = ESTIMATE.ESTIMATE_NUMBER,
		[EstimateComponentNumber] = ESTIMATE.EST_COMPONENT_NBR,
		[ApprovedEstimateBillingAmount] = ESTIMATE.TOTAL_BILLING,
		[ApprovedEstimateRevenueAmount] = ESTIMATE.TOTAL_REVENUE
	FROM
		(SELECT 
			[JF_ID] = V_JF_JOB_DTL_ACTUALS.JF_ID,
			[JF_REV_ID] = V_JF_JOB_DTL_ACTUALS.JF_REV_ID,
			[JF_JOB_ID] = V_JF_JOB_DTL_ACTUALS.JF_JOB_ID,
 			[JF_DESCRIPTION] = JF_HDR.JF_DESCRIPTION,
 			[PPPERIOD_START] = JF_HDR.PPPERIOD_START,
 			[PPPERIOD_END] = JF_HDR.PPPERIOD_END,
 			[BUDGET] = JF_HDR.BUDGET,
 			[OFFICE_CODE] = JF_HDR.OFFICE_CODE,
 			[OFFICE_NAME] = OFFICE.OFFICE_NAME,
 			[USER_ASSIGNED] = JF_HDR.USER_ASSIGNED,
 			[USER_ASSIGNED_NAME] = COALESCE((RTRIM(EMPLOYEE.EMP_FNAME) + ' '), '') + COALESCE((EMPLOYEE.EMP_MI + '. '), '') + COALESCE(EMPLOYEE.EMP_LNAME, ''),
 			[JF_COMMENT] = JF_REV.JF_REV_COMMENT,
 			[JF_JOB_COMMENT] = JF_JOB.JF_JOB_COMMENT,
 			[CREATED_DATE] = JF_HDR.CREATED_DATE,
 			[MODIFIED_DATE] = JF_HDR.MODIFIED_DATE,
 			[APPROVED_DATE] = APPRREV.APPROVED_DATE,
 			[APPROVED_REV_NBR] = APPRREV.REV_NBR,
 			[MAX_REV_NBR] = MAXREV.REV_NBR,
 			[APPROVED] = CASE WHEN JF_REV.APPROVED = 1 THEN 'Yes' ELSE 'No' END,
 			[FORECAST] = CASE WHEN ISNULL(JF_HDR.JF_TYPE, 0) IN (0,2) THEN ISNULL(JOBSUM.BILLING_AMT, 0) ELSE ISNULL(JOBSUM.REVENUE_AMT, 0) END,
 			[ACTUAL] = CASE WHEN ISNULL(JF_HDR.JF_TYPE, 0) IN (0,2) THEN ISNULL(V_JF_JOB_DTL_ACTUALS.ACTUAL_BILLING_AMT, 0) ELSE ISNULL(V_JF_JOB_DTL_ACTUALS.ACTUAL_REVENUE_AMT, 0) END,
 			[PPPERIOD] = V_JF_JOB_DTL_ACTUALS.PPPERIOD,
 			[POSTPERIOD_BILLING_AMT] = CASE WHEN ISNULL(JF_HDR.JF_TYPE, 0) IN (0,2) THEN ISNULL(V_JF_JOB_DTL_ACTUALS.BILLING_AMT, 0) END,
 			[POSTPERIOD_REVENUE_AMT] = CASE WHEN ISNULL(JF_HDR.JF_TYPE, 0) IN (1,2) THEN ISNULL(V_JF_JOB_DTL_ACTUALS.REVENUE_AMT, 0) END,
 			[TOTAL_JOB_BILLING_AMT] = CASE WHEN ISNULL(JF_HDR.JF_TYPE, 0) IN (0,2) THEN ISNULL(JOBSUM.BILLING_AMT, 0) END,
 			[TOTAL_JOB_REVENUE_AMT] = CASE WHEN ISNULL(JF_HDR.JF_TYPE, 0) IN (1,2) THEN ISNULL(JOBSUM.REVENUE_AMT, 0) END,
 			[ACTUAL_JOB_BILLING_AMT] = CASE WHEN ISNULL(JF_HDR.JF_TYPE, 0) IN (0,2) THEN ISNULL(V_JF_JOB_DTL_ACTUALS.ACTUAL_BILLING_AMT, 0) END,
 			[ACTUAL_JOB_REVENUE_AMT] = CASE WHEN ISNULL(JF_HDR.JF_TYPE, 0) IN (1,2) THEN ISNULL(V_JF_JOB_DTL_ACTUALS.ACTUAL_REVENUE_AMT, 0) END,
 			[TOTAL_JOB_ACTUAL_BILLING_AMT] = CASE WHEN ISNULL(JF_HDR.JF_TYPE, 0) IN (0,2) THEN ISNULL(JOBSUM.ACTUAL_BILLING_AMT, 0) END,
 			[TOTAL_JOB_ACTUAL_REVENUE_AMT] = CASE WHEN ISNULL(JF_HDR.JF_TYPE, 0) IN (1,2) THEN ISNULL(JOBSUM.ACTUAL_REVENUE_AMT, 0) END
		 FROM 
 			dbo.V_JF_JOB_DTL_ACTUALS INNER JOIN
 			dbo.JF_HDR ON V_JF_JOB_DTL_ACTUALS.JF_ID = JF_HDR.JF_ID INNER JOIN
			dbo.POSTPERIOD PSTART ON JF_HDR.PPPERIOD_START = PSTART.PPPERIOD INNER JOIN
			dbo.POSTPERIOD PEND ON JF_HDR.PPPERIOD_END = PEND.PPPERIOD INNER JOIN
 			dbo.JF_REV ON V_JF_JOB_DTL_ACTUALS.JF_ID = JF_REV.JF_ID AND
 						  V_JF_JOB_DTL_ACTUALS.JF_REV_ID = JF_REV.JF_REV_ID INNER JOIN
			(SELECT
				MAX_REV.JF_ID,
				REV_NBR = ISNULL(APPR_REV.REV_NBR, MAX_REV.REV_NBR)
			 FROM
				(SELECT
					JF_ID,
					REV_NBR = MAX(REV_NBR)
				 FROM
					dbo.JF_REV
				 GROUP BY 
					JF_ID) MAX_REV LEFT OUTER JOIN
				(SELECT
					JF_ID,
					REV_NBR
				 FROM
					dbo.JF_REV
				 WHERE	
					APPROVED = 1) APPR_REV ON MAX_REV.JF_ID = APPR_REV.JF_ID) CURR_REV ON JF_REV.JF_ID = CURR_REV.JF_ID AND
																						  JF_REV.REV_NBR = CURR_REV.REV_NBR INNER JOIN
 			dbo.JF_JOB ON V_JF_JOB_DTL_ACTUALS.JF_ID = JF_JOB.JF_ID AND
 						  V_JF_JOB_DTL_ACTUALS.JF_REV_ID = JF_JOB.JF_REV_ID AND
 						  V_JF_JOB_DTL_ACTUALS.JF_JOB_ID = JF_JOB.JF_JOB_ID INNER JOIN
 			dbo.OFFICE ON JF_HDR.OFFICE_CODE = OFFICE.OFFICE_CODE INNER JOIN
 			dbo.EMPLOYEE ON JF_HDR.USER_ASSIGNED = EMPLOYEE.EMP_CODE LEFT OUTER JOIN
 			(SELECT
 				JF_ID,
 				JF_REV_ID,
 				REV_NBR,
 				APPROVED_DATE
 			 FROM
 				dbo.JF_REV 
 			 WHERE
 				APPROVED = 1) APPRREV ON JF_HDR.JF_ID = APPRREV.JF_ID INNER JOIN
 			(SELECT
 				JF_ID,
 				REV_NBR = MAX(REV_NBR)
 			 FROM
 				dbo.JF_REV 
 			 GROUP BY
 				JF_ID) MAXREV ON JF_HDR.JF_ID = MAXREV.JF_ID LEFT OUTER JOIN
 			@JOBSUM JOBSUM ON V_JF_JOB_DTL_ACTUALS.JF_ID = JOBSUM.JF_ID AND
 							  V_JF_JOB_DTL_ACTUALS.JF_REV_ID = JOBSUM.JF_REV_ID AND
 							  V_JF_JOB_DTL_ACTUALS.JF_JOB_ID = JOBSUM.JF_JOB_ID
			WHERE
				(PSTART.PPSRTDATE <= @SEARCH_DATE AND PEND.PPSRTDATE >= @SEARCH_DATE)) FCDTL INNER JOIN
		dbo.JF_JOB ON FCDTL.JF_ID = JF_JOB.JF_ID AND
					  FCDTL.JF_REV_ID = JF_JOB.JF_REV_ID AND
					  FCDTL.JF_JOB_ID = JF_JOB.JF_JOB_ID INNER JOIN
		dbo.JOB_COMPONENT ON JF_JOB.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND
							 JF_JOB.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
		dbo.EMPLOYEE JCEMP ON JOB_COMPONENT.EMP_CODE = JCEMP.EMP_CODE LEFT OUTER JOIN
		dbo.CDP_CONTACT_HDR ON JOB_COMPONENT.CDP_CONTACT_ID = CDP_CONTACT_HDR.CDP_CONTACT_ID LEFT OUTER JOIN
		dbo.JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE LEFT OUTER JOIN
		dbo.DEPT_TEAM ON JOB_COMPONENT.DP_TM_CODE = DEPT_TEAM.DP_TM_CODE LEFT OUTER JOIN
		dbo.AD_NUMBER ON JOB_COMPONENT.AD_NBR = AD_NUMBER.AD_NBR  LEFT OUTER JOIN
		dbo.MARKET ON JOB_COMPONENT.MARKET_CODE = MARKET.MARKET_CODE LEFT OUTER JOIN
		dbo.JOB_CMP_UDV1 ON JOB_COMPONENT.UDV1_CODE = JOB_CMP_UDV1.UDV_CODE LEFT OUTER JOIN
		dbo.JOB_CMP_UDV2 ON JOB_COMPONENT.UDV2_CODE = JOB_CMP_UDV2.UDV_CODE LEFT OUTER JOIN
		dbo.JOB_CMP_UDV3 ON JOB_COMPONENT.UDV3_CODE = JOB_CMP_UDV3.UDV_CODE LEFT OUTER JOIN
		dbo.JOB_CMP_UDV4 ON JOB_COMPONENT.UDV4_CODE = JOB_CMP_UDV4.UDV_CODE LEFT OUTER JOIN
		dbo.JOB_CMP_UDV5 ON JOB_COMPONENT.UDV5_CODE = JOB_CMP_UDV5.UDV_CODE LEFT OUTER JOIN
		dbo.FISCAL_PERIOD ON JOB_COMPONENT.FISCAL_PERIOD_CODE = FISCAL_PERIOD.FISCAL_PERIOD_CODE LEFT OUTER JOIN
		dbo.JOB_PROC_CONTROLS ON JOB_COMPONENT.JOB_PROCESS_CONTRL = JOB_PROC_CONTROLS.JOB_PROCESS_CONTRL LEFT OUTER JOIN
		dbo.JOB_TRAFFIC ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND
						   JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR LEFT OUTER JOIN
		dbo.EMPLOYEE_CLOAK TRFEMP ON JOB_TRAFFIC.MGR_EMP_CODE = TRFEMP.EMP_CODE LEFT OUTER JOIN
		dbo.TRAFFIC ON JOB_TRAFFIC.TRF_CODE = TRAFFIC.TRF_CODE INNER JOIN
		dbo.JOB_LOG ON JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER LEFT OUTER JOIN
		dbo.SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
		dbo.CAMPAIGN ON JOB_LOG.CMP_IDENTIFIER = CAMPAIGN.CMP_IDENTIFIER LEFT OUTER JOIN
		dbo.SC_FORMAT ON JOB_LOG.SC_CODE = SC_FORMAT.SC_CODE AND
						 JOB_LOG.FORMAT_CODE = SC_FORMAT.FORMAT_CODE LEFT OUTER JOIN
		dbo.JOB_LOG_UDV1 ON JOB_LOG.UDV1_CODE = JOB_LOG_UDV1.UDV_CODE LEFT OUTER JOIN
		dbo.JOB_LOG_UDV2 ON JOB_LOG.UDV2_CODE = JOB_LOG_UDV2.UDV_CODE LEFT OUTER JOIN
		dbo.JOB_LOG_UDV3 ON JOB_LOG.UDV3_CODE = JOB_LOG_UDV3.UDV_CODE LEFT OUTER JOIN
		dbo.JOB_LOG_UDV4 ON JOB_LOG.UDV4_CODE = JOB_LOG_UDV4.UDV_CODE LEFT OUTER JOIN
		dbo.JOB_LOG_UDV5 ON JOB_LOG.UDV5_CODE = JOB_LOG_UDV5.UDV_CODE INNER JOIN
		dbo.PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND
					   JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND
					   JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE LEFT OUTER JOIN
		dbo.COMPANY_PROFILE ON PRODUCT.CL_CODE = COMPANY_PROFILE.CL_CODE AND
							   PRODUCT.DIV_CODE = COMPANY_PROFILE.DIV_CODE AND
							   PRODUCT.PRD_CODE = COMPANY_PROFILE.PRD_CODE LEFT OUTER JOIN
		dbo.INDUSTRY ON COMPANY_PROFILE.INDUSTRY_ID = INDUSTRY.INDUSTRY_ID LEFT OUTER JOIN
		dbo.SPECIALTY ON COMPANY_PROFILE.SPECIALTY_ID = SPECIALTY.SPECIALTY_ID LEFT OUTER JOIN
		dbo.REGION ON COMPANY_PROFILE.REGION_CODE = REGION.REGION_CODE LEFT OUTER JOIN
		dbo.ACTIVITY ON PRODUCT.CL_CODE = ACTIVITY.CL_CODE AND
						PRODUCT.DIV_CODE = ACTIVITY.DIV_CODE AND
						PRODUCT.PRD_CODE = ACTIVITY.PRD_CODE LEFT OUTER JOIN
		dbo.[SOURCE] ON ACTIVITY.SOURCE_ID = [SOURCE].SOURCE_ID LEFT OUTER JOIN
		dbo.RATING ON ACTIVITY.RATING_ID = RATING.RATING_ID INNER JOIN
		dbo.CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
		dbo.DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND
						JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
		dbo.OFFICE ON PRODUCT.OFFICE_CODE = OFFICE.OFFICE_CODE LEFT OUTER JOIN
		dbo.COMPLEXITY ON JOB_LOG.COMPLEX_CODE = COMPLEXITY.COMPLEX_CODE LEFT OUTER JOIN
		dbo.PROMO_TYPE ON JOB_LOG.PROMO_CODE = PROMO_TYPE.PROMO_CODE LEFT OUTER JOIN
		(SELECT 
 			ESTIMATE_APPROVAL.JOB_NUMBER,
 			ESTIMATE_APPROVAL.JOB_COMPONENT_NBR,
 			ESTIMATE_APPROVAL.ESTIMATE_NUMBER,
 			ESTIMATE_APPROVAL.EST_COMPONENT_NBR,
 			ESTIMATE_APPROVAL.EST_QUOTE_NBR,
 			ESTIMATE_APPROVAL.EST_REVISION_NBR,
			[TOTAL_BILLING] = SUM(EST_REV_EXT_AMT) + SUM(EXT_MARKUP_AMT) + SUM(EXT_NONRESALE_TAX),
 			[TOTAL_REVENUE] = SUM(CASE WHEN EST_FNC_TYPE IN ('I', 'E') THEN ISNULL(EST_REV_EXT_AMT, 0) + ISNULL(EXT_MARKUP_AMT, 0) WHEN EST_FNC_TYPE = 'V' THEN ISNULL(EXT_MARKUP_AMT, 0) ELSE 0 END)
		FROM 
 			dbo.ESTIMATE_APPROVAL INNER JOIN
 			dbo.ESTIMATE_REV_DET ON ESTIMATE_APPROVAL.ESTIMATE_NUMBER = ESTIMATE_REV_DET.ESTIMATE_NUMBER AND
 									ESTIMATE_APPROVAL.EST_COMPONENT_NBR = ESTIMATE_REV_DET.EST_COMPONENT_NBR AND
 									ESTIMATE_APPROVAL.ESTIMATE_NUMBER = ESTIMATE_REV_DET.ESTIMATE_NUMBER AND
 									ESTIMATE_APPROVAL.EST_QUOTE_NBR = ESTIMATE_REV_DET.EST_QUOTE_NBR AND
 									ESTIMATE_APPROVAL.EST_REVISION_NBR = ESTIMATE_REV_DET.EST_REV_NBR
		GROUP BY
 			JOB_NUMBER,
 			JOB_COMPONENT_NBR,
 			ESTIMATE_APPROVAL.ESTIMATE_NUMBER,
 			ESTIMATE_APPROVAL.EST_COMPONENT_NBR,
 			ESTIMATE_APPROVAL.ESTIMATE_NUMBER,
 			ESTIMATE_APPROVAL.EST_QUOTE_NBR,
 			ESTIMATE_APPROVAL.EST_REVISION_NBR) ESTIMATE ON JOB_COMPONENT.JOB_NUMBER = ESTIMATE.JOB_NUMBER AND
															JOB_COMPONENT.JOB_COMPONENT_NBR = ESTIMATE.JOB_COMPONENT_NBR LEFT OUTER JOIN
		(SELECT
	 		PURCHASE_ORDER_DET.JOB_NUMBER,
	 		PURCHASE_ORDER_DET.JOB_COMPONENT_NBR,
	 		[TOTAL_BILLABLE_AMT] = SUM(ISNULL(PURCHASE_ORDER_DET.PO_EXT_AMOUNT, 0) + ISNULL(PURCHASE_ORDER_DET.EXT_MARKUP_AMT, 0)),
	 		[TOTAL_REVENUE_AMT] = SUM(ISNULL(PURCHASE_ORDER_DET.EXT_MARKUP_AMT, 0))
		 FROM
	 		dbo.PURCHASE_ORDER INNER JOIN
	 		dbo.PURCHASE_ORDER_DET ON PURCHASE_ORDER.PO_NUMBER = PURCHASE_ORDER_DET.PO_NUMBER INNER JOIN
	 		dbo.FUNCTIONS ON PURCHASE_ORDER_DET.FNC_CODE = FUNCTIONS.FNC_CODE
		 WHERE
	 		PURCHASE_ORDER_DET.JOB_NUMBER IS NOT NULL AND
	 		PURCHASE_ORDER_DET.JOB_COMPONENT_NBR IS NOT NULL AND 
	 		ISNULL(PURCHASE_ORDER.VOID_FLAG, 0) = 0
		 GROUP BY
	 		PURCHASE_ORDER_DET.JOB_NUMBER,
	 		PURCHASE_ORDER_DET.JOB_COMPONENT_NBR) POINFO ON JOB_COMPONENT.JOB_NUMBER = POINFO.JOB_NUMBER AND
															JOB_COMPONENT.JOB_COMPONENT_NBR = POINFO.JOB_COMPONENT_NBR


END