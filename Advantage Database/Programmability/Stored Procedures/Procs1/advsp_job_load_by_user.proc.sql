--DROP PROCEDURE [dbo].[advsp_job_load_by_user]
CREATE PROCEDURE [dbo].[advsp_job_load_by_user]
@CL_CODE VARCHAR(6) = '',
@DIV_CODE VARCHAR(6) = '',
@PRD_CODE VARCHAR(6) = '',
@JOB_NUMBER INT = 0,
@OPEN_COMP_ONLY BIT = 0,
@USER_CODE VARCHAR(100),
@TIME_ENTRY BIT
AS
BEGIN

	DECLARE @ADVTF_USER_JOB_LIMITS TABLE (CL_CODE VARCHAR(6), DIV_CODE VARCHAR(6), PRD_CODE VARCHAR(6), TIME_ENTRY SMALLINT, JOB_NUMBER INT)
	INSERT INTO @ADVTF_USER_JOB_LIMITS
	SELECT CL_CODE, DIV_CODE, PRD_CODE, TIME_ENTRY, JOB_NUMBER FROM advtf_user_job_limits(@USER_CODE);

	IF (SELECT COUNT(1) FROM @ADVTF_USER_JOB_LIMITS) = 0
	BEGIN
		IF @TIME_ENTRY IS NULL OR @TIME_ENTRY = 0
		BEGIN
			SELECT 
				[ID] = J.JOB_NUMBER,
				[Key] = CAST(J.JOB_NUMBER AS VARCHAR(1000)) + ',0',
				[JobNumber] = J.JOB_NUMBER,
				[Description] = REPLACE(STR(J.JOB_NUMBER, 6), SPACE(1), '0') + ' - ' + J.JOB_DESC,
				[JobDescription] = J.JOB_DESC, 
				[ClientCode] = J.CL_CODE,  
				[ClientName] = C.CL_NAME, 
				[DivisionCode] = J.DIV_CODE,
				[DivisionName] = D.DIV_NAME, 
				[ProductCode] = J.PRD_CODE, 
				[ProductDescription] = P.PRD_DESCRIPTION, 
				[OfficeCode] = J.OFFICE_CODE, 
				[OfficeName] = O.OFFICE_NAME,
				[IsOpen] = CASE WHEN J.COMP_OPEN = 0 THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END,
				[SalesClassCode] = J.SC_CODE,
				[SalesClassDescription] = SC.SC_DESCRIPTION
			FROM 
				JOB_LOG J
				INNER JOIN CLIENT C ON J.CL_CODE = C.CL_CODE 
				INNER JOIN DIVISION D ON J.CL_CODE = D.CL_CODE AND J.DIV_CODE = D.DIV_CODE 
				INNER JOIN PRODUCT P ON J.CL_CODE = P.CL_CODE AND J.DIV_CODE = P.DIV_CODE AND J.PRD_CODE = P.PRD_CODE 
				LEFT OUTER JOIN	OFFICE O ON J.OFFICE_CODE = O.OFFICE_CODE 
				LEFT OUTER JOIN SALES_CLASS SC ON J.SC_CODE = SC.SC_CODE
			WHERE
				1 = CASE WHEN ISNULL(@CL_CODE, '') = '' THEN 1 WHEN J.CL_CODE = @CL_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@DIV_CODE, '') = '' THEN 1 WHEN J.DIV_CODE = @DIV_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@PRD_CODE, '') = '' THEN 1 WHEN J.PRD_CODE = @PRD_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@JOB_NUMBER, 0) = 0 THEN 1 WHEN J.JOB_NUMBER = @JOB_NUMBER THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@OPEN_COMP_ONLY, 0) = 1 AND J.COMP_OPEN > 0 THEN 1 ELSE 0 END
			ORDER BY
				J.JOB_NUMBER DESC;
		END
		ELSE
		BEGIN
			SELECT DISTINCT 
				[ID] = J.JOB_NUMBER,
				[Key] = CAST(J.JOB_NUMBER AS VARCHAR(1000)) + ',0',
				[JobNumber] = J.JOB_NUMBER,
				[Description] = REPLACE(STR(J.JOB_NUMBER, 6), SPACE(1), '0') + ' - ' + J.JOB_DESC,
				[JobDescription] = J.JOB_DESC, 
				[ClientCode] = J.CL_CODE,  
				[ClientName] = C.CL_NAME, 
				[DivisionCode] = J.DIV_CODE,
				[DivisionName] = D.DIV_NAME, 
				[ProductCode] = J.PRD_CODE, 
				[ProductDescription] = P.PRD_DESCRIPTION, 
				[OfficeCode] = J.OFFICE_CODE, 
				[OfficeName] = O.OFFICE_NAME,
				[IsOpen] = CASE WHEN J.COMP_OPEN = 0 THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END,
				[SalesClassCode] = J.SC_CODE,
				[SalesClassDescription] = SC.SC_DESCRIPTION
			FROM 
				JOB_LOG J
				INNER JOIN JOB_COMPONENT JC ON J.JOB_NUMBER = JC.JOB_NUMBER 
				INNER JOIN CLIENT C ON J.CL_CODE = C.CL_CODE 
				INNER JOIN DIVISION D ON J.CL_CODE = D.CL_CODE AND J.DIV_CODE = D.DIV_CODE 
				INNER JOIN PRODUCT P ON J.CL_CODE = P.CL_CODE AND J.DIV_CODE = P.DIV_CODE AND J.PRD_CODE = P.PRD_CODE 
				LEFT OUTER JOIN	OFFICE O ON J.OFFICE_CODE = O.OFFICE_CODE 
				LEFT OUTER JOIN SALES_CLASS SC ON J.SC_CODE = SC.SC_CODE
			WHERE     
				JC.JOB_PROCESS_CONTRL NOT IN (2, 3, 5, 6, 9, 10, 12, 13) AND
				1 = CASE WHEN ISNULL(@CL_CODE, '') = '' THEN 1 WHEN J.CL_CODE = @CL_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@DIV_CODE, '') = '' THEN 1 WHEN J.DIV_CODE = @DIV_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@PRD_CODE, '') = '' THEN 1 WHEN J.PRD_CODE = @PRD_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@JOB_NUMBER, 0) = 0 THEN 1 WHEN J.JOB_NUMBER = @JOB_NUMBER THEN 1 ELSE 0 END
			ORDER BY
				J.JOB_NUMBER DESC;
		END
	END
	ELSE
	BEGIN
		IF @TIME_ENTRY IS NULL OR @TIME_ENTRY = 0
		BEGIN
			SELECT 
				[ID] = J.JOB_NUMBER,
				[Key] = CAST(J.JOB_NUMBER AS VARCHAR(1000)) + ',0',
				[JobNumber] = J.JOB_NUMBER,
				[Description] = REPLACE(STR(J.JOB_NUMBER, 6), SPACE(1), '0') + ' - ' + J.JOB_DESC,
				[JobDescription] = J.JOB_DESC, 
				[ClientCode] = J.CL_CODE,  
				[ClientName] = C.CL_NAME, 
				[DivisionCode] = J.DIV_CODE,
				[DivisionName] = D.DIV_NAME, 
				[ProductCode] = J.PRD_CODE, 
				[ProductDescription] = P.PRD_DESCRIPTION, 
				[OfficeCode] = J.OFFICE_CODE, 
				[OfficeName] = O.OFFICE_NAME,
				[IsOpen] = CASE WHEN J.COMP_OPEN = 0 THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END,
				[SalesClassCode] = J.SC_CODE,
				[SalesClassDescription] = SC.SC_DESCRIPTION
			FROM 
				JOB_LOG J
				INNER JOIN CLIENT C ON J.CL_CODE = C.CL_CODE 
				INNER JOIN DIVISION D ON J.CL_CODE = D.CL_CODE AND J.DIV_CODE = D.DIV_CODE 
				INNER JOIN PRODUCT P ON J.CL_CODE = P.CL_CODE AND J.DIV_CODE = P.DIV_CODE AND J.PRD_CODE = P.PRD_CODE 
				INNER JOIN @ADVTF_USER_JOB_LIMITS JL ON J.JOB_NUMBER = JL.JOB_NUMBER 
				LEFT OUTER JOIN	OFFICE O ON J.OFFICE_CODE = O.OFFICE_CODE 
				LEFT OUTER JOIN SALES_CLASS SC ON J.SC_CODE = SC.SC_CODE
			WHERE
				1 = CASE WHEN ISNULL(@CL_CODE, '') = '' THEN 1 WHEN J.CL_CODE = @CL_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@DIV_CODE, '') = '' THEN 1 WHEN J.DIV_CODE = @DIV_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@PRD_CODE, '') = '' THEN 1 WHEN J.PRD_CODE = @PRD_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@JOB_NUMBER, 0) = 0 THEN 1 WHEN J.JOB_NUMBER = @JOB_NUMBER THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@OPEN_COMP_ONLY, 0) = 1 AND J.COMP_OPEN > 0 THEN 1 ELSE 0 END
			ORDER BY
				J.JOB_NUMBER DESC;
		END
		ELSE
		BEGIN
			SELECT DISTINCT 
				[ID] = J.JOB_NUMBER,
				[Key] = CAST(J.JOB_NUMBER AS VARCHAR(1000)) + ',0',
				[JobNumber] = J.JOB_NUMBER,
				[Description] = REPLACE(STR(J.JOB_NUMBER, 6), SPACE(1), '0') + ' - ' + J.JOB_DESC,
				[JobDescription] = J.JOB_DESC, 
				[ClientCode] = J.CL_CODE,  
				[ClientName] = C.CL_NAME, 
				[DivisionCode] = J.DIV_CODE,
				[DivisionName] = D.DIV_NAME, 
				[ProductCode] = J.PRD_CODE, 
				[ProductDescription] = P.PRD_DESCRIPTION, 
				[OfficeCode] = J.OFFICE_CODE, 
				[OfficeName] = O.OFFICE_NAME,
				[IsOpen] = CASE WHEN J.COMP_OPEN = 0 THEN CAST(0 AS BIT) ELSE CAST(1 AS BIT) END,
				[SalesClassCode] = J.SC_CODE,
				[SalesClassDescription] = SC.SC_DESCRIPTION
			FROM 
				JOB_LOG J
				INNER JOIN JOB_COMPONENT JC ON J.JOB_NUMBER = JC.JOB_NUMBER 
				INNER JOIN CLIENT C ON J.CL_CODE = C.CL_CODE 
				INNER JOIN DIVISION D ON J.CL_CODE = D.CL_CODE AND J.DIV_CODE = D.DIV_CODE 
				INNER JOIN PRODUCT P ON J.CL_CODE = P.CL_CODE AND J.DIV_CODE = P.DIV_CODE AND J.PRD_CODE = P.PRD_CODE 
				INNER JOIN @ADVTF_USER_JOB_LIMITS JL ON J.JOB_NUMBER = JL.JOB_NUMBER 
				LEFT OUTER JOIN	OFFICE O ON J.OFFICE_CODE = O.OFFICE_CODE 
				LEFT OUTER JOIN SALES_CLASS SC ON J.SC_CODE = SC.SC_CODE
			WHERE     
				JC.JOB_PROCESS_CONTRL NOT IN (2, 3, 5, 6, 9, 10, 12, 13) AND
				1 = CASE WHEN ISNULL(@CL_CODE, '') = '' THEN 1 WHEN J.CL_CODE = @CL_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@DIV_CODE, '') = '' THEN 1 WHEN J.DIV_CODE = @DIV_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@PRD_CODE, '') = '' THEN 1 WHEN J.PRD_CODE = @PRD_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@JOB_NUMBER, 0) = 0 THEN 1 WHEN J.JOB_NUMBER = @JOB_NUMBER THEN 1 ELSE 0 END
			ORDER BY
				J.JOB_NUMBER DESC;
		END
	END

END