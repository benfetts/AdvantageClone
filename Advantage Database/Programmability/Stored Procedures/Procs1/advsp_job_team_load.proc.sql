IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[advsp_job_team_load]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[advsp_job_team_load];
END
GO
CREATE PROCEDURE [dbo].[advsp_job_team_load] 
	@TEAM_TYPE SMALLINT,
	@JOB_NUMBER INT,
	@JOB_COMPONENT_NBR SMALLINT
AS
BEGIN
/*================ QUERY ================*/
DECLARE 
	@TEAM TABLE (
		TEAM_TYPE SMALLINT NULL,
		EMP_CODE VARCHAR(6) NULL,
		EMP_TITLE VARCHAR(100) NULL,
		EMP_FNAME VARCHAR(30) NULL,
		EMP_MI	 VARCHAR(1) NULL,
		EMP_LNAME VARCHAR(30) NULL,
		EMP_IMAGE IMAGE NULL,
		EMP_NICKNAME VARCHAR(10) NULL,
		TASK_COUNT INT NULL,
		HOURS_TOTAL DECIMAL(9,3) NULL,
		ACTUAL_HOURS DECIMAL(9,3) NULL,
		EMAIL_GROUP VARCHAR(50) NULL,
		TRAFFIC_COLUMN_CODE VARCHAR(4) NULL,
		MANAGER_TYPE SMALLINT NULL
	);
DECLARE
	@TEAM_TYPE_NAME VARCHAR(100);

IF @TEAM_TYPE = 0
BEGIN
	SET @TEAM_TYPE_NAME = 'Alert Group';
	DECLARE 
		@EMAIL_GROUP_CODE VARCHAR(50);

	SELECT @EMAIL_GROUP_CODE = EMAIL_GR_CODE FROM JOB_COMPONENT AS JC WITH(NOLOCK) WHERE JC.JOB_NUMBER = @JOB_NUMBER AND JC.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

	IF NOT @EMAIL_GROUP_CODE IS NULL
	BEGIN
		INSERT INTO @TEAM (TEAM_TYPE, EMP_CODE, EMAIL_GROUP)
		SELECT DISTINCT @TEAM_TYPE, EG.EMP_CODE, @EMAIL_GROUP_CODE
		FROM EMAIL_GROUP AS EG WITH(NOLOCK) 
		WHERE EG.EMAIL_GR_CODE = @EMAIL_GROUP_CODE;
	END

END

IF @TEAM_TYPE = 1
BEGIN
	SET @TEAM_TYPE_NAME = 'Manager';

	INSERT INTO @TEAM (TEAM_TYPE, EMP_CODE, EMP_TITLE, MANAGER_TYPE)
	SELECT @TEAM_TYPE, JT.MGR_EMP_CODE, 'Manager', 1 FROM JOB_TRAFFIC AS JT WITH(NOLOCK) WHERE JT.JOB_NUMBER = @JOB_NUMBER AND JT.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

END

IF @TEAM_TYPE = 2
BEGIN
	SET @TEAM_TYPE_NAME = 'Schedule Assignments';

	DECLARE
		@SCHEDULE_ASSIGNMENT_1_DISPLAY VARCHAR(20),
		@SCHEDULE_ASSIGNMENT_2_DISPLAY VARCHAR(20),
		@SCHEDULE_ASSIGNMENT_3_DISPLAY VARCHAR(20),
		@SCHEDULE_ASSIGNMENT_4_DISPLAY VARCHAR(20),
		@SCHEDULE_ASSIGNMENT_5_DISPLAY VARCHAR(20)

	SELECT 
		@SCHEDULE_ASSIGNMENT_1_DISPLAY = TR_TITLE1,
		@SCHEDULE_ASSIGNMENT_2_DISPLAY = TR_TITLE2,
		@SCHEDULE_ASSIGNMENT_3_DISPLAY = TR_TITLE3,
		@SCHEDULE_ASSIGNMENT_4_DISPLAY = TR_TITLE4,
		@SCHEDULE_ASSIGNMENT_5_DISPLAY = TR_TITLE5 
	FROM 
		AGENCY WITH(NOLOCK);

	INSERT INTO @TEAM (TEAM_TYPE, EMP_CODE, EMP_TITLE, TRAFFIC_COLUMN_CODE)
	SELECT @TEAM_TYPE, ISNULL(JT.ASSIGN_1,'TR_1'), @SCHEDULE_ASSIGNMENT_1_DISPLAY,'TR_1' FROM JOB_TRAFFIC AS JT WITH(NOLOCK) WHERE JT.JOB_NUMBER = @JOB_NUMBER AND JT.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

	INSERT INTO @TEAM (TEAM_TYPE, EMP_CODE, EMP_TITLE, TRAFFIC_COLUMN_CODE)
	SELECT @TEAM_TYPE, ISNULL(JT.ASSIGN_2,'TR_2'), @SCHEDULE_ASSIGNMENT_2_DISPLAY,'TR_2' FROM JOB_TRAFFIC AS JT WITH(NOLOCK) WHERE JT.JOB_NUMBER = @JOB_NUMBER AND JT.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

	INSERT INTO @TEAM (TEAM_TYPE, EMP_CODE, EMP_TITLE, TRAFFIC_COLUMN_CODE)
	SELECT @TEAM_TYPE, ISNULL(JT.ASSIGN_3,'TR_3'), @SCHEDULE_ASSIGNMENT_3_DISPLAY,'TR_3' FROM JOB_TRAFFIC AS JT WITH(NOLOCK) WHERE JT.JOB_NUMBER = @JOB_NUMBER AND JT.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

	INSERT INTO @TEAM (TEAM_TYPE, EMP_CODE, EMP_TITLE, TRAFFIC_COLUMN_CODE)
	SELECT @TEAM_TYPE, ISNULL(JT.ASSIGN_4,'TR_4'), @SCHEDULE_ASSIGNMENT_4_DISPLAY,'TR_4' FROM JOB_TRAFFIC AS JT WITH(NOLOCK) WHERE JT.JOB_NUMBER = @JOB_NUMBER AND JT.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

	INSERT INTO @TEAM (TEAM_TYPE, EMP_CODE, EMP_TITLE, TRAFFIC_COLUMN_CODE)
	SELECT @TEAM_TYPE, ISNULL(JT.ASSIGN_5,'TR_5'), @SCHEDULE_ASSIGNMENT_5_DISPLAY,'TR_5' FROM JOB_TRAFFIC AS JT WITH(NOLOCK) WHERE JT.JOB_NUMBER = @JOB_NUMBER AND JT.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

END

IF @TEAM_TYPE = 3
BEGIN
	SET @TEAM_TYPE_NAME = 'Task Assignments';

	INSERT INTO @TEAM (TEAM_TYPE, EMP_CODE)
	SELECT DISTINCT @TEAM_TYPE, EMP_CODE FROM JOB_TRAFFIC_DET_EMPS AS JTDE WITH(NOLOCK) WHERE JTDE.JOB_NUMBER = @JOB_NUMBER AND JTDE.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

END

IF @TEAM_TYPE = 4
BEGIN
	SET @TEAM_TYPE_NAME = 'Account Executive';

	DECLARE
		@AE_LABEL VARCHAR(50)
  
	SELECT 
		@AE_LABEL = ISNULL([LABEL], 'Account Executive') 
	FROM 
		JOB_TMPLT_DTL 
		INNER JOIN JOB_COMPONENT ON JOB_TMPLT_DTL.JOB_TMPLT_CODE = JOB_COMPONENT.JOB_TMPLT_CODE 
	WHERE  
		[ITEM_CODE] = 'JOB_COMPONENT.EMP_CODE' 
		AND JOB_NUMBER = @JOB_NUMBER 
		AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

	SET @AE_LABEL = ISNULL(@AE_LABEL, @TEAM_TYPE_NAME);

	INSERT INTO @TEAM (TEAM_TYPE, EMP_CODE, EMP_TITLE, MANAGER_TYPE)
	SELECT @TEAM_TYPE, EMP_CODE, @AE_LABEL, 0 FROM JOB_COMPONENT AS JC WITH(NOLOCK) WHERE JC.JOB_NUMBER = @JOB_NUMBER AND JC.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

END

UPDATE @TEAM SET EMP_FNAME = E.EMP_FNAME, EMP_MI = E.EMP_MI, EMP_LNAME = E.EMP_LNAME, EMP_IMAGE = EP.EMP_IMAGE, EMP_NICKNAME = EP.EMP_NICKNAME
FROM @TEAM AS T INNER JOIN EMPLOYEE AS E WITH(NOLOCK) ON T.EMP_CODE = E.EMP_CODE
LEFT OUTER JOIN EMPLOYEE_PICTURE AS EP WITH(NOLOCK) ON T.EMP_CODE = EP.EMP_CODE;

--UPDATE @TEAM SET TASK_COUNT = C.TASK_COUNT, HOURS_TOTAL = C.SUM_HRS
--FROM @TEAM AS T INNER JOIN (
--	SELECT JTDE.EMP_CODE, COUNT(1) AS TASK_COUNT, SUM(JTDE.HOURS_ALLOWED) AS SUM_HRS
--	FROM JOB_TRAFFIC_DET_EMPS AS JTDE WITH(NOLOCK)
--	WHERE JTDE.JOB_NUMBER = @JOB_NUMBER AND JTDE.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
--	GROUP BY JTDE.EMP_CODE) AS C ON T.EMP_CODE = C.EMP_CODE;

UPDATE @TEAM SET TASK_COUNT = C.TASK_COUNT, HOURS_TOTAL = C.SUM_HRS
FROM @TEAM AS T INNER JOIN (
	SELECT A.EMP_CODE, SUM(A.TASK_COUNT) AS TASK_COUNT, SUM(A.SUM_HRS) AS SUM_HRS FROM
	(SELECT JTDE.EMP_CODE, COUNT(1) AS TASK_COUNT, SUM(JTDE.HOURS_ALLOWED) AS SUM_HRS
	FROM JOB_TRAFFIC_DET_EMPS AS JTDE WITH(NOLOCK)
	WHERE JTDE.JOB_NUMBER = @JOB_NUMBER AND JTDE.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
	GROUP BY JTDE.EMP_CODE
	UNION
	SELECT ISNULL(ASSIGNED_EMP_CODE, AR.EMP_CODE), COUNT(1) AS TASK_COUNT, SUM(HRS_ALLOWED) AS SUM_HRS
	FROM ALERT A INNER JOIN ALERT_RCPT AR ON AR.ALERT_ID = A.ALERT_ID
	WHERE A.JOB_NUMBER = @JOB_NUMBER AND A.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND ALERT_LEVEL <> 'PST'
	GROUP BY ISNULL(ASSIGNED_EMP_CODE, AR.EMP_CODE)) AS A GROUP BY A.EMP_CODE) AS C ON T.EMP_CODE = C.EMP_CODE;

UPDATE @TEAM SET ACTUAL_HOURS = E.SUM_HRS
FROM @TEAM AS T INNER JOIN (
	SELECT ET.EMP_CODE, SUM(EMP_HOURS) AS SUM_HRS
	FROM EMP_TIME_DTL AS ETD WITH(NOLOCK) INNER JOIN EMP_TIME AS ET WITH(NOLOCK) ON ETD.ET_ID = ET.ET_ID LEFT OUTER JOIN ALERT AS A ON A.ALERT_ID = ETD.ALERT_ID
	WHERE ((ETD.JOB_NUMBER = @JOB_NUMBER AND ETD.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR))
	GROUP BY ET.EMP_CODE) AS E ON T.EMP_CODE = E.EMP_CODE;

SELECT
	T.TEAM_TYPE AS TeamTypeID,
	T.EMP_CODE AS EmployeeCode,
	T.EMP_TITLE AS Title,
	T.EMP_FNAME AS FirstName,
	T.EMP_LNAME AS LastName,
	T.EMP_MI AS MiddleInitial,
	T.EMP_IMAGE AS BinaryImage,
	T.EMP_NICKNAME AS Nickname,
	ISNULL(T.TASK_COUNT, 0) AS TaskCount,
	ISNULL(T.HOURS_TOTAL, 0.00) AS TotalHours,
	ISNULL(T.ACTUAL_HOURS, 0.00) AS ActualHours,
	CASE 
		WHEN (NOT T.EMP_FNAME IS NULL) AND (NOT T.EMP_NICKNAME IS NULL) AND RTRIM(LTRIM(UPPER(T.EMP_FNAME))) <> RTRIM(LTRIM(UPPER(T.EMP_NICKNAME))) AND LEN(RTRIM(LTRIM(UPPER(T.EMP_NICKNAME)))) > 0 THEN ISNULL(T.EMP_FNAME, '') + ISNULL(' "' + T.EMP_NICKNAME + '" ', '') + ISNULL(T.EMP_LNAME, '')
		ELSE ISNULL(T.EMP_FNAME + ' ', '') + ISNULL(EMP_MI + '. ', '') + ISNULL(T.EMP_LNAME, '') 
	END
	AS DisplayName,
	EMAIL_GROUP AS EmailGroupCode,
	TRAFFIC_COLUMN_CODE AS TrafficColumnCode,
	MANAGER_TYPE AS ManagerType
FROM @TEAM AS T;

/*================ QUERY ================*/
END

