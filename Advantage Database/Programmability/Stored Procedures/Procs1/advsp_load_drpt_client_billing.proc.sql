if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[advsp_load_drpt_client_billing]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[advsp_load_drpt_client_billing]
GO

CREATE PROCEDURE [dbo].[advsp_load_drpt_client_billing] 
(
@StartPeriod varchar(6),
@EndPeriod varchar(6),
@Query int
)
AS

CREATE TABLE #CLIENT_BILLING 
	(
		[ID] [int] IDENTITY(1,1) NOT NULL,
		[ClientCode] varchar(6),
		[ClientDescription] varchar(40),
		[DivisionCode] varchar(6),
		[DivisionDescription] varchar(40),
		[ProductCode] varchar(6),
		[ProductDescription] varchar(40),
		[PostingPeriod] varchar(6),
		--[TransactionDate] smalldatetime,
		--[Type] varchar(50),
		[ClientBilledFee] decimal(18,2),
		[ClientBilledCost] decimal(18,2),
		[ClientCashFee] decimal(18,2),
		[ClientCashCost] decimal(18,2),
		[OtherCashReceivedAmount] decimal(18,2),
		[ClientVendorInvoice] decimal(18,2),
		[ClientVendorInvoicePaid] decimal(18,2),
		[NonBillableVendorInvoice] decimal(18,2),
		[NonBillableVendorInvoicePaid] decimal(18,2),
		[ClientVendorPaidUncleared] decimal(18,2),
		[NonBillableVendorUncleared] decimal(18,2),
		[AP_ID] int,
		[MANUAL_INV] smallint
	);	

CREATE TABLE #CASH 
	(
		[ID] [int] IDENTITY(1,1) NOT NULL,
		[ClientCode] varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
		[ClientDescription] varchar(40),
		--[DivisionCode] varchar(6),
		--[DivisionDescription] varchar(40),
		--[ProductCode] varchar(6),
		--[ProductDescription] varchar(40),
		--[PostingPeriod] varchar(6),
		--[AR_INV_NBR] int,
		--[AR_INV_SEQ] smallint,
		--[AR_TYPE] varchar(2),
		[CRAmount] decimal(18,2),
		[ARSummary] decimal(18,2),
		[ClientCashFee] decimal(18,2),
		[ClientCashCost] decimal(18,2)
	);	

CREATE TABLE #PAID 
	(
		[ID] [int] IDENTITY(1,1) NOT NULL,
		[AP_ID] int,
		[ClientCode] varchar(6),
		[ClientDescription] varchar(40),
		[DivisionCode] varchar(6),
		[DivisionDescription] varchar(40),
		[ProductCode] varchar(6),
		[ProductDescription] varchar(40),
		[PostingPeriod] varchar(6),
		[CheckNumber] int,
		[CheckAmount] decimal(18,2),
		[APAmount] decimal(18,2),
		[ClientAmount] decimal(18,2),
		[NonBillableAmount] decimal(18,2),
		[ClientAmountUncleared] decimal(18,2),
		[NonBillableAmountUncleared] decimal(18,2),
		[Cleared] smallint,
		[BankCode] varchar(4) COLLATE SQL_Latin1_General_CP1_CS_AS
	);	

CREATE TABLE #CLIENT_BILLING_TYPE 
	(
		[ID] [int] IDENTITY(1,1) NOT NULL,
		[ClientCode] varchar(6),
		[ClientDescription] varchar(40),
		[DivisionCode] varchar(6),
		[DivisionDescription] varchar(40),
		[ProductCode] varchar(6),
		[ProductDescription] varchar(40),
		[PostingPeriod] varchar(6),
		--[TransactionDate] smalldatetime,
		[Type] varchar(50),
		[FeeAmount] decimal(18,2),	
		[CostAmount] decimal(18,2),	
		[AP_ID] int
	);	

if @Query = 1
Begin
 --BIlled Information (Fee & Cost)
	INSERT INTO #CLIENT_BILLING
	SELECT AR.CL_CODE, C.CL_NAME, AR.DIV_CODE, D.DIV_NAME, AR.PRD_CODE, P.PRD_DESCRIPTION, ACR.AR_POST_PERIOD, 
		SUM(ISNULL(AR.EMP_TIME_AMT,0)+ISNULL(AR.INC_ONLY_AMT,0)+ISNULL(AR.COMMISSION_AMT,0)+ISNULL(AR.REBATE_AMT,0)+ISNULL(AR.ADDITIONAL_AMT,0)+ISNULL(AR.AB_INC_AMT,0)+ISNULL(AR.AB_COMMISSION_AMT,0)+ISNULL(AR.AB_SALE_AMT,0)),
		SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.CITY_TAX_AMT,0)+ISNULL(AR.CNTY_TAX_AMT,0)+ISNULL(AR.STATE_TAX_AMT,0)),0,0,0,0,0,0,0,0,0,0,0
	FROM AR_SUMMARY AR INNER JOIN 
		 ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE INNER JOIN
		 PRODUCT P ON P.PRD_CODE = AR.PRD_CODE AND P.DIV_CODE = AR.DIV_CODE AND P.CL_CODE = AR.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE	
	WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0)
	GROUP BY AR.CL_CODE, C.CL_NAME, AR.DIV_CODE, D.DIV_NAME, AR.PRD_CODE, P.PRD_DESCRIPTION, ACR.AR_POST_PERIOD

 --Manual Invoices
  INSERT INTO #CLIENT_BILLING
	SELECT ACR.CL_CODE, C.CL_NAME, ACR.DIV_CODE, D.DIV_NAME, ACR.PRD_CODE, P.PRD_DESCRIPTION, ACR.AR_POST_PERIOD, 
		SUM(ISNULL(ACR.AR_INV_AMOUNT,0)) - SUM(ISNULL(ACR.AR_COS_AMT,0)+ISNULL(ACR.AR_CITY_AMT,0)+ISNULL(ACR.AR_COUNTY_AMT,0)+ISNULL(ACR.AR_STATE_AMT,0)),
		SUM(ISNULL(ACR.AR_COS_AMT,0)+ISNULL(ACR.AR_CITY_AMT,0)+ISNULL(ACR.AR_COUNTY_AMT,0)+ISNULL(ACR.AR_STATE_AMT,0)),0,0,0,0,0,0,0,0,0,0,1
	FROM ACCT_REC ACR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = ACR.PRD_CODE AND P.DIV_CODE = ACR.DIV_CODE AND P.CL_CODE = ACR.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE	
	WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND ACR.MANUAL_INV = 1
	GROUP BY ACR.CL_CODE, C.CL_NAME, ACR.DIV_CODE, D.DIV_NAME, ACR.PRD_CODE, P.PRD_DESCRIPTION, ACR.AR_POST_PERIOD
 
 --Client Cash (fee)
  INSERT INTO #CASH
  SELECT DISTINCT CC.CL_CODE, C.CL_NAME, SUM(ISNULL(CCD.CR_PAY_AMT,0)) + SUM(ISNULL(CCD.CR_ADJ_AMT,0)),0,0,0
	FROM CR_CLIENT_DTL CCD INNER JOIN CR_CLIENT CC ON CCD.REC_ID = CC.REC_ID LEFT OUTER JOIN
		 CLIENT C ON C.CL_CODE = CC.CL_CODE			
	WHERE CCD.POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND CC.SEQ_NBR = (SELECT MAX(CR_CLIENT_DTL.SEQ_NBR) FROM CR_CLIENT_DTL WHERE CR_CLIENT_DTL.SEQ_NBR = CCD.SEQ_NBR)
	GROUP BY CC.CL_CODE, C.CL_NAME 


--UPDATE #CASH
-- SET ClientCashFee = 
--			CASE WHEN (SELECT SUM(ISNULL(AR.TOTAL_BILL,0)) 
--						FROM AR_SUMMARY AR INNER JOIN 
--							ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
--						WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = #CASH.ClientCode
--						AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0)) = [CRAmount] THEN
--					  (SELECT SUM(ISNULL(AR.EMP_TIME_AMT,0)+ISNULL(AR.INC_ONLY_AMT,0)+ISNULL(AR.COMMISSION_AMT,0)+ISNULL(AR.REBATE_AMT,0)+ISNULL(AR.ADDITIONAL_AMT,0)+ISNULL(AR.AB_INC_AMT,0)+ISNULL(AR.AB_COMMISSION_AMT,0)+ISNULL(AR.AB_SALE_AMT,0))
--				FROM AR_SUMMARY AR INNER JOIN 
--					ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
--				WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = #CASH.ClientCode AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0)) ELSE 
--			CASE WHEN (SELECT SUM(ISNULL(AR.TOTAL_BILL,0)) 
--						FROM AR_SUMMARY AR INNER JOIN 
--							ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
--						WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = #CASH.ClientCode
--						AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0)) IS NULL THEN
--				CASE WHEN [CRAmount] <= (SELECT SUM(ISNULL(ACR.AR_COS_AMT,0)+ISNULL(ACR.AR_CITY_AMT,0)+ISNULL(ACR.AR_COUNTY_AMT,0)+ISNULL(ACR.AR_STATE_AMT,0))
--						FROM ACCT_REC ACR 
--						WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND ACR.CL_CODE = #CASH.ClientCode
--								AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0) AND ACR.MANUAL_INV = 1)	THEN 0 ELSE ([CRAmount] - (SELECT SUM(ISNULL(ACR.AR_COS_AMT,0)+ISNULL(ACR.AR_CITY_AMT,0)+ISNULL(ACR.AR_COUNTY_AMT,0)+ISNULL(ACR.AR_STATE_AMT,0))
--														FROM ACCT_REC ACR 
--														WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND ACR.CL_CODE = #CASH.ClientCode
--																AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0) AND ACR.MANUAL_INV = 1)) END ELSE
--				CASE WHEN [CRAmount] <= (SELECT SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.CITY_TAX_AMT,0)+ISNULL(AR.CNTY_TAX_AMT,0)+ISNULL(AR.STATE_TAX_AMT,0))
--					FROM AR_SUMMARY AR INNER JOIN 
--						ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
--					WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = #CASH.ClientCode
--							AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0)) THEN 0 ELSE ([CRAmount] - (SELECT SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.CITY_TAX_AMT,0)+ISNULL(AR.CNTY_TAX_AMT,0)+ISNULL(AR.STATE_TAX_AMT,0))
--					FROM AR_SUMMARY AR INNER JOIN 
--						ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
--					WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = #CASH.ClientCode
--							AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0))) END END END,
--	 ClientCashCost = 
--			CASE WHEN (SELECT SUM(ISNULL(AR.TOTAL_BILL,0)) 
--						FROM AR_SUMMARY AR INNER JOIN 
--							ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
--						WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = #CASH.ClientCode
--						AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0)) = [CRAmount] THEN
--					  (SELECT SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.CITY_TAX_AMT,0)+ISNULL(AR.CNTY_TAX_AMT,0)+ISNULL(AR.STATE_TAX_AMT,0))
--							FROM AR_SUMMARY AR INNER JOIN 
--								ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
--							WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE =  #CASH.ClientCode AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0)) ELSE 
--			CASE WHEN (SELECT SUM(ISNULL(AR.TOTAL_BILL,0)) 
--						FROM AR_SUMMARY AR INNER JOIN 
--							ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
--						WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = #CASH.ClientCode
--						AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0)) IS NULL THEN
--				CASE WHEN [CRAmount] <= (SELECT SUM(ISNULL(ACR.AR_COS_AMT,0)+ISNULL(ACR.AR_CITY_AMT,0)+ISNULL(ACR.AR_COUNTY_AMT,0)+ISNULL(ACR.AR_STATE_AMT,0))
--						FROM ACCT_REC ACR 
--						WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND ACR.CL_CODE = #CASH.ClientCode
--								AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0) AND ACR.MANUAL_INV = 1)	THEN [CRAmount] ELSE ((SELECT SUM(ISNULL(ACR.AR_COS_AMT,0)+ISNULL(ACR.AR_CITY_AMT,0)+ISNULL(ACR.AR_COUNTY_AMT,0)+ISNULL(ACR.AR_STATE_AMT,0))
--														FROM ACCT_REC ACR 
--														WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND ACR.CL_CODE = #CASH.ClientCode
--																AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0) AND ACR.MANUAL_INV = 1)) END ELSE
--				CASE WHEN [CRAmount] <= (SELECT SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.CITY_TAX_AMT,0)+ISNULL(AR.CNTY_TAX_AMT,0)+ISNULL(AR.STATE_TAX_AMT,0))
--					FROM AR_SUMMARY AR INNER JOIN 
--						ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
--					WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = #CASH.ClientCode
--							AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0)) THEN [CRAmount] ELSE ((SELECT SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.CITY_TAX_AMT,0)+ISNULL(AR.CNTY_TAX_AMT,0)+ISNULL(AR.STATE_TAX_AMT,0))
--					FROM AR_SUMMARY AR INNER JOIN 
--						ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
--					WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = #CASH.ClientCode
--							AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0))) END END END


 DECLARE @ROW_ID_CASH AS INT,
			@CURR_CLIENT AS VARCHAR(6),
			@CURR_DIVISION AS VARCHAR(6),
			@CURR_PRODUCT AS VARCHAR(6),
	        @CURR_CR_AMOUNT DECIMAL(18,6),
			@CURR_AR_SUMMARY DECIMAL(18,6),
			@CURR_COST_CASH DECIMAL(18,6),
			@CURR_FEE_CASH DECIMAL(18,6),
			@CURR_CASH_DIFF DECIMAL(18,6)

	DECLARE MY_ROWS_CASH                         CURSOR  
        FOR
	        SELECT ID, [ClientCode],[CRAmount]
	        FROM   #CASH
			WHERE [CRAmount] <> 0
        ;
        OPEN MY_ROWS_CASH;
        FETCH NEXT FROM MY_ROWS_CASH INTO @ROW_ID_CASH,@CURR_CLIENT,@CURR_CR_AMOUNT;
        WHILE @@FETCH_STATUS = 0
        BEGIN
	        SELECT @CURR_AR_SUMMARY = SUM(ISNULL(AR.TOTAL_BILL,0))			
			FROM AR_SUMMARY AR INNER JOIN 
				ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
			WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = @CURR_CLIENT AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0)
	        
			--SELECT @CURR_AR_SUMMARY,@CURR_CR_AMOUNT

			IF @CURR_AR_SUMMARY = @CURR_CR_AMOUNT
			BEGIN
				UPDATE #CASH SET ClientCashFee = (SELECT SUM(ISNULL(AR.EMP_TIME_AMT,0)+ISNULL(AR.INC_ONLY_AMT,0)+ISNULL(AR.COMMISSION_AMT,0)+ISNULL(AR.REBATE_AMT,0)+ISNULL(AR.ADDITIONAL_AMT,0)+ISNULL(AR.AB_INC_AMT,0)+ISNULL(AR.AB_COMMISSION_AMT,0)+ISNULL(AR.AB_SALE_AMT,0))
				FROM AR_SUMMARY AR INNER JOIN 
					ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
				WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = @CURR_CLIENT AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0))
				WHERE ID = @ROW_ID_CASH

				UPDATE #CASH SET ClientCashCost = (SELECT SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.CITY_TAX_AMT,0)+ISNULL(AR.CNTY_TAX_AMT,0)+ISNULL(AR.STATE_TAX_AMT,0))
				FROM AR_SUMMARY AR INNER JOIN 
					ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
				WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = @CURR_CLIENT AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0))
				WHERE ID = @ROW_ID_CASH
			END
			ELSE
			BEGIN	
				if @CURR_AR_SUMMARY IS NULL
				BEGIN
					SELECT @CURR_AR_SUMMARY = SUM(ISNULL(ACR.AR_INV_AMOUNT,0))			
					FROM ACCT_REC ACR 
					WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND ACR.CL_CODE = @CURR_CLIENT AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0) AND ACR.MANUAL_INV = 1

					SELECT @CURR_FEE_CASH = SUM(ISNULL(ACR.AR_INV_AMOUNT,0)) - SUM(ISNULL(ACR.AR_COS_AMT,0)+ISNULL(ACR.AR_CITY_AMT,0)+ISNULL(ACR.AR_COUNTY_AMT,0)+ISNULL(ACR.AR_STATE_AMT,0))
					FROM ACCT_REC ACR 
					WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND ACR.CL_CODE = @CURR_CLIENT AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0) AND ACR.MANUAL_INV = 1

					SELECT @CURR_COST_CASH = SUM(ISNULL(ACR.AR_COS_AMT,0)+ISNULL(ACR.AR_CITY_AMT,0)+ISNULL(ACR.AR_COUNTY_AMT,0)+ISNULL(ACR.AR_STATE_AMT,0))
					FROM ACCT_REC ACR 
					WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND ACR.CL_CODE = @CURR_CLIENT AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0) AND ACR.MANUAL_INV = 1
				END
				ELSE
				BEGIN
					SELECT @CURR_FEE_CASH = SUM(ISNULL(AR.EMP_TIME_AMT,0)+ISNULL(AR.INC_ONLY_AMT,0)+ISNULL(AR.COMMISSION_AMT,0)+ISNULL(AR.REBATE_AMT,0)+ISNULL(AR.ADDITIONAL_AMT,0)+ISNULL(AR.AB_INC_AMT,0)+ISNULL(AR.AB_COMMISSION_AMT,0)+ISNULL(AR.AB_SALE_AMT,0))
					FROM AR_SUMMARY AR INNER JOIN 
						ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
					WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = @CURR_CLIENT AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0)

					SELECT @CURR_COST_CASH = SUM(ISNULL(AR.COST_AMT,0)+ISNULL(AR.NET_CHARGE_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)+ISNULL(AR.DISCOUNT_AMT,0)+ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.CITY_TAX_AMT,0)+ISNULL(AR.CNTY_TAX_AMT,0)+ISNULL(AR.STATE_TAX_AMT,0))
					FROM AR_SUMMARY AR INNER JOIN 
						ACCT_REC ACR ON ACR.AR_INV_NBR = AR.AR_INV_NBR AND ACR.AR_INV_SEQ = AR.AR_INV_SEQ AND ACR.AR_TYPE = AR.AR_TYPE
					WHERE ACR.AR_POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod AND AR.CL_CODE = @CURR_CLIENT AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACR.AR_INV_SEQ = 99 OR ACR.AR_INV_SEQ = 0)									
				END

				--SELECT @CURR_AR_SUMMARY,@CURR_CR_AMOUNT,@CURR_FEE_CASH,@CURR_COST_CASH

				IF @CURR_CR_AMOUNT <= @CURR_COST_CASH
				BEGIN
					UPDATE #CASH SET ClientCashFee = 0
					WHERE ID = @ROW_ID_CASH

					UPDATE #CASH SET ClientCashCost = @CURR_CR_AMOUNT
					WHERE ID = @ROW_ID_CASH
				END
				ELSE
				BEGIN
					SET @CURR_CASH_DIFF = @CURR_CR_AMOUNT - @CURR_COST_CASH
					
					UPDATE #CASH SET ClientCashFee = @CURR_CASH_DIFF
					WHERE ID = @ROW_ID_CASH

					UPDATE #CASH SET ClientCashCost = @CURR_COST_CASH
					WHERE ID = @ROW_ID_CASH
				END

			END			
			
	        --GO TO NEXT EVENT
	        FETCH NEXT FROM MY_ROWS_CASH INTO  @ROW_ID_CASH,@CURR_CLIENT,@CURR_CR_AMOUNT;
        END
        CLOSE MY_ROWS_CASH;
        DEALLOCATE MY_ROWS_CASH;

	 INSERT INTO #CLIENT_BILLING
	 SELECT [ClientCode],[ClientDescription],'','','','','',0,0,[ClientCashFee],[ClientCashCost],0,0,0,0,0,0,0,0,0
	 FROM #CASH

--	 Client Cash (Fee)
	INSERT INTO #CLIENT_BILLING
	SELECT CC.CL_CODE, C.CL_NAME, CCD.DIV_CODE, D.DIV_NAME, CCD.PRD_CODE, P.PRD_DESCRIPTION, CCD.POST_PERIOD, 0,0,
	 SUM(ISNULL(CCD.CR_OA_AMT,0)),0,0,0,0,0,0,0,0,0,0
	FROM CR_ON_ACCT CCD INNER JOIN CR_CLIENT CC ON CCD.REC_ID = CC.REC_ID INNER JOIN
		 PRODUCT P ON P.PRD_CODE = CCD.PRD_CODE AND P.DIV_CODE = CCD.DIV_CODE AND P.CL_CODE = CC.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE			
	WHERE CCD.POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod
	GROUP BY CC.CL_CODE, C.CL_NAME, CCD.DIV_CODE, D.DIV_NAME, CCD.PRD_CODE, P.PRD_DESCRIPTION, CCD.POST_PERIOD

                
 --Vendor Invoices
	INSERT INTO #CLIENT_BILLING
	SELECT JL.CL_CODE, C.CL_NAME, JL.DIV_CODE, D.DIV_NAME, JL.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD, 0,0,0,0,0,
		   CASE WHEN ISNULL(APP.AP_PROD_NOBILL_FLG, 0) = 1 THEN 0 ELSE SUM(ISNULL(APP.AP_PROD_EXT_AMT, 0) + ISNULL(APP.EXT_NONRESALE_TAX, 0)) END,0,
		   CASE WHEN ISNULL(APP.AP_PROD_NOBILL_FLG, 0) = 1 THEN SUM(ISNULL(APP.AP_PROD_EXT_AMT, 0) + ISNULL(APP.EXT_NONRESALE_TAX, 0)) ELSE 0 END,0,0,0,APP.AP_ID,0
	FROM AP_PRODUCTION AS APP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = APP.AP_ID AND 
									   APH.AP_SEQ = APP.AP_SEQ INNER JOIN 
		 JOB_LOG AS JL ON JL.JOB_NUMBER = APP.JOB_NUMBER INNER JOIN
		 PRODUCT P ON P.PRD_CODE = JL.PRD_CODE AND P.DIV_CODE = JL.DIV_CODE AND P.CL_CODE = JL.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE				
	WHERE APP.POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod
	GROUP BY JL.CL_CODE, C.CL_NAME, JL.DIV_CODE, D.DIV_NAME, JL.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD, AP_PROD_NOBILL_FLG,APP.AP_ID
		 	
	--Magazine
	INSERT INTO #CLIENT_BILLING
	SELECT MH.CL_CODE, C.CL_NAME, MH.DIV_CODE, D.DIV_NAME, MH.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD, 0,0,0,0,0,
		   SUM(ISNULL(APP.DISBURSED_AMT, 0)),0,0,0,0,0,APP.AP_ID,0
	FROM AP_MAGAZINE AS APP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = APP.AP_ID AND 
									   APH.AP_SEQ = APP.AP_SEQ INNER JOIN
		V_MAG_HEADER MH ON MH.ORDER_NBR = APP.ORDER_NBR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = MH.PRD_CODE AND P.DIV_CODE = MH.DIV_CODE AND P.CL_CODE = MH.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE					
	WHERE APP.POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod	
	GROUP BY MH.CL_CODE, C.CL_NAME, MH.DIV_CODE, D.DIV_NAME, MH.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD,APP.AP_ID

	--Newpaper
	INSERT INTO #CLIENT_BILLING
	SELECT NH.CL_CODE, C.CL_NAME, NH.DIV_CODE, D.DIV_NAME, NH.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD, 0,0,0,0,0,
		   SUM(ISNULL(APP.DISBURSED_AMT, 0)),0,0,0,0,0,APP.AP_ID,0
	FROM AP_NEWSPAPER AS APP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = APP.AP_ID AND 
									   APH.AP_SEQ = APP.AP_SEQ INNER JOIN
		V_NEWS_HEADER NH ON NH.ORDER_NBR = APP.ORDER_NBR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = NH.PRD_CODE AND P.DIV_CODE = NH.DIV_CODE AND P.CL_CODE = NH.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE					
	WHERE APP.POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod	
	GROUP BY NH.CL_CODE, C.CL_NAME, NH.DIV_CODE, D.DIV_NAME, NH.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD,APP.AP_ID

	--Internet
	INSERT INTO #CLIENT_BILLING
	SELECT IH.CL_CODE, C.CL_NAME, IH.DIV_CODE, D.DIV_NAME, IH.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD, 0,0,0,0,0,
		   SUM(ISNULL(APP.NETCHARGES, 0) + ISNULL(APP.NET_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.DISCOUNT_AMT, 0)),0,0,0,0,0,APP.AP_ID,0
	FROM AP_INTERNET AS APP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = APP.AP_ID AND 
									   APH.AP_SEQ = APP.AP_SEQ INNER JOIN
		INTERNET_HEADER IH ON IH.ORDER_NBR = APP.ORDER_NBR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = IH.PRD_CODE AND P.DIV_CODE = IH.DIV_CODE AND P.CL_CODE = IH.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE				
	WHERE APP.POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod		
	GROUP BY IH.CL_CODE, C.CL_NAME, IH.DIV_CODE, D.DIV_NAME, IH.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD,APP.AP_ID

	--Outdoor
	INSERT INTO #CLIENT_BILLING
	SELECT OH.CL_CODE, C.CL_NAME, OH.DIV_CODE, D.DIV_NAME, OH.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD, 0,0,0,0,0,
		   SUM(ISNULL(APP.NETCHARGES, 0) + ISNULL(APP.NET_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.DISCOUNT_AMT, 0)),0,0,0,0,0,APP.AP_ID,0
	FROM AP_OUTDOOR AS APP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = APP.AP_ID AND 
									   APH.AP_SEQ = APP.AP_SEQ INNER JOIN
		OUTDOOR_HEADER OH ON OH.ORDER_NBR = APP.ORDER_NBR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = OH.PRD_CODE AND P.DIV_CODE = OH.DIV_CODE AND P.CL_CODE = OH.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE				
	WHERE APP.POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod		
	GROUP BY OH.CL_CODE, C.CL_NAME, OH.DIV_CODE, D.DIV_NAME, OH.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD,APP.AP_ID

	--Radio
	INSERT INTO #CLIENT_BILLING
	SELECT RH.CL_CODE, C.CL_NAME, RH.DIV_CODE, D.DIV_NAME, RH.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD, 0,0,0,0,0,
		   SUM(ISNULL(APP.EXT_NET_AMT, 0) + ISNULL(APP.DISC_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.NETCHARGES, 0)),0,0,0,0,0,APP.AP_ID,0
	FROM AP_RADIO AS APP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = APP.AP_ID AND 
									   APH.AP_SEQ = APP.AP_SEQ INNER JOIN 
						(SELECT DISTINCT 
							RH.ORDER_NBR,
							RH.CL_CODE, 
							RH.DIV_CODE, 
							RH.PRD_CODE
						FROM 
							[dbo].[RADIO_HEADER] AS RH
						UNION
						SELECT DISTINCT 
							RH.ORDER_NBR,
							RH.CL_CODE, 
							RH.DIV_CODE, 
							RH.PRD_CODE
						FROM 
							[dbo].[RADIO_HDR] AS RH	
							) AS RH ON RH.ORDER_NBR = APP.ORDER_NBR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = RH.PRD_CODE AND P.DIV_CODE = RH.DIV_CODE AND P.CL_CODE = RH.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE				
	WHERE APP.POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod		
	GROUP BY RH.CL_CODE, C.CL_NAME, RH.DIV_CODE, D.DIV_NAME, RH.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD,APP.AP_ID

	--TV
	INSERT INTO #CLIENT_BILLING
	SELECT TH.CL_CODE, C.CL_NAME, TH.DIV_CODE, D.DIV_NAME, TH.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD, 0,0,0,0,0,
		   SUM(ISNULL(APP.EXT_NET_AMT, 0) + ISNULL(APP.DISC_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.NETCHARGES, 0)),0,0,0,0,0,APP.AP_ID,0
	FROM AP_TV AS APP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = APP.AP_ID AND 
									   APH.AP_SEQ = APP.AP_SEQ INNER JOIN 
						(SELECT DISTINCT 
							TH.ORDER_NBR,
							TH.CL_CODE, 
							TH.DIV_CODE, 
							TH.PRD_CODE
						FROM 
							[dbo].[TV_HEADER] AS TH
						UNION
						SELECT DISTINCT 
							TH.ORDER_NBR,
							TH.CL_CODE, 
							TH.DIV_CODE, 
							TH.PRD_CODE
						FROM 
							[dbo].[TV_HDR] AS TH	
							) AS TH ON TH.ORDER_NBR = APP.ORDER_NBR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = TH.PRD_CODE AND P.DIV_CODE = TH.DIV_CODE AND P.CL_CODE = TH.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE				
	WHERE APP.POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod		
	GROUP BY TH.CL_CODE, C.CL_NAME, TH.DIV_CODE, D.DIV_NAME, TH.PRD_CODE, P.PRD_DESCRIPTION, APP.POST_PERIOD,APP.AP_ID

	--AP GL DIST
	INSERT INTO #CLIENT_BILLING
	SELECT 'Agency', 'Agency', 'Agency', 'Agency', 'Agency', 'Agency', APP.POST_PERIOD, 0,0,0,0,0,
		   0,0,SUM(ISNULL(APP.AP_GL_AMT, 0)),0,0,0,APP.AP_ID,0
	FROM AP_GL_DIST AS APP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = APP.AP_ID AND 
									   APH.AP_SEQ = APP.AP_SEQ			
	WHERE APP.POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod
	GROUP BY APP.POST_PERIOD,APP.AP_ID
	
	--SELECT * FROM #CLIENT_BILLING

	--Paid
	INSERT INTO #PAID
	SELECT AP_PMT_HIST.AP_ID,'', '', '', '', '', '', '', AP_PMT_HIST.AP_CHK_NBR,ISNULL(SUM(AP_CHK_AMT),0), 0,0,0,0,0,0,[BK_CODE]
	FROM AP_PMT_HIST
	WHERE AP_PMT_HIST.POST_PERIOD BETWEEN @StartPeriod AND @EndPeriod
	GROUP BY AP_PMT_HIST.AP_ID, AP_PMT_HIST.AP_CHK_NBR,[BK_CODE]

	UPDATE #PAID
	SET [Cleared] = (SELECT ISNULL(CLEARED,0) FROM CHECK_REGISTER WHERE #PAID.CheckNumber = CHECK_REGISTER.CHECK_NBR AND #PAID.BankCode = CHECK_REGISTER.BK_CODE)

		--AP_PRODUCTION
	UPDATE #PAID
	SET [ClientCode] = JL.CL_CODE,
		[ClientDescription] = C.CL_NAME,
		[APAmount] = (SELECT SUM(ISNULL(AP_PROD_EXT_AMT,0)) + SUM(ISNULL(EXT_NONRESALE_TAX,0)) FROM AP_PRODUCTION APP WHERE #PAID.AP_ID = APP.AP_ID),
		[ClientAmount] = CASE WHEN ISNULL(AP.AP_PROD_NOBILL_FLG, 0) = 1 THEN 0 ELSE 
			CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(AP_PROD_EXT_AMT,0)) + SUM(ISNULL(EXT_NONRESALE_TAX,0)) FROM AP_PRODUCTION APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(AP_PROD_EXT_AMT,0)) + SUM(ISNULL(EXT_NONRESALE_TAX,0)) FROM AP_PRODUCTION APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END END,		 
		[NonBillableAmount] = CASE WHEN ISNULL(AP.AP_PROD_NOBILL_FLG, 0) = 1 THEN CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(AP_PROD_EXT_AMT,0)) + SUM(ISNULL(EXT_NONRESALE_TAX,0)) FROM AP_PRODUCTION APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(AP_PROD_EXT_AMT,0)) + SUM(ISNULL(EXT_NONRESALE_TAX,0)) FROM AP_PRODUCTION APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END ELSE 0 END,
		[ClientAmountUncleared] = CASE WHEN #PAID.Cleared = 0 THEN
			CASE WHEN ISNULL(AP.AP_PROD_NOBILL_FLG, 0) = 1 THEN 0 ELSE 
			CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(AP_PROD_EXT_AMT,0)) + SUM(ISNULL(EXT_NONRESALE_TAX,0)) FROM AP_PRODUCTION APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(AP_PROD_EXT_AMT,0)) + SUM(ISNULL(EXT_NONRESALE_TAX,0)) FROM AP_PRODUCTION APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END END ELSE 0 END,		 
		[NonBillableAmountUncleared] = CASE WHEN #PAID.Cleared = 0 THEN
				CASE WHEN ISNULL(AP.AP_PROD_NOBILL_FLG, 0) = 1 THEN CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(AP_PROD_EXT_AMT,0)) + SUM(ISNULL(EXT_NONRESALE_TAX,0)) FROM AP_PRODUCTION APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(AP_PROD_EXT_AMT,0)) + SUM(ISNULL(EXT_NONRESALE_TAX,0)) FROM AP_PRODUCTION APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END ELSE 0 END ELSE 0 END
	FROM AP_PRODUCTION AP INNER JOIN
         JOB_LOG JL ON AP.JOB_NUMBER = JL.JOB_NUMBER INNER JOIN
		 PRODUCT P ON P.PRD_CODE = JL.PRD_CODE AND P.DIV_CODE = JL.DIV_CODE AND P.CL_CODE = JL.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE	
	WHERE #PAID.AP_ID = AP.AP_ID	 			

	--Magazine
	UPDATE #PAID
	SET [ClientCode] = MH.CL_CODE,
		[ClientDescription] = C.CL_NAME,
		[APAmount] = (SELECT SUM(ISNULL(APP.DISBURSED_AMT, 0)) FROM AP_MAGAZINE APP WHERE #PAID.AP_ID = APP.AP_ID),
		[ClientAmount] = CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.DISBURSED_AMT, 0)) FROM AP_MAGAZINE APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.DISBURSED_AMT, 0)) FROM AP_MAGAZINE APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END,
		[ClientAmountUncleared] = CASE WHEN #PAID.Cleared = 0 THEN  
			CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.DISBURSED_AMT, 0)) FROM AP_MAGAZINE APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.DISBURSED_AMT, 0)) FROM AP_MAGAZINE APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END ELSE 0 END
	FROM AP_MAGAZINE AS AP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = AP.AP_ID AND 
									   APH.AP_SEQ = AP.AP_SEQ INNER JOIN
		V_MAG_HEADER MH ON MH.ORDER_NBR = AP.ORDER_NBR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = MH.PRD_CODE AND P.DIV_CODE = MH.DIV_CODE AND P.CL_CODE = MH.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE					
	WHERE #PAID.AP_ID = AP.AP_ID	 	

	--Newpaper
	UPDATE #PAID
	SET [ClientCode] = NH.CL_CODE,
		[ClientDescription] = C.CL_NAME,
		[APAmount] = (SELECT SUM(ISNULL(APP.DISBURSED_AMT, 0)) FROM AP_NEWSPAPER APP WHERE #PAID.AP_ID = APP.AP_ID),
		[ClientAmount] = CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.DISBURSED_AMT, 0)) FROM AP_NEWSPAPER APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.DISBURSED_AMT, 0)) FROM AP_NEWSPAPER APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END,
		[ClientAmountUncleared] = CASE WHEN #PAID.Cleared = 0 THEN 
			CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.DISBURSED_AMT, 0)) FROM AP_NEWSPAPER APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.DISBURSED_AMT, 0)) FROM AP_NEWSPAPER APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END ELSE 0 END
	FROM AP_NEWSPAPER AS AP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = AP.AP_ID AND 
									   APH.AP_SEQ = AP.AP_SEQ INNER JOIN
		V_NEWS_HEADER NH ON NH.ORDER_NBR = AP.ORDER_NBR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = NH.PRD_CODE AND P.DIV_CODE = NH.DIV_CODE AND P.CL_CODE = NH.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE					
	WHERE #PAID.AP_ID = AP.AP_ID	 

	--Internet
	UPDATE #PAID
	SET [ClientCode] = IH.CL_CODE,
		[ClientDescription] = C.CL_NAME,
		[APAmount] = (SELECT SUM(ISNULL(APP.NETCHARGES, 0) + ISNULL(APP.NET_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.DISCOUNT_AMT, 0)) FROM AP_INTERNET APP WHERE #PAID.AP_ID = APP.AP_ID),
		[ClientAmount] = CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.NETCHARGES, 0) + ISNULL(APP.NET_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.DISCOUNT_AMT, 0)) FROM AP_INTERNET APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.NETCHARGES, 0) + ISNULL(APP.NET_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.DISCOUNT_AMT, 0)) FROM AP_INTERNET APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END,
		[ClientAmountUncleared] = CASE WHEN #PAID.Cleared = 0 THEN
			CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.NETCHARGES, 0) + ISNULL(APP.NET_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.DISCOUNT_AMT, 0)) FROM AP_INTERNET APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.NETCHARGES, 0) + ISNULL(APP.NET_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.DISCOUNT_AMT, 0)) FROM AP_INTERNET APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END ELSE 0 END
	FROM AP_INTERNET AS AP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = AP.AP_ID AND 
									   APH.AP_SEQ = AP.AP_SEQ INNER JOIN
		INTERNET_HEADER IH ON IH.ORDER_NBR = AP.ORDER_NBR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = IH.PRD_CODE AND P.DIV_CODE = IH.DIV_CODE AND P.CL_CODE = IH.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE				
	WHERE #PAID.AP_ID = AP.AP_ID	 

	--Outdoor
	UPDATE #PAID
	SET [ClientCode] = OH.CL_CODE,
		[ClientDescription] = C.CL_NAME,
		[APAmount] = (SELECT SUM(ISNULL(APP.NETCHARGES, 0) + ISNULL(APP.NET_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.DISCOUNT_AMT, 0)) FROM AP_OUTDOOR APP WHERE #PAID.AP_ID = APP.AP_ID),
		[ClientAmount] = CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.NETCHARGES, 0) + ISNULL(APP.NET_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.DISCOUNT_AMT, 0)) FROM AP_OUTDOOR APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.NETCHARGES, 0) + ISNULL(APP.NET_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.DISCOUNT_AMT, 0)) FROM AP_OUTDOOR APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END,
		[ClientAmountUncleared] = CASE WHEN #PAID.Cleared = 0 THEN
			CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.NETCHARGES, 0) + ISNULL(APP.NET_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.DISCOUNT_AMT, 0)) FROM AP_OUTDOOR APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.NETCHARGES, 0) + ISNULL(APP.NET_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.DISCOUNT_AMT, 0)) FROM AP_OUTDOOR APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END ELSE 0 END
	FROM AP_OUTDOOR AS AP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = AP.AP_ID AND 
									   APH.AP_SEQ = AP.AP_SEQ INNER JOIN
		OUTDOOR_HEADER OH ON OH.ORDER_NBR = AP.ORDER_NBR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = OH.PRD_CODE AND P.DIV_CODE = OH.DIV_CODE AND P.CL_CODE = OH.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE				
	WHERE #PAID.AP_ID = AP.AP_ID	 

	--Radio
	UPDATE #PAID
	SET [ClientCode] = RH.CL_CODE,
		[ClientDescription] = C.CL_NAME,
		[APAmount] = (SELECT SUM(ISNULL(APP.EXT_NET_AMT, 0) + ISNULL(APP.DISC_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.NETCHARGES, 0)) FROM AP_RADIO APP WHERE #PAID.AP_ID = APP.AP_ID),
		[ClientAmount] = CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.EXT_NET_AMT, 0) + ISNULL(APP.DISC_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.NETCHARGES, 0)) FROM AP_RADIO APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.EXT_NET_AMT, 0) + ISNULL(APP.DISC_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.NETCHARGES, 0)) FROM AP_RADIO APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END,
		[ClientAmountUncleared] = CASE WHEN #PAID.Cleared = 0 THEN
			CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.EXT_NET_AMT, 0) + ISNULL(APP.DISC_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.NETCHARGES, 0)) FROM AP_RADIO APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.EXT_NET_AMT, 0) + ISNULL(APP.DISC_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.NETCHARGES, 0)) FROM AP_RADIO APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END ELSE 0 END
	FROM AP_RADIO AS AP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = AP.AP_ID AND 
									   APH.AP_SEQ = AP.AP_SEQ INNER JOIN 
						(SELECT DISTINCT 
							RH.ORDER_NBR,
							RH.CL_CODE, 
							RH.DIV_CODE, 
							RH.PRD_CODE
						FROM 
							[dbo].[RADIO_HEADER] AS RH
						UNION
						SELECT DISTINCT 
							RH.ORDER_NBR,
							RH.CL_CODE, 
							RH.DIV_CODE, 
							RH.PRD_CODE
						FROM 
							[dbo].[RADIO_HDR] AS RH	
							) AS RH ON RH.ORDER_NBR = AP.ORDER_NBR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = RH.PRD_CODE AND P.DIV_CODE = RH.DIV_CODE AND P.CL_CODE = RH.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE				
	WHERE #PAID.AP_ID = AP.AP_ID	 

	--TV
	UPDATE #PAID
	SET [ClientCode] = TH.CL_CODE,
		[ClientDescription] = C.CL_NAME,
		[APAmount] = (SELECT SUM(ISNULL(APP.EXT_NET_AMT, 0) + ISNULL(APP.DISC_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.NETCHARGES, 0)) FROM AP_TV APP WHERE #PAID.AP_ID = APP.AP_ID),
		[ClientAmount] = CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.EXT_NET_AMT, 0) + ISNULL(APP.DISC_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.NETCHARGES, 0)) FROM AP_TV APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.EXT_NET_AMT, 0) + ISNULL(APP.DISC_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.NETCHARGES, 0)) FROM AP_TV APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END,
		[ClientAmountUncleared] = CASE WHEN #PAID.Cleared = 0 THEN 
			CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.EXT_NET_AMT, 0) + ISNULL(APP.DISC_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.NETCHARGES, 0)) FROM AP_TV APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.EXT_NET_AMT, 0) + ISNULL(APP.DISC_AMT, 0) + ISNULL(APP.VENDOR_TAX, 0) + ISNULL(APP.NETCHARGES, 0)) FROM AP_TV APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE #PAID.CheckAmount END ELSE 0 END
	FROM AP_TV AS AP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = AP.AP_ID AND 
									   APH.AP_SEQ = AP.AP_SEQ INNER JOIN 
						(SELECT DISTINCT 
							TH.ORDER_NBR,
							TH.CL_CODE, 
							TH.DIV_CODE, 
							TH.PRD_CODE
						FROM 
							[dbo].[TV_HEADER] AS TH
						UNION
						SELECT DISTINCT 
							TH.ORDER_NBR,
							TH.CL_CODE, 
							TH.DIV_CODE, 
							TH.PRD_CODE
						FROM 
							[dbo].[TV_HDR] AS TH	
							) AS TH ON TH.ORDER_NBR = AP.ORDER_NBR INNER JOIN
		 PRODUCT P ON P.PRD_CODE = TH.PRD_CODE AND P.DIV_CODE = TH.DIV_CODE AND P.CL_CODE = TH.CL_CODE INNER JOIN
		 DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE INNER JOIN
		 CLIENT C ON C.CL_CODE = D.CL_CODE				
	WHERE #PAID.AP_ID = AP.AP_ID	 

	--AP GL DIST
	UPDATE #PAID
	SET [ClientCode] = 'Agency',
		[ClientDescription] = 'Agency',
		[APAmount] = (SELECT SUM(ISNULL(APP.AP_GL_AMT, 0)) FROM AP_GL_DIST APP WHERE #PAID.AP_ID = APP.AP_ID),
		[ClientAmount] = 0,		 
		[NonBillableAmount] = CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.AP_GL_AMT, 0)) FROM AP_GL_DIST APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.AP_GL_AMT, 0)) FROM AP_GL_DIST APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE CASE WHEN (SELECT SUM(ISNULL(APP.AP_GL_AMT, 0)) FROM AP_GL_DIST APP WHERE #PAID.AP_ID = APP.AP_ID) = 0 THEN 0 ELSE #PAID.CheckAmount END END,		 
		[NonBillableAmountUncleared] = CASE WHEN #PAID.Cleared = 0 THEN CASE WHEN #PAID.CheckAmount = (SELECT SUM(ISNULL(APP.AP_GL_AMT, 0)) FROM AP_GL_DIST APP WHERE #PAID.AP_ID = APP.AP_ID) THEN
				(SELECT SUM(ISNULL(APP.AP_GL_AMT, 0)) FROM AP_GL_DIST APP WHERE #PAID.AP_ID = APP.AP_ID)
			 ELSE CASE WHEN (SELECT SUM(ISNULL(APP.AP_GL_AMT, 0)) FROM AP_GL_DIST APP WHERE #PAID.AP_ID = APP.AP_ID) = 0 THEN 0 ELSE #PAID.CheckAmount END END ELSE 0 END	
	FROM AP_GL_DIST AS AP INNER JOIN 
		 AP_HEADER AS APH ON APH.AP_ID = AP.AP_ID AND 
									   APH.AP_SEQ = AP.AP_SEQ
	WHERE #PAID.AP_ID = AP.AP_ID AND (AP.MODIFY_DELETE IS NULL OR AP.MODIFY_DELETE = 0) AND #PAID.ClientCode = ''

	--SELECT * FROM #PAID
	--ORDER BY [AP_ID]

	INSERT INTO #CLIENT_BILLING
	SELECT [ClientCode], [ClientDescription], [DivisionCode], [DivisionDescription], [ProductCode], [ProductDescription], [PostingPeriod], 0,0,0,0,0,
		   0, SUM([ClientAmount]), 0, SUM([NonBillableAmount]),SUM([ClientAmountUncleared]),SUM([NonBillableAmountUncleared]),0,0
	FROM #PAID 			
	WHERE [ClientCode] <> ''
	GROUP BY [ClientCode], [ClientDescription], [DivisionCode], [DivisionDescription], [ProductCode], [ProductDescription], [PostingPeriod]

	
	--SELECT * FROM #CLIENT_BILLING    
	--SELECT * FROM #PAID

	--DECLARE @ROW_ID AS INT,
	--		@CURR_AP_ID AS INTEGER,
	--        @CURR_BILLABLE DECIMAL(18,6),
	--		@CURR_NONBILLABLE DECIMAL(18,6),
	--		@CURR_AP_CHK_AMT DECIMAL(18,6), @CURR_AP_CHK_AMT_UNCLEARED DECIMAL(18,6)

	--DECLARE MY_ROWS                         CURSOR  
 --       FOR
	--        SELECT ID, AP_ID, ClientVendorInvoice, NonBillableVendorInvoice
	--        FROM   #CLIENT_BILLING
	--		WHERE AP_ID <> 0
 --       ;
 --       OPEN MY_ROWS;
 --       FETCH NEXT FROM MY_ROWS INTO @ROW_ID,@CURR_AP_ID,@CURR_BILLABLE,@CURR_NONBILLABLE;
 --       WHILE @@FETCH_STATUS = 0
 --       BEGIN
	--        SELECT @CURR_AP_CHK_AMT = SUM(ISNULL(AP_CHK_AMT,0))
	--		FROM AP_PMT_HIST APH    
	--		WHERE APH.AP_ID = @CURR_AP_ID

	--		SELECT @CURR_AP_CHK_AMT_UNCLEARED = SUM(ISNULL(AP_CHK_AMT,0))
	--		FROM AP_PMT_HIST APH INNER JOIN
 --                     CHECK_REGISTER ON APH.AP_CHK_NBR = CHECK_REGISTER.CHECK_NBR AND 
 --                     APH.CHK_SEQ = CHECK_REGISTER.CHK_SEQ  
	--		WHERE APH.AP_ID = @CURR_AP_ID AND (CHECK_REGISTER.RECON_FLAG = 0 OR CHECK_REGISTER.RECON_FLAG IS NULL)
	        
	--		UPDATE #CLIENT_BILLING 
	--		SET ClientVendorInvoicePaid = CASE WHEN @CURR_AP_CHK_AMT > 0 AND @CURR_BILLABLE <> 0 THEN @CURR_BILLABLE ELSE 0 END
	--		WHERE #CLIENT_BILLING.ID = @ROW_ID

	--		UPDATE #CLIENT_BILLING 
	--		SET NonBillableVendorInvoicePaid = CASE WHEN @CURR_AP_CHK_AMT > 0 AND @CURR_NONBILLABLE <> 0 THEN @CURR_NONBILLABLE ELSE 0 END
	--		WHERE #CLIENT_BILLING.ID = @ROW_ID

	--		UPDATE #CLIENT_BILLING 
	--		SET ClientVendorPaidUncleared = CASE WHEN @CURR_AP_CHK_AMT_UNCLEARED > 0 AND @CURR_BILLABLE <> 0 THEN @CURR_BILLABLE ELSE 0 END
	--		WHERE #CLIENT_BILLING.ID = @ROW_ID

	--		UPDATE #CLIENT_BILLING 
	--		SET NonBillableVendorUncleared = CASE WHEN @CURR_AP_CHK_AMT_UNCLEARED > 0 AND @CURR_NONBILLABLE <> 0 THEN @CURR_NONBILLABLE ELSE 0 END
	--		WHERE #CLIENT_BILLING.ID = @ROW_ID

	--        --GO TO NEXT EVENT
	--        FETCH NEXT FROM MY_ROWS INTO @ROW_ID,@CURR_AP_ID,@CURR_BILLABLE,@CURR_NONBILLABLE;
 --       END
 --       CLOSE MY_ROWS;
 --       DEALLOCATE MY_ROWS;

       


  SELECT [ClientCode],
		[ClientDescription],
		--[DivisionCode],
		--[DivisionDescription],
		--[ProductCode],
		--[ProductDescription],
		SUM([ClientBilledFee]) AS [ClientBilledFee],
		SUM([ClientBilledCost]) AS [ClientBilledCost],
		(SUM([ClientBilledFee]) + SUM([ClientBilledCost])) AS [ClientBilledTotal],
		SUM([ClientCashFee]) AS [ClientCashFee],
		SUM([ClientCashCost]) AS [ClientCashCost],
		(SUM([ClientCashFee]) + SUM([ClientCashCost])) AS [ClientCashTotal],
		(SUM([ClientBilledFee]) - SUM([ClientCashFee])) AS [OpenARClientFee],
		(SUM([ClientBilledCost]) - SUM([ClientCashCost])) AS [OpenARClientCost],
		((SUM([ClientBilledFee]) - SUM([ClientCashFee])) + (SUM([ClientBilledCost]) - SUM([ClientCashCost]))) AS [OpenARTotal],
		--SUM([OtherCashReceivedAmount]) AS [OtherCashReceivedAmount],
		SUM([ClientVendorInvoice]) AS [ClientVendorInvoice],
		SUM([NonBillableVendorInvoice]) AS [NonBillableVendorInvoice],
		(SUM([ClientVendorInvoice]) + SUM([NonBillableVendorInvoice])) AS [VendorInvoiceTotal],
		SUM([ClientVendorInvoicePaid]) AS [ClientVendorInvoicePaid],
		SUM([NonBillableVendorInvoicePaid]) AS [NonBillableVendorInvoicePaid],
		(SUM([ClientVendorInvoicePaid]) + SUM([NonBillableVendorInvoicePaid])) AS [VendorInvoicePaidTotal],
		(SUM([ClientVendorInvoice]) - SUM([ClientVendorInvoicePaid])) AS [ClientVendorInvoiceUnpaid],
		(SUM([NonBillableVendorInvoice]) - SUM([NonBillableVendorInvoicePaid])) AS [NonBillableVendorUnpaid],
		((SUM([ClientVendorInvoice]) - SUM([ClientVendorInvoicePaid])) + (SUM([NonBillableVendorInvoice]) - SUM([NonBillableVendorInvoicePaid]))) AS [VendorInvoiceUnpaidTotal],
		SUM([ClientVendorPaidUncleared]) AS [ClientVendorPaidUncleared],
		SUM([NonBillableVendorUncleared]) AS [NonBillableVendorUncleared],
		(SUM([ClientVendorPaidUncleared]) + SUM([NonBillableVendorUncleared])) AS [VendorPaidUnclearedTotal]
  FROM #CLIENT_BILLING
  GROUP BY [ClientCode],
		[ClientDescription]--,
		--[DivisionCode],
		--[DivisionDescription],
		--[ProductCode],
		--[ProductDescription]

End
 
  
  
  DROP TABLE #CLIENT_BILLING; 
  DROP TABLE #CLIENT_BILLING_TYPE;             
  DROP TABLE #CASH;             
  DROP TABLE #PAID;
      



