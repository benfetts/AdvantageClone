CREATE PROCEDURE [dbo].[advsp_load_po_details_advanced] 
	@PO_NUMBER INT = 0,
	@CL_CODE VARCHAR(6) = NULL,
	@DIV_CODE VARCHAR(6) = NULL,
	@PRD_CODE VARCHAR(6) = NULL,
	@JOB_NUMBER INT = 0,
	@JOB_COMP_NBR SMALLINT = 0,
	@USER_CODE VARCHAR(100)
	
AS
BEGIN

/*
exec [advsp_load_po_details_advanced]
*/

	DECLARE @LimitedByOffice BIT
	DECLARE @EmployeeCode VARCHAR(6)

	SET @LimitedByOffice = 0

	SELECT @EmployeeCode = EMP_CODE FROM dbo.SEC_USER WHERE UPPER(USER_CODE) = UPPER(@USER_CODE)

	IF EXISTS (SELECT * FROM dbo.EMP_OFFICE WHERE EMP_CODE = @EmployeeCode)
		SET @LimitedByOffice = 1

	SELECT 
		[PONumber] = PURCHASE_ORDER_DET.PO_NUMBER,
		[PODescription] = V_PURCHASE_ORDER.PO_DESCRIPTION,
		[ClientCode] = JOB_LOG.CL_CODE,
		[DivisionCode] = JOB_LOG.DIV_CODE,
		[ProductCode] = JOB_LOG.PRD_CODE,
		[JobNumber] = PURCHASE_ORDER_DET.JOB_NUMBER,
		[JobComponentNumber] = PURCHASE_ORDER_DET.JOB_COMPONENT_NBR,
		[LineTotal] = ISNULL(PURCHASE_ORDER_DET.PO_EXT_AMOUNT, 0) + ISNULL(PURCHASE_ORDER_DET.EXT_MARKUP_AMT, 0),
		[IsAttachedToAP] = CONVERT(BIT, CASE 
											WHEN AP_PRODUCTION.PO_NUMBER IS NOT NULL AND AP_PRODUCTION.PO_LINE_NUMBER IS NOT NULL THEN 1 
										    WHEN AP_GL_DIST.PO_NUMBER IS NOT NULL AND AP_GL_DIST.PO_LINE_NUMBER IS NOT NULL THEN 1
										    ELSE NULL 
										END),
		[DisplayPONumber] = V_PURCHASE_ORDER.DISPLAY_PO_NUMBER,
		[VoidFlag] = V_PURCHASE_ORDER.VOID_FLAG,
		[POComplete] = V_PURCHASE_ORDER.PO_COMPLETE,
		[ModifiedByUserCode] = V_PURCHASE_ORDER.USER_MODIFIED,
        [ModifiedDate] = V_PURCHASE_ORDER.MODIFIED_DATE,
		[SortOrder] = CASE WHEN V_PURCHASE_ORDER.DISPLAY_PO_NUMBER = '(Denied)' THEN -3
						   WHEN V_PURCHASE_ORDER.DISPLAY_PO_NUMBER = '(Incomplete)' THEN -2
						   WHEN V_PURCHASE_ORDER.DISPLAY_PO_NUMBER = '(Pending)' THEN -1
						   ELSE PURCHASE_ORDER_DET.PO_NUMBER END 
	FROM 
		dbo.V_PURCHASE_ORDER INNER JOIN
		dbo.PURCHASE_ORDER_DET ON V_PURCHASE_ORDER.PO_NUMBER = PURCHASE_ORDER_DET.PO_NUMBER INNER JOIN
		dbo.JOB_COMPONENT ON PURCHASE_ORDER_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR AND PURCHASE_ORDER_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER LEFT OUTER JOIN
		dbo.JOB_LOG ON PURCHASE_ORDER_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER LEFT OUTER JOIN
		dbo.V_PRODUCT ON JOB_LOG.CL_CODE = V_PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = V_PRODUCT.DIV_CODE AND JOB_LOG.PRD_CODE = V_PRODUCT.PRD_CODE LEFT OUTER JOIN
		dbo.V_FUNCTION ON PURCHASE_ORDER_DET.FNC_CODE = V_FUNCTION.FNC_CODE INNER JOIN
		dbo.VENDOR ON V_PURCHASE_ORDER.VN_CODE = VENDOR.VN_CODE LEFT OUTER JOIN
		dbo.advtf_employee_office_limits(@EmployeeCode) EO ON VENDOR.OFFICE_CODE = EO.OFFICE_CODE LEFT OUTER JOIN
		(SELECT 
			AP_PRODUCTION.PO_NUMBER, 
			AP_PRODUCTION.PO_LINE_NUMBER,
			[CAN_DELETE] = CASE WHEN COUNT(CASE WHEN AP_PRODUCTION.DELETE_FLAG IS NULL THEN 1 ELSE NULL END) > 0 THEN 0 ELSE 1 END
		 FROM 
			dbo.AP_PRODUCTION 
		WHERE 
			PO_NUMBER IS NOT NULL AND 
			PO_LINE_NUMBER IS NOT NULL
		GROUP BY 
			PO_NUMBER, 
			PO_LINE_NUMBER) AS AP_PRODUCTION ON PURCHASE_ORDER_DET.PO_NUMBER = AP_PRODUCTION.PO_NUMBER AND 
												PURCHASE_ORDER_DET.LINE_NUMBER = AP_PRODUCTION.PO_LINE_NUMBER LEFT OUTER JOIN
		(SELECT 
			AP_GL_DIST.PO_NUMBER, 
			AP_GL_DIST.PO_LINE_NUMBER
		 FROM 
			dbo.AP_GL_DIST 
		 WHERE 
			PO_NUMBER IS NOT NULL AND 
			PO_LINE_NUMBER IS NOT NULL
		 GROUP BY 
			PO_NUMBER, 
			PO_LINE_NUMBER) AS AP_GL_DIST ON PURCHASE_ORDER_DET.PO_NUMBER = AP_GL_DIST.PO_NUMBER AND 
											 PURCHASE_ORDER_DET.LINE_NUMBER = AP_GL_DIST.PO_LINE_NUMBER 
	WHERE 
		1 = CASE WHEN @LimitedByOffice = 0 THEN 1 WHEN EO.OFFICE_CODE IS NOT NULL THEN 1 ELSE 0 END AND
		1 = CASE WHEN @PO_NUMBER = 0 THEN 1 WHEN PURCHASE_ORDER_DET.PO_NUMBER = @PO_NUMBER THEN 1 ELSE 0 END AND
		1 = CASE WHEN @CL_CODE IS NULL THEN 1 WHEN JOB_LOG.CL_CODE = @CL_CODE THEN 1 ELSE 0 END AND
		1 = CASE WHEN @DIV_CODE IS NULL THEN 1 WHEN JOB_LOG.CL_CODE = @CL_CODE AND JOB_LOG.DIV_CODE = @DIV_CODE THEN 1 ELSE 0 END AND
		1 = CASE WHEN @PRD_CODE IS NULL THEN 1 WHEN JOB_LOG.CL_CODE = @CL_CODE AND JOB_LOG.DIV_CODE = @DIV_CODE AND JOB_LOG.PRD_CODE = @PRD_CODE THEN 1 ELSE 0 END AND
		1 = CASE WHEN @JOB_NUMBER = 0 THEN 1 WHEN PURCHASE_ORDER_DET.JOB_NUMBER = @JOB_NUMBER THEN 1 ELSE 0 END AND
		1 = CASE WHEN @JOB_COMP_NBR = 0 THEN 1 WHEN PURCHASE_ORDER_DET.JOB_NUMBER = @JOB_NUMBER AND PURCHASE_ORDER_DET.JOB_COMPONENT_NBR = @JOB_COMP_NBR THEN 1 ELSE 0 END
	ORDER BY 
		[LINE_NUMBER] ASC

END