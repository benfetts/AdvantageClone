if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[advsp_load_po_list]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[advsp_load_po_list]
GO


CREATE PROCEDURE [dbo].[advsp_load_po_list]
	@OMIT_VOID BIT = 1,
	@OMIT_COMPLETE BIT = 0,
	@CL_CODE VARCHAR(6) = NULL,
	@DIV_CODE VARCHAR(6) = NULL,
	@PRD_CODE VARCHAR(6) = NULL,
	@EMP_CODE VARCHAR(6) = NULL,
	@VN_CODE VARCHAR(6) = NULL,
	@JOB_NUMBER INT = 0,
	@JOB_COMP_NBR SMALLINT = 0,
	@PO_DATE SMALLDATETIME = NULL,
	@PO_DUE_DATE SMALLDATETIME = NULL,
	@USER_ID VARCHAR(100)
	
AS
BEGIN

	DECLARE @LimitedByOffice BIT
	DECLARE @EmployeeCode VARCHAR(6)

	SET @LimitedByOffice = 0

	SELECT @EmployeeCode = EMP_CODE FROM dbo.SEC_USER WHERE UPPER(USER_CODE) = UPPER(@USER_ID)

	IF EXISTS (SELECT * FROM dbo.EMP_OFFICE WHERE EMP_CODE = @EmployeeCode)
		SET @LimitedByOffice = 1

	SELECT DISTINCT
		[Number] = V_PURCHASE_ORDER.PO_NUMBER,
		[Description] = V_PURCHASE_ORDER.PO_DESCRIPTION,
		[EmployeeCode] = V_PURCHASE_ORDER.EMP_CODE,
		[EmployeeName] = V_PURCHASE_ORDER.EMP_NAME,
		[VendorCode] = V_PURCHASE_ORDER.VN_CODE,
		[VendorName] = V_PURCHASE_ORDER.VN_NAME,
		[PODate] = V_PURCHASE_ORDER.PO_DATE,
		[PODueDate] = V_PURCHASE_ORDER.PO_DUE_DATE,
		[IsVoid] = V_PURCHASE_ORDER.VOID_FLAG,
		[IsComplete] = V_PURCHASE_ORDER.PO_COMPLETE,
		[ModifiedByUserCode] = V_PURCHASE_ORDER.USER_MODIFIED,
		[ModifiedDate] = V_PURCHASE_ORDER.MODIFIED_DATE,
		[DisplayPONumber] = V_PURCHASE_ORDER.DISPLAY_PO_NUMBER,
		[SortOrder] = CASE WHEN V_PURCHASE_ORDER.DISPLAY_PO_NUMBER = '(Denied)' THEN -3
						   WHEN V_PURCHASE_ORDER.DISPLAY_PO_NUMBER = '(Incomplete)' THEN -2
						   WHEN V_PURCHASE_ORDER.DISPLAY_PO_NUMBER = '(Pending)' THEN -1
						   ELSE V_PURCHASE_ORDER.PO_NUMBER END 
	FROM
		dbo.V_PURCHASE_ORDER
	INNER JOIN
		dbo.VENDOR ON V_PURCHASE_ORDER.VN_CODE = VENDOR.VN_CODE
	INNER JOIN
		dbo.EMPLOYEE ON V_PURCHASE_ORDER.EMP_CODE = EMPLOYEE.EMP_CODE
	LEFT OUTER JOIN
		dbo.PURCHASE_ORDER_DET ON V_PURCHASE_ORDER.PO_NUMBER = PURCHASE_ORDER_DET.PO_NUMBER 
	LEFT OUTER JOIN
		dbo.JOB_LOG ON PURCHASE_ORDER_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
	LEFT OUTER JOIN
		dbo.advtf_employee_office_limits(@EmployeeCode) EO ON VENDOR.OFFICE_CODE = EO.OFFICE_CODE
	WHERE
		1 = CASE WHEN @LimitedByOffice = 0 THEN 1 WHEN EO.OFFICE_CODE IS NOT NULL THEN 1 ELSE 0 END AND
		1 = CASE WHEN @OMIT_COMPLETE = 0 THEN 1 WHEN @OMIT_COMPLETE = 1 AND V_PURCHASE_ORDER.PO_COMPLETE = 1 THEN 0 ELSE 1 END AND
		1 = CASE WHEN @OMIT_VOID = 0 THEN 1 WHEN @OMIT_VOID = 1 AND VOID_FLAG = 1 THEN 0 ELSE 1 END AND
		1 = CASE WHEN @VN_CODE IS NULL THEN 1 WHEN V_PURCHASE_ORDER.VN_CODE = @VN_CODE THEN 1 ELSE 0 END AND
		1 = CASE WHEN @PO_DATE IS NULL THEN 1 WHEN V_PURCHASE_ORDER.PO_DATE = @PO_DATE THEN 1 ELSE 0 END AND
		1 = CASE WHEN @PO_DUE_DATE IS NULL THEN 1 WHEN V_PURCHASE_ORDER.PO_DUE_DATE = @PO_DUE_DATE THEN 1 ELSE 0 END AND
		1 = CASE WHEN @CL_CODE IS NULL THEN 1 WHEN JOB_LOG.CL_CODE = @CL_CODE THEN 1 ELSE 0 END AND
		1 = CASE WHEN @DIV_CODE IS NULL THEN 1 WHEN JOB_LOG.CL_CODE = @CL_CODE AND JOB_LOG.DIV_CODE = @DIV_CODE THEN 1 ELSE 0 END AND
		1 = CASE WHEN @PRD_CODE IS NULL THEN 1 WHEN JOB_LOG.CL_CODE = @CL_CODE AND JOB_LOG.DIV_CODE = @DIV_CODE AND JOB_LOG.PRD_CODE = @PRD_CODE THEN 1 ELSE 0 END AND
		1 = CASE WHEN @JOB_NUMBER = 0 THEN 1 WHEN JOB_LOG.JOB_NUMBER = @JOB_NUMBER THEN 1 ELSE 0 END AND
		1 = CASE WHEN @JOB_COMP_NBR = 0 THEN 1 WHEN PURCHASE_ORDER_DET.JOB_NUMBER = @JOB_NUMBER AND PURCHASE_ORDER_DET.JOB_COMPONENT_NBR = @JOB_COMP_NBR THEN 1 ELSE 0 END

END