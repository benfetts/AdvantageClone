CREATE PROCEDURE [dbo].[advsp_media_broadcast_worksheet_order_alert_comments]
	@MEDIA_BROADCAST_WORKSHEET_MARKET_DETAIL_IDs varchar(max)
AS

DECLARE @MEDIA_TYPE_CODE char(1)

SELECT TOP 1 @MEDIA_TYPE_CODE = MBW.MEDIA_TYPE_CODE 
FROM dbo.MEDIA_BROADCAST_WORKSHEET_MARKET_DETAIL MBWMD
	INNER JOIN dbo.MEDIA_BROADCAST_WORKSHEET_MARKET MBWM ON MBWMD.MEDIA_BROADCAST_WORKSHEET_MARKET_ID = MBWM.MEDIA_BROADCAST_WORKSHEET_MARKET_ID 
	INNER JOIN dbo.MEDIA_BROADCAST_WORKSHEET MBW ON MBWM.MEDIA_BROADCAST_WORKSHEET_ID = MBW.MEDIA_BROADCAST_WORKSHEET_ID
WHERE MBWMD.MEDIA_BROADCAST_WORKSHEET_MARKET_DETAIL_ID IN (SELECT * FROM dbo.udf_split_list(@MEDIA_BROADCAST_WORKSHEET_MARKET_DETAIL_IDs, ','))

IF @MEDIA_TYPE_CODE = 'T'
	SELECT
		[OrderNumber] = H.ORDER_NBR,
		[VendorCode] = H.VN_CODE,
		[CommentID] = AC.COMMENT_ID,
		[CommentDate] = AC.GENERATED_DATE,
		[Comment] = AC.COMMENT,
		[Name] = CASE
					WHEN SU.USER_CODE IS NOT NULL THEN (SELECT COALESCE(EMP_FNAME, '') + ' ' + CASE WHEN NULLIF(EMP_MI,'') IS NULL THEN '' ELSE EMP_MI + '. ' END + COALESCE(EMP_LNAME, '')
														FROM dbo.EMPLOYEE
														WHERE EMP_CODE = SU.EMP_CODE) 
					WHEN VR.VR_CODE IS NOT NULL THEN COALESCE(VR.VR_FNAME, '') + ' ' + CASE WHEN NULLIF(VR.VR_MI,'') IS NULL THEN '' ELSE VR.VR_MI + '. ' END + COALESCE(VR.VR_LNAME, '')
					WHEN VC.VC_CODE IS NOT NULL THEN COALESCE(VC.VC_FNAME, '') + ' ' + CASE WHEN NULLIF(VC.VC_MI,'') IS NULL THEN '' ELSE VC.VC_MI + '. ' END + COALESCE(VC.VC_LNAME, '')
					ELSE NULL
				 END,
		[Email] = CASE 
					WHEN VR.VR_CODE IS NOT NULL THEN VR.EMAIL_ADDRESS 
					WHEN VC.VC_CODE IS NOT NULL THEN VC.EMAIL_ADDRESS
					ELSE NULL END,
		[AlertID] = A.ALERT_ID,
		[VendorName] = V.VN_NAME
	FROM (SELECT DISTINCT ORDER_NBR
		  FROM dbo.MEDIA_BROADCAST_WORKSHEET_MARKET_DETAIL_DATE MBWMDD 
		  WHERE MBWMDD.MEDIA_BROADCAST_WORKSHEET_MARKET_DETAIL_ID IN (SELECT * FROM dbo.udf_split_list(@MEDIA_BROADCAST_WORKSHEET_MARKET_DETAIL_IDs, ','))
					) orders 
		INNER JOIN dbo.TV_HDR H ON H.ORDER_NBR = orders.ORDER_NBR
		INNER JOIN dbo.ALERT A ON H.ALERT_ID = A.ALERT_ID 
		INNER JOIN dbo.ALERT_COMMENT AC ON A.ALERT_ID = AC.ALERT_ID 
		INNER JOIN dbo.VENDOR V ON H.VN_CODE = V.VN_CODE
		LEFT OUTER JOIN dbo.VEN_REP VR ON AC.VR_CODE = VR.VR_CODE AND VR.VN_CODE = H.VN_CODE 
		LEFT OUTER JOIN dbo.VEN_CONT VC ON AC.VC_CODE = VC.VC_CODE AND VC.VN_CODE = H.VN_CODE 
		LEFT OUTER JOIN dbo.SEC_USER SU ON SU.USER_CODE = AC.USER_CODE
ELSE IF @MEDIA_TYPE_CODE = 'R'
	SELECT
		[OrderNumber] = H.ORDER_NBR,
		[VendorCode] = H.VN_CODE,
		[CommentID] = AC.COMMENT_ID,
		[CommentDate] = AC.GENERATED_DATE,
		[Comment] = AC.COMMENT,
		[Name] = CASE
					WHEN SU.USER_CODE IS NOT NULL THEN (SELECT COALESCE(EMP_FNAME, '') + ' ' + CASE WHEN NULLIF(EMP_MI,'') IS NULL THEN '' ELSE EMP_MI + '. ' END + COALESCE(EMP_LNAME, '')
														FROM dbo.EMPLOYEE
														WHERE EMP_CODE = SU.EMP_CODE) 
					WHEN VR.VR_CODE IS NOT NULL THEN COALESCE(VR.VR_FNAME, '') + ' ' + CASE WHEN NULLIF(VR.VR_MI,'') IS NULL THEN '' ELSE VR.VR_MI + '. ' END + COALESCE(VR.VR_LNAME, '')
					WHEN VC.VC_CODE IS NOT NULL THEN COALESCE(VC.VC_FNAME, '') + ' ' + CASE WHEN NULLIF(VC.VC_MI,'') IS NULL THEN '' ELSE VC.VC_MI + '. ' END + COALESCE(VC.VC_LNAME, '')
					ELSE NULL
				 END,
		[Email] = CASE 
					WHEN VR.VR_CODE IS NOT NULL THEN VR.EMAIL_ADDRESS 
					WHEN VC.VC_CODE IS NOT NULL THEN VC.EMAIL_ADDRESS
					ELSE NULL END,
		[AlertID] = A.ALERT_ID,
		[VendorName] = V.VN_NAME
	FROM (SELECT DISTINCT ORDER_NBR
		  FROM dbo.MEDIA_BROADCAST_WORKSHEET_MARKET_DETAIL_DATE MBWMDD 
		  WHERE MBWMDD.MEDIA_BROADCAST_WORKSHEET_MARKET_DETAIL_ID IN (SELECT * FROM dbo.udf_split_list(@MEDIA_BROADCAST_WORKSHEET_MARKET_DETAIL_IDs, ','))
					) orders 
		INNER JOIN dbo.RADIO_HDR H ON H.ORDER_NBR = orders.ORDER_NBR
		INNER JOIN dbo.ALERT A ON H.ALERT_ID = A.ALERT_ID 
		INNER JOIN dbo.ALERT_COMMENT AC ON A.ALERT_ID = AC.ALERT_ID 
		INNER JOIN dbo.VENDOR V ON H.VN_CODE = V.VN_CODE
		LEFT OUTER JOIN dbo.VEN_REP VR ON AC.VR_CODE = VR.VR_CODE AND VR.VN_CODE = H.VN_CODE 
		LEFT OUTER JOIN dbo.VEN_CONT VC ON AC.VC_CODE = VC.VC_CODE AND VC.VN_CODE = H.VN_CODE 
		LEFT OUTER JOIN dbo.SEC_USER SU ON SU.USER_CODE = AC.USER_CODE
GO
