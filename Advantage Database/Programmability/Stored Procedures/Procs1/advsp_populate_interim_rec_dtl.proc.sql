CREATE PROCEDURE [dbo].[advsp_populate_interim_rec_dtl] @job_number integer, @job_component_nbr smallint, @ba_id integer, 
	@et_cutoff_date smalldatetime, @io_cutoff_date smalldatetime, @ap_cutoff_pp varchar(6)
AS

-- 05/15/2015 MJC - changed the where clause from ( AR_INV_NBR IS NULL OR AB_FLAG = 6 ) to ( AR_INV_NBR IS NULL AND AB_FLAG = 6 ), since we specifically mark at the item level which to reconcile in new BCC

SET NOCOUNT ON

DECLARE @interim_rec_dtl TABLE ( 
	FNC_CODE			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
	FNC_TYPE			varchar(1) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
	FNC_DESCRIPTION		varchar(30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	ITEM_ID				integer NOT NULL,
	LINE_NUMBER			smallint NULL,
	AP_SEQ				smallint NULL,
	EXT_AMOUNT			decimal(15,2) NULL,
	EXT_MARKUP_AMT		decimal(15,2) NULL,
	EXT_STATE_RESALE	decimal(15,2) NULL,
	EXT_COUNTY_RESALE	decimal(15,2) NULL,
	EXT_CITY_RESALE		decimal(15,2) NULL,
	EXT_NONRESALE_TAX	decimal(15,2) NULL,
	LINE_TOTAL			decimal(15,2) NULL,
	BA_ID				integer NULL,
	WIP_AMOUNT			decimal(15,2) NULL,
	AMOUNT				decimal(15,2) NULL,
	AB_FLAG				integer NULL,
	AR_INV_NBR			integer NULL,
	TAX_CODE			varchar(4) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	GLACODE_STATE		varchar(30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	GLACODE_CNTY		varchar(30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	GLACODE_CITY		varchar(30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	PREV_REC			decimal(15,2) NULL,
	REC_FLAG			smallint NULL )	

IF ( @ba_id IS NULL )
BEGIN
	IF ( @ap_cutoff_pp IS NULL )
		INSERT INTO @interim_rec_dtl( FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, ITEM_ID, LINE_NUMBER, 
				AP_SEQ, EXT_AMOUNT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, EXT_CITY_RESALE, 
				EXT_NONRESALE_TAX, LINE_TOTAL, BA_ID, WIP_AMOUNT, AMOUNT, AB_FLAG, AR_INV_NBR, TAX_CODE, 
				GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY, PREV_REC )
		 SELECT f1.FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, AP_ID, LINE_NUMBER, AP_SEQ,
				AP_PROD_EXT_AMT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE,
				EXT_CITY_RESALE, EXT_NONRESALE_TAX, LINE_TOTAL, BA_ID,
				AP_PROD_EXT_AMT + COALESCE( EXT_NONRESALE_TAX, 0.00 ),
				AP_PROD_EXT_AMT + COALESCE( EXT_MARKUP_AMT, 0.00 ) + COALESCE( EXT_NONRESALE_TAX, 0.00 ),
				AB_FLAG, AR_INV_NBR, TAX_CODE, GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY,
				CASE 
					WHEN ( AR_INV_NBR IS NOT NULL OR AB_FLAG = 3 ) THEN COALESCE( AP_PROD_EXT_AMT, 0 ) + COALESCE( EXT_MARKUP_AMT, 0 ) + COALESCE( EXT_NONRESALE_TAX, 0 ) 
					ELSE 0.00
				END	 
		   FROM dbo.AP_PRODUCTION ap INNER JOIN dbo.FUNCTIONS f1 ON ap.FNC_CODE = f1.FNC_CODE 
		  WHERE JOB_NUMBER = @job_number
			AND JOB_COMPONENT_NBR = @job_component_nbr
			AND ( AP_PROD_NOBILL_FLG IS NULL OR AP_PROD_NOBILL_FLG = 0 )
			AND ( AP_PROD_BILL_HOLD IS NULL OR AP_PROD_BILL_HOLD = 0 )
			AND ( AR_INV_NBR IS NULL AND AB_FLAG = 6 )
	ELSE		
		INSERT INTO @interim_rec_dtl( FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, ITEM_ID, LINE_NUMBER, 
				AP_SEQ, EXT_AMOUNT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, EXT_CITY_RESALE, 
				EXT_NONRESALE_TAX, LINE_TOTAL, BA_ID, WIP_AMOUNT, AMOUNT, AB_FLAG, AR_INV_NBR, TAX_CODE, 
				GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY, PREV_REC )
		 SELECT f1.FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, AP_ID, LINE_NUMBER, AP_SEQ,
				AP_PROD_EXT_AMT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE,
				EXT_CITY_RESALE, EXT_NONRESALE_TAX, LINE_TOTAL, BA_ID,
				AP_PROD_EXT_AMT + COALESCE( EXT_NONRESALE_TAX, 0.00 ),
				AP_PROD_EXT_AMT + COALESCE( EXT_MARKUP_AMT, 0.00 ) + COALESCE( EXT_NONRESALE_TAX, 0.00 ),
				AB_FLAG, AR_INV_NBR, TAX_CODE, GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY,
				CASE 
					WHEN ( AR_INV_NBR IS NOT NULL OR AB_FLAG = 3 ) THEN COALESCE( AP_PROD_EXT_AMT, 0 ) + COALESCE( EXT_MARKUP_AMT, 0 ) + COALESCE( EXT_NONRESALE_TAX, 0 ) 
					ELSE 0.00
				END	 
		   FROM dbo.AP_PRODUCTION ap INNER JOIN dbo.FUNCTIONS f1 ON ap.FNC_CODE = f1.FNC_CODE 
		  WHERE JOB_NUMBER = @job_number
			AND JOB_COMPONENT_NBR = @job_component_nbr
			AND ( AP_PROD_NOBILL_FLG IS NULL OR AP_PROD_NOBILL_FLG = 0 )
			AND ( AP_PROD_BILL_HOLD IS NULL OR AP_PROD_BILL_HOLD = 0 )
			AND ( AR_INV_NBR IS NULL AND AB_FLAG = 6 )
			AND ( ap.POST_PERIOD <= @ap_cutoff_pp )
END		
ELSE
	INSERT INTO @interim_rec_dtl( FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, ITEM_ID, LINE_NUMBER, 
			AP_SEQ, EXT_AMOUNT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, EXT_CITY_RESALE, 
			EXT_NONRESALE_TAX, LINE_TOTAL, BA_ID, WIP_AMOUNT, AMOUNT, AB_FLAG, AR_INV_NBR, TAX_CODE, 
			GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY, PREV_REC )
	 SELECT f1.FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, AP_ID, LINE_NUMBER, AP_SEQ,
			AP_PROD_EXT_AMT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE,
			EXT_CITY_RESALE, EXT_NONRESALE_TAX, LINE_TOTAL, BA_ID,
			AP_PROD_EXT_AMT + COALESCE( EXT_NONRESALE_TAX, 0.00 ),
			AP_PROD_EXT_AMT + COALESCE( EXT_MARKUP_AMT, 0.00 ) + COALESCE( EXT_NONRESALE_TAX, 0.00 ),
			AB_FLAG, AR_INV_NBR, TAX_CODE, GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY,
			CASE 
				WHEN ( AR_INV_NBR IS NOT NULL OR AB_FLAG = 3 ) THEN COALESCE( AP_PROD_EXT_AMT, 0 ) + COALESCE( EXT_MARKUP_AMT, 0 ) + COALESCE( EXT_NONRESALE_TAX, 0 ) 
				ELSE 0.00
			END	 
	   FROM dbo.AP_PRODUCTION ap INNER JOIN dbo.FUNCTIONS f1 ON ap.FNC_CODE = f1.FNC_CODE 
	  WHERE JOB_NUMBER = @job_number
		AND JOB_COMPONENT_NBR = @job_component_nbr
		AND ( AP_PROD_NOBILL_FLG IS NULL OR AP_PROD_NOBILL_FLG = 0 )
		AND ( AP_PROD_BILL_HOLD IS NULL OR AP_PROD_BILL_HOLD = 0 )
		AND ( AR_INV_NBR IS NULL AND AB_FLAG = 6 )
		AND EXISTS ( SELECT * 
		               FROM dbo.BILL_APPR_DTL bad
		         INNER JOIN dbo.BILL_APPR_ITEM bai
						 ON ( bad.BA_DTL_ID = bai.BA_DTL_ID )
		              WHERE ( bad.BA_ID = @ba_id )
		                AND ( bad.JOB_NUMBER = ap.JOB_NUMBER )
		                AND ( bad.JOB_COMPONENT_NBR = ap.JOB_COMPONENT_NBR )
		                AND ( bad.FNC_CODE = ap.FNC_CODE )
					    AND ( bai.REC_TYPE = 'V' )
					    AND ( bai.REC_ID = ap.AP_ID )
					    AND ( bai.INSTR = 1 ))
					  			
IF ( @ba_id IS NULL )
BEGIN
	IF ( @et_cutoff_date IS NULL )
		INSERT INTO @interim_rec_dtl( FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, ITEM_ID, LINE_NUMBER, 
				AP_SEQ, EXT_AMOUNT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, EXT_CITY_RESALE, 
				EXT_NONRESALE_TAX, LINE_TOTAL, BA_ID, WIP_AMOUNT, AMOUNT, AB_FLAG, AR_INV_NBR, TAX_CODE, 
				GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY, PREV_REC )
		 SELECT f2.FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, ET_ID, SEQ_NBR, 0, 
				TOTAL_BILL, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, 
				EXT_CITY_RESALE, 0.00, LINE_TOTAL, BA_ID, 
				0.00,
				TOTAL_BILL + COALESCE( EXT_MARKUP_AMT, 0.00 ),
				AB_FLAG, AR_INV_NBR, TAX_CODE, GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY,
				CASE 
					WHEN ( AR_INV_NBR IS NOT NULL OR AB_FLAG = 3 ) THEN COALESCE( TOTAL_BILL, 0.00 ) + COALESCE( EXT_MARKUP_AMT, 0.00 ) 
					ELSE 0.00
				END	
		   FROM dbo.EMP_TIME_DTL etd INNER JOIN dbo.FUNCTIONS f2 
			 ON ( etd.FNC_CODE = f2.FNC_CODE ) 
		  WHERE JOB_NUMBER = @job_number
			AND JOB_COMPONENT_NBR = @job_component_nbr
			AND ( BILL_HOLD_FLG IS NULL OR BILL_HOLD_FLG = 0 )
			AND ( EMP_NON_BILL_FLAG IS NULL OR EMP_NON_BILL_FLAG = 0 )
			AND ( AR_INV_NBR IS NULL AND AB_FLAG = 6 )
	ELSE
		INSERT INTO @interim_rec_dtl( FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, ITEM_ID, LINE_NUMBER, 
				AP_SEQ, EXT_AMOUNT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, EXT_CITY_RESALE, 
				EXT_NONRESALE_TAX, LINE_TOTAL, BA_ID, WIP_AMOUNT, AMOUNT, AB_FLAG, AR_INV_NBR, TAX_CODE, 
				GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY, PREV_REC )
		 SELECT f2.FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, etd.ET_ID, SEQ_NBR, 0, 
				TOTAL_BILL, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, 
				EXT_CITY_RESALE, 0.00, LINE_TOTAL, BA_ID, 
				0.00,
				TOTAL_BILL + COALESCE( EXT_MARKUP_AMT, 0.00 ),
				AB_FLAG, AR_INV_NBR, TAX_CODE, GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY,
				CASE 
					WHEN ( AR_INV_NBR IS NOT NULL OR AB_FLAG = 3 ) THEN COALESCE( TOTAL_BILL, 0.00 ) + COALESCE( EXT_MARKUP_AMT, 0.00 ) 
					ELSE 0.00
				END	
		   FROM dbo.EMP_TIME_DTL etd INNER JOIN dbo.FUNCTIONS f2 
			 ON ( etd.FNC_CODE = f2.FNC_CODE ) INNER JOIN dbo.EMP_TIME et
			 ON ( etd.ET_ID = et.ET_ID )
		  WHERE JOB_NUMBER = @job_number
			AND JOB_COMPONENT_NBR = @job_component_nbr
			AND ( BILL_HOLD_FLG IS NULL OR BILL_HOLD_FLG = 0 )
			AND ( EMP_NON_BILL_FLAG IS NULL OR EMP_NON_BILL_FLAG = 0 )
			AND ( AR_INV_NBR IS NULL AND AB_FLAG = 6 )
			AND ( et.EMP_DATE <= @et_cutoff_date )		
END		
ELSE
	INSERT INTO @interim_rec_dtl( FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, ITEM_ID, LINE_NUMBER, 
			AP_SEQ, EXT_AMOUNT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, EXT_CITY_RESALE, 
			EXT_NONRESALE_TAX, LINE_TOTAL, BA_ID, WIP_AMOUNT, AMOUNT, AB_FLAG, AR_INV_NBR, TAX_CODE, 
			GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY, PREV_REC )
	 SELECT f2.FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, ET_ID, SEQ_NBR, 0, 
			TOTAL_BILL, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, 
			EXT_CITY_RESALE, 0.00, LINE_TOTAL, BA_ID, 
			0.00,
			TOTAL_BILL + COALESCE( EXT_MARKUP_AMT, 0.00 ),
			AB_FLAG, AR_INV_NBR, TAX_CODE, GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY,
			CASE 
				WHEN ( AR_INV_NBR IS NOT NULL OR AB_FLAG = 3 ) THEN COALESCE( TOTAL_BILL, 0.00 ) + COALESCE( EXT_MARKUP_AMT, 0.00 ) 
				ELSE 0.00
			END	
	   FROM dbo.EMP_TIME_DTL etd INNER JOIN dbo.FUNCTIONS f2 ON etd.FNC_CODE = f2.FNC_CODE
	  WHERE JOB_NUMBER = @job_number
		AND JOB_COMPONENT_NBR = @job_component_nbr
		AND ( BILL_HOLD_FLG IS NULL OR BILL_HOLD_FLG = 0 )
		AND ( EMP_NON_BILL_FLAG IS NULL OR EMP_NON_BILL_FLAG = 0 )
		AND ( AR_INV_NBR IS NULL AND AB_FLAG = 6 )
		AND EXISTS ( SELECT * 
		               FROM dbo.BILL_APPR_DTL bad
		         INNER JOIN dbo.BILL_APPR_ITEM bai
						 ON ( bad.BA_DTL_ID = bai.BA_DTL_ID )
					  WHERE	( bad.BA_ID = @ba_id )
						AND ( bad.JOB_NUMBER = etd.JOB_NUMBER )
		                AND ( bad.JOB_COMPONENT_NBR = etd.JOB_COMPONENT_NBR )
		                AND ( bad.FNC_CODE = etd.FNC_CODE )					    
		                AND ( bai.REC_TYPE = 'E' )
					    AND ( bai.REC_ID = etd.ET_ID )
					    AND ( bai.INSTR = 1 ))

IF ( @ba_id IS NULL )
BEGIN
	IF ( @io_cutoff_date IS NULL )
		INSERT INTO @interim_rec_dtl( FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, ITEM_ID, LINE_NUMBER,
				AP_SEQ, EXT_AMOUNT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, EXT_CITY_RESALE, 
				EXT_NONRESALE_TAX, LINE_TOTAL, BA_ID, WIP_AMOUNT, AMOUNT, AB_FLAG, AR_INV_NBR, TAX_CODE, 
				GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY, PREV_REC )
		 SELECT f3.FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, IO_ID, SEQ_NBR, 0, 
				IO_AMOUNT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, 
				EXT_CITY_RESALE, 0.00, LINE_TOTAL, BA_ID, 
				0.00,
				IO_AMOUNT + COALESCE( EXT_MARKUP_AMT, 0 ),
				AB_FLAG, AR_INV_NBR, TAX_CODE, GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY,
				CASE 
					WHEN ( AR_INV_NBR IS NOT NULL OR AB_FLAG = 3 ) THEN COALESCE( IO_AMOUNT, 0.00 ) + COALESCE( EXT_MARKUP_AMT, 0.00 ) 
					ELSE 0.00
				END				
		   FROM dbo.INCOME_ONLY io INNER JOIN dbo.FUNCTIONS f3 ON io.FNC_CODE = f3.FNC_CODE  
		  WHERE JOB_NUMBER = @job_number
			AND JOB_COMPONENT_NBR = @job_component_nbr
			AND ( NON_BILL_FLAG IS NULL OR NON_BILL_FLAG = 0 )
			AND ( BILL_HOLD_FLAG IS NULL OR BILL_HOLD_FLAG = 0 )
			AND ( AR_INV_NBR IS NULL AND AB_FLAG = 6 )
	ELSE			
		INSERT INTO @interim_rec_dtl( FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, ITEM_ID, LINE_NUMBER, 
				AP_SEQ, EXT_AMOUNT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, EXT_CITY_RESALE, 
				EXT_NONRESALE_TAX, LINE_TOTAL, BA_ID, WIP_AMOUNT, AMOUNT, AB_FLAG, AR_INV_NBR, TAX_CODE, 
				GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY, PREV_REC )
		 SELECT f3.FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, IO_ID, SEQ_NBR, 0, 
				IO_AMOUNT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, 
				EXT_CITY_RESALE, 0.00, LINE_TOTAL, BA_ID, 
				0.00,
				IO_AMOUNT + COALESCE( EXT_MARKUP_AMT, 0 ),
				AB_FLAG, AR_INV_NBR, TAX_CODE, GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY,
				CASE 
					WHEN ( AR_INV_NBR IS NOT NULL OR AB_FLAG = 3 ) THEN COALESCE( IO_AMOUNT, 0.00 ) + COALESCE( EXT_MARKUP_AMT, 0.00 ) 
					ELSE 0.00
				END				
		   FROM dbo.INCOME_ONLY io INNER JOIN dbo.FUNCTIONS f3 ON io.FNC_CODE = f3.FNC_CODE  
		  WHERE JOB_NUMBER = @job_number
			AND JOB_COMPONENT_NBR = @job_component_nbr
			AND ( NON_BILL_FLAG IS NULL OR NON_BILL_FLAG = 0 )
			AND ( BILL_HOLD_FLAG IS NULL OR BILL_HOLD_FLAG = 0 )
			AND ( AR_INV_NBR IS NULL AND AB_FLAG = 6 )
			AND ( IO_INV_DATE <= @io_cutoff_date )
END		    
ELSE
	INSERT INTO @interim_rec_dtl( FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, ITEM_ID, LINE_NUMBER, 
			AP_SEQ, EXT_AMOUNT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, EXT_CITY_RESALE, 
			EXT_NONRESALE_TAX, LINE_TOTAL, BA_ID, WIP_AMOUNT, AMOUNT, AB_FLAG, AR_INV_NBR, TAX_CODE, 
			GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY, PREV_REC )
	 SELECT f3.FNC_CODE, FNC_TYPE, FNC_DESCRIPTION, IO_ID, SEQ_NBR, 0, 
			IO_AMOUNT, EXT_MARKUP_AMT, EXT_STATE_RESALE, EXT_COUNTY_RESALE, 
			EXT_CITY_RESALE, 0.00, LINE_TOTAL, BA_ID, 
			0.00,
			IO_AMOUNT + COALESCE( EXT_MARKUP_AMT, 0 ),
			AB_FLAG, AR_INV_NBR, TAX_CODE, GLACODE_STATE, GLACODE_CNTY, GLACODE_CITY,
			CASE 
				WHEN ( AR_INV_NBR IS NOT NULL OR AB_FLAG = 3 ) THEN COALESCE( IO_AMOUNT, 0.00 ) + COALESCE( EXT_MARKUP_AMT, 0.00 ) 
				ELSE 0.00
			END				
	   FROM dbo.INCOME_ONLY io INNER JOIN dbo.FUNCTIONS f3 ON io.FNC_CODE = f3.FNC_CODE  
	  WHERE JOB_NUMBER = @job_number
		AND JOB_COMPONENT_NBR = @job_component_nbr
		AND ( NON_BILL_FLAG IS NULL OR NON_BILL_FLAG = 0 )
		AND ( BILL_HOLD_FLAG IS NULL OR BILL_HOLD_FLAG = 0 )
		AND ( AR_INV_NBR IS NULL AND AB_FLAG = 6 )    
		AND EXISTS ( SELECT * 
		               FROM dbo.BILL_APPR_DTL bad
		         INNER JOIN dbo.BILL_APPR_ITEM bai
						 ON ( bad.BA_DTL_ID = bai.BA_DTL_ID )
					  WHERE	( bad.BA_ID = @ba_id )
						AND ( bad.JOB_NUMBER = io.JOB_NUMBER )
		                AND ( bad.JOB_COMPONENT_NBR = io.JOB_COMPONENT_NBR )
		                AND ( bad.FNC_CODE = io.FNC_CODE )					    
					    AND ( bai.REC_TYPE = 'I' )
					    AND ( bai.REC_ID = io.IO_ID )
					    AND ( bai.INSTR = 1 ))
   
UPDATE @interim_rec_dtl
   SET REC_FLAG = 2
 WHERE REC_FLAG IS NULL
   AND PREV_REC IS NOT NULL
   AND PREV_REC <> 0.00
        
UPDATE @interim_rec_dtl
   SET REC_FLAG = 1
 WHERE REC_FLAG IS NULL
   AND AB_FLAG = 6
   AND AR_INV_NBR IS NULL

UPDATE @interim_rec_dtl
   SET REC_FLAG = 0
 WHERE REC_FLAG IS NULL

SELECT
	ird.FNC_CODE, ird.FNC_TYPE, ird.FNC_DESCRIPTION, ird.ITEM_ID,
	ird.LINE_NUMBER, ird.AP_SEQ, ird.EXT_AMOUNT, ird.EXT_MARKUP_AMT,
	ird.EXT_STATE_RESALE, ird.EXT_COUNTY_RESALE, ird.EXT_CITY_RESALE,
	ird.EXT_NONRESALE_TAX, ird.LINE_TOTAL, ird.BA_ID, ird.WIP_AMOUNT,
	ird.AMOUNT, ird.AB_FLAG, ird.AR_INV_NBR, ird.TAX_CODE, ird.GLACODE_STATE,
	ird.GLACODE_CNTY, ird.GLACODE_CITY, ird.PREV_REC, ird.REC_FLAG
FROM
	@interim_rec_dtl ird
ORDER BY
	ird.FNC_TYPE, ird.FNC_CODE, ird.ITEM_ID, ird.LINE_NUMBER
