CREATE PROCEDURE [dbo].[advsp_populate_missing_time_table] 
	@start_date	varchar(12),
	@end_date	varchar(12),
	@exclude_hol_wkends	smallint,	-- 0-include; 1-exclude
	@missing_time_only	smallint	-- 0-include; 1-exclude dates with any hours
AS
BEGIN

	SET NOCOUNT ON

	CREATE TABLE #DAYS(DAYDATE smalldatetime)
	CREATE TABLE #MISSING_TIME_DTL_PARTDAYSCHECK([RowID] [int] IDENTITY(1,1), 
												 [EMP_CODE] [varchar](6) NULL,
												 [SUPERVISOR_CODE] [varchar](6) NULL,
												 [WORKDATE] [smalldatetime] NULL,
												 [DAYOFWEEK] [varchar](3) NULL,
												 [WEEKOFDATE] [smalldatetime] NULL,
												 [STANDARD_HRS] [decimal](5,2) NULL,
												 [HOURS_WORKED] [decimal](5,2) NULL,
												 [VARIANCE] [decimal](5,2) NULL)
											 
	DECLARE @BEGIN_DATE AS smalldatetime
	DECLARE @LAST_DATE AS smalldatetime
	DECLARE @CURRENT_DATE AS smalldatetime
	DECLARE @ROW_COUNT AS integer
	DECLARE @ROW_ID AS integer
	DECLARE @EMP_CODE AS varchar(6)
	DECLARE @SUPERVISOR_CODE AS varchar(6)
	DECLARE @WORKDATE AS smalldatetime
	DECLARE @DAYOFWEEK AS varchar(3)
	DECLARE @WEEKOFDATE AS smalldatetime
	DECLARE @STANDARD_HRS AS decimal(5,2)
	DECLARE @HOURS_WORKED AS decimal(5,2)
	DECLARE @VARIANCE AS decimal(5,2)
	DECLARE @WEEKLYTIME AS smallint
	DECLARE @EMP_NON_TASK_COUNT AS int

	SET @BEGIN_DATE = CAST(@start_date AS smalldatetime)
	SET @LAST_DATE = CAST(@end_date AS smalldatetime)

	SET @CURRENT_DATE = @BEGIN_DATE

	WHILE @CURRENT_DATE <= @LAST_DATE  BEGIN

		SET @EMP_NON_TASK_COUNT = (SELECT COUNT(*) FROM dbo.EMP_NON_TASKS WHERE @CURRENT_DATE BETWEEN [START_DATE] AND [END_DATE] AND [TYPE] = 'H' AND [ALL_DAY] = 1)
		
		IF @EMP_NON_TASK_COUNT = 0 BEGIN
			
			INSERT INTO 
				#DAYS 
			VALUES
				(@CURRENT_DATE)
			
		END
	
		SET @CURRENT_DATE = DATEADD(dd, 1, @CURRENT_DATE)
	
	END
	
	IF EXISTS(SELECT * FROM dbo.MISSING_TIME_HDR) BEGIN

		UPDATE 
			dbo.MISSING_TIME_HDR 
		SET 
			LAST_DATE_UPDATED = GETDATE()
	

	END ELSE BEGIN

		INSERT INTO 
			dbo.MISSING_TIME_HDR (LAST_DATE_UPDATED) 
		VALUES
			(GETDATE())

	END

	DELETE FROM dbo.MISSING_TIME_DTL

	INSERT INTO 
		dbo.MISSING_TIME_DTL(EMP_CODE, SUPERVISOR_CODE, WORKDATE, [DAYOFWEEK], WEEKOFDATE, STANDARD_HRS, HOURS_WORKED, VARIANCE)
	SELECT 
		E.EMP_CODE,
		E.SUPERVISOR_CODE,
		[WORKDATE] = D.DAYDATE,
		DAY_OF_WEEK = CASE DATEPART(dw, D.DAYDATE) 
							WHEN 1 THEN 'SUN' 
							WHEN 2 THEN 'MON' 
							WHEN 3 THEN 'TUE' 
							WHEN 4 THEN 'WED' 
							WHEN 5 THEN 'THU' 
							WHEN 6 THEN 'FRI' 
							WHEN 7 THEN 'SAT' END,
		BEGIN_WEEK_DATE = DATEADD(DD, 1-DATEPART(DW, D.DAYDATE), CONVERT(int, CONVERT(datetime, D.DAYDATE))),
		STANDARD_HOURS = CASE DATEPART(dw, D.DAYDATE) 
							WHEN 1 THEN ISNULL(E.SUN_HRS, 0)
							WHEN 2 THEN ISNULL(E.MON_HRS, 0) 
							WHEN 3 THEN ISNULL(E.TUE_HRS, 0)
							WHEN 4 THEN ISNULL(E.WED_HRS, 0)
							WHEN 5 THEN ISNULL(E.THU_HRS, 0)
							WHEN 6 THEN ISNULL(E.FRI_HRS, 0) 
							WHEN 7 THEN ISNULL(E.SAT_HRS, 0) END, 
		EMP_TOT_HRS = SUM(ISNULL(ET.EMP_TOT_HRS, 0)),
		VARIANCE = CASE DATEPART(dw, D.DAYDATE) 
							WHEN 1 THEN ISNULL(E.SUN_HRS, 0)
							WHEN 2 THEN ISNULL(E.MON_HRS, 0) 
							WHEN 3 THEN ISNULL(E.TUE_HRS, 0)
							WHEN 4 THEN ISNULL(E.WED_HRS, 0)
							WHEN 5 THEN ISNULL(E.THU_HRS, 0)
							WHEN 6 THEN ISNULL(E.FRI_HRS, 0) 
							WHEN 7 THEN ISNULL(E.SAT_HRS, 0) END - SUM(ISNULL(ET.EMP_TOT_HRS, 0))
	FROM 
		#DAYS D CROSS APPLY
		dbo.EMPLOYEE E LEFT OUTER JOIN
		dbo.EMP_TIME ET ON ET.EMP_DATE = D.DAYDATE AND
						   ET.EMP_CODE = E.EMP_CODE
	WHERE
		E.EMP_TERM_DATE IS NULL AND
		D.DAYDATE >= E.EMP_DATE AND
		ISNULL(E.EMP_OMIT_MISSING, 0) = 0
	GROUP BY
		E.EMP_CODE,
		E.SUPERVISOR_CODE,
		E.SUN_HRS,
		E.MON_HRS, 
		E.TUE_HRS,
		E.WED_HRS,
		E.THU_HRS,
		E.FRI_HRS,
		E.SAT_HRS,
		D.DAYDATE
	ORDER BY 
		D.DAYDATE
	

	INSERT INTO #MISSING_TIME_DTL_PARTDAYSCHECK
	SELECT 
		[EMP_CODE],
		[SUPERVISOR_CODE],
		[WORKDATE],
		[DAYOFWEEK],
		[WEEKOFDATE],
		[STANDARD_HRS],
		[HOURS_WORKED],
		[VARIANCE]
	FROM 
		dbo.MISSING_TIME_DTL
	
	SET @ROW_COUNT = @@ROWCOUNT
	SET @ROW_ID = 1

	WHILE @ROW_ID <= @ROW_COUNT BEGIN

		SELECT
			@EMP_CODE = EMP_CODE,
			@SUPERVISOR_CODE = SUPERVISOR_CODE,
			@WORKDATE = WORKDATE,
			@DAYOFWEEK = [DAYOFWEEK],
			@WEEKOFDATE = WEEKOFDATE,
			@STANDARD_HRS = STANDARD_HRS,
			@HOURS_WORKED = HOURS_WORKED,
			@VARIANCE = VARIANCE
		FROM 
			#MISSING_TIME_DTL_PARTDAYSCHECK
		WHERE
			RowID = @ROW_ID

		IF EXISTS(SELECT * FROM dbo.EMP_NON_TASKS WHERE [START_DATE] = @WORKDATE AND [TYPE] = 'H' AND [ALL_DAY] = 0) BEGIN
	
			SELECT 
				@STANDARD_HRS = (@STANDARD_HRS - [HOURS])
			FROM 
				dbo.EMP_NON_TASKS 
			WHERE 
				[START_DATE] = @WORKDATE AND 
				[TYPE] = 'H' AND 
				[ALL_DAY] = 0
			
			SET @VARIANCE = @STANDARD_HRS - @HOURS_WORKED
		
			IF @VARIANCE <= 0 BEGIN
		
				DELETE FROM 
					dbo.MISSING_TIME_DTL
				WHERE
					EMP_CODE = @EMP_CODE AND
					SUPERVISOR_CODE = @SUPERVISOR_CODE AND
					WORKDATE = @WORKDATE AND
					[DAYOFWEEK] = @DAYOFWEEK AND
					WEEKOFDATE = @WEEKOFDATE
		
			END ELSE BEGIN
		
				UPDATE
					dbo.MISSING_TIME_DTL
				SET
					STANDARD_HRS = @STANDARD_HRS,
					VARIANCE = @VARIANCE
				WHERE
					EMP_CODE = @EMP_CODE AND
					SUPERVISOR_CODE = @SUPERVISOR_CODE AND
					WORKDATE = @WORKDATE AND
					[DAYOFWEEK] = @DAYOFWEEK AND
					WEEKOFDATE = @WEEKOFDATE
				
			END
		
		END

		SET @ROW_ID = @ROW_ID + 1
	
	END

	DROP TABLE #MISSING_TIME_DTL_PARTDAYSCHECK
	DROP TABLE #DAYS

END
GO