CREATE PROCEDURE [dbo].[advsp_project_summary_load]
	@DATE_TYPE AS int,
	@START_DATE AS smalldatetime,
	@END_DATE AS smalldatetime, 	
	@ClientCodeList varchar(max),
	@AECodeList varchar(max),
	@SalesClassCodeList varchar(max),
	@JobTypeList varchar(max)
AS
BEGIN

	SELECT
		[ID] = NEWID(),     
		[ClientCode] = J.CL_CODE,
		[ClientName] = C.CL_NAME,
		[DivisionCode] = J.DIV_CODE,
		[DivisionName] = D.DIV_NAME,
		[ProductCode] = J.PRD_CODE,
		[ProductName] = P.PRD_DESCRIPTION, 
		[ClientContactCode] = JC.PRD_CONT_CODE,
		[ClientContactID] = JC.CDP_CONTACT_ID,
		[ClientContact] = CASE WHEN CC.CONT_MI IS NULL OR CC.CONT_MI = '' THEN RTRIM(LTRIM(ISNULL(CC.CONT_FNAME, '') + ' ' + ISNULL(CC.CONT_LNAME, ''))) ELSE CC.CONT_FNAME + ' ' + CC.CONT_MI + '. ' + CC.CONT_LNAME END,
		[AccountExecutiveCode] = JC.EMP_CODE,
		[AccountExecutive] = COALESCE((RTRIM(EMP.EMP_FNAME) + ' '),'') + COALESCE((EMP.EMP_MI + '. '),'') + COALESCE(EMP.EMP_LNAME,''),
		[ManagerCode] = JOBT.MGR_EMP_CODE,
		[Manager] = COALESCE((RTRIM(MEMP.EMP_FNAME) + ' '),'') + COALESCE((MEMP.EMP_MI + '. '),'') + COALESCE(MEMP.EMP_LNAME,''),
		[JobNumber] = JC.JOB_NUMBER,
		[JobDescription] = J.JOB_DESC,
		[ComponentNumber] = JC.JOB_COMPONENT_NBR,
		[JobComponent] = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), JC.JOB_NUMBER), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), JC.JOB_COMPONENT_NBR), 2),
		[ComponentDescription] = JC.JOB_COMP_DESC,
		[JobQuantity] = JC.JOB_QTY,
		[JobTypeCode] = JC.JT_CODE,
		[JobTypeDescription] = JT.JT_DESC,
		[StatusCode] = JOBT.TRF_CODE,
		[Status] = T.TRF_DESCRIPTION,
		[GutPercentComplete] = JOBT.PERCENT_COMPLETE,
		[ClientReference] = J.JOB_CLI_REF,
		[StartDate] = JC.[START_DATE],
		[DueDate] = JC.JOB_FIRST_USE_DATE,
		[JobComments] = J.JOB_COMMENTS,
		[ProjectScheduleComments] = JOBT.TRF_COMMENTS,
		[NextTaskDue] = NDT.TASK_DESCRIPTION,
		[NextTaskDueDate] = NDT.JOB_REVISED_DATE,
		[NextTaskDueComment] = NDT.FNC_COMMENTS,
		[EstimateClientContactID] = EC.CDP_CONTACT_ID,
		[EstimateClientContact] = CASE WHEN ECC.CONT_MI IS NULL OR ECC.CONT_MI = '' THEN RTRIM(LTRIM(ISNULL(ECC.CONT_FNAME, '') + ' ' + ISNULL(ECC.CONT_LNAME, ''))) ELSE ECC.CONT_FNAME + ' ' + ECC.CONT_MI + '. ' + ECC.CONT_LNAME END,
		[EstimateDate] = EA.[EstimateDate],
		[EstimateApprovedDate] = EA.[EstimateApprovedDate],
		[EstimateApprovedBy] = EA.[EstimateApprovedBy],
		[EstimateAmount] = EA.[EstimateAmount],
		[EstimateAmountWithContingency] = EA.[EstimateAmountWithContingency],
		[EstimateHours] = EA.[EstimateHours],
		[QvAPercent] = CASE WHEN EA.[EstimateAmount] = 0 THEN 0 ELSE (JTOT.[Total] / EA.[EstimateAmount]) END,
		[QvAPercentHours] = CASE WHEN EA.[EstimateHours] = 0 THEN 0 ELSE (JTOT.[Hours] / EA.[EstimateHours]) END,
		[QvAPercentWithContingency] = CASE WHEN EA.[EstimateAmountWithContingency] = 0 THEN 0 ELSE (JTOT.[Total] / EA.[EstimateAmountWithContingency]) END,
		[NextMilestoneTaskDue] = NDTM.TASK_DESCRIPTION,
		[NextMilestoneDueDate] = NDTM.JOB_REVISED_DATE,
		[NextMilestoneDueComment] = NDTM.FNC_COMMENTS,
		[ClientType1Code] = CP.CLIENT_TYPE1_ID,
		[ClientType1Description] = CT1.[DESCRIPTION],
		[ClientType2Code] = CP.CLIENT_TYPE2_ID,
		[ClientType2Description] = CT2.[DESCRIPTION],
		[ClientType3Code] = CP.CLIENT_TYPE3_ID,
		[ClientType3Description] = CT3.[DESCRIPTION],
		[JobLevelAssignments] = COALESCE(JTA.ASSIGN_1 + CHAR(13)+CHAR(10)  ,'') + COALESCE(JTA.ASSIGN_2 + CHAR(13)+CHAR(10)  ,'') + COALESCE(JTA.ASSIGN_3 + CHAR(13)+CHAR(10)  ,'') + COALESCE(JTA.ASSIGN_4 + CHAR(13)+CHAR(10)  ,'') + COALESCE(JTA.ASSIGN_5,''),
		[Resources] = STUFF((SELECT DISTINCT CHAR(13)+CHAR(10) + COALESCE( EMP_FNAME + ' ', '' ) + EMP_LNAME
							  FROM
							dbo.JOB_TRAFFIC_DET_EMPS JTDE
							INNER JOIN
							dbo.EMPLOYEE_CLOAK E ON JTDE.EMP_CODE = E.EMP_CODE
							WHERE
							JTDE.JOB_NUMBER = JC.JOB_NUMBER AND
							JTDE.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR 
							FOR XML PATH(''), TYPE).value('.','varchar(max)'),1,1,''),
	    [UpcomingSteps] = STUFF((SELECT CHAR(13)+CHAR(10) + CONVERT(varchar, TASK_START_DATE,1) + ' - ' + CONVERT(varchar, JOB_REVISED_DATE,1) + ' ' + TASK_DESCRIPTION
							  FROM
							dbo.JOB_TRAFFIC_DET JTD
							WHERE
							JTD.JOB_NUMBER = JC.JOB_NUMBER AND
							JTD.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR AND JOB_COMPLETED_DATE IS NULL ORDER BY TASK_START_DATE
							FOR XML PATH(''), TYPE).value('.','varchar(max)'),1,1,'')
	FROM         
		[dbo].[JOB_LOG] AS J INNER JOIN
		[dbo].[JOB_COMPONENT] AS JC ON JC.JOB_NUMBER = J.JOB_NUMBER INNER JOIN
		[dbo].[EMPLOYEE_CLOAK] AS EMP ON EMP.EMP_CODE = JC.EMP_CODE LEFT OUTER JOIN
		[dbo].[JOB_TYPE] AS JT ON JT.JT_CODE = JC.JT_CODE INNER JOIN
		[dbo].[CLIENT] AS C ON C.CL_CODE = J.CL_CODE INNER JOIN
		[dbo].[DIVISION] AS D ON D.CL_CODE = J.CL_CODE AND
								 D.DIV_CODE = J.DIV_CODE INNER JOIN
		[dbo].[PRODUCT] AS P ON P.CL_CODE = J.CL_CODE AND
								P.DIV_CODE = J.DIV_CODE AND
								P.PRD_CODE = J.PRD_CODE INNER JOIN
		[dbo].[SALES_CLASS] AS SC ON SC.SC_CODE = J.SC_CODE INNER JOIN
		[dbo].[JOB_TRAFFIC] AS JOBT ON JOBT.JOB_NUMBER = JC.JOB_NUMBER AND
									   JOBT.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR LEFT OUTER JOIN
		[dbo].[TRAFFIC] AS T ON T.TRF_CODE = JOBT.TRF_CODE LEFT OUTER JOIN
		[dbo].[COMPANY_PROFILE] CP ON CP.PRD_CODE = P.PRD_CODE AND CP.DIV_CODE = P.DIV_CODE AND CP.CL_CODE = P.CL_CODE LEFT OUTER JOIN
		[dbo].[CLIENT_TYPE1] CT1 ON CT1.CLIENT_TYPE1_ID = CP.CLIENT_TYPE1_ID LEFT OUTER JOIN
		[dbo].[CLIENT_TYPE2] CT2 ON CT2.CLIENT_TYPE2_ID = CP.CLIENT_TYPE2_ID LEFT OUTER JOIN
		[dbo].[CLIENT_TYPE3] CT3 ON CT3.CLIENT_TYPE3_ID = CP.CLIENT_TYPE3_ID LEFT OUTER JOIN
		(SELECT 
			[JobNumber] = EA.JOB_NUMBER,
			[ComponentNumber] = EA.JOB_COMPONENT_NBR,
			[EstimateNumber] = ERD.ESTIMATE_NUMBER,
			[EstimateComponentNumber] = ERD.EST_COMPONENT_NBR,
			[EstimateQuoteNumber] = ERD.EST_QUOTE_NBR,
			[EstimateRevisionNumber] = ERD.EST_REV_NBR,
			[EstimateDate] = EA.CREATE_DATE,
			[EstimateApprovedDate] = EA.EST_APPR_DATE,
			[EstimateApprovedBy] = EA.EST_APPR_BY,
			[EstimateAmount] = SUM(ISNULL(ERD.LINE_TOTAL, 0)),
			[EstimateAmountWithContingency] = SUM(ISNULL(ERD.LINE_TOTAL, 0)) + SUM(ISNULL(ERD.LINE_TOTAL_CONT, 0)),
			[EstimateHours] = SUM(CASE WHEN F.FNC_TYPE = 'E' THEN ISNULL(ERD.EST_REV_QUANTITY, 0) ELSE 0 END),
			[EstimateHoursWithContingency] = SUM(CASE WHEN F.FNC_TYPE = 'E' THEN ISNULL(ERD.EXT_CONTINGENCY, 0) ELSE 0 END)
		FROM 
			[dbo].[ESTIMATE_APPROVAL] AS EA INNER JOIN 
			[dbo].[ESTIMATE_REV_DET] AS ERD ON ERD.ESTIMATE_NUMBER = EA.ESTIMATE_NUMBER AND 
											   ERD.EST_COMPONENT_NBR = EA.EST_COMPONENT_NBR AND 
											   ERD.EST_QUOTE_NBR = EA.EST_QUOTE_NBR AND 
											   ERD.EST_REV_NBR = EA.EST_REVISION_NBR INNER JOIN 
			[dbo].[FUNCTIONS] AS F ON F.FNC_CODE = ERD.FNC_CODE
		GROUP BY 
			EA.JOB_NUMBER,
			EA.JOB_COMPONENT_NBR,
			ERD.ESTIMATE_NUMBER,
			ERD.EST_COMPONENT_NBR,
			ERD.EST_QUOTE_NBR,
			ERD.EST_REV_NBR,
			EA.CREATE_DATE,
			EA.EST_APPR_DATE,
			EA.EST_APPR_BY) AS EA ON EA.[JobNumber] = JC.JOB_NUMBER AND 
									  EA.[ComponentNumber] = JC.JOB_COMPONENT_NBR LEFT OUTER JOIN
		[dbo].[ESTIMATE_COMPONENT] AS EC ON EC.ESTIMATE_NUMBER = EA.[EstimateNumber] AND 
										    EC.EST_COMPONENT_NBR = EA.[EstimateComponentNumber] LEFT OUTER JOIN
		[dbo].[CDP_CONTACT_HDR] AS ECC ON ECC.CDP_CONTACT_ID = EC.CDP_CONTACT_ID LEFT OUTER JOIN
		[dbo].[CDP_CONTACT_HDR] AS CC ON CC.CDP_CONTACT_ID = JC.CDP_CONTACT_ID LEFT OUTER JOIN
		[dbo].[EMPLOYEE_CLOAK] AS MEMP ON MEMP.EMP_CODE = JOBT.MGR_EMP_CODE LEFT OUTER JOIN
		(SELECT  
				[ID] = ROW_NUMBER() OVER(PARTITION BY SJOBDT.JOB_NUMBER, SJOBDT.JOB_COMPONENT_NBR ORDER BY SJOBDT.JOB_NUMBER, SJOBDT.JOB_COMPONENT_NBR, SJOBDT.JOB_REVISED_DATE, SJOBDT.SEQ_NBR),
				SJOBDT.JOB_NUMBER, 
				SJOBDT.JOB_COMPONENT_NBR,
				SJOBDT.FNC_CODE,
				SJOBDT.JOB_REVISED_DATE,
				SJOBDT.FNC_COMMENTS, 
				SJOBDT.TASK_DESCRIPTION
			FROM         
				[dbo].[JOB_TRAFFIC_DET] AS SJOBDT 
			WHERE				  
				SJOBDT.JOB_COMPLETED_DATE IS NULL) AS NDT ON NDT.JOB_NUMBER = JC.JOB_NUMBER AND 
															 NDT.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR AND
															 NDT.ID = 1 LEFT OUTER JOIN
		(SELECT  
				[ID] = ROW_NUMBER() OVER(PARTITION BY SJOBDT.JOB_NUMBER, SJOBDT.JOB_COMPONENT_NBR ORDER BY SJOBDT.JOB_NUMBER, SJOBDT.JOB_COMPONENT_NBR, SJOBDT.JOB_REVISED_DATE, SJOBDT.SEQ_NBR),
				SJOBDT.JOB_NUMBER, 
				SJOBDT.JOB_COMPONENT_NBR,
				SJOBDT.FNC_CODE,
				SJOBDT.JOB_REVISED_DATE,
				SJOBDT.FNC_COMMENTS, 
				SJOBDT.TASK_DESCRIPTION
			FROM         
				[dbo].[JOB_TRAFFIC_DET] AS SJOBDT 
			WHERE				  
				SJOBDT.JOB_COMPLETED_DATE IS NULL AND SJOBDT.MILESTONE = 1) AS NDTM ON NDTM.JOB_NUMBER = JC.JOB_NUMBER AND 
															 NDTM.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR AND
															 NDTM.ID = 1 LEFT OUTER JOIN 
		(SELECT 
			[JobNumber] = JOBTOTALS.[JobNumber],
			[JobComponentNumber] = JOBTOTALS.[JobComponentNumber],
			[Total] = SUM(JOBTOTALS.[Total]),
			[Hours] = SUM(JOBTOTALS.[Hours])
		FROM
			(SELECT
				[ResourceType] = 'AB',
				[JobNumber] = AB.JOB_NUMBER,
				[JobComponentNumber] = AB.JOB_COMPONENT_NBR,
				[Total] = 0,
				[Hours] = 0
			FROM 
				[dbo].[ADVANCE_BILLING] AS AB
					
			UNION ALL

			SELECT
				[ResourceType] = 'C',
				[JobNumber] = COOP.JOB_NUMBER,
				[JobComponentNumber] = COOP.JOB_COMPONENT_NBR,
				[Total] = ISNULL(COOP.AMOUNT, 0),
				[Hours] = 0
			FROM 
				[dbo].[CLIENT_OOP] AS COOP
						
			UNION ALL

			SELECT
				[ResourceType] = 'E',
				[JobNumber] = ETD.JOB_NUMBER,
				[JobComponentNumber] = ETD.JOB_COMPONENT_NBR,
				[Total] = ISNULL(ETD.LINE_TOTAL, 0),
				[Hours] = CASE WHEN F.FNC_TYPE = 'E' THEN ISNULL(ETD.EMP_HOURS, 0) ELSE 0 END
			FROM 
				[dbo].[EMP_TIME_DTL] AS ETD INNER JOIN 
				[dbo].[EMP_TIME] AS ET ON ET.ET_ID = ETD.ET_ID INNER JOIN 
				[dbo].[FUNCTIONS] AS F ON F.FNC_CODE = ETD.FNC_CODE
							
			UNION ALL

			SELECT
				[ResourceType] = 'EI',
				[JobNumber] = EIA.JOB_NUMBER,
				[JobComponentNumber] = EIA.JOB_COMPONENT_NBR,
				[Total] = 0,
				[Hours] = 0
			FROM 
				[dbo].[ESTIMATE_INT_APPR] AS EIA
				
			UNION ALL

			SELECT
				[ResourceType] = 'ES',
				[JobNumber] = EA.JOB_NUMBER,
				[JobComponentNumber] = EA.JOB_COMPONENT_NBR,
				[Total] = 0,
				[Hours] = 0
			FROM 
				[dbo].[ESTIMATE_APPROVAL] AS EA
				
			UNION ALL

			SELECT
				[ResourceType] = 'I',
				[JobNumber] = [IO].JOB_NUMBER,
				[JobComponentNumber] = [IO].JOB_COMPONENT_NBR,
				[Total] = ISNULL([IO].LINE_TOTAL, 0),
				[Hours] = CASE WHEN F.FNC_TYPE = 'E' THEN ISNULL([IO].IO_QTY, 0) ELSE 0 END
			FROM 
				[dbo].[INCOME_ONLY] AS [IO] INNER JOIN 
				[dbo].[FUNCTIONS] AS F ON F.FNC_CODE = [IO].FNC_CODE
					
			UNION ALL

			SELECT
				[ResourceType] = 'PO',
				[JobNumber] = POD.JOB_NUMBER,
				[JobComponentNumber] = POD.JOB_COMPONENT_NBR,
				[Total] = 0,
				[Hours] = 0
			FROM 
				[dbo].[PURCHASE_ORDER] AS PO INNER JOIN 
				[dbo].[PURCHASE_ORDER_DET] AS POD ON POD.PO_NUMBER = PO.PO_NUMBER
						
			UNION ALL

			SELECT
				[ResourceType] = 'V',
				[JobNumber] = APP.JOB_NUMBER,
				[JobComponentNumber] = APP.JOB_COMPONENT_NBR,
				[Total] = ISNULL(APP.LINE_TOTAL, 0),
				[Hours] = CASE WHEN F.FNC_TYPE = 'E' THEN ISNULL(APP.AP_PROD_QUANTITY, 0) ELSE 0 END
			FROM 
				[dbo].[AP_PRODUCTION] AS APP INNER JOIN 
				[dbo].[AP_HEADER] AS APH ON APH.AP_ID = APP.AP_ID AND 
									   APH.AP_SEQ = APP.AP_SEQ INNER JOIN 
				[dbo].[FUNCTIONS] AS F ON F.FNC_CODE = APP.FNC_CODE) AS JOBTOTALS
		GROUP BY
			JOBTOTALS.[JobNumber],
			JOBTOTALS.[JobComponentNumber]) AS JTOT ON JTOT.JobNumber = JC.JOB_NUMBER AND
													   JTOT.JobComponentNumber = JC.JOB_COMPONENT_NBR LEFT OUTER JOIN
		(SELECT JOB_NUMBER, JOB_COMPONENT_NBR, CASE WHEN JOB_TRAFFIC.ASSIGN_1 IS NOT NULL THEN (SELECT ISNULL(CAST(AGY_SETTINGS_VALUE AS varchar(20)), '') FROM AGY_SETTINGS WHERE (AGY_SETTINGS_CODE = 'TR_TITLE1')) + ': ' + 
				ISNULL(EMPLOYEE_1.EMP_FNAME,'')+ISNULL(' '+EMPLOYEE_1.EMP_MI+'.','')+ISNULL(' '+EMPLOYEE_1.EMP_LNAME,'') ELSE NULL END AS ASSIGN_1,
	    CASE WHEN JOB_TRAFFIC.ASSIGN_2 IS NOT NULL THEN (SELECT ISNULL(CAST(AGY_SETTINGS_VALUE AS varchar(20)), '') FROM AGY_SETTINGS WHERE (AGY_SETTINGS_CODE = 'TR_TITLE2')) + ': ' + 
				ISNULL(EMPLOYEE_2.EMP_FNAME,'')+ISNULL(' '+EMPLOYEE_2.EMP_MI+'.','')+ISNULL(' '+EMPLOYEE_2.EMP_LNAME,'') ELSE NULL END AS ASSIGN_2,
		CASE WHEN JOB_TRAFFIC.ASSIGN_3 IS NOT NULL THEN (SELECT ISNULL(CAST(AGY_SETTINGS_VALUE AS varchar(20)), '') FROM AGY_SETTINGS WHERE (AGY_SETTINGS_CODE = 'TR_TITLE3')) + ': ' + 
				ISNULL(EMPLOYEE_3.EMP_FNAME,'')+ISNULL(' '+EMPLOYEE_3.EMP_MI+'.','')+ISNULL(' '+EMPLOYEE_3.EMP_LNAME,'') ELSE NULL END AS ASSIGN_3,
		CASE WHEN JOB_TRAFFIC.ASSIGN_4 IS NOT NULL THEN (SELECT ISNULL(CAST(AGY_SETTINGS_VALUE AS varchar(20)), '') FROM AGY_SETTINGS WHERE (AGY_SETTINGS_CODE = 'TR_TITLE4')) + ': ' + 
				ISNULL(EMPLOYEE_4.EMP_FNAME,'')+ISNULL(' '+EMPLOYEE_4.EMP_MI+'.','')+ISNULL(' '+EMPLOYEE_4.EMP_LNAME,'') ELSE NULL END AS ASSIGN_4,
		CASE WHEN JOB_TRAFFIC.ASSIGN_5 IS NOT NULL THEN (SELECT ISNULL(CAST(AGY_SETTINGS_VALUE AS varchar(20)), '') FROM AGY_SETTINGS WHERE (AGY_SETTINGS_CODE = 'TR_TITLE5')) + ': ' + 
				ISNULL(EMPLOYEE_5.EMP_FNAME,'')+ISNULL(' '+EMPLOYEE_5.EMP_MI+'.','')+ISNULL(' '+EMPLOYEE_5.EMP_LNAME,'') ELSE NULL END AS ASSIGN_5
				FROM JOB_TRAFFIC  LEFT OUTER JOIN
									EMPLOYEE  EMPLOYEE_5  ON JOB_TRAFFIC.ASSIGN_5 = EMPLOYEE_5.EMP_CODE LEFT OUTER JOIN
									EMPLOYEE  EMPLOYEE_4  ON JOB_TRAFFIC.ASSIGN_4 = EMPLOYEE_4.EMP_CODE LEFT OUTER JOIN
									EMPLOYEE  EMPLOYEE_3  ON JOB_TRAFFIC.ASSIGN_3 = EMPLOYEE_3.EMP_CODE LEFT OUTER JOIN
									EMPLOYEE  EMPLOYEE_2  ON JOB_TRAFFIC.ASSIGN_2 = EMPLOYEE_2.EMP_CODE LEFT OUTER JOIN
									EMPLOYEE  EMPLOYEE_1  ON JOB_TRAFFIC.ASSIGN_1 = EMPLOYEE_1.EMP_CODE) AS JTA ON JTA.JOB_NUMBER = JC.JOB_NUMBER AND
																												   JTA.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR 
		--																										   LEFT OUTER JOIN
		--(SELECT DISTINCT JOB_NUMBER, JOB_COMPONENT_NBR, ISNULL(dbo.fn_task_employees_all(JOB_NUMBER, JOB_COMPONENT_NBR, 8),'') AS ASSIGNEES
		--						FROM JOB_TRAFFIC_DET_EMPS) AS JTAS ON JTAS.JOB_NUMBER = JC.JOB_NUMBER AND
		--															  JTAS.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR LEFT OUTER JOIN
		--(SELECT DISTINCT JOB_NUMBER, JOB_COMPONENT_NBR, ISNULL(dbo.fn_task_all(JOB_NUMBER, JOB_COMPONENT_NBR, 3),'') AS TASKS
		--						FROM JOB_TRAFFIC_DET_EMPS) AS JTASKS ON JTASKS.JOB_NUMBER = JC.JOB_NUMBER AND
		--															    JTASKS.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR
	WHERE     
		(JC.JOB_PROCESS_CONTRL <> 6) AND 
		(JC.JOB_PROCESS_CONTRL <> 12) AND 
		(JOBT.COMPLETED_DATE IS NULL) AND
		1 = CASE WHEN @DATE_TYPE = 0 THEN CASE WHEN JC.[START_DATE] >= @START_DATE AND JC.[START_DATE] <= CONVERT(DATETIME, @END_DATE +' 23:59:59', 101) THEN 1 ELSE 0 END
				 WHEN @DATE_TYPE = 1 THEN CASE WHEN JC.JOB_FIRST_USE_DATE >= @START_DATE AND JC.JOB_FIRST_USE_DATE <= CONVERT(DATETIME, @END_DATE +' 23:59:59', 101) THEN 1 ELSE 0 END
				 WHEN @DATE_TYPE = 2 THEN CASE WHEN NDT.JOB_REVISED_DATE >= @START_DATE AND NDT.JOB_REVISED_DATE <= CONVERT(DATETIME, @END_DATE +' 23:59:59', 101) THEN 1 ELSE 0 END
				 WHEN @DATE_TYPE = 3 THEN CASE WHEN EA.[EstimateDate] >= @START_DATE AND EA.[EstimateDate] <= CONVERT(DATETIME, @END_DATE +' 23:59:59', 101) THEN 1 ELSE 0 END
				 WHEN @DATE_TYPE = 4 THEN CASE WHEN EA.[EstimateApprovedDate] >= @START_DATE AND EA.[EstimateApprovedDate] <= CONVERT(DATETIME, @END_DATE +' 23:59:59', 101) THEN 1 ELSE 0 END
				 WHEN @DATE_TYPE = 5 THEN CASE WHEN J.CREATE_DATE >= @START_DATE AND J.CREATE_DATE <= CONVERT(DATETIME, @END_DATE +' 23:59:59', 101) THEN 1 ELSE 0 END END
        AND	(@ClientCodeList IS NULL OR (@ClientCodeList IS NOT NULL AND J.CL_CODE IN (SELECT * FROM dbo.udf_split_list(@ClientCodeList, ','))))
		AND	(@AECodeList IS NULL OR (@AECodeList IS NOT NULL AND JC.EMP_CODE IN (SELECT * from dbo.udf_split_list(@AECodeList, ','))))
		AND	(@SalesClassCodeList IS NULL OR (@SalesClassCodeList IS NOT NULL AND J.SC_CODE IN (SELECT * from dbo.udf_split_list(@SalesClassCodeList, ','))))
		AND (@JobTypeList IS NULL OR (@JobTypeList IS NOT NULL AND JC.JT_CODE IN (SELECT * FROM dbo.udf_split_list(@JobTypeList, ','))))
END
GO


