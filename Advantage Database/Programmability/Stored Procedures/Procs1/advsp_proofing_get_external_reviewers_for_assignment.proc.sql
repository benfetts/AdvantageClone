IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[advsp_proofing_get_external_reviewers_for_assignment]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[advsp_proofing_get_external_reviewers_for_assignment];
END
GO
CREATE PROCEDURE [dbo].[advsp_proofing_get_external_reviewers_for_assignment] 
@ALERT_ID INT,
@PROOFING_EXTERNAL_REVIEWER_ID INT = NULL
AS
/*=========== QUERY ===========*/
BEGIN
	DECLARE @X TABLE (	ID INT IDENTITY,
						PROOFING_EXTERNAL_REVIEWER_ID INT,
						ALERT_ID INT,
						ALRT_NOTIFY_HDR_ID INT,
						ALERT_STATE_ID INT,
						[NAME] VARCHAR(500),
						[EMAIL_ADDRESS] VARCHAR(500),
						[PROOFING_STATUS_ID] INT,
						IS_ACTIVE BIT
					  )
	;
	DECLARE
		@ALRT_NOTIFY_HDR_ID INT,
		@ALERT_STATE_ID INT,
		@IS_ROUTED BIT
	;
	SELECT
		@ALRT_NOTIFY_HDR_ID = A.ALRT_NOTIFY_HDR_ID,
		@ALERT_STATE_ID = A.ALERT_STATE_ID,
		@IS_ROUTED =	CASE
							WHEN	A.ALRT_NOTIFY_HDR_ID IS NOT NULL AND A.ALRT_NOTIFY_HDR_ID > 0 
									AND A.ALERT_STATE_ID IS NOT NULL AND A.ALERT_STATE_ID > 0 THEN 1
							ELSE 0
						END
	FROM
		ALERT A WITH(NOLOCK)
	WHERE
		A.ALERT_ID = @ALERT_ID
	;

	INSERT INTO @X(PROOFING_EXTERNAL_REVIEWER_ID, ALERT_ID, ALRT_NOTIFY_HDR_ID, ALERT_STATE_ID, [NAME], EMAIL_ADDRESS, IS_ACTIVE, PROOFING_STATUS_ID)
	SELECT
		A.PROOFING_EXTERNAL_REVIEWER_ID,
		@ALERT_ID,
		A.ALRT_NOTIFY_HDR_ID,
		A.ALERT_STATE_ID,
		A.[NAME],
		A.EMAIL,
		CAST(ISNULL(A.IS_ACTIVE, 0) AS BIT),
		A.PROOFING_STATUS_ID
	FROM	(
				SELECT
					AX.PROOFING_EXTERNAL_REVIEWER_ID,
					AX.ALRT_NOTIFY_HDR_ID,
					AX.ALERT_STATE_ID,
					PX.[NAME],
					PX.EMAIL,
					PX.IS_ACTIVE,
					NULL AS PROOFING_STATUS_ID
				FROM
					ALERT_RCPT_X_REVIEWER AX WITH(NOLOCK)
					INNER JOIN PROOFING_X_REVIEWER PX WITH(NOLOCK) ON AX.PROOFING_EXTERNAL_REVIEWER_ID = PX.ID
				WHERE
					AX.ALERT_ID = @ALERT_ID
				UNION
				SELECT
					AX.PROOFING_EXTERNAL_REVIEWER_ID,
					AX.ALRT_NOTIFY_HDR_ID,
					AX.ALERT_STATE_ID,
					PX.[NAME],
					PX.EMAIL,
					PX.IS_ACTIVE,
					AX.PROOFING_STATUS_ID
				FROM
					ALERT_RCPT_X_REVIEWER_DISMISSED AX WITH(NOLOCK)
					INNER JOIN PROOFING_X_REVIEWER PX WITH(NOLOCK) ON AX.PROOFING_EXTERNAL_REVIEWER_ID = PX.ID
				WHERE
					AX.ALERT_ID = @ALERT_ID
			) AS A

	SELECT
		[ProofingExternalReviewerID] = X.PROOFING_EXTERNAL_REVIEWER_ID,
		[AlertID] = X.ALERT_ID,
		[AlertTemplateID] = X.ALRT_NOTIFY_HDR_ID,
		[AlertStateID] = X.ALERT_STATE_ID,
		[Name] = X.[NAME],
		[EmailAddress] = X.EMAIL_ADDRESS,
		[IsActive] = ISNULL(X.IS_ACTIVE, 0),
		[ProofingStatusID] = X.PROOFING_STATUS_ID
	FROM
		@X AS X
	WHERE
		1 =	CASE
				WHEN @PROOFING_EXTERNAL_REVIEWER_ID IS NULL THEN 1
				WHEN @PROOFING_EXTERNAL_REVIEWER_ID IS NOT NULL AND X.PROOFING_EXTERNAL_REVIEWER_ID = @PROOFING_EXTERNAL_REVIEWER_ID THEN 1
				ELSE 0
			END
	;

END
/*=========== QUERY ===========*/