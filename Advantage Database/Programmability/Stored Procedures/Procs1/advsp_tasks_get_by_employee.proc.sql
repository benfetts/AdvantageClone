IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[advsp_tasks_get_by_employee]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[advsp_tasks_get_by_employee]
GO
CREATE PROCEDURE [dbo].[advsp_tasks_get_by_employee] 
@UserID VARCHAR(100)
,@EmpCode VARCHAR(6)
,@StartDate DATETIME
,@TaskStatus VARCHAR(10) = ''
,@TaskShow AS VARCHAR(10)
,@Search AS VARCHAR(500)
,@CP AS INT
,@CPID AS INT
,@SORT AS VARCHAR(50)
AS
/*=========== QUERY ===========*/
BEGIN
	DECLARE 
		@RESTRICTIONS INT
		,@SQL VARCHAR(MAX)
		,@HAS_TASK_SQL SMALLINT
		,@RESTRICTIONS_CP INT
		,@RESTRICTIONS_OFFICE INT
		,@EMP_CODE VARCHAR(6)
		,@TODAY_START_DUE BIT

	SET @SQL = '';
	SET @HAS_TASK_SQL = 0;
	SET @RESTRICTIONS = 0;
	SET @RESTRICTIONS_CP = 0;
	SET @RESTRICTIONS_OFFICE = 0;
	SET @CP = ISNULL(@CP, 0);
	SET @TODAY_START_DUE = 0;

	IF RTRIM(LTRIM(@SORT)) = ''
	BEGIN
		SET @SORT = NULL;
	END	

    IF (SELECT LOWER(VARIABLE_VALUE) FROM APP_VARS WHERE APP_VARS.USERID = @UserID AND APPLICATION = 'MyTasks' AND VARIABLE_NAME = 'TodayOnlyStartDue') = 'true'
    BEGIN
	   SET @TODAY_START_DUE = 1;
    END
    ELSE
    BEGIN
	   SET @TODAY_START_DUE = 0;
    END

	SELECT @RESTRICTIONS = COUNT(*)	FROM SEC_CLIENT WITH(NOLOCK) WHERE UPPER(USER_ID) = UPPER(@UserID);

	IF @CP > 0
	BEGIN
		SELECT @RESTRICTIONS_CP = COUNT(*) FROM CP_SEC_CLIENT WITH(NOLOCK) WHERE CDP_CONTACT_ID = @CPID;
	END

	SELECT @EMP_CODE = EMP_CODE
	FROM SEC_USER WITH(NOLOCK)
	WHERE UPPER(USER_CODE) = UPPER(@UserID);

	SELECT @RESTRICTIONS_OFFICE = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CODE;

	SET @SQL = @SQL + 'SELECT 
							A.*, 
							NULL AS END_SELECT_CLAUSE 
					   FROM (';

	IF RTRIM(LTRIM(@TaskStatus)) = '' --ALL
		OR LEFT(RTRIM(LTRIM(@TaskStatus)), 1) = 'P'
		OR LEFT(RTRIM(LTRIM(@TaskStatus)), 1) = 'A'
		OR LEFT(RTRIM(LTRIM(@TaskStatus)), 1) = 'H'
		OR LEFT(RTRIM(LTRIM(@TaskStatus)), 1) = 'L'
	BEGIN

		IF @CP = 1
		BEGIN
			SET @SQL = @SQL + 
				N'
					SELECT 
						JOB_LOG.CL_CODE + ''/'' + JOB_LOG.DIV_CODE + ''/'' + JOB_LOG.PRD_CODE AS CDP,  
						(RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20), JOB_LOG.JOB_NUMBER),6) + '' - '' + JOB_LOG.JOB_DESC ) AS JustJobData, 
						(RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20), JOB_LOG.JOB_NUMBER),6) + ''/'' + RIGHT(REPLICATE(''0'', 3) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_COMPONENT_NBR),3) + '' - '' + JOB_COMPONENT.JOB_COMP_DESC ) AS JobData, 
						ISNULL(JOB_TRAFFIC_DET.FNC_CODE, '''') AS FunctionCode, 
						ISNULL(JOB_TRAFFIC_DET.TASK_DESCRIPTION, '''') AS Task, 
						JOB_TRAFFIC_DET.FNC_COMMENTS,
						JOB_TRAFFIC_DET.TASK_START_DATE AS StartDate,
						JOB_TRAFFIC_DET.JOB_REVISED_DATE AS DueDate, 
						ISNULL(JOB_TRAFFIC_DET.REVISED_DUE_TIME,'''') AS DueTime, 
						DATENAME(dw, JOB_TRAFFIC_DET.JOB_REVISED_DATE) + '','' + SPACE(1) + DATENAME(m,JOB_TRAFFIC_DET.JOB_REVISED_DATE) + SPACE(1) + CAST(DAY(JOB_TRAFFIC_DET.JOB_REVISED_DATE) AS VARCHAR(2)) + '','' + SPACE(1) + CAST(YEAR(JOB_TRAFFIC_DET.JOB_REVISED_DATE) AS CHAR(4))
						+ ISNULL('', '' + JOB_TRAFFIC_DET.REVISED_DUE_TIME,'''') AS DUE_DATE_TIME,
						JOB_TRAFFIC_DET.JOB_NUMBER AS JobNo, 
						JOB_TRAFFIC_DET.JOB_COMPONENT_NBR AS JobComp, 
						JOB_TRAFFIC_DET.JOB_HRS AS HoursAllowed,
						JOB_TRAFFIC_DET.SEQ_NBR AS SeqNo,
						JOB_TRAFFIC_DET.TEMP_COMP_DATE AS TempCompleteDate, 
						JOB_TRAFFIC_DET.EMP_CODE AS EmpCode, 
						0 AS IS_EVENT, 
						-1 AS EVENT_TASK_ID, 
						ISNULL(JOB_TRAFFIC_DET.TASK_STATUS,''P'') AS TASK_STATUS,
						CASE
							WHEN RTRIM(LTRIM(UPPER(ISNULL(JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''P'' THEN ''Projected''
							WHEN RTRIM(LTRIM(UPPER(ISNULL(JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''A'' THEN ''Active''
							WHEN RTRIM(LTRIM(UPPER(ISNULL(JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''H'' THEN ''High''
							WHEN RTRIM(LTRIM(UPPER(ISNULL(JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''L'' THEN ''Low''
							ELSE ''Projected''
						END AS TASK_STATUS_TEXT,
						CASE
							WHEN RTRIM(LTRIM(UPPER(ISNULL(JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''P'' THEN ''4,Projected''
							WHEN RTRIM(LTRIM(UPPER(ISNULL(JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''A'' THEN ''2,Active''
							WHEN RTRIM(LTRIM(UPPER(ISNULL(JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''H'' THEN ''1,Active - High Priority''
							WHEN RTRIM(LTRIM(UPPER(ISNULL(JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''L'' THEN ''3,Active - Low Priority''
							ELSE ''Projected''
						END AS CARD_GROUPING_PRIORITY_TEXT,
						CASE
							WHEN RTRIM(LTRIM(UPPER(ISNULL(JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''P'' THEN ''Projected''
							ELSE ''Active''
						END AS ACTIVE_PENDING_TEXT,
						JOB_LOG.JOB_DESC, 
						JOB_COMPONENT.JOB_COMP_DESC, 
						(RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20), JOB_LOG.JOB_NUMBER),6) + ''/'' + RIGHT(REPLICATE(''0'', 3) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_COMPONENT_NBR),3)) AS JOB_COMP,
						[HAS_DOCUMENTS] = CONVERT(BIT, CASE WHEN JOB_TRAFFIC_DET_DOCS.JOB_NUMBER IS NOT NULL THEN 1 ELSE 0 END),
						NULL AS CARD_SEQ_NBR,
						0.000 AS PERCENT_COMPLETE,
						CASE
							WHEN EXISTS (SELECT ET_ID FROM EMP_TIME_DTL WHERE JOB_NUMBER = JOB_LOG.JOB_NUMBER AND JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR AND FNC_CODE = JOB_TRAFFIC_DET.FNC_EST) THEN ''Started''
							ELSE ''Not Started''
						END AS STARTED,
						CLIENT.CL_NAME,
								CASE
						   WHEN A.ALERT_LEVEL = ''BRD'' AND A.IS_WORK_ITEM = 1 THEN CAST(1 AS BIT)
						   ELSE CAST(0 AS BIT)
						END AS IS_BOARD_TASK,
				CASE WHEN A.ALERT_LEVEL = ''BRD'' THEN A.ALERT_ID ELSE NULL END AS ALERT_ID, 					
				ISNULL(SD.SPRINT_HDR_ID, 0) AS SPRINT_ID, ISNULL(A.[PRIORITY],3) AS PRIORITY
					FROM JOB_LOG WITH(NOLOCK)	
						INNER JOIN CLIENT WITH(NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE 
						INNER JOIN JOB_COMPONENT WITH(NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
						INNER JOIN JOB_TRAFFIC_DET WITH(NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
						INNER JOIN JOB_TRAFFIC WITH(NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR 
						LEFT OUTER JOIN ALERT A ON JOB_TRAFFIC_DET.JOB_NUMBER = A.JOB_NUMBER AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = A.JOB_COMPONENT_NBR AND JOB_TRAFFIC_DET.SEQ_NBR = A.TASK_SEQ_NBR
						LEFT OUTER JOIN SPRINT_DTL SD ON SD.ALERT_ID = A.ALERT_ID
						LEFT OUTER JOIN V_INACTIVE_WORK_ITEMS IWI ON A.ALERT_ID = IWI.ALERT_ID
				'
			IF @RESTRICTIONS_CP > 0
			BEGIN
				SET @SQL = @SQL + N'						
					INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
					'
			END
			SET @SQL = @SQL + N'						
				INNER JOIN JOB_TRAFFIC_DET_CNTS WITH(NOLOCK) ON JOB_TRAFFIC_DET_CNTS.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND JOB_TRAFFIC_DET_CNTS.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR AND JOB_TRAFFIC_DET_CNTS.SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR
				LEFT OUTER JOIN (SELECT JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR FROM JOB_TRAFFIC_DET_DOCS GROUP BY JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR) JOB_TRAFFIC_DET_DOCS ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_DOCS.JOB_NUMBER 
				AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_DOCS.JOB_COMPONENT_NBR 
				AND JOB_TRAFFIC_DET.SEQ_NBR = JOB_TRAFFIC_DET_DOCS.SEQ_NBR
			WHERE 
				(NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12))) AND IWI.ALERT_ID IS NULL '
			IF @RESTRICTIONS_CP > 0
			BEGIN
				SET @SQL = @SQL + N'						
					AND (CP_SEC_CLIENT.CDP_CONTACT_ID = ''' + CAST(@CPID AS VARCHAR(6)) + ''')
				'
			END
			SET @SQL = @SQL + N'						
				AND (JOB_TRAFFIC_DET_CNTS.CDP_CONTACT_ID = ''' + CAST(@CPID AS VARCHAR(6)) + ''') AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL AND JOB_TRAFFIC.COMPLETED_DATE IS NULL '
		END
		ELSE
		BEGIN
			SET @SQL = @SQL + N'
				SELECT 
					JOB_LOG.CL_CODE + ''/'' + JOB_LOG.DIV_CODE + ''/'' + JOB_LOG.PRD_CODE AS CDP,  
					(RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20), JOB_LOG.JOB_NUMBER),6) + '' - '' + JOB_LOG.JOB_DESC ) AS JustJobData, 
					( RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20), JOB_LOG.JOB_NUMBER),6) + ''/'' + RIGHT(REPLICATE(''0'', 3) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_COMPONENT_NBR),3) + '' - '' + JOB_COMPONENT.JOB_COMP_DESC ) AS JobData,
					ISNULL(V_JOB_TRAFFIC_DET.FNC_CODE, '''') AS FunctionCode, 
					ISNULL(V_JOB_TRAFFIC_DET.TASK_DESCRIPTION, '''') AS Task, 
					V_JOB_TRAFFIC_DET.FNC_COMMENTS,
					V_JOB_TRAFFIC_DET.TASK_START_DATE AS StartDate,
					V_JOB_TRAFFIC_DET.JOB_REVISED_DATE AS DueDate, 
					ISNULL(V_JOB_TRAFFIC_DET.REVISED_DUE_TIME,'''') AS DueTime, 
					DATENAME(dw, V_JOB_TRAFFIC_DET.JOB_REVISED_DATE) + '','' + SPACE(1) + DATENAME(m,V_JOB_TRAFFIC_DET.JOB_REVISED_DATE) + SPACE(1) + CAST(DAY(V_JOB_TRAFFIC_DET.JOB_REVISED_DATE) AS VARCHAR(2)) + '','' + SPACE(1) + CAST(YEAR(V_JOB_TRAFFIC_DET.JOB_REVISED_DATE) AS CHAR(4))
					+ ISNULL('', '' + V_JOB_TRAFFIC_DET.REVISED_DUE_TIME,'''') AS DUE_DATE_TIME,
					V_JOB_TRAFFIC_DET.JOB_NUMBER AS JobNo, 
					V_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR AS JobComp, 
					V_JOB_TRAFFIC_DET.JOB_HRS AS HoursAllowed,
					V_JOB_TRAFFIC_DET.SEQ_NBR AS SeqNo,
					V_JOB_TRAFFIC_DET.TEMP_COMP_DATE AS TempCompleteDate, 
					V_JOB_TRAFFIC_DET.EMP_CODE AS EmpCode, 
					0 AS IS_EVENT, 
					-1 AS EVENT_TASK_ID, 
					ISNULL(V_JOB_TRAFFIC_DET.TASK_STATUS,''P'') AS TASK_STATUS,
					CASE
						WHEN RTRIM(LTRIM(UPPER(ISNULL(V_JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''P'' THEN ''Projected''
						WHEN RTRIM(LTRIM(UPPER(ISNULL(V_JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''A'' THEN ''Active''
						WHEN RTRIM(LTRIM(UPPER(ISNULL(V_JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''H'' THEN ''High''
						WHEN RTRIM(LTRIM(UPPER(ISNULL(V_JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''L'' THEN ''Low''
						ELSE ''Projected''
					END AS TASK_STATUS_TEXT,
					CASE
						WHEN RTRIM(LTRIM(UPPER(ISNULL(V_JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''P'' THEN ''4,Projected''
						WHEN RTRIM(LTRIM(UPPER(ISNULL(V_JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''A'' THEN ''2,Active''
						WHEN RTRIM(LTRIM(UPPER(ISNULL(V_JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''H'' THEN ''1,Active - High Priority''
						WHEN RTRIM(LTRIM(UPPER(ISNULL(V_JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''L'' THEN ''3,Active - Low Priority''
						ELSE ''4,Projected''
					END AS CARD_GROUPING_PRIORITY_TEXT,
					CASE
						WHEN RTRIM(LTRIM(UPPER(ISNULL(V_JOB_TRAFFIC_DET.TASK_STATUS,''P'')))) = ''P'' THEN ''Projected''
						ELSE ''Active''
					END AS ACTIVE_PENDING_TEXT,
					JOB_LOG.JOB_DESC, 
					JOB_COMPONENT.JOB_COMP_DESC, 
					(RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20), JOB_LOG.JOB_NUMBER),6) + ''/'' + RIGHT(REPLICATE(''0'', 3) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_COMPONENT_NBR),3)) AS JOB_COMP,
					[HAS_DOCUMENTS] = CONVERT(BIT, CASE WHEN JOB_TRAFFIC_DET_DOCS.JOB_NUMBER IS NOT NULL OR ASSIGNMENT_DOCS.JOB_NUMBER IS NOT NULL THEN 1 ELSE 0 END),
					V_JOB_TRAFFIC_DET.CARD_SEQ_NBR,
					ISNULL(V_JOB_TRAFFIC_DET.PERCENT_COMPLETE, 0.000) AS PERCENT_COMPLETE,
					CASE
						WHEN EXISTS (SELECT ET_ID FROM EMP_TIME_DTL WHERE JOB_NUMBER = JOB_LOG.JOB_NUMBER AND JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR AND FNC_CODE = V_JOB_TRAFFIC_DET.FNC_EST) THEN ''Started''
						ELSE ''Not Started''
					END AS STARTED,
					CLIENT.CL_NAME,
					CASE
					   WHEN ALERT.ALERT_LEVEL = ''BRD'' AND ALERT.IS_WORK_ITEM = 1 THEN CAST(1 AS BIT)
					   ELSE CAST(0 AS BIT)
					END AS IS_BOARD_TASK,
					ISNULL(ALERT.ALERT_ID, 0) AS ALERT_ID,
					ISNULL(SD.SPRINT_HDR_ID, 0) AS SPRINT_ID, ISNULL(ALERT.[PRIORITY],3) AS PRIORITY
				FROM 
					JOB_LOG WITH(NOLOCK)	
					INNER JOIN CLIENT WITH(NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE INNER JOIN JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
					INNER JOIN V_JOB_TRAFFIC_DET WITH(NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = V_JOB_TRAFFIC_DET.JOB_NUMBER AND JOB_COMPONENT.JOB_COMPONENT_NBR = V_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
					INNER JOIN JOB_TRAFFIC WITH(NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR 
					LEFT OUTER JOIN ALERT WITH(NOLOCK) ON V_JOB_TRAFFIC_DET.JOB_NUMBER = ALERT.JOB_NUMBER AND V_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = ALERT.JOB_COMPONENT_NBR AND V_JOB_TRAFFIC_DET.SEQ_NBR = ALERT.TASK_SEQ_NBR AND ALERT.IS_WORK_ITEM = 1 AND ALERT.ALERT_LEVEL = ''BRD''
					LEFT OUTER JOIN SPRINT_DTL SD ON SD.ALERT_ID = ALERT.ALERT_ID
					LEFT OUTER JOIN V_INACTIVE_WORK_ITEMS IWI ON ALERT.ALERT_ID = IWI.ALERT_ID
					';
			IF @RESTRICTIONS > 0
			BEGIN
				SET @SQL = @SQL + N'
						INNER JOIN SEC_CLIENT WITH(NOLOCK) ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE
					';
			END
			If @RESTRICTIONS_OFFICE > 0
			BEGIN

				SET @SQL = @SQL + N' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''' '

			END
			SET @SQL = @SQL + N'
					LEFT OUTER JOIN (SELECT JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR FROM dbo.JOB_TRAFFIC_DET_DOCS GROUP BY JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR) JOB_TRAFFIC_DET_DOCS ON V_JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_DOCS.JOB_NUMBER 
					AND V_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_DOCS.JOB_COMPONENT_NBR 
					AND V_JOB_TRAFFIC_DET.SEQ_NBR = JOB_TRAFFIC_DET_DOCS.SEQ_NBR
					LEFT OUTER JOIN (SELECT JOB_NUMBER, JOB_COMPONENT_NBR, TASK_SEQ_NBR FROM dbo.ALERT INNER JOIN ALERT_ATTACHMENT ON ALERT_ATTACHMENT.ALERT_ID = ALERT.ALERT_ID GROUP BY JOB_NUMBER, JOB_COMPONENT_NBR, TASK_SEQ_NBR) ASSIGNMENT_DOCS ON V_JOB_TRAFFIC_DET.JOB_NUMBER = ASSIGNMENT_DOCS.JOB_NUMBER 
					AND V_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = ASSIGNMENT_DOCS.JOB_COMPONENT_NBR 
					AND V_JOB_TRAFFIC_DET.SEQ_NBR = ASSIGNMENT_DOCS.TASK_SEQ_NBR
				WHERE 
					(NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12))) AND IWI.ALERT_ID IS NULL ';
			IF @RESTRICTIONS > 0
			BEGIN
				SET @SQL = @SQL + N'
					AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @UserID + ''')) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)
					';
			END
			SET @SQL = @SQL + N'
				AND (V_JOB_TRAFFIC_DET.EMP_CODE = ''' + @EmpCode + ''')	
				AND V_JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL AND JOB_TRAFFIC.COMPLETED_DATE IS NULL ';

			IF @TaskShow = 'Today'
			BEGIN
				SET @SQL = @SQL + N' AND (''' + CONVERT(VARCHAR(8), @StartDate, 1) + ''' >= V_JOB_TRAFFIC_DET.TASK_START_DATE OR V_JOB_TRAFFIC_DET.TASK_START_DATE IS NULL) ';
			END
			IF @TODAY_START_DUE = 1
			BEGIN
					SET @SQL = @SQL + N' AND ((NOT V_JOB_TRAFFIC_DET.TASK_START_DATE IS NULL) AND (NOT V_JOB_TRAFFIC_DET.JOB_REVISED_DATE IS NULL)) ';
			END
			IF LEFT(@TaskStatus, 1) = 'P'
			BEGIN
				SET @SQL = @SQL + N' AND (V_JOB_TRAFFIC_DET.TASK_STATUS IN ( ''P'', '''' ) OR V_JOB_TRAFFIC_DET.TASK_STATUS IS NULL) ';
			END
			ELSE IF LEFT(@TaskStatus, 1) = 'A'
			BEGIN
				SET @SQL = @SQL + N' AND V_JOB_TRAFFIC_DET.TASK_STATUS IN ( ''A'', ''H'',''L'' ) ';
			END
			ELSE IF LEFT(@TaskStatus, 1) = 'H'
			BEGIN
				SET @SQL = @SQL + N' AND V_JOB_TRAFFIC_DET.TASK_STATUS = ''H'' ';
			END
			ELSE IF LEFT(@TaskStatus, 1) = 'L'
			BEGIN
				SET @SQL = @SQL + N' AND V_JOB_TRAFFIC_DET.TASK_STATUS = ''L'' ';
			END

		END

		SET @HAS_TASK_SQL = 1;

	END

	--PRINT @HAS_TASK_SQL;

	IF @HAS_TASK_SQL = 1 AND ((RTRIM(LTRIM(@TaskStatus)) = '' OR LEFT(RTRIM(LTRIM(@TaskStatus)), 1) = 'E') AND @CP = 0)
	BEGIN
		SET @SQL = @SQL + N' UNION ALL';
	END

	--ADD IN EVENT TASKS
	IF (RTRIM(LTRIM(@TaskStatus)) = '' OR LEFT(RTRIM(LTRIM(@TaskStatus)), 1) = 'E') AND @CP = 0
	BEGIN
		SET @SQL = @SQL + 
			N'
			SELECT   
				JOB_LOG.CL_CODE + ''/'' + JOB_LOG.DIV_CODE + ''/'' + JOB_LOG.PRD_CODE AS CDP, 
				(RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20), JOB_LOG.JOB_NUMBER),6) + '' - '' + JOB_LOG.JOB_DESC ) AS JustJobData, 
				(RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20), JOB_LOG.JOB_NUMBER),6) + ''/'' + RIGHT(REPLICATE(''0'', 3) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_COMPONENT_NBR),3) + '' - '' + JOB_COMPONENT.JOB_COMP_DESC ) + ISNULL('' / '' + EVENT.EVENT_LABEL, '''') + ISNULL('' / '' + EVENT.AD_NUMBER, '''') AS JobData, 
				TRAFFIC_FNC.TRF_DESC AS FNC_CODE, 
				TRAFFIC_FNC.TRF_DESC AS Task, 
				EVENT_TASK.COMMENTS AS FNC_COMMENTS, 
				EVENT_TASK.START_TIME AS StartDate, 
				EVENT_TASK.END_TIME AS DueDate, 
				LTRIM(SUBSTRING(CONVERT(VARCHAR(20), EVENT_TASK.START_TIME, 22), 10, 5) + RIGHT(CONVERT(VARCHAR(20), EVENT_TASK.START_TIME, 22), 3)) + '' - '' + LTRIM(SUBSTRING(CONVERT(VARCHAR(20), EVENT_TASK.END_TIME, 22), 10, 5) + RIGHT(CONVERT(VARCHAR(20), EVENT_TASK.END_TIME, 22), 3)) AS DueTime, 
				LTRIM(SUBSTRING(CONVERT(VARCHAR(20), EVENT_TASK.START_TIME, 22), 10, 5) + RIGHT(CONVERT(VARCHAR(20), EVENT_TASK.START_TIME, 22), 3)) + '' - '' + LTRIM(SUBSTRING(CONVERT(VARCHAR(20), EVENT_TASK.END_TIME, 22), 10, 5) + RIGHT(CONVERT(VARCHAR(20), EVENT_TASK.END_TIME, 22), 3)) AS DUE_DATE_TIME, 
				JOB_LOG.JOB_NUMBER AS JobNo, 
				JOB_COMPONENT.JOB_COMPONENT_NBR AS JobComp, 
				EVENT_TASK.HOURS_ALLOWED AS HoursAllowed, 
				- 1 AS SeqNo, 
				EVENT_TASK.TEMP_COMP_DATE AS TempCompleteDate, 
				EVENT_TASK.EMP_CODE AS EmpCode, 
				1 AS IS_EVENT, 
				EVENT_TASK.EVENT_TASK_ID,
				''N/A'' AS TASK_STATUS,
				''Event'' AS TASK_STATUS_TEXT,
				''5,Event'' AS CARD_GROUPING_PRIORITY_TEXT,
				''N/A'' AS ACTIVE_PENDING_TEXT,
				JOB_LOG.JOB_DESC, 
				JOB_COMPONENT.JOB_COMP_DESC, (RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20), JOB_LOG.JOB_NUMBER),6) + ''/'' + RIGHT(REPLICATE(''0'', 3) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_COMPONENT_NBR),3)) AS JOB_COMP,
				[HAS_DOCUMENTS] = CONVERT(BIT, 0), 
				EVENT_TASK.CARD_SEQ_NBR,
				0.000 AS PERCENT_COMPLETE,
				''N/A'' AS STARTED,
				CLIENT.CL_NAME,
				CAST(0 AS BIT) AS IS_BOARD_TASK,
				0 AS ALERT_ID,
				0 AS SPRINT_ID,
				0 AS PRIORITY
			FROM 
				EVENT_TASK WITH (NOLOCK) 
				INNER JOIN EVENT WITH (NOLOCK) ON EVENT_TASK.EVENT_ID = EVENT.EVENT_ID 
				INNER JOIN JOB_COMPONENT WITH (NOLOCK) ON EVENT.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND EVENT.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR 
				INNER JOIN JOB_LOG WITH (NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER INNER JOIN TRAFFIC_FNC WITH (NOLOCK) ON EVENT_TASK.TASK_CODE = TRAFFIC_FNC.TRF_CODE 
				INNER JOIN CLIENT WITH(NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE 
			'
			IF @RESTRICTIONS > 0
			BEGIN
				SET @SQL = @SQL +  N'
				INNER JOIN SEC_CLIENT WITH(NOLOCK) ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE
				'
			END
			If @RESTRICTIONS_OFFICE > 0
			BEGIN

				SET @SQL = @SQL + N' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''' '

			END
			SET @SQL = @SQL +  N'
			WHERE     
				(EVENT_TASK.EMP_CODE = ''' + @EmpCode + ''') 
				AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12))) '
			IF @RESTRICTIONS > 0
			BEGIN
				SET @SQL = @SQL +  N'
				AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @UserID + ''')) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) 
			'
			END
			IF @TaskShow = 'Today'
			BEGIN
				SET @SQL = @SQL + N' AND ''' + CONVERT(VARCHAR(8), @StartDate, 1) + ''' >= EVENT_TASK.START_TIME '
			END
			IF @TODAY_START_DUE = 1
			BEGIN
				SET @SQL = @SQL + N' AND ((NOT EVENT_TASK.START_TIME IS NULL) AND (NOT EVENT_TASK.END_TIME IS NULL)) ';
			END
	END

	SET @SQL = @SQL + ') AS A'

	IF @Search <> ''
	BEGIN
		SET @SQL = @SQL + ' WHERE LOWER(A.JobData) LIKE ''%' + LOWER(@Search) + '%'' OR LOWER(A.CDP) LIKE ''%' + LOWER(@Search) + '%'' OR LOWER(A.Task) LIKE ''%' + LOWER(@Search) + '%'' OR LOWER(Cast(A.FNC_COMMENTS AS VARCHAR)) LIKE ''%' + LOWER(@Search) + '%'''
	END

	IF @SORT = 'PRIORITY'
	BEGIN
		SET @SQL = @SQL + ' ORDER BY A.CARD_GROUPING_PRIORITY_TEXT, A.CARD_SEQ_NBR, A.DueDate, A.CDP, A.JobData';
	END
	ELSE IF @SORT = 'DUE_DATE'
	BEGIN
		SET @SQL = @SQL + ' ORDER BY  A.DueDate DESC, A.DueTime, A.CARD_SEQ_NBR, A.CDP, A.JobData';
	END
	ELSE IF @SORT = 'DUE_DATE_ASC'
	BEGIN
		SET @SQL = @SQL + ' ORDER BY  A.DueDate ASC, A.DueTime, A.CARD_SEQ_NBR, A.CDP, A.JobData';
	END
	ELSE IF @SORT = 'TASK_STATUS'
	BEGIN
		SET @SQL = @SQL + ' ORDER BY A.CARD_SEQ_NBR, A.DueDate, A.CDP, A.JobData';
	END
	ELSE IF @SORT = 'PERCENT_COMPLETE'
	BEGIN
		SET @SQL = @SQL + ' ORDER BY A.PERCENT_COMPLETE, A.CARD_SEQ_NBR, A.DueDate, A.CDP, A.JobData';
	END
	ELSE IF @SORT = 'STARTED'
	BEGIN
		SET @SQL = @SQL + ' ORDER BY A.STARTED, A.CARD_SEQ_NBR, A.DueDate, A.CDP, A.JobData';
	END
	ELSE IF @SORT = 'START_DATE'
	BEGIN
		SET @SQL = @SQL + ' ORDER BY A.StartDate, A.CARD_SEQ_NBR, A.DueDate, A.CDP, A.JobData';
	END
	ELSE
	BEGIN
		SET @SQL = @SQL + ' ORDER BY A.CARD_SEQ_NBR, A.DueDate, A.CDP, A.JobData';
	END

	SET @SQL = @SQL + ' OPTION (RECOMPILE);'
	PRINT @SQL;
	EXEC (@SQL);

END
/*=========== QUERY ===========*/
