IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[advsp_timesheet_new_entry_get_jobs]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
    DROP PROCEDURE [dbo].[advsp_timesheet_new_entry_get_jobs]
GO

CREATE PROCEDURE [dbo].[advsp_timesheet_new_entry_get_jobs]
@CL_CODE VARCHAR(6) = NULL,
@DIV_CODE VARCHAR(6) = NULL,
@PRD_CODE VARCHAR(6) = NULL,
@JOB_NUMBER INT = 0,
@USER_CODE VARCHAR(100) = NULL,
@COUNT BIT,
@SEARCH_TEXT VARCHAR(100)
AS
/*=========== QUERY ===========*/
BEGIN
	--	JOB LIMITS
	DECLARE 
		@ADVTF_USER_JOB_LIMITS TABLE (CL_CODE VARCHAR(6), DIV_CODE VARCHAR(6), PRD_CODE VARCHAR(6), TIME_ENTRY SMALLINT, JOB_NUMBER INT)
	DECLARE
		@HAS_RESTRICTIONS BIT,
		@RESTRICTION_COUNT INT

	IF NOT @USER_CODE IS NULL
	BEGIN
		INSERT INTO @ADVTF_USER_JOB_LIMITS
		SELECT CL_CODE, DIV_CODE, PRD_CODE, TIME_ENTRY, JOB_NUMBER FROM advtf_user_job_limits(@USER_CODE);
	END
	SELECT @RESTRICTION_COUNT = ISNULL(COUNT(1), 0) FROM @ADVTF_USER_JOB_LIMITS;
	IF @RESTRICTION_COUNT > 0
	BEGIN
		SET @HAS_RESTRICTIONS = 1;
	END
	ELSE
	BEGIN
		SET @HAS_RESTRICTIONS = 0;
	END

	IF @HAS_RESTRICTIONS IS NULL OR @HAS_RESTRICTIONS = 0
	BEGIN
		IF @COUNT IS NULL OR @COUNT = 0
		BEGIN --	RETURN DATA
			SELECT TOP 100
				[Key] = CAST(JC.JOB_NUMBER AS VARCHAR(1000)) + ',' + CAST(JC.JOB_COMPONENT_NBR AS VARCHAR(1000)),
				[Description] = CASE
									WHEN J.JOB_DESC = JC.JOB_COMP_DESC THEN REPLACE(STR(JC.JOB_NUMBER, 6), SPACE(1), '0') + '/' + REPLACE(STR(JC.JOB_COMPONENT_NBR, 3), SPACE(1), '0') + ' - ' + JC.JOB_COMP_DESC
									ELSE REPLACE(STR(JC.JOB_NUMBER, 6), SPACE(1), '0') + '/' + REPLACE(STR(JC.JOB_COMPONENT_NBR, 3), SPACE(1), '0') + ' - ' + J.JOB_DESC + ' | ' + JC.JOB_COMP_DESC
								END,
				[C] = J.CL_CODE,
				[D] = J.DIV_CODE,
				[P] = J.PRD_CODE
			FROM
				JOB_LOG J WITH(NOLOCK)
				INNER JOIN JOB_COMPONENT JC WITH(NOLOCK) ON J.JOB_NUMBER = JC.JOB_NUMBER
			WHERE
				JC.JOB_PROCESS_CONTRL NOT IN (2,3,5,6,9,10,12,13) 
				AND 1 = CASE WHEN ISNULL(@CL_CODE, '') = '' THEN 1 WHEN J.CL_CODE = @CL_CODE THEN 1 ELSE 0 END 
				AND 1 = CASE WHEN ISNULL(@DIV_CODE, '') = '' THEN 1 WHEN J.DIV_CODE = @DIV_CODE THEN 1 ELSE 0 END 
				AND	1 = CASE WHEN ISNULL(@PRD_CODE, '') = '' THEN 1 WHEN J.PRD_CODE = @PRD_CODE THEN 1 ELSE 0 END 
				AND 1 = CASE WHEN ISNULL(@JOB_NUMBER, 0) = 0 THEN 1 WHEN JC.JOB_NUMBER = @JOB_NUMBER THEN 1 ELSE 0 END 
				AND (UPPER(REPLACE(STR(JC.JOB_NUMBER, 6), SPACE(1), '0') + '/' + REPLACE(STR(JC.JOB_COMPONENT_NBR, 3), SPACE(1), '0') + ' - ' + J.JOB_DESC + ' | ' + JC.JOB_COMP_DESC) + UPPER(J.CL_CODE) LIKE '%' + UPPER(@SEARCH_TEXT) + '%')
			ORDER BY
				J.JOB_NUMBER DESC, JC.JOB_COMPONENT_NBR;
		END
		ELSE
		BEGIN --	ONLY RETURN COUNT
			SELECT 
				[Count] = COUNT(1)
			FROM
				JOB_LOG J WITH(NOLOCK) 
				INNER JOIN JOB_COMPONENT JC WITH(NOLOCK) ON J.JOB_NUMBER = JC.JOB_NUMBER
			WHERE
				JC.JOB_PROCESS_CONTRL NOT IN (2,3,5,6,9,10,12,13) 
				AND
				1 = CASE WHEN ISNULL(@CL_CODE, '') = '' THEN 1 WHEN J.CL_CODE = @CL_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@DIV_CODE, '') = '' THEN 1 WHEN J.DIV_CODE = @DIV_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@PRD_CODE, '') = '' THEN 1 WHEN J.PRD_CODE = @PRD_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@JOB_NUMBER, 0) = 0 THEN 1 WHEN JC.JOB_NUMBER = @JOB_NUMBER THEN 1 ELSE 0 END 
		END
	END
	ELSE
	BEGIN
		IF @COUNT IS NULL OR @COUNT = 0
		BEGIN --	RETURN DATA
			SELECT TOP 100
				[Key] = CAST(JC.JOB_NUMBER AS VARCHAR(1000)) + ',' + CAST(JC.JOB_COMPONENT_NBR AS VARCHAR(1000)),
				[Description] = CASE
									WHEN J.JOB_DESC = JC.JOB_COMP_DESC THEN REPLACE(STR(JC.JOB_NUMBER, 6), SPACE(1), '0') + '/' + REPLACE(STR(JC.JOB_COMPONENT_NBR, 3), SPACE(1), '0') + ' - ' + JC.JOB_COMP_DESC
									ELSE REPLACE(STR(JC.JOB_NUMBER, 6), SPACE(1), '0') + '/' + REPLACE(STR(JC.JOB_COMPONENT_NBR, 3), SPACE(1), '0') + ' - ' + J.JOB_DESC + ' | ' + JC.JOB_COMP_DESC
								END,
				[C] = J.CL_CODE,
				[D] = J.DIV_CODE,
				[P] = J.PRD_CODE
			FROM
				JOB_LOG J WITH(NOLOCK)
				INNER JOIN JOB_COMPONENT JC WITH(NOLOCK) ON J.JOB_NUMBER = JC.JOB_NUMBER
				INNER JOIN @ADVTF_USER_JOB_LIMITS JL ON JC.JOB_NUMBER = JL.JOB_NUMBER 
			WHERE
				JC.JOB_PROCESS_CONTRL NOT IN (2,3,5,6,9,10,12,13) 
				AND 1 = CASE WHEN ISNULL(@CL_CODE, '') = '' THEN 1 WHEN J.CL_CODE = @CL_CODE THEN 1 ELSE 0 END 
				AND 1 = CASE WHEN ISNULL(@DIV_CODE, '') = '' THEN 1 WHEN J.DIV_CODE = @DIV_CODE THEN 1 ELSE 0 END 
				AND	1 = CASE WHEN ISNULL(@PRD_CODE, '') = '' THEN 1 WHEN J.PRD_CODE = @PRD_CODE THEN 1 ELSE 0 END 
				AND 1 = CASE WHEN ISNULL(@JOB_NUMBER, 0) = 0 THEN 1 WHEN JC.JOB_NUMBER = @JOB_NUMBER THEN 1 ELSE 0 END 
				AND (UPPER(REPLACE(STR(JC.JOB_NUMBER, 6), SPACE(1), '0') + '/' + REPLACE(STR(JC.JOB_COMPONENT_NBR, 3), SPACE(1), '0') + ' - ' + J.JOB_DESC + ' | ' + JC.JOB_COMP_DESC) + UPPER(J.CL_CODE) LIKE '%' + UPPER(@SEARCH_TEXT) + '%')
			ORDER BY
				J.JOB_NUMBER DESC, JC.JOB_COMPONENT_NBR;
		END
		ELSE
		BEGIN --	ONLY RETURN COUNT
			SELECT 
				[Count] = COUNT(1)
			FROM
				JOB_LOG J WITH(NOLOCK) 
				INNER JOIN JOB_COMPONENT JC WITH(NOLOCK) ON J.JOB_NUMBER = JC.JOB_NUMBER
				INNER JOIN @ADVTF_USER_JOB_LIMITS JL ON JC.JOB_NUMBER = JL.JOB_NUMBER 
			WHERE
				JC.JOB_PROCESS_CONTRL NOT IN (2,3,5,6,9,10,12,13) 
				AND
				1 = CASE WHEN ISNULL(@CL_CODE, '') = '' THEN 1 WHEN J.CL_CODE = @CL_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@DIV_CODE, '') = '' THEN 1 WHEN J.DIV_CODE = @DIV_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@PRD_CODE, '') = '' THEN 1 WHEN J.PRD_CODE = @PRD_CODE THEN 1 ELSE 0 END AND
				1 = CASE WHEN ISNULL(@JOB_NUMBER, 0) = 0 THEN 1 WHEN JC.JOB_NUMBER = @JOB_NUMBER THEN 1 ELSE 0 END 
		END
	END


END
/*=========== QUERY ===========*/
