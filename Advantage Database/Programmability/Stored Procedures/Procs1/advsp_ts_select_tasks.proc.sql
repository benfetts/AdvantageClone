 CREATE PROCEDURE [dbo].[advsp_ts_select_tasks] 
	@USER_CODE VARCHAR(100),
	@EMP_CODE VARCHAR(6)
AS
BEGIN

DECLARE @RESTRICTIONS INT

SET NOCOUNT ON
 
SELECT @RESTRICTIONS = COUNT(*) 
FROM SEC_CLIENT WITH (NOLOCK)
WHERE UPPER(USER_ID) = UPPER(@USER_CODE)

DECLARE @EMP_CDE AS VARCHAR(6)
DECLARE @RestrictionsOffice AS INTEGER

SELECT @EMP_CDE = EMP_CODE FROM SEC_USER WHERE UPPER(USER_CODE) = UPPER(@USER_CODE)

SELECT @RestrictionsOffice = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CDE

DECLARE @TASKS TABLE  (	
	ClientCode varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	ClientName varchar(40),
	DivisionCode varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	DivisionName varchar(40),
	ProductCode varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	ProductDescription varchar(40),	
	TaskDescription varchar(50) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	FunctionCode varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JobRevisedDate smalldatetime,
	JobNumber int NULL,
	JobDescription varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JobCompNumber smallint NULL,
	JobCompDescription varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	JobHours decimal(14,2) NULL,
	SequenceNumber smallint NULL,
	FunctionInactive smallint
)

IF @RESTRICTIONS > 0
	If @RestrictionsOffice > 0
	Begin
		INSERT @TASKS
		SELECT	[ClientCode] = JOB_LOG.CL_CODE,
				[ClientName] = CLIENT.CL_NAME, 
				[DivisionCode] = JOB_LOG.DIV_CODE,
				[DivisionName] = DIVISION.DIV_NAME, 
				[ProductCode] = JOB_LOG.PRD_CODE,
				[ProductDescription] = PRODUCT.PRD_DESCRIPTION, 
				[TaskDescription] = JOB_TRAFFIC_DET.TASK_DESCRIPTION,
				[FunctionCode] = JOB_TRAFFIC_DET.FNC_EST,
				[JobRevisedDate] = JOB_TRAFFIC_DET.JOB_REVISED_DATE,
				[JobNumber] = JOB_LOG.JOB_NUMBER,
				[JobDescription] = JOB_LOG.JOB_DESC,
				[JobCompNumber] = JOB_COMPONENT.JOB_COMPONENT_NBR,
				[JobCompDescription] = JOB_COMPONENT.JOB_COMP_DESC,
				[JobHours] = JOB_TRAFFIC_DET.JOB_HRS, 
				[SequenceNumber] = JOB_TRAFFIC_DET.SEQ_NBR,
				[FunctionInactive] = FUNCTIONS.FNC_INACTIVE
		FROM dbo.JOB_LOG WITH (NOLOCK) INNER JOIN
			 dbo.CLIENT WITH (NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE INNER JOIN
			 dbo.DIVISION WITH (NOLOCK) ON DIVISION.CL_CODE = JOB_LOG.CL_CODE AND DIVISION.DIV_CODE = JOB_LOG.DIV_CODE INNER JOIN
			 dbo.PRODUCT WITH (NOLOCK) ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE INNER JOIN
			 dbo.JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
			 dbo.JOB_TRAFFIC_DET WITH (NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND 
			 dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR INNER JOIN
			 dbo.SEC_CLIENT WITH (NOLOCK) ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND 
											 JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
			 dbo.JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
			 dbo.JOB_TRAFFIC ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
			 dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN
			 dbo.JOB_TRAFFIC_DET_EMPS ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_EMPS.JOB_NUMBER AND 
			 dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR AND 
			 dbo.JOB_TRAFFIC_DET.SEQ_NBR = JOB_TRAFFIC_DET_EMPS.SEQ_NBR  LEFT OUTER JOIN
			 dbo.FUNCTIONS WITH (NOLOCK) ON JOB_TRAFFIC_DET.FNC_EST = FUNCTIONS.FNC_CODE INNER JOIN
			 dbo.EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
		WHERE (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (12, 10, 9, 6, 5, 3, 2))) AND 
			  (JOB_TRAFFIC_DET.TASK_START_DATE <= GETDATE() OR
			  JOB_TRAFFIC_DET.TASK_START_DATE IS NULL) AND 
			  (JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL) AND 
			  (FUNCTIONS.FNC_INACTIVE IS NULL OR
			   FUNCTIONS.FNC_INACTIVE = 0) AND 
			   (UPPER(SEC_CLIENT.USER_ID) = UPPER(@USER_CODE)) AND 
			   (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND 
			   (JOB_TRAFFIC_DET_EMPS.EMP_CODE = @EMP_CODE) AND 
			  (JOB_TRAFFIC.COMPLETED_DATE IS NULL)
		ORDER BY JOB_LOG.CL_CODE, 
				 JOB_LOG.DIV_CODE, 
				 JOB_LOG.PRD_CODE, 
				 JOB_LOG.JOB_NUMBER, 
				 JOB_TRAFFIC_DET.JOB_COMPONENT_NBR,
				 JOB_TRAFFIC_DET.FNC_EST, 
				 JOB_TRAFFIC_DET.SEQ_NBR

		
		INSERT @TASKS
		SELECT  [ClientCode] = JOB_LOG.CL_CODE,
				[ClientName] = CLIENT.CL_NAME, 
				[DivisionCode] = JOB_LOG.DIV_CODE,
				[DivisionName] = DIVISION.DIV_NAME, 
				[ProductCode] = JOB_LOG.PRD_CODE,
				[ProductDescription] = PRODUCT.PRD_DESCRIPTION, 
				[TaskDescription] = '',
				[FunctionCode] = (SELECT DEF_FNC_CODE FROM EMPLOYEE WHERE EMP_CODE = @EMP_CODE),
				[JobRevisedDate] = NULL,
				[JobNumber] = JOB_LOG.JOB_NUMBER,
				[JobDescription] = JOB_LOG.JOB_DESC,
				[JobCompNumber] = JOB_COMPONENT.JOB_COMPONENT_NBR,
				[JobCompDescription] = JOB_COMPONENT.JOB_COMP_DESC,
				[JobHours] = 0,
				[SequenceNumber] = 0,
				[FunctionInactive] = 0
		FROM dbo.JOB_LOG WITH (NOLOCK) INNER JOIN
			 dbo.CLIENT WITH (NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE INNER JOIN
			 dbo.DIVISION WITH (NOLOCK) ON DIVISION.CL_CODE = JOB_LOG.CL_CODE AND DIVISION.DIV_CODE = JOB_LOG.DIV_CODE INNER JOIN
			 dbo.PRODUCT WITH (NOLOCK) ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE INNER JOIN
			 dbo.JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
			 dbo.SEC_CLIENT WITH (NOLOCK) ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND 
											 JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
											 JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN			 
			 dbo.JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER INNER JOIN
			 dbo.EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
		WHERE (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (12, 10, 9, 6, 5, 3, 2))) AND (CAST(JOB_LOG.JOB_NUMBER AS VARCHAR(10)) + '|' + CAST(JOB_COMPONENT.JOB_COMPONENT_NBR AS VARCHAR(10)) NOT IN (SELECT CAST(JobNumber AS VARCHAR(10)) + '|' + CAST(JobCompNumber AS VARCHAR(10)) FROM @TASKS)) AND
			  (JOB_TRAFFIC.ASSIGN_1 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_2 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_3 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_4 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_5 = @EMP_CODE)
		ORDER BY JOB_LOG.CL_CODE, 
				 JOB_LOG.DIV_CODE, 
				 JOB_LOG.PRD_CODE, 
				 JOB_LOG.JOB_NUMBER
	End
	Else
	Begin
		INSERT @TASKS
		SELECT	[ClientCode] = JOB_LOG.CL_CODE,
				[ClientName] = CLIENT.CL_NAME, 
				[DivisionCode] = JOB_LOG.DIV_CODE,
				[DivisionName] = DIVISION.DIV_NAME, 
				[ProductCode] = JOB_LOG.PRD_CODE,
				[ProductDescription] = PRODUCT.PRD_DESCRIPTION, 
				[TaskDescription] = JOB_TRAFFIC_DET.TASK_DESCRIPTION,
				[FunctionCode] = JOB_TRAFFIC_DET.FNC_EST,
				[JobRevisedDate] = JOB_TRAFFIC_DET.JOB_REVISED_DATE,
				[JobNumber] = JOB_LOG.JOB_NUMBER,
				[JobDescription] = JOB_LOG.JOB_DESC,
				[JobCompNumber] = JOB_COMPONENT.JOB_COMPONENT_NBR,
				[JobCompDescription] = JOB_COMPONENT.JOB_COMP_DESC,
				[JobHours] = JOB_TRAFFIC_DET.JOB_HRS, 
				[SequenceNumber] = JOB_TRAFFIC_DET.SEQ_NBR,
				[FunctionInactive] = FUNCTIONS.FNC_INACTIVE
		FROM dbo.JOB_LOG WITH (NOLOCK) INNER JOIN
			 dbo.CLIENT WITH (NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE INNER JOIN
			 dbo.DIVISION WITH (NOLOCK) ON DIVISION.CL_CODE = JOB_LOG.CL_CODE AND DIVISION.DIV_CODE = JOB_LOG.DIV_CODE INNER JOIN
			 dbo.PRODUCT WITH (NOLOCK) ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE INNER JOIN
			 dbo.JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
			 dbo.JOB_TRAFFIC_DET WITH (NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND 
			 dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR INNER JOIN
			 dbo.SEC_CLIENT WITH (NOLOCK) ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND 
											 JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
			 dbo.JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
			 dbo.JOB_TRAFFIC ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
			 dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN
			 dbo.JOB_TRAFFIC_DET_EMPS ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_EMPS.JOB_NUMBER AND 
			 dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR AND 
			 dbo.JOB_TRAFFIC_DET.SEQ_NBR = JOB_TRAFFIC_DET_EMPS.SEQ_NBR  LEFT OUTER JOIN
			 dbo.FUNCTIONS WITH (NOLOCK) ON JOB_TRAFFIC_DET.FNC_EST = FUNCTIONS.FNC_CODE
		WHERE (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (12, 10, 9, 6, 5, 3, 2))) AND 
			  (JOB_TRAFFIC_DET.TASK_START_DATE <= GETDATE() OR
			  JOB_TRAFFIC_DET.TASK_START_DATE IS NULL) AND 
			  (JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL) AND 
			  (FUNCTIONS.FNC_INACTIVE IS NULL OR
			   FUNCTIONS.FNC_INACTIVE = 0) AND 
			   (UPPER(SEC_CLIENT.USER_ID) = UPPER(@USER_CODE)) AND 
			   (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND 
			   (JOB_TRAFFIC_DET_EMPS.EMP_CODE = @EMP_CODE) AND 
			  (JOB_TRAFFIC.COMPLETED_DATE IS NULL)
		ORDER BY JOB_LOG.CL_CODE, 
				 JOB_LOG.DIV_CODE, 
				 JOB_LOG.PRD_CODE, 
				 JOB_LOG.JOB_NUMBER, 
				 JOB_TRAFFIC_DET.JOB_COMPONENT_NBR,
				 JOB_TRAFFIC_DET.FNC_EST, 
				 JOB_TRAFFIC_DET.SEQ_NBR

		
		INSERT @TASKS
		SELECT  [ClientCode] = JOB_LOG.CL_CODE,
				[ClientName] = CLIENT.CL_NAME, 
				[DivisionCode] = JOB_LOG.DIV_CODE,
				[DivisionName] = DIVISION.DIV_NAME, 
				[ProductCode] = JOB_LOG.PRD_CODE,
				[ProductDescription] = PRODUCT.PRD_DESCRIPTION, 
				[TaskDescription] = '',
				[FunctionCode] = (SELECT DEF_FNC_CODE FROM EMPLOYEE WHERE EMP_CODE = @EMP_CODE),
				[JobRevisedDate] = NULL,
				[JobNumber] = JOB_LOG.JOB_NUMBER,
				[JobDescription] = JOB_LOG.JOB_DESC,
				[JobCompNumber] = JOB_COMPONENT.JOB_COMPONENT_NBR,
				[JobCompDescription] = JOB_COMPONENT.JOB_COMP_DESC,
				[JobHours] = 0,
				[SequenceNumber] = 0,
				[FunctionInactive] = 0
		FROM dbo.JOB_LOG WITH (NOLOCK) INNER JOIN
			 dbo.CLIENT WITH (NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE INNER JOIN
			 dbo.DIVISION WITH (NOLOCK) ON DIVISION.CL_CODE = JOB_LOG.CL_CODE AND DIVISION.DIV_CODE = JOB_LOG.DIV_CODE INNER JOIN
			 dbo.PRODUCT WITH (NOLOCK) ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE INNER JOIN
			 dbo.JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
			 dbo.SEC_CLIENT WITH (NOLOCK) ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND 
											 JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
											 JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN			 
			 dbo.JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER
		WHERE (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (12, 10, 9, 6, 5, 3, 2))) AND (CAST(JOB_LOG.JOB_NUMBER AS VARCHAR(10)) + '|' + CAST(JOB_COMPONENT.JOB_COMPONENT_NBR AS VARCHAR(10)) NOT IN (SELECT CAST(JobNumber AS VARCHAR(10)) + '|' + CAST(JobCompNumber AS VARCHAR(10)) FROM @TASKS)) AND
			  (JOB_TRAFFIC.ASSIGN_1 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_2 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_3 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_4 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_5 = @EMP_CODE)
		ORDER BY JOB_LOG.CL_CODE, 
				 JOB_LOG.DIV_CODE, 
				 JOB_LOG.PRD_CODE, 
				 JOB_LOG.JOB_NUMBER
	End

	
                                            
ELSE
	
	If @RestrictionsOffice > 0
	Begin
		INSERT @TASKS
		SELECT  [ClientCode] = JOB_LOG.CL_CODE,
				[ClientName] = CLIENT.CL_NAME, 
				[DivisionCode] = JOB_LOG.DIV_CODE,
				[DivisionName] = DIVISION.DIV_NAME, 
				[ProductCode] = JOB_LOG.PRD_CODE,
				[ProductDescription] = PRODUCT.PRD_DESCRIPTION, 
				[TaskDescription] = JOB_TRAFFIC_DET.TASK_DESCRIPTION,
				[FunctionCode] = JOB_TRAFFIC_DET.FNC_EST,
				[JobRevisedDate] = JOB_TRAFFIC_DET.JOB_REVISED_DATE,
				[JobNumber] = JOB_LOG.JOB_NUMBER,
				[JobDescription] = JOB_LOG.JOB_DESC,
				[JobCompNumber] = JOB_COMPONENT.JOB_COMPONENT_NBR,
				[JobCompDescription] = JOB_COMPONENT.JOB_COMP_DESC,
				[JobHours] = JOB_TRAFFIC_DET.JOB_HRS,
				[SequenceNumber] = JOB_TRAFFIC_DET.SEQ_NBR,
				[FunctionInactive] = FUNCTIONS.FNC_INACTIVE
		FROM dbo.JOB_LOG WITH (NOLOCK) INNER JOIN
			 dbo.CLIENT WITH (NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE INNER JOIN
			 dbo.DIVISION WITH (NOLOCK) ON DIVISION.CL_CODE = JOB_LOG.CL_CODE AND DIVISION.DIV_CODE = JOB_LOG.DIV_CODE INNER JOIN
			 dbo.PRODUCT WITH (NOLOCK) ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE INNER JOIN
			 dbo.JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
			 dbo.JOB_TRAFFIC_DET WITH (NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND 
			 dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR INNER JOIN
			 dbo.JOB_TRAFFIC ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
			 dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN
			 dbo.JOB_TRAFFIC_DET_EMPS ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_EMPS.JOB_NUMBER AND 
			 dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR AND 
			 dbo.JOB_TRAFFIC_DET.SEQ_NBR = JOB_TRAFFIC_DET_EMPS.SEQ_NBR LEFT OUTER JOIN
			 dbo.FUNCTIONS WITH (NOLOCK) ON JOB_TRAFFIC_DET.FNC_EST = FUNCTIONS.FNC_CODE INNER JOIN
			 dbo.EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
		WHERE (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (12, 10, 9, 6, 5, 3, 2))) AND 
			  (JOB_TRAFFIC_DET.TASK_START_DATE <= GETDATE() OR
			  JOB_TRAFFIC_DET.TASK_START_DATE IS NULL) AND 
			  (JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL) AND 
			  (FUNCTIONS.FNC_INACTIVE IS NULL OR
			  FUNCTIONS.FNC_INACTIVE = 0) AND 
			  (JOB_TRAFFIC_DET_EMPS.EMP_CODE = @EMP_CODE) AND 
			  (JOB_TRAFFIC.COMPLETED_DATE IS NULL)

		
		INSERT @TASKS
		SELECT  [ClientCode] = JOB_LOG.CL_CODE,
				[ClientName] = CLIENT.CL_NAME, 
				[DivisionCode] = JOB_LOG.DIV_CODE,
				[DivisionName] = DIVISION.DIV_NAME, 
				[ProductCode] = JOB_LOG.PRD_CODE,
				[ProductDescription] = PRODUCT.PRD_DESCRIPTION, 
				[TaskDescription] = '',
				[FunctionCode] = (SELECT DEF_FNC_CODE FROM EMPLOYEE WHERE EMP_CODE = @EMP_CODE),
				[JobRevisedDate] = NULL,
				[JobNumber] = JOB_LOG.JOB_NUMBER,
				[JobDescription] = JOB_LOG.JOB_DESC,
				[JobCompNumber] = JOB_COMPONENT.JOB_COMPONENT_NBR,
				[JobCompDescription] = JOB_COMPONENT.JOB_COMP_DESC,
				[JobHours] = 0,
				[SequenceNumber] = 0,
				[FunctionInactive] = 0
		FROM dbo.JOB_LOG WITH (NOLOCK) INNER JOIN
			 dbo.CLIENT WITH (NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE INNER JOIN
			 dbo.DIVISION WITH (NOLOCK) ON DIVISION.CL_CODE = JOB_LOG.CL_CODE AND DIVISION.DIV_CODE = JOB_LOG.DIV_CODE INNER JOIN
			 dbo.PRODUCT WITH (NOLOCK) ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE INNER JOIN
			 dbo.JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN			 
			 dbo.JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER INNER JOIN
			 dbo.EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
		WHERE (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (12, 10, 9, 6, 5, 3, 2))) AND (CAST(JOB_LOG.JOB_NUMBER AS VARCHAR(10)) + '|' + CAST(JOB_COMPONENT.JOB_COMPONENT_NBR AS VARCHAR(10)) NOT IN (SELECT CAST(JobNumber AS VARCHAR(10)) + '|' + CAST(JobCompNumber AS VARCHAR(10)) FROM @TASKS)) AND
			  (JOB_TRAFFIC.ASSIGN_1 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_2 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_3 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_4 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_5 = @EMP_CODE)
		ORDER BY JOB_LOG.CL_CODE, 
				 JOB_LOG.DIV_CODE, 
				 JOB_LOG.PRD_CODE, 
				 JOB_LOG.JOB_NUMBER

	End
	Else
	Begin
		INSERT @TASKS
		SELECT  [ClientCode] = JOB_LOG.CL_CODE,
				[ClientName] = CLIENT.CL_NAME, 
				[DivisionCode] = JOB_LOG.DIV_CODE,
				[DivisionName] = DIVISION.DIV_NAME, 
				[ProductCode] = JOB_LOG.PRD_CODE,
				[ProductDescription] = PRODUCT.PRD_DESCRIPTION, 
				[TaskDescription] = JOB_TRAFFIC_DET.TASK_DESCRIPTION,
				[FunctionCode] = JOB_TRAFFIC_DET.FNC_EST,
				[JobRevisedDate] = JOB_TRAFFIC_DET.JOB_REVISED_DATE,
				[JobNumber] = JOB_LOG.JOB_NUMBER,
				[JobDescription] = JOB_LOG.JOB_DESC,
				[JobCompNumber] = JOB_COMPONENT.JOB_COMPONENT_NBR,
				[JobCompDescription] = JOB_COMPONENT.JOB_COMP_DESC,
				[JobHours] = JOB_TRAFFIC_DET.JOB_HRS,
				[SequenceNumber] = JOB_TRAFFIC_DET.SEQ_NBR,
				[FunctionInactive] = FUNCTIONS.FNC_INACTIVE
		FROM dbo.JOB_LOG WITH (NOLOCK) INNER JOIN
			 dbo.CLIENT WITH (NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE INNER JOIN
			 dbo.DIVISION WITH (NOLOCK) ON DIVISION.CL_CODE = JOB_LOG.CL_CODE AND DIVISION.DIV_CODE = JOB_LOG.DIV_CODE INNER JOIN
			 dbo.PRODUCT WITH (NOLOCK) ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE INNER JOIN
			 dbo.JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
			 dbo.JOB_TRAFFIC_DET WITH (NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND 
			 dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR INNER JOIN
			 dbo.JOB_TRAFFIC ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
			 dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN
			 dbo.JOB_TRAFFIC_DET_EMPS ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_EMPS.JOB_NUMBER AND 
			 dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR AND 
			 dbo.JOB_TRAFFIC_DET.SEQ_NBR = JOB_TRAFFIC_DET_EMPS.SEQ_NBR LEFT OUTER JOIN
			 dbo.FUNCTIONS WITH (NOLOCK) ON JOB_TRAFFIC_DET.FNC_EST = FUNCTIONS.FNC_CODE
		WHERE (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (12, 10, 9, 6, 5, 3, 2))) AND 
			  (JOB_TRAFFIC_DET.TASK_START_DATE <= GETDATE() OR
			  JOB_TRAFFIC_DET.TASK_START_DATE IS NULL) AND 
			  (JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL) AND 
			  (FUNCTIONS.FNC_INACTIVE IS NULL OR
			  FUNCTIONS.FNC_INACTIVE = 0) AND 
			  (JOB_TRAFFIC_DET_EMPS.EMP_CODE = @EMP_CODE) AND 
			  (JOB_TRAFFIC.COMPLETED_DATE IS NULL)
		ORDER BY JOB_LOG.CL_CODE, 
				 JOB_LOG.DIV_CODE, 
				 JOB_LOG.PRD_CODE, 
				 JOB_LOG.JOB_NUMBER, 
				 JOB_TRAFFIC_DET.JOB_COMPONENT_NBR,
				 JOB_TRAFFIC_DET.FNC_EST, 
				 JOB_TRAFFIC_DET.SEQ_NBR

		
		INSERT @TASKS
		SELECT  [ClientCode] = JOB_LOG.CL_CODE,
				[ClientName] = CLIENT.CL_NAME, 
				[DivisionCode] = JOB_LOG.DIV_CODE,
				[DivisionName] = DIVISION.DIV_NAME, 
				[ProductCode] = JOB_LOG.PRD_CODE,
				[ProductDescription] = PRODUCT.PRD_DESCRIPTION, 
				[TaskDescription] = '',
				[FunctionCode] = (SELECT DEF_FNC_CODE FROM EMPLOYEE WHERE EMP_CODE = @EMP_CODE),
				[JobRevisedDate] = NULL,
				[JobNumber] = JOB_LOG.JOB_NUMBER,
				[JobDescription] = JOB_LOG.JOB_DESC,
				[JobCompNumber] = JOB_COMPONENT.JOB_COMPONENT_NBR,
				[JobCompDescription] = JOB_COMPONENT.JOB_COMP_DESC,
				[JobHours] = 0,
				[SequenceNumber] = 0,
				[FunctionInactive] = 0
		FROM dbo.JOB_LOG WITH (NOLOCK) INNER JOIN
			 dbo.CLIENT WITH (NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE INNER JOIN
			 dbo.DIVISION WITH (NOLOCK) ON DIVISION.CL_CODE = JOB_LOG.CL_CODE AND DIVISION.DIV_CODE = JOB_LOG.DIV_CODE INNER JOIN
			 dbo.PRODUCT WITH (NOLOCK) ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE INNER JOIN
			 dbo.JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN			 
			 dbo.JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER
		WHERE (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (12, 10, 9, 6, 5, 3, 2))) AND (CAST(JOB_LOG.JOB_NUMBER AS VARCHAR(10)) + '|' + CAST(JOB_COMPONENT.JOB_COMPONENT_NBR AS VARCHAR(10)) NOT IN (SELECT CAST(JobNumber AS VARCHAR(10)) + '|' + CAST(JobCompNumber AS VARCHAR(10)) FROM @TASKS)) AND
			  (JOB_TRAFFIC.ASSIGN_1 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_2 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_3 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_4 = @EMP_CODE OR JOB_TRAFFIC.ASSIGN_5 = @EMP_CODE)
		ORDER BY JOB_LOG.CL_CODE, 
				 JOB_LOG.DIV_CODE, 
				 JOB_LOG.PRD_CODE, 
				 JOB_LOG.JOB_NUMBER
	End
	

END

UPDATE @TASKS
SET [TaskDescription] = (SELECT FNC_DESCRIPTION FROM FUNCTIONS WHERE FUNCTIONS.FNC_CODE = FunctionCode)
WHERE [JobRevisedDate] IS NULL



SELECT * FROM @TASKS ORDER BY ClientCode,DivisionCode,ProductCode,JobNumber,JobCompNumber


GO
