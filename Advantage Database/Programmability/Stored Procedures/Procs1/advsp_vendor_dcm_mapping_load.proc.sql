CREATE PROCEDURE [dbo].[advsp_vendor_dcm_mapping_load]

AS

DECLARE @DC_PROFILE_ID bigint,
		@CLIENT_CODES varchar(max),
		@ROW int,
		@ROW_COUNT int
		
CREATE TABLE #profiles (
	ID int IDENTITY(1,1) NOT NULL,
	DC_PROFILE_ID bigint,
	CL_CODES varchar(max)
)

INSERT INTO #profiles (DC_PROFILE_ID, CL_CODES)
SELECT DISTINCT DC_PROFILE_ID as DC_PROFILE_ID, CAST('' AS varchar(max)) AS CL_CODES
FROM dbo.CLIENT
WHERE DC_ENABLED = 1
AND DC_PROFILE_ID IS NOT NULL

SELECT @ROW_COUNT = @@ROWCOUNT 
SET @ROW = 1

WHILE @ROW <= @ROW_COUNT 
BEGIN
	SELECT @CLIENT_CODES = COALESCE(@CLIENT_CODES+', ' ,'') + CL_CODE
	FROM dbo.CLIENT
	WHERE DC_PROFILE_ID = (SELECT DC_PROFILE_ID FROM #profiles WHERE ID = @ROW)

	UPDATE #profiles SET CL_CODES = @CLIENT_CODES WHERE ID = @ROW
	
	SET @CLIENT_CODES = NULL

	SET @ROW = @ROW + 1
END

--SELECT * FROM #profiles 

IF EXISTS(SELECT 1 FROM dbo.AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'DC_ENABLED' AND AGY_SETTINGS_VALUE = 1)
	SELECT @DC_PROFILE_ID = CAST(AGY_SETTINGS_VALUE as bigint) FROM dbo.AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'DC_PROFILE_ID'

SELECT
	ID = VENDOR_DCM_MAPPING_ID,
	VendorCode = VN_CODE,
	DoubleClickProfileID = VDM.DC_PROFILE_ID,
	DoubleClickSiteID = DC_SITE_ID,
	IsAgencyProfile = CAST(CASE WHEN VDM.DC_PROFILE_ID = @DC_PROFILE_ID THEN 1 ELSE 0 END as bit),
	ClientCodes = p.CL_CODES 
FROM dbo.VENDOR_DCM_MAPPING VDM
	LEFT OUTER JOIN #profiles p ON VDM.DC_PROFILE_ID = p.DC_PROFILE_ID 
