
















-- ATC -- 07/02/2007 - Added Office filtering and more selections for Account Executive, Job Type, and Client Reference.

--Webvantage
CREATE PROCEDURE [dbo].[usp_OpenJobsReport] 
@UserID as VarChar(100),
@ClientCode as Varchar(6),
@OfficeCodes Varchar(4000)
AS
Declare @Rescrictions Int

Select @Rescrictions = Count(*) 
FROM SEC_CLIENT
WHERE UPPER(USER_ID) = UPPER(@UserID)

If @Rescrictions > 0
	if @OfficeCodes IS Null or @OfficeCodes = '%'
			SELECT  JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, CLIENT.CL_NAME AS Client,
				DIVISION.DIV_NAME AS Division,
				PRODUCT.PRD_DESCRIPTION AS Product,
				JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC,
				JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, 
					EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
				CONVERT(CHAR(10), JOB_COMPONENT.JOB_FIRST_USE_DATE, 101)	 AS [Due Date], 
					JOB_LOG.USER_ID AS [User ID], CLIENT.CL_NAME + ' - ' + DIVISION.DIV_NAME + ' - ' + PRODUCT.PRD_DESCRIPTION AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION
			FROM         JOB_LOG INNER JOIN
								  JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
								  EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
								  CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
								  PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
								  JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
								  DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE
			INNER JOIN SEC_CLIENT 
				ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
								  SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE
			WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL <> 6 and JOB_COMPONENT.JOB_PROCESS_CONTRL <>12)
			AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID))
					And CLIENT.CL_CODE Like @ClientCode
			GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC, 
								  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, 
								  EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID, JOB_COMPONENT.JOB_PROCESS_CONTRL, JOB_LOG.JOB_NUMBER, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION
			order by CLIENT.CL_NAME,
					DIVISION.DIV_NAME,
					PRODUCT.PRD_DESCRIPTION,
					cast(JOB_LOG.JOB_NUMBER as int)
	Else
			SELECT  JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, CLIENT.CL_NAME AS Client,
			DIVISION.DIV_NAME AS Division,
			PRODUCT.PRD_DESCRIPTION AS Product,
			JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC,
			JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, 
				EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
			CONVERT(CHAR(10), JOB_COMPONENT.JOB_FIRST_USE_DATE, 101)	 AS [Due Date], 
				JOB_LOG.USER_ID AS [User ID], CLIENT.CL_NAME + ' - ' + DIVISION.DIV_NAME + ' - ' + PRODUCT.PRD_DESCRIPTION AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION
			FROM         JOB_LOG INNER JOIN
								  JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
								  EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
								  CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
								  PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
								  JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
								  DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
								  SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE INNER JOIN SEC_CLIENT 
								  ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
								  OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr collate database_default
			WHERE      (JOB_COMPONENT.JOB_PROCESS_CONTRL <> 6 and JOB_COMPONENT.JOB_PROCESS_CONTRL <>12)
		   			And CLIENT.CL_CODE Like @ClientCode
			GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC, 
								  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, 
								  EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID, JOB_COMPONENT.JOB_PROCESS_CONTRL, JOB_LOG.JOB_NUMBER, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION
			order by CLIENT.CL_NAME,
					DIVISION.DIV_NAME,
					PRODUCT.PRD_DESCRIPTION,
					cast(JOB_LOG.JOB_NUMBER as int)
Else
	if @OfficeCodes IS Null or @OfficeCodes = '%'
			SELECT  JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, CLIENT.CL_NAME AS Client,
				DIVISION.DIV_NAME AS Division,
				PRODUCT.PRD_DESCRIPTION AS Product,
				JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC,
				JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, 
					EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
				CONVERT(CHAR(10), JOB_COMPONENT.JOB_FIRST_USE_DATE, 101)	 AS [Due Date], 
					JOB_LOG.USER_ID AS [User ID], CLIENT.CL_NAME + ' - ' + DIVISION.DIV_NAME + ' - ' + PRODUCT.PRD_DESCRIPTION AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION
			FROM         JOB_LOG INNER JOIN
								  JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
								  EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
								  CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
								  PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
								  JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
								  DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
								  SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE
			WHERE      (JOB_COMPONENT.JOB_PROCESS_CONTRL <> 6 and JOB_COMPONENT.JOB_PROCESS_CONTRL <>12)
		   			And CLIENT.CL_CODE Like @ClientCode
			GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC, 
								  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, 
								  EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID, JOB_COMPONENT.JOB_PROCESS_CONTRL, JOB_LOG.JOB_NUMBER, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION
			order by CLIENT.CL_NAME,
					DIVISION.DIV_NAME,
					PRODUCT.PRD_DESCRIPTION,
					cast(JOB_LOG.JOB_NUMBER as int)
	Else
			SELECT  JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, CLIENT.CL_NAME AS Client,
			DIVISION.DIV_NAME AS Division,
			PRODUCT.PRD_DESCRIPTION AS Product,
			JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC,
			JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, 
				EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
			CONVERT(CHAR(10), JOB_COMPONENT.JOB_FIRST_USE_DATE, 101)	 AS [Due Date], 
				JOB_LOG.USER_ID AS [User ID], CLIENT.CL_NAME + ' - ' + DIVISION.DIV_NAME + ' - ' + PRODUCT.PRD_DESCRIPTION AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION
			FROM         JOB_LOG INNER JOIN
								  JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
								  EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
								  CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
								  PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
								  JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
								  DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
								  SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE INNER JOIN
								  OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr collate database_default
			WHERE      (JOB_COMPONENT.JOB_PROCESS_CONTRL <> 6 and JOB_COMPONENT.JOB_PROCESS_CONTRL <>12)
		   			And CLIENT.CL_CODE Like @ClientCode
			GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC, 
								  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, 
								  EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID, JOB_COMPONENT.JOB_PROCESS_CONTRL, JOB_LOG.JOB_NUMBER, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION
			order by CLIENT.CL_NAME,
					DIVISION.DIV_NAME,
					PRODUCT.PRD_DESCRIPTION,
					cast(JOB_LOG.JOB_NUMBER as int)






















