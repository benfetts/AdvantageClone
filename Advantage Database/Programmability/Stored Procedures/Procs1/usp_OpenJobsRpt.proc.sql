

-- ATC -- 12/30/2007 - Added Office filtering and more selections for Account Executive, Job Type, and Client Reference.

--Webvantage
CREATE PROCEDURE [dbo].[usp_OpenJobsRpt] 
@UserID as VarChar(100),
@ClientCode as Varchar(4000),
@OfficeCodes Varchar(4000),
@start_date smalldatetime,
@end_date smalldatetime,
@sch_included  bit,
@CP as int,
@CPID as int
AS
Declare @Rescrictions Int, @RestrictionsCP Int

Select @Rescrictions = Count(*) 
FROM SEC_CLIENT
WHERE UPPER(USER_ID) = UPPER(@UserID)

Select @RestrictionsCP = Count(*) 
FROM CP_SEC_CLIENT
Where CDP_CONTACT_ID = @CPID

DECLARE @EMP_CDE AS VARCHAR(6)
DECLARE @RestrictionsOffice AS INTEGER

SELECT @EMP_CDE = EMP_CODE FROM SEC_USER WHERE UPPER(USER_CODE) = UPPER(@UserID)

SELECT @RestrictionsOffice = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CDE

If @CP = 1
Begin
If @sch_included=1 
	If @RestrictionsCP > 0
		if @OfficeCodes IS Null or @OfficeCodes = '%'
			if @ClientCode is not null and @ClientCode <> '%'
				SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR JOIN
					charlist_to_table(@ClientCode, DEFAULT) cc ON JOB_LOG.CL_CODE = cc.vstr
									  collate database_default
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12))
					AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
				Else
				SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12))
					AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER	
		Else
			if @ClientCode is not null and @ClientCode <> '%'
				SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN 
					OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN 
				    charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default JOIN
					charlist_to_table(@ClientCode, DEFAULT) cc ON JOB_LOG.CL_CODE = cc.vstr
									  collate database_default
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12))
					AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
				Else
				SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN 
					OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN 
				    charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12))
					AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
	Else
			if @OfficeCodes IS Null or @OfficeCodes = '%'
			if @ClientCode is not null and @ClientCode <> '%'
				SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V			
						  JOIN charlist_to_table(@ClientCode, DEFAULT) cc ON V.CL_CODE = cc.vstr
									  collate database_default	
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12)
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
			Else
			SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V			
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12)
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)	
		Else
			if @ClientCode is not null and @ClientCode <> '%'
				SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V INNER JOIN			
						  OFFICE ON V.OFFICE_CODE = OFFICE.OFFICE_CODE
									  JOIN charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default
									  JOIN charlist_to_table(@ClientCode, DEFAULT) cc ON V.CL_CODE = cc.vstr
									  collate database_default
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12)
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
			else
				SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V INNER JOIN			
						  OFFICE ON V.OFFICE_CODE = OFFICE.OFFICE_CODE
									  JOIN charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr 
									  collate database_default
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12)
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
else
		If @RestrictionsCP > 0
		if @OfficeCodes IS Null or @OfficeCodes = '%'
			if @ClientCode is not null and @ClientCode <> '%'
				SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR JOIN
					charlist_to_table(@ClientCode, DEFAULT) cc ON JOB_LOG.CL_CODE = cc.vstr
									  collate database_default
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12)) AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
					AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
			Else
				SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12)) AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
					AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
		Else
			if @ClientCode is not null and @ClientCode <> '%'
				SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN 
					OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN 
				    charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default JOIN
					charlist_to_table(@ClientCode, DEFAULT) cc ON JOB_LOG.CL_CODE = cc.vstr
									  collate database_default
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12)) AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
					AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
				Else
				SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN 
					OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN 
				    charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12)) AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
					AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
	Else
		if @OfficeCodes IS Null or @OfficeCodes = '%'
			if @ClientCode is not null and @ClientCode <> '%'
				SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V			
						  JOIN charlist_to_table(@ClientCode, DEFAULT) cc ON V.CL_CODE = cc.vstr
									  collate database_default	
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12) AND V.COMPLETED_DATE IS NULL
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
			Else
			SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V			
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12) AND V.COMPLETED_DATE IS NULL
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)	
		Else
			if @ClientCode is not null and @ClientCode <> '%'
				SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V INNER JOIN			
						  OFFICE ON V.OFFICE_CODE = OFFICE.OFFICE_CODE
									  JOIN charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default
									  JOIN charlist_to_table(@ClientCode, DEFAULT) cc ON V.CL_CODE = cc.vstr
									  collate database_default
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12) AND V.COMPLETED_DATE IS NULL
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
			else
				SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V INNER JOIN			
						  OFFICE ON V.OFFICE_CODE = OFFICE.OFFICE_CODE
									  JOIN charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr 
									  collate database_default
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12) AND V.COMPLETED_DATE IS NULL
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
End
Else
Begin
If @sch_included=1 
	If @Rescrictions > 0
		if @OfficeCodes IS Null or @OfficeCodes = '%'
			if @ClientCode is not null and @ClientCode <> '%'
				if @RestrictionsOffice > 0
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
						PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
						JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
						JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
						JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
					FROM JOB_LOG INNER JOIN
						JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
						EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
						CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
						PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
						DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
						SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
						SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
						JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
						JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR JOIN
						charlist_to_table(@ClientCode, DEFAULT) cc ON JOB_LOG.CL_CODE = cc.vstr
										  collate database_default INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
						WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12))
						AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
						GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
										  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
										  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
										  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
						order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
							JOB_LOG.JOB_NUMBER
					Else
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
						PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
						JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
						JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
						JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
					FROM JOB_LOG INNER JOIN
						JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
						EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
						CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
						PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
						DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
						SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
						SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
						JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
						JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR JOIN
						charlist_to_table(@ClientCode, DEFAULT) cc ON JOB_LOG.CL_CODE = cc.vstr
										  collate database_default
						WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12))
						AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
						GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
										  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
										  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
										  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
						order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
							JOB_LOG.JOB_NUMBER
				Else
				if @RestrictionsOffice > 0
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
						PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
						JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
						JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
						JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
					FROM JOB_LOG INNER JOIN
						JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
						EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
						CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
						PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
						DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
						SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
						SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
						JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
						JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
						WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12))
						AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
						GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
										  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
										  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
										  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
						order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
							JOB_LOG.JOB_NUMBER
					Else
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
						PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
						JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
						JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
						JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
					FROM JOB_LOG INNER JOIN
						JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
						EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
						CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
						PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
						DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
						SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
						SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
						JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
						JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR
						WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12))
						AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
						GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
										  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
										  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
										  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
						order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
							JOB_LOG.JOB_NUMBER	
		Else
			if @ClientCode is not null and @ClientCode <> '%'
				if @RestrictionsOffice > 0
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN 
					OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN 
				    charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default JOIN
					charlist_to_table(@ClientCode, DEFAULT) cc ON JOB_LOG.CL_CODE = cc.vstr
									  collate database_default INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12))
					AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
					Else
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN 
					OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN 
				    charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default JOIN
					charlist_to_table(@ClientCode, DEFAULT) cc ON JOB_LOG.CL_CODE = cc.vstr
									  collate database_default
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12))
					AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
				Else
				if @RestrictionsOffice > 0
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN 
					OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN 
				    charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12))
					AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
					Else
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN 
					OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN 
				    charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12))
					AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
	Else
			if @OfficeCodes IS Null or @OfficeCodes = '%'
			if @ClientCode is not null and @ClientCode <> '%'
				if @RestrictionsOffice > 0
					SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
						Division,Product,JOB_NUMBER,JOB_DESC,
						JOB_COMPONENT_NBR,JOB_COMP_DESC,V.EMP_CODE,[Account Executive],[Due Date],[User ID],
						 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V			
							  JOIN charlist_to_table(@ClientCode, DEFAULT) cc ON V.CL_CODE = cc.vstr
										  collate database_default INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = V.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
					WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12)
							AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
										  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
										  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
										  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
					order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
					Else
					SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V			
						  JOIN charlist_to_table(@ClientCode, DEFAULT) cc ON V.CL_CODE = cc.vstr
									  collate database_default	
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12)
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
			Else
				if @RestrictionsOffice > 0
					SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
						Division,Product,JOB_NUMBER,JOB_DESC,
						JOB_COMPONENT_NBR,JOB_COMP_DESC,V.EMP_CODE,[Account Executive],[Due Date],[User ID],
						 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V	INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = V.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE		
					WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12)
							AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
										  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
										  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
										  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
					order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)	
					Else
					SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V			
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12)
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)	
		Else
			if @ClientCode is not null and @ClientCode <> '%'
				SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V INNER JOIN			
						  OFFICE ON V.OFFICE_CODE = OFFICE.OFFICE_CODE
									  JOIN charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default
									  JOIN charlist_to_table(@ClientCode, DEFAULT) cc ON V.CL_CODE = cc.vstr
									  collate database_default
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12)
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
			else
				SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V INNER JOIN			
						  OFFICE ON V.OFFICE_CODE = OFFICE.OFFICE_CODE
									  JOIN charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr 
									  collate database_default
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12)
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
else
		If @Rescrictions > 0
		if @OfficeCodes IS Null or @OfficeCodes = '%'
			if @ClientCode is not null and @ClientCode <> '%'
				if @RestrictionsOffice > 0
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
						PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
						JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
						JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
						JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
					FROM JOB_LOG INNER JOIN
						JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
						EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
						CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
						PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
						DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
						SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
						SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
						JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
						JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR JOIN
						charlist_to_table(@ClientCode, DEFAULT) cc ON JOB_LOG.CL_CODE = cc.vstr
										  collate database_default INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
						WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12)) AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
						AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
						GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
										  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
										  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
										  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
						order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
							JOB_LOG.JOB_NUMBER
					Else
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR JOIN
					charlist_to_table(@ClientCode, DEFAULT) cc ON JOB_LOG.CL_CODE = cc.vstr
									  collate database_default
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12)) AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
					AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
			Else
				if @RestrictionsOffice > 0
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
						PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
						JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
						JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
						JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
					FROM JOB_LOG INNER JOIN
						JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
						EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
						CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
						PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
						DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
						SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
						SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
						JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
						JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
						WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12)) AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
						AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
						GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
										  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
										  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
										  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
						order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
							JOB_LOG.JOB_NUMBER
					Else
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12)) AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
					AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
		Else
			if @ClientCode is not null and @ClientCode <> '%'
				if @RestrictionsOffice > 0
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
						PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
						JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
						JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
						JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
					FROM JOB_LOG INNER JOIN
						JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
						EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
						CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
						PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
						DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
						SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
						SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
						JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
						JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN 
						OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN 
						charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default JOIN
						charlist_to_table(@ClientCode, DEFAULT) cc ON JOB_LOG.CL_CODE = cc.vstr
										  collate database_default INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
						WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12)) AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
						AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
						GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
										  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
										  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
										  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
						order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
							JOB_LOG.JOB_NUMBER
					Else
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN 
					OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN 
				    charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default JOIN
					charlist_to_table(@ClientCode, DEFAULT) cc ON JOB_LOG.CL_CODE = cc.vstr
									  collate database_default
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12)) AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
					AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
				Else
				if @RestrictionsOffice > 0
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
						PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
						JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
						JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
						JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
					FROM JOB_LOG INNER JOIN
						JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
						EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
						CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
						PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
						DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
						SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
						SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
						JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
						JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN 
						OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN 
						charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE
						WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12)) AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
						AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
						GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
										  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
										  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
										  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
						order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
							JOB_LOG.JOB_NUMBER
					Else
					SELECT JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME AS Client, DIVISION.DIV_NAME AS Division,
					PRODUCT.PRD_DESCRIPTION AS Product, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
					JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], JOB_LOG.USER_ID AS [User ID],
					JOB_LOG.CL_CODE + ' - ' + JOB_LOG.DIV_CODE + ' - ' + JOB_LOG.PRD_CODE AS CDP, JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,
					JOB_COMPONENT.JOB_COMP_DATE, JOB_TRAFFIC.ROWID, JOB_COMPONENT.TRF_SCHEDULE_REQ 
				FROM JOB_LOG INNER JOIN
                    JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
                    EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
                    CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
                    PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE INNER JOIN
                    SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
                    SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
                    JOB_TRAFFIC ON JOB_LOG.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR INNER JOIN 
					OFFICE ON JOB_LOG.OFFICE_CODE = OFFICE.OFFICE_CODE JOIN 
				    charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default
					WHERE (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12)) AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
					AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) AND (JOB_COMPONENT.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, 
									  JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, EMPLOYEE.EMP_FNAME, dbo.EMPLOYEE.EMP_LNAME,
									  EMPLOYEE.EMP_CODE, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID,
									  JOB_LOG.SC_CODE, SALES_CLASS.SC_DESCRIPTION,JOB_COMPONENT.JOB_COMP_DATE,JOB_TRAFFIC.ROWID,JOB_COMPONENT.TRF_SCHEDULE_REQ
					order by JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
						JOB_LOG.JOB_NUMBER
	Else
		if @OfficeCodes IS Null or @OfficeCodes = '%'
			if @ClientCode is not null and @ClientCode <> '%'
				if @RestrictionsOffice > 0
					SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
						Division,Product,JOB_NUMBER,JOB_DESC,
						JOB_COMPONENT_NBR,JOB_COMP_DESC,V.EMP_CODE,[Account Executive],[Due Date],[User ID],
						 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V			
							  JOIN charlist_to_table(@ClientCode, DEFAULT) cc ON V.CL_CODE = cc.vstr
										  collate database_default INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = V.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE	
					WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12) AND V.COMPLETED_DATE IS NULL
							AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
										  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
										  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
										  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
					order by CL_CODE,DIV_CODE,PRD_CODE,
							cast(V.JOB_NUMBER as int)
					Else
					SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V			
						  JOIN charlist_to_table(@ClientCode, DEFAULT) cc ON V.CL_CODE = cc.vstr
									  collate database_default	
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12) AND V.COMPLETED_DATE IS NULL
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
			Else
				if @RestrictionsOffice > 0
					SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
						Division,Product,JOB_NUMBER,JOB_DESC,
						JOB_COMPONENT_NBR,JOB_COMP_DESC,V.EMP_CODE,[Account Executive],[Due Date],[User ID],
						 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = V.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE				
					WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12) AND V.COMPLETED_DATE IS NULL
							AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
										  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
										  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
										  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
					order by CL_CODE,DIV_CODE,PRD_CODE,
							cast(V.JOB_NUMBER as int)	
					Else
					SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V			
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12) AND V.COMPLETED_DATE IS NULL
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)	
		Else
			if @ClientCode is not null and @ClientCode <> '%'
				if @RestrictionsOffice > 0
					SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
						Division,Product,JOB_NUMBER,JOB_DESC,
						JOB_COMPONENT_NBR,JOB_COMP_DESC,V.EMP_CODE,[Account Executive],[Due Date],[User ID],
						 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V INNER JOIN			
							  OFFICE ON V.OFFICE_CODE = OFFICE.OFFICE_CODE
										  JOIN charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default
										  JOIN charlist_to_table(@ClientCode, DEFAULT) cc ON V.CL_CODE = cc.vstr
										  collate database_default INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = V.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE	
					WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12) AND V.COMPLETED_DATE IS NULL
							AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
										  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
										  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
										  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
					order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
					Else
					SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V INNER JOIN			
						  OFFICE ON V.OFFICE_CODE = OFFICE.OFFICE_CODE
									  JOIN charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr  collate database_default
									  JOIN charlist_to_table(@ClientCode, DEFAULT) cc ON V.CL_CODE = cc.vstr
									  collate database_default
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12) AND V.COMPLETED_DATE IS NULL
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
			else
				if @RestrictionsOffice > 0
					SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
						Division,Product,JOB_NUMBER,JOB_DESC,
						JOB_COMPONENT_NBR,JOB_COMP_DESC,V.EMP_CODE,[Account Executive],[Due Date],[User ID],
						 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V INNER JOIN			
							  OFFICE ON V.OFFICE_CODE = OFFICE.OFFICE_CODE
										  JOIN charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr 
										  collate database_default INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = V.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CDE	
					WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12) AND V.COMPLETED_DATE IS NULL
							AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
					GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
										  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
										  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
										  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
					order by CL_CODE,DIV_CODE,PRD_CODE,
							cast(V.JOB_NUMBER as int)
					Else
					SELECT CL_CODE,DIV_CODE,PRD_CODE,Client,
					Division,Product,JOB_NUMBER,JOB_DESC,
					JOB_COMPONENT_NBR,JOB_COMP_DESC,EMP_CODE,[Account Executive],[Due Date],[User ID],
					 CDP,SC_CODE,SC_DESCRIPTION,JOB_COMP_DATE,ROWID,TRF_SCHEDULE_REQ  FROM Open_Jobs_View V INNER JOIN			
						  OFFICE ON V.OFFICE_CODE = OFFICE.OFFICE_CODE
									  JOIN charlist_to_table(@OfficeCodes, DEFAULT) c ON OFFICE.OFFICE_CODE = c.vstr 
									  collate database_default
				WHERE      (V.JOB_PROCESS_CONTRL <> 6 and V.JOB_PROCESS_CONTRL <>12) AND V.COMPLETED_DATE IS NULL
						AND (V.JOB_COMP_DATE BETWEEN @start_date AND @end_date)
				GROUP BY V.CL_CODE, V.DIV_CODE, V.PRD_CODE, V.Client, V.Division, V.Product,V.CDP, V.JOB_NUMBER, V.JOB_DESC, 
									  V.JOB_COMPONENT_NBR, V.JOB_COMP_DESC, 
									  V.EMP_CODE,V.[Account Executive], V.[Due Date], V.[User ID],
									  V.JOB_PROCESS_CONTRL, V.JOB_NUMBER, V.SC_CODE, V.SC_DESCRIPTION,V.JOB_COMP_DATE,V.ROWID,V.TRF_SCHEDULE_REQ
				order by CL_CODE,DIV_CODE,PRD_CODE,
						cast(V.JOB_NUMBER as int)
End



