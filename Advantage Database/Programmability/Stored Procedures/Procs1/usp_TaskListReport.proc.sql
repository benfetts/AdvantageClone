


























--Webvantage
CREATE PROCEDURE [dbo].[usp_TaskListReport] 
@UserID VarChar(100),
@EmpCode VarChar(6),
@ClientCode VarChar(6),
@DivCode VarChar(6),
@ProdCode VarChar(6),
@JobNumber VarChar(6),
@SortOrder VarChar(1),
@StartDate DateTime,
@EndDate DateTime,
@Completed DateTime
AS
Declare @Rescrictions Int

Select @Rescrictions = Count(*) 
FROM SEC_CLIENT
WHERE UPPER(USER_ID) = UPPER(@UserID)

If @Rescrictions > 0
	SELECT  
		'' as SubHead,
		'' as Program, 
	    JOB_LOG.CL_CODE as CCode,
	    CLIENT.CL_NAME as CName,
	    JOB_LOG.DIV_CODE as DCode,
	    DIVISION.DIV_NAME as DName,
	    JOB_LOG.PRD_CODE as PCode,
	    PRODUCT.PRD_DESCRIPTION as PName,
	    JOB_LOG.JOB_NUMBER as JobNum,
	    JOB_LOG.JOB_DESC as JobDesc,
	    --Cast(JOB_LOG.JOB_NUMBER as VarChar(4)) + ' - ' + JOB_LOG.JOB_DESC as Job,
	    JOB_COMPONENT.JOB_COMPONENT_NBR as CompNum,
	    JOB_COMPONENT.JOB_COMP_DESC as CompDesc,
	    --Cast(JOB_COMPONENT.JOB_COMPONENT_NBR as VarChar(4)) + ' - ' + JOB_COMPONENT.JOB_COMP_DESC as Component,
   	    isnull(JOB_TRAFFIC_DET.TASK_DESCRIPTION, '') + '(' + isnull(JOB_TRAFFIC_DET.FNC_CODE, '') + ')' as Task,
	    JOB_TRAFFIC_DET.JOB_DUE_DATE as [Due Date],
	    JOB_TRAFFIC_DET.JOB_REVISED_DATE as [Rev Due Date],
	    JOB_TRAFFIC_DET.JOB_COMPLETED_DATE as [Completed Date],
	    JOB_TRAFFIC_DET.FNC_COMMENTS as Comments
	FROM JOB_LOG
	INNER JOIN CLIENT
	    ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
	INNER JOIN DIVISION
	    ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
	    AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
	INNER JOIN PRODUCT
	    ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
	    AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
	    AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
	INNER JOIN JOB_COMPONENT
	    ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
	INNER JOIN JOB_TRAFFIC_DET
	    ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
	    AND JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
	INNER JOIN SEC_CLIENT 
	    ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE
	WHERE (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
	AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)
	AND (JOB_TRAFFIC_DET.EMP_CODE = @EmpCode)
	AND (JOB_TRAFFIC_DET.JOB_COMPLETED_DATE > @Completed or JOB_TRAFFIC_DET.JOB_COMPLETED_DATE is null) 
	And JOB_LOG.CL_CODE Like '%' + @ClientCode
	And JOB_LOG.DIV_CODE Like '%' + @DivCode
	And JOB_LOG.PRD_CODE Like '%' + @ProdCode
	And JOB_LOG.JOB_NUMBER Like '%' + @JobNumber
	And JOB_TRAFFIC_DET.JOB_REVISED_DATE >= @StartDate
	And JOB_TRAFFIC_DET.JOB_REVISED_DATE <= @EndDate
	
	Order By
		CASE @SortOrder
			WHEN '1' THEN  JOB_LOG.CL_CODE
			WHEN '2' Then Cast(Year(JOB_TRAFFIC_DET.JOB_DUE_DATE)as VARChar(4)) + Cast(Month(JOB_TRAFFIC_DET.JOB_DUE_DATE)as VARChar(2)) +  Cast(Day(JOB_TRAFFIC_DET.JOB_DUE_DATE)as VARChar(2))
			WHEN '3' Then JOB_TRAFFIC_DET.TASK_DESCRIPTION + '(' + JOB_TRAFFIC_DET.FNC_CODE + ')'
		END
Else
	SELECT  
		'' as SubHead,
		'' as Program, 
	    JOB_LOG.CL_CODE as CCode,
	    CLIENT.CL_NAME as CName,
	    JOB_LOG.DIV_CODE as DCode,
	    DIVISION.DIV_NAME as DName,
	    JOB_LOG.PRD_CODE as PCode,
	    PRODUCT.PRD_DESCRIPTION as PName,
	    JOB_LOG.JOB_NUMBER as JobNum,
	    JOB_LOG.JOB_DESC as JobDesc,
	    --Cast(JOB_LOG.JOB_NUMBER as VarChar(4)) + ' - ' + JOB_LOG.JOB_DESC as Job,
	    JOB_COMPONENT.JOB_COMPONENT_NBR as CompNum,
	    JOB_COMPONENT.JOB_COMP_DESC as CompDesc,
	    --Cast(JOB_COMPONENT.JOB_COMPONENT_NBR as VarChar(4)) + ' - ' + JOB_COMPONENT.JOB_COMP_DESC as Component,
	     isnull(JOB_TRAFFIC_DET.TASK_DESCRIPTION, '') + '(' + isnull(JOB_TRAFFIC_DET.FNC_CODE, '') + ')' as Task,
	    JOB_TRAFFIC_DET.JOB_DUE_DATE as [Due Date],
	    JOB_TRAFFIC_DET.JOB_REVISED_DATE as [Rev Due Date],
	    JOB_TRAFFIC_DET.JOB_COMPLETED_DATE as [Completed Date],
	    JOB_TRAFFIC_DET.FNC_COMMENTS as Comments
	FROM JOB_LOG
	INNER JOIN CLIENT

	    ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
	INNER JOIN DIVISION
	    ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
	    AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
	INNER JOIN PRODUCT
	    ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
	    AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
	    AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
	INNER JOIN JOB_COMPONENT
	    ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
	INNER JOIN JOB_TRAFFIC_DET
	    ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
	    AND JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
	WHERE (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
	AND (JOB_TRAFFIC_DET.EMP_CODE = @EmpCode)
	AND (JOB_TRAFFIC_DET.JOB_COMPLETED_DATE > @Completed or JOB_TRAFFIC_DET.JOB_COMPLETED_DATE is null) 
	And JOB_LOG.CL_CODE Like '%' + @ClientCode
	And JOB_LOG.DIV_CODE Like '%' + @DivCode
	And JOB_LOG.PRD_CODE Like '%' + @ProdCode
	And JOB_LOG.JOB_NUMBER Like '%' + @JobNumber
	And JOB_TRAFFIC_DET.JOB_REVISED_DATE >= @StartDate
	And JOB_TRAFFIC_DET.JOB_REVISED_DATE <= @EndDate
	
	Order By
		CASE @SortOrder
			WHEN '1' THEN  JOB_LOG.CL_CODE
			WHEN '2' Then Cast(Year(JOB_TRAFFIC_DET.JOB_DUE_DATE)as VARChar(4)) + Cast(Month(JOB_TRAFFIC_DET.JOB_DUE_DATE)as VARChar(2)) +  Cast(Day(JOB_TRAFFIC_DET.JOB_DUE_DATE)as VARChar(2))
			WHEN '3' Then JOB_TRAFFIC_DET.TASK_DESCRIPTION + '(' + JOB_TRAFFIC_DET.FNC_CODE + ')'
		END

























