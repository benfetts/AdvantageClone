
















CREATE PROCEDURE [dbo].[usp_cp_dd_GetJobCompJJ_withClosed] 
@CDPID int,
@ClientCode VARCHAR(6), 
@DivisionCode VARCHAR(6), 
@ProductCode VARCHAR(6), 
@Job INT
AS
DECLARE 
@Restrictions INT

SELECT @Restrictions = COUNT(*) FROM CP_SEC_CLIENT WHERE CDP_CONTACT_ID = @CDPID

IF @Restrictions > 0 
    BEGIN
		IF @Job <> 0
			BEGIN
				SELECT     
					JOB_COMPONENT.JOB_COMPONENT_NBR AS Code,  STR(JOB_COMPONENT.JOB_COMPONENT_NBR) + ' - ' + JOB_COMPONENT.JOB_COMP_DESC AS Description
				FROM         
					JOB_LOG INNER JOIN
					JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
					CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND 
					JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
				WHERE     
						(JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
						AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
						AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
					AND (JOB_COMPONENT.JOB_NUMBER = @Job)
					AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CDPID)
				ORDER BY 
					JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR DESC
			END
		ElSE
			BEGIN
				SELECT     
					STR(JOB_LOG.JOB_NUMBER) + '-' + ltrim(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) AS Code,  STR(JOB_LOG.JOB_NUMBER) + '-' + ltrim(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) + ' | ' + JOB_COMPONENT.JOB_COMP_DESC AS Description
				FROM         
					JOB_LOG INNER JOIN
					JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
					CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND 
					JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
				WHERE     
						(JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
						AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
						AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
					--AND (JOB_COMPONENT.JOB_NUMBER = @Job)
					AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CDPID)
				ORDER BY 
					JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR DESC
			END
        
    END
ELSE
    BEGIN
		IF @Job <> 0
			BEGIN
				SELECT     
					JOB_COMPONENT.JOB_COMPONENT_NBR AS Code,  STR(JOB_COMPONENT.JOB_COMPONENT_NBR) + ' - ' + JOB_COMPONENT.JOB_COMP_DESC AS Description
				FROM         
					JOB_LOG INNER JOIN
					JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
				WHERE     
						(JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
						AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
						AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
					AND (JOB_COMPONENT.JOB_NUMBER = @Job)
				ORDER BY 
					JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR DESC
			END
		ElSE
			BEGIN
				SELECT     
					STR(JOB_LOG.JOB_NUMBER) + '-' + ltrim(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) AS Code,  STR(JOB_LOG.JOB_NUMBER) + '-' + ltrim(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) + ' | ' + JOB_COMPONENT.JOB_COMP_DESC AS Description
				FROM         
					JOB_LOG INNER JOIN
					JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
				WHERE     
						(JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
						AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
						AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
					--AND (JOB_COMPONENT.JOB_NUMBER = @Job)
				ORDER BY 
					JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR DESC
			END
        
    END














