if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_cp_reports_traffic_schedule_byday]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_cp_reports_traffic_schedule_byday]
GO 

/* CHANGE LOG:
==========================================================
Sam, 20060425:
	changes to filter projected items.
	added field to temp table
	added field to all the selects
CTB: 20060526:
        modified all SELECTs by adding a concatenated column
        consisting of Client, Division and Product codes named
        CLI_DIV_PROD.
BJL, 20060622:
	Changed traffic code to description
ATC, 20070702:
	Added Office filtering and new selections for Account Exec, Job Type, and Client Reference.
JTG, 20081124: Added Completed param.
JTG, 20090929: Added AE (Account Execs) param.
*/

CREATE PROCEDURE [dbo].[usp_cp_reports_traffic_schedule_byday]
@ClientCode VarChar(4000),
@StartingDate Datetime, 
@EndingDate Datetime,
@ClosedJobs Char(1),
@ColSort VarChar(10),
@OfficeCode VarChar(4000),
@Manager Varchar(6),
@CompletedIncl char(1),
@AE VarChar(4000),
@CPID int
AS

-- Check AE's to include
If @AE = '%'  
   Begin
	-- ********** Check to include completed tasks
	If @CompletedIncl = '0'
	   Begin
     		-- ****************** Check For List of Clients
		If @ClientCode <> ''
		  Begin
			-- ******************* Check For List of Offices
			if @OfficeCode <> ''
			Begin
				-- ******   List of Clients *************
				If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
									 SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
								Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE						
							End
						else
							Begin
									 SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE					
							End

					  End
					ELSE
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE	
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE	
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE						
							End
						 
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE 
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End    
				  End
				End
			Else
		  			-- ******   List of Clients *************
				If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						 
					  End
					ELSE
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						 
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End    
				  End	
			End

		Else
		  Begin
			-- ******************* Check For List of Offices
			if @OfficeCode <> ''
			Begin
				If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************

					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
								AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
								AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
								AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
						Begin
						  If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, 
									JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						  else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, 
									JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
							
					  End
					else
					 Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End 
				  End
				End
			Else
		  			If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************

					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
								AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
								AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
								AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
						Begin
							If @Manager <> 'All'
								Begin
									Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER Join EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									  Order By JOB_TRAFFIC_DET.EMP_CODE
										
								End
							Else
								Begin
									Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER Join EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									  Order By JOB_TRAFFIC_DET.EMP_CODE
								End					
						End
					else
					 Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
										Inner Join JOB_TRAFFIC_DET
											On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
											AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										 Where JOB_REVISED_DATE >= @StartingDate
											   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									  Order By FNC_EST						
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
										Inner Join JOB_TRAFFIC_DET
											On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
											AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										 Where JOB_REVISED_DATE >= @StartingDate
											   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									  Order By FNC_EST
							End				
					  End 
				  End	
			End
	   
	   End

	--*************Include Completed tasks
	Else
	  Begin
		-- ****************** Check For List of Clients
		If @ClientCode <> ''
		  Begin
			-- ******************* Check For List of Offices
			if @OfficeCode <> ''
			Begin
				-- ******   List of Clients *************
				If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
									 SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
								Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE						
							End
						else
							Begin
									 SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE					
							End

					  End
					ELSE
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default	
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default	
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE						
							End
						 
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE 
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End    
				  End
				End
			Else
		  			-- ******   List of Clients *************
				If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						 
					  End
					ELSE
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE 
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						 
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End    
				  End	
			End

		Else
		  Begin
			-- ******************* Check For List of Offices
			if @OfficeCode <> ''
			Begin
				If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************

					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
								AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
						Begin
						  If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, 
									JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						  else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, 
									JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE 
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
							
					  End
					else
					 Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE 
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End 
				  End
				End
			Else
		  			If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************

					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
								AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
						Begin
							If @Manager <> 'All'
								Begin
									Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER Join EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									  Order By JOB_TRAFFIC_DET.EMP_CODE
										
								End
							Else
								Begin
									Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER Join EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									  Order By JOB_TRAFFIC_DET.EMP_CODE
								End					
						End
					else
					 Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
										Inner Join JOB_TRAFFIC_DET
											On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
											AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										 Where JOB_REVISED_DATE >= @StartingDate
											   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									  Order By FNC_EST						
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
										Inner Join JOB_TRAFFIC_DET
											On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
											AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										 Where JOB_REVISED_DATE >= @StartingDate
											   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									  Order By FNC_EST
							End				
					  End 
				  End	
			End
		End
	End
	
	
	
	
--MIDDLE	
--************************************************************************************************************
--************************************************************************************************************
Else -- Filter AE's
   Begin
	-- ********** Check to include completed tasks
	If @CompletedIncl = '0'
	   Begin
     		-- ****************** Check For List of Clients
		If @ClientCode <> ''
		  Begin
			-- ******************* Check For List of Offices
			if @OfficeCode <> ''
			Begin
				-- ******   List of Clients *************
				If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
									 SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
								Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE						
							End
						else
							Begin
									 SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE					
							End

					  End
					ELSE
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default	
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default	
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE						
							End
						 
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End    
				  End
				End
			Else
		  			-- ******   List of Clients *************
				If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						 
					  End
					ELSE
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						 
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End    
				  End	
			End

		Else
		  Begin
			-- ******************* Check For List of Offices
			if @OfficeCode <> ''
			Begin
				If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************

					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
								AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
								AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
								AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
						Begin
						  If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, 
									JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						  else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, 
									JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
							
					  End
					else
					 Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End 
				  End
				End
			Else
		  			If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************

					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
								  INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
								AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
								AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
								AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
						Begin
							If @Manager <> 'All'
								Begin
									Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER Join EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									
									  Order By JOB_TRAFFIC_DET.EMP_CODE
										
								End
							Else
								Begin
									Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER Join EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									
									  Order By JOB_TRAFFIC_DET.EMP_CODE
								End					
						End
					else
					 Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
										Inner Join JOB_TRAFFIC_DET
											On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
											AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								Where JOB_REVISED_DATE >= @StartingDate
											   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									
									  Order By FNC_EST						
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
										Inner Join JOB_TRAFFIC_DET
											On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
											AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								Where JOB_REVISED_DATE >= @StartingDate
											   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										   AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									
									  Order By FNC_EST
							End				
					  End 
				  End	
			End
	   
	   End

	--*************Include Completed tasks
	Else
	  Begin
		-- ****************** Check For List of Clients
		If @ClientCode <> ''
		  Begin
			-- ******************* Check For List of Offices
			if @OfficeCode <> ''
			Begin
				-- ******   List of Clients *************
				If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
									 SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
								Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE						
							End
						else
							Begin
									 SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE					
							End

					  End
					ELSE
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default	
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default	
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE						
							End
						 
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End    
				  End
				End
			Else
		  			-- ******   List of Clients *************
				If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								SELECT JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   FROM JOB_TRAFFIC
									 INNER JOIN JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 INNER JOIN JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 INNER JOIN JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
											AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table( @ClientCode, DEFAULT ) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						 
					  End
					ELSE
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
		       								AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
		       								AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
		    								AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									   from JOB_TRAFFIC
									 Inner Join JOB_TRAFFIC_DET
										 On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									 Inner Join JOB_LOG
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									 Inner Join JOB_COMPONENT
										 On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									 INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									 INNER JOIN CLIENT
										 ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN DIVISION
										 ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
										AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									 INNER JOIN PRODUCT
										 ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
										AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
										AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER JOIN EMPLOYEE
										 ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									 INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
									 INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								LEFT OUTER JOIN TRAFFIC_FNC 
										 ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									  Where JOB_REVISED_DATE >= @StartingDate
										AND JOB_REVISED_DATE <= @EndingDate
										AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									   Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						 
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									   AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@ClientCode, DEFAULT) c ON JOB_LOG.CL_CODE = c.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End    
				  End	
			End

		Else
		  Begin
			-- ******************* Check For List of Offices
			if @OfficeCode <> ''
			Begin
				If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************

					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
								AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
						Begin
						  If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, 
									JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						  else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, 
									JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
							
					  End
					else
					 Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
								from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     						INNER JOIN TRAFFIC
										ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@OfficeCode, DEFAULT) d ON JOB_LOG.OFFICE_CODE = d.vstr collate database_default 
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
									   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End 
				  End
				End
			Else
		  			If @ClosedJobs = 'Y'
				  Begin 
					-- ************ Include Closed Jobs ****************

					If @ColSort = 'emp'
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
								AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
									INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
				    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
				    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
				    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
				    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									-- ST --
									LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									-- ST --	
								Where JOB_REVISED_DATE >= @StartingDate
								AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								--AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
								Order By JOB_TRAFFIC_DET.EMP_CODE					
							End
						
					  End
					else
					  Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
							Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
									   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								
								  Order By FNC_EST
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
									JOB_LOG.CL_CODE,
									CLIENT.CL_NAME,
									JOB_LOG.DIV_CODE,
									DIVISION.DIV_NAME,
									JOB_LOG.PRD_CODE,
									PRODUCT.PRD_DESCRIPTION,
									JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
									JOB_LOG.JOB_DESC,
									JOB_COMPONENT.JOB_COMPONENT_NBR,
									JOB_COMPONENT.JOB_COMP_DESC,
									JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
									Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
									TRAFFIC.TRF_CODE AS TRF_CODE, 
									TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
									ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
									CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
									TASK_DESCRIPTION, 
									JOB_REVISED_DATE, 
									SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
													 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
									'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
									  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
								Inner Join JOB_TRAFFIC_DET
									On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
									AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
								Inner Join JOB_LOG
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
								Inner Join JOB_COMPONENT
									On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
									   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
								INNER JOIN TRAFFIC
									 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
								INNER JOIN CLIENT
			    						ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN DIVISION
									ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
								INNER JOIN PRODUCT
			    						ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    						AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    						AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
								LEFT OUTER JOIN EMPLOYEE
									ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
								 INNER JOIN
									  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
								 LEFT OUTER JOIN
									  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
							   LEFT OUTER JOIN TRAFFIC_FNC 
									ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									 Where JOB_REVISED_DATE >= @StartingDate
									   AND JOB_REVISED_DATE <= @EndingDate
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
								  Order By FNC_EST					
							End
						
					  End 
				  End
				Else
				  Begin		
						-- ************ Exclude Closed Jobs ****************
					If @ColSort = 'emp'
						Begin
							If @Manager <> 'All'
								Begin
									Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER Join EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
									Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									
									  Order By JOB_TRAFFIC_DET.EMP_CODE
										
								End
							Else
								Begin
									Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, 
										JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
									Inner Join JOB_TRAFFIC_DET
										On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
										AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
										 ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									 LEFT OUTER Join EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										 Where JOB_REVISED_DATE >= @StartingDate
										   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									  Order By JOB_TRAFFIC_DET.EMP_CODE
								End					
						End
					else
					 Begin
						If @Manager <> 'All'
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
										Inner Join JOB_TRAFFIC_DET
											On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
											AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										 Where JOB_REVISED_DATE >= @StartingDate
											   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										   AND JOB_TRAFFIC.MGR_EMP_CODE = @Manager
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									  Order By FNC_EST						
							End
						else
							Begin
								Select  JOB_COMPONENT.START_DATE, 
										JOB_LOG.CL_CODE,
										CLIENT.CL_NAME,
										JOB_LOG.DIV_CODE,
										DIVISION.DIV_NAME,
										JOB_LOG.PRD_CODE,
										PRODUCT.PRD_DESCRIPTION,
										JOB_TRAFFIC_DET.JOB_NUMBER as JOB_NUMBER, 
										JOB_LOG.JOB_DESC,
										JOB_COMPONENT.JOB_COMPONENT_NBR,
										JOB_COMPONENT.JOB_COMP_DESC,
										JOB_DESC, JOB_TRAFFIC_DET.EMP_CODE, 
										Convert(VarChar(250), TRF_COMMENTS) as TRF_COMMENTS, 
										TRAFFIC.TRF_CODE AS TRF_CODE, 
										TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
										ISNULL(JOB_TRAFFIC_DET.FNC_CODE, SubString(TASK_DESCRIPTION, 1, 10)) as FNC_CODE1,
										CASE WHEN JOB_TRAFFIC_DET.FNC_CODE IS NULL THEN SubString(TASK_DESCRIPTION, 1, 30) ELSE JOB_TRAFFIC_DET.FNC_CODE END as FNC_CODE2,
										TASK_DESCRIPTION, 
										JOB_REVISED_DATE, 
										SubString(EMPLOYEE.EMP_FNAME, 1, 1) + ' ' + EMPLOYEE.EMP_LNAME as EmpName, 
														 JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE as CLI_DIV_PROD,
										'(' + JOB_COMPONENT.EMP_CODE + ') ' + EMPLOYEE_1.EMP_FNAME + ' ' + EMPLOYEE_1.EMP_MI + ' ' + EMPLOYEE_1.EMP_LNAME AS AE,  
										  JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, TP.PHASE_DESC
									from JOB_TRAFFIC
										Inner Join JOB_TRAFFIC_DET
											On JOB_TRAFFIC.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER
											AND JOB_TRAFFIC.JOB_COMPONENT_NBR =  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
									Inner Join JOB_LOG
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER
									Inner Join JOB_COMPONENT
										On JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
										   AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		     							INNER JOIN TRAFFIC
											ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE
									INNER JOIN CLIENT
			    							ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN DIVISION
										ON DIVISION.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND DIVISION.CL_CODE = JOB_LOG.CL_CODE
									INNER JOIN PRODUCT
			    							ON PRODUCT.CL_CODE = JOB_LOG.CL_CODE
			    							AND PRODUCT.DIV_CODE = JOB_LOG.DIV_CODE
			    							AND PRODUCT.PRD_CODE = JOB_LOG.PRD_CODE
									LEFT OUTER JOIN EMPLOYEE
										ON JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE
									 INNER JOIN
										  EMPLOYEE AS EMPLOYEE_1 ON JOB_COMPONENT.EMP_CODE = EMPLOYEE_1.EMP_CODE 
									 LEFT OUTER JOIN
										  JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE
									INNER JOIN charlist_to_table(@AE, DEFAULT) g ON JOB_COMPONENT.EMP_CODE = g.vstr collate database_default
									 INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE
								   LEFT OUTER JOIN TRAFFIC_FNC 
										ON JOB_TRAFFIC.TRF_CODE = TRAFFIC_FNC.TRF_CODE	LEFT OUTER JOIN TRAFFIC_PHASE TP ON TP.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID	
										 Where JOB_REVISED_DATE >= @StartingDate
											   AND JOB_REVISED_DATE <= @EndingDate
										   AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
										AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
									  Order By FNC_EST
							End				
					  End 
				  End	
			End
		End
   End	

	


