
CREATE PROCEDURE [dbo].[usp_wv_ALERT_NEW_GET_TASK] /*WITH ENCRYPTION*/
	@JOB_NUMBER         INT,
	@JOB_COMPONENT_NBR  SMALLINT,
	@SEQ_NBR            SMALLINT
AS
/*=========== QUERY ===========*/
	SELECT CASE 
				WHEN (JOB_TRAFFIC_DET.FNC_CODE IS NULL) AND (NOT(JOB_TRAFFIC_DET.TASK_DESCRIPTION IS NULL)) THEN 
					 JOB_TRAFFIC_DET.TASK_DESCRIPTION
				WHEN (JOB_TRAFFIC_DET.TASK_DESCRIPTION IS NULL) AND (NOT(JOB_TRAFFIC_DET.FNC_CODE IS NULL)) THEN 
					 TRAFFIC_FNC.TRF_DESC
				ELSE JOB_TRAFFIC_DET.TASK_DESCRIPTION
		   END AS TASK_DESC,
		   COALESCE(
			   JOB_TRAFFIC_DET.JOB_REVISED_DATE,
			   JOB_TRAFFIC_DET.JOB_DUE_DATE
		   ) AS DUE_DATE,
		   ISNULL(JOB_TRAFFIC_DET.JOB_HRS,0) AS JOB_HRS,
		   JOB_TRAFFIC_DET.FNC_COMMENTS,
		   JOB_TRAFFIC_DET.DUE_DATE_COMMENTS,
		   JOB_TRAFFIC_DET.REV_DATE_COMMENTS,
		   COALESCE(JOB_TRAFFIC_DET.REVISED_DUE_TIME, JOB_TRAFFIC_DET.DUE_TIME) AS 
		   DUE_TIME,
		   '[Task Updated] for Job ' +
		   RIGHT(
			   REPLICATE('0', 6) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_NUMBER),
			   6
		   )
		   + '-' +
		   RIGHT(
			   REPLICATE('0', 2) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_COMPONENT_NBR),
			   2
		   ) 
		   + ' - ' +
		   ISNULL(JOB_COMPONENT.JOB_COMP_DESC, '') 
		   + '. ' AS DFLT_SUBJECT_LINE
	FROM   JOB_TRAFFIC_DET WITH (NOLOCK)
		   INNER JOIN JOB_COMPONENT WITH (NOLOCK)
				ON  JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
					AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
		   LEFT OUTER JOIN TRAFFIC_FNC WITH (NOLOCK)
				ON  JOB_TRAFFIC_DET.FNC_CODE = TRAFFIC_FNC.TRF_CODE
	WHERE  (JOB_TRAFFIC_DET.JOB_NUMBER = @JOB_NUMBER)
		   AND (JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
		   AND (JOB_TRAFFIC_DET.SEQ_NBR = @SEQ_NBR);
/*=========== QUERY ===========*/
