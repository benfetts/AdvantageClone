CREATE PROCEDURE [dbo].[usp_wv_ALERT_NOTIFY_AUTO_COMMENT] 
@USER_CODE VARCHAR(100),
@ALERT_ID INT,
@EMP_CODE VARCHAR(6),
@COMMENT_TYPE INT,
@ALERT_STATE_ID      INT,
@ALRT_NOTIFY_HDR_ID  INT
AS
/*=========== QUERY ===========*/
	
	DECLARE @COMMENT            VARCHAR(1000),
			@EMP_FML            VARCHAR(75),
			@EMP_EMAIL          VARCHAR(50),
			@MAX_ALERT_RCPT_ID  INT,
			@STATE_COMMENT      VARCHAR(1000),
			@ALERT_STATE_NAME   VARCHAR(100),
			@LAST_NOTIFY_EMP	VARCHAR(6)
	            
	SET @MAX_ALERT_RCPT_ID = 0;        

	SELECT @EMP_FML = [dbo].[udf_get_empl_name](@EMP_CODE, 'FML');
	SELECT @EMP_EMAIL = EMP_EMAIL
	FROM   EMPLOYEE WITH(NOLOCK)
	WHERE  EMP_CODE = @EMP_CODE;
		
	IF (@EMP_FML IS NULL)
	   OR (@EMP_FML = '')
	BEGIN
		SET @EMP_FML = 'no one';
	END		

	SELECT @MAX_ALERT_RCPT_ID = ISNULL(MAX(A.ALERT_RCPT_ID), 0)
	FROM(
	SELECT ALERT_RCPT_ID FROM ALERT_RCPT WITH(NOLOCK) WHERE  ALERT_ID = @ALERT_ID
	UNION
	SELECT ALERT_RCPT_ID FROM ALERT_RCPT_DISMISSED WITH(NOLOCK) WHERE  ALERT_ID = @ALERT_ID
	) AS A;
		
	SET @MAX_ALERT_RCPT_ID = ISNULL(@MAX_ALERT_RCPT_ID,0) + 1;

	DECLARE @EMP_ALREADY_RECIPIENT    SMALLINT,
			@ALERT_ALREADY_HAS_STATE  SMALLINT,
			@ALERT_RECIPIENT_ALREADY_HAS_CURRENT_NOTIFY SMALLINT
		
	SET @EMP_ALREADY_RECIPIENT = 0;
	SET @ALERT_ALREADY_HAS_STATE = 0;
	SET @ALERT_RECIPIENT_ALREADY_HAS_CURRENT_NOTIFY = 0;

	SELECT @EMP_ALREADY_RECIPIENT = ISNULL(COUNT(1), 0)
	FROM   ALERT_RCPT WITH(NOLOCK)
	WHERE  ALERT_ID = @ALERT_ID
		   AND EMP_CODE = @EMP_CODE;
		   
	SELECT @ALERT_RECIPIENT_ALREADY_HAS_CURRENT_NOTIFY = ISNULL(COUNT(1), 0)
	FROM   ALERT_RCPT WITH(NOLOCK)
	WHERE  ALERT_ID = @ALERT_ID
		   AND CURRENT_NOTIFY = 1;

	SELECT @ALERT_ALREADY_HAS_STATE = ISNULL(COUNT(1), 0)
	FROM   ALERT WITH(NOLOCK)
	WHERE  ALERT_ID = @ALERT_ID
		   AND (NOT ALERT_STATE_ID IS NULL);

	SELECT @ALERT_STATE_NAME = ALERT_STATE_NAME
	FROM   ALERT_STATES WITH(ROWLOCK)
	WHERE  ALERT_STATE_ID = @ALERT_STATE_ID;

	SET @STATE_COMMENT = 'State:  ' + @ALERT_STATE_NAME + ' assigned to alert.  '
	
	IF @ALRT_NOTIFY_HDR_ID = 0 
	BEGIN
		UPDATE ALERT WITH(ROWLOCK)
		SET    ALERT_STATE_ID = @ALERT_STATE_ID
		WHERE  ALERT_ID = @ALERT_ID;	
	END
	
	IF @ALRT_NOTIFY_HDR_ID > 0
	BEGIN
		UPDATE ALERT WITH(ROWLOCK)
		SET    ALERT_STATE_ID = @ALERT_STATE_ID,
			   ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID
		WHERE  ALERT_ID = @ALERT_ID;	
	END

	IF @ALERT_RECIPIENT_ALREADY_HAS_CURRENT_NOTIFY = 0 AND @EMP_ALREADY_RECIPIENT = 0
	BEGIN
		INSERT INTO ALERT_RCPT WITH
		  (
			ROWLOCK
		  )(
			   ALERT_ID,
			   ALERT_RCPT_ID,
			   EMP_CODE,
			   EMAIL_ADDRESS,
			   PROCESSED,
			   NEW_ALERT,
			   READ_ALERT,
			   CURRENT_RCPT,
			   CURRENT_NOTIFY
		   )
		VALUES
		  (
			@ALERT_ID,
			@MAX_ALERT_RCPT_ID,
			@EMP_CODE,
			@EMP_EMAIL,
			NULL,
			1,
			NULL,
			NULL,
			1
		  );
		SET @COMMENT_TYPE = 0
	END

	IF @ALERT_RECIPIENT_ALREADY_HAS_CURRENT_NOTIFY > 0
	BEGIN
		SELECT @LAST_NOTIFY_EMP = EMP_CODE FROM ALERT_RCPT WHERE ALERT_ID = @ALERT_ID AND CURRENT_NOTIFY = 1;
		
		UPDATE ALERT_RCPT WITH(ROWLOCK)
		SET    EMP_CODE = @EMP_CODE , CURRENT_NOTIFY = 1
		WHERE  ALERT_ID = @ALERT_ID
			   AND EMP_CODE = @LAST_NOTIFY_EMP;	
		SET @COMMENT_TYPE = 1
	END
		
	SELECT @COMMENT = CASE 
						   WHEN @COMMENT_TYPE = 0 THEN 'Assignment added for '
						   WHEN @COMMENT_TYPE = 1 THEN 'Assignment changed to '
						   ELSE NULL
					  END;	

	SET @COMMENT = @COMMENT + @EMP_FML + '.';
		

	IF NOT @COMMENT IS NULL
	BEGIN
		INSERT INTO ALERT_COMMENT WITH
		  (
			ROWLOCK
		  )(ALERT_ID, USER_CODE, GENERATED_DATE, COMMENT, EMAILSENT)
		VALUES
		  (
			@ALERT_ID,
			@USER_CODE,
			GETDATE(),
			@STATE_COMMENT + @COMMENT,
			1
		  );
	END

/*=========== QUERY ===========*/