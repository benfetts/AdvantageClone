--DROP PROCEDURE [dbo].[usp_wv_ALERT_NOTIFY_EMPS_BY_STID] 
CREATE PROCEDURE [dbo].[usp_wv_ALERT_NOTIFY_EMPS_BY_STID] 
@ALERT_STATE_ID      INT,
@JOB_NUMBER          INT,
@JOB_COMPONENT_NBR   SMALLINT,
@ALRT_NOTIFY_HDR_ID  INT,
@USER_FILTER_INPUT   VARCHAR(255),
@FORCE_SHOW_ALL		 BIT,
@INCL_PLEASE_SELECT BIT,
@INCL_UNASSIGNED BIT
AS
/*=========== QUERY ===========*/
BEGIN
	SET @ALERT_STATE_ID = ISNULL(@ALERT_STATE_ID, 0);
	SET @JOB_NUMBER = ISNULL(@JOB_NUMBER, 0);
	SET @JOB_COMPONENT_NBR = ISNULL(@JOB_COMPONENT_NBR, 0);
	SET @ALRT_NOTIFY_HDR_ID = ISNULL(@ALRT_NOTIFY_HDR_ID, 0);
	SET @FORCE_SHOW_ALL = ISNULL(@FORCE_SHOW_ALL, 0);
	SET @INCL_PLEASE_SELECT = ISNULL(@INCL_PLEASE_SELECT, 0);
	SET @INCL_UNASSIGNED = ISNULL(@INCL_UNASSIGNED, 0);

	DECLARE @RESULTS TABLE (
		ID INT IDENTITY,
		EMP_CODE VARCHAR(25)  NULL,
		EMP_FML VARCHAR(255) NULL,
		EMP_EMAIL VARCHAR(255) NULL,
		IS_DEFAULT BIT NULL
	)

	IF @INCL_PLEASE_SELECT = 1
	BEGIN
		INSERT INTO @RESULTS (EMP_CODE, EMP_FML, EMP_EMAIL, IS_DEFAULT)
		VALUES('', '[Please select]', NULL, 0);
	END

	IF @INCL_UNASSIGNED = 1
	BEGIN
		INSERT INTO @RESULTS (EMP_CODE, EMP_FML, EMP_EMAIL, IS_DEFAULT)
		VALUES('unassigned', '[Unassigned]', NULL, 0);
	END

	DECLARE 
		@THIS_ALRT_NOTIFY_HDR_ID	INT,
		@DFLT_EMP_CODE				VARCHAR(6),
		@EMP_LOOKUP_TYPE			TINYINT, -- 0 = Original; based on maintenance, 1 = by role, 2 = dept/team, 3 = alert group, 4 = all
		@DFLT_ROLE_CODE				VARCHAR(6),
		@DFLT_DEPT_TEAM_CODE		VARCHAR(4),
		@DFLT_ALERT_GROUP_CODE		VARCHAR(50)

	IF @JOB_NUMBER > 0 AND @JOB_COMPONENT_NBR > 0 AND @ALRT_NOTIFY_HDR_ID = 0
	BEGIN
		SELECT @THIS_ALRT_NOTIFY_HDR_ID = ALRT_NOTIFY_HDR_ID
		FROM   JOB_COMPONENT WITH(NOLOCK)
		WHERE  JOB_NUMBER = @JOB_NUMBER
				AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;
	END       

	IF @JOB_NUMBER = 0 AND @JOB_COMPONENT_NBR = 0 AND @ALRT_NOTIFY_HDR_ID > 0
	BEGIN
		SET @THIS_ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID;
	END       
               
	SET @THIS_ALRT_NOTIFY_HDR_ID = ISNULL(@THIS_ALRT_NOTIFY_HDR_ID, 0);
	SET @EMP_LOOKUP_TYPE = ISNULL(@EMP_LOOKUP_TYPE, 0);

	IF @THIS_ALRT_NOTIFY_HDR_ID > 0 AND @ALERT_STATE_ID > 0
	BEGIN
		SELECT 
			@DFLT_EMP_CODE = DFLT_EMP_CODE,
			@EMP_LOOKUP_TYPE = ISNULL(EMP_LOOKUP_TYPE, 0),
			@DFLT_ROLE_CODE = DFLT_ROLE_CODE,
			@DFLT_DEPT_TEAM_CODE = DFLT_DEPT_TEAM_CODE,
			@DFLT_ALERT_GROUP_CODE = DFLT_ALERT_GROUP_CODE
		FROM   
			ALERT_NOTIFY_STATES WITH(NOLOCK)
		WHERE  
			ALRT_NOTIFY_HDR_ID = @THIS_ALRT_NOTIFY_HDR_ID
			AND ALERT_STATE_ID = @ALERT_STATE_ID;
	END

	IF @FORCE_SHOW_ALL = 0
	BEGIN

		--SET @EMP_LOOKUP_TYPE = 3

		IF @EMP_LOOKUP_TYPE = 0 -- BY MAINTENANCE TABLE (ONLY PATH ORIGINALLY)
		BEGIN
			INSERT INTO @RESULTS(EMP_CODE, EMP_EMAIL, IS_DEFAULT)
			SELECT 
			DISTINCT EMPLOYEE.EMP_CODE,
				   EMPLOYEE.EMP_EMAIL,
				   ALERT_NOTIFY_EMPS.IS_DFLT
			FROM   EMPLOYEE WITH (NOLOCK) INNER JOIN ALERT_NOTIFY_EMPS ON EMPLOYEE.EMP_CODE = ALERT_NOTIFY_EMPS.EMP_CODE
			
			WHERE  (
						EMPLOYEE.EMP_TERM_DATE IS NULL
						OR EMPLOYEE.EMP_TERM_DATE > GETDATE()
					)
			AND ALERT_NOTIFY_EMPS.ALRT_NOTIFY_HDR_ID = @THIS_ALRT_NOTIFY_HDR_ID 
			AND ALERT_NOTIFY_EMPS.ALERT_STATE_ID = @ALERT_STATE_ID;
		END
		IF @EMP_LOOKUP_TYPE = 1 -- BY ROLE
		BEGIN
			INSERT INTO @RESULTS (EMP_CODE, EMP_EMAIL)
			SELECT 
				DISTINCT EMPLOYEE.EMP_CODE, EMPLOYEE.EMP_EMAIL
			FROM            
				EMPLOYEE WITH (NOLOCK) 
				INNER JOIN EMP_TRAFFIC_ROLE WITH (NOLOCK) ON EMPLOYEE.EMP_CODE = EMP_TRAFFIC_ROLE.EMP_CODE 
				INNER JOIN ALERT_NOTIFY_ROLE WITH (NOLOCK) ON EMP_TRAFFIC_ROLE.ROLE_CODE = ALERT_NOTIFY_ROLE.ROLE_CODE
			WHERE        
				((EMPLOYEE.EMP_TERM_DATE IS NULL) OR (EMPLOYEE.EMP_TERM_DATE > GETDATE()))
				AND
				((ALERT_NOTIFY_ROLE.ALRT_NOTIFY_HDR_ID = @THIS_ALRT_NOTIFY_HDR_ID) AND (ALERT_NOTIFY_ROLE.ALERT_STATE_ID = @ALERT_STATE_ID));
		END
		IF @EMP_LOOKUP_TYPE = 2 -- BY DEPARTMENT
		BEGIN
			INSERT INTO @RESULTS (EMP_CODE, EMP_EMAIL)
			SELECT 
				DISTINCT EMPLOYEE.EMP_CODE,
				EMPLOYEE.EMP_EMAIL
			FROM   
				EMPLOYEE WITH (NOLOCK) 
			    INNER JOIN EMP_DP_TM WITH (NOLOCK) ON EMPLOYEE.EMP_CODE = EMP_DP_TM.EMP_CODE
				INNER JOIN ALERT_NOTIFY_DEPT_TEAM WITH (NOLOCK) ON EMP_DP_TM.DP_TM_CODE = ALERT_NOTIFY_DEPT_TEAM.DEPT_TEAM_CODE
			WHERE        
				((EMPLOYEE.EMP_TERM_DATE IS NULL) OR (EMPLOYEE.EMP_TERM_DATE > GETDATE()))
				AND
				((ALERT_NOTIFY_DEPT_TEAM.ALRT_NOTIFY_HDR_ID = @THIS_ALRT_NOTIFY_HDR_ID) AND (ALERT_NOTIFY_DEPT_TEAM.ALERT_STATE_ID = @ALERT_STATE_ID));
		END
		IF @EMP_LOOKUP_TYPE = 3 -- ALERT GROUP
		BEGIN
			INSERT INTO @RESULTS (EMP_CODE, EMP_EMAIL)
			SELECT 
				DISTINCT EMPLOYEE.EMP_CODE,
				EMPLOYEE.EMP_EMAIL
			FROM   
				EMPLOYEE WITH (NOLOCK) 
			    INNER JOIN EMAIL_GROUP WITH (NOLOCK) ON EMPLOYEE.EMP_CODE = EMAIL_GROUP.EMP_CODE
				INNER JOIN ALERT_NOTIFY_EMAIL_GROUP WITH (NOLOCK) ON EMAIL_GROUP.EMAIL_GR_CODE = ALERT_NOTIFY_EMAIL_GROUP.EMAIL_GR_CODE
			WHERE        
				((EMPLOYEE.EMP_TERM_DATE IS NULL) OR (EMPLOYEE.EMP_TERM_DATE > GETDATE()))
				AND
				((ALERT_NOTIFY_EMAIL_GROUP.ALRT_NOTIFY_HDR_ID = @THIS_ALRT_NOTIFY_HDR_ID) AND (ALERT_NOTIFY_EMAIL_GROUP.ALERT_STATE_ID = @ALERT_STATE_ID));
		END
		IF @EMP_LOOKUP_TYPE = 4 -- ALL
		BEGIN
			SET @FORCE_SHOW_ALL = 1;
		END
	END

	IF @FORCE_SHOW_ALL = 1
	BEGIN
		INSERT INTO @RESULTS (EMP_CODE, EMP_EMAIL)
		SELECT EMPLOYEE.EMP_CODE,
			   EMPLOYEE.EMP_EMAIL
		FROM   EMPLOYEE WITH(NOLOCK)
			
		WHERE  (
					EMPLOYEE.EMP_TERM_DATE IS NULL
					OR EMPLOYEE.EMP_TERM_DATE > GETDATE()
				);
		-- ADD IN DEFAULT EMPLOYEE REGARDLESS???
		IF NOT EXISTS(SELECT ID FROM @RESULTS WHERE EMP_CODE = @DFLT_EMP_CODE)
		BEGIN
			INSERT INTO @RESULTS (EMP_CODE, EMP_EMAIL)
			SELECT EMPLOYEE.EMP_CODE,
				   EMPLOYEE.EMP_EMAIL
			FROM   EMPLOYEE WITH(NOLOCK)
			
			WHERE  (
						EMPLOYEE.EMP_TERM_DATE IS NULL
						OR EMPLOYEE.EMP_TERM_DATE > GETDATE()
					) AND
					EMPLOYEE.EMP_CODE = @DFLT_EMP_CODE;
		END
	END
	UPDATE @RESULTS SET EMP_FML = COALESCE((RTRIM(E.EMP_FNAME) + ' '),'') + COALESCE((E.EMP_MI + '. '),'') + COALESCE(E.EMP_LNAME,'')
	FROM
		@RESULTS R
		INNER JOIN EMPLOYEE E WITH(NOLOCK) ON R.EMP_CODE = E.EMP_CODE;

	IF @THIS_ALRT_NOTIFY_HDR_ID > 0 AND @ALERT_STATE_ID > 0
	BEGIN
		UPDATE R SET R.IS_DEFAULT = A.IS_DFLT
		FROM
			@RESULTS R
			INNER JOIN ALERT_NOTIFY_EMPS A WITH(NOLOCK) ON R.EMP_CODE = A.EMP_CODE
		WHERE
			A.ALRT_NOTIFY_HDR_ID = @THIS_ALRT_NOTIFY_HDR_ID
			AND A.ALERT_STATE_ID = @ALERT_STATE_ID;
	END
	UPDATE @RESULTS SET EMP_FML = EMP_FML + '*', IS_DEFAULT = 1 WHERE EMP_CODE = @DFLT_EMP_CODE OR IS_DEFAULT = 1;
	UPDATE @RESULTS SET IS_DEFAULT = 0 WHERE IS_DEFAULT IS NULL;

	-- FINAL RETURN		
	IF @USER_FILTER_INPUT IS NULL
	BEGIN
		SELECT 
			DISTINCT
			EMP_CODE,
			EMP_FML,
			EMP_EMAIL,
			IS_DEFAULT
		FROM 
			@RESULTS AS RESULTS
		ORDER BY RESULTS.EMP_FML;
	END
	ELSE
	BEGIN
		SELECT 
			DISTINCT
			EMP_CODE,
			EMP_FML,
			EMP_EMAIL,
			IS_DEFAULT
		FROM 
			@RESULTS AS RESULTS
		WHERE
			UPPER(RESULTS.EMP_FML) LIKE UPPER(@USER_FILTER_INPUT) + '%'
			OR UPPER(RESULTS.EMP_CODE) LIKE UPPER(@USER_FILTER_INPUT) + '%'
		ORDER BY EMP_FML;
	END
END
/*=========== QUERY ===========*/