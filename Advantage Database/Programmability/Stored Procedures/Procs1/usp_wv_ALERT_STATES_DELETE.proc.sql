--DROP PROCEDURE [dbo].[usp_wv_ALERT_STATES_DELETE]
CREATE PROCEDURE [dbo].[usp_wv_ALERT_STATES_DELETE] /*WITH ENCRYPTION*/
@ALERT_STATE_ID INT,
@EXCLUDE_TMPLT_CHK BIT
AS
BEGIN
/*=========== QUERY ===========*/
    DECLARE
	   @HAS_BOARD_TMPLT INT,
	    @HAS_TEMPLATE INT,
	    @HAS_ASSIGNMENT INT,
	    @HAS_CARD INT,
	    @RTN_MSG VARCHAR(400)

	SET @RTN_MSG = '';
	
	SELECT @HAS_ASSIGNMENT = ISNULL(COUNT(1),0) FROM ALERT WITH(NOLOCK) WHERE ALERT_STATE_ID = @ALERT_STATE_ID;
	SELECT @HAS_CARD = ISNULL(COUNT(1),0) FROM ALERT A WITH(NOLOCK) INNER JOIN SPRINT_DTL SD ON A.ALERT_ID = SD.ALERT_ID WHERE A.BOARD_STATE_ID = @ALERT_STATE_ID;

	IF @EXCLUDE_TMPLT_CHK IS NULL OR @EXCLUDE_TMPLT_CHK = 0 -- DON'T ALLOW DELETE IF ON TEMPLATE OR BOARD DESIGN
	BEGIN
		SELECT @HAS_BOARD_TMPLT = ISNULL(COUNT(1),0) FROM BOARD_DTL WITH(NOLOCK) WHERE ALERT_STATE_ID = @ALERT_STATE_ID;
		SELECT @HAS_TEMPLATE = ISNULL(COUNT(1),0) FROM ALERT_NOTIFY_STATES WITH(NOLOCK) WHERE ALERT_STATE_ID = @ALERT_STATE_ID;
		IF @HAS_TEMPLATE = 0 AND @HAS_ASSIGNMENT = 0 AND @HAS_BOARD_TMPLT = 0 AND @HAS_CARD = 0
		BEGIN
			DELETE FROM ALERT_NOTIFY_EMPS WITH(ROWLOCK) WHERE ALERT_STATE_ID = @ALERT_STATE_ID;
			DELETE FROM ALERT_STATES WITH(ROWLOCK) WHERE ALERT_STATE_ID = @ALERT_STATE_ID;
			SET @RTN_MSG = '';
		END
		ELSE
		BEGIN
		   IF @RTN_MSG = '' AND @HAS_CARD > 0
		   BEGIN
			  SET @RTN_MSG = 'This state is on a board and cannot be deleted';
		   END
		   IF @RTN_MSG = '' AND @HAS_ASSIGNMENT > 0
		   BEGIN
			  SET @RTN_MSG = 'This state is on an assignment and cannot be deleted';
		   END
		   IF @RTN_MSG = '' AND @HAS_BOARD_TMPLT > 0
		   BEGIN
			  SET @RTN_MSG = 'This state is on a board layout and cannot be deleted';
		   END
		   IF @RTN_MSG = '' AND @HAS_TEMPLATE > 0
		   BEGIN
			  SET @RTN_MSG = 'This state is on an assignment template and cannot be deleted';
		   END
		END
	END
	ELSE
	BEGIN
		IF @HAS_ASSIGNMENT = 0 AND @HAS_CARD = 0
		BEGIN
			DELETE FROM ALERT_NOTIFY_EMPS WITH(ROWLOCK) WHERE ALERT_STATE_ID = @ALERT_STATE_ID;
			DELETE FROM ALERT_NOTIFY_STATES WITH(ROWLOCK) WHERE ALERT_STATE_ID = @ALERT_STATE_ID;
			DELETE FROM BOARD_DTL WITH(ROWLOCK) WHERE ALERT_STATE_ID = @ALERT_STATE_ID;
			DELETE FROM ALERT_STATES WITH(ROWLOCK) WHERE ALERT_STATE_ID = @ALERT_STATE_ID;
			SET @RTN_MSG = '';
		END
		ELSE
		BEGIN
		   IF @RTN_MSG = '' AND @HAS_CARD > 0
		   BEGIN
			  SET @RTN_MSG = 'This state is on a board and cannot be deleted';
		   END
		   IF @RTN_MSG = '' AND @HAS_ASSIGNMENT > 0
		   BEGIN
			  SET @RTN_MSG = 'This state is on an assignment and cannot be deleted';
		   END
		END
	END	
	
	SELECT @RTN_MSG;		

/*=========== QUERY ===========*/
END