CREATE PROCEDURE [dbo].[usp_wv_ALERT_UPDATE] 
@USER_CODE        VARCHAR(100),
@ALERT_ID         INT,
@SUBJECT          VARCHAR(254),
@BODY             TEXT,	
@BODY_HTML        TEXT,
@PRIORITY		  SMALLINT,
@DUE_DATE		  SMALLDATETIME,
@TIME_DUE		  VARCHAR(10),
@VER			  VARCHAR(10),
@BUILD            VARCHAR(10),
@ALERT_CAT_ID	  INT,
@GENERATED_COMMENT	  TEXT,
@CPID			  INT
AS

/*=========== QUERY ===========*/

	DECLARE @HAS_CHANGE            SMALLINT
	DECLARE @NEW_COMMENT           VARCHAR(8000)
	
	SET @NEW_COMMENT = '';

    	
	DECLARE @NEW_COMMENT_ID INT
    	
   	
	UPDATE ALERT WITH(ROWLOCK)
	SET    [SUBJECT] = @SUBJECT,
		   BODY = @BODY,
		   BODY_HTML = @BODY_HTML,
		   DUE_DATE = @DUE_DATE,
		   TIME_DUE = @TIME_DUE,
		   PRIORITY = @PRIORITY,
		   ALERT_CAT_ID = @ALERT_CAT_ID,
		   VER = @VER,
		   BUILD = @BUILD
	WHERE  ALERT_ID = @ALERT_ID;

	DECLARE @TRACK_CHANGES TINYINT;

	SELECT @TRACK_CHANGES = ISNULL(CONVERT(VARCHAR, AGY_SETTINGS_VALUE), '0')
	FROM   AGY_SETTINGS WITH(NOLOCK)
	WHERE  AGY_SETTINGS_CODE = 'ALRT_ASSGN_TRK_SD';
	
	SET @TRACK_CHANGES = ISNULL(@TRACK_CHANGES, 0);

	IF @TRACK_CHANGES = 1 AND NOT @GENERATED_COMMENT IS NULL
	BEGIN
		INSERT INTO ALERT_COMMENT WITH
		  (
			ROWLOCK
		  )(ALERT_ID, USER_CODE, GENERATED_DATE, COMMENT, EMAILSENT, USER_CODE_CP)
		VALUES
		  (
			@ALERT_ID,
			@USER_CODE,
			GETDATE(),
			@GENERATED_COMMENT,
			0,
			@CPID
		  );
    
		SELECT @NEW_COMMENT_ID = SCOPE_IDENTITY();
	END
/*=========== QUERY ===========*/