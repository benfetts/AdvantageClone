SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_BA_APPROVAL_JC_GET_DETAILS]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_BA_APPROVAL_JC_GET_DETAILS]
GO
CREATE PROCEDURE [dbo].[usp_wv_BA_APPROVAL_JC_GET_DETAILS] /*WITH ENCRYPTION*/
@JOB_NUMBER AS  INTEGER,
@JOB_COMPONENT_NBR AS SMALLINT,
@BA_ID AS INTEGER,
@BA_BATCH_ID AS INTEGER,
@SORT AS SMALLINT,
@TEMP_CUTOFF SMALLDATETIME,
@TEMP_CUTOFF_FNC_TYPE VARCHAR(20)
AS
/*=========== QUERY ===========*/
	--VARS NEEDED FOR BEN'S SPROC
	DECLARE
		@DATE_CUTOFF AS SMALLDATETIME,
		@POST_PERIOD AS VARCHAR(6),
		@EXCL_NOBILL AS BIT,
		@EXCL_FEE AS BIT
	
	SELECT 
		@DATE_CUTOFF = DATE_CUTOFF,
		@POST_PERIOD = PERIOD_CUTOFF,
		@EXCL_NOBILL = INCL_NB,
		@EXCL_FEE = INCL_FEE
	FROM
		BILL_APPR_BATCH	WITH(NOLOCK)
	WHERE 
		BA_BATCH_ID = @BA_BATCH_ID;
	
	IF @EXCL_NOBILL = 1
		BEGIN
			SET @EXCL_NOBILL = 0
		END
	ELSE
		BEGIN
			SET @EXCL_NOBILL = 1
		END

	
	IF @EXCL_FEE = 1
		BEGIN
			SET @EXCL_FEE = 0
		END
	ELSE
		BEGIN
			SET @EXCL_FEE = 1
		END

	CREATE TABLE 
		#APPROVAL_DETAILS
		(
			[BA_DTL_ID] [INT]  NOT NULL ,
			[BA_ID] [INT] NOT NULL ,
			[JOB_NUMBER] [INT] NOT NULL ,
			[JOB_COMPONENT_NBR] [SMALLINT] NOT NULL ,
			[FNC_TYPE]		[VARCHAR](1) COLLATE SQL_Latin1_General_CP1_CS_AS   NULL, 
			[FNC_CODE] [VARCHAR] (6) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL ,
			[FNC_DESC] [VARCHAR] (30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL ,
			[QUOTE_AMT] [DECIMAL](15, 2) NULL ,
			[ACTUALS] [DECIMAL](15, 2) NULL ,
			[BILLED_REC] [DECIMAL](15, 2) NULL ,
			[BILL_HOLD] [DECIMAL](15, 2) NULL ,
			[NON_BILL_FEE] [DECIMAL](15, 2) NULL ,
			[UNBILLED] [DECIMAL](15, 2) NULL ,
			[OPEN_PO] [DECIMAL](15, 2) NULL ,
			[QTY_HRS] [DECIMAL](15, 2) NULL ,
			[QUANTITY] [DECIMAL](15, 2) NULL ,
			[RATE] [DECIMAL](15, 2) NULL ,
			[APPROVED_AMT] [DECIMAL](15, 2) NULL ,

			[TEMP_CUTOFF_APPROVED_AMT] [DECIMAL] (15,2) NULL,

			[FNC_COMMENTS] [TEXT] COLLATE SQL_Latin1_General_CP1_CS_AS NULL ,
			[CLIENT_COMMENTS] [TEXT] COLLATE SQL_Latin1_General_CP1_CS_AS NULL ,
			[ROW_TYPE] [TINYINT] NULL ,
			[IS_EXISTING_ROW] [INT]  NULL ,
			[ITEM_EXISTS] [BIT] NULL,
			[FNC_HEADING_ID] [INT] NULL,
			[FNC_HEADING_DESC] [VARCHAR] (60)  COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			[FNC_HEADING_SEQ] [INT],
			[FNC_ORDER] [SMALLINT] NULL,
			[QUOTE_NET] [DECIMAL](15, 2) NULL ,

			[UNBILLED_NET] [DECIMAL](15, 2) NULL ,
			[TEMP_UNBILLED_NET] [DECIMAL](15, 2) NULL ,

			[APPR_NET] [DECIMAL](14, 2) NULL,
			[TEMP_APPR_NET] [DECIMAL](14, 2) NULL,

			[APPR_MARKUP_PCT] [DECIMAL](6, 3) NULL,
			[APPR_MARKUP_AMT] [DECIMAL](15, 2) NULL,
			[APPR_TAX_CODE] [VARCHAR](4)  COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			[APPR_TAX_COMM] [SMALLINT] NULL,
			[APPR_TAX_COMM_ONLY] [SMALLINT] NULL,
			[APPR_TAX_RESALE] [SMALLINT] NULL,
			[APPR_RESALE_TAX] [DECIMAL](14, 2) NULL,
			[APPR_VENDOR_TAX] [DECIMAL](14, 2) NULL,
			[APPR_TAX_STATE_PCT] [DECIMAL](8, 4) NULL,
			[APPR_TAX_COUNTY_PCT] [DECIMAL](8, 4) NULL,
			[APPR_TAX_CITY_PCT] [DECIMAL](8, 4) NULL,
		
			[QUOTE_MARKUP]			[DECIMAL](15,2) NULL,
			[QUOTE_RESALE_TAX]		[DECIMAL](15,2) NULL,
			[QUOTE_VENDOR_TAX]		[DECIMAL](15,2) NULL,
		
			[UNBILLED_MARKUP]			[DECIMAL](15,2) NULL,
			[UNBILLED_RESALE_TAX]		[DECIMAL](15,2) NULL,
			[UNBILLED_VENDOR_TAX]		[DECIMAL](15,2) NULL ,
		
			[IS_USER_ROW] [BIT] NULL,

			[IS_USING_TEMP_APPROVED_AMT] BIT NULL,

			[QUOTE_QTY_HRS] DECIMAL(15,2) NULL,
			[ACTUAL_QTY_HRS] DECIMAL(15,2) NULL,

			[TEMP_MARKUP] DECIMAL (15,2),
			[TEMP_RESALE_TAX] DECIMAL (16,2),
			[TEMP_TOTAL] DECIMAL (16,2),
			[TEMP_UNBILLED_MU] DECIMAL (15,2),
			[TEMP_UNBILLED_TAX] DECIMAL (15,2),
			[TEMP_UNBILLED_NR] DECIMAL (15,2),
			[TEMP_UNBILLED_TOT] DECIMAL (15,2),
			[TEMP_PO] DECIMAL (15,2)

		);

	--INSERT DATA FROM BEN'S FUNCTION:
	--not quote only unbilled
	INSERT INTO #APPROVAL_DETAILS(BA_DTL_ID, BA_ID, 
								  JOB_NUMBER,JOB_COMPONENT_NBR, 
								  FNC_CODE, 
								  FNC_TYPE, 
								  QUOTE_AMT, 
								  ACTUALS, 
								  BILLED_REC, 
								  UNBILLED, 
								  BILL_HOLD, 
								  NON_BILL_FEE, 
								  OPEN_PO,
								  QUOTE_NET,
								  UNBILLED_NET,
								  QUOTE_MARKUP,
								  QUOTE_RESALE_TAX,
								  QUOTE_VENDOR_TAX,
								  UNBILLED_MARKUP,
								  UNBILLED_RESALE_TAX,
								  UNBILLED_VENDOR_TAX,
								  IS_USER_ROW,
								  ACTUAL_QTY_HRS,
								  QUOTE_QTY_HRS)
	SELECT -1, 
		   @BA_ID, 
		   @JOB_NUMBER, 
		   @JOB_COMPONENT_NBR, 
		   FNC_CODE, 
		   FNC_TYPE, 
		   QUOTE, 
		   ACTUALS, 
		   BILLED, 
		   UNBILLED, 
		   BILL_HOLD, 
		   NONBILL, 
		   PO,
		   QUOTE_NET,
		   UNBILLED_NET,
		   QUOTE_MARKUP,
		   QUOTE_RESALE_TAX,
		   QUOTE_VENDOR_TAX,
		   UNBILLED_MARKUP,
		   UNBILLED_RESALE_TAX,
		   UNBILLED_VENDOR_TAX,
		   0,
		   QTY_HRS,
		   QUOTE_QTY_HRS
	FROM dbo.advtf_prod_bill_amts_by_fnc (@JOB_NUMBER, @JOB_COMPONENT_NBR, @DATE_CUTOFF, @POST_PERIOD, @EXCL_NOBILL, @EXCL_FEE);
  
	--UPDATE FUNCTION DESCRIPTIONS:
	UPDATE 
		#APPROVAL_DETAILS
	SET 
		#APPROVAL_DETAILS.FNC_DESC = FUNCTIONS.FNC_DESCRIPTION, 
		#APPROVAL_DETAILS.FNC_TYPE = FUNCTIONS.FNC_TYPE
	FROM 
		#APPROVAL_DETAILS WITH(ROWLOCK) INNER JOIN
		FUNCTIONS WITH(NOLOCK) ON #APPROVAL_DETAILS.FNC_CODE = FUNCTIONS.FNC_CODE
	WHERE
		#APPROVAL_DETAILS.FNC_DESC IS NULL;	 
	
	--UPDATE FUNCTION HEADING:
	UPDATE 
		#APPROVAL_DETAILS
	SET 
		#APPROVAL_DETAILS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID, 
		#APPROVAL_DETAILS.FNC_HEADING_DESC = FNC_HEADING.FNC_HEADING_DESC,
		#APPROVAL_DETAILS.FNC_HEADING_SEQ = FNC_HEADING.FNC_HEADING_SEQ,
		#APPROVAL_DETAILS.FNC_ORDER = FUNCTIONS.FNC_ORDER
	FROM         
		#APPROVAL_DETAILS WITH(ROWLOCK) INNER JOIN
		FUNCTIONS WITH(NOLOCK) ON #APPROVAL_DETAILS.FNC_CODE = FUNCTIONS.FNC_CODE LEFT OUTER JOIN
		FNC_HEADING WITH(NOLOCK) ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID;
 
	--GET USER ADDED ROWS THAT EXIST ALREADY:
	INSERT INTO #APPROVAL_DETAILS (
		BA_DTL_ID,
		BA_ID,
		JOB_NUMBER,
		JOB_COMPONENT_NBR,
		FNC_CODE,
		QTY_HRS,
		RATE,
		FNC_DESC,
		APPROVED_AMT,
		FNC_COMMENTS,
		CLIENT_COMMENTS,
		ROW_TYPE,
		IS_EXISTING_ROW,
		ITEM_EXISTS,
		APPR_NET,
		IS_USER_ROW
	) 
	SELECT
		BA_DTL_ID,
		BA_ID,
		JOB_NUMBER,
		JOB_COMPONENT_NBR,
		FNC_CODE,
		QTY_HRS,
		BILLING_RATE,
		FNC_DESC,
		APPROVED_AMT,
		FNC_COMMENTS,
		CLIENT_COMMENTS,
		ROW_TYPE,
		1,
		ISNULL(ITEM_EXISTS,0),
		APPR_NET,
		ISNULL(IS_USER_ROW,0)
	FROM 
		BILL_APPR_DTL WITH(NOLOCK)
	WHERE
		BA_ID = @BA_ID
		AND JOB_NUMBER = @JOB_NUMBER
		AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
		AND FNC_CODE NOT IN (SELECT DISTINCT FNC_CODE FROM #APPROVAL_DETAILS);

	--UPDATE WITH REAL TABLE DATA:
	UPDATE #APPROVAL_DETAILS WITH(ROWLOCK)
	SET 
		#APPROVAL_DETAILS.BA_DTL_ID = BILL_APPR_DTL.BA_DTL_ID, 
		#APPROVAL_DETAILS.FNC_DESC = BILL_APPR_DTL.FNC_DESC, 
		#APPROVAL_DETAILS.QTY_HRS = BILL_APPR_DTL.QTY_HRS, 
		#APPROVAL_DETAILS.RATE = BILL_APPR_DTL.BILLING_RATE,
		#APPROVAL_DETAILS.APPROVED_AMT = BILL_APPR_DTL.APPROVED_AMT, 
		#APPROVAL_DETAILS.FNC_COMMENTS = BILL_APPR_DTL.FNC_COMMENTS, 
		#APPROVAL_DETAILS.CLIENT_COMMENTS = BILL_APPR_DTL.CLIENT_COMMENTS, 
		#APPROVAL_DETAILS.ROW_TYPE = BILL_APPR_DTL.ROW_TYPE,
		#APPROVAL_DETAILS.IS_EXISTING_ROW = 1,
		#APPROVAL_DETAILS.ITEM_EXISTS = BILL_APPR_DTL.ITEM_EXISTS,
		#APPROVAL_DETAILS.APPR_NET = BILL_APPR_DTL.APPR_NET,
	
		#APPROVAL_DETAILS.APPR_MARKUP_PCT = BILL_APPR_DTL.APPR_MARKUP_PCT,
		#APPROVAL_DETAILS.APPR_MARKUP_AMT = BILL_APPR_DTL.APPR_MARKUP_AMT,
		#APPROVAL_DETAILS.APPR_TAX_CODE = BILL_APPR_DTL.APPR_TAX_CODE,
		#APPROVAL_DETAILS.APPR_TAX_COMM = BILL_APPR_DTL.APPR_TAX_COMM,
		#APPROVAL_DETAILS.APPR_TAX_COMM_ONLY = BILL_APPR_DTL.APPR_TAX_COMM_ONLY,
		#APPROVAL_DETAILS.APPR_TAX_RESALE = BILL_APPR_DTL.APPR_TAX_RESALE,
		#APPROVAL_DETAILS.APPR_RESALE_TAX = BILL_APPR_DTL.APPR_RESALE_TAX,
		#APPROVAL_DETAILS.APPR_VENDOR_TAX = BILL_APPR_DTL.APPR_VENDOR_TAX,
		#APPROVAL_DETAILS.APPR_TAX_STATE_PCT = BILL_APPR_DTL.APPR_TAX_STATE_PCT,
		#APPROVAL_DETAILS.APPR_TAX_COUNTY_PCT = BILL_APPR_DTL.APPR_TAX_COUNTY_PCT,
		#APPROVAL_DETAILS.APPR_TAX_CITY_PCT = BILL_APPR_DTL.APPR_TAX_CITY_PCT,
	
		#APPROVAL_DETAILS.IS_USER_ROW = ISNULL(BILL_APPR_DTL.IS_USER_ROW,0)
	FROM         
		#APPROVAL_DETAILS WITH(ROWLOCK) INNER JOIN
		BILL_APPR_DTL WITH(NOLOCK) ON #APPROVAL_DETAILS.BA_ID = BILL_APPR_DTL.BA_ID AND 
		#APPROVAL_DETAILS.JOB_NUMBER = BILL_APPR_DTL.JOB_NUMBER AND 
		#APPROVAL_DETAILS.JOB_COMPONENT_NBR = BILL_APPR_DTL.JOB_COMPONENT_NBR AND 
		#APPROVAL_DETAILS.FNC_CODE = BILL_APPR_DTL.FNC_CODE;
	
	--NEW RATE/TAX STUFF
	--???NEED TO DO HERE, AFTER "REAL DATA" UPDATE TO MAKE SURE WE ONLY GET THE DATA AFTER REAL ROWS HAVE BEEN UPDATED...
	--???or put after real data stuff, then re-update real data???
	DECLARE
		@ROW_FNC_CODE AS VARCHAR(6),
		@ROW_BILLING_RATE AS DECIMAL(9,2),
		@ROW_RATE_LEVEL AS SMALLINT,
		@ROW_TAX_CODE AS VARCHAR(4),
		@ROW_TAX_LEVEL SMALLINT,
		@ROW_NOBILL_FLAG SMALLINT,
		@ROW_NOBILL_LEVEL SMALLINT,
		@ROW_COMM DECIMAL(9,3),
		@ROW_COMM_LEVEL SMALLINT,
		@ROW_TAX_COMM SMALLINT,
		@ROW_TAX_COMM_ONLY SMALLINT,
		@ROW_TAX_COMM_FLAGS_LEVEL SMALLINT,
		@ROW_FEE_TIME_FLAG SMALLINT,
		@ROW_FEE_TIME_LEVEL SMALLINT

	DECLARE MY_ROWS CURSOR
	FOR
			SELECT DISTINCT(#APPROVAL_DETAILS.FNC_CODE) AS FNC_CODE FROM #APPROVAL_DETAILS 	WHERE BA_DTL_ID = -1;
			OPEN MY_ROWS;
				FETCH NEXT FROM MY_ROWS INTO @ROW_FNC_CODE;
				WHILE @@FETCH_STATUS = 0
					BEGIN

						SET @ROW_BILLING_RATE = NULL;
						SET @ROW_RATE_LEVEL = NULL;
						SET @ROW_TAX_CODE = NULL;
						SET @ROW_TAX_LEVEL = NULL;
						SET @ROW_NOBILL_FLAG = NULL;
						SET @ROW_NOBILL_LEVEL = NULL;
						SET @ROW_COMM = NULL;
						SET @ROW_COMM_LEVEL = NULL;
						SET @ROW_TAX_COMM = NULL;
						SET @ROW_TAX_COMM_ONLY = NULL;
						SET @ROW_TAX_COMM_FLAGS_LEVEL = NULL;
						SET @ROW_FEE_TIME_FLAG = NULL;
						SET @ROW_FEE_TIME_LEVEL = NULL;

						EXECUTE dbo.usp_wv_BA_APPROVAL_JC_GET_BILLING_RATES
										@THIS_FNC_CODE = @ROW_FNC_CODE,
										@THIS_JOB_NUMBER = @JOB_NUMBER,
										@THIS_JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR,
										@THIS_BATCH_ID = @BA_BATCH_ID, 
										@THIS_BILLING_RATE = @ROW_BILLING_RATE OUTPUT,
										@THIS_RATE_LEVEL = @ROW_RATE_LEVEL OUTPUT,
										@THIS_TAX_CODE = @ROW_TAX_CODE OUTPUT,
										@THIS_TAX_LEVEL = @ROW_TAX_LEVEL OUTPUT,
										@THIS_NOBILL_FLAG = @ROW_NOBILL_FLAG OUTPUT,
										@THIS_NOBILL_LEVEL = @ROW_NOBILL_LEVEL OUTPUT,
										@THIS_COMM = @ROW_COMM OUTPUT,
										@THIS_COMM_LEVEL = @ROW_COMM_LEVEL OUTPUT,
										@THIS_TAX_COMM = @ROW_TAX_COMM OUTPUT,
										@THIS_TAX_COMM_ONLY = @ROW_TAX_COMM_ONLY OUTPUT,
										@THIS_TAX_COMM_FLAGS_LEVEL = @ROW_TAX_COMM_FLAGS_LEVEL OUTPUT,
										@THIS_FEE_TIME_FLAG = @ROW_FEE_TIME_FLAG OUTPUT,
										@THIS_FEE_TIME_LEVEL = @ROW_FEE_TIME_LEVEL OUTPUT;
						UPDATE 
							#APPROVAL_DETAILS WITH(ROWLOCK)
						SET 
							RATE = @ROW_BILLING_RATE,
							ROW_TYPE = @ROW_NOBILL_FLAG,
							APPR_MARKUP_PCT = @ROW_COMM,
							APPR_TAX_COMM = @ROW_TAX_COMM,
							APPR_TAX_COMM_ONLY = @ROW_TAX_COMM_ONLY,
							APPR_TAX_CODE = @ROW_TAX_CODE	
						WHERE 
							#APPROVAL_DETAILS.FNC_CODE = @ROW_FNC_CODE;
						
						FETCH NEXT FROM MY_ROWS INTO @ROW_FNC_CODE;
					END
			CLOSE MY_ROWS;
	DEALLOCATE MY_ROWS;

	--UPDATE  TAX DATA:
	UPDATE #APPROVAL_DETAILS
	SET
	#APPROVAL_DETAILS.APPR_TAX_STATE_PCT = SALES_TAX.TAX_STATE_PERCENT,
	#APPROVAL_DETAILS.APPR_TAX_COUNTY_PCT = SALES_TAX.TAX_COUNTY_PERCENT,
	#APPROVAL_DETAILS.APPR_TAX_CITY_PCT = SALES_TAX.TAX_CITY_PERCENT,
	#APPROVAL_DETAILS.APPR_TAX_RESALE = SALES_TAX.TAX_RESALE
	FROM #APPROVAL_DETAILS WITH(ROWLOCK) INNER JOIN
		SALES_TAX WITH(NOLOCK) ON #APPROVAL_DETAILS.APPR_TAX_CODE  COLLATE SQL_Latin1_General_CP1_CS_AS  = SALES_TAX.TAX_CODE  COLLATE SQL_Latin1_General_CP1_CS_AS 
	WHERE
		(NOT (#APPROVAL_DETAILS.APPR_TAX_CODE IS NULL)) AND #APPROVAL_DETAILS.BA_DTL_ID = -1;
	
	--UPDATE DEFAULT PERCENTAGE
	UPDATE #APPROVAL_DETAILS
	SET #APPROVAL_DETAILS.APPR_MARKUP_PCT = APPR_MARKUP_AMT / APPR_NET
	WHERE BA_DTL_ID = -1 AND APPR_NET > 0.00;


	--UPDATE FUNCTION TYPE:
	UPDATE #APPROVAL_DETAILS
	SET  #APPROVAL_DETAILS.FNC_TYPE = FUNCTIONS.FNC_TYPE
	FROM #APPROVAL_DETAILS WITH(ROWLOCK) INNER JOIN
		FUNCTIONS WITH(NOLOCK) ON #APPROVAL_DETAILS.FNC_CODE = FUNCTIONS.FNC_CODE
	WHERE
	#APPROVAL_DETAILS.FNC_TYPE IS NULL;	

	--CLEAN UP:
	UPDATE #APPROVAL_DETAILS SET FNC_ORDER = 0 WHERE FNC_ORDER IS NULL;
	UPDATE #APPROVAL_DETAILS SET IS_EXISTING_ROW = -1 WHERE IS_EXISTING_ROW IS NULL;
		
	--APPROVE THROUGH SWITCH
	IF (NOT @TEMP_CUTOFF IS NULL) AND (NOT @TEMP_CUTOFF_FNC_TYPE IS NULL)
	BEGIN

		UPDATE #APPROVAL_DETAILS SET IS_USING_TEMP_APPROVED_AMT = 0;

		SET @TEMP_CUTOFF_FNC_TYPE = UPPER(@TEMP_CUTOFF_FNC_TYPE);

		CREATE TABLE
		#APPROVE_THROUGH_TYPES
		(
			[FNC_TYPE]		[VARCHAR](1)  COLLATE SQL_Latin1_General_CP1_CS_AS  NOT NULL
		)

		IF (SELECT CHARINDEX('E', @TEMP_CUTOFF_FNC_TYPE)) > 0
		BEGIN
			INSERT INTO #APPROVE_THROUGH_TYPES (FNC_TYPE) VALUES ('E');
		END
		IF (SELECT CHARINDEX('I', @TEMP_CUTOFF_FNC_TYPE)) > 0
		BEGIN
			INSERT INTO #APPROVE_THROUGH_TYPES (FNC_TYPE) VALUES ('I');
		END
		IF (SELECT CHARINDEX('V', @TEMP_CUTOFF_FNC_TYPE)) > 0
		BEGIN
			INSERT INTO #APPROVE_THROUGH_TYPES (FNC_TYPE) VALUES ('V');
		END

		--SELECT * FROM #APPROVE_THROUGH_TYPES
		--SELECT BA_DTL_ID, FNC_CODE
		--FROM #APPROVAL_DETAILS INNER JOIN #APPROVE_THROUGH_TYPES ON #APPROVAL_DETAILS.FNC_TYPE = #APPROVE_THROUGH_TYPES.FNC_TYPE COLLATE database_default

		DECLARE @THIS_BA_DTL_ID INT, 
				@THIS_FNC_CODE VARCHAR(10),

				@THIS_APPROVED_AMT DECIMAL(15,2),
				@THIS_APPR_NET DECIMAL(15,2),
				@THIS_UNBILLED_NET DECIMAL (15,2),

				@THIS_MARKUP DECIMAL (15,2),
				@THIS_RESALE_TAX DECIMAL (16,2),
				@THIS_TOTAL DECIMAL (16,2),
				@THIS_UNBILLED_MU DECIMAL (15,2),
				@THIS_UNBILLED_TAX DECIMAL (15,2),
				@THIS_UNBILLED_NR DECIMAL (15,2),
				@THIS_UNBILLED_TOT DECIMAL (15,2),
				@THIS_PO DECIMAL (15,2)

		DECLARE TEMP_APPR_AMT_CURSOR CURSOR FOR
			SELECT BA_DTL_ID, FNC_CODE
			FROM #APPROVAL_DETAILS INNER JOIN #APPROVE_THROUGH_TYPES ON #APPROVAL_DETAILS.FNC_TYPE = #APPROVE_THROUGH_TYPES.FNC_TYPE COLLATE database_default
		
		OPEN TEMP_APPR_AMT_CURSOR;

		FETCH NEXT FROM TEMP_APPR_AMT_CURSOR INTO @THIS_BA_DTL_ID, @THIS_FNC_CODE;

		WHILE ( @@FETCH_STATUS = 0 )
		BEGIN
			
			SET @THIS_APPROVED_AMT = 00.00;
			SET @THIS_APPR_NET = 00.00;
			SET @THIS_UNBILLED_NET = 00.00;

			SET @THIS_MARKUP = 00.00;
			SET @THIS_RESALE_TAX = 00.00;
			SET @THIS_TOTAL = 00.00;
			SET @THIS_UNBILLED_MU = 00.00;
			SET @THIS_UNBILLED_TAX = 00.00;
			SET @THIS_UNBILLED_NR = 00.00;
			SET @THIS_UNBILLED_TOT = 00.00;
			SET @THIS_PO = 00.00;

			--SELECT @THIS_BA_DTL_ID, @THIS_FNC_CODE

			SELECT @THIS_APPROVED_AMT = SUM(APPROVED_AMT), 
				   @THIS_APPR_NET = SUM(NET),
				   @THIS_UNBILLED_NET = SUM(UNBILLED_NET),
				   @THIS_MARKUP = SUM(MARKUP)
				   ,
				   @THIS_RESALE_TAX = SUM(RESALE_TAX),
				   @THIS_TOTAL = SUM(TOTAL),
				   @THIS_UNBILLED_MU = SUM(UNBILLED_MU),
				   @THIS_UNBILLED_TAX = SUM(UNBILLED_TAX),
				   @THIS_UNBILLED_NR = SUM(UNBILLED_NR),
				   @THIS_UNBILLED_TOT = SUM(UNBILLED_TOT),
				   @THIS_PO = SUM(PO) 
			FROM dbo.advtf_wv_unbilled_fnc_details(@BA_BATCH_ID, @BA_ID, 
												   @THIS_BA_DTL_ID, 
												   @JOB_NUMBER, 
												   @JOB_COMPONENT_NBR, 
												   @THIS_FNC_CODE, 
												   @TEMP_CUTOFF)
			WHERE ITEM_DATE <= @TEMP_CUTOFF;

			--SELECT @THIS_APPROVED_AMT, @THIS_APPR_NET, @THIS_UNBILLED_NET, @THIS_MARKUP, @THIS_RESALE_TAX, @THIS_TOTAL, @THIS_UNBILLED_MU, @THIS_UNBILLED_TAX, @THIS_UNBILLED_NR, @THIS_UNBILLED_TOT, @THIS_PO;

			UPDATE #APPROVAL_DETAILS
			SET 
				TEMP_CUTOFF_APPROVED_AMT = ISNULL(@THIS_APPROVED_AMT, 0.00),
				TEMP_APPR_NET = ISNULL(@THIS_APPR_NET, 0.00),
				TEMP_UNBILLED_NET = ISNULL(@THIS_UNBILLED_NET, 0.00),
				TEMP_MARKUP = ISNULL(@THIS_MARKUP, 0.00),
				TEMP_RESALE_TAX = ISNULL(@THIS_RESALE_TAX, 0.00),
				TEMP_TOTAL = ISNULL(@THIS_TOTAL, 0.00),
				TEMP_UNBILLED_MU = ISNULL(@THIS_UNBILLED_MU, 0.00),
				TEMP_UNBILLED_TAX = ISNULL(@THIS_UNBILLED_TAX, 0.00),
				TEMP_UNBILLED_NR = ISNULL(@THIS_UNBILLED_NR, 0.00),
				TEMP_UNBILLED_TOT = ISNULL(@THIS_UNBILLED_TOT, 0.00),
				TEMP_PO = ISNULL(@THIS_PO, 0.00),

				IS_USING_TEMP_APPROVED_AMT = 1
			WHERE 
				FNC_CODE = @THIS_FNC_CODE AND BA_DTL_ID = @THIS_BA_DTL_ID;

				
			FETCH NEXT FROM TEMP_APPR_AMT_CURSOR INTO @THIS_BA_DTL_ID, @THIS_FNC_CODE;

		END		
				
		CLOSE TEMP_APPR_AMT_CURSOR;
		DEALLOCATE TEMP_APPR_AMT_CURSOR;

		DROP TABLE #APPROVE_THROUGH_TYPES;

	END

	--FINAL SELECT	
	SELECT 
			#APPROVAL_DETAILS.BA_DTL_ID, 
			#APPROVAL_DETAILS.BA_ID, 
			#APPROVAL_DETAILS.JOB_NUMBER, 
			#APPROVAL_DETAILS.JOB_COMPONENT_NBR, 
			#APPROVAL_DETAILS.FNC_TYPE,
			CASE #APPROVAL_DETAILS.FNC_TYPE
				WHEN 'E' THEN 'Employee'
				WHEN 'I' THEN 'Income Only'
				WHEN 'V' THEN 'Vendor'
				WHEN 'C' THEN 'Client OOP'
				ELSE 'N/A'
			END AS FNC_TYPE_DESC,
			#APPROVAL_DETAILS.FNC_CODE, 
			#APPROVAL_DETAILS.FNC_DESC, 
			FUNCTIONS.FNC_DESCRIPTION AS DEFAULT_DESC,
			ISNULL(#APPROVAL_DETAILS.QUOTE_AMT,0.00) AS QUOTE_AMT,
			ISNULL(#APPROVAL_DETAILS.ACTUALS,0.00) AS ACTUALS,
			ISNULL(#APPROVAL_DETAILS.BILLED_REC,0.00) AS BILLED_REC,
			ISNULL(#APPROVAL_DETAILS.BILL_HOLD,0.00) AS BILL_HOLD,
			ISNULL(#APPROVAL_DETAILS.NON_BILL_FEE,0.00) AS NON_BILL_FEE,
			ISNULL(#APPROVAL_DETAILS.UNBILLED,0.00) AS UNBILLED,
			ISNULL(#APPROVAL_DETAILS.OPEN_PO,0.00) AS OPEN_PO,
			ISNULL(#APPROVAL_DETAILS.QTY_HRS,0.00) AS QTY_HRS, 
			ISNULL(#APPROVAL_DETAILS.QTY_HRS,0.00) AS QUANTITY,
			ISNULL(#APPROVAL_DETAILS.RATE,0.00) AS RATE,

			ISNULL(#APPROVAL_DETAILS.APPROVED_AMT,0) AS APPROVED_AMT,
			ISNULL(#APPROVAL_DETAILS.TEMP_CUTOFF_APPROVED_AMT, 0.00) AS [TEMP_CUTOFF_APPROVED_AMT] ,

			#APPROVAL_DETAILS.FNC_COMMENTS, 
			#APPROVAL_DETAILS.CLIENT_COMMENTS, 
			#APPROVAL_DETAILS.ROW_TYPE,
			#APPROVAL_DETAILS.IS_EXISTING_ROW,
			#APPROVAL_DETAILS.ITEM_EXISTS,
			#APPROVAL_DETAILS.FNC_HEADING_ID,
			#APPROVAL_DETAILS.FNC_HEADING_DESC,
			#APPROVAL_DETAILS.FNC_HEADING_SEQ,
			#APPROVAL_DETAILS.FNC_ORDER,
			ISNULL(#APPROVAL_DETAILS.QUOTE_NET,0.00) AS QUOTE_NET,

			ISNULL(#APPROVAL_DETAILS.UNBILLED_NET,0.00) AS UNBILLED_NET,
			ISNULL(#APPROVAL_DETAILS.TEMP_UNBILLED_NET,0.00) AS TEMP_UNBILLED_NET,

			ISNULL(#APPROVAL_DETAILS.APPR_NET,0.00) AS APPR_NET,
			ISNULL(#APPROVAL_DETAILS.TEMP_APPR_NET,0.00) AS TEMP_APPR_NET,
		
			ISNULL(#APPROVAL_DETAILS.APPR_MARKUP_PCT,0.00) AS APPR_MARKUP_PCT,
			ISNULL(#APPROVAL_DETAILS.APPR_MARKUP_AMT,0.00) AS APPR_MARKUP_AMT,
			#APPROVAL_DETAILS.APPR_TAX_CODE,
			ISNULL(#APPROVAL_DETAILS.APPR_TAX_COMM,0) AS APPR_TAX_COMM,
			ISNULL(#APPROVAL_DETAILS.APPR_TAX_COMM_ONLY,0) AS APPR_TAX_COMM_ONLY,
			ISNULL(#APPROVAL_DETAILS.APPR_TAX_RESALE,0) AS APPR_TAX_RESALE,
			ISNULL(#APPROVAL_DETAILS.APPR_RESALE_TAX,0.00) AS APPR_RESALE_TAX,
			ISNULL(#APPROVAL_DETAILS.APPR_VENDOR_TAX,0.00) AS APPR_VENDOR_TAX,
			ISNULL(#APPROVAL_DETAILS.APPR_TAX_STATE_PCT,0.00) AS APPR_TAX_STATE_PCT,
			ISNULL(#APPROVAL_DETAILS.APPR_TAX_COUNTY_PCT,0.00) AS APPR_TAX_COUNTY_PCT,
			ISNULL(#APPROVAL_DETAILS.APPR_TAX_CITY_PCT,0.00) AS APPR_TAX_CITY_PCT,
		
			ISNULL(#APPROVAL_DETAILS.QUOTE_MARKUP,0.00) AS QUOTE_MARKUP,
			ISNULL(#APPROVAL_DETAILS.QUOTE_RESALE_TAX,0.00) AS QUOTE_RESALE_TAX,
			ISNULL(#APPROVAL_DETAILS.QUOTE_VENDOR_TAX,0.00) AS QUOTE_VENDOR_TAX,
			ISNULL(#APPROVAL_DETAILS.UNBILLED_MARKUP,0.00) AS UNBILLED_MARKUP,
			ISNULL(#APPROVAL_DETAILS.UNBILLED_RESALE_TAX,0.00) AS UNBILLED_RESALE_TAX,
			ISNULL(#APPROVAL_DETAILS.UNBILLED_VENDOR_TAX,0.00) AS UNBILLED_VENDOR_TAX,
			ISNULL(#APPROVAL_DETAILS.IS_USER_ROW,0) AS IS_USER_ROW,
			ISNULL(#APPROVAL_DETAILS.IS_USING_TEMP_APPROVED_AMT,0) AS IS_USING_TEMP_APPROVED_AMT,
			ISNULL(#APPROVAL_DETAILS.QUOTE_QTY_HRS,0) AS QUOTE_QTY_HRS,
			ISNULL(#APPROVAL_DETAILS.ACTUAL_QTY_HRS,0) AS ACTUAL_QTY_HRS,

			ISNULL(#APPROVAL_DETAILS.[TEMP_MARKUP],0) AS [TEMP_MARKUP],
			ISNULL(#APPROVAL_DETAILS.[TEMP_RESALE_TAX],0) AS [TEMP_RESALE_TAX],
			ISNULL(#APPROVAL_DETAILS.[TEMP_TOTAL],0) AS [TEMP_TOTAL],
			ISNULL(#APPROVAL_DETAILS.[TEMP_UNBILLED_MU],0) AS [TEMP_UNBILLED_MU],
			ISNULL(#APPROVAL_DETAILS.[TEMP_UNBILLED_TAX],0) AS [TEMP_UNBILLED_TAX],
			ISNULL(#APPROVAL_DETAILS.[TEMP_UNBILLED_NR],0) AS [TEMP_UNBILLED_NR],
			ISNULL(#APPROVAL_DETAILS.[TEMP_UNBILLED_TOT],0) AS [TEMP_UNBILLED_TOT],
			ISNULL(#APPROVAL_DETAILS.[TEMP_PO],0) AS [TEMP_PO]


	FROM 
		#APPROVAL_DETAILS WITH(NOLOCK) INNER JOIN FUNCTIONS WITH(NOLOCK) ON #APPROVAL_DETAILS.FNC_CODE = FUNCTIONS.FNC_CODE LEFT OUTER JOIN  FNC_HEADING FH ON FUNCTIONS.FNC_HEADING_ID = FH.FNC_HEADING_ID
	ORDER BY
		CASE
			WHEN @SORT = 0 THEN --FUNCTION CODE (NO GROUPING, DEFAULT SORT)
				RIGHT(REPLICATE('-',6) + CAST(ISNULL(FH.FNC_HEADING_SEQ,'-') AS VARCHAR(6)),6)+RIGHT(REPLICATE('-',6) + CAST(ISNULL(#APPROVAL_DETAILS.FNC_ORDER,'-') AS VARCHAR(6)),6)+#APPROVAL_DETAILS.FNC_CODE+ISNULL(#APPROVAL_DETAILS.FNC_DESC,FUNCTIONS.FNC_DESCRIPTION)
			WHEN @SORT = 1 THEN --FUNCTION TYPE (GROUPED BY FUNCTION TYPE, DEFAULT SORT, DEFAULT ON PAGE LOAD)
				RIGHT(REPLICATE('-',6) + CAST(ISNULL(FH.FNC_HEADING_SEQ,'-') AS VARCHAR(6)),6)+RIGHT(REPLICATE('-',6) + CAST(ISNULL(#APPROVAL_DETAILS.FNC_ORDER,'-') AS VARCHAR(6)),6)+#APPROVAL_DETAILS.FNC_CODE+ISNULL(#APPROVAL_DETAILS.FNC_DESC,FUNCTIONS.FNC_DESCRIPTION)
			WHEN @SORT = 2 THEN --FUNCTION HEADING (GROUPED BY FUNCTION TYPE, ADD HEADING STUFF TO SORT)
				RIGHT(REPLICATE('-',6) + CAST(ISNULL(FH.FNC_HEADING_SEQ,'-') AS VARCHAR(6)),6)+RIGHT(REPLICATE('-',6) + CAST(ISNULL(#APPROVAL_DETAILS.FNC_HEADING_SEQ,'-') AS VARCHAR(6)),6)+ISNULL(CAST (#APPROVAL_DETAILS.FNC_HEADING_DESC AS VARCHAR) COLLATE SQL_Latin1_General_CP1_CI_AS,'-')+RIGHT(REPLICATE('-',6) + CAST(ISNULL(#APPROVAL_DETAILS.FNC_ORDER,'-') AS VARCHAR(6)),6)+#APPROVAL_DETAILS.FNC_CODE+ISNULL(#APPROVAL_DETAILS.FNC_DESC,FUNCTIONS.FNC_DESCRIPTION)
			ELSE  --FUNCTION CODE (NO GROUPING, DEFAULT SORT)
				RIGHT(REPLICATE('-',6) + CAST(ISNULL(FH.FNC_HEADING_SEQ,'-') AS VARCHAR(6)),6)+RIGHT(REPLICATE('-',6) + CAST(ISNULL(#APPROVAL_DETAILS.FNC_ORDER,'-') AS VARCHAR(6)),6)+#APPROVAL_DETAILS.FNC_CODE+ISNULL(#APPROVAL_DETAILS.FNC_DESC,FUNCTIONS.FNC_DESCRIPTION)
		END	
		
	DROP TABLE #APPROVAL_DETAILS;
/*=========== QUERY ===========*/
GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO