SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_BA_BATCH_APPLY_CRITERIA]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_BA_BATCH_APPLY_CRITERIA]
GO
CREATE PROCEDURE [dbo].[usp_wv_BA_BATCH_APPLY_CRITERIA] /*WITH ENCRYPTION*/
@BA_BATCH_ID AS INTEGER
AS
/*=========== QUERY ===========*/
	--VARIABLES:
	DECLARE
		@LOAD_LEVEL AS VARCHAR(20),
		@HAS_LEVEL AS INT,
		@INCL_NO_DTL AS BIT,
		@SEL_OPTION AS SMALLINT,

		@AE_CODE_STRING AS  VARCHAR(MAX),
		@PM_CODE_STRING AS  VARCHAR(MAX),
		@CL_CODE_STRING AS VARCHAR(MAX),
		@DIV_CODE_STRING AS VARCHAR(MAX),
		@PRD_CODE_STRING AS VARCHAR(MAX),
		@CMP_CODE_STRING AS VARCHAR(MAX),

		@SQL_SELECT VARCHAR(MAX),
		@SQL_CLIENT VARCHAR(MAX),
		@SQL_DIVISION VARCHAR(MAX),
		@SQL_PRODUCT VARCHAR(MAX),
		@SQL_CAMPAIGN VARCHAR(MAX),
		@SQL_AE_CODE VARCHAR(MAX),
		@SQL_PM_CODE VARCHAR(MAX),
		@SQL_AE_OR_PM_CODES VARCHAR(MAX),

		@SQL_INSERT VARCHAR(MAX),
	
		@PM_MANAGER_COLUMN VARCHAR(15)
	
		SET @LOAD_LEVEL = 'CDPC'
		SET @HAS_LEVEL = 0
		SET @AE_CODE_STRING = ''
		SET @PM_CODE_STRING = ''
		SET @CL_CODE_STRING = ''
		SET @DIV_CODE_STRING = ''
		SET @PRD_CODE_STRING = ''
		SET @CMP_CODE_STRING = ''
		SET @LOAD_LEVEL = ''
		SET @SQL_SELECT = ''
		SET @SQL_CLIENT = ''
		SET @SQL_DIVISION = ''
		SET @SQL_PRODUCT = ''
		SET @SQL_CAMPAIGN = ''
		SET @SQL_AE_CODE = ''
		SET @SQL_PM_CODE = ''
		SET @SQL_AE_OR_PM_CODES = ''
		SET @PM_MANAGER_COLUMN = '';
		
		SELECT @PM_MANAGER_COLUMN = CAST(AGY_SETTINGS_VALUE AS VARCHAR) FROM AGY_SETTINGS WHERE AGY_SETTINGS.AGY_SETTINGS_CODE ='TRAFFIC_MGR_COL';
	
		SELECT @PM_MANAGER_COLUMN = 
		CASE
			WHEN @PM_MANAGER_COLUMN = 'TR_TITLE1' THEN 'ASSIGN_1'
			WHEN @PM_MANAGER_COLUMN = 'TR_TITLE2' THEN 'ASSIGN_2'
			WHEN @PM_MANAGER_COLUMN = 'TR_TITLE3' THEN 'ASSIGN_3'
			WHEN @PM_MANAGER_COLUMN = 'TR_TITLE4' THEN 'ASSIGN_4'
			WHEN @PM_MANAGER_COLUMN = 'TR_TITLE5' THEN 'ASSIGN_5'
			ELSE 'ASSIGN_1'
		END
	
		--HAS CLIENT CODES?
		SELECT     
			@HAS_LEVEL = ISNULL(COUNT(1),0)
		FROM         
			BILL_APPR_BATCH_CDP WITH(NOLOCK)
		WHERE     
			(NOT (BILL_APPR_BATCH_CDP.CL_CODE IS NULL)) 
			AND (BILL_APPR_BATCH_CDP.BA_BATCH_ID = @BA_BATCH_ID);	
		IF @HAS_LEVEL > 0
		BEGIN
			SET @LOAD_LEVEL = 'CLIENT';
		END	
		--HAS DIVISION CODES?
		SELECT     
			@HAS_LEVEL = ISNULL(COUNT(1),0)
		FROM         
			BILL_APPR_BATCH_CDP WITH(NOLOCK)
		WHERE     
			(NOT (BILL_APPR_BATCH_CDP.DIV_CODE IS NULL)) 
			AND (BILL_APPR_BATCH_CDP.BA_BATCH_ID = @BA_BATCH_ID);	
		IF @HAS_LEVEL > 0
		BEGIN
			SET @LOAD_LEVEL = 'DIVISION';
		END	
		--HAS PRODUCT CODES?
		SELECT     
			@HAS_LEVEL = ISNULL(COUNT(1),0)
		FROM         
			BILL_APPR_BATCH_CDP WITH(NOLOCK)
		WHERE     
			(NOT (BILL_APPR_BATCH_CDP.PRD_CODE IS NULL)) 
			AND (BILL_APPR_BATCH_CDP.BA_BATCH_ID = @BA_BATCH_ID);	
		IF @HAS_LEVEL > 0
		BEGIN
			SET @LOAD_LEVEL = 'PRODUCT';
		END	
		SELECT     
			@HAS_LEVEL = ISNULL(COUNT(1),0)
		FROM        
			BILL_APPR_BATCH_CMP WITH(NOLOCK)
		WHERE
			BILL_APPR_BATCH_CMP.BA_BATCH_ID = @BA_BATCH_ID;
		IF @HAS_LEVEL > 0
		BEGIN
			SET @LOAD_LEVEL = 'CAMPAIGN';
		END	
	
	--BUILD STRINGS:
		--AE'S:
		SELECT @AE_CODE_STRING = @AE_CODE_STRING + ''''+ AE_EMP_CODE + ''',' FROM BILL_APPR_BATCH_AE WITH(NOLOCK) WHERE BA_BATCH_ID = @BA_BATCH_ID;
		IF (LEN(@AE_CODE_STRING) > 1)
		BEGIN
			SELECT @AE_CODE_STRING = SUBSTRING(@AE_CODE_STRING,1,LEN(@AE_CODE_STRING)-1);
		END	
		--PM'S:
		SELECT @PM_CODE_STRING = @PM_CODE_STRING + ''''+ PM_EMP_CODE + ''',' FROM BILL_APPR_BATCH_PM WITH(NOLOCK) WHERE BA_BATCH_ID = @BA_BATCH_ID;
		IF (LEN(@PM_CODE_STRING) > 1)
		BEGIN
			SELECT @PM_CODE_STRING = SUBSTRING(@PM_CODE_STRING,1,LEN(@PM_CODE_STRING)-1);
		END	
		--CLIENTS:
		SELECT @CL_CODE_STRING = @CL_CODE_STRING + ''''+ CL_CODE + ''',' FROM BILL_APPR_BATCH_CDP WITH(NOLOCK) WHERE BA_BATCH_ID = @BA_BATCH_ID;
		IF (LEN(@CL_CODE_STRING) > 1)
		BEGIN
			SELECT @CL_CODE_STRING = SUBSTRING(@CL_CODE_STRING,1,LEN(@CL_CODE_STRING)-1);
		END	
		--DIVISIONS:
		SELECT @DIV_CODE_STRING = @DIV_CODE_STRING + ''''+ DIV_CODE + ''',' FROM BILL_APPR_BATCH_CDP WITH(NOLOCK) WHERE BA_BATCH_ID = @BA_BATCH_ID;
		IF (LEN(@DIV_CODE_STRING) > 1)
		BEGIN
			SELECT @DIV_CODE_STRING = SUBSTRING(@DIV_CODE_STRING,1,LEN(@DIV_CODE_STRING)-1);
		END	
		--PRODUCTS:
		SELECT @PRD_CODE_STRING = @PRD_CODE_STRING + ''''+ PRD_CODE + ''',' FROM BILL_APPR_BATCH_CDP WITH(NOLOCK) WHERE BA_BATCH_ID = @BA_BATCH_ID;
		IF (LEN(@PRD_CODE_STRING) > 1)
		BEGIN
			SELECT @PRD_CODE_STRING = SUBSTRING(@PRD_CODE_STRING,1,LEN(@PRD_CODE_STRING)-1);
		END	
		--CAMPAIGNS:
		SELECT @CMP_CODE_STRING = @CMP_CODE_STRING + ''''+ RTRIM(LTRIM(CAST(CMP_IDENTIFIER AS VARCHAR(50)))) + ''',' FROM BILL_APPR_BATCH_CMP WITH(NOLOCK) WHERE BA_BATCH_ID = @BA_BATCH_ID;
		IF (LEN(@CMP_CODE_STRING) > 1)
		BEGIN
			SELECT @CMP_CODE_STRING = SUBSTRING(@CMP_CODE_STRING,1,LEN(@CMP_CODE_STRING)-1);
		END	

	--BUILD BASE SQL:
	SET @SQL_SELECT = 
		'
			FROM         JOB_LOG WITH (NOLOCK) INNER JOIN
								  JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER LEFT OUTER JOIN
								  JOB_TRAFFIC WITH (NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
								  JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR LEFT OUTER JOIN
								  CAMPAIGN WITH (NOLOCK) ON JOB_LOG.CMP_IDENTIFIER = CAMPAIGN.CMP_IDENTIFIER AND JOB_LOG.CL_CODE = CAMPAIGN.CL_CODE
			WHERE     (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (2, 6, 12))) AND (JOB_COMPONENT.BA_BATCH_ID IS NULL OR
								  JOB_COMPONENT.BA_BATCH_ID = 0)
		'

	DECLARE
	@DATE_CUTOFF SMALLDATETIME,
	@PP_CUTOFF VARCHAR(8)
	
	SELECT @INCL_NO_DTL = ISNULL(INCL_NO_DTL,0), @SEL_OPTION = ISNULL(SEL_OPTION,0), @DATE_CUTOFF = DATE_CUTOFF, @PP_CUTOFF = ISNULL(PERIOD_CUTOFF,'') FROM BILL_APPR_BATCH WITH(NOLOCK) WHERE BA_BATCH_ID = @BA_BATCH_ID;
	SET @INCL_NO_DTL = ISNULL(@INCL_NO_DTL,0);
	SET @SEL_OPTION = ISNULL(@SEL_OPTION,0);
	
	IF @SEL_OPTION = 1
	BEGIN
	SET @SQL_SELECT = @SQL_SELECT +
		'
			 AND ([dbo].[advfn_job_has_qual_records](JOB_COMPONENT.JOB_NUMBER,JOB_COMPONENT.JOB_COMPONENT_NBR,''' + CONVERT(VARCHAR(10), @DATE_CUTOFF, 101) + ''',''' + CONVERT(VARCHAR(10), @DATE_CUTOFF, 101) + ''',''' + @PP_CUTOFF + ''') = 1)		 
		'
	END	

	IF @SEL_OPTION = 2
	BEGIN
	SET @SQL_SELECT = @SQL_SELECT +
		'
			 AND ([dbo].[advfn_is_job_billed_w_cutoffs](JOB_COMPONENT.JOB_NUMBER,JOB_COMPONENT.JOB_COMPONENT_NBR,''' + CONVERT(VARCHAR(10), @DATE_CUTOFF, 101) + ''',''' + CONVERT(VARCHAR(10), @DATE_CUTOFF, 101) + ''',''' + @PP_CUTOFF + ''') = 0)
		'
	END	

	--PRINT @SQL_SELECT
	--ADD IN THE STRING CRITERIA:	
	IF DATALENGTH(@AE_CODE_STRING) > 0
	BEGIN
		SET @SQL_AE_CODE = ' AND JOB_COMPONENT.EMP_CODE IN ('+ @AE_CODE_STRING +')' 
	END
	IF DATALENGTH(@PM_CODE_STRING) > 0
	BEGIN
		SET @SQL_PM_CODE = ' AND JOB_TRAFFIC.' + @PM_MANAGER_COLUMN + ' IN ('+ @PM_CODE_STRING +')' 
	END
	IF DATALENGTH(@CL_CODE_STRING) > 0
	BEGIN
		SET @SQL_CLIENT = ' AND JOB_LOG.CL_CODE IN ('+ @CL_CODE_STRING +')' 
	END
	IF DATALENGTH(@DIV_CODE_STRING) > 0
	BEGIN
		SET @SQL_DIVISION = ' AND JOB_LOG.DIV_CODE IN ('+ @DIV_CODE_STRING +')' 
	END
	IF DATALENGTH(@PRD_CODE_STRING) > 0
	BEGIN
		SET @SQL_PRODUCT = ' AND JOB_LOG.PRD_CODE IN ('+ @PRD_CODE_STRING +')' 
	END
	IF  DATALENGTH(@CMP_CODE_STRING) > 0
	BEGIN
		SET @SQL_CAMPAIGN = ' AND CAMPAIGN.CMP_IDENTIFIER IN ('+ @CMP_CODE_STRING +')' 
	END

	--SEE IF WE NEED TO INCLUDE AE:
	DECLARE @INCLUDE_AE_STRING BIT, @INLCUDE_PM_STRING BIT, @MANAGER_TYPE SMALLINT
	SET @INCLUDE_AE_STRING = 0;
	SET @INLCUDE_PM_STRING = 0;
	SET @MANAGER_TYPE = 0;

	SELECT @MANAGER_TYPE = MANAGER_TYPE FROM BILL_APPR_BATCH WITH(NOLOCK) WHERE BA_BATCH_ID = @BA_BATCH_ID;

	SET @MANAGER_TYPE = ISNULL(@MANAGER_TYPE, 0);

	IF DATALENGTH(@AE_CODE_STRING) > 0 AND @MANAGER_TYPE = 0
	BEGIN
		SET @INCLUDE_AE_STRING = 1;
		SET @SQL_AE_OR_PM_CODES = @SQL_AE_CODE;
	END
	IF DATALENGTH(@PM_CODE_STRING) > 0 AND @INCLUDE_AE_STRING = 0
	BEGIN
		SET @INLCUDE_PM_STRING = 1;
		SET @SQL_AE_OR_PM_CODES = @SQL_PM_CODE;
	END

	--SELECT @INCL_NO_DTL, @LOAD_LEVEL,@INCLUDE_AE_STRING

	--OUTPUT QUERY:
	SET @SQL_INSERT = 'UPDATE JOB_COMPONENT SET BA_BATCH_ID = ' + CAST(@BA_BATCH_ID AS VARCHAR)

	IF ((@LOAD_LEVEL = '') OR (@LOAD_LEVEL IS NULL))
	BEGIN
		SET @LOAD_LEVEL = 'CDPC'
	END	

	IF @LOAD_LEVEL = 'CDPC'
	BEGIN
				EXEC( @SQL_INSERT + @SQL_SELECT + @SQL_AE_OR_PM_CODES)
	--			PRINT @SQL_INSERT + @SQL_SELECT + @SQL_AE_OR_PM_CODES
	END
	IF @LOAD_LEVEL = 'CLIENT'
	BEGIN
				EXEC( @SQL_INSERT + @SQL_SELECT + @SQL_AE_OR_PM_CODES + @SQL_CLIENT)
	--			PRINT @SQL_INSERT + @SQL_SELECT + @SQL_AE_OR_PM_CODES + @SQL_CLIENT
	END
	IF @LOAD_LEVEL = 'DIVISION'
	BEGIN
				EXEC( @SQL_INSERT + @SQL_SELECT + @SQL_AE_OR_PM_CODES + @SQL_CLIENT + @SQL_DIVISION)
	--			PRINT @SQL_INSERT + @SQL_SELECT + @SQL_AE_OR_PM_CODES + @SQL_CLIENT + @SQL_DIVISION
	END
	IF @LOAD_LEVEL = 'PRODUCT'
	BEGIN
				EXEC( @SQL_INSERT + @SQL_SELECT + @SQL_AE_OR_PM_CODES + @SQL_CLIENT + @SQL_DIVISION + @SQL_PRODUCT)
	--			PRINT @SQL_INSERT + @SQL_SELECT + @SQL_AE_OR_PM_CODES + @SQL_CLIENT + @SQL_DIVISION + @SQL_PRODUCT
	END
	IF @LOAD_LEVEL = 'CAMPAIGN'
	BEGIN
				EXEC( @SQL_INSERT + @SQL_SELECT + @SQL_AE_OR_PM_CODES + @SQL_CLIENT + @SQL_DIVISION + @SQL_PRODUCT + @SQL_CAMPAIGN)
	--			PRINT @SQL_INSERT + @SQL_SELECT + @SQL_AE_OR_PM_CODES + @SQL_CLIENT + @SQL_DIVISION + @SQL_PRODUCT + @SQL_CAMPAIGN
	END
/*=========== QUERY ===========*/
GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO