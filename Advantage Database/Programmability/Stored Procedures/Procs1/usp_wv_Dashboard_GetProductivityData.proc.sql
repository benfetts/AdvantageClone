if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_Dashboard_GetProductivityData]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_Dashboard_GetProductivityData]
GO

CREATE PROCEDURE [dbo].[usp_wv_Dashboard_GetProductivityData]
(
	@EmpCode varchar(6),
	@StartDate SmallDateTime,
	@EndDate SmallDateTime,
	@Month int,
	@UserID varchar(100),
	@Office varchar(4000),
	@Dept varchar(4000),
	@CurrentDate SmallDateTime,
	@YearValue varchar(2),
	@Include int
)
AS

DECLARE @StdHours as decimal(9,3), @Emp as varchar(6), @Billable decimal(9,3), @NonBillable decimal(9,3),
		 @Nonprod decimal(9,3), @NumberRecords int, @RowCount int, @Goal decimal(9,3), @Restrictions Int,
		@sql nvarchar(4000),
		@paramlist nvarchar(4000), @PPMonth int, @PPEndDate datetime, @Agency decimal(9, 3), @NewBusiness decimal(9, 3), @TimeOff decimal(9,3), @DirectHrsPct decimal(7,4),
		@emp_code varchar(6), @DirectHrsGoal decimal(9,3),
		@RestrictionsOffice Int,
		@EmployeeCode varchar(6)

Select @EmployeeCode = EMP_CODE
FROM SEC_USER
WHERE UPPER(USER_CODE) = UPPER(@UserID)

Select @RestrictionsOffice = Count(*) 
FROM EMP_OFFICE
Where EMP_CODE = @EmployeeCode

if @YearValue = '0'
Begin
	SET @PPMonth = 12
End
Else
Begin
	SELECT @PPMonth = PPGLMONTH
	FROM POSTPERIOD
	WHERE PPSRTDATE <= @CurrentDate AND PPENDDATE >= @CurrentDate
End

SELECT @PPEndDate = PPENDDATE
FROM POSTPERIOD
WHERE PPSRTDATE <= @CurrentDate AND PPENDDATE >= @CurrentDate

CREATE TABLE #prod(
	RowID int IDENTITY(1, 1), 
	EMP_CODE varchar(6),
	EMP_NAME varchar(100),
	EMP_LNAME varchar(30),
	EMP_FNAME varchar(30),
	EMP_MI varchar(1),
	STD_HRS decimal(9, 3),
	DIRECT_GOAL decimal(9,3),
	GOAL decimal(9, 3),
	BILLABLE_HOURS decimal(9, 3),	
	NONBILLABLE_HOURS decimal(9, 3),
	TOTAL_DIRECT decimal(9, 3),
	AGENCY decimal(9, 3),
	NEW_BUSINESS decimal(9, 3),
	NON_PROD_HOURS decimal(9, 3),
	TOTAL_NON_PROD decimal(9, 3),
	TOTAL_HOURS decimal(9, 3),
	VARIANCE decimal(9, 3),
	PERCENT_DIRECT decimal(9, 3),
	PERCENT_NONDIRECT decimal(9, 3),
	PERCENT_BILLABLE decimal(9, 3),
	REQUIRED_HOURS decimal(9, 3),
	PERCENT_DIRECT_GOAL decimal(9,3),
	DP_TM_CODE	varchar(4),
	DP_TM_DESC  varchar(30),
	DIRECT_HRS_PER decimal(7,4),
	TIME_OFF decimal(7,2))

--DELETE FROM W_EMP_STD_HOURS WHERE UPPER(USERID) = UPPER(@UserID)
--if @Month = 0 and @YearValue = 2
--Begin
--	INSERT INTO W_EMP_STD_HOURS (USERID, START_DATE, END_DATE)
--	VALUES(@UserID, @StartDate, @PPEndDate)
--End
--Else
--Begin
--	INSERT INTO W_EMP_STD_HOURS (USERID, START_DATE, END_DATE)
--	VALUES(@UserID, @StartDate, @EndDate)
--End


--if @EmpCode <> ''
--Begin
--	SELECT @StdHours = SUM(STD_HRS) 
--	FROM W_EMP_STD_HOURS_DTL
--	WHERE UPPER(USERID) = UPPER(@UserID) AND EMP_CODE = @EmpCode
--End
--Else
--Begin
--	SELECT @StdHours = SUM(STD_HRS) 
--	FROM W_EMP_STD_HOURS_DTL
--	WHERE UPPER(USERID) = UPPER(@UserID)
--End



if @EmpCode <> ''
Begin		
	if @StartDate <> '' and @EndDate <> ''
		Begin
			INSERT INTO #prod
			SELECT DASH_DATA_EMP_TIME.EMP_CODE, isnull(EMP_FNAME,'') + ' ' + isnull(EMP_MI,'') + case when EMP_MI is not null then '. ' else '' end +  isnull(EMP_LNAME,'') AS EMP_NAME,
			isnull(EMP_LNAME,''),isnull(EMP_FNAME,''),isnull(EMP_MI,''), 0,0, CASE WHEN @Month = 0 THEN (EMPLOYEE.MTH_HRS_GOAL * @PPMonth) WHEN @Month > 1 THEN (EMPLOYEE.MTH_HRS_GOAL * @Month) ELSE EMPLOYEE.MTH_HRS_GOAL END AS GOAL, SUM(DASH_DATA_EMP_TIME.BILLABLE_HOURS) 
                      AS BILLABLE_HOURS, SUM(DASH_DATA_EMP_TIME.DIRECT_NONBILL_HOURS) AS NONBILLABLE_HOURS, 
					  (SUM(DASH_DATA_EMP_TIME.BILLABLE_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_NONBILL_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_AGENCY_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_NEW_BUS_HOURS)) AS TOTAL_DIRECT, SUM(DASH_DATA_EMP_TIME.DIRECT_AGENCY_HOURS) AS AGENCY, SUM(DASH_DATA_EMP_TIME.DIRECT_NEW_BUS_HOURS) AS NEW_BUSINESS,
                      SUM(DASH_DATA_EMP_TIME.NON_PROD_HOURS) AS NON_PROD_HOURS, SUM(DASH_DATA_EMP_TIME.NON_PROD_HOURS) AS TOTAL_NON_PROD, 
					  (SUM(DASH_DATA_EMP_TIME.BILLABLE_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_NONBILL_HOURS)+ SUM(DASH_DATA_EMP_TIME.NON_PROD_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_AGENCY_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_NEW_BUS_HOURS)) AS TOTAL_HOURS,
					  0 AS VARIANCE, 0 AS PERCENT_DIRECT, 0 AS PERCENT_NONDIRECT, 0 AS PERCENT_BILLABLE, 0 AS REQUIRED_HOURS, 0 AS PERCENT_DIRECT_GOAL, EMPLOYEE.DP_TM_CODE, DEPT_TEAM.DP_TM_DESC, 0 AS DIRECT_HRS_PER, 0 AS TIME_OFF
			FROM         DASH_DATA_EMP_TIME INNER JOIN
								  EMPLOYEE ON DASH_DATA_EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE LEFT OUTER JOIN
								  DEPT_TEAM ON DEPT_TEAM.DP_TM_CODE = EMPLOYEE.DP_TM_CODE
			WHERE DASH_DATA_EMP_TIME.EMP_CODE = @EmpCode AND DASH_DATA_EMP_TIME.EMP_DATE >= @StartDate AND DASH_DATA_EMP_TIME.EMP_DATE <= @EndDate
			GROUP BY DASH_DATA_EMP_TIME.EMP_CODE, EMP_FNAME, EMP_MI, EMP_LNAME, EMPLOYEE.STD_ANNUAL_HRS, EMPLOYEE.MTH_HRS_GOAL, EMPLOYEE.DP_TM_CODE, DEPT_TEAM.DP_TM_DESC
		End
	Else
		Begin
			INSERT INTO #prod
			SELECT DASH_DATA_EMP_TIME.EMP_CODE, isnull(EMP_FNAME,'') + ' ' + isnull(EMP_MI,'') + case when EMP_MI is not null then '. ' else '' end +  isnull(EMP_LNAME,'') AS EMP_NAME,
			isnull(EMP_LNAME,''),isnull(EMP_FNAME,''),isnull(EMP_MI,''), 0,0, CASE WHEN @Month = 0 THEN (EMPLOYEE.MTH_HRS_GOAL * @PPMonth) WHEN @Month > 1 THEN (EMPLOYEE.MTH_HRS_GOAL * @Month) ELSE EMPLOYEE.MTH_HRS_GOAL END AS GOAL, SUM(DASH_DATA_EMP_TIME.BILLABLE_HOURS) 
                      AS BILLABLE_HOURS, SUM(DASH_DATA_EMP_TIME.DIRECT_NONBILL_HOURS) AS NONBILLABLE_HOURS, 
					  (SUM(DASH_DATA_EMP_TIME.BILLABLE_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_NONBILL_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_AGENCY_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_NEW_BUS_HOURS)) AS TOTAL_DIRECT, SUM(DASH_DATA_EMP_TIME.DIRECT_AGENCY_HOURS) AS AGENCY, SUM(DASH_DATA_EMP_TIME.DIRECT_NEW_BUS_HOURS) AS NEW_BUSINESS,
                      SUM(DASH_DATA_EMP_TIME.NON_PROD_HOURS) AS NON_PROD_HOURS, SUM(DASH_DATA_EMP_TIME.NON_PROD_HOURS) AS TOTAL_NON_PROD, 
					  (SUM(DASH_DATA_EMP_TIME.BILLABLE_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_NONBILL_HOURS)+ SUM(DASH_DATA_EMP_TIME.NON_PROD_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_AGENCY_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_NEW_BUS_HOURS)) AS TOTAL_HOURS,
					  0 AS VARIANCE, 0 AS PERCENT_DIRECT, 0 AS PERCENT_NONDIRECT, 0 AS PERCENT_BILLABLE, 0 AS REQUIRED_HOURS, 0 AS PERCENT_DIRECT_GOAL, EMPLOYEE.DP_TM_CODE, DEPT_TEAM.DP_TM_DESC, 0 AS DIRECT_HRS_PER, 0 AS TIME_OFF
			FROM         DASH_DATA_EMP_TIME INNER JOIN
								  EMPLOYEE ON DASH_DATA_EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE LEFT OUTER JOIN
								  DEPT_TEAM ON DEPT_TEAM.DP_TM_CODE = EMPLOYEE.DP_TM_CODE
			WHERE DASH_DATA_EMP_TIME.EMP_CODE = @EmpCode
			GROUP BY DASH_DATA_EMP_TIME.EMP_CODE, EMP_FNAME, EMP_MI, EMP_LNAME, EMPLOYEE.STD_ANNUAL_HRS, EMPLOYEE.MTH_HRS_GOAL, EMPLOYEE.DP_TM_CODE, DEPT_TEAM.DP_TM_DESC
		End
End
Else
Begin
	SELECT @sql = 'INSERT INTO #prod
			SELECT DASH_DATA_EMP_TIME.EMP_CODE, isnull(EMP_FNAME,'''') + '' '' + isnull(EMP_MI,'''') + case when EMP_MI is not null then ''. '' else '''' end +  isnull(EMP_LNAME,'''') AS EMP_NAME,isnull(EMP_LNAME,''''),isnull(EMP_FNAME,''''),isnull(EMP_MI,''''), 0,0, CASE WHEN @Month = 0 THEN (EMPLOYEE.MTH_HRS_GOAL * @PPMonth) WHEN @Month > 1 THEN (EMPLOYEE.MTH_HRS_GOAL * @Month) ELSE EMPLOYEE.MTH_HRS_GOAL END AS GOAL, SUM(DASH_DATA_EMP_TIME.BILLABLE_HOURS) 
                      AS BILLABLE_HOURS, SUM(DASH_DATA_EMP_TIME.DIRECT_NONBILL_HOURS) AS NONBILLABLE_HOURS, 
					  (SUM(DASH_DATA_EMP_TIME.BILLABLE_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_NONBILL_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_AGENCY_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_NEW_BUS_HOURS)) AS TOTAL_DIRECT, SUM(DASH_DATA_EMP_TIME.DIRECT_AGENCY_HOURS) AS AGENCY, SUM(DASH_DATA_EMP_TIME.DIRECT_NEW_BUS_HOURS) AS NEW_BUSINESS,
                      SUM(DASH_DATA_EMP_TIME.NON_PROD_HOURS) AS NON_PROD_HOURS, SUM(DASH_DATA_EMP_TIME.NON_PROD_HOURS) AS TOTAL_NON_PROD, 
					  (SUM(DASH_DATA_EMP_TIME.BILLABLE_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_NONBILL_HOURS)+ SUM(DASH_DATA_EMP_TIME.NON_PROD_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_AGENCY_HOURS) + SUM(DASH_DATA_EMP_TIME.DIRECT_NEW_BUS_HOURS)) AS TOTAL_HOURS,
					  0 AS VARIANCE, 0 AS PERCENT_DIRECT, 0 AS PERCENT_NONDIRECT, 0 AS PERCENT_BILLABLE, 0 AS REQUIRED_HOURS, 0 AS PERCENT_DIRECT_GOAL, EMPLOYEE.DP_TM_CODE, DEPT_TEAM.DP_TM_DESC, 0 AS DIRECT_HRS_PER, 0 AS TIME_OFF
			FROM         DASH_DATA_EMP_TIME INNER JOIN
								  EMPLOYEE ON DASH_DATA_EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE LEFT OUTER JOIN
								  DEPT_TEAM ON DEPT_TEAM.DP_TM_CODE = EMPLOYEE.DP_TM_CODE'
			if @Office <> ''
				Begin
					SELECT @sql = @sql + ' INNER JOIN charlist_to_table(@Office, DEFAULT) c ON EMPLOYEE.OFFICE_CODE = c.vstr collate database_default'
				End			
			if @Dept <> ''
				Begin
					SELECT @sql = @sql + ' INNER JOIN charlist_to_table(@Dept, DEFAULT) d ON DASH_DATA_EMP_TIME.DP_TM_CODE = d.vstr collate database_default'
				End				
			if @RestrictionsOffice > 0
				Begin
					SELECT @sql = @sql + ' INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE'
				End
			SELECT @sql = @sql + ' WHERE 1=1'				
			if @RestrictionsOffice > 0
				Begin
					SELECT @sql = @sql + ' AND EMP_OFFICE.EMP_CODE = @EmployeeCode'
				End
			if @StartDate <> '' and @EndDate <> ''
				Begin
					SELECT @sql = @sql + ' AND DASH_DATA_EMP_TIME.EMP_DATE >= @StartDate AND DASH_DATA_EMP_TIME.EMP_DATE <= @EndDate'
				End
			if @Include = 0
				Begin
					SELECT @sql = @sql + ' AND EMPLOYEE.EMP_TERM_DATE IS NULL'
				End
			SELECT @sql = @sql + ' GROUP BY DASH_DATA_EMP_TIME.EMP_CODE, EMP_FNAME, EMP_MI, EMP_LNAME, EMPLOYEE.MTH_HRS_GOAL, EMPLOYEE.DP_TM_CODE, DEPT_TEAM.DP_TM_DESC'

	SELECT @paramlist = '@StartDate SmallDateTime, @EndDate SmallDateTime, @Dept varchar(4000), @Office varchar(4000), @Month int, @PPMonth int, @EmployeeCode varchar(6)'
		print @sql
		EXEC sp_executesql @sql, @paramlist, @StartDate, @EndDate, @Dept, @Office, @Month, @PPMonth, @EmployeeCode
End

SELECT @NumberRecords = COUNT(*) FROM #prod
SET @RowCount = 1


WHILE @RowCount <= @NumberRecords
BEGIN
 SELECT @Emp = EMP_CODE, @Billable = BILLABLE_HOURS, @NonBillable = NONBILLABLE_HOURS, @Nonprod = NON_PROD_HOURS, @Goal = GOAL, @Agency = AGENCY, @NewBusiness = NEW_BUSINESS
 FROM #prod
 WHERE RowID = @RowCount

 if @Month = 0 and @YearValue = 2
 	Begin
		if @Include = 1
		Begin
			if @RestrictionsOffice > 0
				Begin
					SELECT @StdHours = SUM(STD_HOURS) 
					FROM DASH_DATA_EMP_TIME LEFT OUTER JOIN
							 EMPLOYEE ON DASH_DATA_EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
					WHERE REC_TYPE = 'S' AND DASH_DATA_EMP_TIME.EMP_CODE = @Emp AND DASH_DATA_EMP_TIME.EMP_DATE >= @StartDate AND DASH_DATA_EMP_TIME.EMP_DATE <= @PPEndDate
							AND EMP_OFFICE.EMP_CODE = @EmployeeCode

					SELECT @DirectHrsPct = ISNULL(EMPLOYEE.DIRECT_HRS_PER,0.000000)
					FROM EMPLOYEE INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
					WHERE EMPLOYEE.EMP_CODE = @Emp AND EMP_OFFICE.EMP_CODE = @EmployeeCode

					SELECT @TimeOff = ISNULL(SUM(EMP_TIME_NP.EMP_HOURS),0)
					FROM EMP_TIME_NP INNER JOIN
						 EMP_TIME ON EMP_TIME_NP.ET_ID = EMP_TIME.ET_ID INNER JOIN
						 EMPLOYEE ON EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
										 TIME_CATEGORY ON EMP_TIME_NP.CATEGORY = TIME_CATEGORY.CATEGORY INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
					WHERE (EMP_TIME.EMP_DATE BETWEEN @StartDate AND @PPEndDate) AND EMP_TIME.EMP_CODE = @Emp AND TIME_CATEGORY.VAC_SICK_FLAG IN(1,2,3) AND EMP_OFFICE.EMP_CODE = @EmployeeCode
					SELECT @sql = @sql + ' '
				End
				Else
				Begin
					SELECT @StdHours = SUM(STD_HOURS) 
					FROM DASH_DATA_EMP_TIME LEFT OUTER JOIN
							 EMPLOYEE ON DASH_DATA_EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE
					WHERE REC_TYPE = 'S' AND DASH_DATA_EMP_TIME.EMP_CODE = @Emp AND DASH_DATA_EMP_TIME.EMP_DATE >= @StartDate AND DASH_DATA_EMP_TIME.EMP_DATE <= @PPEndDate

					SELECT @DirectHrsPct = ISNULL(EMPLOYEE.DIRECT_HRS_PER,0.000000)
					FROM EMPLOYEE
					WHERE EMP_CODE = @Emp

					SELECT @TimeOff = ISNULL(SUM(EMP_TIME_NP.EMP_HOURS),0)
					FROM EMP_TIME_NP INNER JOIN
						 EMP_TIME ON EMP_TIME_NP.ET_ID = EMP_TIME.ET_ID INNER JOIN
						 EMPLOYEE ON EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
										 TIME_CATEGORY ON EMP_TIME_NP.CATEGORY = TIME_CATEGORY.CATEGORY
					WHERE (EMP_TIME.EMP_DATE BETWEEN @StartDate AND @PPEndDate) AND EMP_TIME.EMP_CODE = @Emp AND TIME_CATEGORY.VAC_SICK_FLAG IN(1,2,3)
				End		

			UPDATE #prod SET DIRECT_HRS_PER = @DirectHrsPct, TIME_OFF = @TimeOff
			WHERE RowID = @RowCount
		End
		Else
		Begin
			if @RestrictionsOffice > 0
				Begin
					SELECT @StdHours = SUM(STD_HOURS) 
					FROM DASH_DATA_EMP_TIME LEFT OUTER JOIN
							 EMPLOYEE ON DASH_DATA_EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
					WHERE REC_TYPE = 'S' AND DASH_DATA_EMP_TIME.EMP_CODE = @Emp AND DASH_DATA_EMP_TIME.EMP_DATE >= @StartDate AND DASH_DATA_EMP_TIME.EMP_DATE <= @PPEndDate AND EMPLOYEE.EMP_TERM_DATE IS NULL
							AND EMP_OFFICE.EMP_CODE = @EmployeeCode

					SELECT @DirectHrsPct = ISNULL(EMPLOYEE.DIRECT_HRS_PER,0.000000)
					FROM EMPLOYEE INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
					WHERE EMPLOYEE.EMP_CODE = @Emp AND EMP_OFFICE.EMP_CODE = @EmployeeCode

					SELECT @TimeOff = ISNULL(SUM(EMP_TIME_NP.EMP_HOURS),0)
					FROM EMP_TIME_NP INNER JOIN
						 EMP_TIME ON EMP_TIME_NP.ET_ID = EMP_TIME.ET_ID INNER JOIN
						 EMPLOYEE ON EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
										 TIME_CATEGORY ON EMP_TIME_NP.CATEGORY = TIME_CATEGORY.CATEGORY INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
					WHERE (EMP_TIME.EMP_DATE BETWEEN @StartDate AND @PPEndDate) AND EMP_TIME.EMP_CODE = @Emp AND TIME_CATEGORY.VAC_SICK_FLAG IN(1,2,3) AND EMP_OFFICE.EMP_CODE = @EmployeeCode
				End
				Else
				Begin
					SELECT @StdHours = SUM(STD_HOURS) 
					FROM DASH_DATA_EMP_TIME LEFT OUTER JOIN
							 EMPLOYEE ON DASH_DATA_EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE
					WHERE REC_TYPE = 'S' AND DASH_DATA_EMP_TIME.EMP_CODE = @Emp AND DASH_DATA_EMP_TIME.EMP_DATE >= @StartDate AND DASH_DATA_EMP_TIME.EMP_DATE <= @PPEndDate AND EMPLOYEE.EMP_TERM_DATE IS NULL

					SELECT @DirectHrsPct = ISNULL(EMPLOYEE.DIRECT_HRS_PER,0.000000)
					FROM EMPLOYEE
					WHERE EMP_CODE = @Emp

					SELECT @TimeOff = ISNULL(SUM(EMP_TIME_NP.EMP_HOURS),0)
					FROM EMP_TIME_NP INNER JOIN
						 EMP_TIME ON EMP_TIME_NP.ET_ID = EMP_TIME.ET_ID INNER JOIN
						 EMPLOYEE ON EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
										 TIME_CATEGORY ON EMP_TIME_NP.CATEGORY = TIME_CATEGORY.CATEGORY
					WHERE (EMP_TIME.EMP_DATE BETWEEN @StartDate AND @PPEndDate) AND EMP_TIME.EMP_CODE = @Emp AND TIME_CATEGORY.VAC_SICK_FLAG IN(1,2,3)
				End
			
			UPDATE #prod SET DIRECT_HRS_PER = @DirectHrsPct, TIME_OFF = @TimeOff
			WHERE RowID = @RowCount
		End
		
	End
	Else
	Begin
		if @Include = 1
		Begin
			if @RestrictionsOffice > 0
				Begin
					SELECT @StdHours = SUM(STD_HOURS) 
					FROM DASH_DATA_EMP_TIME LEFT OUTER JOIN
							 EMPLOYEE ON DASH_DATA_EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
					WHERE REC_TYPE = 'S' AND DASH_DATA_EMP_TIME.EMP_CODE = @Emp AND DASH_DATA_EMP_TIME.EMP_DATE >= @StartDate AND DASH_DATA_EMP_TIME.EMP_DATE <= @EndDate 
							AND EMP_OFFICE.EMP_CODE = @EmployeeCode

					SELECT @DirectHrsPct = ISNULL(EMPLOYEE.DIRECT_HRS_PER,0.000000)
					FROM EMPLOYEE INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
					WHERE EMPLOYEE.EMP_CODE = @Emp AND EMP_OFFICE.EMP_CODE = @EmployeeCode

					SELECT @TimeOff = ISNULL(SUM(EMP_TIME_NP.EMP_HOURS),0)
					FROM EMP_TIME_NP INNER JOIN
						 EMP_TIME ON EMP_TIME_NP.ET_ID = EMP_TIME.ET_ID INNER JOIN
						 EMPLOYEE ON EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
										 TIME_CATEGORY ON EMP_TIME_NP.CATEGORY = TIME_CATEGORY.CATEGORY INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
					WHERE (EMP_TIME.EMP_DATE BETWEEN @StartDate AND @EndDate) AND EMP_TIME.EMP_CODE = @Emp AND TIME_CATEGORY.VAC_SICK_FLAG IN(1,2,3) AND EMP_OFFICE.EMP_CODE = @EmployeeCode
				End
				Else
				Begin
					SELECT @StdHours = SUM(STD_HOURS) 
					FROM DASH_DATA_EMP_TIME LEFT OUTER JOIN
							 EMPLOYEE ON DASH_DATA_EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE
					WHERE REC_TYPE = 'S' AND DASH_DATA_EMP_TIME.EMP_CODE = @Emp AND DASH_DATA_EMP_TIME.EMP_DATE >= @StartDate AND DASH_DATA_EMP_TIME.EMP_DATE <= @EndDate 

					SELECT @DirectHrsPct = ISNULL(EMPLOYEE.DIRECT_HRS_PER,0.000000)
					FROM EMPLOYEE
					WHERE EMP_CODE = @Emp

					SELECT @TimeOff = ISNULL(SUM(EMP_TIME_NP.EMP_HOURS),0)
					FROM EMP_TIME_NP INNER JOIN
						 EMP_TIME ON EMP_TIME_NP.ET_ID = EMP_TIME.ET_ID INNER JOIN
						 EMPLOYEE ON EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
										 TIME_CATEGORY ON EMP_TIME_NP.CATEGORY = TIME_CATEGORY.CATEGORY
					WHERE (EMP_TIME.EMP_DATE BETWEEN @StartDate AND @EndDate) AND EMP_TIME.EMP_CODE = @Emp AND TIME_CATEGORY.VAC_SICK_FLAG IN(1,2,3)
				End	
			
			UPDATE #prod SET DIRECT_HRS_PER = @DirectHrsPct, TIME_OFF = @TimeOff
			WHERE RowID = @RowCount
		End
		Else
		Begin	
			if @RestrictionsOffice > 0
				Begin
					SELECT @StdHours = SUM(STD_HOURS) 
					FROM DASH_DATA_EMP_TIME LEFT OUTER JOIN
							 EMPLOYEE ON DASH_DATA_EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
					WHERE REC_TYPE = 'S' AND DASH_DATA_EMP_TIME.EMP_CODE = @Emp AND DASH_DATA_EMP_TIME.EMP_DATE >= @StartDate AND DASH_DATA_EMP_TIME.EMP_DATE <= @EndDate AND EMPLOYEE.EMP_TERM_DATE IS NULL
							AND EMP_OFFICE.EMP_CODE = @EmployeeCode

					SELECT @DirectHrsPct = ISNULL(EMPLOYEE.DIRECT_HRS_PER,0.000000)
					FROM EMPLOYEE INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
					WHERE EMPLOYEE.EMP_CODE = @Emp AND EMP_OFFICE.EMP_CODE = @EmployeeCode

					SELECT @TimeOff = ISNULL(SUM(EMP_TIME_NP.EMP_HOURS),0)
					FROM EMP_TIME_NP INNER JOIN
						 EMP_TIME ON EMP_TIME_NP.ET_ID = EMP_TIME.ET_ID INNER JOIN
						 EMPLOYEE ON EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
										 TIME_CATEGORY ON EMP_TIME_NP.CATEGORY = TIME_CATEGORY.CATEGORY INNER JOIN EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
					WHERE (EMP_TIME.EMP_DATE BETWEEN @StartDate AND @EndDate) AND EMP_TIME.EMP_CODE = @Emp AND TIME_CATEGORY.VAC_SICK_FLAG IN(1,2,3) AND EMP_OFFICE.EMP_CODE = @EmployeeCode
				End
				Else
				Begin
					SELECT @StdHours = SUM(STD_HOURS) 
					FROM DASH_DATA_EMP_TIME LEFT OUTER JOIN
							 EMPLOYEE ON DASH_DATA_EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE
					WHERE REC_TYPE = 'S' AND DASH_DATA_EMP_TIME.EMP_CODE = @Emp AND DASH_DATA_EMP_TIME.EMP_DATE >= @StartDate AND DASH_DATA_EMP_TIME.EMP_DATE <= @EndDate AND EMPLOYEE.EMP_TERM_DATE IS NULL

					SELECT @DirectHrsPct = ISNULL(EMPLOYEE.DIRECT_HRS_PER,0.000000)
					FROM EMPLOYEE
					WHERE EMP_CODE = @Emp

					SELECT @TimeOff = ISNULL(SUM(EMP_TIME_NP.EMP_HOURS),0)
					FROM EMP_TIME_NP INNER JOIN
						 EMP_TIME ON EMP_TIME_NP.ET_ID = EMP_TIME.ET_ID INNER JOIN
						 EMPLOYEE ON EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
										 TIME_CATEGORY ON EMP_TIME_NP.CATEGORY = TIME_CATEGORY.CATEGORY
					WHERE (EMP_TIME.EMP_DATE BETWEEN @StartDate AND @EndDate) AND EMP_TIME.EMP_CODE = @Emp AND TIME_CATEGORY.VAC_SICK_FLAG IN(1,2,3)
				End				

			UPDATE #prod SET DIRECT_HRS_PER = @DirectHrsPct, TIME_OFF = @TimeOff
			WHERE RowID = @RowCount
		End
	End

 
--SELECT @Emp, @StdHours,@DirectHrsPct, @TimeOff
 
UPDATE #prod 
SET STD_HRS = @StdHours, DIRECT_GOAL = (@StdHours - @TimeOff) * (@DirectHrsPct * 0.010000), VARIANCE = @StdHours - (@Billable + @NonBillable + @Nonprod + @Agency + @NewBusiness),
PERCENT_DIRECT = CASE WHEN (@Billable + @NonBillable + @Nonprod + @Agency + @NewBusiness) <> 0 THEN ((@Billable + @NonBillable + @Agency + @NewBusiness) / (@Billable + @NonBillable + @Nonprod + @Agency + @NewBusiness)) * 100 ELSE 0 END,
PERCENT_NONDIRECT = CASE WHEN (@Billable + @NonBillable + @Nonprod + @Agency + @NewBusiness) <> 0 THEN ((@Nonprod) / (@Billable + @NonBillable + @Nonprod + @Agency + @NewBusiness)) * 100 ELSE 0 END,
PERCENT_BILLABLE = CASE WHEN @Goal <> 0 THEN ((@Billable) / @Goal) * 100 ELSE 0 END,
REQUIRED_HOURS =  CASE WHEN @StdHours <> 0 THEN ((@Billable + @NonBillable + @Nonprod + @Agency + @NewBusiness) / @StdHours) * 100 ELSE 0 END,
PERCENT_DIRECT_GOAL = CASE WHEN ((@StdHours - @TimeOff) * (@DirectHrsPct * 0.010000)) <> 0 THEN ((@Billable + @NonBillable + @Agency + @NewBusiness) / ((@StdHours - @TimeOff) * (@DirectHrsPct * 0.010000))) * 100 ELSE 0 END
WHERE EMP_CODE = @Emp

SET @RowCount = @RowCount + 1
END

SELECT * FROM #prod ORDER BY EMP_LNAME,EMP_FNAME,EMP_MI

--DELETE FROM W_EMP_STD_HOURS WHERE UPPER(USERID) = UPPER(@UserID)

