if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_calendar_task_month_rpt2]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_calendar_task_month_rpt2]
GO

/*****************************************************************************************
Webvantage
This Stored Procedure gets  Tasks
Use @GrpLevel = '0' if all tasks are to go into each month
Use @GrpLevel = (1,2,3,4,5) to group by cl/div/prd/job/comp into separate months
********************************************************************************************/
CREATE PROCEDURE [dbo].[usp_wv_calendar_task_month_rpt2] 
@UserID VarChar(100),
@EmpCode Varchar(6),
@OfficeCode varchar(4),
@ClientCode VarChar(6),
@DivCode VarChar(6),
@ProdCode VarChar(6),
@JobNumber VarChar(6),
@JobComp VarChar(6),
@ROLES VarChar(8000),
@StartDate Varchar(10),
@EndDate Varchar(10),
@TaskStatus Varchar(1),
@ExcludeTempComplete Char(1),
@MilestonesOnly Char(1),
@Manager VarChar(6),
@GrpLevel VarChar(1),
@showTasks varchar(1),
@showAssignments varchar(1),
@showEvents varchar(1),
@showEventTasks varchar(1),
@DEPTS VarChar(8000)

AS

DECLARE @Restrictions 	Int
DECLARE @RestrictionsEmp Int
DECLARE @sql 		varchar(8000)
DECLARE @sql_from 	varchar(8000)
DECLARE @sql_where 	varchar(8000)
DECLARE @grp_str  varchar(1000)

DECLARE @EMP_CDE AS VARCHAR(6)
DECLARE @RestrictionsOffice AS INTEGER

SELECT @EMP_CDE = EMP_CODE FROM SEC_USER WHERE UPPER(USER_CODE) = UPPER(@UserID)

SELECT @RestrictionsOffice = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CDE

If @OfficeCode IS NULL 
	set @OfficeCode = ''
	
If @ClientCode IS NULL 
	set @ClientCode = ''	

If @DivCode IS NULL 
	set @DivCode = '' 	
	
If @ProdCode  IS NULL 
	set @ProdCode = ''
		
If @JobNumber  IS NULL 
	set @JobNumber = ''	
	
If @JobComp  IS NULL 
	set @JobComp = ''	
	
If @ROLES  IS NULL 
	set @ROLES = ''	
		
If @TaskStatus  IS NULL 
	set @TaskStatus = ''	
	
If @ExcludeTempComplete  IS NULL 
	set @ExcludeTempComplete = 'N'

If @EmpCode  IS NULL 
	set @EmpCode = ''
	
If @Manager  IS NULL 
	set @Manager = ''
	
If @DEPTS IS NULL 
	set @DEPTS = ''

Set NoCount On

Select @Restrictions = Count(*) 
FROM SEC_CLIENT
WHERE UPPER(USER_ID) = UPPER(@UserID)

Select @RestrictionsEmp = Count(*) 
FROM SEC_EMP
WHERE UPPER(USER_ID) = UPPER(@UserID)

-- SORT: 1-TASK; 2-EVENTS; 3-EVENT TASKS
CREATE TABLE #CALENDAR_REPORT (
	SORT					INT,
	CL_CODE					VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
	DIV_CODE				VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
	PRD_CODE				VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
	JOB_NUMBER				INT,
	JOB_DESC				VARCHAR(60) COLLATE SQL_Latin1_General_CP1_CS_AS,
	JOB_COMPONENT_NBR		SMALLINT,
	JOB_COMP_DESC			VARCHAR(60) COLLATE SQL_Latin1_General_CP1_CS_AS,
	THISDAY					INT,
	TASK					VARCHAR(254) COLLATE SQL_Latin1_General_CP1_CS_AS,
	TEMP_COMP_DATE			SMALLDATETIME,
	TASK_STATUS				VARCHAR(1),
	THIS_DAY_START			INT,
	SEQ_NBR					SMALLINT,
	CL_NAME					VARCHAR(40) COLLATE SQL_Latin1_General_CP1_CS_AS,
	DIV_NAME				VARCHAR(40) COLLATE SQL_Latin1_General_CP1_CS_AS,
	PRD_DESCRIPTION			VARCHAR(40) COLLATE SQL_Latin1_General_CP1_CS_AS,
	TRF_CODE				VARCHAR(10) COLLATE SQL_Latin1_General_CP1_CS_AS,
	REVISED_DATE			SMALLDATETIME,
	START_DATE				SMALLDATETIME,
	EMP_CODE_DISPL			VARCHAR(8000) COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_DESC_DISPL			VARCHAR(8000) COLLATE SQL_Latin1_General_CP1_CS_AS,
	TRF_DESCRIPTION			VARCHAR(30) COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_CODE_HOURS_DISPL	VARCHAR(8000) COLLATE SQL_Latin1_General_CP1_CS_AS,
	EMP_DESC_HOURS_DISPL	VARCHAR(8000) COLLATE SQL_Latin1_General_CP1_CS_AS,
	GROUPING 				VARCHAR(30) COLLATE SQL_Latin1_General_CP1_CS_AS
	) 

--Insert Tasks
IF @showTasks = 1
BEGIN
set @sql = ' INSERT INTO #CALENDAR_REPORT
SELECT 1, JOB_LOG.CL_CODE as CCode,
	JOB_LOG.DIV_CODE as DCode,
	JOB_LOG.PRD_CODE as PCode,
	JOB_LOG.JOB_NUMBER as JobNum,
	JOB_LOG.JOB_DESC as JobDesc,
	JOB_COMPONENT.JOB_COMPONENT_NBR as CompNum,
	JOB_COMPONENT.JOB_COMP_DESC as CompDesc,
	STR(DATEPART(day, V_JOB_TRAFFIC_DET.JOB_REVISED_DATE)) as ThisDay,
	isnull(V_JOB_TRAFFIC_DET.TASK_DESCRIPTION, ''('' + ISNULL(V_JOB_TRAFFIC_DET.FNC_CODE,'''') + '')'') as Task, 
	isnull(V_JOB_TRAFFIC_DET.TEMP_COMP_DATE, ''1/1/1900'') as TempCompDate,
	V_JOB_TRAFFIC_DET.TASK_STATUS, STR(DATEPART(day, V_JOB_TRAFFIC_DET.TASK_START_DATE)) as ThisDayStart, V_JOB_TRAFFIC_DET.SEQ_NBR,
	CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, ISNULL(TRAFFIC_FNC.TRF_CODE,''''), V_JOB_TRAFFIC_DET.JOB_REVISED_DATE as RevisedDate, 
	isnull(V_JOB_TRAFFIC_DET.TASK_START_DATE, ''1/1/1900'') as StartDate,
	isnull(V_JOB_TRAFFIC_DET_EMPS.EMP_CODE_LIST,'''') as empcodedispl,
	isnull(V_JOB_TRAFFIC_DET_EMPS.EMP_LFI_LIST,'''') AS empdescdispl,
	TRAFFIC.TRF_DESCRIPTION, 
	isnull(V_JOB_TRAFFIC_DET_EMPS.EMP_CODE_HOURS_LIST,'''') AS EmployeeCodeAndHours, 
	isnull(V_JOB_TRAFFIC_DET_EMPS.EMP_CODE_FML_NAME_HOURS_LIST,'''') AS EmployeeNameAndHours '

SET @grp_str = ''
SELECT @grp_str = 
CASE @GrpLevel
	WHEN '0' THEN  ', STR(DATEPART(month, V_JOB_TRAFFIC_DET.JOB_REVISED_DATE)) '
	WHEN '1' THEN  ', JOB_LOG.CL_CODE ' 
	WHEN '2' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE '	
	WHEN '3' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE + JOB_LOG.PRD_CODE '
	WHEN '4' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE + JOB_LOG.PRD_CODE + LTRIM(STR(JOB_LOG.JOB_NUMBER)) '
	WHEN '5' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE + JOB_LOG.PRD_CODE + LTRIM(STR(JOB_LOG.JOB_NUMBER)) + LTRIM(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) '
END
		
set @sql = @sql + @grp_str

set @sql_from = ' FROM JOB_LOG INNER JOIN JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
	INNER JOIN V_JOB_TRAFFIC_DET ON JOB_COMPONENT.JOB_NUMBER = V_JOB_TRAFFIC_DET.JOB_NUMBER 
	       AND JOB_COMPONENT.JOB_COMPONENT_NBR = V_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
	INNER JOIN PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE 
	INNER JOIN DIVISION ON PRODUCT.CL_CODE = DIVISION.CL_CODE AND PRODUCT.DIV_CODE = DIVISION.DIV_CODE 
	INNER JOIN CLIENT ON DIVISION.CL_CODE = CLIENT.CL_CODE
	LEFT OUTER JOIN TRAFFIC_FNC ON V_JOB_TRAFFIC_DET.FNC_CODE = TRAFFIC_FNC.TRF_CODE 
	INNER JOIN JOB_TRAFFIC ON JOB_TRAFFIC.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND JOB_TRAFFIC.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
	INNER JOIN TRAFFIC ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE 
	LEFT OUTER JOIN V_JOB_TRAFFIC_DET_EMPS ON V_JOB_TRAFFIC_DET.JOB_NUMBER = V_JOB_TRAFFIC_DET_EMPS.JOB_NUMBER AND V_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = V_JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR AND V_JOB_TRAFFIC_DET.SEQ_NBR = V_JOB_TRAFFIC_DET_EMPS.SEQ_NBR  '

SELECT @sql_where = ' WHERE (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12))) 
			AND JOB_TRAFFIC.COMPLETED_DATE IS NULL
			AND V_JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL 
			AND ((V_JOB_TRAFFIC_DET.JOB_REVISED_DATE BETWEEN ''' + @StartDate + ''' AND  ''' + @EndDate + ''') OR (V_JOB_TRAFFIC_DET.TASK_START_DATE BETWEEN ''' + @StartDate + ''' AND  ''' + @EndDate + '''))'
	
If @Restrictions > 0
	Begin
	  SELECT @sql_from = @sql_from + ' INNER JOIN SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE '

	  SELECT @sql_where = @sql_where + ' AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @UserID + ''')) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) '
	End

If @RestrictionsEmp > 0 
	Begin
	  SELECT @sql_from = @sql_from + ' INNER JOIN [dbo].[advtf_sec_emp] (''' + @UserID + ''') AS SEC_EMP ON V_JOB_TRAFFIC_DET.EMP_CODE = SEC_EMP.EMP_CODE '

	End

If @RestrictionsOffice > 0 
	Begin
	  SELECT @sql_from = @sql_from  + ' INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
	End	
	
If @Manager <> ''
	Begin
	  --SELECT @sql_from = @sql_from + ' INNER JOIN JOB_TRAFFIC ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER 
	  --     AND JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR '
	
	  SELECT @sql_where = @sql_where + ' AND JOB_TRAFFIC.MGR_EMP_CODE = ''' + @Manager + ''' '
	End

If @ROLES <> ''
	Begin
	  SELECT @sql_from = @sql_from + '
           LEFT OUTER JOIN EMP_TRAFFIC_ROLE  ON V_JOB_TRAFFIC_DET.EMP_CODE = EMP_TRAFFIC_ROLE.EMP_CODE '
	  SELECT @sql_where = @sql_where + ' AND (EMP_TRAFFIC_ROLE.ROLE_CODE IN ('+ @ROLES +')) ' 	
	End
IF @DEPTS <> ''
BEGIN
      SELECT @sql_from = @sql_from + ' INNER JOIN EMPLOYEE ON V_JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE '
		
      SELECT @sql_where = @sql_where + ' AND (EMPLOYEE.DP_TM_CODE IN ('+ @DEPTS +')) ' 
END	

If @EmpCode <> '' 
	SELECT @sql_where = @sql_where + ' AND V_JOB_TRAFFIC_DET.EMP_CODE = ''' + @EmpCode + ''''

If @OfficeCode  <> ''
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.OFFICE_CODE = ''' + @OfficeCode + ''''

If @ClientCode <> '' And @ClientCode IS Not NULL
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.CL_CODE = ''' + @ClientCode  + ''''

If @DivCode <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.DIV_CODE = ''' + @DivCode + '''' 

If @ProdCode <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.PRD_CODE = ''' + @ProdCode + '''' 

If @JobNumber <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.JOB_NUMBER = ''' + @JobNumber + '''' 

If @JobComp <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_COMPONENT.JOB_COMPONENT_NBR = ''' + @JobComp + '''' 
	
If @TaskStatus <> '' 
	BEGIN
		If @TaskStatus = 'P'
			SELECT @sql_where = @sql_where + ' AND (V_JOB_TRAFFIC_DET.TASK_STATUS = ''' + @TaskStatus + ''' OR V_JOB_TRAFFIC_DET.TASK_STATUS IS NULL) '
		Else
			SELECT @sql_where = @sql_where + ' AND V_JOB_TRAFFIC_DET.TASK_STATUS = ''' + @TaskStatus + ''''
	END

if @ExcludeTempComplete = 'Y'
	SELECT @sql_where = @sql_where + ' AND V_JOB_TRAFFIC_DET.TEMP_COMP_DATE IS NULL '

If @MilestonesOnly = 'Y'
	SELECT @sql_where = @sql_where + ' AND V_JOB_TRAFFIC_DET.MILESTONE = 1 '

SELECT @sql = @sql + @sql_from + @sql_where

SELECT @sql = @sql + ' GROUP BY JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
	JOB_LOG.JOB_NUMBER,JOB_LOG.JOB_DESC, JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC,
	STR(DATEPART(day, V_JOB_TRAFFIC_DET.TASK_START_DATE)),
	STR(DATEPART(day, V_JOB_TRAFFIC_DET.JOB_REVISED_DATE)),
	ISNULL(V_JOB_TRAFFIC_DET.TASK_DESCRIPTION, ''('' + ISNULL(V_JOB_TRAFFIC_DET.FNC_CODE,'''') + '')'') ,
	V_JOB_TRAFFIC_DET.JOB_REVISED_DATE, 
	V_JOB_TRAFFIC_DET.TASK_START_DATE,
	V_JOB_TRAFFIC_DET.TEMP_COMP_DATE,
	V_JOB_TRAFFIC_DET.TASK_STATUS,
	V_JOB_TRAFFIC_DET.SEQ_NBR,
	CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, ISNULL(TRAFFIC_FNC.TRF_CODE,''''), 
	V_JOB_TRAFFIC_DET_EMPS.EMP_CODE_LIST, V_JOB_TRAFFIC_DET_EMPS.EMP_LFI_LIST,
	TRAFFIC.TRF_DESCRIPTION, 
	V_JOB_TRAFFIC_DET_EMPS.EMP_CODE_HOURS_LIST, 
	V_JOB_TRAFFIC_DET_EMPS.EMP_CODE_FML_NAME_HOURS_LIST '

SET @grp_str = ''
SELECT @grp_str = 
CASE @GrpLevel
	WHEN '0' THEN  ''
	WHEN '1' THEN  ', JOB_LOG.CL_CODE ' 
	WHEN '2' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE '	
	WHEN '3' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE + JOB_LOG.PRD_CODE '
	WHEN '4' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE + JOB_LOG.PRD_CODE + LTRIM(STR(JOB_LOG.JOB_NUMBER)) '
	WHEN '5' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE + JOB_LOG.PRD_CODE + LTRIM(STR(JOB_LOG.JOB_NUMBER)) + LTRIM(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) '
END
		
set @sql = @sql + @grp_str	
	
EXEC(@sql)
--print(@sql)
END --Show Tasks

If @showAssignments = 1
BEGIN
set @sql = ' INSERT INTO #CALENDAR_REPORT SELECT 1, ALERT.CL_CODE as CCode,
	ALERT.DIV_CODE as DCode,
	ALERT.PRD_CODE as PCode,
	ALERT.JOB_NUMBER as JobNum,
	JOB_LOG.JOB_DESC as JobDesc,
	ALERT.JOB_COMPONENT_NBR as CompNum,
	JOB_COMPONENT.JOB_COMP_DESC as CompDesc,
	STR(DATEPART(day, CASE WHEN ALERT.DUE_DATE is NULL THEN ALERT.[START_DATE] ELSE ALERT.DUE_DATE END)) as ThisDay,
	ALERT.[SUBJECT] as Task, 
	''1/1/1900'' as TempCompDate,
	NULL AS TASK_STATUS, STR(DATEPART(day, CASE WHEN ALERT.[START_DATE] is NULL THEN ALERT.DUE_DATE ELSE ALERT.[START_DATE] END)) as ThisDayStart, ALERT.TASK_SEQ_NBR,
	isnull(C.CL_NAME,'''') AS CL_NAME, isnull(D.DIV_NAME,'''') AS DIV_NAME, isnull(P.PRD_DESCRIPTION,'''') AS PRD_DESCRIPTION, '''' AS TRF_CODE, CASE WHEN ALERT.DUE_DATE is NULL THEN ALERT.[START_DATE] ELSE ALERT.DUE_DATE END as RevisedDate, 
	isnull(CASE WHEN ALERT.[START_DATE] is NULL THEN ALERT.DUE_DATE ELSE ALERT.[START_DATE] END, ''1/1/1900'') as StartDate,
	ALERT_RCPT.EMP_CODE as empcodedispl,
	coalesce((rtrim(EMP_FNAME) + '' ''),'''') + coalesce((EMP_MI + ''. ''),'''') + coalesce(EMP_LNAME,'''') AS empdescdispl, 
	NULL AS TRF_DESCRIPTION, 
	ALERT_RCPT.EMP_CODE + ''('' + CAST(ISNULL(ALERT.HRS_ALLOWED,0) AS VARCHAR(10)) + '')'' AS EmployeeCodeAndHours, 
	coalesce((rtrim(EMP_FNAME) + '' ''),'''') + coalesce((EMP_MI + ''. ''),'''') + coalesce(EMP_LNAME,'''') + ''('' + CAST(ISNULL(ALERT.HRS_ALLOWED,0) AS VARCHAR(10)) + '')'' AS EmployeeNameAndHours '

SET @grp_str = ''
SELECT @grp_str = 
CASE @GrpLevel
	WHEN '0' THEN  ', STR(DATEPART(month, CASE WHEN ALERT.DUE_DATE is NULL THEN ALERT.[START_DATE] ELSE ALERT.DUE_DATE END)) AS GROUPING'
	WHEN '1' THEN  ', ALERT.CL_CODE AS GROUPING' 
	WHEN '2' THEN  ', ALERT.CL_CODE + ALERT.DIV_CODE AS GROUPING'	
	WHEN '3' THEN  ', ALERT.CL_CODE + ALERT.DIV_CODE + ALERT.PRD_CODE AS GROUPING'
	WHEN '4' THEN  ', ALERT.CL_CODE + ALERT.DIV_CODE + ALERT.PRD_CODE + LTRIM(STR(ALERT.JOB_NUMBER)) AS GROUPING'
	WHEN '5' THEN  ', ALERT.CL_CODE + ALERT.DIV_CODE + ALERT.PRD_CODE + LTRIM(STR(ALERT.JOB_NUMBER)) + LTRIM(STR(ALERT.JOB_COMPONENT_NBR)) AS GROUPING '
END
		
set @sql = @sql + @grp_str

set @sql_from = ' FROM ALERT INNER JOIN
						 ALERT_RCPT ON ALERT.ALERT_ID = ALERT_RCPT.ALERT_ID LEFT OUTER JOIN
						 JOB_COMPONENT WITH(NOLOCK) ON ALERT.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
						 ALERT.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR LEFT OUTER JOIN
						 JOB_TRAFFIC WITH(NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
						 JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR
						 LEFT OUTER JOIN JOB_LOG ON JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER 
						 LEFT OUTER JOIN TRAFFIC ON JOB_TRAFFIC.TRF_CODE = TRAFFIC.TRF_CODE
						 --LEFT OUTER JOIN SPRINT_EMPLOYEE ON ALERT_RCPT.ALERT_ID = SPRINT_EMPLOYEE.ALERT_ID AND ALERT_RCPT.EMP_CODE = SPRINT_EMPLOYEE.EMP_CODE AND SPRINT_EMPLOYEE.[HOURS] > 0
						 LEFT OUTER JOIN V_INACTIVE_WORK_ITEMS IWI ON ALERT.ALERT_ID = IWI.ALERT_ID   
						 LEFT OUTER JOIN PRODUCT P ON P.PRD_CODE = ALERT.PRD_CODE AND P.DIV_CODE = ALERT.PRD_CODE AND P.CL_CODE = ALERT.CL_CODE
						 LEFT OUTER JOIN DIVISION D ON D.DIV_CODE = P.DIV_CODE AND D.CL_CODE = P.CL_CODE
						 LEFT OUTER JOIN CLIENT C ON C.CL_CODE = D.CL_CODE
						 LEFT OUTER JOIN EMPLOYEE ON EMPLOYEE.EMP_CODE = ALERT_RCPT.EMP_CODE
					  '

SELECT @sql_where = 'WHERE IS_WORK_ITEM = 1 AND ALERT_LEVEL <> ''BRD'' AND (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6, 12)) AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL) AND (IWI.ALERT_ID IS NULL)
			AND CASE WHEN ALERT.[START_DATE] is NULL THEN ALERT.DUE_DATE ELSE ALERT.[START_DATE] END <= ''' + Cast(@EndDate AS VARCHAR) + ''' AND ''' + Cast(@StartDate AS VARCHAR) + ''' <= CASE WHEN ALERT.DUE_DATE is NULL THEN ALERT.[START_DATE] ELSE ALERT.DUE_DATE END ' 
			
If @Restrictions > 0
	Begin
	  SELECT @sql_from = @sql_from + ' INNER JOIN SEC_CLIENT ON ALERT.CL_CODE = SEC_CLIENT.CL_CODE AND ALERT.DIV_CODE = SEC_CLIENT.DIV_CODE AND ALERT.PRD_CODE = SEC_CLIENT.PRD_CODE '

	  SELECT @sql_where = @sql_where + ' AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @UserID + ''')) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) '
	End

If @RestrictionsEmp > 0 
	Begin

	  SELECT @sql_from = @sql_from + ' INNER JOIN [dbo].[advtf_sec_emp] (''' + @UserID + ''') AS SEC_EMP ON ALERT_RCPT.EMP_CODE = SEC_EMP.EMP_CODE '

	End

If @RestrictionsOffice > 0 
	Begin
	  SELECT @sql_from = @sql_from  + ' INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = ALERT.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
	End	
	
If @Manager <> ''
	Begin
	  --SELECT @sql_from = @sql_from + ' INNER JOIN JOB_TRAFFIC ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER 
	  --     AND JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR '
	
	  SELECT @sql_where = @sql_where + ' AND JOB_TRAFFIC.MGR_EMP_CODE = ''' + @Manager + ''' '
	End

If @ROLES <> ''
	Begin
	  SELECT @sql_from = @sql_from + '
           LEFT OUTER JOIN EMP_TRAFFIC_ROLE  ON ALERT_RCPT.EMP_CODE = EMP_TRAFFIC_ROLE.EMP_CODE '
	  SELECT @sql_where = @sql_where + ' AND (EMP_TRAFFIC_ROLE.ROLE_CODE IN ('+ @ROLES +')) ' 	
		
	End

IF @DEPTS <> ''
BEGIN
      --SELECT @sql_from = @sql_from + ' INNER JOIN EMPLOYEE ON ALERT_RCPT.EMP_CODE = EMPLOYEE.EMP_CODE '
		
      SELECT @sql_where = @sql_where + ' AND (EMPLOYEE.DP_TM_CODE IN ('+ @DEPTS +')) ' 
END	

If @EmpCode <> '' 
	SELECT @sql_where = @sql_where + ' AND ALERT_RCPT.EMP_CODE = ''' + @EmpCode + ''''

If @OfficeCode  <> ''
	SELECT @sql_where = @sql_where + ' AND ALERT.OFFICE_CODE = ''' + @OfficeCode + ''''

If @ClientCode <> '' And @ClientCode IS Not NULL
	SELECT @sql_where = @sql_where + ' AND ALERT.CL_CODE = ''' + @ClientCode  + ''''

If @DivCode <> '' 
	SELECT @sql_where = @sql_where + ' AND ALERT.DIV_CODE = ''' + @DivCode + '''' 

If @ProdCode <> '' 
	SELECT @sql_where = @sql_where + ' AND ALERT.PRD_CODE = ''' + @ProdCode + '''' 

If @JobNumber <> '' 
	SELECT @sql_where = @sql_where + ' AND ALERT.JOB_NUMBER = ''' + @JobNumber + '''' 

If @JobComp <> '' 
	SELECT @sql_where = @sql_where + ' AND ALERT.JOB_COMPONENT_NBR = ''' + @JobComp + '''' 
	
--If @TaskStatus <> '' 
--	BEGIN
--		If @TaskStatus = 'P'
--			SELECT @sql_where = @sql_where + ' AND (V_JOB_TRAFFIC_DET.TASK_STATUS = ''' + @TaskStatus + ''' OR V_JOB_TRAFFIC_DET.TASK_STATUS IS NULL) '
--		Else
--			SELECT @sql_where = @sql_where + ' AND V_JOB_TRAFFIC_DET.TASK_STATUS = ''' + @TaskStatus + ''''
--	END

--if @ExcludeTempComplete = 'Y'
--	SELECT @sql_where = @sql_where + ' AND V_JOB_TRAFFIC_DET.TEMP_COMP_DATE IS NULL '

--If @MilestonesOnly = 'Y'
--	SELECT @sql_where = @sql_where + ' AND V_JOB_TRAFFIC_DET.MILESTONE = 1 '

SELECT @sql = @sql + @sql_from + @sql_where

SELECT @sql = @sql + ' GROUP BY ALERT.CL_CODE, ALERT.DIV_CODE, ALERT.PRD_CODE,
	ALERT.JOB_NUMBER,JOB_LOG.JOB_DESC, ALERT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC,
	ALERT.[START_DATE],ALERT.DUE_DATE,[SUBJECT], TASK_SEQ_NBR,	
	C.CL_NAME, D.DIV_NAME, P.PRD_DESCRIPTION, ALERT_RCPT.EMP_CODE, EMPLOYEE.EMP_FNAME, EMPLOYEE.EMP_MI, EMPLOYEE.EMP_LNAME, HRS_ALLOWED'

SET @grp_str = ''
SELECT @grp_str = 
CASE @GrpLevel
	WHEN '0' THEN  ''
	WHEN '1' THEN  ', ALERT.CL_CODE ' 
	WHEN '2' THEN  ', ALERT.CL_CODE + ALERT.DIV_CODE '	
	WHEN '3' THEN  ', ALERT.CL_CODE + ALERT.DIV_CODE + ALERT.PRD_CODE '
	WHEN '4' THEN  ', ALERT.CL_CODE + ALERT.DIV_CODE + ALERT.PRD_CODE + LTRIM(STR(ALERT.JOB_NUMBER)) '
	WHEN '5' THEN  ', ALERT.CL_CODE + ALERT.DIV_CODE + ALERT.PRD_CODE + LTRIM(STR(ALERT.JOB_NUMBER)) + LTRIM(STR(ALERT.JOB_COMPONENT_NBR)) '
END
		
set @sql = @sql + @grp_str	
	
If @GrpLevel = '0' 
	set @sql = @sql + ' ORDER BY CASE WHEN ALERT.DUE_DATE is NULL THEN ALERT.[START_DATE] ELSE ALERT.DUE_DATE END '
Else
	set @sql = @sql + ' ORDER BY ALERT.CL_CODE, ALERT.DIV_CODE, ALERT.PRD_CODE, ALERT.JOB_NUMBER, ALERT.JOB_COMPONENT_NBR, CASE WHEN ALERT.DUE_DATE is NULL THEN ALERT.[START_DATE] ELSE ALERT.DUE_DATE END '

EXEC(@sql)
--print(@sql)
END

--Insert Events
if @showEvents = 1
BEGIN
set @sql = ' INSERT INTO #CALENDAR_REPORT 
 SELECT 2, JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE,JOB_LOG.PRD_CODE,
	JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC,
	JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, STR(DATEPART(day, EVENT.EVENT_DATE)), '''',
	EVENT.EVENT_DATE, '''',0,0,CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, 
	ISNULL(EVENT.RESOURCE_CODE,''''), EVENT.START_TIME, EVENT.END_TIME, '''','''','''', '''', '''' '

SET @grp_str = ''
SELECT @grp_str = 
CASE @GrpLevel   
	WHEN '0' THEN  ', STR(DATEPART(month, EVENT.EVENT_DATE)) '
	WHEN '1' THEN  ', JOB_LOG.CL_CODE ' 
	WHEN '2' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE '	
	WHEN '3' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE + JOB_LOG.PRD_CODE '
	WHEN '4' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE + JOB_LOG.PRD_CODE + LTRIM(STR(JOB_LOG.JOB_NUMBER)) '
	WHEN '5' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE + JOB_LOG.PRD_CODE + LTRIM(STR(JOB_LOG.JOB_NUMBER)) + LTRIM(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) '
END
		
set @sql = @sql + @grp_str

set @sql_from = ' FROM EVENT
 INNER JOIN JOB_LOG ON JOB_LOG.JOB_NUMBER = EVENT.JOB_NUMBER 
 INNER JOIN PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE 
 INNER JOIN JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
 INNER JOIN CLIENT ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
 INNER JOIN DIVISION ON PRODUCT.CL_CODE = DIVISION.CL_CODE AND PRODUCT.DIV_CODE = DIVISION.DIV_CODE '

SELECT @sql_where = ' WHERE EVENT.EVENT_DATE BETWEEN ''' + @StartDate + ''' AND  ''' + @EndDate + ''''
	

If @Restrictions > 0
	Begin
	  SELECT @sql_from = @sql_from + ' INNER JOIN SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE '

	  SELECT @sql_where = @sql_where + ' AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @UserID + ''')) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) '
	End
	
If @OfficeCode  <> ''
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.OFFICE_CODE = ''' + @OfficeCode + ''''

If @ClientCode <> '' And @ClientCode IS Not NULL
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.CL_CODE = ''' + @ClientCode  + ''''

If @DivCode <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.DIV_CODE = ''' + @DivCode + '''' 

If @ProdCode <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.PRD_CODE = ''' + @ProdCode + '''' 

If @JobNumber <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.JOB_NUMBER = ''' + @JobNumber + '''' 

If @JobComp <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_COMPONENT.JOB_COMPONENT_NBR = ''' + @JobComp + '''' 
	

SELECT @sql = @sql + @sql_from + @sql_where
	
EXEC(@sql)
--print(@sql)
END --Insert Events

--Insert Event Tasks 
IF @showEventTasks = 1
BEGIN
set @sql = ' INSERT INTO #CALENDAR_REPORT
SELECT 3, JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE,
	JOB_LOG.JOB_NUMBER , JOB_LOG.JOB_DESC,
	JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC,
	STR(DATEPART(day, EVENT_TASK.START_TIME)),
	EVENT_TASK.TASK_CODE, '''', '''', 0, 0, CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION,
	ISNULL(EVENT.RESOURCE_CODE,''''),  EVENT_TASK.START_TIME, EVENT_TASK.END_TIME,
	'''','''','''', '''', '''' '

SET @grp_str = ''
SELECT @grp_str = 
CASE @GrpLevel   
	WHEN '0' THEN  ', STR(DATEPART(month, EVENT_TASK.START_TIME)) '
	WHEN '1' THEN  ', JOB_LOG.CL_CODE ' 
	WHEN '2' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE '	
	WHEN '3' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE + JOB_LOG.PRD_CODE '
	WHEN '4' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE + JOB_LOG.PRD_CODE + LTRIM(STR(JOB_LOG.JOB_NUMBER)) '
	WHEN '5' THEN  ', JOB_LOG.CL_CODE + JOB_LOG.DIV_CODE + JOB_LOG.PRD_CODE + LTRIM(STR(JOB_LOG.JOB_NUMBER)) + LTRIM(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) '
END
		
set @sql = @sql + @grp_str

set @sql_from = ' FROM EVENT
 INNER JOIN EVENT_TASK ON EVENT.EVENT_ID = EVENT_TASK.EVENT_ID
 INNER JOIN JOB_LOG ON JOB_LOG.JOB_NUMBER = EVENT.JOB_NUMBER 
 INNER JOIN PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE 
 INNER JOIN JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
 INNER JOIN CLIENT ON CLIENT.CL_CODE = JOB_LOG.CL_CODE
 INNER JOIN DIVISION ON PRODUCT.CL_CODE = DIVISION.CL_CODE AND PRODUCT.DIV_CODE = DIVISION.DIV_CODE '

SELECT @sql_where = ' WHERE EVENT_TASK.START_DATE >= ''' + @StartDate + ''' AND (EVENT_TASK.END_DATE <= DATEADD(day, 1,  ''' + @EndDate + '''))'
	

If @Restrictions > 0
	Begin
	  SELECT @sql_from = @sql_from + ' INNER JOIN SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE '

	  SELECT @sql_where = @sql_where + ' AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @UserID + ''')) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) '
	End

If @RestrictionsEmp > 0 
	Begin
	  SELECT @sql_from = @sql_from + ' INNER JOIN [dbo].[advtf_sec_emp] (''' + @UserID + ''') AS SEC_EMP ON EVENT_TASK.EMP_CODE = SEC_EMP.EMP_CODE '

	End
	
If @OfficeCode  <> ''
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.OFFICE_CODE = ''' + @OfficeCode + ''''

If @ClientCode <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.CL_CODE = ''' + @ClientCode  + ''''

If @DivCode <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.DIV_CODE = ''' + @DivCode + '''' 

If @ProdCode <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.PRD_CODE = ''' + @ProdCode + '''' 

If @JobNumber <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_LOG.JOB_NUMBER = ''' + @JobNumber + '''' 

If @JobComp <> '' 
	SELECT @sql_where = @sql_where + ' AND JOB_COMPONENT.JOB_COMPONENT_NBR = ''' + @JobComp + '''' 
	

SELECT @sql = @sql + @sql_from + @sql_where


EXEC(@sql)
--print(@sql)
END --Insert Event Tasks 

SET @sql = ' SELECT CL_CODE, DIV_CODE, PRD_CODE,
	JOB_NUMBER, JOB_DESC, JOB_COMPONENT_NBR, JOB_COMP_DESC,
	THISDAY, TASK, TEMP_COMP_DATE, TASK_STATUS, THIS_DAY_START, SEQ_NBR,
	CL_NAME, DIV_NAME, PRD_DESCRIPTION,
	TRF_CODE, REVISED_DATE, START_DATE,
	EMP_CODE_DISPL, EMP_DESC_DISPL, TRF_DESCRIPTION, GROUPING, SORT, 
	EMP_DESC_HOURS_DISPL, EMP_CODE_HOURS_DISPL
FROM #CALENDAR_REPORT '

If @GrpLevel = '0'
	set @sql = @sql + ' ORDER BY REVISED_DATE, SORT'
Else
	set @sql = @sql + ' ORDER BY CL_CODE, DIV_CODE, PRD_CODE, JOB_NUMBER, JOB_COMPONENT_NBR, REVISED_DATE, SORT'

If @showEvents = '1'
	set @sql = @sql + ', TRF_CODE'

If @showEventTasks = '1' And @showEvents = '0'
	set @sql = @sql + ', TRF_CODE, TASK'
	
If @showEventTasks = '1' And @showEvents = '1'
	set @sql = @sql + ', TASK'

EXEC(@sql)
