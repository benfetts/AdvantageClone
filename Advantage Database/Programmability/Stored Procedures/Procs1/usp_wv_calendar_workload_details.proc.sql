if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_calendar_workload_details]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_calendar_workload_details]
GO

/*****************************************************************
Webvantage
This Stored Procedure get Task Details By Date, 
******************************************************************/
CREATE PROCEDURE [dbo].[usp_wv_calendar_workload_details] 
@UserID VarChar(100),
@start_date smalldatetime,
@end_date smalldatetime,
@OfficeCode	varchar(4),
@ClientCode Varchar(6),
@DivisionCode Varchar(6),
@ProductCode Varchar(6),
@JobNum Varchar(6),
@JobComp Varchar(6),
@ROLES VarChar(8000),
@TaskStatus Varchar(1),
@ExcludeTempComplete Char(1),
@EmpCode VarChar(6),
@Manager varchar(6),
@DEPTS VARCHAR(8000)
--WITH RECOMPILE

AS









		If @OfficeCode IS NULL 
			set @OfficeCode = ''
			
		If @ClientCode IS NULL 
			set @ClientCode = ''	

		If	@DivisionCode IS NULL 
			set @DivisionCode = '' 	
			
		If	@ProductCode  IS NULL 
			set @ProductCode = ''
				
		If	@JobNum  IS NULL 
			set @JobNum = ''	
			
		If	@JobComp  IS NULL 
			set @JobComp = ''	
			
		If	@ROLES  IS NULL 
			set @ROLES = ''	
				
		If	@TaskStatus  IS NULL 
			set @TaskStatus = ''	
			
		If	@ExcludeTempComplete  IS NULL 
			set @ExcludeTempComplete = ''

		If	@EmpCode  IS NULL 
			set @EmpCode = ''	
			
		If	@Manager  IS NULL 
			set @Manager = ''	

        IF @DEPTS IS NULL
        BEGIN
            SET @DEPTS = ''
        END
        
		DECLARE @Restrictions 	Int
		DECLARE @RestrictionsEmp Int
		DECLARE @RestrictionsOffice Int
		DECLARE @StartDate 	varchar(12)
		DECLARE @EndDate 	varchar(12)
		DECLARE @sql 		varchar(6000)
		DECLARE @sql_from 	varchar(4000)
		DECLARE @sql_where 	varchar(4000)
		DECLARE @sql2 		varchar(4000)
		DECLARE @sql_from2 	varchar(4000)
		DECLARE @sql_where2 varchar(4000)
		DECLARE @sqltable   nvarchar(2000)
		DECLARE @EMP_CDE AS VARCHAR(6)


		SELECT @StartDate = CAST(@start_date AS Varchar(12))
		SELECT @EndDate = CAST(@end_date AS Varchar(12))

			

		CREATE TABLE #W_WORKLOAD_TEMP (
			OFFICE_CODE		VARCHAR(4) COLLATE SQL_Latin1_General_CP1_CS_AS,
			CL_CODE			VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
			DIV_CODE		VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
			PRD_CODE		VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
			JOB_NUMBER		INT,
			JOB_DESC		VARCHAR(60) COLLATE SQL_Latin1_General_CP1_CS_AS,
			JOB_COMPONENT_NBR	INT,
			JOB_COMP_DESC		VARCHAR(60) COLLATE SQL_Latin1_General_CP1_CS_AS,
			START_DATE		SMALLDATETIME,
			JOB_FIRST_USE_DATE	SMALLDATETIME,
			TRF_DESCRIPTION		VARCHAR(30) COLLATE SQL_Latin1_General_CP1_CS_AS,
			EMP_CODE		VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
			ASSIGNED		DECIMAL(9,2),
			OPENTASKS		INT,
			UNASSIGNED		DECIMAL(9,2) ) 

		--print @sqltable
		--EXECUTE sp_executesql @sqltable


		Select @Restrictions = Count(*) 
		FROM SEC_CLIENT
		WHERE UPPER(USER_ID) = UPPER(@UserID)

		Select @RestrictionsEmp = Count(*) 
		FROM SEC_EMP
		WHERE UPPER(USER_ID) = UPPER(@UserID)

		SELECT @EMP_CDE = EMP_CODE FROM SEC_USER WHERE UPPER(USER_CODE) = UPPER(@UserID)
		SELECT @RestrictionsOffice = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CDE


		SELECT @sql = 'INSERT INTO #W_WORKLOAD_TEMP
		SELECT 	JOB_LOG.OFFICE_CODE, JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, 
			JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC,
			JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC,
			JOB_COMPONENT.START_DATE, JOB_COMPONENT.JOB_FIRST_USE_DATE, 
			TRAFFIC.TRF_DESCRIPTION, V_JOB_TRAFFIC_DET.EMP_CODE,
			0 AS ASSIGNED,
			0   AS OPENTASKS, 
			0 AS UNASSIGNED '

		SELECT @sql_from = ' FROM    JOB_COMPONENT 
			INNER JOIN JOB_TRAFFIC ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER 
				AND JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR
			INNER JOIN V_JOB_TRAFFIC_DET ON JOB_TRAFFIC.JOB_NUMBER = V_JOB_TRAFFIC_DET.JOB_NUMBER 
			  AND JOB_TRAFFIC.JOB_COMPONENT_NBR = V_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
			INNER JOIN JOB_LOG ON JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER 
			INNER JOIN TRAFFIC ON JOB_TRAFFIC.TRF_CODE = TRAFFIC.TRF_CODE '

		SELECT @sql_where = ' WHERE JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12) AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL) AND (V_JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL AND V_JOB_TRAFFIC_DET.TEMP_COMP_DATE IS NULL) AND V_JOB_TRAFFIC_DET.JOB_REVISED_DATE BETWEEN ''' + @StartDate + ''' AND  ''' + @EndDate + '''' 
		--SELECT @sql_where = @sql_where + ' OR V_JOB_TRAFFIC_DET.TASK_START_DATE BETWEEN ''' + @StartDate + ''' AND  ''' + @EndDate + ''')' 

		If @OfficeCode  <> ''
			SELECT @sql_where = @sql_where + ' AND JOB_LOG.OFFICE_CODE = ''' + @OfficeCode + ''''

		If @ClientCode <> ''
			SELECT @sql_where = @sql_where + ' AND JOB_LOG.CL_CODE = ''' + @ClientCode + ''''

		If @DivisionCode  <> ''
			SELECT @sql_where = @sql_where + ' AND JOB_LOG.DIV_CODE = ''' + @DivisionCode + '''' 

		If @ProductCode   <> ''
			SELECT @sql_where = @sql_where + ' AND JOB_LOG.PRD_CODE = ''' + @ProductCode + ''''  

		If @JobNum  <> ''
			SELECT @sql_where = @sql_where + ' AND JOB_LOG.JOB_NUMBER = ' + @JobNum 

		If @JobComp  <> ''
			SELECT @sql_where = @sql_where + ' AND JOB_COMPONENT.JOB_COMPONENT_NBR = ' + @JobComp 

		--If @EmpCode  <> ''
		--	SELECT @sql_where = @sql_where + ' AND ( V_JOB_TRAFFIC_DET.EMP_CODE = ''' + @EmpCode + ''' OR V_JOB_TRAFFIC_DET.EMP_CODE IS NULL) ' 
		--SELECT @sql_where = @sql_where + ' AND V_JOB_TRAFFIC_DET.EMP_CODE IS NULL ' 	
		If @ROLES <> ''
			Begin
	  SELECT @sql_from = @sql_from + '
           LEFT OUTER JOIN EMP_TRAFFIC_ROLE  ON V_JOB_TRAFFIC_DET.EMP_CODE = EMP_TRAFFIC_ROLE.EMP_CODE '
	  SELECT @sql_where = @sql_where + ' AND (EMP_TRAFFIC_ROLE.ROLE_CODE IN ('+ @ROLES +')) ' 	
			  
			End
			
        IF @DEPTS <> ''
        BEGIN
	          SELECT @sql_from = @sql_from + ' INNER JOIN EMPLOYEE ON V_JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE '
        		
	          SELECT @sql_where = @sql_where + ' AND (EMPLOYEE.DP_TM_CODE IN ('+ @DEPTS +')) ' 
        END	
		If @Manager <> ''	
			  SELECT @sql_where = @sql_where + ' AND JOB_TRAFFIC.MGR_EMP_CODE = ''' + @Manager + ''' '
			
		If @Restrictions > 0
			Begin
				SELECT @sql_from = @sql_from + ' INNER JOIN SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE 
							AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE 
							AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE '

			  SELECT @sql_where = @sql_where + ' AND UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @UserID + ''') AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)'
			End

		If @RestrictionsEmp > 0
			Begin
			  SELECT @sql_from = @sql_from + ' INNER JOIN [dbo].[advtf_sec_emp] (''' + @UserID + ''') AS SEC_EMP ON V_JOB_TRAFFIC_DET.EMP_CODE = SEC_EMP.EMP_CODE '

			End

		IF @RestrictionsOffice > 0
		BEGIN
			SET @sql_from = @sql_from  + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
		END

		--If @TaskStatus <> ''
		--	SELECT @sql_where = @sql_where + ' AND V_JOB_TRAFFIC_DET.TASK_STATUS = ''' + @TaskStatus + '''' 
		--if @ExcludeTempComplete = 'Y'
		--	SELECT @sql_where = @sql_where + ' AND V_JOB_TRAFFIC_DET.TEMP_COMP_DATE IS NULL '

		SELECT @sql = @sql + @sql_from + @sql_where


		SELECT @sql = @sql + ' GROUP BY JOB_LOG.OFFICE_CODE, JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, 
						JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC,
						JOB_COMPONENT.START_DATE, JOB_COMPONENT.JOB_FIRST_USE_DATE, 
						TRAFFIC.TRF_DESCRIPTION, V_JOB_TRAFFIC_DET.EMP_CODE '


		SELECT @sql2 = ' UNION 
		SELECT 	JOB_LOG.OFFICE_CODE, JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, 
			JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC,
			JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC,
			JOB_COMPONENT.START_DATE, JOB_COMPONENT.JOB_FIRST_USE_DATE, 
			TRAFFIC.TRF_DESCRIPTION, V_JOB_TRAFFIC_DET.EMP_CODE, 0, 0, 0 '

		SELECT @sql_from2 = ' FROM    JOB_COMPONENT 
			INNER JOIN JOB_TRAFFIC ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER 
				AND JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR
			LEFT OUTER JOIN V_JOB_TRAFFIC_DET ON JOB_TRAFFIC.JOB_NUMBER = V_JOB_TRAFFIC_DET.JOB_NUMBER 
			  AND JOB_TRAFFIC.JOB_COMPONENT_NBR = V_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
			  AND V_JOB_TRAFFIC_DET.EMP_CODE IS NOT NULL
			  AND V_JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
			  AND V_JOB_TRAFFIC_DET.JOB_REVISED_DATE NOT BETWEEN ''' + @StartDate + ''' AND  ''' + @EndDate + '''
			INNER JOIN JOB_LOG ON JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER 
			INNER JOIN TRAFFIC ON JOB_TRAFFIC.TRF_CODE = TRAFFIC.TRF_CODE '


		SELECT @sql_where2 = ' WHERE JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12) AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL) AND  (V_JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL AND V_JOB_TRAFFIC_DET.TEMP_COMP_DATE IS NULL) AND JOB_COMPONENT.JOB_FIRST_USE_DATE BETWEEN ''' + @StartDate + ''' AND ''' + @EndDate + ''''

		If @OfficeCode  <> ''
			SELECT @sql_where2 = @sql_where2 + ' AND JOB_LOG.OFFICE_CODE = ''' + @OfficeCode + ''''

		If @ClientCode <> ''
			SELECT @sql_where2 = @sql_where2 + ' AND JOB_LOG.CL_CODE = ''' + @ClientCode + ''''

		If @DivisionCode  <> ''
			SELECT @sql_where2 = @sql_where2 + ' AND JOB_LOG.DIV_CODE = ''' + @DivisionCode + '''' 

		If @ProductCode   <> ''
			SELECT @sql_where2 = @sql_where2 + ' AND JOB_LOG.PRD_CODE = ''' + @ProductCode + ''''  

		If @JobNum  <> ''
			SELECT @sql_where2 = @sql_where2 + ' AND JOB_LOG.JOB_NUMBER = ' + @JobNum 

		If @JobComp  <> ''
			SELECT @sql_where2 = @sql_where2 + ' AND JOB_COMPONENT.JOB_COMPONENT_NBR = ' + @JobComp 

		--If @EmpCode  <> ''
		--	SELECT @sql_where2 = @sql_where2 + ' AND ( V_JOB_TRAFFIC_DET.EMP_CODE = ''' + @EmpCode + ''' OR V_JOB_TRAFFIC_DET.EMP_CODE IS NULL) '
		--SELECT @sql_where2 = @sql_where2 + ' AND V_JOB_TRAFFIC_DET.EMP_CODE IS NULL '

		If @ROLES <> ''
			Begin
			  SELECT @sql_from = @sql_from + '
				   LEFT OUTER JOIN EMP_TRAFFIC_ROLE  ON V_JOB_TRAFFIC_DET.EMP_CODE = EMP_TRAFFIC_ROLE.EMP_CODE '
			  SELECT @sql_where = @sql_where + ' AND (EMP_TRAFFIC_ROLE.ROLE_CODE IN ('+ @ROLES +')) ' 	
				
			End
        IF @DEPTS <> ''
        BEGIN
	          SELECT @sql_from2 = @sql_from2 + ' INNER JOIN EMPLOYEE ON V_JOB_TRAFFIC_DET.EMP_CODE = EMPLOYEE.EMP_CODE '
        		
	          SELECT @sql_where2 = @sql_where2 + ' AND (EMPLOYEE.DP_TM_CODE IN ('+ @DEPTS +')) ' 
        END	
			
		If @Manager <> ''
			  SELECT @sql_where2 = @sql_where2 + ' AND JOB_TRAFFIC.MGR_EMP_CODE = ''' + @Manager + ''' '
			
		If @Restrictions > 0
			Begin
				SELECT @sql_from2 = @sql_from2 + ' INNER JOIN SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE 
							AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE 
							AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE '

			  SELECT @sql_where2 = @sql_where2 + ' AND UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @UserID + ''') AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)'
			End

		If @RestrictionsEmp > 0
			Begin
			  SELECT @sql_from2 = @sql_from2 + ' INNER JOIN [dbo].[advtf_sec_emp] (''' + @UserID + ''') AS SEC_EMP ON V_JOB_TRAFFIC_DET.EMP_CODE = SEC_EMP.EMP_CODE '

			End

		IF @RestrictionsOffice > 0
		BEGIN
			SET @sql_from2 = @sql_from2  + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
		END
			
		--If @TaskStatus <> ''
		--	SELECT @sql_where2 = @sql_where2 + ' AND V_JOB_TRAFFIC_DET.TASK_STATUS = ''' + @TaskStatus + '''' 
		--if @ExcludeTempComplete = 'Y'
		--	SELECT @sql_where2 = @sql_where2 + ' AND V_JOB_TRAFFIC_DET.TEMP_COMP_DATE IS NULL '

		SELECT @sql2 = @sql2 + @sql_from2 + @sql_where2


		SELECT @sql2 = @sql2 + ' GROUP BY JOB_LOG.OFFICE_CODE, JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, 
						JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC,
						JOB_COMPONENT.START_DATE, JOB_COMPONENT.JOB_FIRST_USE_DATE, 
						TRAFFIC.TRF_DESCRIPTION, V_JOB_TRAFFIC_DET.EMP_CODE '


		SELECT @sql = @sql + @sql2

		EXEC (@sql)
		print(@sql)

		SELECT @sql = 'INSERT INTO #W_WORKLOAD_TEMP
		SELECT 	JOB_LOG.OFFICE_CODE, JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, 
			JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC,
			JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC,
			JOB_COMPONENT.START_DATE, JOB_COMPONENT.JOB_FIRST_USE_DATE, 
			TRAFFIC.TRF_DESCRIPTION, V_JOB_TRAFFIC_DET.EMP_CODE, 0, 0, 0 '
			
		SELECT @sql_from = ' FROM JOB_COMPONENT 
			INNER JOIN JOB_LOG ON JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER 
			LEFT OUTER JOIN JOB_TRAFFIC ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER
								   AND JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR 
			LEFT OUTER JOIN V_JOB_TRAFFIC_DET ON JOB_TRAFFIC.JOB_NUMBER = V_JOB_TRAFFIC_DET.JOB_NUMBER 
			  AND JOB_TRAFFIC.JOB_COMPONENT_NBR = V_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
			  AND V_JOB_TRAFFIC_DET.EMP_CODE IS NOT NULL
			  AND V_JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
			LEFT OUTER JOIN TRAFFIC ON JOB_TRAFFIC.TRF_CODE = TRAFFIC.TRF_CODE '
			
		SELECT @sql_where = ' WHERE JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12) AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL) AND (V_JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL AND V_JOB_TRAFFIC_DET.TEMP_COMP_DATE IS NULL) AND  
		 ( JOB_COMPONENT.JOB_FIRST_USE_DATE between ''' + @StartDate + ''' AND ''' + @EndDate + ''' OR V_JOB_TRAFFIC_DET.JOB_REVISED_DATE BETWEEN ''' + @StartDate + ''' AND ''' + @EndDate + ''')
		  AND JOB_TRAFFIC.TRF_CODE IS NOT NULL
		  AND  JOB_LOG.JOB_NUMBER NOT IN (SELECT JOB_NUMBER FROM #W_WORKLOAD_TEMP ) '
		 
					
		If @OfficeCode  <> ''
			SELECT @sql_where = @sql_where + ' AND JOB_LOG.OFFICE_CODE = ''' + @OfficeCode + ''''

		If @ClientCode <> ''
			SELECT @sql_where = @sql_where + ' AND JOB_LOG.CL_CODE = ''' + @ClientCode + ''''

		If @DivisionCode  <> ''
			SELECT @sql_where = @sql_where + ' AND JOB_LOG.DIV_CODE = ''' + @DivisionCode + '''' 

		If @ProductCode   <> ''
			SELECT @sql_where = @sql_where + ' AND JOB_LOG.PRD_CODE = ''' + @ProductCode + ''''  

		If @JobNum  <> ''
			SELECT @sql_where = @sql_where + ' AND JOB_LOG.JOB_NUMBER = ' + @JobNum 

		If @JobComp  <> ''
			SELECT @sql_where = @sql_where + ' AND JOB_COMPONENT.JOB_COMPONENT_NBR = ' + @JobComp 

		--If @EmpCode  <> ''
		--	  SELECT @sql_where = @sql_where + ' AND ( V_JOB_TRAFFIC_DET.EMP_CODE = ''' + @EmpCode + ''' OR V_JOB_TRAFFIC_DET.EMP_CODE IS NULL) ' 
		--SELECT @sql_where = @sql_where + ' AND V_JOB_TRAFFIC_DET.EMP_CODE IS NULL '
		If @Manager <> ''
			  SELECT @sql_where = @sql_where + ' AND JOB_TRAFFIC.MGR_EMP_CODE = ''' + @Manager + ''' '


		If @Restrictions > 0
			Begin
				SELECT @sql_from = @sql_from + ' INNER JOIN SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE 
							AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE 
							AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE '

			  SELECT @sql_where = @sql_where + ' AND UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @UserID + ''') AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)'
			End

		If @RestrictionsEmp > 0
			Begin
			  SELECT @sql_from = @sql_from + ' INNER JOIN [dbo].[advtf_sec_emp] (''' + @UserID + ''') AS SEC_EMP ON V_JOB_TRAFFIC_DET.EMP_CODE = SEC_EMP.EMP_CODE '

			End

		IF @RestrictionsOffice > 0
		BEGIN
			SET @sql_from = @sql_from  + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
		END


		SELECT @sql = @sql + @sql_from + @sql_where

		SELECT @sql = @sql + 'GROUP BY JOB_LOG.OFFICE_CODE, JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, 
						JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC,
						JOB_COMPONENT.START_DATE, JOB_COMPONENT.JOB_FIRST_USE_DATE, 
						TRAFFIC.TRF_DESCRIPTION, V_JOB_TRAFFIC_DET.EMP_CODE '

		EXEC (@sql)
		print(@sql)
		
DECLARE @EVT_START AS SMALLDATETIME, @EVT_END AS SMALLDATETIME, @EVT_START_STR AS VARCHAR(25), @EVT_END_STR AS VARCHAR(25)
SET @EVT_START = @start_date
SET @EVT_END = CONVERT(
				       DATETIME,
				       CONVERT(CHAR(10), DATEPART(yyyy, @end_date), 101) 
				       +
				       '-' +
				       CONVERT(CHAR(10), DATEPART(mm, @end_date), 101) +
				       '-' +
				       CONVERT(CHAR(10), DATEPART(dd, @end_date), 101) +
				       ' 23:59:00' 
				       );
				       
SET @EVT_START_STR = CAST(@EVT_START AS Varchar(25));
SET @EVT_END_STR = CAST(@EVT_END AS Varchar(25));

	SET @sql = ''
    SET @sql = '
    INSERT INTO #W_WORKLOAD_TEMP
SELECT     JOB_LOG.OFFICE_CODE, JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC, 
                      JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_COMP_DESC, JOB_COMPONENT.START_DATE, 
                      JOB_COMPONENT.JOB_FIRST_USE_DATE, TRAFFIC.TRF_DESCRIPTION, EVENT_TASK.EMP_CODE, 
                      EVENT_TASK.HOURS_ALLOWED AS ASSIGNED, 
                      1 AS OPENTASKS,
     CASE WHEN EVENT_TASK.EMP_CODE IS NULL THEN ISNULL(EVENT_TASK.HOURS_ALLOWED,0) ELSE 0 END AS UNASSIGNED                 
FROM         TRAFFIC INNER JOIN
                      JOB_TRAFFIC ON TRAFFIC.TRF_CODE = JOB_TRAFFIC.TRF_CODE RIGHT OUTER JOIN
                      EVENT_TASK INNER JOIN
                      EVENT ON EVENT_TASK.EVENT_ID = EVENT.EVENT_ID INNER JOIN
                      JOB_COMPONENT ON EVENT.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
                      EVENT.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
                      JOB_LOG ON JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER ON JOB_TRAFFIC.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
                      JOB_TRAFFIC.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
	    '
    IF @Restrictions > 0
    BEGIN
	    SET @sql = @sql +  ' INNER JOIN SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE '
    END	
    IF @RestrictionsEmp > 0 
    BEGIN
	    SET @sql = @sql + ' INNER JOIN [dbo].[advtf_sec_emp] (''' + @UserID + ''') AS SEC_EMP ON EVENT_TASK.EMP_CODE = SEC_EMP.EMP_CODE '
    END
	IF @RestrictionsOffice > 0
	BEGIN
		SET @sql = @sql  + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
	END
    --BEGIN THE WHERE CLAUSE
    SET @sql = @sql+'	
    WHERE JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12) AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL) AND EVENT_TASK.END_TIME BETWEEN ''' + @EVT_START_STR + ''' AND  ''' + @EVT_END_STR + '''' 
    SET @sql = @sql + ' AND  JOB_LOG.JOB_NUMBER NOT IN (SELECT JOB_NUMBER FROM #W_WORKLOAD_TEMP ) '
    IF @Restrictions > 0
    BEGIN
	    SET @sql = @sql + ' AND UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @UserID + ''') AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)'
    END	
    IF @OfficeCode <> ''
    BEGIN
	    SET @sql = @sql + ' AND JOB_LOG.OFFICE_CODE = ''' + @OfficeCode + ''''  
    END
    --IF @EmpCode  <> '' AND @EmpCode <> '%'
    --BEGIN
	   -- --SET @sql = @sql + ' AND (EVENT_TASK.EMP_CODE = '''+ @EmpCode + ''' OR EVENT_TASK.EMP_CODE IS NULL)'
    --END
    IF @ClientCode <> '' And @ClientCode IS NOT NULL
    BEGIN
	    SET @sql = @sql + ' AND JOB_LOG.CL_CODE = ''' + @ClientCode + ''''
    END	
    IF @DivisionCode  <> '' And @DivisionCode  IS NOT NULL
    BEGIN
	    SET @sql = @sql + ' AND JOB_LOG.DIV_CODE = ''' + @DivisionCode + ''''
    END	
    IF @ProductCode   <> '' And @ProductCode   IS NOT NULL
    BEGIN
	    SET @sql = @sql + ' AND JOB_LOG.PRD_CODE = '''+ @ProductCode + ''''
    END	
    IF @JobNum  <> '' And @JobNum  IS NOT NULL
    BEGIN
	    SET @sql = @sql + ' AND JOB_LOG.JOB_NUMBER = ''' + @JobNum + ''''
    END	
    IF @JobComp  <> '' And @JobComp  IS NOT NULL
    BEGIN
	    SET @sql = @sql + ' AND JOB_COMPONENT.JOB_COMPONENT_NBR = ''' + @JobComp + ''''
    END	
    
    PRINT @sql
	EXEC (@sql)


		
--SELECT * FROM #W_WORKLOAD_TEMP;


			CREATE TABLE #MY_DETAIL_DATA --MASTER TABLE TO RETURN
			(
    			ROW_ID								INT IDENTITY(1,1) NOT NULL,
				OFFICE_CODE							VARCHAR(4) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
				CL_CODE								VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
				DIV_CODE							VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
				PRD_CODE							VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
				JOB_NUMBER							INT NULL,
				JOB_DESC							VARCHAR(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
				JOB_COMPONENT_NBR					SMALLINT NULL,
				JOB_COMP_DESC						VARCHAR(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
				START_DATE							SMALLDATETIME NULL,
				JOB_FIRST_USE_DATE					SMALLDATETIME NULL,
				TRF_DESCRIPTION						VARCHAR(40) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
				TOTAL_OPEN_TASKS					INT NULL,
				OLD_HRS_ASSIGNED					DECIMAL (18,6) NULL,
				OLD_HRS_UNASSIGNED					DECIMAL (18,6) NULL,
				TOTAL_HRS_ASSIGNED					DECIMAL(18,6) NULL,
				TOTAL_HRS_UNASSIGNED				DECIMAL(18,6) NULL,
				TOTAL_ADJ_JOB_HRS					DECIMAL(18,6) NULL,
				TOTAL_HOURS_PER_DAY					DECIMAL(18,6) NULL,
				SHOW_UNASSIGNED_COLUMN				SMALLINT NULL
			)


		DECLARE @SHOW_UNASSIGNED SMALLINT
		IF @EmpCode <> ''
			SET @SHOW_UNASSIGNED = 0
		ELSE
			SET @SHOW_UNASSIGNED = 1


		--If @EmpCode  <> ''
		--	SELECT OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, JOB_NUMBER, JOB_DESC, JOB_COMPONENT_NBR, JOB_COMP_DESC, 
		--		START_DATE, JOB_FIRST_USE_DATE, TRF_DESCRIPTION, 
		--		SUM(OPENTASKS) AS OPENTASKS, SUM(ISNULL(ASSIGNED,0)) AS ASSIGNED, 0.00 AS UNASSIGNED 
		--	FROM #W_WORKLOAD_TEMP
		--	GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, JOB_NUMBER, JOB_DESC, JOB_COMPONENT_NBR, JOB_COMP_DESC, 
		--		START_DATE, JOB_FIRST_USE_DATE, TRF_DESCRIPTION
		--Else

		INSERT INTO #MY_DETAIL_DATA
			(OFFICE_CODE,CL_CODE,DIV_CODE,PRD_CODE,JOB_NUMBER,JOB_DESC,JOB_COMPONENT_NBR,JOB_COMP_DESC,[START_DATE],JOB_FIRST_USE_DATE,TRF_DESCRIPTION,
			TOTAL_OPEN_TASKS,OLD_HRS_ASSIGNED,OLD_HRS_UNASSIGNED,SHOW_UNASSIGNED_COLUMN)
			SELECT OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, JOB_NUMBER, JOB_DESC, JOB_COMPONENT_NBR, JOB_COMP_DESC, 
			START_DATE, JOB_FIRST_USE_DATE, TRF_DESCRIPTION, 
			SUM(OPENTASKS) AS OPENTASKS, SUM(ISNULL(ASSIGNED,0)) AS ASSIGNED, SUM(ISNULL(UNASSIGNED,0)) AS UNASSIGNED, @SHOW_UNASSIGNED 
		FROM #W_WORKLOAD_TEMP
		GROUP BY OFFICE_CODE, CL_CODE, DIV_CODE, PRD_CODE, JOB_NUMBER, JOB_DESC, JOB_COMPONENT_NBR, JOB_COMP_DESC, 
		START_DATE, JOB_FIRST_USE_DATE, TRF_DESCRIPTION;


		CREATE TABLE #MY_HRS_DATA 
		(
			JOB_NUMBER							INT NULL,
			JOB_COMPONENT_NBR					SMALLINT NULL,
			TOTAL_HOURS_PER_DAY					DECIMAL(18,6) NULL,
			TOTAL_ADJ_JOB_HRS					DECIMAL(18,6) NULL,
			GRAND_TOTAL_WORKING_DAYS			INT NULL,
			GRAND_TOTAL_WORKING_HOURS			DECIMAL(18,6) NULL,
			GRAND_TOTAL_AVAIL_WORKING_HOURS		DECIMAL(18,6) NULL,
			GRAND_TOTAL_ADJ_JOB_HRS				DECIMAL(18,6) NULL,
			GRAND_TOTAL_APPT_HRS				DECIMAL(18,6) NULL,
			GRAND_TOTAL_EMP_COUNT				INT NULL,
			GRAND_TOTAL_HRS_OFF 				DECIMAL(18,6) NULL
		)




		--INSERT INTO #MY_HRS_DATA
		--EXEC usp_wv_calendar_workload_employee @UserID,@EmpCode,@start_date,@end_date,@OfficeCode,@ClientCode,@DivisionCode,@ProductCode,@JobNum,@JobComp,@ROLES,@TaskStatus,@ExcludeTempComplete,@Manager,'WA',NULL,NULL,'','',0,@DEPTS;
		----SELECT * FROM #MY_HRS_DATA ORDER BY JOB_NUMBER;

		--UPDATE #MY_DETAIL_DATA
		--SET #MY_DETAIL_DATA.TOTAL_ADJ_JOB_HRS = #MY_HRS_DATA.TOTAL_ADJ_JOB_HRS, #MY_DETAIL_DATA.TOTAL_HOURS_PER_DAY = #MY_HRS_DATA.TOTAL_HOURS_PER_DAY 
		--FROM #MY_DETAIL_DATA INNER JOIN #MY_HRS_DATA ON #MY_DETAIL_DATA.JOB_NUMBER = #MY_HRS_DATA.JOB_NUMBER AND #MY_DETAIL_DATA.JOB_COMPONENT_NBR = #MY_HRS_DATA.JOB_COMPONENT_NBR

		--FIX STUFF
		-- UNASSIGNED HOURS
		DECLARE
			@ROW_ROW_ID AS INT,
			@ROW_JOB_NUMBER AS INT,
			@ROW_JOB_COMPONENT_NBR AS INT,
			@ROW_TOTAL_UNASSIGNED_HOURS AS DECIMAL(18,6),
			@ROW_TOTAL_ASSIGNED_HOURS AS DECIMAL(18,6)

						DECLARE MY_ROWS                         CURSOR  
						FOR
							SELECT ROW_ID FROM #MY_DETAIL_DATA;

						OPEN MY_ROWS;
							FETCH NEXT FROM MY_ROWS INTO @ROW_ROW_ID;
							WHILE @@FETCH_STATUS = 0
							BEGIN
								--SET VARIABLES:
								SET @ROW_TOTAL_UNASSIGNED_HOURS = 00.000000;
								SET @ROW_TOTAL_ASSIGNED_HOURS = 00.000000;
								SELECT 
									@ROW_JOB_NUMBER = JOB_NUMBER,
									@ROW_JOB_COMPONENT_NBR = JOB_COMPONENT_NBR
								FROM #MY_DETAIL_DATA WHERE ROW_ID = @ROW_ROW_ID;
							
							--GET THE ASSIGNED HOURS:	
							SELECT     
								@ROW_TOTAL_ASSIGNED_HOURS = @ROW_TOTAL_ASSIGNED_HOURS + ISNULL(SUM(JOB_TRAFFIC_DET_EMPS.HOURS_ALLOWED), 00.000000) -- SUM_ASSIGNED_PROJECT_TASK_HOURS
							FROM         
								JOB_TRAFFIC_DET INNER JOIN
								JOB_COMPONENT ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
								JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
								JOB_TRAFFIC_DET_EMPS ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_EMPS.JOB_NUMBER AND 
								JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR AND 
								JOB_TRAFFIC_DET.SEQ_NBR = JOB_TRAFFIC_DET_EMPS.SEQ_NBR INNER JOIN
								JOB_TRAFFIC ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
								JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR
							WHERE     
								(JOB_TRAFFIC_DET.JOB_NUMBER = @ROW_JOB_NUMBER) AND (JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @ROW_JOB_COMPONENT_NBR)
								AND (JOB_COMPONENT.JOB_FIRST_USE_DATE BETWEEN @StartDate AND @EndDate 
								OR JOB_TRAFFIC_DET.JOB_REVISED_DATE BETWEEN @StartDate AND @EndDate ) 
								AND  JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12) AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL) 
							SELECT     
								@ROW_TOTAL_ASSIGNED_HOURS = @ROW_TOTAL_ASSIGNED_HOURS + ISNULL(SUM(EVENT_TASK.HOURS_ALLOWED),00.000000) -- SUM_ASSIGNED_EVENT_TASK_HOURS
							FROM         
								EVENT_TASK INNER JOIN
								EVENT ON EVENT_TASK.EVENT_ID = EVENT.EVENT_ID INNER JOIN
								JOB_COMPONENT ON EVENT.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
								EVENT.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
								JOB_TRAFFIC ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
								JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR								
							WHERE  NOT((EVENT_TASK.EMP_CODE IS NULL))   
								AND (EVENT.JOB_NUMBER = @ROW_JOB_NUMBER) 
								AND (EVENT.JOB_COMPONENT_NBR = @ROW_JOB_COMPONENT_NBR)  
								AND ((EVENT_TASK.END_TIME BETWEEN @EVT_START AND @EVT_END))
								AND  JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12) AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL) 
							--GET THE UNASSIGNED HOURS:
							SELECT     
								@ROW_TOTAL_UNASSIGNED_HOURS = @ROW_TOTAL_UNASSIGNED_HOURS + ISNULL(SUM(JOB_TRAFFIC_DET.JOB_HRS), 00.000000) -- SUM_UNASSIGNED_PROJECT_TASK_HOURS
							FROM         
								JOB_TRAFFIC_DET INNER JOIN
								JOB_COMPONENT ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
								JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
								JOB_TRAFFIC ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
								JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR	
							WHERE     
								(JOB_TRAFFIC_DET.EMP_CODE IS NULL) 
								AND JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12) AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL) 
								AND (JOB_TRAFFIC_DET.JOB_NUMBER = @ROW_JOB_NUMBER) 
								AND (JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @ROW_JOB_COMPONENT_NBR)
								AND ((JOB_COMPONENT.JOB_FIRST_USE_DATE BETWEEN @StartDate AND @EndDate)
								OR (JOB_TRAFFIC_DET.JOB_REVISED_DATE BETWEEN @StartDate AND @EndDate)) 
								
							SELECT     
								@ROW_TOTAL_UNASSIGNED_HOURS = @ROW_TOTAL_UNASSIGNED_HOURS + ISNULL(SUM(EVENT_TASK.HOURS_ALLOWED),00.000000)  -- SUM_UNASSIGNED_EVENT_TASK_HOURS
							FROM         
								EVENT_TASK INNER JOIN
								EVENT ON EVENT_TASK.EVENT_ID = EVENT.EVENT_ID INNER JOIN
								JOB_COMPONENT ON EVENT.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
								EVENT.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
								JOB_TRAFFIC ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
								JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR								
							WHERE  (EVENT_TASK.EMP_CODE IS NULL)   
								AND (EVENT.JOB_NUMBER = @ROW_JOB_NUMBER) 
								AND (EVENT.JOB_COMPONENT_NBR = @ROW_JOB_COMPONENT_NBR)  
								AND ((EVENT_TASK.END_TIME BETWEEN @EVT_START AND @EVT_END))
								AND  JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6,12) AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL) 


							UPDATE 	#MY_DETAIL_DATA SET TOTAL_HRS_UNASSIGNED = @ROW_TOTAL_UNASSIGNED_HOURS, TOTAL_HRS_ASSIGNED = @ROW_TOTAL_ASSIGNED_HOURS WHERE ROW_ID = @ROW_ROW_ID;
	
	    						
						    
		--			        --GO TO NEXT EVENT
							FETCH NEXT FROM MY_ROWS INTO @ROW_ROW_ID;
						END
		CLOSE MY_ROWS;
		DEALLOCATE MY_ROWS;


		

		SELECT  *
		FROM #MY_DETAIL_DATA ORDER BY JOB_NUMBER;

		DECLARE @REC_COUNT AS INT,@SHOW_UNASSIGNED_COL SMALLINT,@GRAND_TOTAL_UNASSIGNED DECIMAL(18,6)
		SELECT @REC_COUNT = ISNULL(COUNT(1),0) FROM #MY_DETAIL_DATA;
		SELECT @SHOW_UNASSIGNED_COL = SHOW_UNASSIGNED_COLUMN FROM #MY_DETAIL_DATA;
		SELECT @GRAND_TOTAL_UNASSIGNED = ISNULL(SUM(TOTAL_HRS_UNASSIGNED),00.000000) FROM #MY_DETAIL_DATA;
		SELECT TOP 1 
			ISNULL(GRAND_TOTAL_WORKING_DAYS,0) AS GRAND_TOTAL_WORKING_DAYS, 
			ISNULL(GRAND_TOTAL_WORKING_HOURS,00.000000) AS GRAND_TOTAL_WORKING_HOURS, 
			ISNULL(GRAND_TOTAL_AVAIL_WORKING_HOURS,00.000000) AS GRAND_TOTAL_AVAIL_WORKING_HOURS,
			ISNULL(GRAND_TOTAL_ADJ_JOB_HRS,00.000000) AS GRAND_TOTAL_ADJ_JOB_HRS,
			ISNULL(GRAND_TOTAL_APPT_HRS,00.000000) AS GRAND_TOTAL_APPT_HRS, 
			ISNULL(GRAND_TOTAL_EMP_COUNT,0) AS GRAND_TOTAL_EMP_COUNT, 
			ISNULL(@REC_COUNT,0) AS REC_COUNT,
			ISNULL(@SHOW_UNASSIGNED_COL,0) AS SHOW_UNASSIGNED, 
			ISNULL(@GRAND_TOTAL_UNASSIGNED,00.000000) AS GRAND_TOTAL_UNASSIGNED_HOURS,
			ISNULL(GRAND_TOTAL_HRS_OFF,00.000000) AS GRAND_TOTAL_HRS_OFF
		FROM #MY_HRS_DATA;
		


		DROP TABLE #W_WORKLOAD_TEMP;
		DROP TABLE #MY_HRS_DATA;
		DROP TABLE #MY_DETAIL_DATA;














SET QUOTED_IDENTIFIER ON 
