SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_dd_GetAllJobsAE]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_dd_GetAllJobsAE]
GO
CREATE PROCEDURE [dbo].[usp_wv_dd_GetAllJobsAE] /*WITH ENCRYPTION*/
@USER_CODE VARCHAR(100),
@INCLUDE_CLOSED_JOBS BIT,
@OBJECT_ID INT
AS
/*=========== QUERY ===========*/
	DECLARE
		@RESTRICTIONS INT, 
		@EMP_CODE VARCHAR(6),
		@EMPLOYEE_HAS_MGMT_RESTRICTIONS BIT,
		@SQL VARCHAR(MAX), @OfficeCount AS INTEGER;
	        
	SELECT @RESTRICTIONS = COUNT(*) 
	FROM SEC_CLIENT WITH(NOLOCK)
	WHERE UPPER(USER_ID) = UPPER(@USER_CODE);

	SELECT @EMP_CODE = EMP_CODE
	FROM SEC_USER WITH(NOLOCK)
	WHERE UPPER(USER_CODE) = UPPER(@USER_CODE);

	SELECT @EMPLOYEE_HAS_MGMT_RESTRICTIONS = [dbo].[fn_my_objects_employee_has_dynamic_restriction](@EMP_CODE, @OBJECT_ID); 

	SELECT @OfficeCount = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CODE;
	
	IF @OBJECT_ID IS NULL OR @OBJECT_ID = 0
	BEGIN
		
		SET @EMPLOYEE_HAS_MGMT_RESTRICTIONS = 0;
		
	END

	SET @SQL = '
	
			SELECT     
				JOB_LOG.JOB_NUMBER AS Code,
				LTRIM(STR(JOB_LOG.JOB_NUMBER)) + '' - '' +ISNULL(JOB_LOG.JOB_DESC, '''') + '' | '' + JOB_LOG.CL_CODE + '' - '' + JOB_LOG.DIV_CODE + '' - '' + JOB_LOG.PRD_CODE + '''' AS [Description]
			FROM         
				JOB_LOG
			
			'
	IF @RESTRICTIONS > 1
	BEGIN
		SET @SQL = @SQL + '	
			
				INNER JOIN SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
				JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE

			'
	END
	
	IF @EMPLOYEE_HAS_MGMT_RESTRICTIONS = 1
	BEGIN

		SET @SQL = @SQL + ' INNER JOIN [dbo].[fn_my_objects_get_dynamic_restrictions](' + CONVERT(VARCHAR, @OBJECT_ID) + ', ''' + @EMP_CODE + ''') AS DR ON DR.CL_CODE = JOB_LOG.CL_CODE 
							AND ((DR.DIV_CODE = JOB_LOG.DIV_CODE) OR (JOB_LOG.DIV_CODE IS NULL)) 
							AND ((DR.PRD_CODE = JOB_LOG.PRD_CODE) OR (JOB_LOG.PRD_CODE IS NULL)) ';
		
	END

	If @OfficeCount > 0
	BEGIN

		SET @SQL = @SQL + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''' '

	END
	
	SET @SQL = @SQL + '			

			WHERE  1 = 1   

			'
			
	IF @INCLUDE_CLOSED_JOBS = 0 OR @INCLUDE_CLOSED_JOBS IS NULL
	BEGIN
		SET @SQL = @SQL + '			

					AND (JOB_LOG.COMP_OPEN = 1) 

				'
	
	END		
	
	IF @RESTRICTIONS > 0
	BEGIN
		SET @SQL = @SQL + '			
				AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @USER_CODE + ''')) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)

			'
	END

	SET @SQL = @SQL + '	
			
			GROUP BY 
				JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC, 
				'
	IF @RESTRICTIONS > 0
	BEGIN
		SET @SQL = @SQL + '	
				
				SEC_CLIENT.USER_ID, 

					'
	END
	SET @SQL = @SQL + '	
			
				JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE
				
			ORDER BY 
				JOB_LOG.JOB_NUMBER DESC;

				'
	PRINT(@SQL);
	EXEC(@SQL);
/*=========== QUERY ===========*/
GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO