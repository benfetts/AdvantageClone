
CREATE PROCEDURE [dbo].[usp_wv_dd_GetAllJobs_NoShedules] 
@UserID VARCHAR(100),
@ClientCode VARCHAR(6) ,
@DivisionCode VARCHAR(6) ,
@ProductCode VARCHAR(6)
AS

	DECLARE @RESTRICTED    INT;

	CREATE TABLE #job
	(
		RowID        INT IDENTITY(1, 1),
		Code         INT,
		Comp         INT,
		DESCRIPTION  VARCHAR(1000)
	);

	SELECT @RESTRICTED = COUNT(*)
	FROM   SEC_CLIENT WITH(NOLOCK)
	WHERE  UPPER(USER_ID) = UPPER(@UserID);

	DECLARE @EMP_CODE AS VARCHAR(6)
	DECLARE @OfficeCount AS INTEGER

	SELECT @EMP_CODE = EMP_CODE FROM SEC_USER WHERE UPPER(USER_CODE) = UPPER(@UserID)

	SELECT @OfficeCount = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CODE

	IF @RESTRICTED > 0
		BEGIN
			If @OfficeCount = 0
			Begin
				INSERT INTO #job(Code,Comp,[DESCRIPTION])
				SELECT JOB_LOG.JOB_NUMBER AS Code,
					   JOB_COMPONENT.JOB_COMPONENT_NBR,
					   RTRIM(
						   LTRIM(
							   STR(JOB_LOG.JOB_NUMBER) + ' - ' + ISNULL(JOB_LOG.JOB_DESC, '')
						   )
					   ) + ' (' + JOB_LOG.CL_CODE + ',' + JOB_LOG.DIV_CODE + ',' + JOB_LOG.PRD_CODE 
					   + ')' AS DESCRIPTION
				FROM   JOB_LOG WITH(NOLOCK)
					   INNER JOIN JOB_COMPONENT WITH(NOLOCK)
							ON  JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
					   INNER JOIN SEC_CLIENT WITH(NOLOCK)
							ON  JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE
							AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE
							AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE
				WHERE  (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6, 12))
					   AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)
					AND (JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
					AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
					AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
				GROUP BY
					   JOB_LOG.JOB_NUMBER,
					   JOB_LOG.JOB_DESC,
					   SEC_CLIENT.USER_ID,
					   JOB_LOG.CL_CODE,
					   JOB_LOG.DIV_CODE,
					   JOB_LOG.PRD_CODE,
					   JOB_COMPONENT.JOB_COMPONENT_NBR
				ORDER BY
					   JOB_LOG.JOB_NUMBER DESC;
			End
			Else
			Begin
				INSERT INTO #job(Code,Comp,[DESCRIPTION])
				SELECT JOB_LOG.JOB_NUMBER AS Code,
					   JOB_COMPONENT.JOB_COMPONENT_NBR,
					   RTRIM(
						   LTRIM(
							   STR(JOB_LOG.JOB_NUMBER) + ' - ' + ISNULL(JOB_LOG.JOB_DESC, '')
						   )
					   ) + ' (' + JOB_LOG.CL_CODE + ',' + JOB_LOG.DIV_CODE + ',' + JOB_LOG.PRD_CODE 
					   + ')' AS DESCRIPTION
				FROM   JOB_LOG WITH(NOLOCK)
					   INNER JOIN JOB_COMPONENT WITH(NOLOCK)
							ON  JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
					   INNER JOIN SEC_CLIENT WITH(NOLOCK)
							ON  JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE
							AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE
							AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE
					   INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CODE
				WHERE  (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6, 12))
					   AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)
					AND (JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
					AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
					AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
				GROUP BY
					   JOB_LOG.JOB_NUMBER,
					   JOB_LOG.JOB_DESC,
					   SEC_CLIENT.USER_ID,
					   JOB_LOG.CL_CODE,
					   JOB_LOG.DIV_CODE,
					   JOB_LOG.PRD_CODE,
					   JOB_COMPONENT.JOB_COMPONENT_NBR
				ORDER BY
					   JOB_LOG.JOB_NUMBER DESC;
			End
			
		END
	ELSE
		BEGIN
			If @OfficeCount = 0
			Begin
				INSERT INTO #job(Code,Comp,[DESCRIPTION])
				SELECT JOB_LOG.JOB_NUMBER AS Code,
					   JOB_COMPONENT.JOB_COMPONENT_NBR,
					   RTRIM(
						   LTRIM(
							   STR(JOB_LOG.JOB_NUMBER) + ' - ' + ISNULL(JOB_LOG.JOB_DESC, '')
						   )
					   ) + ' (' + JOB_LOG.CL_CODE + ',' + JOB_LOG.DIV_CODE + ',' + JOB_LOG.PRD_CODE 
					   + ')' AS DESCRIPTION
				FROM   JOB_LOG WITH(NOLOCK)
					   INNER JOIN JOB_COMPONENT WITH(NOLOCK)
							ON  JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
				WHERE  (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6, 12))
					AND (JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
					AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
					AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
				GROUP BY
					   JOB_LOG.JOB_NUMBER,
					   JOB_LOG.JOB_DESC,
					   JOB_LOG.CL_CODE,
					   JOB_LOG.DIV_CODE,
					   JOB_LOG.PRD_CODE,
					   JOB_COMPONENT.JOB_COMPONENT_NBR
				ORDER BY
					   JOB_LOG.JOB_NUMBER DESC;
			End
			Else
			Begin
				INSERT INTO #job(Code,Comp,[DESCRIPTION])
				SELECT JOB_LOG.JOB_NUMBER AS Code,
					   JOB_COMPONENT.JOB_COMPONENT_NBR,
					   RTRIM(
						   LTRIM(
							   STR(JOB_LOG.JOB_NUMBER) + ' - ' + ISNULL(JOB_LOG.JOB_DESC, '')
						   )
					   ) + ' (' + JOB_LOG.CL_CODE + ',' + JOB_LOG.DIV_CODE + ',' + JOB_LOG.PRD_CODE 
					   + ')' AS DESCRIPTION
				FROM   JOB_LOG WITH(NOLOCK)
					   INNER JOIN JOB_COMPONENT WITH(NOLOCK)
							ON  JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
					   INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CODE
				WHERE  (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6, 12))
					AND (JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
					AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
					AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
				GROUP BY
					   JOB_LOG.JOB_NUMBER,
					   JOB_LOG.JOB_DESC,
					   JOB_LOG.CL_CODE,
					   JOB_LOG.DIV_CODE,
					   JOB_LOG.PRD_CODE,
					   JOB_COMPONENT.JOB_COMPONENT_NBR
				ORDER BY
					   JOB_LOG.JOB_NUMBER DESC;
			End
			
		END

	SELECT #job.Code, #job.[DESCRIPTION] 
	FROM   #job WITH(NOLOCK)
		   LEFT OUTER JOIN JOB_TRAFFIC WITH(NOLOCK)
				ON  #job.Code = JOB_TRAFFIC.JOB_NUMBER
				AND #job.Comp = JOB_TRAFFIC.JOB_COMPONENT_NBR
	WHERE  JOB_TRAFFIC.JOB_NUMBER IS NULL
	GROUP BY
		   #job.Code,
		   #job.[DESCRIPTION]
	ORDER BY
		   #job.Code DESC;

	DROP TABLE #job;


