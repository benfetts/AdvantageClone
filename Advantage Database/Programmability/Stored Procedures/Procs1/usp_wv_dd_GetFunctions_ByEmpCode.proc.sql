--DROP PROCEDURE [dbo].[usp_wv_dd_GetFunctions_ByEmpCode]
CREATE PROCEDURE [dbo].[usp_wv_dd_GetFunctions_ByEmpCode]
@EMP_CODE	VARCHAR(6),
@JOB_NUMBER INT,
@CL_CODE VARCHAR(6)
AS
BEGIN	
	DECLARE 
		@LIMIT_TS_FNC BIT,
		@SEC_USER_ID INT,
		@LIMIT_BY_CLIENT BIT;
	SET @LIMIT_BY_CLIENT = 0;
	SET @LIMIT_TS_FNC = 0;
	DECLARE @FUNCTIONS TABLE (Code VARCHAR(10) COLLATE SQL_Latin1_General_CP1_CS_AS, [DESCRIPTION] VARCHAR(150), DescriptionOnly VARCHAR(100));
	SELECT @SEC_USER_ID = (SELECT TOP 1 SEC_USER_ID FROM [dbo].[SEC_USER] WHERE UPPER(EMP_CODE) = UPPER(@EMP_CODE));
	IF EXISTS(SELECT 1 FROM [dbo].[SEC_USER_SETTING] WHERE SEC_USER_ID = @SEC_USER_ID AND SETTING_CODE = 'EMP_TS_FNC' AND STRING_VALUE = 'Y') 
	BEGIN
		SET @LIMIT_TS_FNC = 1;
	END

	IF (@CL_CODE IS NULL OR DATALENGTH(@CL_CODE) = 0) AND (NOT @JOB_NUMBER IS NULL AND @JOB_NUMBER > 0)
	BEGIN
		SELECT @CL_CODE = CL_CODE FROM JOB_LOG WHERE JOB_NUMBER = @JOB_NUMBER;
	END
	IF NOT @CL_CODE IS NULL AND DATALENGTH(@CL_CODE) > 0
	BEGIN
		SELECT @LIMIT_BY_CLIENT = CAST(ISNULL(LIMIT_TIME_FUNCTIONS_TO_BILLING_HIERARCHY, 0) AS BIT) FROM CLIENT WHERE CL_CODE = @CL_CODE;
	END

	IF @LIMIT_TS_FNC = 1
	BEGIN
		INSERT INTO @FUNCTIONS
	    SELECT FUNCTIONS.FNC_CODE AS Code,
	           FUNCTIONS.FNC_CODE + ' - ' + ISNULL(FUNCTIONS.FNC_DESCRIPTION, '') AS [DESCRIPTION],
	           ISNULL(FUNCTIONS.FNC_DESCRIPTION, '') AS DescriptionOnly
	    FROM   EMP_TS_FNC WITH(NOLOCK)
	           INNER JOIN FUNCTIONS WITH(NOLOCK)
	                ON  EMP_TS_FNC.FNC_CODE = FUNCTIONS.FNC_CODE
	    WHERE  (FUNCTIONS.FNC_TYPE = 'E')
	           AND (
	                   EMP_TS_FNC.EMP_CODE = @EMP_CODE
	                   AND (
	                           FUNCTIONS.FNC_INACTIVE = 0
	                           OR FUNCTIONS.FNC_INACTIVE IS NULL
	                       )
	               )
	END
	ELSE
	BEGIN
		INSERT INTO @FUNCTIONS
	    SELECT FNC_CODE AS Code,
	           FNC_CODE + ' - ' + ISNULL(FNC_DESCRIPTION, '') AS [DESCRIPTION],
	           ISNULL(FUNCTIONS.FNC_DESCRIPTION, '') AS DescriptionOnly
	    FROM   FUNCTIONS WITH(NOLOCK)
	    WHERE  FNC_TYPE = 'E'
	           AND (
	                   FUNCTIONS.FNC_INACTIVE = 0
	                   OR FUNCTIONS.FNC_INACTIVE IS NULL
	               )
	END
	IF NOT @LIMIT_BY_CLIENT IS NULL AND @LIMIT_BY_CLIENT = 1
	BEGIN
		SELECT DISTINCT F.* FROM @FUNCTIONS F INNER JOIN BILLING_RATE BR ON F.Code = BR.FNC_CODE WHERE BR.CL_CODE = @CL_CODE;
	END
	ELSE
	BEGIN
		SELECT DISTINCT F.* FROM @FUNCTIONS F;
	END

END