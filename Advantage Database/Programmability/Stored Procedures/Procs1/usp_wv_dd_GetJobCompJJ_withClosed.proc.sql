if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_dd_GetJobCompJJ_withClosed]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_dd_GetJobCompJJ_withClosed]
GO




CREATE PROCEDURE [dbo].[usp_wv_dd_GetJobCompJJ_withClosed] 
@UserID VARCHAR(100),
@ClientCode VARCHAR(6), 
@DivisionCode VARCHAR(6), 
@ProductCode VARCHAR(6), 
@Job INT,
@OfficeCode VARCHAR(4),
@SalesClass VarChar(6)
AS
DECLARE 
@Restrictions INT

DECLARE @EMP_CODE AS VARCHAR(6)
DECLARE @OfficeCount AS INTEGER

SELECT @EMP_CODE = EMP_CODE FROM SEC_USER WHERE UPPER(USER_CODE) = UPPER(@UserID)

SELECT @OfficeCount = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CODE

SELECT @Restrictions = COUNT(*) FROM SEC_CLIENT WHERE UPPER(USER_ID) = UPPER(@UserID)

IF @Restrictions > 0 
    BEGIN
        IF @Job <> 0
            BEGIN
				IF @OfficeCount = 0
					Begin
						SELECT     
							JOB_COMPONENT.JOB_COMPONENT_NBR AS Code,  STR(JOB_COMPONENT.JOB_COMPONENT_NBR) + ' - ' + JOB_COMPONENT.JOB_COMP_DESC AS Description
						FROM         
							JOB_LOG INNER JOIN
							JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
							SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
							JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE
						WHERE     
							(JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
							AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
							AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
							AND (JOB_LOG.OFFICE_CODE LIKE @OfficeCode + '%')
							AND (JOB_COMPONENT.JOB_NUMBER = @Job)
							AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)
						ORDER BY 
							JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR ASC        	 
					End
				Else
					Begin
						SELECT     
							JOB_COMPONENT.JOB_COMPONENT_NBR AS Code,  STR(JOB_COMPONENT.JOB_COMPONENT_NBR) + ' - ' + JOB_COMPONENT.JOB_COMP_DESC AS Description
						FROM         
							JOB_LOG INNER JOIN
							JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
							SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
							JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CODE
						WHERE     
							(JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
							AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
							AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
							AND (JOB_LOG.OFFICE_CODE LIKE @OfficeCode + '%')
							AND (JOB_COMPONENT.JOB_NUMBER = @Job)
							AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)
						ORDER BY 
							JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR ASC 
					End	
                
            END
        ELSE
            BEGIN
				IF @OfficeCount = 0
					Begin
						SELECT     
							STR(JOB_LOG.JOB_NUMBER) + '-' + ltrim(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) AS Code,  STR(JOB_LOG.JOB_NUMBER) + '-' + ltrim(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) + ' | ' + JOB_COMPONENT.JOB_COMP_DESC AS Description
						FROM         
							JOB_LOG INNER JOIN
							JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
							SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
							JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE
						WHERE     
							(JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
							AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
							AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
							AND (JOB_LOG.OFFICE_CODE LIKE @OfficeCode + '%')
							--AND (JOB_COMPONENT.JOB_NUMBER = @Job)
							AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)
						ORDER BY 
							JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR ASC      
					End
				Else
					Begin
						SELECT     
							STR(JOB_LOG.JOB_NUMBER) + '-' + ltrim(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) AS Code,  STR(JOB_LOG.JOB_NUMBER) + '-' + ltrim(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) + ' | ' + JOB_COMPONENT.JOB_COMP_DESC AS Description
						FROM         
							JOB_LOG INNER JOIN
							JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
							SEC_CLIENT ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
							JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CODE
						WHERE     
							(JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
							AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
							AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
							AND (JOB_LOG.OFFICE_CODE LIKE @OfficeCode + '%')
							--AND (JOB_COMPONENT.JOB_NUMBER = @Job)
							AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)
						ORDER BY 
							JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR ASC 
					End	
                        
            END    
        
    END
ELSE
    BEGIN
        IF @Job <> 0
            BEGIN
				IF @OfficeCount = 0
					Begin
						SELECT     
							JOB_COMPONENT.JOB_COMPONENT_NBR AS Code,  STR(JOB_COMPONENT.JOB_COMPONENT_NBR) + ' - ' + JOB_COMPONENT.JOB_COMP_DESC AS Description
						FROM         
							JOB_LOG INNER JOIN
							JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
						WHERE     
							(JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
							AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
							AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
							AND (JOB_LOG.OFFICE_CODE LIKE @OfficeCode + '%')
							AND (JOB_COMPONENT.JOB_NUMBER = @Job)
						ORDER BY 
							JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR ASC  	 
					End
				Else
					Begin
						SELECT     
							JOB_COMPONENT.JOB_COMPONENT_NBR AS Code,  STR(JOB_COMPONENT.JOB_COMPONENT_NBR) + ' - ' + JOB_COMPONENT.JOB_COMP_DESC AS Description
						FROM         
							JOB_LOG INNER JOIN
							JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CODE
						WHERE     
							(JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
							AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
							AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
							AND (JOB_LOG.OFFICE_CODE LIKE @OfficeCode + '%')
							AND (JOB_COMPONENT.JOB_NUMBER = @Job)
						ORDER BY 
							JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR ASC 
					End	
                
            END
        ELSE
            BEGIN
				IF @OfficeCount = 0
					Begin
						SELECT     
							STR(JOB_LOG.JOB_NUMBER) + '-' + ltrim(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) AS Code,  STR(JOB_LOG.JOB_NUMBER) + '-' + ltrim(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) + ' | ' + JOB_COMPONENT.JOB_COMP_DESC AS Description
						FROM         
							JOB_LOG INNER JOIN
							JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
						WHERE     
							(JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
							AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
							AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
							AND (JOB_LOG.OFFICE_CODE LIKE @OfficeCode + '%')
							--AND (JOB_COMPONENT.JOB_NUMBER = @Job)
						ORDER BY 
							JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR ASC      
					End
				Else
					Begin
						SELECT     
							STR(JOB_LOG.JOB_NUMBER) + '-' + ltrim(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) AS Code,  STR(JOB_LOG.JOB_NUMBER) + '-' + ltrim(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) + ' | ' + JOB_COMPONENT.JOB_COMP_DESC AS Description
						FROM         
							JOB_LOG INNER JOIN
							JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CODE
						WHERE     
							(JOB_LOG.CL_CODE LIKE @ClientCode + '%') 
							AND (JOB_LOG.DIV_CODE LIKE @DivisionCode + '%') 
							AND (JOB_LOG.PRD_CODE LIKE @ProductCode + '%')
							AND (JOB_LOG.OFFICE_CODE LIKE @OfficeCode + '%')
							--AND (JOB_COMPONENT.JOB_NUMBER = @Job)
						ORDER BY 
							JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR ASC     
					End	
                        
            END
        
    END














