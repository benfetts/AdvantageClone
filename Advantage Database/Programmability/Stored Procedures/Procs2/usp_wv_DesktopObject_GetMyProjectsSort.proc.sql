SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_DesktopObject_GetMyProjectsSort]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_DesktopObject_GetMyProjectsSort]
GO
CREATE PROCEDURE [dbo].[usp_wv_DesktopObject_GetMyProjectsSort] /*WITH ENCRYPTION*/
@EmpCode AS VARCHAR(6),
@SortVal AS VARCHAR(15),
@Search AS VARCHAR(500),
@CP AS INT,
@CPID AS INT
AS
/*=========== QUERY ===========*/
	SET NOCOUNT ON

	DECLARE @OfficeRestrictions INT
	--DECLARE @EMP_CODE AS VARCHAR(6)

	SELECT @OfficeRestrictions = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EmpCode

	CREATE TABLE #myprojects
	( 	
		ClientCode VARCHAR(6) NULL,
		DivCode VARCHAR(6) NULL,
		ProductCode VARCHAR(6) NULL,
		CDP VARCHAR(24) NULL,
		Job VARCHAR(100) NULL,
		JobComp VARCHAR(100) NULL,
		JobAndComp VARCHAR(500) NULL,
		StartDate DATETIME NULL,
		DueDate DATETIME NULL,
		Status VARCHAR(50) NULL,
		AE VARCHAR(100) NULL,
		AECode VARCHAR(6) NULL,
		JobNo INT NULL, 
		JobCompNo INT NULL, 
		TrafficCount INT NULL
	);

	DECLARE
		@SQL VARCHAR(MAX);

	IF @CP = 1
		BEGIN
		
			INSERT INTO #myprojects
			SELECT 
				JOB_LOG.CL_CODE AS ClientCode, 
				JOB_LOG.DIV_CODE AS DivCode, 
				JOB_LOG.PRD_CODE AS ProductCode, 
				JOB_LOG.CL_CODE+'/'+JOB_LOG.DIV_CODE+'/'+JOB_LOG.PRD_CODE AS CDP, 
				LTRIM(STR(JOB_LOG.JOB_NUMBER)) + ' - ' + JOB_LOG.JOB_DESC AS Job, 
				LTRIM(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) + ' - ' + JOB_COMPONENT.JOB_COMP_DESC AS JobComp, 
				RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20),ISNULL(JOB_LOG.JOB_NUMBER,0)), 6) + '-' + RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), ISNULL(JOB_COMPONENT.JOB_COMPONENT_NBR,0)), 3)+ '  ' + ISNULL(JOB_COMPONENT.JOB_COMP_DESC, '') AS JobAndComp, 
				JOB_COMPONENT.START_DATE AS StartDate, 
				JOB_COMPONENT.JOB_FIRST_USE_DATE AS DueDate, 
				TRAFFIC.TRF_DESCRIPTION AS Status, 
				dbo.udf_get_empl_name(JOB_COMPONENT.EMP_CODE, 'FML') AS AE, 
				JOB_COMPONENT.EMP_CODE AS AECode,
				JOB_LOG.JOB_NUMBER AS JobNo, 
				JOB_COMPONENT.JOB_COMPONENT_NBR AS JobCompNo, 0
			FROM 
				JOB_TRAFFIC_DET WITH(NOLOCK)
				INNER JOIN JOB_TRAFFIC WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER  
				AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR 
				INNER JOIN JOB_LOG WITH(NOLOCK) ON JOB_TRAFFIC.JOB_NUMBER = JOB_LOG.JOB_NUMBER 
				INNER JOIN JOB_COMPONENT WITH(NOLOCK) ON JOB_TRAFFIC.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER  
				AND JOB_TRAFFIC.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR 
				INNER JOIN TRAFFIC WITH(NOLOCK) ON JOB_TRAFFIC.TRF_CODE = TRAFFIC.TRF_CODE 
				INNER JOIN EMPLOYEE WITH(NOLOCK) ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE 
				INNER JOIN CP_SEC_CLIENT WITH(NOLOCK) ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND 
				JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = dbo.CP_SEC_CLIENT.PRD_CODE
				LEFT OUTER JOIN JOB_TRAFFIC_DET_EMPS WITH(NOLOCK) ON JOB_TRAFFIC_DET_EMPS.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER 
				AND JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR
				AND JOB_TRAFFIC_DET_EMPS.SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR
				LEFT OUTER JOIN EMAIL_GROUP WITH(NOLOCK) ON EMAIL_GROUP.EMAIL_GR_CODE = JOB_COMPONENT.EMAIL_GR_CODE
			WHERE  
				((NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
				AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL)) AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)
			GROUP BY 
				JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, LTRIM(STR(JOB_LOG.JOB_NUMBER)) + ' - ' + JOB_LOG.JOB_DESC,  JOB_LOG.JOB_NUMBER,
				LTRIM(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) + ' - ' + JOB_COMPONENT.JOB_COMP_DESC, JOB_COMPONENT.START_DATE, 
				JOB_COMPONENT.JOB_FIRST_USE_DATE, TRAFFIC.TRF_DESCRIPTION, EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME,
				JOB_COMPONENT.EMP_CODE, JOB_LOG.JOB_NUMBER, JOB_COMPONENT.JOB_COMPONENT_NBR,
				JOB_LOG.JOB_DESC, JOB_COMPONENT.JOB_COMP_DESC;
			
		END
	ELSE
		BEGIN
		
			DECLARE @EMPLOYEE_HAS_MGMT_RESTRICTIONS BIT
			SELECT @EMPLOYEE_HAS_MGMT_RESTRICTIONS = [dbo].[fn_my_objects_employee_has_dynamic_restriction](@EmpCode, 6); 
			
			SET @SQL = ' INSERT INTO #myprojects ';
			SET @SQL = @SQL + ' SELECT DISTINCT ';
			SET @SQL = @SQL + ' 	JOB_LOG.CL_CODE AS ClientCode, ';
			SET @SQL = @SQL + ' 	JOB_LOG.DIV_CODE AS DivCode, '; 
			SET @SQL = @SQL + ' 	JOB_LOG.PRD_CODE AS ProductCode, ';
			SET @SQL = @SQL + ' 	JOB_LOG.CL_CODE+''/''+JOB_LOG.DIV_CODE+''/''+JOB_LOG.PRD_CODE AS CDP, ';
			SET @SQL = @SQL + ' 	LTRIM(STR(JOB_LOG.JOB_NUMBER)) + '' - '' + JOB_LOG.JOB_DESC AS Job, ';
			SET @SQL = @SQL + ' 	LTRIM(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) + '' - '' + JOB_COMPONENT.JOB_COMP_DESC AS JobComp, ';
			SET @SQL = @SQL + ' 	RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20),ISNULL(JOB_LOG.JOB_NUMBER,0)), 6) + ''-'' + RIGHT(REPLICATE(''0'', 3) + CONVERT(VARCHAR(20), ISNULL(JOB_COMPONENT.JOB_COMPONENT_NBR,0)), 3)+ ''  '' + ISNULL(JOB_COMPONENT.JOB_COMP_DESC, '''') AS JobAndComp, ';
			SET @SQL = @SQL + ' 	JOB_COMPONENT.START_DATE AS StartDate, ';
			SET @SQL = @SQL + ' 	JOB_COMPONENT.JOB_FIRST_USE_DATE AS DueDate, ';
			SET @SQL = @SQL + ' 	TRAFFIC.TRF_DESCRIPTION AS Status, ';
			SET @SQL = @SQL + ' 	dbo.udf_get_empl_name(JOB_COMPONENT.EMP_CODE, ''FML'') AS AE, ';
			SET @SQL = @SQL + ' 	JOB_COMPONENT.EMP_CODE AS AECode, ';
			SET @SQL = @SQL + ' 	JOB_LOG.JOB_NUMBER AS JobNo, ';
			SET @SQL = @SQL + ' 	JOB_COMPONENT.JOB_COMPONENT_NBR AS JobCompNo, 0 ';
			SET @SQL = @SQL + ' FROM ';
			SET @SQL = @SQL + ' 	JOB_TRAFFIC_DET WITH(NOLOCK) ';
			SET @SQL = @SQL + ' 	INNER JOIN JOB_TRAFFIC WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER ';
			SET @SQL = @SQL + ' 	AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR ';
			SET @SQL = @SQL + ' 	INNER JOIN JOB_LOG WITH(NOLOCK) ON JOB_TRAFFIC.JOB_NUMBER = JOB_LOG.JOB_NUMBER ';
			SET @SQL = @SQL + ' 	INNER JOIN JOB_COMPONENT WITH(NOLOCK) ON JOB_TRAFFIC.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER ';
			SET @SQL = @SQL + ' 	AND JOB_TRAFFIC.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR ';
			SET @SQL = @SQL + ' 	INNER JOIN TRAFFIC WITH(NOLOCK) ON JOB_TRAFFIC.TRF_CODE = TRAFFIC.TRF_CODE ';
			SET @SQL = @SQL + ' 	INNER JOIN EMPLOYEE WITH(NOLOCK) ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE ';
			SET @SQL = @SQL + ' 	LEFT OUTER JOIN JOB_TRAFFIC_DET_EMPS WITH(NOLOCK) ON JOB_TRAFFIC_DET_EMPS.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER ';
			SET @SQL = @SQL + ' 	AND JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR ';
			SET @SQL = @SQL + ' 	AND JOB_TRAFFIC_DET_EMPS.SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR ';
			SET @SQL = @SQL + ' 	LEFT OUTER JOIN EMAIL_GROUP WITH(NOLOCK) ON EMAIL_GROUP.EMAIL_GR_CODE = JOB_COMPONENT.EMAIL_GR_CODE ';
			IF @OfficeRestrictions > 0
			Begin
				SET @SQL = @SQL + ' INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EmpCode + ''''
			End
			SET @SQL = @SQL + ' WHERE ';
			SET @SQL = @SQL + ' 	((NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12))) ';
			SET @SQL = @SQL + ' 	AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL)) ';
			
			DECLARE
				@RESTRICT_ALERT_GROUP BIT,
				@RESTRICT_SCHEDULE_ASSIGNMENTS BIT,
				@RESTRICT_SCHEDULE_MANAGER BIT,
				@RESTRICT_TASK_ASSIGNEES BIT,
				@RESTRICT_ACCOUNT_EXECUTIVE BIT,
				@AGENCY_MANAGER_COLUMN VARCHAR(40),
				@JOB_TRAFFIC_MANAGER_COLUMN VARCHAR(40),
				@HAS_ACTIVE_RESTRICTION BIT,
				@NEEDS_OR BIT;
				
			SELECT 
				@RESTRICT_ALERT_GROUP = A.ALERT_GROUP,
				@RESTRICT_SCHEDULE_ASSIGNMENTS = A.SCHEDULE_ASSIGNMENTS,
				@RESTRICT_SCHEDULE_MANAGER = A.SCHEDULE_MANAGER,
				@RESTRICT_TASK_ASSIGNEES = A.TASK_ASSIGNEES,
				@RESTRICT_ACCOUNT_EXECUTIVE = A.ACCOUNT_EXECUTIVE,
				@AGENCY_MANAGER_COLUMN = A.AGENCY_MANAGER_COLUMN,
				@JOB_TRAFFIC_MANAGER_COLUMN = JOB_TRAFFIC_MANAGER_COLUMN,
				@HAS_ACTIVE_RESTRICTION = A.HAS_ACTIVE_RESTRICTION
			FROM 
				[dbo].[fn_my_objects_get_static_restrictions](6) AS A;
			
			IF @HAS_ACTIVE_RESTRICTION = 1
			BEGIN
			
				SET @SQL = @SQL + ' AND ( ';
				SET @NEEDS_OR = 0;
			
				
				IF @RESTRICT_TASK_ASSIGNEES = 1
				BEGIN	
				
					IF @NEEDS_OR = 1
					BEGIN
					
						SET @SQL = @SQL + ' OR ';
						
					END	
				
					SET @SQL = @SQL + ' 	(JOB_TRAFFIC_DET_EMPS.EMP_CODE = ''' + @EmpCode + ''') ';
					SET @NEEDS_OR = 1;
					
				END
				IF @RESTRICT_ACCOUNT_EXECUTIVE = 1
				BEGIN
				
					IF @NEEDS_OR = 1
					BEGIN
					
						SET @SQL = @SQL + ' OR ';
						
					END	
				
					SET @SQL = @SQL + ' 	(JOB_COMPONENT.EMP_CODE = ''' + @EmpCode + ''') ';
					SET @NEEDS_OR = 1;
			
				END
				IF @RESTRICT_ALERT_GROUP = 1
				BEGIN
				
					IF @NEEDS_OR = 1
					BEGIN
					
						SET @SQL = @SQL + ' OR ';
						
					END	
				
					SET @SQL = @SQL + ' 	(EMAIL_GROUP.EMP_CODE = ''' + @EmpCode + ''') ';
					SET @NEEDS_OR = 1;
					
				END	
				IF @RESTRICT_SCHEDULE_ASSIGNMENTS = 1
				BEGIN
				
					IF @NEEDS_OR = 1
					BEGIN
					
						SET @SQL = @SQL + ' OR ';
						
					END	
				
					SET @SQL = @SQL + ' 	(JOB_TRAFFIC.ASSIGN_1 = ''' + @EmpCode + '''';
					SET @SQL = @SQL + ' 	OR JOB_TRAFFIC.ASSIGN_2 = ''' + @EmpCode + '''';
					SET @SQL = @SQL + ' 	OR JOB_TRAFFIC.ASSIGN_3 = ''' + @EmpCode + '''';
					SET @SQL = @SQL + ' 	OR JOB_TRAFFIC.ASSIGN_4 = ''' + @EmpCode + '''';
					SET @SQL = @SQL + ' 	OR JOB_TRAFFIC.ASSIGN_5 = ''' + @EmpCode + ''')';			
					SET @NEEDS_OR = 1;
					
				END
				IF @RESTRICT_SCHEDULE_MANAGER = 1
				BEGIN
				
					IF @NEEDS_OR = 1
					BEGIN
					
						SET @SQL = @SQL + ' OR ';
						
					END	
				
					SET @SQL = @SQL + ' 	(JOB_TRAFFIC.' + @JOB_TRAFFIC_MANAGER_COLUMN + ' = ''' + @EmpCode + ''')';
					SET @NEEDS_OR = 1;
					
				END	
					
				SET @SQL = @SQL + ' ) '
	
			END
			ELSE
			BEGIN
				
				SET @SQL = @SQL + ' AND (0 = 1) '

			END
			
			SET @SQL = @SQL + ' GROUP BY ';
			SET @SQL = @SQL + ' 	JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, LTRIM(STR(JOB_LOG.JOB_NUMBER)) + '' - '' + JOB_LOG.JOB_DESC,  JOB_LOG.JOB_NUMBER, ';
			SET @SQL = @SQL + ' 	LTRIM(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) + '' - '' + JOB_COMPONENT.JOB_COMP_DESC, JOB_COMPONENT.START_DATE, ';
			SET @SQL = @SQL + ' 	JOB_COMPONENT.JOB_FIRST_USE_DATE, TRAFFIC.TRF_DESCRIPTION, EMPLOYEE.EMP_FNAME + '' '' + EMPLOYEE.EMP_LNAME, ';
			SET @SQL = @SQL + ' 	JOB_COMPONENT.EMP_CODE, JOB_LOG.JOB_NUMBER, JOB_COMPONENT.JOB_COMPONENT_NBR, ';
			SET @SQL = @SQL + ' 	JOB_LOG.JOB_DESC, JOB_COMPONENT.JOB_COMP_DESC ';
			--SET @SQL = @SQL + ' ;'

			IF @EMPLOYEE_HAS_MGMT_RESTRICTIONS = 1
			BEGIN

				--SET @SQL = @SQL + ' INSERT INTO #myprojects ';
				SET @SQL = @SQL + ' UNION ';
				SET @SQL = @SQL + ' SELECT DISTINCT ';
				SET @SQL = @SQL + ' 	JOB_LOG.CL_CODE AS ClientCode, ';
				SET @SQL = @SQL + ' 	JOB_LOG.DIV_CODE AS DivCode, '; 
				SET @SQL = @SQL + ' 	JOB_LOG.PRD_CODE AS ProductCode, ';
				SET @SQL = @SQL + ' 	JOB_LOG.CL_CODE+''/''+JOB_LOG.DIV_CODE+''/''+JOB_LOG.PRD_CODE AS CDP, ';
				SET @SQL = @SQL + ' 	LTRIM(STR(JOB_LOG.JOB_NUMBER)) + '' - '' + JOB_LOG.JOB_DESC AS Job, ';
				SET @SQL = @SQL + ' 	LTRIM(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) + '' - '' + JOB_COMPONENT.JOB_COMP_DESC AS JobComp, ';
				SET @SQL = @SQL + ' 	RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20),ISNULL(JOB_LOG.JOB_NUMBER,0)), 6) + ''-'' + RIGHT(REPLICATE(''0'', 3) + CONVERT(VARCHAR(20), ISNULL(JOB_COMPONENT.JOB_COMPONENT_NBR,0)), 3)+ ''  '' + ISNULL(JOB_COMPONENT.JOB_COMP_DESC, '''') AS JobAndComp, ';
				SET @SQL = @SQL + ' 	JOB_COMPONENT.START_DATE AS StartDate, ';
				SET @SQL = @SQL + ' 	JOB_COMPONENT.JOB_FIRST_USE_DATE AS DueDate, ';
				SET @SQL = @SQL + ' 	TRAFFIC.TRF_DESCRIPTION AS Status, ';
				SET @SQL = @SQL + ' 	dbo.udf_get_empl_name(JOB_COMPONENT.EMP_CODE, ''FML'') AS AE, ';
				SET @SQL = @SQL + ' 	JOB_COMPONENT.EMP_CODE AS AECode, ';
				SET @SQL = @SQL + ' 	JOB_LOG.JOB_NUMBER AS JobNo, ';
				SET @SQL = @SQL + ' 	JOB_COMPONENT.JOB_COMPONENT_NBR AS JobCompNo, 0 ';
				SET @SQL = @SQL + ' FROM ';
				SET @SQL = @SQL + ' 	JOB_TRAFFIC_DET WITH(NOLOCK) ';
				SET @SQL = @SQL + ' 	INNER JOIN JOB_TRAFFIC WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER ';
				SET @SQL = @SQL + ' 	AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR ';
				SET @SQL = @SQL + ' 	INNER JOIN JOB_LOG WITH(NOLOCK) ON JOB_TRAFFIC.JOB_NUMBER = JOB_LOG.JOB_NUMBER ';
				SET @SQL = @SQL + ' 	INNER JOIN JOB_COMPONENT WITH(NOLOCK) ON JOB_TRAFFIC.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER ';
				SET @SQL = @SQL + ' 	AND JOB_TRAFFIC.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR ';
				SET @SQL = @SQL + ' 	INNER JOIN TRAFFIC WITH(NOLOCK) ON JOB_TRAFFIC.TRF_CODE = TRAFFIC.TRF_CODE ';
				SET @SQL = @SQL + ' 	INNER JOIN EMPLOYEE WITH(NOLOCK) ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE ';
				SET @SQL = @SQL + ' 	LEFT OUTER JOIN JOB_TRAFFIC_DET_EMPS WITH(NOLOCK) ON JOB_TRAFFIC_DET_EMPS.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER ';
				SET @SQL = @SQL + ' 	AND JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR ';
				SET @SQL = @SQL + ' 	AND JOB_TRAFFIC_DET_EMPS.SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR ';
				SET @SQL = @SQL + ' 	LEFT OUTER JOIN EMAIL_GROUP WITH(NOLOCK) ON EMAIL_GROUP.EMAIL_GR_CODE = JOB_COMPONENT.EMAIL_GR_CODE ';
				IF @OfficeRestrictions > 0
				Begin
					SET @SQL = @SQL + ' INNER JOIN EMP_OFFICE ON EMP_OFFICE.OFFICE_CODE = JOB_LOG.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EmpCode + ''''
				End
					SET @SQL = @SQL + ' INNER JOIN [dbo].[fn_my_objects_get_dynamic_restrictions](6, ''' + @EmpCode + ''') AS DR 
										ON DR.CL_CODE = JOB_LOG.CL_CODE 
										AND ((DR.DIV_CODE = JOB_LOG.DIV_CODE) OR (DR.DIV_CODE IS NULL)) 
										AND ((DR.PRD_CODE = JOB_LOG.PRD_CODE) OR (DR.PRD_CODE IS NULL)) ';
			
				SET @SQL = @SQL + ' WHERE ';
				SET @SQL = @SQL + ' 	((NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12))) ';
				SET @SQL = @SQL + ' 	AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL)) ';

				SET @SQL = @SQL + ' GROUP BY ';
				SET @SQL = @SQL + ' 	JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, LTRIM(STR(JOB_LOG.JOB_NUMBER)) + '' - '' + JOB_LOG.JOB_DESC,  JOB_LOG.JOB_NUMBER, ';
				SET @SQL = @SQL + ' 	LTRIM(STR(JOB_COMPONENT.JOB_COMPONENT_NBR)) + '' - '' + JOB_COMPONENT.JOB_COMP_DESC, JOB_COMPONENT.START_DATE, ';
				SET @SQL = @SQL + ' 	JOB_COMPONENT.JOB_FIRST_USE_DATE, TRAFFIC.TRF_DESCRIPTION, EMPLOYEE.EMP_FNAME + '' '' + EMPLOYEE.EMP_LNAME, ';
				SET @SQL = @SQL + ' 	JOB_COMPONENT.EMP_CODE, JOB_LOG.JOB_NUMBER, JOB_COMPONENT.JOB_COMPONENT_NBR, ';
				SET @SQL = @SQL + ' 	JOB_LOG.JOB_DESC, JOB_COMPONENT.JOB_COMP_DESC ';
				--SET @SQL = @SQL + ' ;'
	
			END
			
			PRINT (@SQL);
			EXEC (@SQL);
			
		END

	UPDATE #myprojects
	SET TrafficCount = (SELECT COUNT(*)
						FROM JOB_TRAFFIC_DET WITH(NOLOCK)
						WHERE JOB_TRAFFIC_DET.JOB_NUMBER = #myprojects.JobNo
						AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = #myprojects.JobCompNo
						AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL);

	SET @SQL = '';
	
	SET @SQL = @SQL + ' SELECT * '
	SET @SQL = @SQL + ' FROM #myprojects '	

	IF (NOT @Search IS NULL) AND @Search <> ''
	BEGIN

		SET @SQL = @SQL + ' WHERE LOWER(CDP) LIKE ''%'' + LOWER(@Search) + ''%'' OR LOWER(JobAndComp) LIKE ''%'' + LOWER(@Search) + ''%'' OR LOWER(Status) LIKE ''%'' + LOWER(@Search) + ''%'' OR LOWER(AE) LIKE ''%'' + LOWER(@Search) + ''%'' OR LOWER(AECode) LIKE ''%'' + LOWER(@Search) + ''%'' '

	END

	IF @SortVal = 'default' OR @SortVal = '' OR @SortVal IS NULL
	BEGIN

		SET @SQL = @SQL + ' ORDER BY DueDate; '
		
	END
	IF @SortVal = 'CDP'
	BEGIN

		SET @SQL = @SQL + ' ORDER BY ClientCode, DivCode, ProductCode, DueDate; '
		
	END
	IF @SortVal = 'jobcomp'
	BEGIN

		SET @SQL = @SQL + ' ORDER BY JobNo, JobCompNo, DueDate; '
		
	END
	IF @SortVal = 'startdate'
	BEGIN

		SET @SQL = @SQL + ' ORDER BY StartDate, DueDate; '
		
	END
	IF @SortVal = 'duedate'
	BEGIN

		SET @SQL = @SQL + ' ORDER BY DueDate; '
		
	END
	IF @SortVal = 'status'
	BEGIN

		SET @SQL = @SQL + ' ORDER BY Status, DueDate; '
		
	END
	IF @SortVal = 'ae'
	BEGIN

		SET @SQL = @SQL + ' ORDER BY AECode, DueDate; '
		
	END
	IF @SortVal = 'taskcount'
	BEGIN

		SET @SQL = @SQL + ' ORDER BY TrafficCount, DueDate; '
		
	END

	DECLARE @PARAMS NVARCHAR(4000),
			@NSQL NVARCHAR(4000)
	
	SET @PARAMS = '@Search AS VARCHAR(500)'
	SET @NSQL = CONVERT(NVARCHAR(4000), @SQL)
	
	EXEC sp_executesql @NSQL, @PARAMS, @Search;
	

	DROP TABLE #myprojects;
/*=========== QUERY ===========*/
GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO