--DROP PROCEDURE [dbo].[usp_wv_EMP_TIME_TMPLT_GET]
CREATE PROCEDURE [dbo].[usp_wv_EMP_TIME_TMPLT_GET] /*WITH ENCRYPTION*/
@EMP_CODE    VARCHAR(6),
@USER_CODE   VARCHAR(100)
AS
BEGIN
/*=========== QUERY ===========*/
	DECLARE 
		@IS_LIMITED  AS INT,
		@SEC_USER_ID INT
	SELECT @SEC_USER_ID = SEC_USER_ID FROM [dbo].[SEC_USER] WHERE UPPER(USER_CODE) = UPPER(@USER_CODE);
	SET @IS_LIMITED = 0;	
	IF EXISTS(SELECT * FROM [dbo].[SEC_USER_SETTING] WHERE SEC_USER_ID = @SEC_USER_ID AND SETTING_CODE = 'EMP_TS_FNC' AND STRING_VALUE = 'Y') BEGIN

		SET @IS_LIMITED = 1;

	END
	IF @IS_LIMITED = 0
	BEGIN
		SELECT
			A.*,
			[EmployeeTimeTemplateID] = A.EMP_TIME_TMPLT_ID,
			[EmployeeCode] = A.EMP_CODE,
			[EmployeeFirstName] = A.EMP_FNAME,
			[EmployeeMiddleInitial] = A.EMP_MI,
			[EmployeeLastName] = A.EMP_LNAME,
			[JobNumber] = A.JOB_NUMBER,
			[JobDescription] = A.JOB_DESC,
			[JobComponentNumber] = CAST(A.JOB_COMPONENT_NBR AS SMALLINT),
			[JobComponentDescription] = A.JOB_COMP_DESC,
			[FunctionCode] = A.FNC_CODE,
			[CategoryCode] = A.CATEGORY,
			[IsTimeCategory] = CAST(A.IS_TIME_CATEGORY AS BIT),
			[FunctionCategoryDescription] = A.FNC_DESCRIPTION,
			[Comment] = A.DFLT_COMMENT,
			[JobAndComponentNumbers] = '(' +
									   RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), A.JOB_NUMBER), 6 ) 
									   + '/' + 
									   RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), A.JOB_COMPONENT_NBR), 3)
									   + ')',
			[DepartmentTeamCode] = A.DP_TM_CODE,
			[Hours] = A.EMP_HOURS,
			[ApplyToDays] = A.APPLY_TO_DAYS,
			[ClientCode] = A.CL_CODE,
			[DivisionCode] = A.DIV_CODE,
			[ProductCode] = A.PRD_CODE,
			[ClientName] = A.CL_NAME,
			[DivisionName] = A.DIV_NAME,
			[ProductName] = A.PRD_NAME,
			[JobProcessControl] = CAST(A.JOB_PROCESS_CONTRL AS SMALLINT),
			[IsClosed] = CAST(A.IS_CLOSED AS BIT),
			[HasAccessToFunction] = CAST(A.HAS_ACCESS_TO_FUNCTION AS BIT)
		FROM
		(
			SELECT DISTINCT
				   EMP_TIME_TMPLT.EMP_TIME_TMPLT_ID,
				   EMP_TIME_TMPLT.EMP_CODE,
				   EMPLOYEE.EMP_FNAME,
				   EMPLOYEE.EMP_MI,
				   EMPLOYEE.EMP_LNAME,
				   EMP_TIME_TMPLT.JOB_NUMBER,
				   JOB_LOG.JOB_DESC,
				   EMP_TIME_TMPLT.JOB_COMPONENT_NBR,
				   JOB_COMPONENT.JOB_COMP_DESC,
				   EMP_TIME_TMPLT.FNC_CODE,
				   '' AS CATEGORY,
				   0 AS IS_TIME_CATEGORY,
				   FUNCTIONS.FNC_DESCRIPTION,
				   CAST(EMP_TIME_TMPLT.DFLT_COMMENT AS VARCHAR) AS DFLT_COMMENT,
				   RIGHT(
					   REPLICATE('0', 6) 
					   + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_NUMBER),
					   6
				   ) + '/' + RIGHT(
					   REPLICATE('0', 2) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_COMPONENT_NBR),
					   2
				   ) + '  ' + ISNULL(JOB_COMPONENT.JOB_COMP_DESC, '') AS JOB_AND_COMPONENT,
				   EMP_TIME_TMPLT.DP_TM_CODE,
				   EMP_TIME_TMPLT.PROD_CAT_CODE,
				   EMP_TIME_TMPLT.EMP_HOURS,
				   EMP_TIME_TMPLT.APPLY_TO_DAYS,
				   JOB_LOG.CL_CODE,
				   JOB_LOG.DIV_CODE,
				   JOB_LOG.PRD_CODE,
				   CLIENT.CL_NAME,
				   DIVISION.DIV_NAME,
				   PRODUCT.PRD_DESCRIPTION AS PRD_NAME,
				   JOB_LOG.JOB_NUMBER AS JOB,
				   JOB_COMPONENT.JOB_PROCESS_CONTRL,
				   CASE 
						WHEN JOB_COMPONENT.JOB_PROCESS_CONTRL IN (2, 3, 5, 6, 9, 10, 12) THEN 
							 1
						ELSE 0
				   END AS IS_CLOSED,
				   1 AS HAS_ACCESS_TO_FUNCTION
			FROM   EMP_TIME_TMPLT WITH (NOLOCK)
				   INNER JOIN EMPLOYEE WITH (NOLOCK)
						ON  EMP_TIME_TMPLT.EMP_CODE = EMPLOYEE.EMP_CODE
				   INNER JOIN FUNCTIONS WITH (NOLOCK)
				   LEFT OUTER JOIN EMP_TS_FNC WITH (NOLOCK)
						ON  FUNCTIONS.FNC_CODE = EMP_TS_FNC.FNC_CODE
						ON  EMP_TIME_TMPLT.FNC_CODE = FUNCTIONS.FNC_CODE
				   INNER JOIN JOB_COMPONENT WITH (NOLOCK)
						ON  EMP_TIME_TMPLT.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
						AND EMP_TIME_TMPLT.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
				   INNER JOIN CLIENT WITH (NOLOCK)
				   INNER JOIN JOB_LOG WITH (NOLOCK)
						ON  CLIENT.CL_CODE = JOB_LOG.CL_CODE
				   INNER JOIN PRODUCT WITH (NOLOCK)
						ON  JOB_LOG.CL_CODE = PRODUCT.CL_CODE
						AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE
						AND JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE
				   INNER JOIN DIVISION WITH (NOLOCK)
						ON  JOB_LOG.CL_CODE = DIVISION.CL_CODE
						AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE
						ON  JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER
						AND EMP_TIME_TMPLT.JOB_NUMBER = JOB_LOG.JOB_NUMBER
			WHERE  EMP_TIME_TMPLT.EMP_CODE = @EMP_CODE 
				   AND (EMP_TIME_TMPLT.JOB_NUMBER > 0)	
				   AND (
						   FUNCTIONS.FNC_INACTIVE = 0
						   OR FUNCTIONS.FNC_INACTIVE IS NULL
					   )
			UNION
			SELECT DISTINCT
				   EMP_TIME_TMPLT.EMP_TIME_TMPLT_ID,
				   EMP_TIME_TMPLT.EMP_CODE,
				   EMPLOYEE.EMP_FNAME,
				   EMPLOYEE.EMP_MI,
				   EMPLOYEE.EMP_LNAME,
				   0 AS JOB_NUMBER,
				   '' AS JOB_DESC,
				   0 AS JOB_COMPONENT_NBR,
				   '' AS JOB_COMP_DESC,
				   EMP_TIME_TMPLT.FNC_CODE,
				   TIME_CATEGORY.CATEGORY,
				   1 IS_TIME_CATEGORY,
				   TIME_CATEGORY.DESCRIPTION AS FNC_DESCRIPTION,
				   CAST(EMP_TIME_TMPLT.DFLT_COMMENT AS VARCHAR) AS DFLT_COMMENT,
				   '' AS JOB_AND_COMPONENT,
				   EMP_TIME_TMPLT.DP_TM_CODE,
				   EMP_TIME_TMPLT.PROD_CAT_CODE,
				   EMP_TIME_TMPLT.EMP_HOURS,
				   EMP_TIME_TMPLT.APPLY_TO_DAYS,
				   '' AS CL_CODE,
				   '' AS DIV_CODE,
				   '' AS PRD_CODE,
				   '' AS CL_NAME,
				   '' AS DIV_NAME,
				   '' AS PRD_NAME,
				   0 AS JOB,
				   0 AS JOB_PROCESS_CONTRL,
				   0 IS_CLOSED,
				   1 AS HAS_ACCESS_TO_FUNCTION
			FROM   EMP_TIME_TMPLT WITH (NOLOCK)
				   INNER JOIN EMPLOYEE WITH (NOLOCK)
						ON  EMP_TIME_TMPLT.EMP_CODE = EMPLOYEE.EMP_CODE
				   INNER JOIN TIME_CATEGORY WITH (NOLOCK)
						ON  EMP_TIME_TMPLT.FNC_CODE = TIME_CATEGORY.CATEGORY
			WHERE  EMP_TIME_TMPLT.EMP_CODE = @EMP_CODE 
				   AND (EMP_TIME_TMPLT.JOB_NUMBER = 0 OR EMP_TIME_TMPLT.JOB_NUMBER IS NULL)
				   AND (
						   TIME_CATEGORY.INACTIVE_FLAG = 0
						   OR TIME_CATEGORY.INACTIVE_FLAG IS NULL
				   )	

		) AS A
	END	
	IF @IS_LIMITED = 1
	BEGIN
		SELECT
			A.*,
			[EmployeeTimeTemplateID] = A.EMP_TIME_TMPLT_ID,
			[EmployeeCode] = A.EMP_CODE,
			[EmployeeFirstName] = A.EMP_FNAME,
			[EmployeeMiddleInitial] = A.EMP_MI,
			[EmployeeLastName] = A.EMP_LNAME,
			[JobNumber] = A.JOB_NUMBER,
			[JobDescription] = A.JOB_DESC,
			[JobComponentNumber] = CAST(A.JOB_COMPONENT_NBR AS SMALLINT),
			[JobComponentDescription] = A.JOB_COMP_DESC,
			[FunctionCode] = A.FNC_CODE,
			[CategoryCode] = A.CATEGORY,
			[IsTimeCategory] = CAST(A.IS_TIME_CATEGORY AS BIT),
			[FunctionCategoryDescription] = A.FNC_DESCRIPTION,
			[Comment] = A.DFLT_COMMENT,
			[JobAndComponentNumbers] = '(' +
									   RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), A.JOB_NUMBER), 6 ) 
									   + '/' + 
									   RIGHT(REPLICATE('0', 3) + CONVERT(VARCHAR(20), A.JOB_COMPONENT_NBR), 3)
									   + ')',
			[DepartmentTeamCode] = A.DP_TM_CODE,
			[Hours] = A.EMP_HOURS,
			[ApplyToDays] = A.APPLY_TO_DAYS,
			[ClientCode] = A.CL_CODE,
			[DivisionCode] = A.DIV_CODE,
			[ProductCode] = A.PRD_CODE,
			[ClientName] = A.CL_NAME,
			[DivisionName] = A.DIV_NAME,
			[ProductName] = A.PRD_NAME,
			[JobProcessControl] = CAST(A.JOB_PROCESS_CONTRL AS SMALLINT),
			[IsClosed] = CAST(A.IS_CLOSED AS BIT),
			[HasAccessToFunction] = CAST(A.HAS_ACCESS_TO_FUNCTION AS BIT)
		FROM
		(
			SELECT DISTINCT
				   EMP_TIME_TMPLT.EMP_TIME_TMPLT_ID,
				   EMP_TIME_TMPLT.EMP_CODE,
				   EMPLOYEE.EMP_FNAME,
				   EMPLOYEE.EMP_MI,
				   EMPLOYEE.EMP_LNAME,
				   EMP_TIME_TMPLT.JOB_NUMBER,
				   JOB_LOG.JOB_DESC,
				   EMP_TIME_TMPLT.JOB_COMPONENT_NBR,
				   JOB_COMPONENT.JOB_COMP_DESC,
				   EMP_TIME_TMPLT.FNC_CODE,
				   '' AS CATEGORY,
				   0 AS IS_TIME_CATEGORY,
				   FUNCTIONS.FNC_DESCRIPTION AS FNC_DESCRIPTION,
				   CAST(EMP_TIME_TMPLT.DFLT_COMMENT AS VARCHAR) AS DFLT_COMMENT,
				   RIGHT(
					   REPLICATE('0', 6) 
					   + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_NUMBER),
					   6
				   ) + '/' + RIGHT(
					   REPLICATE('0', 2) + CONVERT(VARCHAR(20), JOB_COMPONENT.JOB_COMPONENT_NBR),
					   2
				   ) + '  ' + ISNULL(JOB_COMPONENT.JOB_COMP_DESC, '') AS JOB_AND_COMPONENT,
				   EMP_TIME_TMPLT.DP_TM_CODE,
				   EMP_TIME_TMPLT.PROD_CAT_CODE,
				   EMP_TIME_TMPLT.EMP_HOURS,
				   EMP_TIME_TMPLT.APPLY_TO_DAYS,
				   JOB_LOG.CL_CODE,
				   JOB_LOG.DIV_CODE,
				   JOB_LOG.PRD_CODE,
				   CLIENT.CL_NAME,
				   DIVISION.DIV_NAME,
				   PRODUCT.PRD_DESCRIPTION AS PRD_NAME,
				   JOB_LOG.JOB_NUMBER AS JOB,
				   JOB_COMPONENT.JOB_PROCESS_CONTRL,
				   CASE 
						WHEN JOB_COMPONENT.JOB_PROCESS_CONTRL IN (2, 3, 5, 6, 9, 10, 12) THEN 
							 1
						ELSE 0
				   END AS IS_CLOSED,
				   1 AS HAS_ACCESS_TO_FUNCTION
			FROM   EMP_TIME_TMPLT WITH (NOLOCK)
				   INNER JOIN EMPLOYEE WITH (NOLOCK)
						ON  EMP_TIME_TMPLT.EMP_CODE = EMPLOYEE.EMP_CODE
				   INNER JOIN FUNCTIONS WITH (NOLOCK)
				   INNER JOIN EMP_TS_FNC WITH (NOLOCK)
						ON  FUNCTIONS.FNC_CODE = EMP_TS_FNC.FNC_CODE
						ON  EMP_TIME_TMPLT.FNC_CODE = FUNCTIONS.FNC_CODE
				   INNER JOIN JOB_COMPONENT WITH (NOLOCK)
						ON  EMP_TIME_TMPLT.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
						AND EMP_TIME_TMPLT.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
				   INNER JOIN CLIENT WITH (NOLOCK)
				   INNER JOIN JOB_LOG WITH (NOLOCK)
						ON  CLIENT.CL_CODE = JOB_LOG.CL_CODE
				   INNER JOIN PRODUCT WITH (NOLOCK)
						ON  JOB_LOG.CL_CODE = PRODUCT.CL_CODE
						AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE
						AND JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE
				   INNER JOIN DIVISION WITH (NOLOCK)
						ON  JOB_LOG.CL_CODE = DIVISION.CL_CODE
						AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE
						ON  JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER
						AND EMP_TIME_TMPLT.JOB_NUMBER = JOB_LOG.JOB_NUMBER
			WHERE  EMP_TIME_TMPLT.EMP_CODE = @EMP_CODE 
				   AND EMP_TS_FNC.EMP_CODE = @EMP_CODE
				   AND (EMP_TIME_TMPLT.JOB_NUMBER > 0)
				   AND (
						   FUNCTIONS.FNC_INACTIVE = 0
						   OR FUNCTIONS.FNC_INACTIVE IS NULL
					   )
			UNION
			SELECT DISTINCT
				   EMP_TIME_TMPLT.EMP_TIME_TMPLT_ID,
				   EMP_TIME_TMPLT.EMP_CODE,
				   EMPLOYEE.EMP_FNAME,
				   EMPLOYEE.EMP_MI,
				   EMPLOYEE.EMP_LNAME,
				   0 AS JOB_NUMBER,
				   '' AS JOB_DESC,
				   0 AS JOB_COMPONENT_NBR,
				   '' AS JOB_COMP_DESC,
				   EMP_TIME_TMPLT.FNC_CODE,
				   TIME_CATEGORY.CATEGORY,
				   1 IS_TIME_CATEGORY,
				   TIME_CATEGORY.DESCRIPTION AS FNC_DESCRIPTION,
				   CAST(EMP_TIME_TMPLT.DFLT_COMMENT AS VARCHAR) AS DFLT_COMMENT,
				   '' AS JOB_AND_COMPONENT,
				   EMP_TIME_TMPLT.DP_TM_CODE,
				   EMP_TIME_TMPLT.PROD_CAT_CODE,
				   EMP_TIME_TMPLT.EMP_HOURS,
				   EMP_TIME_TMPLT.APPLY_TO_DAYS,
				   '' AS CL_CODE,
				   '' AS DIV_CODE,
				   '' AS PRD_CODE,
				   '' AS CL_NAME,
				   '' AS DIV_NAME,
				   '' AS PRD_NAME,
				   0 AS JOB,
				   0 AS JOB_PROCESS_CONTRL,
				   0 IS_CLOSED,
				   1 AS HAS_ACCESS_TO_FUNCTION
			FROM   EMP_TIME_TMPLT WITH (NOLOCK)
				   INNER JOIN EMPLOYEE WITH (NOLOCK)
						ON  EMP_TIME_TMPLT.EMP_CODE = EMPLOYEE.EMP_CODE
				   INNER JOIN TIME_CATEGORY WITH (NOLOCK)
						ON  EMP_TIME_TMPLT.FNC_CODE = TIME_CATEGORY.CATEGORY
			WHERE  EMP_TIME_TMPLT.EMP_CODE = @EMP_CODE 
				   AND (EMP_TIME_TMPLT.JOB_NUMBER = 0 OR EMP_TIME_TMPLT.JOB_NUMBER IS NULL)
				   AND (
						   TIME_CATEGORY.INACTIVE_FLAG = 0
						   OR TIME_CATEGORY.INACTIVE_FLAG IS NULL
				   )
		) AS A
	END
/*=========== QUERY ===========*/
END