if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_ESTIMATE_REV_DET_INSERT_DFLT]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_ESTIMATE_REV_DET_INSERT_DFLT]
GO

CREATE PROCEDURE [dbo].[usp_wv_ESTIMATE_REV_DET_INSERT_DFLT]
(
	--NECESSARY INPUTS:
	@ESTIMATE_NUMBER INT,
	@EST_COMPONENT_NBR INT,
	@EST_QUOTE_NBR INT,
    @EST_REV_NBR INT,
	@FNC_CODE VARCHAR(6),
	-- 0 = EVENT GENERATOR AS STANDALONE
	-- 1 = EVENT GENERATOR FROM ESTIMATE
	@FROM_FORM INT,
	@USER_ID VARCHAR(100),
	-- PASS IN A ZERO IF YOU DON'T WANT TO INSERT A DEFAULT COMMENT
	-- ELSE A DEFAULT COMMENT WILL BE BUILT USING TE EVENT_GENERATOR TABLE
	@EVENT_GEN_ID INT,  
	@EMP_CODE VARCHAR(6),
	
----	--INPUTS AVAILABLE WHEN USING THE OLD "ADD NEW" ON ESTIMATE QUOTE PAGE:
	
----	@EST_REV_SUP_BY_CDE VARCHAR(6),
----	@EST_REV_SUP_BY_NTE TEXT,
----	@QTY_HRS
----	@EST_REV_COMM_PCT DECIMAL(6,3),
----	@EST_REV_CONT_PCT DECIMAL(6,3),
	@EST_REV_QUANTITY DECIMAL(15,2),
----	@EST_REV_RATE DECIMAL(15,3),
----	@EST_REV_SUP_BY_CDE VARCHAR(6),
    @EST_FUNC_COMMENT VARCHAR(4000),
	@EST_REV_SUP_BY_NTE TEXT,
----	@EST_REV_QUANTITY DECIMAL(15,2),
	
----	--DUNNO YET
----	@EXT_CONTINGENCY DECIMAL(14,2),
----    @INCL_CPU INT,
----    @EST_CPM_FLAG SMALLINT,
----	@EXT_MU_CONT DECIMAL(14,2),
----	@EXT_STATE_CONT DECIMAL(14,2),
----	@EXT_COUNTY_CONT DECIMAL(14,2),
----	@EXT_CITY_CONT DECIMAL(14,2),
----	@EXT_NR_CONT DECIMAL(14,2),
----	@LINE_TOTAL_CONT DECIMAL(14,2)
    @NUM_OCCURENCES INT,
	@BLENDED_TIME_RATE DECIMAL(9,2)
)
AS
BEGIN
	SET NOCOUNT OFF

	DECLARE 
		@ERR INT,
		@NEXT_SEQ_NBR INT,

		--USED TO BE INPUTS, SHOULD BE PULLED FROM BEN'S FUNCTIONS AND OTHER TABLES
		@EST_FNC_TYPE VARCHAR(1),
		
		@TAX_CODE VARCHAR(4),
		@TAX_STATE_PCT DECIMAL(7,4),
		@TAX_COUNTY_PCT DECIMAL(7,4),
		@TAX_CITY_PCT DECIMAL(7,4),
		
		@EST_REV_RATE DECIMAL(15,4),
		@TAX_COMM SMALLINT,
		@TAX_COMM_ONLY SMALLINT,
		@TAX_RESALE SMALLINT,
		@EST_COMM_FLAG SMALLINT,
		@EST_TAX_FLAG SMALLINT,
		@EST_NONBILL_FLAG SMALLINT,
		@EXT_NONRESALE_TAX DECIMAL(14,2),
		@EXT_STATE_RESALE DECIMAL(14,2),
		@EXT_COUNTY_RESALE DECIMAL(14,2),
		@EXT_CITY_RESALE DECIMAL(14,2),
		@EST_REV_EXT_AMT DECIMAL(15,2),
		@EST_REV_COMM_PCT DECIMAL(9,3), --MARKUP PCT
		@EXT_MARKUP_AMT DECIMAL(14,2),
		@EST_REV_CONT_PCT DECIMAL(6,3),
		@EST_REV_SUP_BY_CDE VARCHAR(6),
		@EST_FNC_COMMENT VARCHAR(4000),
		@FEE_TIME SMALLINT,
	    @LINE_TOTAL DECIMAL(14,2),
	    @EXT_CONTINGENCY DECIMAL(14,2),
	    @EXT_MU_CONT DECIMAL(14,2),
	    @EXT_STATE_CONT DECIMAL(14,2),
	    @EXT_COUNTY_CONT DECIMAL(14,2),
	    @EXT_CITY_CONT DECIMAL(14,2),
	    @EXT_NR_CONT DECIMAL(14,2),
	    @EST_CPM_FLAG SMALLINT,
	    @JOB_MARKUP_PCT DECIMAL(7,3),
	    @EST_MARKUP_PCT DECIMAL(7,3),
		@USE_EST_BILL_RATE SMALLINT
	 
	--GET NEXT SEQUENCE NUMBER
	SELECT 
		@NEXT_SEQ_NBR = ISNULL(MAX(SEQ_NBR),-1) + 1 
	FROM 
		ESTIMATE_REV_DET WITH(NOLOCK)
	WHERE 
		ESTIMATE_NUMBER = @ESTIMATE_NUMBER AND EST_COMPONENT_NBR = @EST_COMPONENT_NBR AND EST_QUOTE_NBR = @EST_QUOTE_NBR
		AND EST_REV_NBR = @EST_REV_NBR;
    
	IF @NEXT_SEQ_NBR = 0
	BEGIN
		SET @NEXT_SEQ_NBR = 1;
	END 
	
	--GET MORE DEFAULTS:
	--=================================================
	--FUNCTION DEFAULTS:
	SELECT 
		@EST_FNC_TYPE = FNC_TYPE
	FROM 
		FUNCTIONS WITH(NOLOCK)
	WHERE 
		FNC_CODE = @FNC_CODE;
		
	SELECT 
		@EST_CPM_FLAG = FNC_CPM_FLAG
	FROM 
		FUNCTIONS WITH(NOLOCK)
	WHERE 
		FNC_CODE = @FNC_CODE;	
		
	--BILLING RATE DEFAULTS:
	--VARS TO MEET PARAM REQUIREMENTS
	DECLARE
		@JOB_NUMBER INT,
		@JOB_COMPONENT_NBR SMALLINT,
		@CL_CODE AS VARCHAR(6),
	    @DIV_CODE AS VARCHAR(6),
	    @PRD_CODE AS VARCHAR(6),
	    @SC_CODE AS VARCHAR(6),
	    @BA_BATCH_ID INT,
	--GOING TO MAP THESE BACK TO OTHER INTERNAL VARS
		@ROW_BILLING_RATE AS DECIMAL(9,2),
		@ROW_RATE_LEVEL AS SMALLINT,
		@ROW_TAX_CODE AS VARCHAR(4),
		@ROW_TAX_LEVEL SMALLINT,
		@ROW_NOBILL_FLAG SMALLINT,
		@ROW_NOBILL_LEVEL SMALLINT,
		@ROW_COMM DECIMAL(9,3),
		@ROW_COMM_LEVEL SMALLINT,
		@ROW_TAX_COMM SMALLINT,
		@ROW_TAX_COMM_ONLY SMALLINT,
		@ROW_TAX_COMM_FLAGS_LEVEL SMALLINT,
		@ROW_FEE_TIME_FLAG SMALLINT,
		@ROW_FEE_TIME_LEVEL SMALLINT
	
		
	--SET @JOB_NUMBER = NULL;
	--SET @JOB_COMPONENT_NBR = NULL;
	--SET @BA_BATCH_ID = NULL;
	SELECT @CL_CODE = CL_CODE, @DIV_CODE = DIV_CODE, @PRD_CODE = PRD_CODE, @SC_CODE = SC_CODE, @EST_MARKUP_PCT = EST_MARKUP_PCT
	FROM ESTIMATE_LOG WITH(NOLOCK)
	WHERE ESTIMATE_NUMBER = @ESTIMATE_NUMBER;
	
	SELECT @JOB_NUMBER = JOB_NUMBER, @JOB_COMPONENT_NBR = JOB_COMPONENT_NBR, @JOB_MARKUP_PCT = JOB_MARKUP_PCT
	FROM JOB_COMPONENT WITH(NOLOCK)
	WHERE ESTIMATE_NUMBER = @ESTIMATE_NUMBER AND EST_COMPONENT_NBR = @EST_COMPONENT_NBR;

	SELECT @USE_EST_BILL_RATE = ISNULL(USE_EST_BILL_RATE,0)
	FROM PRODUCT
	WHERE CL_CODE = @CL_CODE AND DIV_CODE = @DIV_CODE AND PRD_CODE = @PRD_CODE;
	
	IF @EMP_CODE = ''
	    BEGIN
	        SET @EMP_CODE = NULL;
	    END
	IF @JOB_NUMBER = '' or @JOB_NUMBER = 0
	    BEGIN
	        SET @JOB_NUMBER = NULL;
	    END
	IF @JOB_COMPONENT_NBR = '' or @JOB_COMPONENT_NBR = 0
	    BEGIN
	        SET @JOB_COMPONENT_NBR = NULL;
	    END
	
	--GET THE BILLING RATE DATA AND POPULATE MY TEMP VARS
	EXECUTE dbo.usp_wv_Estimating_GetBillingRates
				@THIS_FNC_CODE = @FNC_CODE,
				@THIS_JOB_NUMBER = @JOB_NUMBER,
				@THIS_JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR,
				@THIS_CL_CODE = @CL_CODE,
	            @THIS_DIV_CODE = @DIV_CODE,
	            @THIS_PRD_CODE = @PRD_CODE,
	            @THIS_SC_CODE = @SC_CODE,
                @THIS_EMP_CODE = @EMP_CODE, 
				@THIS_EMP_TITLE_ID = NULL,
				@THIS_BILLING_RATE = @ROW_BILLING_RATE OUTPUT,
				@THIS_RATE_LEVEL = @ROW_RATE_LEVEL OUTPUT,
				@THIS_TAX_CODE = @ROW_TAX_CODE OUTPUT,
				@THIS_TAX_LEVEL = @ROW_TAX_LEVEL OUTPUT,
				@THIS_NOBILL_FLAG = @ROW_NOBILL_FLAG OUTPUT,
				@THIS_NOBILL_LEVEL = @ROW_NOBILL_LEVEL OUTPUT,
				@THIS_COMM = @ROW_COMM OUTPUT,
				@THIS_COMM_LEVEL = @ROW_COMM_LEVEL OUTPUT,
				@THIS_TAX_COMM = @ROW_TAX_COMM OUTPUT,
				@THIS_TAX_COMM_ONLY = @ROW_TAX_COMM_ONLY OUTPUT,
				@THIS_TAX_COMM_FLAGS_LEVEL = @ROW_TAX_COMM_FLAGS_LEVEL OUTPUT,
				@THIS_FEE_TIME_FLAG = @ROW_FEE_TIME_FLAG OUTPUT,
				@THIS_FEE_TIME_LEVEL = @ROW_FEE_TIME_LEVEL OUTPUT;
				
	--MAP THEM BACK TO VARS FOR INSERT
	--NOT SURE OF ALL THE MAPPINGS...WILL DEFINATELY NEED TO BE WORKED ON AND VERIFIED...
	SET @TAX_CODE = @ROW_TAX_CODE;	
	SET @TAX_COMM = @ROW_TAX_COMM;
	SET @TAX_COMM_ONLY = @ROW_TAX_COMM_ONLY;		
	--@TAX_RESALE??		
	SET @EST_NONBILL_FLAG = @ROW_NOBILL_FLAG;
	if @USE_EST_BILL_RATE = 1 AND @EST_FNC_TYPE = 'E' AND @BLENDED_TIME_RATE IS NOT NULL
		Begin
			SET @EST_REV_RATE = @BLENDED_TIME_RATE;
		End
	Else
		Begin
			SET @EST_REV_RATE = @ROW_BILLING_RATE;
		End
	--SET @EST_REV_RATE = @ROW_BILLING_RATE;
	SET @EST_REV_COMM_PCT = @ROW_COMM; --this is the markup percent
	SET @EST_REV_SUP_BY_CDE = @EMP_CODE;
	SET @FEE_TIME = @ROW_FEE_TIME_FLAG;	
	
	if @EST_REV_COMM_PCT IS NULL
	    Begin
	        SET @EST_REV_COMM_PCT = @EST_MARKUP_PCT
	    End	
	--GET TAX INFO IF AVAILABLE
	
	IF NOT (@ROW_TAX_CODE IS NULL)
	BEGIN
	    SET @EST_TAX_FLAG = 1;
		SELECT
			@TAX_STATE_PCT = TAX_STATE_PERCENT,
			@TAX_COUNTY_PCT = TAX_COUNTY_PERCENT,
			@TAX_CITY_PCT = TAX_CITY_PERCENT,
			@TAX_RESALE = TAX_RESALE
			--? = TAX_RESALE_NUMBER
		FROM 
			SALES_TAX WITH(NOLOCK)
		WHERE
			TAX_CODE = @ROW_TAX_CODE;	
	END
	ELSE
	BEGIN
	    SET @EST_TAX_FLAG = 0;
	END
	
	
    IF @ROW_COMM <> 0
    BEGIN
        SET @EST_COMM_FLAG = 1;
    END
    ELSE
    BEGIN
        SET @EST_COMM_FLAG = 0;
    END
    
    --Certains columns must default to zero instead of NULL.
    IF @TAX_STATE_PCT IS NULL
    BEGIN
        SET @TAX_STATE_PCT = 0;
    END
    IF @TAX_COUNTY_PCT IS NULL
    BEGIN
        SET @TAX_COUNTY_PCT = 0;
    END
    IF @TAX_CITY_PCT IS NULL
    BEGIN
        SET @TAX_CITY_PCT = 0;
    END
    IF @TAX_COMM IS NULL
    BEGIN
        SET @TAX_COMM = 0;
    END
    IF @TAX_RESALE IS NULL
    BEGIN
        SET @TAX_RESALE = 0;
    END
    IF @EXT_NONRESALE_TAX IS NULL
    BEGIN
        SET @EXT_NONRESALE_TAX = 0;
    END
    IF @EXT_STATE_RESALE IS NULL
    BEGIN
        SET @EXT_STATE_RESALE = 0;
    END
    IF @EXT_COUNTY_RESALE IS NULL
    BEGIN
        SET @EXT_COUNTY_RESALE = 0;
    END
    IF @EXT_CITY_RESALE IS NULL
    BEGIN
        SET @EXT_CITY_RESALE = 0;
    END
    SET @EXT_CONTINGENCY = 0;
    SET @EXT_MU_CONT = 0;
	SET @EXT_STATE_CONT = 0;
	SET @EXT_COUNTY_CONT = 0;
	SET @EXT_CITY_CONT = 0;
	SET @EXT_NR_CONT = 0;
	
	--IF PRODUCT HAS CONT % INSERT ON DEFAULT ROW
	SELECT @EST_REV_CONT_PCT = PRD_CONT_PCT
	FROM PRODUCT
	WHERE CL_CODE = @CL_CODE AND DIV_CODE = @DIV_CODE AND PRD_CODE = @PRD_CODE
	    
    --BUILD A COMMENT FOR THE ESTIMATE ROW:
    --MAYBE THIS SHOULD BE A STAND ALONE???
    IF @EVENT_GEN_ID > 0
    BEGIN
        DECLARE
            @START_DATE VARCHAR(20),
            @END_DATE VARCHAR(20),
            @START_TIME VARCHAR(20),
            @END_TIME VARCHAR(20),
            @DAYS VARCHAR(50),
            @QTY_HRS VARCHAR(10),
            @DAY_INCREMENT INT
            
        SELECT
            @START_DATE = CONVERT(CHAR(10),START_DATE,101),
            @END_DATE =  CONVERT(CHAR(10),END_DATE,101),
            @START_TIME =  dbo.wvfn_timestring(START_TIME),
            @END_TIME = dbo.wvfn_timestring(END_TIME),
            @DAYS = CONVERT(VARCHAR(50),DAYS),
            @DAY_INCREMENT = ISNULL(DAY_INCREMENT,0),
            @QTY_HRS = CONVERT(VARCHAR(10),QTY_HOURS)
        FROM
            EVENT_GEN WITH(NOLOCK)
        WHERE
            EVENT_GEN_ID = @EVENT_GEN_ID;            
            
        SET @EST_FNC_COMMENT = 
            ISNULL(@START_DATE,'')
            +
            ISNULL(' - '+@END_DATE,'')
            +
            CHAR(13) + CHAR(10) +
            ISNULL(@START_TIME,'')
            +
            ISNULL(' - '+@END_TIME,'')
            +
            ISNULL(CHAR(13) + CHAR(10) + 'Days: ' + @DAYS,'')
            +
            ISNULL(CHAR(13) + CHAR(10) + @QTY_HRS + ' Hrs','') 
        IF (NOT (@NUM_OCCURENCES IS NULL))
        BEGIN
            SET @EST_FNC_COMMENT = @EST_FNC_COMMENT + CHAR(13) + CHAR(10) + 'Occurrences: ' + CONVERT(VARCHAR(100),@NUM_OCCURENCES)
        END     
        IF @DAY_INCREMENT > 0
        BEGIN
            SET @EST_FNC_COMMENT = @EST_FNC_COMMENT + CHAR(13) + CHAR(10) + 'Every ' + CONVERT(VARCHAR(100),@DAY_INCREMENT) + ' days'
        END     
    END
    
    IF @EVENT_GEN_ID = 0
        BEGIN
            SET @EST_FNC_COMMENT = @EST_FUNC_COMMENT
        END
    
    
    --GET MORE DEFAULT DATA FOR DEFAULT INSERT....
    IF (NOT (@EST_REV_QUANTITY IS NULL)) AND (NOT (@EST_REV_RATE IS NULL))
    BEGIN
        SET @EST_REV_EXT_AMT = @EST_REV_QUANTITY * @EST_REV_RATE
    END
    IF (NOT (@EST_REV_EXT_AMT IS NULL)) AND (NOT (@EST_REV_COMM_PCT IS NULL))
    BEGIN
        SET @EXT_MARKUP_AMT = @EST_REV_EXT_AMT * @EST_REV_COMM_PCT
    END
    
    --DOES THIS NEED TO INCLUDE TAX??
    SET @LINE_TOTAL = ISNULL(@EST_REV_EXT_AMT,0.00) + ISNULL(@EXT_MARKUP_AMT,0.00);
    
    
    
    INSERT INTO [ESTIMATE_REV_DET] WITH (ROWLOCK)
		(
			[ESTIMATE_NUMBER],
			[EST_COMPONENT_NBR],
			[EST_QUOTE_NBR],
			[EST_REV_NBR],
			[SEQ_NBR],
			[FNC_CODE],
			[EST_REV_COMM_PCT],
			[EST_REV_CONT_PCT],
			[EST_REV_QUANTITY],
			[EST_REV_RATE],
			[EST_REV_SUP_BY_CDE],
			[EST_REV_SUP_BY_NTE],
			[EST_REV_EXT_AMT],
			[TAX_CODE],
			[EXT_MARKUP_AMT],
			[EXT_CONTINGENCY],
			[LINE_TOTAL],
			[INCL_CPU],
			[EST_FNC_TYPE],
			[EST_CPM_FLAG],
			[TAX_STATE_PCT],
			[TAX_COUNTY_PCT],
			[TAX_CITY_PCT],
			[TAX_COMM],
			[TAX_COMM_ONLY],
			[TAX_RESALE],
			[EST_COMM_FLAG],
			[EST_TAX_FLAG],
			[EST_NONBILL_FLAG],
			[EXT_NONRESALE_TAX],
			[EXT_STATE_RESALE],
			[EXT_COUNTY_RESALE],
			[EXT_CITY_RESALE],
			[EST_FNC_COMMENT],
			[EXT_MU_CONT],
			[EXT_STATE_CONT],
			[EXT_COUNTY_CONT],
			[EXT_CITY_CONT],
			[EXT_NR_CONT],
--			[LINE_TOTAL_CONT],
            [FEE_TIME]
		)
		VALUES
		(
			@ESTIMATE_NUMBER,
			@EST_COMPONENT_NBR,
			@EST_QUOTE_NBR,
			@EST_REV_NBR,
			@NEXT_SEQ_NBR,
			@FNC_CODE,
			@EST_REV_COMM_PCT,
			@EST_REV_CONT_PCT,
			@EST_REV_QUANTITY,
			@EST_REV_RATE,
			@EST_REV_SUP_BY_CDE,
			@EST_REV_SUP_BY_NTE,
			@EST_REV_EXT_AMT,
			@TAX_CODE,
			@EXT_MARKUP_AMT,
			@EXT_CONTINGENCY,
			@LINE_TOTAL,
			1,
			@EST_FNC_TYPE,
			@EST_CPM_FLAG,
			@TAX_STATE_PCT,
			@TAX_COUNTY_PCT,
			@TAX_CITY_PCT,
			@TAX_COMM,
			@TAX_COMM_ONLY,
			@TAX_RESALE,
			@EST_COMM_FLAG,
			@EST_TAX_FLAG,
			@EST_NONBILL_FLAG,
			@EXT_NONRESALE_TAX,
			@EXT_STATE_RESALE,
			@EXT_COUNTY_RESALE,
			@EXT_CITY_RESALE,
			CONVERT(TEXT,@EST_FNC_COMMENT),
			@EXT_MU_CONT,
			@EXT_STATE_CONT,
			@EXT_COUNTY_CONT,
			@EXT_CITY_CONT,
			@EXT_NR_CONT,
--			@LINE_TOTAL_CONT,
            @FEE_TIME

		)	

	SET @ERR = @@Error
    SELECT SCOPE_IDENTITY();
END

--SELECT @QTE_NUM = @NEXT_EST_NBR


