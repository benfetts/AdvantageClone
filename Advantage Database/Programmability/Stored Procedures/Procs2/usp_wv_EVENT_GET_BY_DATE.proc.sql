CREATE PROCEDURE [dbo].[usp_wv_EVENT_GET_BY_DATE] 
	@START_DATE SMALLDATETIME,
	@END_DATE SMALLDATETIME,
	@EVENT_GEN_ID INT,
	@AD_NBR VARCHAR(30),
	@RETURN_LIST_TYPE VARCHAR(10),
	@ONLY_EVENTS_WITH_NO_RESOURCES TINYINT,
	@UserCode varchar(100)
AS

DECLARE @OfficeRestrictions AS INTEGER	
DECLARE @EMP_CODE AS varchar(6),@EmpRestrictions SMALLINT, @CDPRestrictions SMALLINT

SELECT @EmpRestrictions = ISNULL(COUNT(1),0) FROM SEC_EMP WHERE UPPER(USER_ID) = UPPER(@UserCode)

SELECT @EMP_CODE = EMP_CODE FROM [dbo].[SEC_USER] WHERE UPPER([USER_CODE]) = UPPER(@UserCode)
SELECT @OfficeRestrictions = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CODE

SELECT @CDPRestrictions = ISNULL(COUNT(1),0) FROM SEC_CLIENT WITH(NOLOCK) WHERE UPPER(USER_ID) = UPPER(@UserCode);

/*=========== QUERY ===========*/
    DECLARE @SQL_DATA VARCHAR(8000), @SQL_RETURN_LIST VARCHAR(8000), @SQL_WHERE VARCHAR(8000);
    
    SET @SQL_DATA = '
		SELECT [EVENT].EVENT_ID,
			   [EVENT].EVENT_LABEL,
			   [EVENT].EVENT_DESC_LONG,
			   [EVENT].TYPE,
			   [EVENT].EVENT_DATE,
			   CONVERT(CHAR(10), [EVENT].EVENT_DATE, 101) AS EVENT_DATE_NO_TIME,
			   CASE DATEPART(dw, EVENT_DATE)
					WHEN 1 THEN ''Sun''
					WHEN 2 THEN ''Mon''
					WHEN 3 THEN ''Tue''
					WHEN 4 THEN ''Wed''
					WHEN 5 THEN ''Thu''
					WHEN 6 THEN ''Fri''
					WHEN 7 THEN ''Sat''
			   END AS DAY_OF_WEEK,
			   CASE DATEPART(dw, EVENT_DATE)
					WHEN 1 THEN ''Sunday''
					WHEN 2 THEN ''Monday''
					WHEN 3 THEN ''Tueday''
					WHEN 4 THEN ''Wednesday''
					WHEN 5 THEN ''Thursday''
					WHEN 6 THEN ''Friday''
					WHEN 7 THEN ''Saturday''
			   END AS FULL_DAY_OF_WEEK,
			   [EVENT].ALL_DAY,
			   [EVENT].QTY_HRS,
			   ISNULL([EVENT].QTY_TYPE, 1) AS QTY_TYPE,
			   [EVENT].START_TIME,
			   [EVENT].END_TIME,
			   [EVENT].FNC_CODE,
			   [EVENT].EVENT_COMMENT,
			   [EVENT].INCOME_ONLY_ID,
			   [EVENT].EVENT_GEN_ID,
			   [EVENT].CREATE_DATE,
			   [EVENT].CREATE_USER,
			   [EVENT].MODIFY_DATE,
			   [EVENT].MODIFY_USER,
			   [RESOURCE].RESOURCE_CODE,
			   [RESOURCE].RESOURCE_DESC,
			   RESOURCE_TYPE.RESOURCE_TYPE_CODE,
			   RESOURCE_TYPE.RESOURCE_TYPE_DESC,
			   AD_NUMBER.AD_NBR_DESC,
			   AD_NUMBER.AD_NBR,
			   AD_NUMBER.DOCUMENT_ID,
			   ISNULL(AD_NUMBER.COLOR,'''') AS AD_NBR_COLOR,
			   JOB_LOG.JOB_NUMBER,
			   JOB_LOG.JOB_DESC,
			   JOB_COMPONENT.JOB_COMPONENT_NBR,
			   JOB_COMPONENT.JOB_COMP_DESC,
			   CAST(JOB_LOG.JOB_NUMBER AS VARCHAR)+''|''+CAST(JOB_COMPONENT.JOB_COMPONENT_NBR AS VARCHAR) AS JOB_AND_COMP,
			   CLIENT.CL_CODE,
			   CLIENT.CL_NAME,
			   [EVENT].EVENT_TYPE_ID
		FROM   CLIENT
			   INNER JOIN JOB_LOG WITH (NOLOCK)
					ON  CLIENT.CL_CODE = JOB_LOG.CL_CODE
			   RIGHT OUTER JOIN [EVENT] WITH (NOLOCK)
			   LEFT OUTER JOIN JOB_COMPONENT WITH (NOLOCK)
					ON  [EVENT].JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
					AND [EVENT].JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
					ON  JOB_LOG.JOB_NUMBER = [EVENT].JOB_NUMBER
			   LEFT OUTER JOIN AD_NUMBER WITH (NOLOCK)
					ON  [EVENT].AD_NUMBER = AD_NUMBER.AD_NBR
			   LEFT OUTER JOIN RESOURCE_TYPE WITH (NOLOCK)
			   INNER JOIN RESOURCE WITH (NOLOCK)
					ON  RESOURCE_TYPE.RESOURCE_TYPE_CODE = [RESOURCE].RESOURCE_TYPE_CODE
					ON  [EVENT].RESOURCE_CODE = [RESOURCE].RESOURCE_CODE
         ';
        
	if @OfficeRestrictions > 0
	Begin
		SET @SQL_DATA = @SQL_DATA + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''''
	End
	if @CDPRestrictions > 0
	Begin
		SET @SQL_DATA = @SQL_DATA + ' INNER JOIN SEC_CLIENT ON SEC_CLIENT.CL_CODE = JOB_LOG.CL_CODE AND SEC_CLIENT.DIV_CODE = JOB_LOG.DIV_CODE AND SEC_CLIENT.PRD_CODE = JOB_LOG.PRD_CODE'
	End

    SET @SQL_WHERE = ' WHERE  1 = 1';     
    IF NOT @START_DATE IS NULL
    BEGIN
	    SET @SQL_WHERE = @SQL_WHERE + ' AND ([EVENT].EVENT_DATE >= ''' + CAST(@START_DATE AS VARCHAR) + ''')'
    END           
    IF NOT @END_DATE IS NULL
    BEGIN
	    SET @SQL_WHERE = @SQL_WHERE + ' AND ([EVENT].EVENT_DATE <= ''' + CAST(@END_DATE AS VARCHAR) + ''')'
    END           
    IF @ONLY_EVENTS_WITH_NO_RESOURCES = 1
    BEGIN
		    SET @SQL_WHERE = @SQL_WHERE + ' AND ([EVENT].RESOURCE_CODE IS NULL OR [EVENT].RESOURCE_CODE = '''') '
    END
    IF @EVENT_GEN_ID > 0 
    BEGIN
		    SET @SQL_WHERE = @SQL_WHERE + ' AND [EVENT].EVENT_GEN_ID = ' + CAST(@EVENT_GEN_ID AS VARCHAR)
    END
	IF NOT @AD_NBR IS NULL
	BEGIN
			SET @SQL_WHERE = @SQL_WHERE + ' AND [EVENT].AD_NUMBER = ''' + @AD_NBR + ''''
	END
	if @CDPRestrictions > 0
	Begin
		SET @SQL_WHERE = @SQL_WHERE + ' AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + @UserCode + ''')) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)'
	End
	SET @SQL_WHERE = ISNULL(@SQL_WHERE,'');
    IF @RETURN_LIST_TYPE = 'jc' OR @RETURN_LIST_TYPE IS NULL
    BEGIN
		SET @SQL_DATA = @SQL_DATA + @SQL_WHERE + ' ORDER BY JOB_LOG.JOB_NUMBER, JOB_COMPONENT.JOB_COMPONENT_NBR, [EVENT].START_TIME, [EVENT].END_TIME;'
	END  
    IF @RETURN_LIST_TYPE = 'date' 
    BEGIN
		SET @SQL_DATA = @SQL_DATA + @SQL_WHERE + ' ORDER BY [EVENT].START_TIME, [EVENT].END_TIME,[EVENT].AD_NUMBER;'
	END

    IF @RETURN_LIST_TYPE = 'jc' OR @RETURN_LIST_TYPE IS NULL
    BEGIN
		SET @SQL_RETURN_LIST = 'SELECT DISTINCT CAST([EVENT].JOB_NUMBER AS VARCHAR)+''|''+CAST([EVENT].JOB_COMPONENT_NBR AS VARCHAR) AS NAV_LIST FROM [EVENT] WITH(NOLOCK) LEFT OUTER JOIN JOB_LOG JL ON JL.JOB_NUMBER = [EVENT].JOB_NUMBER '
		if @OfficeRestrictions > 0
		Begin
			SET @SQL_RETURN_LIST = @SQL_RETURN_LIST + ' INNER JOIN EMP_OFFICE ON JL.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''''
		End
		if @CDPRestrictions > 0
		Begin
			SET @SQL_RETURN_LIST = @SQL_RETURN_LIST + ' INNER JOIN SEC_CLIENT ON SEC_CLIENT.CL_CODE = JL.CL_CODE AND SEC_CLIENT.DIV_CODE = JL.DIV_CODE AND SEC_CLIENT.PRD_CODE = JL.PRD_CODE'
		End
		SET @SQL_RETURN_LIST = @SQL_RETURN_LIST + @SQL_WHERE + ' ORDER BY CAST([EVENT].JOB_NUMBER AS VARCHAR)+''|''+CAST([EVENT].JOB_COMPONENT_NBR AS VARCHAR);';
    END
    IF @RETURN_LIST_TYPE = 'date' 
    BEGIN
		SET @SQL_RETURN_LIST = 'SELECT DISTINCT [EVENT].EVENT_DATE AS NAV_LIST FROM [EVENT] WITH(NOLOCK) LEFT OUTER JOIN JOB_LOG JL ON JL.JOB_NUMBER = [EVENT].JOB_NUMBER '
		if @OfficeRestrictions > 0
		Begin
			SET @SQL_RETURN_LIST = @SQL_RETURN_LIST + ' INNER JOIN EMP_OFFICE ON JL.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CODE + ''''
		End
		if @CDPRestrictions > 0
		Begin
			SET @SQL_RETURN_LIST = @SQL_RETURN_LIST + ' INNER JOIN SEC_CLIENT ON SEC_CLIENT.CL_CODE = JL.CL_CODE AND SEC_CLIENT.DIV_CODE = JL.DIV_CODE AND SEC_CLIENT.PRD_CODE = JL.PRD_CODE'
		End
		SET @SQL_RETURN_LIST = @SQL_RETURN_LIST + @SQL_WHERE + ' ORDER BY [EVENT].EVENT_DATE;';
    END
    
    PRINT @SQL_DATA
    EXEC(@SQL_DATA);
    EXEC(@SQL_RETURN_LIST);

/*=========== QUERY ===========*/
GO