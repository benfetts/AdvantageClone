
CREATE PROCEDURE [dbo].[usp_wv_Estimating_AddNew_GetBaseJobAndCompInfo] 
@JOB_NUMBER INT,
@JOB_COMPONENT_NBR SMALLINT
AS

--Do validation here before returning the select?

SELECT     
	JOB_LOG.JOB_NUMBER, 
	JOB_LOG.JOB_DESC, 
	JOB_COMPONENT.JOB_COMPONENT_NBR, 
	JOB_COMPONENT.JOB_COMP_DESC, 
	CLIENT.CL_CODE, 
	CLIENT.CL_NAME, 
	DIVISION.DIV_CODE, 
	DIVISION.DIV_NAME, 
	PRODUCT.PRD_CODE, 
	PRODUCT.PRD_DESCRIPTION, 
	JOB_COMPONENT.JOB_FIRST_USE_DATE, 
	JOB_COMPONENT.START_DATE, 
	JOB_LOG.SC_CODE, 
    SALES_CLASS.SC_DESCRIPTION
FROM         
	JOB_LOG WITH (NOLOCK) INNER JOIN
	JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
	CLIENT WITH (NOLOCK) ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
	DIVISION WITH (NOLOCK) ON CLIENT.CL_CODE = DIVISION.CL_CODE INNER JOIN
	PRODUCT WITH (NOLOCK) ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
	JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE AND DIVISION.CL_CODE = PRODUCT.CL_CODE AND DIVISION.DIV_CODE = PRODUCT.DIV_CODE INNER JOIN
    SALES_CLASS WITH (NOLOCK) ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE
WHERE     
    (JOB_LOG.JOB_NUMBER = @JOB_NUMBER) 
    AND (JOB_COMPONENT.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
    
