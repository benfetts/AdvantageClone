if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_Estimating_Copy_AddQuote]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_Estimating_Copy_AddQuote]
GO

CREATE PROCEDURE [dbo].[usp_wv_Estimating_Copy_AddQuote]
(
	@ESTIMATE_NUMBER INT,
	@EST_COMPONENT_NBR INT,
	@EstNo INT,
	@EstCompNo INT,
	@EstQuoteNo INT,
	@EstRevNo INT,
	@Recalculate INT
)
AS
BEGIN
	SET NOCOUNT OFF
	DECLARE 
	@ERR INT,
	@NEXT_QTE_NBR INT,
	@NEXT_REV_NBR INT, @NumberRecords int, @RowCount int

	CREATE TABLE #estdet( 	
		RowID int IDENTITY(1, 1),
		ESTIMATE_NUMBER		int,
		EST_COMPONENT_NBR	smallint,
		EST_QUOTE_NBR		smallint,
		EST_REV_NBR 		smallint NULL,
		SEQ_NBR 			int,
		FNC_CODE			varchar(6) NULL,
		EST_REV_COMM_PCT	decimal(6,3),
		EST_REV_CONT_PCT	decimal(6,3),
		EST_REV_QUANTITY	decimal(15,2),
		EST_REV_RATE		decimal(15,4),
		EST_REV_SUP_BY_CDE	varchar(6) NULL,
		EST_REV_SUP_BY_NTE	text,
		EST_REV_EXT_AMT		decimal(15,2),
		TAX_CODE            varchar(4) NULL,
		EST_FNC_COMMENT		text,
		EXT_MARKUP_AMT		decimal(14,2),
		EXT_CONTINGENCY		decimal(14,2),
		LINE_TOTAL  		decimal(14,2),
		INCL_CPU			smallint,
		EST_FNC_TYPE		varchar(1) NULL,
		EST_CPM_FLAG		smallint,
		TAX_STATE_PCT		decimal(7, 4),
		TAX_COUNTY_PCT		decimal(7, 4),
		TAX_CITY_PCT		decimal(7, 4),
		TAX_COMM			smallint,
		TAX_COMM_ONLY		smallint,
		TAX_RESALE			smallint,
		EST_COMM_FLAG		smallint,
		EST_TAX_FLAG		smallint,
		EST_NONBILL_FLAG	smallint,
		EXT_NONRESALE_TAX	decimal(14, 2),
		EXT_STATE_RESALE	decimal(14, 2),
		EXT_COUNTY_RESALE	decimal(14, 2),
		EXT_CITY_RESALE		decimal(14, 2),
		EXT_MU_CONT			decimal(14, 2),
		EXT_STATE_CONT		decimal(14, 2),
		EXT_COUNTY_CONT		decimal(14, 2),
		EXT_CITY_CONT		decimal(14, 2),
		EXT_NR_CONT			decimal(14, 2),
		LINE_TOTAL_CONT		decimal(14, 2),
		EST_PHASE_ID		smallint,
		EST_PHASE_DESC		varchar(60) NULL, 
		FEE_TIME			smallint,
       EST_FNC_COMMENT_HTML text,
       EST_REV_SUP_BY_HTML  text)
	
    SELECT @NEXT_QTE_NBR = ISNULL(MAX(EST_QUOTE_NBR),0) + 1 FROM ESTIMATE_QUOTE
	WHERE ESTIMATE_NUMBER = @ESTIMATE_NUMBER AND EST_COMPONENT_NBR = @EST_COMPONENT_NBR 
    
    INSERT INTO [ESTIMATE_QUOTE]
		(
			[ESTIMATE_NUMBER],
			[EST_COMPONENT_NBR],
			[EST_QUOTE_NBR],
			[EST_QTE_COMMENT],
			[EST_QUOTE_DESC],
			[EST_QTE_COMMENT_HTML]
		)
		SELECT     @ESTIMATE_NUMBER, @EST_COMPONENT_NBR, @NEXT_QTE_NBR, EST_QTE_COMMENT, EST_QUOTE_DESC, EST_QTE_COMMENT_HTML
		FROM       ESTIMATE_QUOTE
		WHERE     (ESTIMATE_NUMBER = @EstNo) AND (EST_COMPONENT_NBR = @EstCompNo) AND (EST_QUOTE_NBR = @EstQuoteNo)
		
	INSERT INTO [EVENT_GEN]
	(
	EVENT_GEN_LABEL,
	EVENT_GEN_DESC_LONG,
	[TYPE],
	[START_DATE],
	END_DATE,
	START_TIME,
	END_TIME,
	OCCUR,
	DAY_INCREMENT,
	DAYS,
	QTY_HOURS,
	QTY_TYPE,
	ALL_DAY,
	JOB_NUMBER,
	JOB_COMPONENT_NBR,
	EST_NUMBER,
	EST_COMPONENT_NBR,
	EST_QUOTE_NUMBER,
	FNC_CODE,
	AD_NUMBER,
	CREATE_DATE,
	CREATE_USER,
	GENERATE_DATE,
	GENERATE_USER
    )
    SELECT
        	EVENT_GEN_LABEL,
	        EVENT_GEN_DESC_LONG,
	        [TYPE],
	        [START_DATE],
	        END_DATE,
	        START_TIME,
	        END_TIME,
	        OCCUR,
	        DAY_INCREMENT,
	        DAYS,
	        QTY_HOURS,
	        QTY_TYPE,
	        ALL_DAY,
	        JOB_NUMBER,
	        JOB_COMPONENT_NBR,
	        @ESTIMATE_NUMBER,
	        @EST_COMPONENT_NBR,
	        @NEXT_QTE_NBR,
	        FNC_CODE,
	        AD_NUMBER,
	        CREATE_DATE,
	        CREATE_USER,
	        GENERATE_DATE,
	        GENERATE_USER
	FROM EVENT_GEN        
	WHERE     (EST_NUMBER = @EstNo) AND (EST_COMPONENT_NBR = @EstCompNo) AND (EST_QUOTE_NUMBER = @EstQuoteNo);




	SELECT @NEXT_REV_NBR = ISNULL(MAX(EST_REV_NBR),-1) + 1 FROM ESTIMATE_REV
	WHERE ESTIMATE_NUMBER = @ESTIMATE_NUMBER AND EST_COMPONENT_NBR = @EST_COMPONENT_NBR AND EST_QUOTE_NBR = @NEXT_QTE_NBR

	if @Recalculate = 1
	Begin
		INSERT INTO [ESTIMATE_REV]
		(
			[ESTIMATE_NUMBER],
			[EST_COMPONENT_NBR],
			[EST_QUOTE_NBR],
			[EST_REV_NBR],
			[EST_REV_COMMENT],
			[SPEC_VER],
			[SPEC_REV],
			[SPEC_QTY_SEQ_NBR],
			[JOB_QTY],
			[SPEC_RTF],
			[BLENDED_TIME_RATE],
			[EST_REV_COMMENT_HTML]
		)
		SELECT     @ESTIMATE_NUMBER, @EST_COMPONENT_NBR, @NEXT_QTE_NBR, @NEXT_REV_NBR, EST_REV_COMMENT, SPEC_VER, SPEC_REV, SPEC_QTY_SEQ_NBR, JOB_QTY, SPEC_RTF, NULL, EST_REV_COMMENT_HTML
		FROM       ESTIMATE_REV
		WHERE     (ESTIMATE_NUMBER = @EstNo) AND (EST_COMPONENT_NBR = @EstCompNo) AND (EST_QUOTE_NBR = @EstQuoteNo) AND (EST_REV_NBR = @EstRevNo)
	End
	else
	Begin
		INSERT INTO [ESTIMATE_REV]
		(
			[ESTIMATE_NUMBER],
			[EST_COMPONENT_NBR],
			[EST_QUOTE_NBR],
			[EST_REV_NBR],
			[EST_REV_COMMENT],
			[SPEC_VER],
			[SPEC_REV],
			[SPEC_QTY_SEQ_NBR],
			[JOB_QTY],
			[SPEC_RTF],
			[BLENDED_TIME_RATE],
			[EST_REV_COMMENT_HTML]
		)
		SELECT     @ESTIMATE_NUMBER, @EST_COMPONENT_NBR, @NEXT_QTE_NBR, @NEXT_REV_NBR, EST_REV_COMMENT, SPEC_VER, SPEC_REV, SPEC_QTY_SEQ_NBR, JOB_QTY, SPEC_RTF, BLENDED_TIME_RATE, EST_REV_COMMENT_HTML
		FROM       ESTIMATE_REV
		WHERE     (ESTIMATE_NUMBER = @EstNo) AND (EST_COMPONENT_NBR = @EstCompNo) AND (EST_QUOTE_NBR = @EstQuoteNo) AND (EST_REV_NBR = @EstRevNo)
	End
	


--VARS TO MEET PARAM REQUIREMENTS
	DECLARE
		@JOB_NUMBER INT,
		@JOB_COMPONENT_NBR SMALLINT,
		@CL_CODE AS VARCHAR(6),
	    @DIV_CODE AS VARCHAR(6),
	    @PRD_CODE AS VARCHAR(6),
	    @SC_CODE AS VARCHAR(6),
		@EMP_CODE AS VARCHAR(6),
		@FNC_CODE AS VARCHAR(6),
	    @BA_BATCH_ID INT,
	--GOING TO MAP THESE BACK TO OTHER INTERNAL VARS
		@ROW_BILLING_RATE AS DECIMAL(9,2),
		@ROW_RATE_LEVEL AS SMALLINT,
		@ROW_TAX_CODE AS VARCHAR(4),
		@ROW_TAX_LEVEL SMALLINT,
		@ROW_NOBILL_FLAG SMALLINT,
		@ROW_NOBILL_LEVEL SMALLINT,
		@ROW_COMM DECIMAL(9,3),
		@ROW_COMM_LEVEL SMALLINT,
		@ROW_TAX_COMM SMALLINT,
		@ROW_TAX_COMM_ONLY SMALLINT,
		@ROW_TAX_COMM_FLAGS_LEVEL SMALLINT,
		@ROW_FEE_TIME_FLAG SMALLINT,
		@ROW_FEE_TIME_LEVEL SMALLINT,
		--USED TO BE INPUTS, SHOULD BE PULLED FROM BEN'S FUNCTIONS AND OTHER TABLES
		@EST_FNC_TYPE VARCHAR(1),		
		@TAX_CODE VARCHAR(4),
		@TAX_STATE_PCT DECIMAL(7,4),
		@TAX_COUNTY_PCT DECIMAL(7,4),
		@TAX_CITY_PCT DECIMAL(7,4),		
		@EST_REV_RATE DECIMAL(15,4),
		@TAX_COMM SMALLINT,
		@TAX_COMM_ONLY SMALLINT,
		@TAX_RESALE SMALLINT,
		@EST_COMM_FLAG SMALLINT,
		@EST_TAX_FLAG SMALLINT,
		@EST_NONBILL_FLAG SMALLINT,
		@EXT_NONRESALE_TAX DECIMAL(14,2),
		@EXT_STATE_RESALE DECIMAL(14,2),
		@EXT_COUNTY_RESALE DECIMAL(14,2),
		@EXT_CITY_RESALE DECIMAL(14,2),
		@EST_REV_EXT_AMT DECIMAL(15,2),
		@EST_REV_COMM_PCT DECIMAL(6,3), --MARKUP PCT
		@EXT_MARKUP_AMT DECIMAL(14,2),
		@EST_REV_CONT_PCT DECIMAL(6,3),
		@EST_REV_SUP_BY_CDE VARCHAR(6),
		@EST_FNC_COMMENT VARCHAR(4000),
		@FEE_TIME SMALLINT,
	    @LINE_TOTAL DECIMAL(14,2),
		@LINE_TOTAL_CONT DECIMAL(14,2),
	    @EXT_CONTINGENCY DECIMAL(14,2),
	    @EXT_MU_CONT DECIMAL(14,2),
	    @EXT_STATE_CONT DECIMAL(14,2),
	    @EXT_COUNTY_CONT DECIMAL(14,2),
	    @EXT_CITY_CONT DECIMAL(14,2),
	    @EXT_NR_CONT DECIMAL(14,2),
	    @EST_CPM_FLAG SMALLINT,
	    @JOB_MARKUP_PCT DECIMAL(7,3),
	    @EST_MARKUP_PCT DECIMAL(7,3),
		@EST_REV_QUANTITY DECIMAL(15,2),
		@EST_SEQ_NBR INT

	--SET @JOB_NUMBER = NULL;
	--SET @JOB_COMPONENT_NBR = NULL;
	--SET @BA_BATCH_ID = NULL;
	SELECT @CL_CODE = CL_CODE, @DIV_CODE = DIV_CODE, @PRD_CODE = PRD_CODE, @SC_CODE = SC_CODE, @EST_MARKUP_PCT = EST_MARKUP_PCT
	FROM ESTIMATE_LOG WITH(NOLOCK)
	WHERE ESTIMATE_NUMBER = @ESTIMATE_NUMBER;
	
	SELECT @JOB_NUMBER = JOB_NUMBER, @JOB_COMPONENT_NBR = JOB_COMPONENT_NBR, @JOB_MARKUP_PCT = JOB_MARKUP_PCT
	FROM JOB_COMPONENT WITH(NOLOCK)
	WHERE ESTIMATE_NUMBER = @ESTIMATE_NUMBER AND EST_COMPONENT_NBR = @EST_COMPONENT_NBR;
	
	IF @EMP_CODE = ''
	    BEGIN
	        SET @EMP_CODE = NULL;
	    END
	IF @JOB_NUMBER = '' or @JOB_NUMBER = 0
	    BEGIN
	        SET @JOB_NUMBER = NULL;
	    END
	IF @JOB_COMPONENT_NBR = '' or @JOB_COMPONENT_NBR = 0
	    BEGIN
	        SET @JOB_COMPONENT_NBR = NULL;
	    END

if @Recalculate = 1
	Begin

	INSERT INTO #estdet
	SELECT     @ESTIMATE_NUMBER, @EST_COMPONENT_NBR, @NEXT_QTE_NBR, 
							  @NEXT_REV_NBR, ESTIMATE_REV_DET.SEQ_NBR, ESTIMATE_REV_DET.FNC_CODE, ESTIMATE_REV_DET.EST_REV_COMM_PCT,
							  ESTIMATE_REV_DET.EST_REV_CONT_PCT, ESTIMATE_REV_DET.EST_REV_QUANTITY, ESTIMATE_REV_DET.EST_REV_RATE, 
							  ESTIMATE_REV_DET.EST_REV_SUP_BY_CDE, ESTIMATE_REV_DET.EST_REV_SUP_BY_NTE,   
							  ESTIMATE_REV_DET.EST_REV_EXT_AMT, ESTIMATE_REV_DET.TAX_CODE, ESTIMATE_REV_DET.EST_FNC_COMMENT, ESTIMATE_REV_DET.EXT_MARKUP_AMT, 
							  ESTIMATE_REV_DET.EXT_CONTINGENCY, ESTIMATE_REV_DET.LINE_TOTAL, ESTIMATE_REV_DET.INCL_CPU,
							  ESTIMATE_REV_DET.EST_FNC_TYPE, ESTIMATE_REV_DET.EST_CPM_FLAG, ESTIMATE_REV_DET.TAX_STATE_PCT, ESTIMATE_REV_DET.TAX_COUNTY_PCT, 
							  ESTIMATE_REV_DET.TAX_CITY_PCT, ESTIMATE_REV_DET.TAX_COMM, ESTIMATE_REV_DET.TAX_COMM_ONLY, 
							  ESTIMATE_REV_DET.TAX_RESALE, ESTIMATE_REV_DET.EST_COMM_FLAG, ESTIMATE_REV_DET.EST_TAX_FLAG, ESTIMATE_REV_DET.EST_NONBILL_FLAG,  
							  ESTIMATE_REV_DET.EXT_NONRESALE_TAX, ESTIMATE_REV_DET.EXT_STATE_RESALE, 
							  ESTIMATE_REV_DET.EXT_COUNTY_RESALE, ESTIMATE_REV_DET.EXT_CITY_RESALE, ESTIMATE_REV_DET.EXT_MU_CONT, 
							  ESTIMATE_REV_DET.EXT_STATE_CONT, ESTIMATE_REV_DET.EXT_COUNTY_CONT, ESTIMATE_REV_DET.EXT_CITY_CONT, 
							  ESTIMATE_REV_DET.EXT_NR_CONT, ESTIMATE_REV_DET.LINE_TOTAL_CONT, ESTIMATE_REV_DET.EST_PHASE_ID, ESTIMATE_REV_DET.EST_PHASE_DESC,
							  ESTIMATE_REV_DET.FEE_TIME, ESTIMATE_REV_DET.EST_FNC_COMMENT_HTML, ESTIMATE_REV_DET.EST_REV_SUP_BY_HTML 
		FROM         ESTIMATE_QUOTE INNER JOIN
							  ESTIMATE_REV ON ESTIMATE_QUOTE.ESTIMATE_NUMBER = ESTIMATE_REV.ESTIMATE_NUMBER AND 
							  ESTIMATE_QUOTE.EST_COMPONENT_NBR = ESTIMATE_REV.EST_COMPONENT_NBR AND 
							  ESTIMATE_QUOTE.EST_QUOTE_NBR = ESTIMATE_REV.EST_QUOTE_NBR INNER JOIN
							  ESTIMATE_COMPONENT ON ESTIMATE_QUOTE.ESTIMATE_NUMBER = ESTIMATE_COMPONENT.ESTIMATE_NUMBER AND 
							  ESTIMATE_QUOTE.EST_COMPONENT_NBR = ESTIMATE_COMPONENT.EST_COMPONENT_NBR INNER JOIN
							  ESTIMATE_LOG ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_LOG.ESTIMATE_NUMBER INNER JOIN
							  ESTIMATE_REV_DET ON ESTIMATE_REV.ESTIMATE_NUMBER = ESTIMATE_REV_DET.ESTIMATE_NUMBER AND 
							  ESTIMATE_REV.EST_COMPONENT_NBR = ESTIMATE_REV_DET.EST_COMPONENT_NBR AND 
							  ESTIMATE_REV.EST_QUOTE_NBR = ESTIMATE_REV_DET.EST_QUOTE_NBR AND 
							  ESTIMATE_REV.EST_REV_NBR = ESTIMATE_REV_DET.EST_REV_NBR INNER JOIN
							  FUNCTIONS ON ESTIMATE_REV_DET.FNC_CODE = FUNCTIONS.FNC_CODE LEFT OUTER JOIN
							  JOB_COMPONENT ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = JOB_COMPONENT.ESTIMATE_NUMBER AND 
							  ESTIMATE_COMPONENT.EST_COMPONENT_NBR = JOB_COMPONENT.EST_COMPONENT_NBR
		WHERE     (ESTIMATE_QUOTE.ESTIMATE_NUMBER = @EstNo) AND (ESTIMATE_QUOTE.EST_COMPONENT_NBR = @EstCompNo) AND 
							  (ESTIMATE_QUOTE.EST_QUOTE_NBR = @EstQuoteNo) AND (ESTIMATE_REV.EST_REV_NBR = @EstRevNo) AND ((FUNCTIONS.FNC_INACTIVE) = 0 OR (FUNCTIONS.FNC_INACTIVE IS NULL))
		ORDER BY ESTIMATE_REV_DET.SEQ_NBR


	SELECT @NumberRecords = COUNT(*) FROM #estdet
	SET @RowCount = 1


	WHILE @RowCount <= @NumberRecords
	BEGIN

		SET @TAX_STATE_PCT = 0
		SET @TAX_COUNTY_PCT = 0
		SET @TAX_CITY_PCT = 0
		SET @TAX_RESALE = 0	

		 SELECT @EMP_CODE = EST_REV_SUP_BY_CDE, @FNC_CODE = FNC_CODE, @EST_REV_QUANTITY = EST_REV_QUANTITY, @EST_REV_CONT_PCT = EST_REV_CONT_PCT, @EST_FNC_TYPE = EST_FNC_TYPE, @EST_SEQ_NBR = SEQ_NBR, @EST_REV_RATE = EST_REV_RATE, @EST_CPM_FLAG = EST_CPM_FLAG
		 FROM #estdet
		 WHERE RowID = @RowCount

		 EXECUTE dbo.usp_wv_Estimating_GetBillingRates
				@THIS_FNC_CODE = @FNC_CODE,
				@THIS_JOB_NUMBER = @JOB_NUMBER,
				@THIS_JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR,
				@THIS_CL_CODE = @CL_CODE,
	            @THIS_DIV_CODE = @DIV_CODE,
	            @THIS_PRD_CODE = @PRD_CODE,
	            @THIS_SC_CODE = @SC_CODE,
                @THIS_EMP_CODE = @EMP_CODE,
				@THIS_EMP_TITLE_ID = NULL, 
				@THIS_BILLING_RATE = @ROW_BILLING_RATE OUTPUT,
				@THIS_RATE_LEVEL = @ROW_RATE_LEVEL OUTPUT,
				@THIS_TAX_CODE = @ROW_TAX_CODE OUTPUT,
				@THIS_TAX_LEVEL = @ROW_TAX_LEVEL OUTPUT,
				@THIS_NOBILL_FLAG = @ROW_NOBILL_FLAG OUTPUT,
				@THIS_NOBILL_LEVEL = @ROW_NOBILL_LEVEL OUTPUT,
				@THIS_COMM = @ROW_COMM OUTPUT,
				@THIS_COMM_LEVEL = @ROW_COMM_LEVEL OUTPUT,
				@THIS_TAX_COMM = @ROW_TAX_COMM OUTPUT,
				@THIS_TAX_COMM_ONLY = @ROW_TAX_COMM_ONLY OUTPUT,
				@THIS_TAX_COMM_FLAGS_LEVEL = @ROW_TAX_COMM_FLAGS_LEVEL OUTPUT,
				@THIS_FEE_TIME_FLAG = @ROW_FEE_TIME_FLAG OUTPUT,
				@THIS_FEE_TIME_LEVEL = @ROW_FEE_TIME_LEVEL OUTPUT;
				
							--MAP THEM BACK TO VARS FOR INSERT
	--NOT SURE OF ALL THE MAPPINGS...WILL DEFINATELY NEED TO BE WORKED ON AND VERIFIED...
				SET @TAX_CODE = @ROW_TAX_CODE;	
				SET @TAX_COMM = @ROW_TAX_COMM;
				SET @TAX_COMM_ONLY = @ROW_TAX_COMM_ONLY;		
				--@TAX_RESALE??		
				SET @EST_NONBILL_FLAG = @ROW_NOBILL_FLAG;

				IF @EST_FNC_TYPE = 'V' OR @EST_FNC_TYPE = 'I'
				BEGIN
					IF @ROW_BILLING_RATE IS NOT NULL AND @ROW_BILLING_RATE <> 0					
					BEGIN
						SET @EST_REV_RATE = @ROW_BILLING_RATE;
					END
				END
				ELSE
				BEGIN
					SET @EST_REV_RATE = @ROW_BILLING_RATE;
				END
				
				SET @EST_REV_COMM_PCT = @ROW_COMM; --this is the markup percent
				SET @EST_REV_SUP_BY_CDE = @EMP_CODE;
				SET @FEE_TIME = @ROW_FEE_TIME_FLAG;	
	
				if @EST_REV_COMM_PCT IS NULL
					Begin
						SET @EST_REV_COMM_PCT = @EST_MARKUP_PCT
					End	
				--GET TAX INFO IF AVAILABLE
				IF NOT (@ROW_TAX_CODE IS NULL)
				BEGIN
					SET @EST_TAX_FLAG = 1;
					SELECT
						@TAX_STATE_PCT = TAX_STATE_PERCENT,
						@TAX_COUNTY_PCT = TAX_COUNTY_PERCENT,
						@TAX_CITY_PCT = TAX_CITY_PERCENT,
						@TAX_RESALE = TAX_RESALE
						--? = TAX_RESALE_NUMBER
					FROM 
						SALES_TAX WITH(NOLOCK)
					WHERE
						TAX_CODE = @ROW_TAX_CODE;	
				END
				ELSE
				BEGIN
					SET @EST_TAX_FLAG = 0;
				END
	
	
				IF @ROW_COMM <> 0
				BEGIN
					SET @EST_COMM_FLAG = 1;
				END
				ELSE
				BEGIN
					SET @EST_COMM_FLAG = 0;
				END
    --SELECT @TAX_CODE
				--Certains columns must default to zero instead of NULL.
				IF @TAX_STATE_PCT IS NULL
				BEGIN
					SET @TAX_STATE_PCT = 0;
				END
				IF @TAX_COUNTY_PCT IS NULL
				BEGIN
					SET @TAX_COUNTY_PCT = 0;
				END
				IF @TAX_CITY_PCT IS NULL
				BEGIN
					SET @TAX_CITY_PCT = 0;
				END
				IF @TAX_COMM IS NULL
				BEGIN
					SET @TAX_COMM = 0;
				END
				IF @TAX_RESALE IS NULL
				BEGIN
					SET @TAX_RESALE = 0;
				END
				IF @EXT_NONRESALE_TAX IS NULL
				BEGIN
					SET @EXT_NONRESALE_TAX = 0;
				END
				IF @EXT_STATE_RESALE IS NULL
				BEGIN
					SET @EXT_STATE_RESALE = 0;
				END
				IF @EXT_COUNTY_RESALE IS NULL
				BEGIN
					SET @EXT_COUNTY_RESALE = 0;
				END
				IF @EXT_CITY_RESALE IS NULL
				BEGIN
					SET @EXT_CITY_RESALE = 0;
				END
				SET @EXT_CONTINGENCY = 0;
				SET @EXT_MU_CONT = 0;
				SET @EXT_STATE_CONT = 0;
				SET @EXT_COUNTY_CONT = 0;
				SET @EXT_CITY_CONT = 0;
				SET @EXT_NR_CONT = 0;
				SET @EST_REV_EXT_AMT = 0;
	
				--IF PRODUCT HAS CONT % INSERT ON DEFAULT ROW
				SELECT @EST_REV_CONT_PCT = PRD_CONT_PCT
				FROM PRODUCT
				WHERE CL_CODE = @CL_CODE AND DIV_CODE = @DIV_CODE AND PRD_CODE = @PRD_CODE

				 IF (NOT (@EST_REV_QUANTITY IS NULL)) AND (NOT (@EST_REV_RATE IS NULL))
				BEGIN
					IF @EST_CPM_FLAG = 1
					BEGIN
						SET @EST_REV_EXT_AMT = (@EST_REV_QUANTITY / 1000) * @EST_REV_RATE
					END
					ELSE
					BEGIN
						SET @EST_REV_EXT_AMT = @EST_REV_QUANTITY * @EST_REV_RATE
					END					
				END
				IF (NOT (@EST_REV_EXT_AMT IS NULL)) AND (NOT (@EST_REV_COMM_PCT IS NULL))
				BEGIN
					SET @EXT_MARKUP_AMT = @EST_REV_EXT_AMT * (@EST_REV_COMM_PCT / 100)
				END
				IF (NOT (@EST_REV_CONT_PCT IS NULL)) AND (NOT (@EST_REV_EXT_AMT IS NULL))
				BEGIN
					SET @EXT_CONTINGENCY = @EST_REV_EXT_AMT * (@EST_REV_CONT_PCT / 100)
					IF (NOT (@EST_REV_COMM_PCT IS NULL)) AND (NOT (@EXT_MARKUP_AMT IS NULL))
					BEGIN
						SET @EXT_MU_CONT = @EXT_MARKUP_AMT * (@EST_REV_CONT_PCT / 100)
					END
				END
				IF @TAX_RESALE = 1
				BEGIN
					IF @TAX_COMM_ONLY <> 1
					BEGIN
						SET @EXT_STATE_RESALE = @EST_REV_EXT_AMT * (@TAX_STATE_PCT / 100)
						SET @EXT_COUNTY_RESALE = @EST_REV_EXT_AMT * (@TAX_COUNTY_PCT / 100)
						SET @EXT_CITY_RESALE = @EST_REV_EXT_AMT * (@TAX_CITY_PCT / 100)
						--SET @LINE_TOTAL = ISNULL(@EXT_STATE_RESALE,0.00) + ISNULL(@EXT_COUNTY_RESALE,0.00) + ISNULL(@EXT_CITY_RESALE,0.00);
					END
					IF @TAX_COMM = 1 AND @EXT_MARKUP_AMT > 0
					BEGIN
						SET @EXT_STATE_RESALE = @EXT_STATE_RESALE + (@EXT_MARKUP_AMT * (@TAX_STATE_PCT / 100))
						SET @EXT_COUNTY_RESALE = @EXT_COUNTY_RESALE + (@EXT_MARKUP_AMT * (@TAX_COUNTY_PCT / 100))
						SET @EXT_CITY_RESALE =  @EXT_CITY_RESALE + (@EXT_MARKUP_AMT * (@TAX_CITY_PCT / 100))
					END
					IF @EXT_CONTINGENCY > 0
					BEGIN
						IF @TAX_COMM = 1 AND @TAX_COMM_ONLY = 1
						BEGIN
							SET @EXT_STATE_CONT = @EXT_CONTINGENCY * (@TAX_STATE_PCT / 100)
							SET @EXT_COUNTY_CONT = @EXT_CONTINGENCY * (@TAX_COUNTY_PCT / 100)
							SET @EXT_CITY_CONT = @EXT_CONTINGENCY * (@TAX_CITY_PCT / 100)
						END
						ELSE IF @TAX_COMM = 1
						BEGIN
							SET @EXT_STATE_CONT = (@EXT_CONTINGENCY + @EXT_MU_CONT) * (@TAX_STATE_PCT / 100)
							SET @EXT_COUNTY_CONT = (@EXT_CONTINGENCY + @EXT_MU_CONT) * (@TAX_COUNTY_PCT / 100)
							SET @EXT_CITY_CONT = (@EXT_CONTINGENCY + @EXT_MU_CONT) * (@TAX_CITY_PCT / 100)
						END
					END
				END
				ELSE
				BEGIN
					IF @EST_FNC_TYPE = 'V'
					BEGIN
						IF @TAX_COMM_ONLY <> 1
						BEGIN
							SET @EXT_NONRESALE_TAX = (@EST_REV_EXT_AMT * (@TAX_STATE_PCT / 100)) + (@EST_REV_EXT_AMT * (@TAX_COUNTY_PCT / 100)) + (@EST_REV_EXT_AMT * (@TAX_CITY_PCT / 100))
						END
						IF @EXT_CONTINGENCY > 0
						BEGIN
							IF @TAX_COMM = 1 AND @TAX_COMM_ONLY = 1
							BEGIN
								SET @EXT_NR_CONT = (@EXT_CONTINGENCY * (@TAX_STATE_PCT / 100)) + ( @EXT_CONTINGENCY * (@TAX_COUNTY_PCT / 100)) + (@EXT_CONTINGENCY * (@TAX_CITY_PCT / 100))
							END
							ELSE IF @TAX_COMM = 1
							BEGIN
								SET @EXT_NR_CONT = ((@EXT_CONTINGENCY + @EXT_MU_CONT) * (@TAX_STATE_PCT / 100)) + ((@EXT_CONTINGENCY + @EXT_MU_CONT) * (@TAX_COUNTY_PCT / 100)) + ((@EXT_CONTINGENCY + @EXT_MU_CONT) * (@TAX_CITY_PCT / 100))
							END
						END
					END
					ELSE IF @EST_FNC_TYPE = 'E' OR @EST_FNC_TYPE = 'I'
					BEGIN
						IF @TAX_COMM_ONLY <> 1
						BEGIN
							SET @EXT_STATE_RESALE = @EST_REV_EXT_AMT * (@TAX_STATE_PCT / 100)
							SET @EXT_COUNTY_RESALE = @EST_REV_EXT_AMT * (@TAX_COUNTY_PCT / 100)
							SET @EXT_CITY_RESALE = @EST_REV_EXT_AMT * (@TAX_CITY_PCT / 100)
						END
						IF @EXT_CONTINGENCY > 0
						BEGIN
							IF @TAX_COMM = 1 AND @TAX_COMM_ONLY = 1
							BEGIN
								SET @EXT_STATE_CONT = @EXT_CONTINGENCY * (@TAX_STATE_PCT / 100)
								SET @EXT_COUNTY_CONT = @EXT_CONTINGENCY * (@TAX_COUNTY_PCT / 100)
								SET @EXT_CITY_CONT = @EXT_CONTINGENCY * (@TAX_CITY_PCT / 100)
							END
							ELSE IF @TAX_COMM = 1
							BEGIN
								SET @EXT_STATE_CONT = (@EXT_CONTINGENCY + @EXT_MU_CONT) * (@TAX_STATE_PCT / 100)
								SET @EXT_COUNTY_CONT = (@EXT_CONTINGENCY + @EXT_MU_CONT) * (@TAX_COUNTY_PCT / 100)
								SET @EXT_CITY_CONT = (@EXT_CONTINGENCY + @EXT_MU_CONT) * (@TAX_CITY_PCT / 100)
							END
						END
					END
					IF @TAX_COMM = 1 AND @EXT_MARKUP_AMT > 0
					BEGIN
						SET @EXT_STATE_RESALE = @EXT_STATE_RESALE + (@EXT_MARKUP_AMT * (@TAX_STATE_PCT / 100))
						SET @EXT_COUNTY_RESALE = @EXT_COUNTY_RESALE + (@EXT_MARKUP_AMT * (@TAX_COUNTY_PCT / 100))
						SET @EXT_CITY_RESALE =  @EXT_CITY_RESALE + (@EXT_MARKUP_AMT * (@TAX_CITY_PCT / 100))
					END
				END


    
				--DOES THIS NEED TO INCLUDE TAX??
				SET @LINE_TOTAL_CONT = ISNULL(@EXT_CONTINGENCY,0.00) + ISNULL(@EXT_MU_CONT,0.00) + ISNULL(@EXT_STATE_CONT,0.00) + ISNULL(@EXT_COUNTY_CONT,0.00) + ISNULL(@EXT_CITY_CONT,0.00) + ISNULL(@EXT_NR_CONT,0.00);
				SET @LINE_TOTAL = ISNULL(@EST_REV_EXT_AMT,0.00) + ISNULL(@EXT_MARKUP_AMT,0.00) + ISNULL(@EXT_STATE_RESALE,0.00) + ISNULL(@EXT_COUNTY_RESALE,0.00) + ISNULL(@EXT_CITY_RESALE,0.00) + ISNULL(@EXT_NONRESALE_TAX,0.00);

		UPDATE #estdet 
		SET EST_REV_RATE = @EST_REV_RATE,
			EST_REV_EXT_AMT = @EST_REV_EXT_AMT,
			EST_REV_COMM_PCT = @EST_REV_COMM_PCT,
			EXT_MARKUP_AMT = @EXT_MARKUP_AMT,
			EXT_CONTINGENCY = @EXT_CONTINGENCY,
			EXT_MU_CONT = @EXT_MU_CONT,
			TAX_CODE = @TAX_CODE,
			EST_NONBILL_FLAG = @EST_NONBILL_FLAG,
			TAX_STATE_PCT = @TAX_STATE_PCT,
			TAX_COUNTY_PCT = @TAX_COUNTY_PCT,
			TAX_CITY_PCT = @TAX_CITY_PCT,
			TAX_COMM = @TAX_COMM,
			TAX_COMM_ONLY = @TAX_COMM_ONLY,
			TAX_RESALE = @TAX_RESALE,
			FEE_TIME = @FEE_TIME,
			EST_TAX_FLAG = @EST_TAX_FLAG,
			EST_COMM_FLAG = @EST_COMM_FLAG,
			EXT_NONRESALE_TAX = @EXT_NONRESALE_TAX,
			EXT_STATE_RESALE = @EXT_STATE_RESALE,
			EXT_COUNTY_RESALE = @EXT_COUNTY_RESALE,
			EXT_CITY_RESALE = @EXT_CITY_RESALE,
			EXT_STATE_CONT = @EXT_STATE_CONT,
			EXT_COUNTY_CONT = @EXT_COUNTY_CONT,
			EXT_CITY_CONT = @EXT_CITY_CONT,
			EXT_NR_CONT = @EXT_NR_CONT,
			LINE_TOTAL = @LINE_TOTAL,
			LINE_TOTAL_CONT = @LINE_TOTAL_CONT
		WHERE FNC_CODE = @FNC_CODE AND SEQ_NBR = @EST_SEQ_NBR

		SET @RowCount = @RowCount + 1
	END

	 --SELECT * FROM #estdet  

		INSERT INTO [ESTIMATE_REV_DET]
				(
					[ESTIMATE_NUMBER],
					[EST_COMPONENT_NBR],
					[EST_QUOTE_NBR],
					[EST_REV_NBR],
					[SEQ_NBR],
					[FNC_CODE],
					[EST_REV_COMM_PCT],
					[EST_REV_CONT_PCT],
					[EST_REV_QUANTITY],
					[EST_REV_RATE],
					[EST_REV_SUP_BY_CDE],
					[EST_REV_SUP_BY_NTE],
					[EST_REV_EXT_AMT],
					[TAX_CODE],
					[EST_FNC_COMMENT],
					[EXT_MARKUP_AMT],
					[EXT_CONTINGENCY],
					[LINE_TOTAL],
					[INCL_CPU],
					[EST_FNC_TYPE],
					[EST_CPM_FLAG],
					[TAX_STATE_PCT],
					[TAX_COUNTY_PCT],
					[TAX_CITY_PCT],
					[TAX_COMM],
					[TAX_COMM_ONLY],
					[TAX_RESALE],
					[EST_COMM_FLAG],
					[EST_TAX_FLAG],
					[EST_NONBILL_FLAG],
					[EXT_NONRESALE_TAX],
					[EXT_STATE_RESALE],
					[EXT_COUNTY_RESALE],
					[EXT_CITY_RESALE],
					[EXT_MU_CONT],
					[EXT_STATE_CONT],
					[EXT_COUNTY_CONT],
					[EXT_CITY_CONT],
					[EXT_NR_CONT],
					[LINE_TOTAL_CONT],
					[EST_PHASE_ID],
					[EST_PHASE_DESC],
					[EST_FNC_COMMENT_HTML],
					[EST_REV_SUP_BY_HTML]
				)
		SELECT     ESTIMATE_NUMBER, EST_COMPONENT_NBR, EST_QUOTE_NBR, 
							  EST_REV_NBR, SEQ_NBR, FNC_CODE, EST_REV_COMM_PCT,
							  EST_REV_CONT_PCT, EST_REV_QUANTITY, EST_REV_RATE, 
							  EST_REV_SUP_BY_CDE, EST_REV_SUP_BY_NTE,   
							  EST_REV_EXT_AMT, TAX_CODE, EST_FNC_COMMENT, EXT_MARKUP_AMT, 
							  EXT_CONTINGENCY, LINE_TOTAL, INCL_CPU,
							  EST_FNC_TYPE, EST_CPM_FLAG, TAX_STATE_PCT, TAX_COUNTY_PCT, 
							  TAX_CITY_PCT, TAX_COMM, TAX_COMM_ONLY, 
							  TAX_RESALE, EST_COMM_FLAG, EST_TAX_FLAG, EST_NONBILL_FLAG,  
							  EXT_NONRESALE_TAX, EXT_STATE_RESALE, 
							  EXT_COUNTY_RESALE, EXT_CITY_RESALE, EXT_MU_CONT, 
							  EXT_STATE_CONT, EXT_COUNTY_CONT, EXT_CITY_CONT, 
							  EXT_NR_CONT, LINE_TOTAL_CONT, EST_PHASE_ID, EST_PHASE_DESC,EST_FNC_COMMENT_HTML, EST_REV_SUP_BY_HTML
		FROM         #estdet
	End
Else
	Begin
		INSERT INTO [ESTIMATE_REV_DET]
				(
					[ESTIMATE_NUMBER],
					[EST_COMPONENT_NBR],
					[EST_QUOTE_NBR],
					[EST_REV_NBR],
					[SEQ_NBR],
					[FNC_CODE],
					[EST_REV_COMM_PCT],
					[EST_REV_CONT_PCT],
					[EST_REV_QUANTITY],
					[EST_REV_RATE],
					[EST_REV_SUP_BY_CDE],
					[EST_REV_SUP_BY_NTE],
					[EST_REV_EXT_AMT],
					[TAX_CODE],
					[EST_FNC_COMMENT],
					[EXT_MARKUP_AMT],
					[EXT_CONTINGENCY],
					[LINE_TOTAL],
					[INCL_CPU],
					[EST_FNC_TYPE],
					[EST_CPM_FLAG],
					[TAX_STATE_PCT],
					[TAX_COUNTY_PCT],
					[TAX_CITY_PCT],
					[TAX_COMM],
					[TAX_COMM_ONLY],
					[TAX_RESALE],
					[EST_COMM_FLAG],
					[EST_TAX_FLAG],
					[EST_NONBILL_FLAG],
					[EXT_NONRESALE_TAX],
					[EXT_STATE_RESALE],
					[EXT_COUNTY_RESALE],
					[EXT_CITY_RESALE],
					[EXT_MU_CONT],
					[EXT_STATE_CONT],
					[EXT_COUNTY_CONT],
					[EXT_CITY_CONT],
					[EXT_NR_CONT],
					[LINE_TOTAL_CONT],
					[EST_PHASE_ID],
					[EST_PHASE_DESC],
					[EST_FNC_COMMENT_HTML],
					[EST_REV_SUP_BY_HTML]
				)
		SELECT     @ESTIMATE_NUMBER, @EST_COMPONENT_NBR, @NEXT_QTE_NBR, 
							  @NEXT_REV_NBR, ESTIMATE_REV_DET.SEQ_NBR, ESTIMATE_REV_DET.FNC_CODE, ESTIMATE_REV_DET.EST_REV_COMM_PCT,
							  ESTIMATE_REV_DET.EST_REV_CONT_PCT, ESTIMATE_REV_DET.EST_REV_QUANTITY, ESTIMATE_REV_DET.EST_REV_RATE, 
							  ESTIMATE_REV_DET.EST_REV_SUP_BY_CDE, ESTIMATE_REV_DET.EST_REV_SUP_BY_NTE,   
							  ESTIMATE_REV_DET.EST_REV_EXT_AMT, ESTIMATE_REV_DET.TAX_CODE, ESTIMATE_REV_DET.EST_FNC_COMMENT, ESTIMATE_REV_DET.EXT_MARKUP_AMT, 
							  ESTIMATE_REV_DET.EXT_CONTINGENCY, ESTIMATE_REV_DET.LINE_TOTAL, ESTIMATE_REV_DET.INCL_CPU,
							  ESTIMATE_REV_DET.EST_FNC_TYPE, ESTIMATE_REV_DET.EST_CPM_FLAG, ESTIMATE_REV_DET.TAX_STATE_PCT, ESTIMATE_REV_DET.TAX_COUNTY_PCT, 
							  ESTIMATE_REV_DET.TAX_CITY_PCT, ESTIMATE_REV_DET.TAX_COMM, ESTIMATE_REV_DET.TAX_COMM_ONLY, 
							  ESTIMATE_REV_DET.TAX_RESALE, ESTIMATE_REV_DET.EST_COMM_FLAG, ESTIMATE_REV_DET.EST_TAX_FLAG, ESTIMATE_REV_DET.EST_NONBILL_FLAG,  
							  ESTIMATE_REV_DET.EXT_NONRESALE_TAX, ESTIMATE_REV_DET.EXT_STATE_RESALE, 
							  ESTIMATE_REV_DET.EXT_COUNTY_RESALE, ESTIMATE_REV_DET.EXT_CITY_RESALE, ESTIMATE_REV_DET.EXT_MU_CONT, 
							  ESTIMATE_REV_DET.EXT_STATE_CONT, ESTIMATE_REV_DET.EXT_COUNTY_CONT, ESTIMATE_REV_DET.EXT_CITY_CONT, 
							  ESTIMATE_REV_DET.EXT_NR_CONT, ESTIMATE_REV_DET.LINE_TOTAL_CONT, ESTIMATE_REV_DET.EST_PHASE_ID, ESTIMATE_REV_DET.EST_PHASE_DESC, ESTIMATE_REV_DET.EST_FNC_COMMENT_HTML, ESTIMATE_REV_DET.EST_REV_SUP_BY_HTML 
		FROM         ESTIMATE_QUOTE INNER JOIN
							  ESTIMATE_REV ON ESTIMATE_QUOTE.ESTIMATE_NUMBER = ESTIMATE_REV.ESTIMATE_NUMBER AND 
							  ESTIMATE_QUOTE.EST_COMPONENT_NBR = ESTIMATE_REV.EST_COMPONENT_NBR AND 
							  ESTIMATE_QUOTE.EST_QUOTE_NBR = ESTIMATE_REV.EST_QUOTE_NBR INNER JOIN
							  ESTIMATE_COMPONENT ON ESTIMATE_QUOTE.ESTIMATE_NUMBER = ESTIMATE_COMPONENT.ESTIMATE_NUMBER AND 
							  ESTIMATE_QUOTE.EST_COMPONENT_NBR = ESTIMATE_COMPONENT.EST_COMPONENT_NBR INNER JOIN
							  ESTIMATE_LOG ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_LOG.ESTIMATE_NUMBER INNER JOIN
							  ESTIMATE_REV_DET ON ESTIMATE_REV.ESTIMATE_NUMBER = ESTIMATE_REV_DET.ESTIMATE_NUMBER AND 
							  ESTIMATE_REV.EST_COMPONENT_NBR = ESTIMATE_REV_DET.EST_COMPONENT_NBR AND 
							  ESTIMATE_REV.EST_QUOTE_NBR = ESTIMATE_REV_DET.EST_QUOTE_NBR AND 
							  ESTIMATE_REV.EST_REV_NBR = ESTIMATE_REV_DET.EST_REV_NBR INNER JOIN
							  FUNCTIONS ON ESTIMATE_REV_DET.FNC_CODE = FUNCTIONS.FNC_CODE LEFT OUTER JOIN
							  JOB_COMPONENT ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = JOB_COMPONENT.ESTIMATE_NUMBER AND 
							  ESTIMATE_COMPONENT.EST_COMPONENT_NBR = JOB_COMPONENT.EST_COMPONENT_NBR
		WHERE     (ESTIMATE_QUOTE.ESTIMATE_NUMBER = @EstNo) AND (ESTIMATE_QUOTE.EST_COMPONENT_NBR = @EstCompNo) AND 
							  (ESTIMATE_QUOTE.EST_QUOTE_NBR = @EstQuoteNo) AND (ESTIMATE_REV.EST_REV_NBR = @EstRevNo) AND ((FUNCTIONS.FNC_INACTIVE) = 0 OR (FUNCTIONS.FNC_INACTIVE IS NULL))
		ORDER BY ESTIMATE_REV_DET.SEQ_NBR
	End

	
		
	
	

		

	SET @ERR = @@Error

	--RETURN @ERR
END

--SELECT @QTE_NUM = @NEXT_EST_NBR


