if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_Estimating_GetComments_Combined]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_Estimating_GetComments_Combined]
GO

CREATE PROCEDURE [dbo].[usp_wv_Estimating_GetComments_Combined]
(
	@EST_NBR INT,
	@EST_QUOTE_NBR INT,
	@FNC_CODE VARCHAR(6),	
	@UserID varchar(100)
)
AS
DECLARE @sql nvarchar(4000),
	@paramlist nvarchar(4000),
	@FunctionOption varchar(2),
	@ConsoleOverride smallint,
	@ProdConsFunc smallint,
	@client varchar(6), 
	@division varchar(6),
	@product varchar(6)

SELECT     @FunctionOption = ISNULL(FUNCTION_OPTION, ''), @ConsoleOverride = ISNULL(CONSOL_OVERRIDE, 0)
FROM        ESTIMATE_PRINT_DEF
WHERE     (UPPER(USER_ID) = UPPER(@UserID))

SELECT @client = CL_CODE, @division = DIV_CODE, @product = PRD_CODE
FROM ESTIMATE_LOG
WHERE ESTIMATE_NUMBER = @EST_NBR

SELECT @ProdConsFunc = PRD_CONSOL_FUNC
FROM PRODUCT
WHERE CL_CODE = @client AND DIV_CODE = @division AND PRD_CODE = @product

BEGIN
	SELECT @sql = 'SELECT EQ.ESTIMATE_NUMBER, EQ.EST_COMPONENT_NBR, EQ.EST_QUOTE_NBR, ESTIMATE_REV.EST_REV_NBR, E.FNC_CODE,
			ISNULL(E.EST_FNC_COMMENT,'''') AS EST_FNC_COMMENT, ISNULL(E.EST_FNC_COMMENT_HTML,'''') AS EST_FNC_COMMENT_HTML,
			ISNULL(E.EST_REV_SUP_BY_NTE,'''') AS EST_REV_SUP_BY_NTE, ISNULL(E.EST_REV_SUP_BY_HTML,'''') AS EST_REV_SUP_BY_HTML,
			ISNULL(EL.EST_LOG_COMMENT,'''') AS EST_LOG_COMMENT, ISNULL(EL.EST_LOG_COMMENT_HTML,'''') AS EST_LOG_COMMENT_HTML, 
			ISNULL(EC.EST_COMP_COMMENT,'''') AS EST_COMP_COMMENT, ISNULL(EC.EST_COMP_COMMENT_HTML,'''') AS EST_COMP_COMMENT_HTML,
			ISNULL(EQ.EST_QTE_COMMENT,'''') AS EST_QTE_COMMENT, ISNULL(EQ.EST_QTE_COMMENT_HTML,'''') AS EST_QTE_COMMENT_HTML,
			ISNULL(ESTIMATE_REV.EST_REV_COMMENT,'''') AS EST_REV_COMMENT, ISNULL(ESTIMATE_REV.EST_REV_COMMENT_HTML,'''') AS EST_REV_COMMENT_HTML, E.EST_REV_RATE, ISNULL(ESTIMATE_REV.JOB_QTY,0) AS JOB_QTY
	FROM         ESTIMATE_QUOTE EQ INNER JOIN
						  ESTIMATE_REV ON EQ.ESTIMATE_NUMBER = ESTIMATE_REV.ESTIMATE_NUMBER AND 
						  EQ.EST_COMPONENT_NBR = ESTIMATE_REV.EST_COMPONENT_NBR AND 
						  EQ.EST_QUOTE_NBR = ESTIMATE_REV.EST_QUOTE_NBR INNER JOIN
						  ESTIMATE_COMPONENT EC ON EQ.ESTIMATE_NUMBER = EC.ESTIMATE_NUMBER AND 
						  EQ.EST_COMPONENT_NBR = EC.EST_COMPONENT_NBR INNER JOIN
						  ESTIMATE_LOG EL ON EC.ESTIMATE_NUMBER = EL.ESTIMATE_NUMBER INNER JOIN
						  ESTIMATE_REV_DET E ON ESTIMATE_REV.ESTIMATE_NUMBER = E.ESTIMATE_NUMBER AND 
						  ESTIMATE_REV.EST_COMPONENT_NBR = E.EST_COMPONENT_NBR AND 
						  ESTIMATE_REV.EST_QUOTE_NBR = E.EST_QUOTE_NBR AND 
						  ESTIMATE_REV.EST_REV_NBR = E.EST_REV_NBR INNER JOIN
						  FUNCTIONS ON E.FNC_CODE = FUNCTIONS.FNC_CODE LEFT OUTER JOIN
						  JOB_COMPONENT ON EC.ESTIMATE_NUMBER = JOB_COMPONENT.ESTIMATE_NUMBER AND 
						  EC.EST_COMPONENT_NBR = JOB_COMPONENT.EST_COMPONENT_NBR LEFT OUTER JOIN 
						  JOB_LOG ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER 
	WHERE     (EQ.ESTIMATE_NUMBER = @EST_NBR)'
	if @EST_QUOTE_NBR <> 0
	    Begin
	        SELECT @sql = @sql + 'AND (EQ.EST_QUOTE_NBR = @EST_QUOTE_NBR)'
	    End	
	if @FNC_CODE <> '' AND ((@ProdConsFunc = 1 AND @ConsoleOverride = 0) OR @FunctionOption = 'C')
	Begin
	    SELECT @sql = @sql + '  AND (E.FNC_CODE = @FNC_CODE OR FUNCTIONS.FNC_CONSOLIDATION = @FNC_CODE)'
	End					  
	Else if @FNC_CODE <> ''
	Begin
	    SELECT @sql = @sql + '  AND E.FNC_CODE = @FNC_CODE'
	End	            
	--if @FNC_CODE <> ''
	--    Begin
	--        SELECT @sql = @sql + ' AND (E.FNC_CODE = @FNC_CODE)'  
	--    End	            

SELECT @paramlist = '@EST_NBR INT, @EST_QUOTE_NBR INT, @FNC_CODE VARCHAR(6)'
print @sql
EXEC sp_executesql @sql, @paramlist, @EST_NBR, @EST_QUOTE_NBR, @FNC_CODE



END





