if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_Estimating_GetQuotes]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_Estimating_GetQuotes]
GO






CREATE PROCEDURE [dbo].[usp_wv_Estimating_GetQuotes]
@EstNumber int,
@EstCompNumber int
AS

DECLARE @NumberRecords int, @RowCount int, @sumCPU decimal(20,3), @EstNum int,
	@EstCompNum int,
	@QuoteNum int,
	@RevNum int,
	@EstApprBy varchar(40),
	@EstApprByInt varchar(40)

CREATE TABLE #est(
	RowID int IDENTITY(1, 1), 
	EstNo int,
	EstCompNo int,
	QuoteNo int,
	RevNo int)

CREATE TABLE #estQuotes( 	
	ESTIMATE_NUMBER		int,
	EST_LOG_DESC		varchar(60) NULL,
	EST_COMPONENT_NBR	smallint,
	EST_COMP_DESC		varchar(60) NULL,
	EST_QUOTE_NBR		smallint,
	EST_QUOTE_DESC		varchar(60) NULL,
	EST_REV_NBR 		smallint NULL,
	SUM_AMOUNT  		decimal(14,2),
	JOB_QTY             int,
	CPU         		decimal(15,3),
	EST_APPR_BY		    varchar(40) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	EST_APPR_BY_INT     varchar(40) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
	QUOTE_W_CONTINGENCY  		decimal(14,2))

INSERT INTO	#est
    SELECT     ESTIMATE_LOG.ESTIMATE_NUMBER, ESTIMATE_COMPONENT.EST_COMPONENT_NBR, 
                          ESTIMATE_QUOTE.EST_QUOTE_NBR, 
                          ESTIMATE_REV.EST_REV_NBR
    FROM         ESTIMATE_COMPONENT INNER JOIN
                          ESTIMATE_LOG ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_LOG.ESTIMATE_NUMBER INNER JOIN
                          ESTIMATE_REV INNER JOIN
                          ESTIMATE_QUOTE ON ESTIMATE_REV.ESTIMATE_NUMBER = ESTIMATE_QUOTE.ESTIMATE_NUMBER AND 
                          ESTIMATE_REV.EST_COMPONENT_NBR = ESTIMATE_QUOTE.EST_COMPONENT_NBR AND 
                          ESTIMATE_REV.EST_QUOTE_NBR = ESTIMATE_QUOTE.EST_QUOTE_NBR ON 
                          ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_QUOTE.ESTIMATE_NUMBER AND 
                          ESTIMATE_COMPONENT.EST_COMPONENT_NBR = ESTIMATE_QUOTE.EST_COMPONENT_NBR
    WHERE     (ESTIMATE_LOG.ESTIMATE_NUMBER = @EstNumber) AND (ESTIMATE_COMPONENT.EST_COMPONENT_NBR = @EstCompNumber) 
			    AND ESTIMATE_REV.EST_REV_NBR = (SELECT MAX(EST_REV_NBR) FROM ESTIMATE_REV WHERE (ESTIMATE_NUMBER = @EstNumber) AND (EST_COMPONENT_NBR = @EstCompNumber) AND EST_QUOTE_NBR = ESTIMATE_QUOTE.EST_QUOTE_NBR)
    


INSERT INTO	#estQuotes
SELECT     ESTIMATE_LOG.ESTIMATE_NUMBER, ESTIMATE_LOG.EST_LOG_DESC, ESTIMATE_COMPONENT.EST_COMPONENT_NBR, 
                      ESTIMATE_COMPONENT.EST_COMP_DESC, ESTIMATE_QUOTE.EST_QUOTE_NBR, ESTIMATE_QUOTE.EST_QUOTE_DESC, 
                      ESTIMATE_REV.EST_REV_NBR, SUM(ESTIMATE_REV_DET.LINE_TOTAL) 
                      AS SUM_AMOUNT, ESTIMATE_REV.JOB_QTY, 0.00, ISNULL(ESTIMATE_APPROVAL.EST_APPR_BY,'') AS EST_APPR_BY, ISNULL(ESTIMATE_INT_APPR.EST_APPR_BY,'') AS EST_APPR_BY_INT,
					  (SUM(ESTIMATE_REV_DET.LINE_TOTAL) + SUM(ESTIMATE_REV_DET.LINE_TOTAL_CONT)) AS QUOTE_W_CONTINGENCY
FROM         ESTIMATE_COMPONENT INNER JOIN
                      ESTIMATE_LOG ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_LOG.ESTIMATE_NUMBER INNER JOIN
                      ESTIMATE_REV INNER JOIN
                      ESTIMATE_QUOTE ON ESTIMATE_REV.ESTIMATE_NUMBER = ESTIMATE_QUOTE.ESTIMATE_NUMBER AND 
                      ESTIMATE_REV.EST_COMPONENT_NBR = ESTIMATE_QUOTE.EST_COMPONENT_NBR AND 
                      ESTIMATE_REV.EST_QUOTE_NBR = ESTIMATE_QUOTE.EST_QUOTE_NBR ON 
                      ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_QUOTE.ESTIMATE_NUMBER AND 
                      ESTIMATE_COMPONENT.EST_COMPONENT_NBR = ESTIMATE_QUOTE.EST_COMPONENT_NBR LEFT OUTER JOIN
                      ESTIMATE_REV_DET ON ESTIMATE_REV.ESTIMATE_NUMBER = ESTIMATE_REV_DET.ESTIMATE_NUMBER AND 
                      ESTIMATE_REV.EST_COMPONENT_NBR = ESTIMATE_REV_DET.EST_COMPONENT_NBR AND 
                      ESTIMATE_REV.EST_QUOTE_NBR = ESTIMATE_REV_DET.EST_QUOTE_NBR AND 
                      ESTIMATE_REV.EST_REV_NBR = ESTIMATE_REV_DET.EST_REV_NBR LEFT OUTER JOIN
                      ESTIMATE_APPROVAL ON ESTIMATE_REV.ESTIMATE_NUMBER = ESTIMATE_APPROVAL.ESTIMATE_NUMBER AND 
                      ESTIMATE_REV.EST_COMPONENT_NBR = ESTIMATE_APPROVAL.EST_COMPONENT_NBR AND 
                      ESTIMATE_REV.EST_QUOTE_NBR = ESTIMATE_APPROVAL.EST_QUOTE_NBR AND 
                      ESTIMATE_REV.EST_REV_NBR = ESTIMATE_APPROVAL.EST_REVISION_NBR LEFT OUTER JOIN
                      ESTIMATE_INT_APPR ON ESTIMATE_REV.ESTIMATE_NUMBER = ESTIMATE_INT_APPR.ESTIMATE_NUMBER AND 
                      ESTIMATE_REV.EST_COMPONENT_NBR = ESTIMATE_INT_APPR.EST_COMPONENT_NBR AND 
                      ESTIMATE_REV.EST_QUOTE_NBR = ESTIMATE_INT_APPR.EST_QUOTE_NBR AND 
                      ESTIMATE_REV.EST_REV_NBR = ESTIMATE_INT_APPR.EST_REVISION_NBR
WHERE     (ESTIMATE_LOG.ESTIMATE_NUMBER = @EstNumber) AND (ESTIMATE_COMPONENT.EST_COMPONENT_NBR = @EstCompNumber) 
			AND ESTIMATE_REV.EST_REV_NBR = (SELECT MAX(EST_REV_NBR) FROM ESTIMATE_REV WHERE (ESTIMATE_NUMBER = @EstNumber) AND (EST_COMPONENT_NBR = @EstCompNumber) AND EST_QUOTE_NBR = ESTIMATE_QUOTE.EST_QUOTE_NBR)
GROUP BY   ESTIMATE_LOG.ESTIMATE_NUMBER, ESTIMATE_LOG.EST_LOG_DESC, ESTIMATE_COMPONENT.EST_COMPONENT_NBR, 
                      ESTIMATE_COMPONENT.EST_COMP_DESC, ESTIMATE_QUOTE.EST_QUOTE_NBR, ESTIMATE_QUOTE.EST_QUOTE_DESC, 
                      ESTIMATE_REV.EST_REV_NBR, ESTIMATE_REV.JOB_QTY, ESTIMATE_APPROVAL.EST_APPR_BY, ESTIMATE_INT_APPR.EST_APPR_BY
                                                 
SET @NumberRecords = @@ROWCOUNT
SET @RowCount = 1

WHILE @RowCount <= @NumberRecords
BEGIN
    SELECT @EstNum = EstNo, @EstCompNum = EstCompNo, @QuoteNum = QuoteNo, @RevNum = RevNo
     FROM #est
     WHERE RowID = @RowCount
     
     
    SELECT  @sumCPU = SUM(ESTIMATE_REV_DET.LINE_TOTAL)
                        FROM         ESTIMATE_COMPONENT INNER JOIN
                                              ESTIMATE_LOG ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_LOG.ESTIMATE_NUMBER INNER JOIN
                                              ESTIMATE_REV INNER JOIN
                                              ESTIMATE_QUOTE ON ESTIMATE_REV.ESTIMATE_NUMBER = ESTIMATE_QUOTE.ESTIMATE_NUMBER AND 
                                              ESTIMATE_REV.EST_COMPONENT_NBR = ESTIMATE_QUOTE.EST_COMPONENT_NBR AND 
                                              ESTIMATE_REV.EST_QUOTE_NBR = ESTIMATE_QUOTE.EST_QUOTE_NBR ON 
                                              ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_QUOTE.ESTIMATE_NUMBER AND 
                                              ESTIMATE_COMPONENT.EST_COMPONENT_NBR = ESTIMATE_QUOTE.EST_COMPONENT_NBR LEFT OUTER JOIN
                                              ESTIMATE_REV_DET ON ESTIMATE_REV.ESTIMATE_NUMBER = ESTIMATE_REV_DET.ESTIMATE_NUMBER AND 
                                              ESTIMATE_REV.EST_COMPONENT_NBR = ESTIMATE_REV_DET.EST_COMPONENT_NBR AND 
                                              ESTIMATE_REV.EST_QUOTE_NBR = ESTIMATE_REV_DET.EST_QUOTE_NBR AND 
                                              ESTIMATE_REV.EST_REV_NBR = ESTIMATE_REV_DET.EST_REV_NBR
                        WHERE     (ESTIMATE_LOG.ESTIMATE_NUMBER = @EstNum) AND (ESTIMATE_COMPONENT.EST_COMPONENT_NBR = @EstCompNum) 
			                        AND (ESTIMATE_REV.EST_QUOTE_NBR = @QuoteNum) AND (ESTIMATE_REV.EST_REV_NBR = @RevNum)
			                        AND ESTIMATE_REV_DET.INCL_CPU = 1
                        GROUP BY   ESTIMATE_REV_DET.INCL_CPU                           

    UPDATE #estQuotes
    SET CPU = @sumCPU
    WHERE (ESTIMATE_NUMBER = @EstNum) AND (EST_COMPONENT_NBR = @EstCompNum) AND 
          (EST_QUOTE_NBR = @QuoteNum) AND (EST_REV_NBR = @RevNum)  

	SET @sumCPU = 0.00
    SET @RowCount = @RowCount + 1
END
--SELECT * FROM #estQuotes
UPDATE #estQuotes
SET EST_APPR_BY = CASE WHEN #estQuotes.EST_APPR_BY = '' THEN (SELECT ISNULL(EST_APPR_BY,'') FROM EST_CAMP_APPROVAL ECA 
																WHERE ECA.ESTIMATE_NUMBER = #estQuotes.ESTIMATE_NUMBER AND
																	  ECA.EST_COMPONENT_NBR = #estQuotes.EST_COMPONENT_NBR AND
																	  ECA.EST_QUOTE_NBR = #estQuotes.EST_QUOTE_NBR AND
																	  ECA.EST_REVISION_NBR = #estQuotes.EST_REV_NBR AND APPR_TYPE = 'C') ELSE #estQuotes.EST_APPR_BY END

UPDATE #estQuotes
SET EST_APPR_BY_INT = CASE WHEN #estQuotes.EST_APPR_BY_INT = '' THEN (SELECT ISNULL(EST_APPR_BY,'') FROM EST_CAMP_APPROVAL ECA 
																WHERE ECA.ESTIMATE_NUMBER = #estQuotes.ESTIMATE_NUMBER AND
																	  ECA.EST_COMPONENT_NBR = #estQuotes.EST_COMPONENT_NBR AND
																	  ECA.EST_QUOTE_NBR = #estQuotes.EST_QUOTE_NBR AND
																	  ECA.EST_REVISION_NBR = #estQuotes.EST_REV_NBR AND APPR_TYPE = 'I') ELSE #estQuotes.EST_APPR_BY_INT END

SELECT * FROM #estQuotes

drop table #estQuotes
drop table #est

