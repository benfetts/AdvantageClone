IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_Estimating_GetTasks]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_Estimating_GetTasks]
GO

CREATE PROCEDURE [dbo].[usp_wv_Estimating_GetTasks]
        @JobNum AS INT,
        @JobCompNum AS INT,
        @Sort VARCHAR(10) = '',
        @USER_ID VARCHAR(100),
        @EMP_CODE AS VARCHAR(6) = '',
        @TASK_CODE AS VARCHAR(10) = '',
        @ROLE_CODE AS VARCHAR(6) = '',
        @IncludeCompletedTasks AS CHAR(1),
        @IncludeOnlyPendingTasks AS CHAR(1),
        @ExcludeProjectedTasks AS CHAR(1),
		@CUT_OFF_DATE AS VARCHAR(15)  = '',
		@PHASE_FILTER AS VARCHAR(50)  = '',
		@IncludeEstimate AS CHAR(1)

AS
DECLARE
        @RESTRICTIONS SMALLINT,
        @USE_VIEW SMALLINT,
        @SQL NVARCHAR(4000),
        @paramlist NVARCHAR(4000)


        SELECT @RESTRICTIONS = ISNULL(COUNT(1),0) FROM SEC_CLIENT WHERE UPPER(USER_ID) = UPPER(@USER_ID)

        IF DATALENGTH(@EMP_CODE) > 0-- OR DATALENGTH(@TASK_CODE) > 0 OR DATALENGTH(@ROLE_CODE) > 0 
            BEGIN
                SET @USE_VIEW = 1
            END
        ELSE
            BEGIN           
	            SET @USE_VIEW = 0
            END

        DECLARE 
        @SEQ_TABLE  TABLE (SEQ_NBR SMALLINT)

        IF @USE_VIEW = 1
        BEGIN
            INSERT INTO @SEQ_TABLE(SEQ_NBR)
            SELECT DISTINCT SEQ_NBR AS SEQ_NBR
            FROM         JOB_TRAFFIC_DET_EMPS WITH(NOLOCK)
            WHERE     (JOB_NUMBER = @JobNum) AND (JOB_COMPONENT_NBR = @JobCompNum) AND (EMP_CODE = @EMP_CODE)
        END
        --SELECT * FROM @SEQ_TABLE

SET @SQL = '
SELECT CASE WHEN JOB_TRAFFIC_DET.GRID_ORDER IS NULL THEN JOB_TRAFFIC_DET.SEQ_NBR ELSE JOB_TRAFFIC_DET.GRID_ORDER END AS SEQ_NBR, JOB_TRAFFIC_DET.FNC_EST, FUNCTIONS.FNC_DESCRIPTION,JOB_TRAFFIC_DET.SEQ_NBR AS FNC_SEQ_NBR,'
if @IncludeEstimate = 'Y'
	BEGIN
		SET @SQL = @SQL + ' JOB_TRAFFIC_DET_EMPS.EMP_CODE,E.EMP_FNAME + ISNULL('' '' + E.EMP_MI + ''.'', '''') + ISNULL('' '' + E.EMP_LNAME, '''') AS EMP_NAME,'
	END
ELSE
	BEGIN
		SET @SQL = @SQL + ' '''' AS EMP_CODE,'''' AS EMP_NAME,'
	END
SET @SQL = @SQL + ' sum(JOB_TRAFFIC_DET.JOB_HRS) AS JOB_HRS, sum(JOB_TRAFFIC_DET_EMPS.HOURS_ALLOWED) AS HOURS, ISNULL(JOB_TRAFFIC_DET.FNC_CODE,'''') AS FNC_CODE
FROM JOB_COMPONENT WITH(NOLOCK) INNER JOIN 
JOB_TRAFFIC_DET WITH(NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND 
JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR INNER JOIN 
JOB_LOG WITH(NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER LEFT OUTER JOIN 
JOB_TRAFFIC_DET_EMPS WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_EMPS.JOB_NUMBER AND 
JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR AND 
JOB_TRAFFIC_DET.SEQ_NBR = JOB_TRAFFIC_DET_EMPS.SEQ_NBR LEFT OUTER JOIN 
TRAFFIC_PHASE WITH(NOLOCK) ON JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID = TRAFFIC_PHASE.TRAFFIC_PHASE_ID 
LEFT OUTER JOIN FUNCTIONS WITH(NOLOCK) ON FUNCTIONS.FNC_CODE = JOB_TRAFFIC_DET.FNC_EST
LEFT OUTER JOIN EMPLOYEE E ON E.EMP_CODE = JOB_TRAFFIC_DET_EMPS.EMP_CODE'
--IF DATALENGTH(@ROLE_CODE) > 0 
--	BEGIN
--		SET @SQL = @SQL + 'LEFT OUTER JOIN TASK_TRAFFIC_ROLE  WITH(NOLOCK)ON JOB_TRAFFIC_DET.FNC_CODE = TASK_TRAFFIC_ROLE.TRF_CODE  '
--	END
IF @RESTRICTIONS > 0
BEGIN
	SET @SQL = @SQL + ' INNER JOIN SEC_CLIENT WITH(NOLOCK) ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
	JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE '
END
SET @SQL = @SQL + ' 
WHERE (JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @JobCompNum) AND 
(JOB_TRAFFIC_DET.JOB_NUMBER = @JobNum) AND 1=1 '
if @IncludeEstimate <> 'Y'
	BEGIN
		SET @SQL = @SQL + ' AND JOB_TRAFFIC_DET.FNC_EST IS NOT NULL'
	END	
if @IncludeEstimate = 'Y'
	BEGIN
		SET @SQL = @SQL + ' AND JOB_TRAFFIC_DET_EMPS.EMP_CODE IS NOT NULL'
	END
IF @RESTRICTIONS > 0
BEGIN
	SET @SQL = @SQL + ' AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@USER_ID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) '
END
--IF DATALENGTH(@TASK_CODE) > 0 
--	BEGIN
--		SET @SQL = @SQL + 'AND JOB_TRAFFIC_DET.FNC_CODE = @TASK_CODE '
--	END	
--IF DATALENGTH(@ROLE_CODE) > 0 
--	BEGIN
--		SET @SQL = @SQL + 'AND TASK_TRAFFIC_ROLE.ROLE_CODE  = @ROLE_CODE '
--	END   
--IF DATALENGTH(@EMP_CODE) > 0 
--	BEGIN
--		SET @SQL = @SQL + 'AND JOB_TRAFFIC_DET_EMPS.EMP_CODE = @EMP_CODE '
--	END   
--IF @IncludeOnlyPendingTasks = 'Y'
--	BEGIN
--		SELECT @SQL = @SQL + 'AND JOB_TRAFFIC_DET.TEMP_COMP_DATE IS NOT NULL '
--		--OVERRIDE COMPLETED ISSUE 499
--		SET @IncludeCompletedTasks = 'N'
--	END								
--
--IF @IncludeCompletedTasks = 'N'
--	BEGIN
--		SELECT @SQL = @SQL + 'AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL '
--	END	
--IF @ExcludeProjectedTasks = 'Y'
--	BEGIN
--		SELECT @SQL = @SQL + 'AND (JOB_TRAFFIC_DET.TASK_STATUS <> ''P'' OR JOB_TRAFFIC_DET.TASK_STATUS IS NULL) '
--	END	  
--IF DATALENGTH(@CUT_OFF_DATE) > 0
--BEGIN
--	SET @SQL = @SQL + ' AND (NOT (JOB_TRAFFIC_DET.JOB_REVISED_DATE IS NULL)) AND (JOB_TRAFFIC_DET.JOB_REVISED_DATE <= CONVERT(DATETIME, ''' + @CUT_OFF_DATE +   ' 23:59:00'', 102)) '
--END  
--IF @PHASE_FILTER = 'is_null'
--BEGIN
--		SELECT @SQL = @SQL + ' AND JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID IS NULL '
--END
--IF ISNUMERIC(@PHASE_FILTER) = 1
--BEGIN
--		SELECT @SQL = @SQL + ' AND JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID = ' + @PHASE_FILTER
--END

SET @SQL = @SQL + ' 
GROUP BY CASE WHEN JOB_TRAFFIC_DET.GRID_ORDER IS NULL THEN JOB_TRAFFIC_DET.SEQ_NBR ELSE JOB_TRAFFIC_DET.GRID_ORDER END,JOB_TRAFFIC_DET.FNC_EST, FUNCTIONS.FNC_DESCRIPTION,ISNULL(JOB_TRAFFIC_DET.FNC_CODE,''''),JOB_TRAFFIC_DET.SEQ_NBR'
if @IncludeEstimate = 'Y'
	BEGIN
		SET @SQL = @SQL + ', JOB_TRAFFIC_DET_EMPS.EMP_CODE,E.EMP_FNAME,E.EMP_MI,E.EMP_LNAME'
	END
IF @RESTRICTIONS > 0
BEGIN
	SET @SQL = @SQL + ' ,SEC_CLIENT.USER_ID'
END
--SET @SQL = @SQL + ' 
--JOB_TRAFFIC_DET.TRF_ROLE, FUNCTIONS.FNC_DESCRIPTION '
--IF DATALENGTH(@ROLE_CODE) > 0 
--	BEGIN
--		SET @SQL = @SQL + ', TASK_TRAFFIC_ROLE.ROLE_CODE '
--	END
	
--IF @Sort = 'startdue'
--	BEGIN
--		SET @SQL = @SQL + '
--		ORDER BY JOB_TRAFFIC_DET.TASK_START_DATE,  JOB_TRAFFIC_DET.JOB_DUE_DATE
--		'
--	END
--ELSE
--	BEGIN	--DEFAULT SORT
--		SET @SQL = @SQL + '
--		ORDER BY JOB_TRAFFIC_DET.JOB_ORDER ASC, JOB_TRAFFIC_DET.JOB_REVISED_DATE ASC, JOB_TRAFFIC_DET.SEQ_NBR ASC
--		'
--	END

	
--SORT

IF @Sort = 'startdue'
	BEGIN
		SET @SQL = @SQL + '
		ORDER BY JOB_TRAFFIC_DET.TASK_START_DATE,  JOB_TRAFFIC_DET.JOB_DUE_DATE
		'
	END
IF @Sort = 'phase'
	BEGIN
		SET @SQL = @SQL + '
		ORDER BY TRAFFIC_PHASE.PHASE_ORDER ASC, JOB_TRAFFIC_DET.JOB_ORDER ASC, JOB_TRAFFIC_DET.JOB_REVISED_DATE ASC, JOB_TRAFFIC_DET.SEQ_NBR ASC
		'
	END
IF @Sort = 'order'
	BEGIN
		SET @SQL = @SQL + '
		ORDER BY JOB_TRAFFIC_DET.JOB_ORDER ASC, JOB_TRAFFIC_DET.JOB_REVISED_DATE ASC, JOB_TRAFFIC_DET.SEQ_NBR ASC
		'
	END
IF @Sort = ''
	BEGIN
		SET @SQL = @SQL + '
		ORDER BY JOB_TRAFFIC_DET.JOB_ORDER ASC, JOB_TRAFFIC_DET.JOB_REVISED_DATE ASC, JOB_TRAFFIC_DET.SEQ_NBR ASC
		'
	END
IF @Sort = 'estquote'
	BEGIN
		SET @SQL = @SQL + '
		ORDER BY CASE WHEN JOB_TRAFFIC_DET.GRID_ORDER IS NULL THEN JOB_TRAFFIC_DET.SEQ_NBR ELSE JOB_TRAFFIC_DET.GRID_ORDER END,JOB_TRAFFIC_DET.FNC_EST
		'
	END
	
	
	
	
--CASE
--WHEN @Sort = 'startdue' THEN
--WHEN @Sort = 'phase' THEN
--WHEN @Sort = 'order' THEN
--ELSE
--END



PRINT @SQL
SELECT @paramlist = '@JobNum int, @JobCompNum int, @Sort VARCHAR(10), @USER_ID VARCHAR(100),@EMP_CODE VARCHAR(6), @TASK_CODE VARCHAR(10), @ROLE_CODE VARCHAR(6)'
EXEC sp_executesql @SQL, @paramlist, @JobNum, @JobCompNum, @Sort, @USER_ID,@EMP_CODE, @TASK_CODE, @ROLE_CODE





