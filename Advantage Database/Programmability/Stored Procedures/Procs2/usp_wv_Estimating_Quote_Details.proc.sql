














if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_Estimating_Quote_Details]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_Estimating_Quote_Details]
GO








CREATE PROCEDURE [dbo].[usp_wv_Estimating_Quote_Details] 
@EstNo Int,
@EstCompNo Int,
@QuoteNo Int,
@RevNo Int,
@Phase varchar(60)
AS
DECLARE @Restrictions Int,
	@sql nvarchar(4000),
	@paramlist nvarchar(4000)

SELECT @sql = 'SELECT ESTIMATE_QUOTE.ESTIMATE_NUMBER, ESTIMATE_QUOTE.EST_COMPONENT_NBR, ESTIMATE_QUOTE.EST_QUOTE_NBR, ESTIMATE_QUOTE.EST_QUOTE_DESC, ESTIMATE_REV.EST_REV_NBR, E.SEQ_NBR, E.FNC_CODE, FUNCTIONS.FNC_DESCRIPTION, E.EST_FNC_COMMENT, E.EST_REV_SUP_BY_CDE, 
                      E.EST_REV_SUP_BY_NTE, E.EST_REV_QUANTITY, E.EST_REV_RATE, E.EST_REV_EXT_AMT, E.TAX_CODE, E.EST_REV_COMM_PCT, E.EXT_MARKUP_AMT, 
                      E.LINE_TOTAL, E.EST_REV_CONT_PCT, E.EXT_CONTINGENCY,ISNULL(E.INCL_CPU,0) AS INCL_CPU, ISNULL(E.TAX_STATE_PCT, 0.00) AS TAX_STATE_PCT, ISNULL(E.TAX_COUNTY_PCT, 0.00) AS TAX_COUNTY_PCT, 
                      ISNULL(E.TAX_CITY_PCT, 0.00) AS TAX_CITY_PCT, E.TAX_COMM, E.TAX_COMM_ONLY, E.TAX_RESALE, E.EXT_NONRESALE_TAX, ISNULL(E.EXT_STATE_RESALE,0.00) AS EXT_STATE_RESALE, 
                      ISNULL(E.EXT_COUNTY_RESALE,0.00) AS EXT_COUNTY_RESALE, ISNULL(E.EXT_CITY_RESALE,0.00) AS EXT_CITY_RESALE, E.EXT_MU_CONT, 
                      E.EXT_STATE_CONT, E.EXT_COUNTY_CONT, E.EXT_CITY_CONT, E.EXT_NR_CONT, E.LINE_TOTAL_CONT, E.EST_CPM_FLAG, E.EST_FNC_TYPE, E.EST_COMM_FLAG, E.EST_TAX_FLAG, E.EST_NONBILL_FLAG, E.FEE_TIME, E.EMPLOYEE_TITLE_ID, FUNCTIONS.FNC_TYPE,
					  E.EST_PHASE_ID, ISNULL(E.EST_PHASE_DESC, '''') as EST_PHASE_DESC, FNC_HEADING.FNC_HEADING_ID, FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, ISNULL(FUNCTIONS.FNC_CONSOLIDATION, '''') AS FNC_CONSOLIDATION, ISNULL(F.FNC_DESCRIPTION, '''') AS FNC_CONSOL_DESC,
				      ISNULL(SALES_TAX.TAX_STATE_PERCENT,0.00) AS TAX_STATE_PERCENT, ISNULL(SALES_TAX.TAX_COUNTY_PERCENT,0.00) AS TAX_COUNTY_PERCENT, ISNULL(SALES_TAX.TAX_CITY_PERCENT,0.00) AS TAX_CITY_PERCENT,
					  CASE WHEN ISNULL(E.EST_REV_SUP_BY_CDE,'''') <> '''' AND ISNULL(E.EMPLOYEE_TITLE_ID,0) = 0 THEN EMPLOYEE.EMP_TITLE ELSE ISNULL(ET.EMPLOYEE_TITLE,'''') END AS EMP_TITLE,					  
					  E.EMPLOYEE_TITLE_ID, E.EST_FNC_COMMENT_HTML, E.EST_REV_SUP_BY_HTML, (E.LINE_TOTAL + E.LINE_TOTAL_CONT) AS QUOTE_W_CONTINGENCY,
					  ISNULL(E.EXT_STATE_RESALE,0.00) + ISNULL(E.EXT_COUNTY_RESALE,0.00) + ISNULL(E.EXT_CITY_RESALE,0.00) + ISNULL(E.EXT_NONRESALE_TAX,0.00) AS TAX, (ISNULL(E.EST_REV_EXT_AMT,0.00) + ISNULL(E.EXT_MARKUP_AMT,0.00)) AS EST_REV_EXT_MU_AMT
FROM         ESTIMATE_QUOTE INNER JOIN ESTIMATE_REV ON ESTIMATE_QUOTE.ESTIMATE_NUMBER = ESTIMATE_REV.ESTIMATE_NUMBER AND ESTIMATE_QUOTE.EST_COMPONENT_NBR = ESTIMATE_REV.EST_COMPONENT_NBR AND ESTIMATE_QUOTE.EST_QUOTE_NBR = ESTIMATE_REV.EST_QUOTE_NBR INNER JOIN
                      ESTIMATE_COMPONENT ON ESTIMATE_QUOTE.ESTIMATE_NUMBER = ESTIMATE_COMPONENT.ESTIMATE_NUMBER AND ESTIMATE_QUOTE.EST_COMPONENT_NBR = ESTIMATE_COMPONENT.EST_COMPONENT_NBR INNER JOIN
                      ESTIMATE_LOG ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_LOG.ESTIMATE_NUMBER INNER JOIN
                      ESTIMATE_REV_DET E ON ESTIMATE_REV.ESTIMATE_NUMBER = E.ESTIMATE_NUMBER AND ESTIMATE_REV.EST_COMPONENT_NBR = E.EST_COMPONENT_NBR AND ESTIMATE_REV.EST_QUOTE_NBR = E.EST_QUOTE_NBR AND ESTIMATE_REV.EST_REV_NBR = E.EST_REV_NBR INNER JOIN
                      FUNCTIONS ON E.FNC_CODE = FUNCTIONS.FNC_CODE LEFT OUTER JOIN JOB_COMPONENT ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = JOB_COMPONENT.ESTIMATE_NUMBER AND ESTIMATE_COMPONENT.EST_COMPONENT_NBR = JOB_COMPONENT.EST_COMPONENT_NBR LEFT OUTER JOIN
                      FNC_HEADING ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID LEFT OUTER JOIN
                      SALES_TAX ON E.TAX_CODE = SALES_TAX.TAX_CODE LEFT OUTER JOIN FUNCTIONS F ON FUNCTIONS.FNC_CONSOLIDATION = F.FNC_CODE LEFT OUTER JOIN
                      EMPLOYEE ON E.EST_REV_SUP_BY_CDE = EMPLOYEE.EMP_CODE LEFT OUTER JOIN EMPLOYEE_TITLE ET ON E.EMPLOYEE_TITLE_ID = ET.EMPLOYEE_TITLE_ID
WHERE     (ESTIMATE_QUOTE.ESTIMATE_NUMBER = @EstNo) AND (ESTIMATE_QUOTE.EST_COMPONENT_NBR = @EstCompNo) AND (ESTIMATE_QUOTE.EST_QUOTE_NBR = @QuoteNo) AND (ESTIMATE_REV.EST_REV_NBR = @RevNo)'

if @Phase <> '0'
Begin
	SELECT @sql = @sql + ' AND E.EST_PHASE_DESC = @Phase'
End

SELECT @sql = @sql + ' ORDER BY FUNCTIONS.FNC_ORDER, E.FNC_CODE'

SELECT @paramlist = '@EstNo int, @EstCompNo int, @QuoteNo int, @RevNo int, @Phase varchar(60)'
print @sql
EXEC sp_executesql @sql, @paramlist, @EstNo, @EstCompNo, @QuoteNo, @RevNo, @Phase



















