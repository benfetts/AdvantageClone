--DROP PROCEDURE [dbo].[usp_wv_PVqva] 

CREATE PROCEDURE [dbo].[usp_wv_PVqva] 
@job VARCHAR(20),
@comp VARCHAR(3),
@TimeOnly Char(1),
@UserID varchar(100)

AS

DECLARE @sql varchar(8000)
DECLARE @sql_from varchar(4000)
DECLARE @sql_where varchar(4000)

--JOB_NUMBER		int NULL,
--JOB_COMPONENT_NBR	smallint NULL,
--QUOTED			Decimal (14,2) NULL,
CREATE TABLE #PVQVA( 		
	ACTUAL			Decimal (14,2) NULL
)

Set @sql = 'Insert INTO #PVQVA
		SELECT ISNULL(Sum(EMP_TIME_DTL.LINE_TOTAL),0) '
				
Set @sql_from = ' FROM JOB_LOG 
			INNER JOIN EMP_TIME_DTL ON JOB_LOG.JOB_NUMBER = EMP_TIME_DTL.JOB_NUMBER
			INNER JOIN JOB_COMPONENT ON EMP_TIME_DTL.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER  
				   AND EMP_TIME_DTL.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR '

Set @sql_where = ' Where (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12))) '
Set @sql_where = @sql_where + ' And EMP_TIME_DTL.JOB_NUMBER = ' + @job + ' And EMP_TIME_DTL.JOB_COMPONENT_NBR = ' + @comp

Set @sql = @sql + @sql_from + @sql_where

--Set @sql = @sql + ' Group By EMP_TIME_DTL.JOB_NUMBER, EMP_TIME_DTL.JOB_COMPONENT_NBR '

EXEC(@sql)		    
	

If @TimeOnly <> 'E' OR @TimeOnly IS NULL
	BEGIN
		Set @sql = 'Insert INTO #PVQVA
			SELECT ISNULL(Sum(INCOME_ONLY.LINE_TOTAL),0) '
		
		Set @sql_from = ' FROM JOB_LOG 
			INNER JOIN INCOME_ONLY ON JOB_LOG.JOB_NUMBER = INCOME_ONLY.JOB_NUMBER
			INNER JOIN JOB_COMPONENT ON INCOME_ONLY.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER  
					AND	INCOME_ONLY.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR '
		
		Set @sql_where = ' Where (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12))) '
		Set @sql_where = @sql_where + ' And INCOME_ONLY.JOB_NUMBER = ' + @job + ' And INCOME_ONLY.JOB_COMPONENT_NBR = ' + @comp
			
		Set @sql = @sql + @sql_from + @sql_where

		--Set @sql = @sql + ' Group By INCOME_ONLY.JOB_NUMBER, INCOME_ONLY.JOB_COMPONENT_NBR '

		EXEC(@sql)	
		
		Set @sql = ' Insert INTO #PVQVA
			SELECT ISNULL(Sum(AP_PRODUCTION.LINE_TOTAL),0) '    
			
		Set @sql_from = ' FROM  JOB_LOG 
				INNER JOIN AP_PRODUCTION ON JOB_LOG.JOB_NUMBER = AP_PRODUCTION.JOB_NUMBER
				INNER JOIN JOB_COMPONENT ON AP_PRODUCTION.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER  
					   AND AP_PRODUCTION.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR '
					   
		Set @sql_where = ' Where (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12))) '
		Set @sql_where = @sql_where + ' And AP_PRODUCTION.JOB_NUMBER = ' + @job + ' And AP_PRODUCTION.JOB_COMPONENT_NBR = ' + @comp

		Set @sql = @sql + @sql_from + @sql_where

		--Set @sql = @sql + ' Group By AP_PRODUCTION.JOB_NUMBER, AP_PRODUCTION.JOB_COMPONENT_NBR '

		EXEC(@sql)	
	END


--Set @sql = 'Insert INTO #PVQVA
--		SELECT ISNULL(Sum(ESTIMATE_REV_DET.LINE_TOTAL),0), 0 '

--Set @sql_from = ' FROM	ESTIMATE_REV_DET 
--			INNER JOIN ESTIMATE_APPROVAL ON ESTIMATE_REV_DET.ESTIMATE_NUMBER = ESTIMATE_APPROVAL.ESTIMATE_NUMBER 
--			  AND ESTIMATE_REV_DET.EST_COMPONENT_NBR = ESTIMATE_APPROVAL.EST_COMPONENT_NBR 
--			  AND ESTIMATE_REV_DET.EST_QUOTE_NBR = ESTIMATE_APPROVAL.EST_QUOTE_NBR 
--			  AND ESTIMATE_REV_DET.EST_REV_NBR = ESTIMATE_APPROVAL.EST_REVISION_NBR 
--			INNER JOIN JOB_LOG ON ESTIMATE_APPROVAL.JOB_NUMBER = JOB_LOG.JOB_NUMBER 
--			INNER JOIN JOB_COMPONENT ON ESTIMATE_APPROVAL.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER 
--			  AND ESTIMATE_APPROVAL.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR '
						
--Set @sql_where = ' Where (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12))) '
--Set @sql_where = @sql_where + ' And ESTIMATE_APPROVAL.JOB_NUMBER = ' + @job + ' And ESTIMATE_APPROVAL.JOB_COMPONENT_NBR = ' + @comp

--If @TimeOnly <> ''
--	Set @sql_where = @sql_where + ' And ESTIMATE_REV_DET.EST_FNC_TYPE = ''' +  @TimeOnly + ''''

--Set @sql = @sql + @sql_from + @sql_where

--Set @sql = @sql + ' Group By ESTIMATE_APPROVAL.JOB_NUMBER, ESTIMATE_APPROVAL.JOB_COMPONENT_NBR '

--EXEC(@sql)	


Set @sql = 'Insert INTO #PVQVA
		SELECT ISNULL(Sum(BILL_APPR_DTL.QTY_HRS),0) '

Set @sql_from = ' FROM BILL_APPR_HDR
	INNER JOIN BILL_APPR_DTL ON BILL_APPR_HDR.JOB_NUMBER = BILL_APPR_DTL.JOB_NUMBER
		AND BILL_APPR_HDR.JOB_COMPONENT_NBR = BILL_APPR_DTL.JOB_COMPONENT_NBR
		AND BILL_APPR_HDR.BA_ID = BILL_APPR_DTL.BA_ID
	INNER JOIN JOB_COMPONENT ON BILL_APPR_HDR.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER
		AND BILL_APPR_HDR.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR
	INNER JOIN JOB_LOG ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER '
						
Set @sql_where = ' Where (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12))) 
		And BILL_APPR_HDR.AR_INV_NBR IS NULL '
Set @sql_where = @sql_where + ' And BILL_APPR_HDR.JOB_NUMBER = ' + @job + ' And BILL_APPR_HDR.JOB_COMPONENT_NBR = ' + @comp


Set @sql = @sql + @sql_from + @sql_where

--Set @sql = @sql + ' Group By BILL_APPR_HDR.JOB_NUMBER, BILL_APPR_HDR.JOB_COMPONENT_NBR '
EXEC(@sql)	


DECLARE @ACTUAL DECIMAL(14,3)					
Select @ACTUAL = SUM(ACTUAL)
From #PVQVA
--Group By JOB_NUMBER, JOB_COMPONENT_NBR
--ORDER BY JOB_NUMBER, JOB_COMPONENT_NBR
Drop Table #PVQVA;
RETURN @ACTUAL


