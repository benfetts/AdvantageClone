
CREATE PROCEDURE [dbo].[usp_wv_RESOURCES_RPT_EXCEL] 
	@START_DATE SMALLDATETIME,
	@END_DATE SMALLDATETIME,
    @OFFICE_LIST    VARCHAR(4000),
    @CDP_LIST    VARCHAR(4000),
    @RESOURCE_CODE_LIST    VARCHAR(4000),
    @TRAFFIC_FNC_LIST    VARCHAR(4000),
    @EMPLOYEE_LIST    VARCHAR(4000),
    @RESOURCE_TYPES_LIST    VARCHAR(4000)
AS
/*=========== QUERY ===========*/
    --SCRUB THE START AND END DATE STRING VERSIONS
    SET @START_DATE = CONVERT(
            DATETIME,
            CONVERT(CHAR(10), DATEPART(yyyy, @START_DATE), 101) 
            +
            '-' +
            CONVERT(CHAR(10), DATEPART(mm, @START_DATE), 101) +
            '-' +
            CONVERT(CHAR(10), DATEPART(dd, @START_DATE), 101) +
            ' 00:00:00'
        );
    		       
    SET @END_DATE = CONVERT(
            DATETIME,
            CONVERT(CHAR(10), DATEPART(yyyy, @END_DATE), 101) 
            +
            '-' +
            CONVERT(CHAR(10), DATEPART(mm, @END_DATE), 101) +
            '-' +
            CONVERT(CHAR(10), DATEPART(dd, @END_DATE), 101) +
            ' 23:59:00'
        );
    	
	DECLARE @SQL VARCHAR(8000);
	IF @OFFICE_LIST IS NULL
	BEGIN
		SET @OFFICE_LIST = ''
	END
	IF @CDP_LIST IS NULL
	BEGIN
		SET @CDP_LIST = ''
	END
	IF @RESOURCE_CODE_LIST IS NULL
	BEGIN
		SET @RESOURCE_CODE_LIST = ''
	END
	IF @TRAFFIC_FNC_LIST IS NULL
	BEGIN
		SET @TRAFFIC_FNC_LIST = ''
	END
	IF @EMPLOYEE_LIST IS NULL
	BEGIN
		SET @EMPLOYEE_LIST = ''
	END
	IF @RESOURCE_TYPES_LIST IS NULL
	BEGIN
		SET @RESOURCE_TYPES_LIST = ''
	END
	
	CREATE TABLE #RESOURCE_DATA
	(
		[RESOURCE_TYPE_CODE]  [varchar](6) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
		[RESOURCE_TYPE_DESC]  [varchar](30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		[RESOURCE_CODE]       [varchar](6) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
		[RESOURCE_DESC]       [varchar](30) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		[START_TIME]          [smalldatetime] NULL,
		[END_TIME]            [smalldatetime] NULL,
		[OFFICE_CODE]         [varchar](4) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		[CDP]                 [varchar](20) COLLATE SQL_Latin1_General_CP1_CS_AS NOT NULL,
		[FNC_CODE]            [varchar](6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		[EVENT_TYPE_ID]       [smallint] NULL,
		[EVENT_ID]			  [int] NOT NULL,
		[JOB_LOG_UDV1]		  [varchar](40) COLLATE SQL_Latin1_General_CP1_CS_AS,
		[JOB_NUMBER]		  [INT] NOT NULL
	);
	
	SET @SQL = 'INSERT INTO #RESOURCE_DATA 
	SELECT RESOURCE_TYPE.RESOURCE_TYPE_CODE,RESOURCE_TYPE.RESOURCE_TYPE_DESC,RESOURCE.RESOURCE_CODE,RESOURCE.RESOURCE_DESC, EVENT.START_TIME, EVENT.END_TIME, JOB_LOG.OFFICE_CODE,JOB_LOG.CL_CODE+''|''+JOB_LOG.DIV_CODE+''|''+JOB_LOG.PRD_CODE AS CDP, EVENT.FNC_CODE AS TRF_FNC_CODE, EVENT.EVENT_TYPE_ID, EVENT.EVENT_ID, JOB_LOG.UDV1_CODE, JOB_LOG.JOB_NUMBER
	FROM  RESOURCE_TYPE INNER JOIN RESOURCE ON RESOURCE_TYPE.RESOURCE_TYPE_CODE = RESOURCE.RESOURCE_TYPE_CODE INNER JOIN EVENT ON RESOURCE.RESOURCE_CODE = EVENT.RESOURCE_CODE INNER JOIN JOB_COMPONENT ON EVENT.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND EVENT.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN JOB_LOG ON JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER WHERE 1 = 1'
	
	SET @SQL = @SQL + ' AND (EVENT.START_TIME >= ''' + CONVERT(VARCHAR, @START_DATE) + ''''
	SET @SQL = @SQL + ' AND EVENT.END_TIME <= ''' + CONVERT(VARCHAR, @END_DATE) + ''')'

	IF @OFFICE_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND JOB_LOG.OFFICE_CODE IN (' + @OFFICE_LIST + ')'
	END
	IF @CDP_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND JOB_LOG.CL_CODE+''|''+JOB_LOG.DIV_CODE+''|''+JOB_LOG.PRD_CODE IN (' + @CDP_LIST + ')'
	END
	IF @RESOURCE_TYPES_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND RESOURCE_TYPE.RESOURCE_TYPE_CODE IN (' + @RESOURCE_TYPES_LIST +')'
	END
	IF @RESOURCE_CODE_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND RESOURCE.RESOURCE_CODE IN (' + @RESOURCE_CODE_LIST + ')'
	END
	IF @TRAFFIC_FNC_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND EVENT.FNC_CODE IN (' + @TRAFFIC_FNC_LIST + ')'
	END
--	IF @EMPLOYEE_LIST <> ''
--	BEGIN
--		SET @SQL = @SQL + ' AND  IN (' + @EMPLOYEE_LIST + ')'
--	END
	
--	PRINT @SQL
	EXEC(@SQL);

 --   DECLARE @UDV_LABEL_EDITABLE AS BIT;
 --   SELECT @UDV_LABEL_EDITABLE = ISNULL(EDITABLE,0) FROM UDV_LABEL WHERE UDV_TABLE_NAME = 'JOB_LOG_UDV1';
	--IF @UDV_LABEL_EDITABLE = 0 --USE UDV CODE
	--BEGIN
	--	UPDATE #RESOURCE_DATA SET JOB_LOG_UDV1 = JOB_LOG_UDV1.UDV_CODE
	--	FROM JOB_LOG INNER JOIN
	--	#RESOURCE_DATA ON JOB_LOG.JOB_NUMBER = #RESOURCE_DATA.JOB_NUMBER INNER JOIN
	--	JOB_LOG_UDV1 ON JOB_LOG.UDV1_CODE = JOB_LOG_UDV1.UDV_CODE		
	--END
	--IF @UDV_LABEL_EDITABLE = 1 --USE UDV DESC
	--BEGIN
		UPDATE #RESOURCE_DATA SET JOB_LOG_UDV1 = JOB_LOG_UDV1.UDV_DESC
		FROM JOB_LOG INNER JOIN
		#RESOURCE_DATA ON JOB_LOG.JOB_NUMBER = #RESOURCE_DATA.JOB_NUMBER INNER JOIN
		JOB_LOG_UDV1 ON JOB_LOG.UDV1_CODE = JOB_LOG_UDV1.UDV_CODE		
	--END

	DECLARE @NSQL AS NVARCHAR(4000)
	
    --RESERVE DT(0) FOR SOME HEADER INFO
    DECLARE @NUM_RESOURCE_TYPES    INT,
            @TOTAL_NUM_RESOURCES   INT,
            @TOTAL_COLUMNS_NEEDED  INT

--    SELECT @NUM_RESOURCE_TYPES = ISNULL(COUNT(1), 0) FROM RESOURCE_TYPE WITH(NOLOCK);
    SET @NSQL = '';
	SET @NSQL = 'SELECT @NUM_RESOURCE_TYPES = ISNULL(COUNT(1), 0) FROM RESOURCE_TYPE WITH(NOLOCK)'
	IF @RESOURCE_TYPES_LIST <> '' 
	BEGIN
		SET @NSQL = @NSQL + ' WHERE RESOURCE_TYPE.RESOURCE_TYPE_CODE IN (' + @RESOURCE_TYPES_LIST +')'
	END
	SET @NSQL = @NSQL + ';'
	EXEC sp_executesql @NSQL, N'@NUM_RESOURCE_TYPES INT OUT', @NUM_RESOURCE_TYPES OUT
 
    --SELECT @TOTAL_NUM_RESOURCES = COUNT(1) FROM RESOURCE WITH(NOLOCK); 
    SET @NSQL = '';
	SET @NSQL = 'SELECT @TOTAL_NUM_RESOURCES = COUNT(1) FROM RESOURCE WITH(NOLOCK)'
    IF @RESOURCE_CODE_LIST <> ''
    BEGIN
    	SET @NSQL = @NSQL + ' WHERE RESOURCE.RESOURCE_CODE IN (' + @RESOURCE_CODE_LIST + ')'
    END
	SET @NSQL = @NSQL + ';'
	EXEC sp_executesql @NSQL, N'@TOTAL_NUM_RESOURCES INT OUT', @TOTAL_NUM_RESOURCES OUT

    
    SET @NSQL = '';
    --SELECT @TOTAL_COLUMNS_NEEDED = COUNT(DISTINCT RESOURCE.RESOURCE_CODE) FROM RESOURCE_TYPE WITH(NOLOCK) INNER JOIN RESOURCE WITH(NOLOCK) ON  RESOURCE_TYPE.RESOURCE_TYPE_CODE = RESOURCE.RESOURCE_TYPE_CODE;
	SET @NSQL = 'SELECT @TOTAL_COLUMNS_NEEDED = COUNT(DISTINCT RESOURCE.RESOURCE_CODE) FROM RESOURCE_TYPE WITH(NOLOCK) INNER JOIN RESOURCE WITH(NOLOCK) ON  RESOURCE_TYPE.RESOURCE_TYPE_CODE = RESOURCE.RESOURCE_TYPE_CODE WHERE 1 = 1 '
	IF @RESOURCE_TYPES_LIST <> ''
	BEGIN
		SET @NSQL = @NSQL + ' AND RESOURCE_TYPE.RESOURCE_TYPE_CODE IN (' + @RESOURCE_TYPES_LIST +')'
	END
	IF @RESOURCE_CODE_LIST <> ''
	BEGIN
		SET @NSQL = @NSQL + ' AND RESOURCE.RESOURCE_CODE IN (' + @RESOURCE_CODE_LIST + ')'
	END
	SET @NSQL = @NSQL + ';'
	EXEC sp_executesql @NSQL, N'@TOTAL_COLUMNS_NEEDED INT OUT', @TOTAL_COLUMNS_NEEDED OUT

    SELECT @NUM_RESOURCE_TYPES AS NUM_RESOURCE_TYPES,
           @TOTAL_NUM_RESOURCES AS TOTAL_NUM_RESOURCES,
           @START_DATE AS [START_DATE],
           @END_DATE AS [END_DATE],
           @TOTAL_COLUMNS_NEEDED AS [TOTAL_COLUMNS_NEEDED];
    		
    --DATATABLE(1) GROUPED HEADER (RESOURCE TYPES)
    SET @SQL = ''
    SET @SQL = '
    SELECT RESOURCE_TYPE.RESOURCE_TYPE_CODE,
           RESOURCE_TYPE.RESOURCE_TYPE_DESC,
           COUNT(RESOURCE.RESOURCE_CODE) AS CT,
           RESOURCE_TYPE.INACTIVE_FLAG
    FROM   RESOURCE_TYPE WITH (NOLOCK)
           INNER JOIN RESOURCE WITH (NOLOCK)
                ON  RESOURCE_TYPE.RESOURCE_TYPE_CODE = RESOURCE.RESOURCE_TYPE_CODE WHERE 1 = 1 
    '
	IF @RESOURCE_TYPES_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND RESOURCE_TYPE.RESOURCE_TYPE_CODE IN (' + @RESOURCE_TYPES_LIST +')'
	END
	IF @RESOURCE_CODE_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND RESOURCE.RESOURCE_CODE IN (' + @RESOURCE_CODE_LIST + ')'
	END
	SET @SQL = @SQL + '
    GROUP BY
           RESOURCE_TYPE.RESOURCE_TYPE_CODE,
           RESOURCE_TYPE.INACTIVE_FLAG,
           RESOURCE_TYPE.RESOURCE_TYPE_DESC;'
	EXEC(@SQL);
	
	
    --DATATABLE(2) COLUMNS (RESOURCE)
    SET @SQL = '';
    SET @SQL = '
    SELECT RESOURCE_TYPE.RESOURCE_TYPE_CODE,
           RESOURCE.RESOURCE_CODE,
           RESOURCE_TYPE.RESOURCE_TYPE_CODE + ''|'' + RESOURCE.RESOURCE_CODE AS 
           RESOURCE_KEY
    FROM   RESOURCE_TYPE WITH(NOLOCK)
           INNER JOIN RESOURCE WITH(NOLOCK)
                ON  RESOURCE_TYPE.RESOURCE_TYPE_CODE = RESOURCE.RESOURCE_TYPE_CODE WHERE 1 = 1 
                '
	IF @RESOURCE_TYPES_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND RESOURCE_TYPE.RESOURCE_TYPE_CODE IN (' + @RESOURCE_TYPES_LIST +')'
	END
	IF @RESOURCE_CODE_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND RESOURCE.RESOURCE_CODE IN (' + @RESOURCE_CODE_LIST + ')'
	END
	SET @SQL = @SQL + '
    GROUP BY
           RESOURCE_TYPE.RESOURCE_TYPE_CODE,
           RESOURCE.RESOURCE_CODE
    ORDER BY
           RESOURCE_TYPE.RESOURCE_TYPE_CODE,
           RESOURCE.RESOURCE_CODE;'
	EXEC(@SQL);
           
    --DATATABLE(3) CELL DATA
    SET @SQL = '';
    SET @SQL = '
    SELECT #RESOURCE_DATA.EVENT_ID,
           #RESOURCE_DATA.START_TIME,
           #RESOURCE_DATA.END_TIME,
           0 AS ALL_DAY,
           #RESOURCE_DATA.RESOURCE_CODE,
           #RESOURCE_DATA.RESOURCE_TYPE_CODE, 
           #RESOURCE_DATA.RESOURCE_TYPE_CODE+''|''+#RESOURCE_DATA.RESOURCE_CODE+''|''+CAST(ISNULL(#RESOURCE_DATA.EVENT_TYPE_ID,0) AS VARCHAR)+''|''+ISNULL(#RESOURCE_DATA.JOB_LOG_UDV1,'''') AS RESOURCE_KEY,
           ISNULL(#RESOURCE_DATA.EVENT_TYPE_ID,0) AS EVENT_TYPE_ID,
           DATEDIFF(hour,START_TIME,END_TIME) AS EVENT_HOURS,
           DATEDIFF(minute,START_TIME,END_TIME) AS EVENT_MINUTES,
           JOB_NUMBER,
           JOB_LOG_UDV1
    FROM   #RESOURCE_DATA WHERE 1 = 1 '
	IF @RESOURCE_TYPES_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND #RESOURCE_DATA.RESOURCE_TYPE_CODE IN (' + @RESOURCE_TYPES_LIST +')'
	END
	IF @RESOURCE_CODE_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND #RESOURCE_DATA.RESOURCE_CODE IN (' + @RESOURCE_CODE_LIST + ')'
	END
	SET @SQL = @SQL + ';'
	EXEC(@SQL);
	
	--DATATABLE(4) TOTAL HOURS BY RESOURCE
    SET @SQL = '';
    SET @SQL = '
    SELECT 
           #RESOURCE_DATA.RESOURCE_CODE,
           SUM(DATEDIFF(hour,START_TIME,END_TIME)) AS TOTAL_HOURS,
           SUM(DATEDIFF(minute,START_TIME,END_TIME)) AS TOTAL_MINUTES
    FROM   #RESOURCE_DATA WHERE 1 = 1 '
	IF @RESOURCE_TYPES_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND #RESOURCE_DATA.RESOURCE_TYPE_CODE IN (' + @RESOURCE_TYPES_LIST +')'
	END
	IF @RESOURCE_CODE_LIST <> ''
	BEGIN
		SET @SQL = @SQL + ' AND #RESOURCE_DATA.RESOURCE_CODE IN (' + @RESOURCE_CODE_LIST + ')'
	END
	SET @SQL = @SQL + ' GROUP BY #RESOURCE_DATA.RESOURCE_CODE ORDER BY #RESOURCE_DATA.RESOURCE_CODE;'
	EXEC(@SQL);
	
	DROP TABLE #RESOURCE_DATA;

/*=========== QUERY ===========*/
