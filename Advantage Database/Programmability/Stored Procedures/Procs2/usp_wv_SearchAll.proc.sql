IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_SearchAll]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
	DROP PROCEDURE [dbo].[usp_wv_SearchAll]
GO

CREATE PROCEDURE [dbo].[usp_wv_SearchAll] /*WITH ENCRYPTION*/

@EMP_CODE VARCHAR(6),
@USER_CODE VARCHAR(100),
@SEARCH_TERM VARCHAR(MAX),
@EXACT_SEARCH BIT,

@JOBS_OPEN BIT,
@JOBS_CLOSED BIT,
@JOBS_DESC BIT,
@JOBS_COMMENTS BIT,

@ALERTS_STANDARD BIT,
@ALERTS_ASSIGNMENTS BIT,
@ALERTS_SUBJECT BIT,
@ALERTS_DESC BIT,
@ALERTS_OPEN BIT,
@ALERTS_DISMISSED_COMPLETED BIT,

@SCHED_COMMENTS BIT,
@SCHED_INCL_CLOSED BIT,

@SCHED_TASK_INCL_CLOSED BIT,
@SCHED_TASK_DESC BIT,
@SCHED_TASK_FNC_COMMENTS BIT,
@SCHED_TASK_DUE_DATE_COMMENTS BIT,
@SCHED_TASK_REV_DATE_COMMENTS BIT,

@EST_DESC BIT,
@EST_COMMENTS BIT,
@EST_COMPONENT_DESC BIT,
@EST_COMPONENT_COMMENTS BIT,
@EST_FOOTER_COMMENTS BIT,
@EST_QUOTE_DET_COMMENTS BIT,
@EST_QUOTE_DET_DESC BIT,

@CAMP_COMMENTS BIT,

@PO_DESCRIPTION BIT,
@PO_MAIN_INSTRUCT BIT,
@PO_DEL_INSTRUCT BIT,
@PO_DETAIL_DESC BIT,
@PO_DETAIL_LINE_DESC BIT,
@PO_DETAIL_DET_INSTRUCT BIT,


@CP BIT,
@CPID INT,

@JOB_REQUESTS BIT

AS
/*=========== QUERY ===========*/

	DECLARE
		@SEARCH_JOBS BIT, -- 1
		@SEARCH_ALERTS BIT, -- 2
		@SEARCH_SCHEDULES BIT, -- 3
		@SEARCH_SCHEDULE_TASKS BIT, --4
		@SEARCH_ESTIMATES BIT, -- 5
		@SEARCH_CAMPAIGNS BIT, -- 6
		@SEARCH_PURCHASE_ORDERS BIT, -- 7
		
		@SQL NVARCHAR(MAX),
		@SQL_BASE NVARCHAR(MAX),
		@SQL_WHERE NVARCHAR(MAX),
		@SQL_ITEM NVARCHAR(MAX),
		@SQL_PARAM NVARCHAR(500),
		@SQL_SEARCH_TERM NVARCHAR(50),
		@SQL_RECOMPILE NVARCHAR(50),
		@OPERAND NVARCHAR(10),
		
		@WILD_CARD_PREFIX NVARCHAR(5),
		@WILD_CARD_SUFFIX NVARCHAR(5),
		@CASE_PREFIX NVARCHAR(10),
		@CASE_SUFFIX NVARCHAR(10),
		
		@HAS_ACCESS_TO_ALL_ASSIGNMENTS BIT,
		
		@AND_OR VARCHAR(3),
		
		@DUMMY BIT

		DECLARE @EMP_CDE AS VARCHAR(6)
		DECLARE @OfficeCount AS INTEGER

		SELECT @EMP_CDE = EMP_CODE FROM SEC_USER WHERE UPPER(USER_CODE) = UPPER(@USER_CODE)

		SELECT @OfficeCount = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CDE

	SET @SQL_RECOMPILE = '  OPTION (RECOMPILE)'

	SELECT @HAS_ACCESS_TO_ALL_ASSIGNMENTS = dbo.fn_sec_user_has_access_by_setting_code(@USER_CODE,'AlertInbox_ShowAllAssignments');

	CREATE TABLE
		#DATA  (
			[ID] [int] IDENTITY(1,1) NOT NULL,
			CL_CODE VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
			DIV_CODE VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
			PRD_CODE VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
			GROUP_ID TINYINT,
			[GROUP] VARCHAR(50),
			MATCHING_TEXT VARCHAR(MAX),
			[LINK] VARCHAR(500),
			[ID1] INT,
			[ID2] INT,
			[ID3] INT,
			[ID4] INT,
			[ID5] INT,
			[ID6] VARCHAR(50),
			[ID7] VARCHAR(50),
			[ID8] VARCHAR(50),
			[ID9] VARCHAR(50),
			[ID10] VARCHAR(50),
			GROUP_COUNT INT,
			DATE_FOR_SORT SMALLDATETIME
			
	);
		
	IF (@JOBS_DESC = 1 OR @JOBS_COMMENTS = 1) AND (@JOBS_OPEN = 1 OR @JOBS_CLOSED = 1)
	BEGIN
		SET @SEARCH_JOBS = 1;
	END	
	IF (@ALERTS_STANDARD = 1 OR @ALERTS_ASSIGNMENTS = 1 OR @ALERTS_SUBJECT = 1 OR @ALERTS_DESC = 1) AND (@ALERTS_OPEN = 1 OR @ALERTS_DISMISSED_COMPLETED = 1)
	BEGIN
		SET @SEARCH_ALERTS = 1;
	END	
	IF @SCHED_COMMENTS = 1 OR @SCHED_INCL_CLOSED = 1
	BEGIN
		SET @SEARCH_SCHEDULES = 1;
	END	
	IF @SCHED_TASK_DESC = 1 OR @SCHED_TASK_INCL_CLOSED = 1
	BEGIN
		SET @SEARCH_SCHEDULE_TASKS = 1;
	END	
	IF @EST_COMMENTS = 1 OR @EST_COMPONENT_COMMENTS = 1 OR @EST_FOOTER_COMMENTS = 1 OR @EST_QUOTE_DET_COMMENTS = 1 OR @EST_DESC = 1 OR @EST_COMPONENT_DESC = 1 OR @EST_QUOTE_DET_DESC = 1
	BEGIN
		SET @SEARCH_ESTIMATES = 1;
	END	
	IF @CAMP_COMMENTS = 1 
	BEGIN
		SET @SEARCH_CAMPAIGNS = 1;
	END	
	IF @PO_DESCRIPTION = 1 OR @PO_MAIN_INSTRUCT = 1 OR @PO_DEL_INSTRUCT = 1 OR @PO_DETAIL_DESC = 1 OR @PO_DETAIL_LINE_DESC = 1 OR @PO_DETAIL_DET_INSTRUCT = 1
	BEGIN
		SET @SEARCH_PURCHASE_ORDERS = 1;
	END	
	--INIT	
	SET @SQL = '';
	SET @SQL_BASE = '';
	SET @SQL_WHERE = '';
	SET @SQL_ITEM = '';  
	SET @SQL_SEARCH_TERM = '@SEARCH_TERM'
	SET @AND_OR = '';

	IF @EXACT_SEARCH = 1
	BEGIN

		SET @OPERAND = ' = ';
		SET @WILD_CARD_PREFIX = '';
		SET @WILD_CARD_SUFFIX = '';
		SET @CASE_PREFIX = '';
		SET @CASE_SUFFIX = '';
		SET @SQL_SEARCH_TERM = '@SEARCH_TERM'
		
	END
	ELSE
	BEGIN

		SET @OPERAND = ' LIKE ';
		SET @CASE_PREFIX = ' UPPER(' ;
		SET @CASE_SUFFIX = ')';
		SET @SQL_SEARCH_TERM = '''%'' + UPPER(@SEARCH_TERM) + ''%'''
		
	END

	-- 1
	IF @SEARCH_JOBS = 1
	BEGIN
	
		SET @SQL_PARAM = '@SEARCH_TERM VARCHAR(MAX), @CPID INT';

		-- JOB_LOG
		SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, GROUP_ID, MATCHING_TEXT, ID1, ID2, DATE_FOR_SORT)'
		SET @SQL_BASE = @SQL_BASE + ' SELECT     JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, 1, JOB_LOG.JOB_DESC, JOB_COMPONENT.JOB_NUMBER, JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_COMPONENT.JOB_FIRST_USE_DATE '
		SET @SQL_BASE = @SQL_BASE + ' FROM         JOB_LOG WITH (NOLOCK) INNER JOIN '
		SET @SQL_BASE = @SQL_BASE + ' 					  JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER '
		if @CP = 1
		BEGIN
			SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE'
		END
		if @OfficeCount > 0
		BEGIN
			SET @SQL_BASE = @SQL_BASE + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
		END

		SET @SQL_BASE = @SQL_BASE + ' WHERE     (1 = 1) '
		
		IF @JOBS_OPEN = 1 AND (@JOBS_CLOSED = 0 OR @JOBS_CLOSED IS NULL)
		BEGIN
			SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (6, 12)) '
		END
		IF @JOBS_CLOSED = 1 AND (@JOBS_OPEN = 0 OR @JOBS_OPEN IS NULL)
		BEGIN
			SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)) '
		END
		if @CP = 1
		BEGIN
			SET @SQL_BASE = @SQL_BASE + ' AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)'
		END
		
		SET @SQL_ITEM = @SQL_ITEM + ' AND ('
	
		IF @JOBS_DESC = 1
		BEGIN
		
			SET @SQL_ITEM = @SQL_ITEM + ' ((' + @CASE_PREFIX + 'JOB_LOG.JOB_DESC' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ') '
			SET @SQL_ITEM = @SQL_ITEM + ' OR (' + @CASE_PREFIX + 'JOB_COMPONENT.JOB_COMP_DESC' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '
			SET @AND_OR = 'OR'
			
		END
		
		IF @JOBS_COMMENTS = 1
		BEGIN
		
			SET @SQL_ITEM = @SQL_ITEM + @AND_OR	
			SET @SQL_ITEM = @SQL_ITEM + ' ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), JOB_LOG.JOB_COMMENTS)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')'
			SET @SQL_ITEM = @SQL_ITEM + ' OR (' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), JOB_COMPONENT.JOB_COMP_COMMENTS)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + '))'
			
		END
		
		SET @SQL_ITEM = @SQL_ITEM + ') '

		SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
		--PRINT @SQL;
		EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM, @CPID

		--RESET
		SET @SQL = '';
		SET @SQL_BASE = '';
		SET @SQL_WHERE = '';
		SET @SQL_ITEM = '';
		SET @AND_OR = '';

		UPDATE #DATA 
		SET [LINK] = 'Content.aspx?contaid=10&PageMode=Edit&NewComp=0&JobNum=' + CONVERT(VARCHAR, ID1) + '&JobCompNum=' + CONVERT(VARCHAR, ID2) + '&j=' + CONVERT(VARCHAR, ID1) + '&jc=' + CONVERT(VARCHAR, ID2), 
		[GROUP] = 'Job Jacket' WHERE #DATA.GROUP_ID = 1;
				
	END	

	-- 2
	IF @SEARCH_ALERTS = 1
	BEGIN
		DECLARE @ALERTS_INCLUDE_RECIPIENT_TABLES BIT
		SET @ALERTS_INCLUDE_RECIPIENT_TABLES = 1;

		IF @CP = 1
		BEGIN
			IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 1) 
			BEGIN
				SET @ALERTS_INCLUDE_RECIPIENT_TABLES = 0;
			END

			IF (@HAS_ACCESS_TO_ALL_ASSIGNMENTS = 0)
			BEGIN
				SET @ALERTS_INCLUDE_RECIPIENT_TABLES = 1;
			END

			SET @ALERTS_OPEN = ISNULL(@ALERTS_OPEN, 0);
			SET @ALERTS_DISMISSED_COMPLETED = ISNULL(@ALERTS_DISMISSED_COMPLETED, 0);

			SET @ALERTS_STANDARD = ISNULL(@ALERTS_STANDARD, 0);
			SET @ALERTS_ASSIGNMENTS = ISNULL(@ALERTS_ASSIGNMENTS, 0);
	
			SET @SQL_PARAM = '@SEARCH_TERM VARCHAR(MAX), @CPID INT';

			IF @ALERTS_DESC = 1
			BEGIN		
				
				IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
				BEGIN
					SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, GROUP_ID, ID1, MATCHING_TEXT, DATE_FOR_SORT) '
					SET @SQL_BASE = @SQL_BASE + ' SELECT     ALERT.CL_CODE, ALERT.DIV_CODE, ALERT.PRD_CODE, 2, ALERT.ALERT_ID, CONVERT(VARCHAR(MAX), ALERT.BODY), ISNULL((SELECT MAX(GENERATED_DATE) AS MAX_DATE FROM ALERT_COMMENT WITH (NOLOCK) WHERE  (ALERT_ID = ALERT.ALERT_ID)), ALERT.GENERATED) '
					SET @SQL_BASE = @SQL_BASE + ' FROM         ALERT WITH(NOLOCK) '
					SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_ALERT_RCPT WITH(NOLOCK) ON ALERT.ALERT_ID = CP_ALERT_RCPT.ALERT_ID '
					SET @SQL_BASE = @SQL_BASE + ' WHERE 1 = 1'
					iF @ALERTS_ASSIGNMENTS = 1
					BEGIN
						IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND CP_ALERT_RCPT.CURRENT_NOTIFY = 1'
						END
					END
					IF @ALERTS_STANDARD = 1 
					BEGIN
						IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND (CP_ALERT_RCPT.CDP_CONTACT_ID = @CPID) '
						END
					END
				END
				IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
				BEGIN
					SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, GROUP_ID, ID1, MATCHING_TEXT, DATE_FOR_SORT) '
					SET @SQL_BASE = @SQL_BASE + ' SELECT     ALERT.CL_CODE, ALERT.DIV_CODE, ALERT.PRD_CODE, 2, ALERT.ALERT_ID, CONVERT(VARCHAR(MAX), ALERT.BODY), ISNULL((SELECT MAX(GENERATED_DATE) AS MAX_DATE FROM ALERT_COMMENT WITH (NOLOCK) WHERE  (ALERT_ID = ALERT.ALERT_ID)), ALERT.GENERATED) '
					SET @SQL_BASE = @SQL_BASE + ' FROM         ALERT WITH(NOLOCK) '
					SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_ALERT_RCPT_DISMISSED WITH(NOLOCK) ON ALERT.ALERT_ID = CP_ALERT_RCPT_DISMISSED.ALERT_ID '
					SET @SQL_BASE = @SQL_BASE + ' WHERE 1 = 1'
					iF @ALERTS_ASSIGNMENTS = 1
					BEGIN
						IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND CP_ALERT_RCPT_DISMISSED.CURRENT_NOTIFY = 1'
						END
					END
					IF @ALERTS_STANDARD = 1 
					BEGIN
						IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND (CP_ALERT_RCPT_DISMISSED.CDP_CONTACT_ID = @CPID) '
						END
					END
				END
				IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 1) OR (@ALERTS_OPEN = 0 AND @ALERTS_DISMISSED_COMPLETED = 0)
				BEGIN					
					SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, GROUP_ID, ID1, MATCHING_TEXT, DATE_FOR_SORT) '
					SET @SQL_BASE = @SQL_BASE + ' SELECT     ALERT.CL_CODE, ALERT.DIV_CODE, ALERT.PRD_CODE, 2, ALERT.ALERT_ID, CONVERT(VARCHAR(MAX), ALERT.BODY), ISNULL((SELECT MAX(GENERATED_DATE) AS MAX_DATE FROM ALERT_COMMENT WITH (NOLOCK) WHERE  (ALERT_ID = ALERT.ALERT_ID)), ALERT.GENERATED) '
					SET @SQL_BASE = @SQL_BASE + ' FROM         ALERT WITH(NOLOCK) '
					SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_ALERT_RCPT WITH(NOLOCK) ON ALERT.ALERT_ID = CP_ALERT_RCPT.ALERT_ID'
					SET @SQL_BASE = @SQL_BASE + ' WHERE 1 = 1'
					iF @ALERTS_ASSIGNMENTS = 1
					BEGIN
						IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND CP_ALERT_RCPT.CURRENT_NOTIFY = 1'
						END
					END
					IF @ALERTS_STANDARD = 1 
					BEGIN
						IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND (CP_ALERT_RCPT.CDP_CONTACT_ID = @CPID) '
						END
					END

					SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, GROUP_ID, ID1, MATCHING_TEXT, DATE_FOR_SORT) '
					SET @SQL_BASE = @SQL_BASE + ' SELECT     ALERT.CL_CODE, ALERT.DIV_CODE, ALERT.PRD_CODE, 2, ALERT.ALERT_ID, CONVERT(VARCHAR(MAX), ALERT.BODY), ISNULL((SELECT MAX(GENERATED_DATE) AS MAX_DATE FROM ALERT_COMMENT WITH (NOLOCK) WHERE  (ALERT_ID = ALERT.ALERT_ID)), ALERT.GENERATED) '
					SET @SQL_BASE = @SQL_BASE + ' FROM         ALERT WITH(NOLOCK) '
					SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_ALERT_RCPT_DISMISSED WITH(NOLOCK) ON ALERT.ALERT_ID = CP_ALERT_RCPT_DISMISSED.ALERT_ID '
					SET @SQL_BASE = @SQL_BASE + ' WHERE 1 = 1'
					iF @ALERTS_ASSIGNMENTS = 1
					BEGIN
						IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND CP_ALERT_RCPT_DISMISSED.CURRENT_NOTIFY = 1'
						END
					END
					IF @ALERTS_STANDARD = 1 
					BEGIN
						IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND (CP_ALERT_RCPT_DISMISSED.CDP_CONTACT_ID = @CPID) '
						END
					END
				END		

				--IF @ALERTS_STANDARD = 1 AND (@ALERTS_ASSIGNMENTS = 0)
				--BEGIN
				--	SET @SQL_WHERE = @SQL_WHERE + ' AND (ALERT.ALRT_NOTIFY_HDR_ID IS NULL) ' 	
				--END
				--IF @ALERTS_ASSIGNMENTS = 1 AND (@ALERTS_STANDARD = 0)
				--BEGIN
				--	SET @SQL_WHERE = @SQL_WHERE + ' AND (NOT ALERT.ALRT_NOTIFY_HDR_ID IS NULL) ' 	
				--END

				SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), ALERT.BODY_HTML)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ') OR (' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), ALERT.BODY)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '
				SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
				PRINT @SQL;

				EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM, @CPID;
			
				--RESET
				SET @SQL = '';
				SET @SQL_BASE = '';
				SET @SQL_WHERE = '';
				SET @SQL_ITEM = '';
		
			END
		
			IF @ALERTS_SUBJECT = 1
			BEGIN

				IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
				BEGIN
					SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, GROUP_ID, ID1, MATCHING_TEXT, DATE_FOR_SORT) '
					SET @SQL_BASE = @SQL_BASE + ' SELECT     ALERT.CL_CODE, ALERT.DIV_CODE, ALERT.PRD_CODE, 2, ALERT.ALERT_ID, CONVERT(VARCHAR(MAX), ALERT.BODY), ISNULL((SELECT MAX(GENERATED_DATE) AS MAX_DATE FROM ALERT_COMMENT WITH (NOLOCK) WHERE  (ALERT_ID = ALERT.ALERT_ID)), ALERT.GENERATED) '
					SET @SQL_BASE = @SQL_BASE + ' FROM         ALERT WITH(NOLOCK) '
					SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_ALERT_RCPT WITH(NOLOCK) ON ALERT.ALERT_ID = CP_ALERT_RCPT.ALERT_ID '
					SET @SQL_BASE = @SQL_BASE + ' WHERE 1 = 1'
					iF @ALERTS_ASSIGNMENTS = 1
					BEGIN
						IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND CP_ALERT_RCPT.CURRENT_NOTIFY = 1'
						END
					END
					IF @ALERTS_STANDARD = 1 
					BEGIN
						IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND (CP_ALERT_RCPT.CDP_CONTACT_ID = @CPID) '
						END
					END
				END
				IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
				BEGIN
					SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, GROUP_ID, ID1, MATCHING_TEXT, DATE_FOR_SORT) '
					SET @SQL_BASE = @SQL_BASE + ' SELECT     ALERT.CL_CODE, ALERT.DIV_CODE, ALERT.PRD_CODE, 2, ALERT.ALERT_ID, CONVERT(VARCHAR(MAX), ALERT.BODY), ISNULL((SELECT MAX(GENERATED_DATE) AS MAX_DATE FROM ALERT_COMMENT WITH (NOLOCK) WHERE  (ALERT_ID = ALERT.ALERT_ID)), ALERT.GENERATED) '
					SET @SQL_BASE = @SQL_BASE + ' FROM         ALERT WITH(NOLOCK) '
					SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_ALERT_RCPT_DISMISSED WITH(NOLOCK) ON ALERT.ALERT_ID = CP_ALERT_RCPT_DISMISSED.ALERT_ID '
					SET @SQL_BASE = @SQL_BASE + ' WHERE 1 = 1'
					iF @ALERTS_ASSIGNMENTS = 1
					BEGIN
						IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND CP_ALERT_RCPT_DISMISSED.CURRENT_NOTIFY = 1'
						END
					END
					IF @ALERTS_STANDARD = 1 
					BEGIN
						IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND (CP_ALERT_RCPT_DISMISSED.CDP_CONTACT_ID = @CPID) '
						END
					END
				END
				IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 1) OR (@ALERTS_OPEN = 0 AND @ALERTS_DISMISSED_COMPLETED = 0)
				BEGIN					
					SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, GROUP_ID, ID1, MATCHING_TEXT, DATE_FOR_SORT) '
					SET @SQL_BASE = @SQL_BASE + ' SELECT     ALERT.CL_CODE, ALERT.DIV_CODE, ALERT.PRD_CODE, 2, ALERT.ALERT_ID, CONVERT(VARCHAR(MAX), ALERT.BODY), ISNULL((SELECT MAX(GENERATED_DATE) AS MAX_DATE FROM ALERT_COMMENT WITH (NOLOCK) WHERE  (ALERT_ID = ALERT.ALERT_ID)), ALERT.GENERATED) '
					SET @SQL_BASE = @SQL_BASE + ' FROM         ALERT WITH(NOLOCK) '
					SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_ALERT_RCPT WITH(NOLOCK) ON ALERT.ALERT_ID = CP_ALERT_RCPT.ALERT_ID'
					SET @SQL_BASE = @SQL_BASE + ' WHERE 1 = 1'
					iF @ALERTS_ASSIGNMENTS = 1
					BEGIN
						IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND CP_ALERT_RCPT.CURRENT_NOTIFY = 1'
						END
					END
					IF @ALERTS_STANDARD = 1 
					BEGIN
						IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND (CP_ALERT_RCPT.CDP_CONTACT_ID = @CPID) '
						END
					END

					SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, GROUP_ID, ID1, MATCHING_TEXT, DATE_FOR_SORT) '
					SET @SQL_BASE = @SQL_BASE + ' SELECT     ALERT.CL_CODE, ALERT.DIV_CODE, ALERT.PRD_CODE, 2, ALERT.ALERT_ID, CONVERT(VARCHAR(MAX), ALERT.BODY), ISNULL((SELECT MAX(GENERATED_DATE) AS MAX_DATE FROM ALERT_COMMENT WITH (NOLOCK) WHERE  (ALERT_ID = ALERT.ALERT_ID)), ALERT.GENERATED) '
					SET @SQL_BASE = @SQL_BASE + ' FROM         ALERT WITH(NOLOCK) '
					SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_ALERT_RCPT_DISMISSED WITH(NOLOCK) ON ALERT.ALERT_ID = CP_ALERT_RCPT_DISMISSED.ALERT_ID '
					SET @SQL_BASE = @SQL_BASE + ' WHERE 1 = 1'
					iF @ALERTS_ASSIGNMENTS = 1
					BEGIN
						IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND CP_ALERT_RCPT_DISMISSED.CURRENT_NOTIFY = 1'
						END
					END
					IF @ALERTS_STANDARD = 1 
					BEGIN
						IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND (CP_ALERT_RCPT_DISMISSED.CDP_CONTACT_ID = @CPID) '
						END
					END
				END		

				--IF (@ALERTS_STANDARD = 1 AND @ALERTS_ASSIGNMENTS = 0)
				--BEGIN
				--	SET @SQL_WHERE = @SQL_WHERE + ' AND (ALERT.ALRT_NOTIFY_HDR_ID IS NULL) ' 	
				--END
				--IF (@ALERTS_ASSIGNMENTS = 1 AND @ALERTS_STANDARD = 0)
				--BEGIN
				--	SET @SQL_WHERE = @SQL_WHERE + ' AND (NOT ALERT.ALRT_NOTIFY_HDR_ID IS NULL) ' 	
				--END

				SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'ALERT.[SUBJECT]' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '
				SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
				PRINT @SQL;
				EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM, @CPID;
					
				--RESET
				SET @SQL = '';
				SET @SQL_BASE = '';
				SET @SQL_WHERE = '';
				SET @SQL_ITEM = '';
			
			END

			UPDATE #DATA 
			SET [LINK] = 'Alert_View.aspx?alert=' + CONVERT(VARCHAR, ID1), [GROUP] = 'Alert' WHERE #DATA.GROUP_ID = 2;
		END
		ELSE
		BEGIN
			IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 1) 
			BEGIN
				SET @ALERTS_INCLUDE_RECIPIENT_TABLES = 0;
			END

			IF (@HAS_ACCESS_TO_ALL_ASSIGNMENTS = 0)
			BEGIN
				SET @ALERTS_INCLUDE_RECIPIENT_TABLES = 1;
			END

			SET @ALERTS_OPEN = ISNULL(@ALERTS_OPEN, 0);
			SET @ALERTS_DISMISSED_COMPLETED = ISNULL(@ALERTS_DISMISSED_COMPLETED, 0);

			SET @ALERTS_STANDARD = ISNULL(@ALERTS_STANDARD, 0);
			SET @ALERTS_ASSIGNMENTS = ISNULL(@ALERTS_ASSIGNMENTS, 0);
	
			SET @SQL_PARAM = '@SEARCH_TERM VARCHAR(MAX)';

			IF @ALERTS_DESC = 1
			BEGIN
		
				SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, GROUP_ID, ID1, MATCHING_TEXT, DATE_FOR_SORT) '
				SET @SQL_BASE = @SQL_BASE + ' SELECT     ALERT.CL_CODE, ALERT.DIV_CODE, ALERT.PRD_CODE, 2, ALERT.ALERT_ID, CONVERT(VARCHAR(MAX), ALERT.BODY), ISNULL((SELECT MAX(GENERATED_DATE) AS MAX_DATE FROM ALERT_COMMENT WITH (NOLOCK) WHERE  (ALERT_ID = ALERT.ALERT_ID)), ALERT.GENERATED) '
				SET @SQL_BASE = @SQL_BASE + ' FROM         ALERT WITH(NOLOCK) '
		
				IF (@ALERTS_INCLUDE_RECIPIENT_TABLES = 1)
				BEGIN	

					IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
					BEGIN
						SET @SQL_BASE = @SQL_BASE + ' INNER JOIN ALERT_RCPT WITH(NOLOCK) ON ALERT.ALERT_ID = ALERT_RCPT.ALERT_ID '
					END
					IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
					BEGIN
						SET @SQL_BASE = @SQL_BASE + ' INNER JOIN ALERT_RCPT_DISMISSED WITH(NOLOCK) ON ALERT.ALERT_ID = ALERT_RCPT_DISMISSED.ALERT_ID '
					END

				END

				SET @SQL_BASE = @SQL_BASE + ' WHERE 1 = 1 ' 

				IF (@ALERTS_INCLUDE_RECIPIENT_TABLES = 1)
				BEGIN	

					IF @ALERTS_ASSIGNMENTS = 1
					BEGIN

						IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND ALERT_RCPT.CURRENT_NOTIFY = 1'
						END

						IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND ALERT_RCPT_DISMISSED.CURRENT_NOTIFY = 1'
						END

					END
					IF @ALERTS_STANDARD = 1 OR @HAS_ACCESS_TO_ALL_ASSIGNMENTS = 0
					BEGIN

						IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND (ALERT.EMP_CODE = ''' + @EMP_CODE + '''  OR ALERT_RCPT.EMP_CODE = ''' + @EMP_CODE + ''') '
						END

						IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND (ALERT.EMP_CODE = ''' + @EMP_CODE + '''  OR ALERT_RCPT_DISMISSED.EMP_CODE = ''' + @EMP_CODE + ''') '
						END

					END


				END

				IF @ALERTS_STANDARD = 1 AND (@ALERTS_ASSIGNMENTS = 0)
				BEGIN
					SET @SQL_WHERE = @SQL_WHERE + ' AND (ALERT.ALRT_NOTIFY_HDR_ID IS NULL) ' 	
				END
				IF @ALERTS_ASSIGNMENTS = 1 AND (@ALERTS_STANDARD = 0)
				BEGIN
					SET @SQL_WHERE = @SQL_WHERE + ' AND (NOT ALERT.ALRT_NOTIFY_HDR_ID IS NULL) ' 	
				END

				SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), ALERT.BODY_HTML)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ') OR (' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), ALERT.BODY)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '
				SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
				--PRINT @SQL;

				EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
			
				--RESET
				SET @SQL = '';
				SET @SQL_BASE = '';
				SET @SQL_WHERE = '';
				SET @SQL_ITEM = '';
		
			END
		
			IF @ALERTS_SUBJECT = 1
			BEGIN

				SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, GROUP_ID, ID1, MATCHING_TEXT, DATE_FOR_SORT) '
				SET @SQL_BASE = @SQL_BASE + ' SELECT     ALERT.CL_CODE, ALERT.DIV_CODE, ALERT.PRD_CODE, 2, ALERT.ALERT_ID, ALERT.[SUBJECT], ISNULL((SELECT MAX(GENERATED_DATE) AS MAX_DATE FROM ALERT_COMMENT WITH (NOLOCK) WHERE  (ALERT_ID = ALERT.ALERT_ID)),ALERT.GENERATED) '
				SET @SQL_BASE = @SQL_BASE + ' FROM         ALERT WITH(NOLOCK) '
			
				IF (@ALERTS_INCLUDE_RECIPIENT_TABLES = 1)
				BEGIN	

					IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
					BEGIN
						SET @SQL_BASE = @SQL_BASE + ' INNER JOIN ALERT_RCPT WITH(NOLOCK) ON ALERT.ALERT_ID = ALERT_RCPT.ALERT_ID '
					END
					IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
					BEGIN
						SET @SQL_BASE = @SQL_BASE + ' INNER JOIN ALERT_RCPT_DISMISSED WITH(NOLOCK) ON ALERT.ALERT_ID = ALERT_RCPT_DISMISSED.ALERT_ID '
					END

				END
			
				SET @SQL_BASE = @SQL_BASE + ' WHERE 1 = 1 ' 
			    
				IF (@ALERTS_INCLUDE_RECIPIENT_TABLES = 1)
				BEGIN	

					IF @ALERTS_ASSIGNMENTS = 1
					BEGIN

						IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND ALERT_RCPT.CURRENT_NOTIFY = 1'
						END

						IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND ALERT_RCPT_DISMISSED.CURRENT_NOTIFY = 1'
						END

					END
					IF @ALERTS_STANDARD = 1 OR @HAS_ACCESS_TO_ALL_ASSIGNMENTS = 0
					BEGIN

						IF (@ALERTS_OPEN = 1 AND @ALERTS_DISMISSED_COMPLETED = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND (ALERT.EMP_CODE = ''' + @EMP_CODE + '''  OR ALERT_RCPT.EMP_CODE = ''' + @EMP_CODE + ''') '
						END

						IF (@ALERTS_DISMISSED_COMPLETED = 1 AND @ALERTS_OPEN = 0)
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE + ' AND (ALERT.EMP_CODE = ''' + @EMP_CODE + '''  OR ALERT_RCPT_DISMISSED.EMP_CODE = ''' + @EMP_CODE + ''') '
						END

					END

				END

				IF (@ALERTS_STANDARD = 1 AND @ALERTS_ASSIGNMENTS = 0)
				BEGIN
					SET @SQL_WHERE = @SQL_WHERE + ' AND (ALERT.ALRT_NOTIFY_HDR_ID IS NULL) ' 	
				END
				IF (@ALERTS_ASSIGNMENTS = 1 AND @ALERTS_STANDARD = 0)
				BEGIN
					SET @SQL_WHERE = @SQL_WHERE + ' AND (NOT ALERT.ALRT_NOTIFY_HDR_ID IS NULL) ' 	
				END

				SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'ALERT.[SUBJECT]' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '
				SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
				--PRINT @SQL;
				EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
					
				--RESET
				SET @SQL = '';
				SET @SQL_BASE = '';
				SET @SQL_WHERE = '';
				SET @SQL_ITEM = '';
			
			END

			UPDATE #DATA 
			SET [LINK] = 'Alert_View.aspx?alert=' + CONVERT(VARCHAR, ID1), [GROUP] = 'Alert' WHERE #DATA.GROUP_ID = 2;
		END
	END	

	-- 3
	IF @SEARCH_SCHEDULES = 1
	BEGIN
	
		SET @SQL_PARAM = '@SEARCH_TERM VARCHAR(MAX), @CPID INT';

		IF @SCHED_COMMENTS = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, GROUP_ID, ID1, ID2, MATCHING_TEXT, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, 3, JOB_TRAFFIC.JOB_NUMBER, JOB_TRAFFIC.JOB_COMPONENT_NBR, CONVERT(VARCHAR(MAX), JOB_TRAFFIC.TRF_COMMENTS), JOB_COMPONENT.JOB_FIRST_USE_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         JOB_TRAFFIC WITH (NOLOCK) INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' 					  JOB_LOG WITH (NOLOCK) ON JOB_TRAFFIC.JOB_NUMBER = JOB_LOG.JOB_NUMBER INNER JOIN JOB_COMPONENT WITH(NOLOCK) ON JOB_TRAFFIC.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND JOB_TRAFFIC.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR '
			if @CP = 1
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE'
			END
			if @OfficeCount > 0
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
			END
			SET @SQL_BASE = @SQL_BASE + ' WHERE 1 = 1 '
			
			IF (@SCHED_INCL_CLOSED = 0 OR @SCHED_INCL_CLOSED IS NULL)
			BEGIN
			
				SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL) '
				
			END
			if @CP = 1
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)'
			END
			
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), JOB_TRAFFIC.TRF_COMMENTS)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '
			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM, @CPID;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
			
		END
		
		UPDATE #DATA 
		SET [LINK] = 'Content.aspx?contaid=15&JobNum=' + CONVERT(VARCHAR, ID1) + '&JobComp=' + CONVERT(VARCHAR, ID2), 
		[GROUP] = 'Project Schedule' WHERE #DATA.GROUP_ID = 3;

	END	

	--4
	IF @SEARCH_SCHEDULE_TASKS = 1
	BEGIN
		
		SET @SQL_PARAM = '@SEARCH_TERM VARCHAR(MAX), @CPID INT';

		IF @SCHED_TASK_DESC = 1
		BEGIN

			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, ID3, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, JOB_TRAFFIC_DET.TASK_DESCRIPTION, 4, JOB_TRAFFIC_DET.JOB_NUMBER, JOB_TRAFFIC_DET.JOB_COMPONENT_NBR, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TASK_START_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         JOB_TRAFFIC_DET WITH(NOLOCK) INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' 					  JOB_LOG WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER '
			if @CP = 1
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE'
			END			
			if @OfficeCount > 0
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
			END
			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
			
			IF @SCHED_TASK_INCL_CLOSED IS NULL OR @SCHED_TASK_INCL_CLOSED = 0
			BEGIN
			
				SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL) '
				
			END
			if @CP = 1
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)'
			END
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'JOB_TRAFFIC_DET.TASK_DESCRIPTION' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '
			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM, @CPID;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
		
		END
		
		IF @SCHED_TASK_FNC_COMMENTS = 1
		BEGIN

			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, ID3, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, CONVERT(VARCHAR(MAX), JOB_TRAFFIC_DET.FNC_COMMENTS), 4, JOB_TRAFFIC_DET.JOB_NUMBER, JOB_TRAFFIC_DET.JOB_COMPONENT_NBR, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TASK_START_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         JOB_TRAFFIC_DET WITH(NOLOCK) INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' 					  JOB_LOG WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER '
			if @CP = 1
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE'
			END			
			if @OfficeCount > 0
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
			END
			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
			
			IF @SCHED_TASK_INCL_CLOSED IS NULL OR @SCHED_TASK_INCL_CLOSED = 0
			BEGIN
			
				SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL) '
				
			END
			if @CP = 1
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)'
			END
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), JOB_TRAFFIC_DET.FNC_COMMENTS)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '
			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM, @CPID;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
		
		END
		
		IF @SCHED_TASK_DUE_DATE_COMMENTS = 1
		BEGIN

			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, ID3, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, CONVERT(VARCHAR(MAX), JOB_TRAFFIC_DET.DUE_DATE_COMMENTS), 4, JOB_TRAFFIC_DET.JOB_NUMBER, JOB_TRAFFIC_DET.JOB_COMPONENT_NBR, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TASK_START_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         JOB_TRAFFIC_DET WITH(NOLOCK) INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' 					  JOB_LOG WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER '
			if @CP = 1
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE'
			END			
			if @OfficeCount > 0
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
			END
			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
			
			IF @SCHED_TASK_INCL_CLOSED IS NULL OR @SCHED_TASK_INCL_CLOSED = 0
			BEGIN
			
				SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL) '
				
			END
			if @CP = 1
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)'
			END
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), JOB_TRAFFIC_DET.DUE_DATE_COMMENTS)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '
			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM, @CPID;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
		
		END
		
		IF @SCHED_TASK_REV_DATE_COMMENTS = 1
		BEGIN

			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, ID3, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, CONVERT(VARCHAR(MAX), JOB_TRAFFIC_DET.REV_DATE_COMMENTS), 4, JOB_TRAFFIC_DET.JOB_NUMBER, JOB_TRAFFIC_DET.JOB_COMPONENT_NBR, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.TASK_START_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         JOB_TRAFFIC_DET WITH(NOLOCK) INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' 					  JOB_LOG WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_LOG.JOB_NUMBER '
			if @CP = 1
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_SEC_CLIENT ON JOB_LOG.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = CP_SEC_CLIENT.PRD_CODE'
			END			
			if @OfficeCount > 0
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
			END
			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
			
			IF @SCHED_TASK_INCL_CLOSED IS NULL OR @SCHED_TASK_INCL_CLOSED = 0
			BEGIN
			
				SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL) '
				
			END
			if @CP = 1
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)'
			END
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), JOB_TRAFFIC_DET.REV_DATE_COMMENTS)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '
			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM, @CPID;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
		
		END
		
		UPDATE #DATA 
		SET [LINK] = 'TrafficSchedule_TaskDetail.aspx?pop=0&JobNum=' + CONVERT(VARCHAR, ID1) + '&JobComp=' + CONVERT(VARCHAR, ID2) + '&SeqNum=' + CONVERT(VARCHAR, ID3) + '&Client=' + ISNULL(CL_CODE,'') + '&Division='+ ISNULL(DIV_CODE,'') + '&Product=' + ISNULL(PRD_CODE,''), 
		[GROUP] = 'Project Schedule Task' WHERE #DATA.GROUP_ID = 4;
		
	END

	-- 5, 6
	IF @SEARCH_ESTIMATES = 1
	BEGIN
	
		SET @SQL_PARAM = '@SEARCH_TERM VARCHAR(MAX)';
		
		IF @EST_DESC = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     ESTIMATE_LOG.CL_CODE, ESTIMATE_LOG.DIV_CODE, ESTIMATE_LOG.PRD_CODE, EST_LOG_DESC, 5, ESTIMATE_NUMBER, 1, ESTIMATE_LOG.EST_CREATE_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         ESTIMATE_LOG WITH(NOLOCK) '
			IF @OfficeCount > 0
				BEGIN
					SELECT @SQL = @SQL + ' INNER JOIN PRODUCT ON PRODUCT.CL_CODE = ESTIMATE_LOG.CL_CODE AND PRODUCT.DIV_CODE = ESTIMATE_LOG.DIV_CODE AND PRODUCT.PRD_CODE = ESTIMATE_LOG.PRD_CODE
											INNER JOIN EMP_OFFICE ON PRODUCT.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
				END
			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), ESTIMATE_LOG.EST_LOG_DESC)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
		
		END
		IF @EST_COMMENTS = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     ESTIMATE_LOG.CL_CODE, ESTIMATE_LOG.DIV_CODE, ESTIMATE_LOG.PRD_CODE, EST_LOG_COMMENT, 5, ESTIMATE_NUMBER, 1, ESTIMATE_LOG.EST_CREATE_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         ESTIMATE_LOG WITH(NOLOCK) '
			IF @OfficeCount > 0
				BEGIN
					SELECT @SQL = @SQL + ' INNER JOIN PRODUCT ON PRODUCT.CL_CODE = ESTIMATE_LOG.CL_CODE AND PRODUCT.DIV_CODE = ESTIMATE_LOG.DIV_CODE AND PRODUCT.PRD_CODE = ESTIMATE_LOG.PRD_CODE
											INNER JOIN EMP_OFFICE ON PRODUCT.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
				END
			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), ESTIMATE_LOG.EST_LOG_COMMENT)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
		
		END
		IF @EST_FOOTER_COMMENTS = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     ESTIMATE_LOG.CL_CODE, ESTIMATE_LOG.DIV_CODE, ESTIMATE_LOG.PRD_CODE, EST_FTR_COMMENT, 5, ESTIMATE_NUMBER, 1, ESTIMATE_LOG.EST_CREATE_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         ESTIMATE_LOG WITH(NOLOCK) '
			IF @OfficeCount > 0
				BEGIN
					SELECT @SQL = @SQL + ' INNER JOIN PRODUCT ON PRODUCT.CL_CODE = ESTIMATE_LOG.CL_CODE AND PRODUCT.DIV_CODE = ESTIMATE_LOG.DIV_CODE AND PRODUCT.PRD_CODE = ESTIMATE_LOG.PRD_CODE
											INNER JOIN EMP_OFFICE ON PRODUCT.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
				END
			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), ESTIMATE_LOG.EST_FTR_COMMENT)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
		
		END
		
		IF @EST_COMPONENT_DESC = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     ESTIMATE_LOG.CL_CODE, ESTIMATE_LOG.DIV_CODE, ESTIMATE_LOG.PRD_CODE, ESTIMATE_COMPONENT.EST_COMP_DESC, 5, ESTIMATE_COMPONENT.ESTIMATE_NUMBER, ESTIMATE_COMPONENT.EST_COMPONENT_NBR, ESTIMATE_COMPONENT.MODIFIED_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         ESTIMATE_LOG WITH(NOLOCK) INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' ESTIMATE_COMPONENT WITH(NOLOCK) ON ESTIMATE_LOG.ESTIMATE_NUMBER = ESTIMATE_COMPONENT.ESTIMATE_NUMBER '
			IF @OfficeCount > 0
				BEGIN
					SELECT @SQL = @SQL + ' INNER JOIN PRODUCT ON PRODUCT.CL_CODE = ESTIMATE_LOG.CL_CODE AND PRODUCT.DIV_CODE = ESTIMATE_LOG.DIV_CODE AND PRODUCT.PRD_CODE = ESTIMATE_LOG.PRD_CODE
											INNER JOIN EMP_OFFICE ON PRODUCT.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
				END
			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), ESTIMATE_COMPONENT.EST_COMP_DESC)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
				
		
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
		
		END	
		IF @EST_COMPONENT_COMMENTS = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     ESTIMATE_LOG.CL_CODE, ESTIMATE_LOG.DIV_CODE, ESTIMATE_LOG.PRD_CODE, ESTIMATE_COMPONENT.EST_COMP_COMMENT, 5, ESTIMATE_COMPONENT.ESTIMATE_NUMBER, ESTIMATE_COMPONENT.EST_COMPONENT_NBR, ESTIMATE_COMPONENT.MODIFIED_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         ESTIMATE_LOG WITH(NOLOCK) INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' ESTIMATE_COMPONENT WITH(NOLOCK) ON ESTIMATE_LOG.ESTIMATE_NUMBER = ESTIMATE_COMPONENT.ESTIMATE_NUMBER '
			IF @OfficeCount > 0
				BEGIN
					SELECT @SQL = @SQL + ' INNER JOIN PRODUCT ON PRODUCT.CL_CODE = ESTIMATE_LOG.CL_CODE AND PRODUCT.DIV_CODE = ESTIMATE_LOG.DIV_CODE AND PRODUCT.PRD_CODE = ESTIMATE_LOG.PRD_CODE
											INNER JOIN EMP_OFFICE ON PRODUCT.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
				END
			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), ESTIMATE_COMPONENT.EST_COMP_COMMENT)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
				
		
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
		
		END
			
		UPDATE #DATA 
		SET [LINK] = 'Estimating.aspx?newEst=edit&EstNum=' + CONVERT(VARCHAR, ID1) + '&EstComp=' + CONVERT(VARCHAR, ID2), 
		[GROUP] = 'Estimates' WHERE #DATA.GROUP_ID = 5;
			
		IF @EST_QUOTE_DET_DESC = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, ID3, DATE_FOR_SORT) '

			SET @SQL_BASE = @SQL_BASE + ' SELECT     ESTIMATE_LOG.CL_CODE, ESTIMATE_LOG.DIV_CODE, ESTIMATE_LOG.PRD_CODE, ESTIMATE_QUOTE.EST_QUOTE_DESC, 6, ESTIMATE_QUOTE.ESTIMATE_NUMBER, ESTIMATE_QUOTE.EST_COMPONENT_NBR, ESTIMATE_QUOTE.EST_QUOTE_NBR, ESTIMATE_COMPONENT.MODIFIED_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         ESTIMATE_COMPONENT WITH(NOLOCK) INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' ESTIMATE_LOG WITH(NOLOCK) ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_LOG.ESTIMATE_NUMBER INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' ESTIMATE_QUOTE WITH(NOLOCK) ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_QUOTE.ESTIMATE_NUMBER AND '
			SET @SQL_BASE = @SQL_BASE + ' ESTIMATE_COMPONENT.EST_COMPONENT_NBR = ESTIMATE_QUOTE.EST_COMPONENT_NBR '
			IF @OfficeCount > 0
				BEGIN
					SELECT @SQL = @SQL + ' INNER JOIN PRODUCT ON PRODUCT.CL_CODE = ESTIMATE_LOG.CL_CODE AND PRODUCT.DIV_CODE = ESTIMATE_LOG.DIV_CODE AND PRODUCT.PRD_CODE = ESTIMATE_LOG.PRD_CODE
											INNER JOIN EMP_OFFICE ON PRODUCT.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
				END

			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), ESTIMATE_QUOTE.EST_QUOTE_DESC)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
				
		
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
		
		END
		IF @EST_QUOTE_DET_COMMENTS = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, ID3, DATE_FOR_SORT) '

			SET @SQL_BASE = @SQL_BASE + ' SELECT     ESTIMATE_LOG.CL_CODE, ESTIMATE_LOG.DIV_CODE, ESTIMATE_LOG.PRD_CODE, ESTIMATE_QUOTE.EST_QTE_COMMENT, 6, ESTIMATE_QUOTE.ESTIMATE_NUMBER, ESTIMATE_QUOTE.EST_COMPONENT_NBR, ESTIMATE_QUOTE.EST_QUOTE_NBR, ESTIMATE_COMPONENT.MODIFIED_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         ESTIMATE_COMPONENT WITH(NOLOCK) INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' ESTIMATE_LOG WITH(NOLOCK) ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_LOG.ESTIMATE_NUMBER INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' ESTIMATE_QUOTE WITH(NOLOCK) ON ESTIMATE_COMPONENT.ESTIMATE_NUMBER = ESTIMATE_QUOTE.ESTIMATE_NUMBER AND '
			SET @SQL_BASE = @SQL_BASE + ' ESTIMATE_COMPONENT.EST_COMPONENT_NBR = ESTIMATE_QUOTE.EST_COMPONENT_NBR '
			IF @OfficeCount > 0
				BEGIN
					SELECT @SQL = @SQL + ' INNER JOIN PRODUCT ON PRODUCT.CL_CODE = ESTIMATE_LOG.CL_CODE AND PRODUCT.DIV_CODE = ESTIMATE_LOG.DIV_CODE AND PRODUCT.PRD_CODE = ESTIMATE_LOG.PRD_CODE
											INNER JOIN EMP_OFFICE ON PRODUCT.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
				END

			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), ESTIMATE_QUOTE.EST_QTE_COMMENT)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
				
		
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
		
		END	
		
		UPDATE #DATA 
		SET [LINK] = 'Estimating_Quote.aspx?RevNum=0&j=&jc=&EstNum=' + CONVERT(VARCHAR, ID1) + '&EstComp=' + CONVERT(VARCHAR, ID2) + '&QuoteNum=' + CONVERT(VARCHAR, ID3), 
		[GROUP] = 'Estimates' WHERE #DATA.GROUP_ID = 6;
		
	END	

	-- 7
	IF @SEARCH_CAMPAIGNS = 1
	BEGIN
		
		SET @SQL_PARAM = '@SEARCH_TERM VARCHAR(MAX)';

		IF @CAMP_COMMENTS = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID6, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     CAMPAIGN.CL_CODE, CAMPAIGN.DIV_CODE, CAMPAIGN.PRD_CODE, CAMPAIGN.CMP_COMMENTS, 7, CAMPAIGN.CMP_IDENTIFIER, CAMPAIGN.CMP_CODE, CAMPAIGN.CMP_BEG_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         CAMPAIGN WITH(NOLOCK) '

			If @OfficeCount > 0
			BEGIN

				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN PRODUCT ON CAMPAIGN.CL_CODE = PRODUCT.CL_CODE 
								AND ( CAMPAIGN.DIV_CODE = PRODUCT.DIV_CODE OR CAMPAIGN.DIV_CODE IS NULL )
								AND ( CAMPAIGN.PRD_CODE = PRODUCT.PRD_CODE OR CAMPAIGN.PRD_CODE IS NULL )
								INNER JOIN EMP_OFFICE ON PRODUCT.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE
								AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''' '

			END

			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), CAMPAIGN.CMP_COMMENTS)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
			
		END
		
	END	

	-- 8
	IF @SEARCH_PURCHASE_ORDERS = 1
	BEGIN
		
		SET @SQL_PARAM = '@SEARCH_TERM VARCHAR(MAX)';

		IF @PO_DESCRIPTION = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     NULL, NULL, NULL, PO_DESCRIPTION, 8, PURCHASE_ORDER.PO_NUMBER, PO_CREATE_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         PURCHASE_ORDER WITH(NOLOCK) '

			If @OfficeCount > 0
			BEGIN

				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN PURCHASE_ORDER_DET ON PURCHASE_ORDER.PO_NUMBER = PURCHASE_ORDER_DET.PO_NUMBER
											 INNER JOIN JOB_LOG as j on j.JOB_NUMBER = PURCHASE_ORDER_DET.JOB_NUMBER
											 INNER JOIN EMP_OFFICE as eo ON eo.OFFICE_CODE = j.OFFICE_CODE AND eo.EMP_CODE = ''' + @EMP_CDE + ''' '

			END


			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), PURCHASE_ORDER.PO_DESCRIPTION)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
			
		END
		IF @PO_MAIN_INSTRUCT = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     NULL, NULL, NULL, PO_MAIN_INSTRUCT, 8, PURCHASE_ORDER.PO_NUMBER, PO_CREATE_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         PURCHASE_ORDER WITH(NOLOCK) '

			If @OfficeCount > 0
			BEGIN

				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN PURCHASE_ORDER_DET ON PURCHASE_ORDER.PO_NUMBER = PURCHASE_ORDER_DET.PO_NUMBER
											 INNER JOIN JOB_LOG as j on j.JOB_NUMBER = PURCHASE_ORDER_DET.JOB_NUMBER
											 INNER JOIN EMP_OFFICE as eo ON eo.OFFICE_CODE = j.OFFICE_CODE AND eo.EMP_CODE = ''' + @EMP_CDE + ''' '

			END

			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), PURCHASE_ORDER.PO_MAIN_INSTRUCT)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
			
		END
		IF @PO_DEL_INSTRUCT = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     NULL, NULL, NULL, DEL_INSTRUCT, 8, PURCHASE_ORDER.PO_NUMBER, PO_CREATE_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         PURCHASE_ORDER WITH(NOLOCK) '

			If @OfficeCount > 0
			BEGIN

				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN PURCHASE_ORDER_DET ON PURCHASE_ORDER.PO_NUMBER = PURCHASE_ORDER_DET.PO_NUMBER
											 INNER JOIN JOB_LOG as j on j.JOB_NUMBER = PURCHASE_ORDER_DET.JOB_NUMBER
											 INNER JOIN EMP_OFFICE as eo ON eo.OFFICE_CODE = j.OFFICE_CODE AND eo.EMP_CODE = ''' + @EMP_CDE + ''' '

			END

			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), PURCHASE_ORDER.DEL_INSTRUCT)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
			
		END
		IF @PO_DETAIL_DESC = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     NULL, NULL, NULL, PURCHASE_ORDER_DET.DET_DESC, 8, PURCHASE_ORDER_DET.PO_NUMBER, PURCHASE_ORDER_DET.LINE_NUMBER, PURCHASE_ORDER.PO_CREATE_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         PURCHASE_ORDER WITH (NOLOCK) INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' PURCHASE_ORDER_DET WITH (NOLOCK) ON PURCHASE_ORDER.PO_NUMBER = PURCHASE_ORDER_DET.PO_NUMBER '

			If @OfficeCount > 0
			BEGIN

				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN JOB_LOG as j on j.JOB_NUMBER = PURCHASE_ORDER_DET.JOB_NUMBER
											 INNER JOIN EMP_OFFICE as eo ON eo.OFFICE_CODE = j.OFFICE_CODE AND eo.EMP_CODE = ''' + @EMP_CDE + ''' '

			END

			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), PURCHASE_ORDER_DET.DET_DESC)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
			
		END
		IF @PO_DETAIL_LINE_DESC = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     NULL, NULL, NULL, PURCHASE_ORDER_DET.LINE_DESC, 8, PURCHASE_ORDER_DET.PO_NUMBER, PURCHASE_ORDER_DET.LINE_NUMBER, PURCHASE_ORDER.PO_CREATE_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         PURCHASE_ORDER WITH (NOLOCK) INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' PURCHASE_ORDER_DET WITH (NOLOCK) ON PURCHASE_ORDER.PO_NUMBER = PURCHASE_ORDER_DET.PO_NUMBER '

			If @OfficeCount > 0
			BEGIN

				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN JOB_LOG as j on j.JOB_NUMBER = PURCHASE_ORDER_DET.JOB_NUMBER
											 INNER JOIN EMP_OFFICE as eo ON eo.OFFICE_CODE = j.OFFICE_CODE AND eo.EMP_CODE = ''' + @EMP_CDE + ''' '

			END

			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), PURCHASE_ORDER_DET.LINE_DESC)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
			
		END
		IF @PO_DETAIL_DET_INSTRUCT = 1
		BEGIN
		
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     NULL, NULL, NULL, PURCHASE_ORDER_DET.DET_INSTRUCT, 8, PURCHASE_ORDER_DET.PO_NUMBER, PURCHASE_ORDER_DET.LINE_NUMBER, PURCHASE_ORDER.PO_CREATE_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         PURCHASE_ORDER WITH (NOLOCK) INNER JOIN '
			SET @SQL_BASE = @SQL_BASE + ' PURCHASE_ORDER_DET WITH (NOLOCK) ON PURCHASE_ORDER.PO_NUMBER = PURCHASE_ORDER_DET.PO_NUMBER '

			If @OfficeCount > 0
			BEGIN

				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN JOB_LOG as j on j.JOB_NUMBER = PURCHASE_ORDER_DET.JOB_NUMBER
											 INNER JOIN EMP_OFFICE as eo ON eo.OFFICE_CODE = j.OFFICE_CODE AND eo.EMP_CODE = ''' + @EMP_CDE + ''' '

			END

			SET @SQL_BASE = @SQL_BASE + ' WHERE    1 = 1 '
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), PURCHASE_ORDER_DET.DET_INSTRUCT)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '

			SET @SQL = @SQL_BASE + @SQL_WHERE + @SQL_ITEM + @SQL_RECOMPILE;
			--PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';
			
		END
		
		--purchaseorder.aspx?po_number=uyy&pagemode=edit
		UPDATE #DATA 
		SET [LINK] = 'purchaseorder.aspx?pagemode=edit&po_number=' + CONVERT(VARCHAR, ID1), 
		[GROUP] = 'Project Schedule' WHERE #DATA.GROUP_ID = 8;
		
	END	

	-- 9
	IF @JOB_REQUESTS = 1
	BEGIN
			SET @SQL_PARAM = '@SEARCH_TERM VARCHAR(MAX), @CPID INT';
			SET @SQL_BASE = @SQL_BASE + ' INSERT INTO #DATA (CL_CODE, DIV_CODE, PRD_CODE, MATCHING_TEXT, GROUP_ID, ID1, ID2, ID6, DATE_FOR_SORT) '
			SET @SQL_BASE = @SQL_BASE + ' SELECT     JOB_VER_HDR.CL_CODE, JOB_VER_HDR.DIV_CODE, JOB_VER_HDR.PRD_CODE, JOB_VER_DESC, 9, JOB_VER_HDR_ID, CREATED_BY_CP, CREATED_BY, CREATE_DATE '
			SET @SQL_BASE = @SQL_BASE + ' FROM         JOB_VER_HDR WITH(NOLOCK) '
			if @CP = 1
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN CP_SEC_CLIENT ON JOB_VER_HDR.CL_CODE = CP_SEC_CLIENT.CL_CODE AND JOB_VER_HDR.DIV_CODE = CP_SEC_CLIENT.DIV_CODE AND JOB_VER_HDR.PRD_CODE = CP_SEC_CLIENT.PRD_CODE'
			END

			If @OfficeCount > 0
			BEGIN

				SET @SQL_BASE = @SQL_BASE + ' INNER JOIN PRODUCT as p on p.CL_CODE = JOB_VER_HDR.CL_CODE AND p.DIV_CODE = JOB_VER_HDR.DIV_CODE AND p.PRD_CODE = JOB_VER_HDR.PRD_CODE
											 INNER JOIN EMP_OFFICE as eo ON eo.OFFICE_CODE = p.OFFICE_CODE AND eo.EMP_CODE = ''' + @EMP_CDE + ''' '

			END

			SET @SQL_BASE = @SQL_BASE + ' WHERE 1 = 1 AND JOB_NUMBER = 0'
		
			SET @SQL_ITEM = @SQL_ITEM + ' AND ((' + @CASE_PREFIX + 'CONVERT(VARCHAR(MAX), JOB_VER_DESC)' + @CASE_SUFFIX + @OPERAND + @SQL_SEARCH_TERM + ')) '
			if @CP = 1
			BEGIN
				SET @SQL_BASE = @SQL_BASE + ' AND (CP_SEC_CLIENT.CDP_CONTACT_ID = @CPID)'
			END

			SET @SQL = @SQL_BASE + @SQL_ITEM;
			PRINT @SQL;
			EXECUTE sp_executesql @SQL, @SQL_PARAM, @SEARCH_TERM, @CPID;
			
			--RESET
			SET @SQL = '';
			SET @SQL_BASE = '';
			SET @SQL_WHERE = '';
			SET @SQL_ITEM = '';

			--"jobVerTmplt.aspx?JobNum=" & Me.JobNum & "&JobCompNum=" & Me.JobCompNum & "&JobVerHdrID=" & e.Item.DataItem("JOB_VER_HDR_ID").ToString() & "&JobVerCPID=" & e.Item.DataItem("CREATED_BY_CP").ToString()))
			UPDATE #DATA 
			SET [LINK] = 'jobVerTmplt.aspx?mode=requesttoform&JobVerHdrID=' + CONVERT(VARCHAR, ID1) + '&JobVerCPID=' + CONVERT(VARCHAR, ID2), 
			[GROUP] = 'Job Request' WHERE #DATA.GROUP_ID = 9;

	END

	-- remove dups
	DELETE FROM #DATA
	WHERE 
		ID NOT IN (SELECT MAX(ID) FROM #DATA GROUP BY LINK);

    DELETE FROM #DATA WHERE MATCHING_TEXT IS NULL;

	DECLARE @GROUP_RECORD_COUNTER INT;

	----add count for grouping
	SET @GROUP_RECORD_COUNTER = 0;

	SELECT @GROUP_RECORD_COUNTER = COUNT([ID]) FROM #DATA WHERE GROUP_ID = 1;
	UPDATE #DATA SET GROUP_COUNT = @GROUP_RECORD_COUNTER, [GROUP] = CAST(@GROUP_RECORD_COUNTER AS VARCHAR) + ' Job Jackets' WHERE GROUP_ID = 1;
	SET @GROUP_RECORD_COUNTER = 0;

	SELECT @GROUP_RECORD_COUNTER = COUNT([ID]) FROM #DATA WHERE GROUP_ID = 2;
	UPDATE #DATA SET GROUP_COUNT = @GROUP_RECORD_COUNTER, [GROUP] = CAST(@GROUP_RECORD_COUNTER AS VARCHAR) + ' Alerts' WHERE GROUP_ID = 2;
	SET @GROUP_RECORD_COUNTER = 0;

	SELECT @GROUP_RECORD_COUNTER = COUNT([ID]) FROM #DATA WHERE GROUP_ID = 3;
	UPDATE #DATA SET GROUP_COUNT = @GROUP_RECORD_COUNTER, [GROUP] = CAST(@GROUP_RECORD_COUNTER AS VARCHAR) + ' Project Schedules'  WHERE GROUP_ID = 3;
	SET @GROUP_RECORD_COUNTER = 0;

	SELECT @GROUP_RECORD_COUNTER = COUNT([ID]) FROM #DATA WHERE GROUP_ID = 4;
	UPDATE #DATA SET GROUP_COUNT = @GROUP_RECORD_COUNTER, [GROUP] = CAST(@GROUP_RECORD_COUNTER AS VARCHAR) + ' Tasks'  WHERE GROUP_ID = 4;
	SET @GROUP_RECORD_COUNTER = 0;

	SELECT @GROUP_RECORD_COUNTER = COUNT([ID]) FROM #DATA WHERE GROUP_ID IN (5, 6);
	UPDATE #DATA SET GROUP_COUNT = @GROUP_RECORD_COUNTER, [GROUP] = CAST(@GROUP_RECORD_COUNTER AS VARCHAR) + ' Estimates' WHERE GROUP_ID IN (5, 6);
	SET @GROUP_RECORD_COUNTER = 0;

	SELECT @GROUP_RECORD_COUNTER = COUNT([ID]) FROM #DATA WHERE GROUP_ID = 7;
	UPDATE #DATA SET GROUP_COUNT = @GROUP_RECORD_COUNTER, [GROUP] = CAST(@GROUP_RECORD_COUNTER AS VARCHAR) + ' Campaigns' WHERE GROUP_ID = 7;
	SET @GROUP_RECORD_COUNTER = 0;

	SELECT @GROUP_RECORD_COUNTER = COUNT([ID]) FROM #DATA WHERE GROUP_ID = 8;
	UPDATE #DATA SET GROUP_COUNT = @GROUP_RECORD_COUNTER, [GROUP] = CAST(@GROUP_RECORD_COUNTER AS VARCHAR) + ' Purchase Orders' WHERE GROUP_ID = 8;
	SET @GROUP_RECORD_COUNTER = 0;

	SELECT @GROUP_RECORD_COUNTER = COUNT([ID]) FROM #DATA WHERE GROUP_ID = 9;
	UPDATE #DATA SET GROUP_COUNT = @GROUP_RECORD_COUNTER, [GROUP] = CAST(@GROUP_RECORD_COUNTER AS VARCHAR) + ' Job Requests' WHERE GROUP_ID = 9;
	SET @GROUP_RECORD_COUNTER = 0;

	SELECT 
		ID, 
		#DATA.CL_CODE AS ClientCode, 
		#DATA.DIV_CODE AS DivisionCode, 
		#DATA.PRD_CODE AS ProductCode,
		GROUP_ID AS GroupID, 
		#DATA.[GROUP] AS [Group], 
		MATCHING_TEXT AS MatchingText, 
		LINK AS Link, 
		ID1, ID2,ID3,ID4,ID5,ID6,ID7,ID8,ID9,ID10, 
		GROUP_COUNT AS GroupCount, 
		ISNULL(DATE_FOR_SORT, GETDATE()) AS DateForSort
	FROM 
		#DATA 
	ORDER BY 
		GROUP_COUNT DESC, 
		DATE_FOR_SORT DESC, 
		ID1, 
		ID2 DESC;

	DROP TABLE #DATA;

/*=========== QUERY ===========*/