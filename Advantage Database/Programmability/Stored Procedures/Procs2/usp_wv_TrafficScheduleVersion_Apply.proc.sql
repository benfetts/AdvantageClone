if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_TrafficScheduleVersion_Apply]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_TrafficScheduleVersion_Apply]
GO

CREATE PROCEDURE [dbo].[usp_wv_TrafficScheduleVersion_Apply] /*WITH ENCRYPTION*/
@USER_CODE  VARCHAR(100) = '',
@VERSION_ID INT,
@VER_APPLIED_COMMENT VARCHAR(MAX),
@JOB_NUMBER INT,
@JOB_COMPONENT_NBR SMALLINT
AS
/*=========== QUERY ===========*/
	DECLARE
		@RUN_DATE SMALLDATETIME

	SET @RUN_DATE = GETDATE();

	-- 0. Save existing schedule as version first?

	-- 1. Check make sure version exists.
	IF EXISTS (SELECT 1 FROM JOB_TRAFFIC_VER WHERE ID = @VERSION_ID)
	BEGIN

		DECLARE
			@JOB_COMPONENT_START_DATE SMALLDATETIME,
			@JOB_COMPONENT_JOB_FIRST_USE_DATE SMALLDATETIME

		SELECT 
			@JOB_COMPONENT_START_DATE = JOB_COMPONENT_START_DATE,
			@JOB_COMPONENT_JOB_FIRST_USE_DATE = JOB_COMPONENT_JOB_FIRST_USE_DATE
		FROM 
			JOB_TRAFFIC_VER 
		WHERE 
			ID = @VERSION_ID;

		-- 2. Delete existing schedule.
		DELETE FROM JOB_TRAFFIC_DET_PREDS WITH(ROWLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;
		DELETE FROM JOB_TRAFFIC_DET_DOCS WITH(ROWLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;
		DELETE FROM JOB_TRAFFIC_DET_EMPS WITH(ROWLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;
		DELETE FROM JOB_TRAFFIC_DET_CNTS WITH(ROWLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;
		DELETE FROM JOB_TRAFFIC_DET WITH(ROWLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;
		DELETE FROM JOB_TRAFFIC_PREDS WITH(ROWLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;
		DELETE FROM JOB_TRAFFIC WITH(ROWLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

		-- Get version data back into real tables:
		-- 3. Header.
		BEGIN

			INSERT INTO JOB_TRAFFIC WITH(ROWLOCK) (
				JOB_NUMBER, 
				JOB_COMPONENT_NBR, 
				TRF_CODE, 
				TRF_PRESET_CODE, 
				TRF_COMMENTS, 
				ASSIGN_1, 
				ASSIGN_2, 
				ASSIGN_3, 
				ASSIGN_4, 
				ASSIGN_5, 
				COMPLETED_DATE, 
				DATE_DELIVERED, 
				DATE_SHIPPED, 
				RECEIVED_BY, 
				REFERENCE, 
				LOCK_USER, 
				LOCKED_USER,
				PERCENT_COMPLETE, 
				SCHEDULE_CALC
			)
			SELECT        
				@JOB_NUMBER, 
				@JOB_COMPONENT_NBR, 
				TRF_CODE, 
				TRF_PRESET_CODE, 
				TRF_COMMENTS, 
				ASSIGN_1, 
				ASSIGN_2, 
				ASSIGN_3, 
				ASSIGN_4, 
				ASSIGN_5, 
				COMPLETED_DATE, 
				DATE_DELIVERED, 
				DATE_SHIPPED, 
				RECEIVED_BY, 
				REFERENCE, 
				LOCK_USER, 
				LOCKED_USER,
				PERCENT_COMPLETE, 
				SCHEDULE_CALC
			FROM 
				JOB_TRAFFIC_VER AS JTV WITH (NOLOCK)
			WHERE        
				(JTV.ID = @VERSION_ID);

		END

		-- 3b.  Update component with revision info
		BEGIN

			UPDATE JOB_COMPONENT SET [START_DATE] = @JOB_COMPONENT_START_DATE, JOB_FIRST_USE_DATE = @JOB_COMPONENT_JOB_FIRST_USE_DATE WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

		END

		-- 4. Header predecessors.
		BEGIN
			INSERT INTO JOB_TRAFFIC_PREDS WITH(ROWLOCK) (
				JOB_NUMBER,
				JOB_COMPONENT_NBR,
				JOB_PRED,
				JOB_COMP_PRED
			)
			SELECT
				@JOB_NUMBER,
				@JOB_COMPONENT_NBR,
				JOB_PRED,
				JOB_COMP_PRED
			FROM
				JOB_TRAFFIC_VER_PREDS AS JTVP WITH(NOLOCK)
			WHERE
				JTVP.VERSION_ID = @VERSION_ID;
		END

		-- 5. Loop through each detail in the version
		BEGIN
			DECLARE
				@CURRENT_DETAIL_ID INT,
				@CURRENT_SEQ_NBR SMALLINT
			-- BEGIN DETAIL CURSOR (BY SEQ_NBR)
			DECLARE MY_ROWS CURSOR  
			FOR

				SELECT ID
				FROM   JOB_TRAFFIC_VER_DET WITH(NOLOCK)
				WHERE VERSION_ID = @VERSION_ID;

			OPEN MY_ROWS;
		
			FETCH NEXT FROM MY_ROWS INTO @CURRENT_DETAIL_ID;

			WHILE @@FETCH_STATUS = 0
			BEGIN

				SELECT @CURRENT_SEQ_NBR = SEQ_NBR 
				FROM JOB_TRAFFIC_VER_DET WITH(NOLOCK)
				WHERE ID = @CURRENT_DETAIL_ID;

				--DO STUFF

				--5a. Main Detail record
				INSERT INTO JOB_TRAFFIC_DET (
					JOB_NUMBER, 
					JOB_COMPONENT_NBR, 
					SEQ_NBR, 
					FNC_CODE, 
					FNC_EST, 
					TASK_DESCRIPTION, 
					TASK_START_DATE, 
					JOB_DUE_DATE, 
					JOB_REVISED_DATE, 
					DUE_DATE_LOCK, 
					JOB_COMPLETED_DATE, 
					JOB_ORDER, 
					JOB_DAYS, 
					PARENT_TASK, 
					FNC_COMMENTS, 
					DUE_DATE_COMMENTS, 
					REV_DATE_COMMENTS, 
					JOB_HRS, 
					DUE_TIME, 
					REVISED_DUE_TIME, 
					TASK_STATUS, 
					MILESTONE, 
					TRAFFIC_PHASE_ID, 
					TEMP_SEQ, 
					TRF_ROLE,
					PARENT_TASK_SEQ,
					GRID_ORDER)
				SELECT        
					@JOB_NUMBER, 
					@JOB_COMPONENT_NBR, 
					@CURRENT_SEQ_NBR, 
					FNC_CODE, 
					FNC_EST, 
					TASK_DESCRIPTION, 
					TASK_START_DATE, 
					JOB_DUE_DATE, 
					JOB_REVISED_DATE, 
					DUE_DATE_LOCK, 
					JOB_COMPLETED_DATE, 
					JOB_ORDER, 
					JOB_DAYS, 
					PARENT_TASK, 
					FNC_COMMENTS, 
					DUE_DATE_COMMENTS, 
					REV_DATE_COMMENTS, 
					JOB_HRS, 
					DUE_TIME, 
					REVISED_DUE_TIME, 
					TASK_STATUS, 
					MILESTONE, 
					TRAFFIC_PHASE_ID, 
					TEMP_SEQ, 
					TRF_ROLE,
					PARENT_TASK_SEQ,
					GRID_ORDER
				FROM            
					JOB_TRAFFIC_VER_DET AS JTDV WITH(NOLOCK)
				WHERE
					JTDV.ID = @CURRENT_DETAIL_ID;

				--5b. Contacts
				INSERT INTO JOB_TRAFFIC_DET_CNTS WITH(ROWLOCK) (
					JOB_NUMBER,
					JOB_COMPONENT_NBR,
					SEQ_NBR,
					CDP_CONTACT_ID
				)
				SELECT
					@JOB_NUMBER,
					@JOB_COMPONENT_NBR,
					@CURRENT_SEQ_NBR,
					CDP_CONTACT_ID
				FROM
					JOB_TRAFFIC_VER_DET_CNTS WITH(NOLOCK)
				WHERE
					DETAIL_ID = @CURRENT_DETAIL_ID;

				--5c. Employees
				INSERT INTO JOB_TRAFFIC_DET_EMPS WITH(ROWLOCK) (
					JOB_NUMBER,
					JOB_COMPONENT_NBR,
					SEQ_NBR,
					EMP_CODE,
					HOURS_ALLOWED,
					TEMP_COMP_DATE,
					COMPLETED_COMMENTS,
					PERCENT_COMPLETE
				)
				SELECT
					@JOB_NUMBER,
					@JOB_COMPONENT_NBR,
					@CURRENT_SEQ_NBR,
					EMP_CODE,
					HOURS_ALLOWED,
					TEMP_COMP_DATE,
					COMPLETED_COMMENTS,
					PERCENT_COMPLETE
				FROM
					JOB_TRAFFIC_VER_DET_EMPS WITH(NOLOCK)
				WHERE
					DETAIL_ID = @CURRENT_DETAIL_ID;

				INSERT INTO JOB_TRAFFIC_DET_DOCS WITH(ROWLOCK) (
					DOCUMENT_ID,
					JOB_NUMBER,
					JOB_COMPONENT_NBR, 
					SEQ_NBR
				)
				SELECT
					DOCUMENT_ID,
					@JOB_NUMBER,
					@JOB_COMPONENT_NBR,
					@CURRENT_SEQ_NBR
				FROM
					JOB_TRAFFIC_VER_DET_DOCS WITH(NOLOCK)
				WHERE
					DETAIL_ID = @CURRENT_DETAIL_ID;
				

				--MOVE TO NEXT
				FETCH NEXT FROM MY_ROWS INTO @CURRENT_DETAIL_ID;

			END

			CLOSE MY_ROWS;
			DEALLOCATE MY_ROWS;
			-- END DETAIL CURSOR
		END

		-- 6. BEGIN MY_DETAIL_PREDS CURSOR (BY SEQ_NBR)(PREDECESSORS HAS TO BE DONE AFTER ALL DETAIL RECS CREATED)
		BEGIN
			DECLARE MY_DETAIL_PREDS CURSOR  
			FOR

				SELECT ID
				FROM   JOB_TRAFFIC_VER_DET WITH(NOLOCK)
				WHERE VERSION_ID = @VERSION_ID;

			OPEN MY_DETAIL_PREDS;
		
			FETCH NEXT FROM MY_DETAIL_PREDS INTO @CURRENT_DETAIL_ID;

			WHILE @@FETCH_STATUS = 0
			BEGIN

				SELECT @CURRENT_SEQ_NBR = SEQ_NBR 
				FROM JOB_TRAFFIC_VER_DET WITH(NOLOCK)
				WHERE ID = @CURRENT_DETAIL_ID;

				--DO STUFF
				--5d. Predecessors
				INSERT INTO JOB_TRAFFIC_DET_PREDS WITH(ROWLOCK) (
					JOB_NUMBER,
					JOB_COMPONENT_NBR,
					SEQ_NBR,
					PREDECESSOR_SEQ_NBR
				)
				SELECT
					@JOB_NUMBER,
					@JOB_COMPONENT_NBR,
					@CURRENT_SEQ_NBR,
					PREDECESSOR_SEQ_NBR
				FROM
					JOB_TRAFFIC_VER_DET_PREDS WITH(NOLOCK)
				WHERE
					DETAIL_ID = @CURRENT_DETAIL_ID;

				--MOVE TO NEXT
				FETCH NEXT FROM MY_DETAIL_PREDS INTO @CURRENT_DETAIL_ID;

			END

			CLOSE MY_DETAIL_PREDS;
			DEALLOCATE MY_DETAIL_PREDS;
		-- END MY_DETAIL_PREDS CURSOR
		END

		-- 7. Update log
		BEGIN
			INSERT INTO JOB_TRAFFIC_VER_LOG WITH(ROWLOCK) 
				(JOB_NUMBER, JOB_COMPONENT_NBR, VERSION_ID, LAST_APPLIED_BY_USER_CODE, LAST_APPLIED_DATE, LAST_APPLIED_COMMENT)
			VALUES 
				(@JOB_NUMBER, @JOB_COMPONENT_NBR, @VERSION_ID, @USER_CODE, @RUN_DATE, @VER_APPLIED_COMMENT);
		END

		-- 8. Mark current
		BEGIN
			UPDATE JOB_TRAFFIC_VER SET VER_IS_CURRENT = 0 WHERE JOB_TRAFFIC_VER.JOB_NUMBER = @JOB_NUMBER AND JOB_TRAFFIC_VER.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;
			UPDATE JOB_TRAFFIC_VER SET VER_IS_CURRENT = 1 WHERE JOB_TRAFFIC_VER.ID = @VERSION_ID;
			UPDATE JOB_TRAFFIC SET JOB_TRAFFIC_VER_ID = @VERSION_ID, VERSION_LAST_APPLIED = GETDATE() WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;
		END

	END

/*=========== QUERY ===========*/
GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO