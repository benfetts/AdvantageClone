if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_TrafficScheduleVersion_Insert]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_TrafficScheduleVersion_Insert]
GO

CREATE PROCEDURE [dbo].[usp_wv_TrafficScheduleVersion_Insert] /*WITH ENCRYPTION*/
@USER_CODE  VARCHAR(100) = '',
@VER_SEQ_NBR SMALLINT,
@VER_NAME VARCHAR(256),
@VER_COMMENT VARCHAR(MAX),
@VER_CREATED_COMMENT VARCHAR(MAX),
@JOB_NUMBER INT,
@JOB_COMPONENT_NBR SMALLINT
AS
/*=========== QUERY ===========*/
	DECLARE
		@NEW_VERSION_ID INT,
		@RUN_DATE SMALLDATETIME,
		@MAX_SEQ_NBR AS SMALLINT,
		@JOB_COMPONENT_START_DATE SMALLDATETIME,
		@JOB_COMPONENT_JOB_FIRST_USE_DATE SMALLDATETIME


	SET @NEW_VERSION_ID = 0;
	SET @RUN_DATE = GETDATE();

	SELECT 
		@MAX_SEQ_NBR = MAX(VER_SEQ_NBR) 
	FROM 
		JOB_TRAFFIC_VER WITH(NOLOCK) 
	WHERE 
		JOB_NUMBER = @JOB_NUMBER 
		AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

	IF @MAX_SEQ_NBR IS NULL OR @MAX_SEQ_NBR = 0
	BEGIN
		SET @MAX_SEQ_NBR = 1;
	END
	ELSE
	BEGIN
		SET @MAX_SEQ_NBR = @MAX_SEQ_NBR + 1;
	END

	SET @VER_SEQ_NBR = @MAX_SEQ_NBR;

	SELECT 
		@JOB_COMPONENT_START_DATE = [START_DATE],
		@JOB_COMPONENT_JOB_FIRST_USE_DATE = JOB_FIRST_USE_DATE
	FROM
		JOB_COMPONENT WITH(NOLOCK)
	WHERE 
		JOB_NUMBER = @JOB_NUMBER 
		AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;


--	1. Get current schedule and save to version table
	INSERT INTO JOB_TRAFFIC_VER WITH(ROWLOCK) (
		JOB_NUMBER, 
		JOB_COMPONENT_NBR, 
		TRF_CODE, 
		TRF_PRESET_CODE, 
		TRF_COMMENTS, 
		ASSIGN_1, 
		ASSIGN_2, 
		ASSIGN_3, 
		ASSIGN_4, 
		ASSIGN_5, 
		COMPLETED_DATE, 
		DATE_DELIVERED, 
		DATE_SHIPPED, 
		RECEIVED_BY, 
		REFERENCE, 
		LOCK_USER, 
		LOCKED_USER,
		PERCENT_COMPLETE, 
		SCHEDULE_CALC, 
		VER_SEQ_NBR,
		VER_NAME,
		VER_COMMENT,
		VER_ACTIVE_FLAG,
		VER_IS_CURRENT,
		VER_CREATED_BY_USER_CODE,
		VER_CREATED,
		VER_CREATED_COMMENT,
		JOB_COMPONENT_START_DATE,
		JOB_COMPONENT_JOB_FIRST_USE_DATE
	)
	SELECT        
		JOB_NUMBER, 
		JOB_COMPONENT_NBR, 
		TRF_CODE, 
		TRF_PRESET_CODE, 
		TRF_COMMENTS, 
		ASSIGN_1, 
		ASSIGN_2, 
		ASSIGN_3, 
		ASSIGN_4, 
		ASSIGN_5, 
		COMPLETED_DATE, 
		DATE_DELIVERED, 
		DATE_SHIPPED, 
		RECEIVED_BY, 
		REFERENCE, 
		LOCK_USER, 
		LOCKED_USER,
		PERCENT_COMPLETE, 
		SCHEDULE_CALC, 
		@VER_SEQ_NBR,
		@VER_NAME,
		@VER_COMMENT,
		1,
		NULL,
		@USER_CODE,
		@RUN_DATE,
		@VER_CREATED_COMMENT,
		@JOB_COMPONENT_START_DATE,
		@JOB_COMPONENT_JOB_FIRST_USE_DATE
	FROM 
		JOB_TRAFFIC AS JT WITH (NOLOCK)
	WHERE        
		(JT.JOB_NUMBER = @JOB_NUMBER) 
		AND (JT.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR);

	SELECT @NEW_VERSION_ID = SCOPE_IDENTITY();

	IF NOT @NEW_VERSION_ID IS NULL AND @NEW_VERSION_ID > 0
	BEGIN

		-- 2. Insert Header Predecessors
		INSERT INTO JOB_TRAFFIC_VER_PREDS WITH(ROWLOCK) (JOB_PRED, JOB_COMP_PRED, VERSION_ID)
		SELECT JOB_PRED, JOB_COMP_PRED, @NEW_VERSION_ID
		FROM JOB_TRAFFIC_PREDS WITH(NOLOCK)
		WHERE
			JOB_TRAFFIC_PREDS.JOB_NUMBER = @JOB_NUMBER
			AND JOB_TRAFFIC_PREDS.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;


		--	3. Get detail records
		DECLARE 
			@CURR_NEW_DETAIL_ID INT, 
			@CURR_SEQ_NBR SMALLINT

		DECLARE @TASK_CURSOR CURSOR

		SET @TASK_CURSOR = CURSOR FOR
			SELECT 
				SEQ_NBR
			FROM 
				JOB_TRAFFIC_DET WITH (NOLOCK)
			WHERE        
				(JOB_NUMBER = @JOB_NUMBER) 
				AND (JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR);

		OPEN @TASK_CURSOR;

		FETCH NEXT
		FROM @TASK_CURSOR INTO @CURR_SEQ_NBR;

		WHILE @@FETCH_STATUS = 0
		BEGIN

			SET @CURR_NEW_DETAIL_ID = 0;

			--PRINT @CURR_SEQ_NBR;
			-- 4. Insert each task and grab new task id
			INSERT INTO JOB_TRAFFIC_VER_DET (
				JOB_NUMBER, 
				JOB_COMPONENT_NBR, 
				SEQ_NBR, 
				FNC_CODE, 
				FNC_EST, 
				TASK_DESCRIPTION, 
				TASK_START_DATE, 
				JOB_DUE_DATE, 
				JOB_REVISED_DATE, 
				DUE_DATE_LOCK, 
				JOB_COMPLETED_DATE, 
				JOB_ORDER, 
				JOB_DAYS, 
				PARENT_TASK, 
				FNC_COMMENTS, 
				DUE_DATE_COMMENTS, 
				REV_DATE_COMMENTS, 
				JOB_HRS, 
				DUE_TIME, 
				REVISED_DUE_TIME, 
				TASK_STATUS, 
				MILESTONE, 
				TRAFFIC_PHASE_ID, 
				TEMP_SEQ, 
				TRF_ROLE,
				VERSION_ID,
				PARENT_TASK_SEQ,
				GRID_ORDER)
			SELECT        
				JOB_NUMBER, 
				JOB_COMPONENT_NBR, 
				SEQ_NBR, 
				FNC_CODE, 
				FNC_EST, 
				TASK_DESCRIPTION, 
				TASK_START_DATE, 
				JOB_DUE_DATE, 
				JOB_REVISED_DATE, 
				DUE_DATE_LOCK, 
				JOB_COMPLETED_DATE, 
				JOB_ORDER, 
				JOB_DAYS, 
				PARENT_TASK, 
				FNC_COMMENTS, 
				DUE_DATE_COMMENTS, 
				REV_DATE_COMMENTS, 
				JOB_HRS, 
				DUE_TIME, 
				REVISED_DUE_TIME, 
				TASK_STATUS, 
				MILESTONE, 
				TRAFFIC_PHASE_ID, 
				TEMP_SEQ, 
				TRF_ROLE,
				@NEW_VERSION_ID,
				PARENT_TASK_SEQ,
				GRID_ORDER
			FROM            
				JOB_TRAFFIC_DET WITH(NOLOCK)
			WHERE
				JOB_TRAFFIC_DET.JOB_NUMBER = @JOB_NUMBER
				AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
				AND JOB_TRAFFIC_DET.SEQ_NBR = @CURR_SEQ_NBR;
			
			SELECT @CURR_NEW_DETAIL_ID = SCOPE_IDENTITY();

			IF ((NOT @CURR_NEW_DETAIL_ID IS NULL) AND @CURR_NEW_DETAIL_ID > 0)
			BEGIN
			-- 5. get related detail records and insert in version tables

				-- 5a.  Contacts
				INSERT INTO JOB_TRAFFIC_VER_DET_CNTS WITH(ROWLOCK) (CDP_CONTACT_ID, DETAIL_ID)
				SELECT CDP_CONTACT_ID, @CURR_NEW_DETAIL_ID
				FROM JOB_TRAFFIC_DET_CNTS WITH(NOLOCK)
				WHERE
					JOB_TRAFFIC_DET_CNTS.JOB_NUMBER = @JOB_NUMBER
					AND JOB_TRAFFIC_DET_CNTS.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
					AND JOB_TRAFFIC_DET_CNTS.SEQ_NBR = @CURR_SEQ_NBR;

				-- 5b.  Employees
				INSERT INTO JOB_TRAFFIC_VER_DET_EMPS WITH(ROWLOCK) (EMP_CODE, HOURS_ALLOWED, TEMP_COMP_DATE, COMPLETED_COMMENTS, PERCENT_COMPLETE, DETAIL_ID)
				SELECT EMP_CODE, HOURS_ALLOWED, TEMP_COMP_DATE, COMPLETED_COMMENTS, PERCENT_COMPLETE, @CURR_NEW_DETAIL_ID
				FROM JOB_TRAFFIC_DET_EMPS WITH(NOLOCK)
				WHERE
					JOB_TRAFFIC_DET_EMPS.JOB_NUMBER = @JOB_NUMBER
					AND JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
					AND JOB_TRAFFIC_DET_EMPS.SEQ_NBR = @CURR_SEQ_NBR;

				-- 5c.  Detail Predecessor
				INSERT INTO JOB_TRAFFIC_VER_DET_PREDS (PREDECESSOR_SEQ_NBR, DETAIL_ID)
				SELECT PREDECESSOR_SEQ_NBR, @CURR_NEW_DETAIL_ID
				FROM JOB_TRAFFIC_DET_PREDS WITH(NOLOCK)
				WHERE
					JOB_TRAFFIC_DET_PREDS.JOB_NUMBER = @JOB_NUMBER
					AND JOB_TRAFFIC_DET_PREDS.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
					AND JOB_TRAFFIC_DET_PREDS.SEQ_NBR = @CURR_SEQ_NBR;

				-- 5d.  Detail Documents
				INSERT INTO JOB_TRAFFIC_VER_DET_DOCS (DOCUMENT_ID, DETAIL_ID)
				SELECT DOCUMENT_ID, @CURR_NEW_DETAIL_ID
				FROM JOB_TRAFFIC_DET_DOCS WITH(NOLOCK)
				WHERE
					JOB_TRAFFIC_DET_DOCS.JOB_NUMBER = @JOB_NUMBER
					AND JOB_TRAFFIC_DET_DOCS.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
					AND JOB_TRAFFIC_DET_DOCS.SEQ_NBR = @CURR_SEQ_NBR;

			END

			FETCH NEXT
			FROM @TASK_CURSOR INTO @CURR_SEQ_NBR;

		END
		CLOSE @TASK_CURSOR;
		DEALLOCATE @TASK_CURSOR;

	--  6. Add to log
		IF @VER_CREATED_COMMENT IS NULL
		BEGIN

			SET @VER_CREATED_COMMENT = 'CREATED';

		END
		INSERT INTO JOB_TRAFFIC_VER_LOG WITH(ROWLOCK) 
		(JOB_NUMBER, JOB_COMPONENT_NBR, VERSION_ID, LAST_APPLIED_BY_USER_CODE, LAST_APPLIED_DATE, LAST_APPLIED_COMMENT)
		VALUES (@JOB_NUMBER, @JOB_COMPONENT_NBR, @NEW_VERSION_ID, @USER_CODE, @RUN_DATE, 'CREATED:  ' + @VER_CREATED_COMMENT);

	END

	SELECT ISNULL(@NEW_VERSION_ID, 0);

/*=========== QUERY ===========*/
GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO