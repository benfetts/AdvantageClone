
CREATE PROCEDURE [dbo].[usp_wv_Traffic_Schedule_AddNew_AddFromPreset] 
@JOB_NUM INT,
@JOB_COMPONENT_NBR SMALLINT,
@TRF_PRESET_CODE VARCHAR(6)
AS
DECLARE
--@JOB_NUM INT,
--@JOB_COMPONENT_NBR SMALLINT,
--@TRF_PRESET_CODE VARCHAR(6),
--
@HAS_PRESET INT,
@PRESET_COUNT INT,
@PRESET_COUNTER INT,
@LAST_SEQ INT,
@NEXT_SEQ INT,
@SEQ_COUNTER INT,
@SEQ_END INT

DECLARE
@TEMP_PRESETS TABLE
(
[NEW_SEQ] INT IDENTITY (1, 1) NOT NULL,
[TRF_PRESET_CODE] VARCHAR (6) NOT NULL,
[FNC_CODE] VARCHAR (10) NOT NULL,
[TRF_PRESET_ORDER] SMALLINT NULL,
[TRF_PRESET_DAYS] SMALLINT NULL,
[TRF_PRESET_HRS] DECIMAL(8, 2) NULL,
[TRAFFIC_PHASE_ID] INT NULL,
[MILESTONE] SMALLINT NOT NULL,
[PARENT_TASK] VARCHAR (10) NULL,
[DEFAULT_EMP] VARCHAR (6) NULL,
[RUSH_DAYS] SMALLINT NULL,
[RUSH_HOURS] DECIMAL(8, 2) NULL 
)

--TEST:
--SET @JOB_NUM = 25
--SET @JOB_COMPONENT_NBR = 1
--SET @TRF_PRESET_CODE = 'ad'


--SEE IF PRESET BEING USED
SELECT @HAS_PRESET = ISNULL(COUNT(1),0) FROM TRF_PRESET_HDR WHERE (TRF_PRESET_CODE = @TRF_PRESET_CODE)

IF @HAS_PRESET = 0
BEGIN
	SET @TRF_PRESET_CODE = NULL
END

IF @HAS_PRESET > 0
BEGIN
	--CREATE TEMP TABLE FOR INSERTION OF PRESETS
	INSERT INTO @TEMP_PRESETS
		(TRF_PRESET_CODE,FNC_CODE,TRF_PRESET_ORDER,TRF_PRESET_DAYS,TRF_PRESET_HRS,TRAFFIC_PHASE_ID,MILESTONE,PARENT_TASK,DEFAULT_EMP,RUSH_DAYS,RUSH_HOURS)
		SELECT TRF_PRESET_CODE,FNC_CODE,TRF_PRESET_ORDER,TRF_PRESET_DAYS,TRF_PRESET_HRS,TRAFFIC_PHASE_ID,MILESTONE,PARENT_TASK,DEFAULT_EMP,RUSH_DAYS,RUSH_HOURS
		FROM TRF_PRESET_DTL
		WHERE TRF_PRESET_CODE = @TRF_PRESET_CODE
		ORDER BY TRF_PRESET_ORDER,TRAFFIC_PHASE_ID
	
	SELECT @PRESET_COUNT = ISNULL(COUNT(1),0) FROM @TEMP_PRESETS
	IF @PRESET_COUNT > 0
	BEGIN
		SELECT @LAST_SEQ = ISNULL(MAX(SEQ_NBR),0) FROM JOB_TRAFFIC_DET WHERE (JOB_NUMBER = @JOB_NUM) AND (JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
		IF @LAST_SEQ > 0
			BEGIN --HAS ROWS IN JOB_TRAFFIC_DET; NEED TO INCREMENT THE SEQ
				SET @SEQ_COUNTER = @LAST_SEQ + 1 --INITIATE VAR
				SET @SEQ_END = @SEQ_COUNTER + @PRESET_COUNT
				SET @PRESET_COUNTER = 1
				WHILE @SEQ_COUNTER < @SEQ_END
				BEGIN
			        INSERT INTO JOB_TRAFFIC_DET(JOB_NUMBER,JOB_COMPONENT_NBR,SEQ_NBR,FNC_CODE,JOB_DAYS,JOB_HRS,TRAFFIC_PHASE_ID,MILESTONE,JOB_ORDER)
					SELECT @JOB_NUM,@JOB_COMPONENT_NBR,@SEQ_COUNTER,FNC_CODE,TRF_PRESET_DAYS,TRF_PRESET_HRS,TRAFFIC_PHASE_ID,MILESTONE,TRF_PRESET_ORDER 
					FROM @TEMP_PRESETS
					WHERE NEW_SEQ = @PRESET_COUNTER
				SET @SEQ_COUNTER = @SEQ_COUNTER + 1
				SET @PRESET_COUNTER = @PRESET_COUNTER + 1
				END
			END
		ELSE
			BEGIN --NO ROWS IN JOB_TRAFFIC_DET YET
			        INSERT INTO JOB_TRAFFIC_DET(JOB_NUMBER,JOB_COMPONENT_NBR,SEQ_NBR,FNC_CODE,JOB_DAYS,JOB_HRS,TRAFFIC_PHASE_ID,MILESTONE,JOB_ORDER)
				    SELECT @JOB_NUM,@JOB_COMPONENT_NBR,NEW_SEQ,FNC_CODE,TRF_PRESET_DAYS,TRF_PRESET_HRS,TRAFFIC_PHASE_ID,MILESTONE,TRF_PRESET_ORDER FROM @TEMP_PRESETS
			END
	END
END
--fix descriptions, 
--make this a join to the temp table in the inserts above??
UPDATE JOB_TRAFFIC_DET
SET JOB_TRAFFIC_DET.TASK_DESCRIPTION = TRAFFIC_FNC.TRF_DESC
FROM         JOB_TRAFFIC_DET LEFT OUTER JOIN
                      TRAFFIC_FNC ON JOB_TRAFFIC_DET.FNC_CODE = TRAFFIC_FNC.TRF_CODE
WHERE     (JOB_TRAFFIC_DET.JOB_NUMBER = @JOB_NUM) AND (JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
                AND (JOB_TRAFFIC_DET.TASK_DESCRIPTION IS NULL) AND (JOB_TRAFFIC_DET.SEQ_NBR > @LAST_SEQ)

