
CREATE PROCEDURE [dbo].[usp_wv_Traffic_Schedule_ApplyTeam_ByRole] 
@JOB_NUMBER INT,
@JOB_COMPONENT_NBR SMALLINT,
@UserCode varchar(100)

AS

DECLARE @OfficeRestrictions AS INTEGER	
DECLARE @EMP_CODE AS varchar(6),@EmpRestrictions SMALLINT

SELECT @EmpRestrictions = ISNULL(COUNT(1),0) FROM SEC_EMP WHERE UPPER(USER_ID) = UPPER(@UserCode)

SELECT @EMP_CODE = EMP_CODE FROM [dbo].[SEC_USER] WHERE UPPER([USER_CODE]) = UPPER(@UserCode)
SELECT @OfficeRestrictions = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CODE

if @OfficeRestrictions > 0
Begin
	if @EmpRestrictions > 0
	Begin
		INSERT INTO JOB_TRAFFIC_DET_EMPS(JOB_NUMBER,JOB_COMPONENT_NBR,SEQ_NBR,EMP_CODE,HOURS_ALLOWED)
		SELECT A.*
		FROM
		(
		SELECT     JOB_TRAFFIC_DET.JOB_NUMBER, JOB_TRAFFIC_DET.JOB_COMPONENT_NBR, JOB_TRAFFIC_DET.SEQ_NBR, 
							  EMAIL_GROUP.EMP_CODE, JOB_TRAFFIC_DET.JOB_HRS
		FROM         JOB_TRAFFIC_DET INNER JOIN
							  JOB_COMPONENT ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
							  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
							  EMAIL_GROUP ON JOB_COMPONENT.EMAIL_GR_CODE = EMAIL_GROUP.EMAIL_GR_CODE INNER JOIN
							  EMPLOYEE ON EMAIL_GROUP.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN 
							  TASK_TRAFFIC_ROLE ON JOB_TRAFFIC_DET.FNC_CODE = TASK_TRAFFIC_ROLE.TRF_CODE AND
							  EMPLOYEE.DEF_TRF_ROLE = TASK_TRAFFIC_ROLE.ROLE_CODE INNER JOIN
							  EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CODE INNER JOIN
							  [dbo].[advtf_sec_emp] (@UserCode) AS SEC_EMP ON EMPLOYEE.EMP_CODE = SEC_EMP.EMP_CODE
		WHERE     (JOB_TRAFFIC_DET.JOB_NUMBER = @JOB_NUMBER) 
		AND (JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR) AND (EMAIL_GROUP.PRIMARY_EMP = 1)
		--AND ((EMAIL_GROUP.INACTIVE_FLAG IS NULL) OR (EMAIL_GROUP.INACTIVE_FLAG = 0))
		AND ((EMPLOYEE.EMP_TERM_DATE IS NULL) OR (EMPLOYEE.EMP_TERM_DATE > GETDATE()))
		) AS A
		WHERE NOT EXISTS (
		SELECT * FROM JOB_TRAFFIC_DET_EMPS
		WHERE JOB_TRAFFIC_DET_EMPS.JOB_NUMBER = A.JOB_NUMBER
		AND JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR = A.JOB_COMPONENT_NBR
		AND JOB_TRAFFIC_DET_EMPS.SEQ_NBR = A.SEQ_NBR 
		AND JOB_TRAFFIC_DET_EMPS.EMP_CODE = A.EMP_CODE
		)
		ORDER BY A.JOB_NUMBER, A.JOB_COMPONENT_NBR, A.SEQ_NBR,A.EMP_CODE
	End
	Else
	Begin
		INSERT INTO JOB_TRAFFIC_DET_EMPS(JOB_NUMBER,JOB_COMPONENT_NBR,SEQ_NBR,EMP_CODE,HOURS_ALLOWED)
		SELECT A.*
		FROM
		(
		SELECT     JOB_TRAFFIC_DET.JOB_NUMBER, JOB_TRAFFIC_DET.JOB_COMPONENT_NBR, JOB_TRAFFIC_DET.SEQ_NBR, 
							  EMAIL_GROUP.EMP_CODE, JOB_TRAFFIC_DET.JOB_HRS
		FROM         JOB_TRAFFIC_DET INNER JOIN
							  JOB_COMPONENT ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
							  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
							  EMAIL_GROUP ON JOB_COMPONENT.EMAIL_GR_CODE = EMAIL_GROUP.EMAIL_GR_CODE INNER JOIN
							  EMPLOYEE ON EMAIL_GROUP.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN 
							  TASK_TRAFFIC_ROLE ON JOB_TRAFFIC_DET.FNC_CODE = TASK_TRAFFIC_ROLE.TRF_CODE AND
							  EMPLOYEE.DEF_TRF_ROLE = TASK_TRAFFIC_ROLE.ROLE_CODE INNER JOIN
							  EMP_OFFICE ON EMPLOYEE.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = @EMP_CODE
		WHERE     (JOB_TRAFFIC_DET.JOB_NUMBER = @JOB_NUMBER) 
		AND (JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR) AND (EMAIL_GROUP.PRIMARY_EMP = 1)
		--AND ((EMAIL_GROUP.INACTIVE_FLAG IS NULL) OR (EMAIL_GROUP.INACTIVE_FLAG = 0))
		AND ((EMPLOYEE.EMP_TERM_DATE IS NULL) OR (EMPLOYEE.EMP_TERM_DATE > GETDATE()))
		) AS A
		WHERE NOT EXISTS (
		SELECT * FROM JOB_TRAFFIC_DET_EMPS
		WHERE JOB_TRAFFIC_DET_EMPS.JOB_NUMBER = A.JOB_NUMBER
		AND JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR = A.JOB_COMPONENT_NBR
		AND JOB_TRAFFIC_DET_EMPS.SEQ_NBR = A.SEQ_NBR 
		AND JOB_TRAFFIC_DET_EMPS.EMP_CODE = A.EMP_CODE
		)
		ORDER BY A.JOB_NUMBER, A.JOB_COMPONENT_NBR, A.SEQ_NBR,A.EMP_CODE
	End

End
Else
Begin
	if @EmpRestrictions > 0
	Begin
		INSERT INTO JOB_TRAFFIC_DET_EMPS(JOB_NUMBER,JOB_COMPONENT_NBR,SEQ_NBR,EMP_CODE,HOURS_ALLOWED)
		SELECT A.*
		FROM
		(
		SELECT     JOB_TRAFFIC_DET.JOB_NUMBER, JOB_TRAFFIC_DET.JOB_COMPONENT_NBR, JOB_TRAFFIC_DET.SEQ_NBR, 
							  EMAIL_GROUP.EMP_CODE, JOB_TRAFFIC_DET.JOB_HRS
		FROM         JOB_TRAFFIC_DET INNER JOIN
							  JOB_COMPONENT ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
							  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
							  EMAIL_GROUP ON JOB_COMPONENT.EMAIL_GR_CODE = EMAIL_GROUP.EMAIL_GR_CODE INNER JOIN
							  EMPLOYEE ON EMAIL_GROUP.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN 
							  TASK_TRAFFIC_ROLE ON JOB_TRAFFIC_DET.FNC_CODE = TASK_TRAFFIC_ROLE.TRF_CODE AND
							  EMPLOYEE.DEF_TRF_ROLE = TASK_TRAFFIC_ROLE.ROLE_CODE INNER JOIN
							  [dbo].[advtf_sec_emp] (@UserCode) AS SEC_EMP ON EMPLOYEE.EMP_CODE = SEC_EMP.EMP_CODE
		WHERE     (JOB_TRAFFIC_DET.JOB_NUMBER = @JOB_NUMBER) 
		AND (JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR) AND (EMAIL_GROUP.PRIMARY_EMP = 1)
		--AND ((EMAIL_GROUP.INACTIVE_FLAG IS NULL) OR (EMAIL_GROUP.INACTIVE_FLAG = 0))
		AND ((EMPLOYEE.EMP_TERM_DATE IS NULL) OR (EMPLOYEE.EMP_TERM_DATE > GETDATE()))
		) AS A
		WHERE NOT EXISTS (
		SELECT * FROM JOB_TRAFFIC_DET_EMPS
		WHERE JOB_TRAFFIC_DET_EMPS.JOB_NUMBER = A.JOB_NUMBER
		AND JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR = A.JOB_COMPONENT_NBR
		AND JOB_TRAFFIC_DET_EMPS.SEQ_NBR = A.SEQ_NBR 
		AND JOB_TRAFFIC_DET_EMPS.EMP_CODE = A.EMP_CODE
		)
		ORDER BY A.JOB_NUMBER, A.JOB_COMPONENT_NBR, A.SEQ_NBR,A.EMP_CODE
	End
	Else
	Begin
		INSERT INTO JOB_TRAFFIC_DET_EMPS(JOB_NUMBER,JOB_COMPONENT_NBR,SEQ_NBR,EMP_CODE,HOURS_ALLOWED)
		SELECT A.*
		FROM
		(
		SELECT     JOB_TRAFFIC_DET.JOB_NUMBER, JOB_TRAFFIC_DET.JOB_COMPONENT_NBR, JOB_TRAFFIC_DET.SEQ_NBR, 
							  EMAIL_GROUP.EMP_CODE, JOB_TRAFFIC_DET.JOB_HRS
		FROM         JOB_TRAFFIC_DET INNER JOIN
							  JOB_COMPONENT ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
							  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
							  EMAIL_GROUP ON JOB_COMPONENT.EMAIL_GR_CODE = EMAIL_GROUP.EMAIL_GR_CODE INNER JOIN
							  EMPLOYEE ON EMAIL_GROUP.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN 
							  TASK_TRAFFIC_ROLE ON JOB_TRAFFIC_DET.FNC_CODE = TASK_TRAFFIC_ROLE.TRF_CODE AND
							  EMPLOYEE.DEF_TRF_ROLE = TASK_TRAFFIC_ROLE.ROLE_CODE
		WHERE     (JOB_TRAFFIC_DET.JOB_NUMBER = @JOB_NUMBER) 
		AND (JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR) AND (EMAIL_GROUP.PRIMARY_EMP = 1)
		--AND ((EMAIL_GROUP.INACTIVE_FLAG IS NULL) OR (EMAIL_GROUP.INACTIVE_FLAG = 0))
		AND ((EMPLOYEE.EMP_TERM_DATE IS NULL) OR (EMPLOYEE.EMP_TERM_DATE > GETDATE()))
		) AS A
		WHERE NOT EXISTS (
		SELECT * FROM JOB_TRAFFIC_DET_EMPS
		WHERE JOB_TRAFFIC_DET_EMPS.JOB_NUMBER = A.JOB_NUMBER
		AND JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR = A.JOB_COMPONENT_NBR
		AND JOB_TRAFFIC_DET_EMPS.SEQ_NBR = A.SEQ_NBR 
		AND JOB_TRAFFIC_DET_EMPS.EMP_CODE = A.EMP_CODE
		)
		ORDER BY A.JOB_NUMBER, A.JOB_COMPONENT_NBR, A.SEQ_NBR,A.EMP_CODE
	End
	

End


