
CREATE PROCEDURE [dbo].[usp_wv_Traffic_Schedule_DragTask] 
@JOB_NUMBER INT,
@JOB_COMPONENT_NBR SMALLINT,
@TARGET_SEQ_NBR SMALLINT,
@DRAG_SEQ_NBR SMALLINT,
@INCLUDE_PHASE SMALLINT,
@MOVE_UP SMALLINT

AS

DECLARE
@BASE_TABLE TABLE
(
[ID] INT IDENTITY (1, 1) NOT NULL ,
[JOB_ORDER] SMALLINT,
[SEQ_NBR] SMALLINT,
[TRAFFIC_PHASE_ID] INT
)

DECLARE
@CURR_ORDER SMALLINT,
@DISTINCT_CURR_ORDER SMALLINT,
@MIN_ID SMALLINT,
@MAX_ID SMALLINT,
@NEW_ORDER SMALLINT,
@NEW_ID INT,
@CURR_ID INT,
@CURR_PHASE INT,
@NEW_PHASE INT,
@MOVED_TO_FIRST_POSITION SMALLINT

--INITIALIZE VARS
IF @INCLUDE_PHASE = NULL
BEGIN
	SET @INCLUDE_PHASE = 0
END

--BASE DATA TO WORK WITH
IF @INCLUDE_PHASE = 0
BEGIN
    INSERT INTO @BASE_TABLE(JOB_ORDER,SEQ_NBR,TRAFFIC_PHASE_ID)
    SELECT JOB_TRAFFIC_DET.JOB_ORDER, JOB_TRAFFIC_DET.SEQ_NBR,TRAFFIC_PHASE_ID
    FROM JOB_TRAFFIC_DET
    WHERE
    (JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR) AND 
                          (JOB_TRAFFIC_DET.JOB_NUMBER = @JOB_NUMBER)
    ORDER BY JOB_TRAFFIC_DET.JOB_ORDER, JOB_TRAFFIC_DET.SEQ_NBR
END
IF @INCLUDE_PHASE = 1
BEGIN
    INSERT INTO @BASE_TABLE(JOB_ORDER,SEQ_NBR,TRAFFIC_PHASE_ID)
    SELECT JOB_TRAFFIC_DET.JOB_ORDER, JOB_TRAFFIC_DET.SEQ_NBR,TRAFFIC_PHASE_ID
    FROM JOB_TRAFFIC_DET
    WHERE
    (JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR) AND 
                          (JOB_TRAFFIC_DET.JOB_NUMBER = @JOB_NUMBER)
    ORDER BY JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID,JOB_TRAFFIC_DET.JOB_ORDER, JOB_TRAFFIC_DET.SEQ_NBR
END

--INITIALIZE TARGET ROW
SELECT @CURR_ID = ID, @CURR_ORDER = JOB_ORDER, @CURR_PHASE = TRAFFIC_PHASE_ID
FROM @BASE_TABLE WHERE SEQ_NBR = @TARGET_SEQ_NBR

IF @CURR_ID = 1
    BEGIN
        SET @MOVED_TO_FIRST_POSITION = 1
    END
ELSE
    BEGIN
        SET @MOVED_TO_FIRST_POSITION = 0
    END

IF @INCLUDE_PHASE = 0
BEGIN
    SELECT @MIN_ID = MIN(ID) FROM @BASE_TABLE
    SELECT @MAX_ID = MAX(ID) FROM @BASE_TABLE
END
IF @INCLUDE_PHASE = 1
BEGIN
    SELECT @MIN_ID = MIN(ID) FROM @BASE_TABLE WHERE TRAFFIC_PHASE_ID = @CURR_PHASE
    SELECT @MAX_ID = MAX(ID) FROM @BASE_TABLE WHERE TRAFFIC_PHASE_ID = @CURR_PHASE
END

--GET THE NEW ORDER
----IF @MOVE_UP = 1
----BEGIN
----	SELECT @NEW_ORDER = JOB_ORDER + 1 FROM @BASE_TABLE
----	WHERE ID = @CURR_ID
----END

----IF @MOVE_UP = 0
----BEGIN
----	SELECT @NEW_ORDER = JOB_ORDER + 1 FROM @BASE_TABLE
----	WHERE ID = @CURR_ID
----END

SET @CURR_ID = @CURR_ID 

IF @CURR_ID > @MAX_ID
    BEGIN
        SELECT @NEW_ORDER = JOB_ORDER  FROM @BASE_TABLE
        WHERE ID = @MAX_ID
    END
ELSE
    BEGIN
        SELECT @NEW_ORDER = JOB_ORDER FROM @BASE_TABLE
        WHERE ID = @CURR_ID 
    END

--IF @MOVED_TO_FIRST_POSITION = 1
--BEGIN
 --       SELECT @NEW_ORDER = JOB_ORDER - 1 FROM @BASE_TABLE
 --       WHERE ID = @CURR_ID 
--END


--CAN ORDER BE ZERO? IF START AT ONE, CHANGE BELOW:
IF @NEW_ORDER < 0 OR @NEW_ORDER = NULL
BEGIN
	SET @NEW_ORDER = 0
END

--GET NEW PHASE
----SELECT @NEW_PHASE = TRAFFIC_PHASE_ID FROM @BASE_TABLE
----WHERE ID = @CURR_ID
SELECT @NEW_PHASE = @CURR_PHASE

--UPDATE:
IF @INCLUDE_PHASE = 0
BEGIN
	UPDATE JOB_TRAFFIC_DET SET JOB_ORDER = @NEW_ORDER
	WHERE JOB_NUMBER = @JOB_NUMBER
	AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
	AND SEQ_NBR = @DRAG_SEQ_NBR
END

IF @INCLUDE_PHASE = 1
BEGIN
	UPDATE JOB_TRAFFIC_DET SET JOB_ORDER = @NEW_ORDER, TRAFFIC_PHASE_ID = @NEW_PHASE
	WHERE JOB_NUMBER = @JOB_NUMBER
	AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
	AND SEQ_NBR = @DRAG_SEQ_NBR
END


-- ::TEST::
--SELECT * FROM @BASE_TABLE
--SELECT @CURR_ID AS CURR_ID, @CURR_ORDER AS CURR_ORDER
--SELECT @NEW_ORDER AS NEW_ORDER, @NEW_PHASE AS NEW_PHASE



