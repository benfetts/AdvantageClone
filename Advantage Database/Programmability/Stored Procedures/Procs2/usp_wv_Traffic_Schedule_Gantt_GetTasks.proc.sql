IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_Traffic_Schedule_Gantt_ToExcel]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_Traffic_Schedule_Gantt_ToExcel]
GO

CREATE PROCEDURE [dbo].[usp_wv_Traffic_Schedule_Gantt_GetTasks]
@JOB_NUMBER INT,
@JOB_COMPONENT_NBR SMALLINT
AS

DECLARE
@MIN_START_DATE SMALLDATETIME,
@MAX_DUE_DATE SMALLDATETIME,
@SCHED_START_DATE SMALLDATETIME,
@SCHED_DUE_DATE SMALLDATETIME,
@PHASE_COUNT SMALLINT,
@TASK_COUNT SMALLINT

		SELECT 
			@MIN_START_DATE = MIN(TASK_START_DATE), 
			@MAX_DUE_DATE = MAX(COALESCE(JOB_REVISED_DATE,JOB_DUE_DATE)) 
		FROM 
			JOB_TRAFFIC_DET WITH(NOLOCK)
		WHERE 
			JOB_NUMBER = @JOB_NUMBER 
			AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

		SELECT 
			@SCHED_START_DATE = START_DATE, 
			@SCHED_DUE_DATE = JOB_FIRST_USE_DATE 
		FROM 
			JOB_COMPONENT WITH(NOLOCK)
		WHERE 
			JOB_NUMBER = @JOB_NUMBER 
			AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;




		--"gridnode" in GTP Gantt
		SELECT 
			C.id, 
			CASE C.owner
			WHEN '' THEN NULL
			ELSE C.owner 
			END AS owner, 
 			C.text
		FROM
		(
				SELECT A.id, A.owner, A.text, A.PHASE_ORDER, A.JOB_ORDER, A.SEQ_NBR
				FROM
				(
					SELECT TOP 100 PERCENT
						'S'+CAST(SEQ_NBR AS VARCHAR) AS id, 
						ISNULL('P'+CAST(JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID AS VARCHAR),'') AS owner, 
						--ISNULL(TASK_DESCRIPTION,'[No Task Description]') AS text,
						CASE
							WHEN DATALENGTH(TASK_DESCRIPTION) > 17 THEN SUBSTRING(TASK_DESCRIPTION,0,17)+'...'
							WHEN TASK_DESCRIPTION = NULL THEN ''
							ELSE TASK_DESCRIPTION
						END AS text,					
						JOB_TRAFFIC_DET.JOB_ORDER, JOB_TRAFFIC_DET.SEQ_NBR, 9999999 AS PHASE_ORDER
					FROM 
						JOB_TRAFFIC_DET WITH(NOLOCK)
					WHERE 
						JOB_NUMBER = @JOB_NUMBER 
						AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR						
					ORDER BY 
						JOB_TRAFFIC_DET.JOB_ORDER ASC, JOB_TRAFFIC_DET.JOB_REVISED_DATE ASC, JOB_TRAFFIC_DET.SEQ_NBR ASC
				) AS A
			UNION
				SELECT B.id, B.owner, B.text, B.PHASE_ORDER, B.JOB_ORDER,B.SEQ_NBR
				FROM
				(
					SELECT TOP 100 PERCENT
						CAST('P'+CAST(TRAFFIC_PHASE.TRAFFIC_PHASE_ID AS VARCHAR) AS VARCHAR) AS id, 
						'' AS owner,
						TRAFFIC_PHASE.PHASE_DESC AS text,
						PHASE_ORDER, 9999999 AS JOB_ORDER, 9999999 AS SEQ_NBR
					FROM         
						TRAFFIC_PHASE WITH(NOLOCK) 
					WHERE
						TRAFFIC_PHASE.TRAFFIC_PHASE_ID IN
						(
						SELECT 
							DISTINCT TRAFFIC_PHASE_ID 
						FROM 
							JOB_TRAFFIC_DET WITH(NOLOCK)
						WHERE 
							JOB_NUMBER = @JOB_NUMBER 
							AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
						)
					ORDER BY
						TRAFFIC_PHASE.PHASE_ORDER ASC
				) AS B
		) AS C
		ORDER BY 
			C.PHASE_ORDER ASC, C.JOB_ORDER, C.SEQ_NBR;

		--"timeitem" in GTP Gantt
		SELECT A.*
		FROM
		(
		SELECT 
			'S'+CAST(SEQ_NBR AS VARCHAR) AS id, 
			'S'+CAST(SEQ_NBR AS VARCHAR) AS owner, 
			COALESCE(TASK_START_DATE,JOB_REVISED_DATE,@SCHED_START_DATE,@MIN_START_DATE) AS start,
			DATEADD(n,59,DATEADD(hh,23, COALESCE(JOB_REVISED_DATE,JOB_DUE_DATE,TASK_START_DATE,@SCHED_DUE_DATE,@MAX_DUE_DATE))) AS stop
		FROM 
			JOB_TRAFFIC_DET WITH(NOLOCK)
		WHERE 
			JOB_NUMBER = @JOB_NUMBER 
			AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
			AND ((NOT (TASK_START_DATE IS NULL)) OR (NOT (JOB_REVISED_DATE IS NULL)))
		) AS A	
		WHERE
			((NOT A.start IS NULL)) AND ((NOT A.stop IS NULL));
		--Other data:
		SELECT 
			@PHASE_COUNT = COUNT(DISTINCT TRAFFIC_PHASE_ID) 
		FROM 
			JOB_TRAFFIC_DET WITH(NOLOCK)	
		WHERE 
			JOB_NUMBER = @JOB_NUMBER 
			AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;
			
		SELECT 
			@TASK_COUNT = COUNT(1) 
		FROM 
			JOB_TRAFFIC_DET	WITH(NOLOCK)
		WHERE 
			JOB_NUMBER = @JOB_NUMBER 
			AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;

		
		SELECT 
			COALESCE(MIN(TASK_START_DATE),MIN(JOB_REVISED_DATE),@SCHED_START_DATE,@MIN_START_DATE,MAX(JOB_REVISED_DATE),MAX(JOB_DUE_DATE),DATEADD(DAY, -10,GETDATE())) AS StartTime,
			COALESCE(MAX(JOB_REVISED_DATE),MAX(JOB_DUE_DATE),MIN(TASK_START_DATE),MIN(JOB_REVISED_DATE),@SCHED_START_DATE,@MIN_START_DATE,DATEADD(DAY, 10,GETDATE())) AS StopTime,
			DATEDIFF(day,
			COALESCE(MIN(TASK_START_DATE),MIN(JOB_REVISED_DATE),@SCHED_START_DATE,@MIN_START_DATE,MAX(JOB_REVISED_DATE),MAX(JOB_DUE_DATE),DATEADD(DAY, -10,GETDATE())),
			COALESCE(MAX(JOB_REVISED_DATE),MAX(JOB_DUE_DATE),MIN(TASK_START_DATE),MIN(JOB_REVISED_DATE),@SCHED_START_DATE,@MIN_START_DATE,DATEADD(DAY, 10,GETDATE()))
			) AS DayCount,
			ISNULL(@PHASE_COUNT,0) AS Phase_Count,
			ISNULL(@TASK_COUNT,0) AS TaskCount,
			ISNULL((ISNULL(@PHASE_COUNT,0) + ISNULL(@TASK_COUNT,0)),0) AS TotalNeededRows,
			-- chart height
			-- header approx 90px, each row approx 20px
			90 + ((ISNULL((ISNULL(@PHASE_COUNT,0) + ISNULL(@TASK_COUNT,0)),0)) * 20) AS ChartHeight
		FROM 
			JOB_TRAFFIC_DET WITH(NOLOCK)
		WHERE 
			JOB_NUMBER = @JOB_NUMBER 
			AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR;




			
			
