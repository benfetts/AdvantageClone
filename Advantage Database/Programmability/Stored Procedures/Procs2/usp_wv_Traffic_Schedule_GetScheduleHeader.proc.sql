CREATE PROCEDURE [dbo].[usp_wv_Traffic_Schedule_GetScheduleHeader]
@JOB_NUMBER AS INT,
@JOB_COMPONENT_NBR AS SMALLINT,
@USER_ID AS VARCHAR(100),
@CL_CODE AS VARCHAR(6) = NULL,
@DIV_CODE AS VARCHAR(6) = NULL,
@PRD_CODE AS VARCHAR(6) = NULL,
@EMP_CODE AS VARCHAR(6) = NULL,
@MGR_CODE AS VARCHAR(6) = NULL,
@AE_CODE AS VARCHAR(6) = NULL,
@TASK_CODE AS VARCHAR(10) = NULL,
@ROLE_CODE AS VARCHAR(6) = NULL,
@CUT_OFF_DATE AS smalldatetime = NULL,
@SHOW_ONLY_OPEN_SCHEDS AS SMALLINT = NULL,
--TASK LEVEL STUFF:
@IncludeCompletedTasks AS CHAR(1) = NULL,
@IncludeOnlyPendingTasks AS CHAR(1) = NULL,
@ExcludeProjectedTasks AS CHAR(1) = NULL,
--Header level:
@CMP_CODE AS VARCHAR(6) = NULL,
--MULTIVIEW SHOULD EXCLUDE CLOSED JOBS, BUT NORMAL, SINGLE SCHED SHOULD ALLOW IT
@INCLUDE_CLOSE_JOBS AS BIT = 1,
@MILESTONES_ONLY BIT,
@TRAFFIC_STATUS_CODE VARCHAR(10),
@GANTT BIT,
@OFFICE_CODE AS VARCHAR(6) = NULL,
@SC_CODE AS VARCHAR(6) = NULL,
@JT_CODE AS VARCHAR(10),
@ONLY_SCHEDULE_TEMPLATES BIT,
@TRAFFIC_PHASE_ID INT

AS

DECLARE
@Restrictions AS SMALLINT,
@SQL_SELECT AS VARCHAR(8000),
@SQL_FROM AS VARCHAR(8000),
@SQL_WHERE AS VARCHAR(8000),
@SQL_DYNAMIC AS VARCHAR(8000),
@SQL_GROUP_BY AS VARCHAR(8000),
@SQL_SELECT2 AS VARCHAR(8000),
@SQL_FROM2 AS VARCHAR(8000),
@SQL_WHERE2 AS VARCHAR(8000),
@SQL_DYNAMIC2 AS VARCHAR(8000),
@SQL_GROUP_BY2 AS VARCHAR(8000),
--Manager stuff:
@MGR_COL VARCHAR(20),
@COLUMN_INDEX VARCHAR(1),
@ASSIGN_COL VARCHAR(20)


DECLARE @EMP_CDE AS VARCHAR(6)
DECLARE @OfficeCount AS INTEGER

SELECT @EMP_CDE = EMP_CODE FROM SEC_USER WHERE UPPER(USER_CODE) = UPPER(@USER_ID)

SELECT @OfficeCount = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CDE

	

SELECT @Restrictions = ISNULL(Count(1),0) FROM SEC_CLIENT WHERE UPPER(USER_ID) = UPPER(@USER_ID)

SET @SQL_SELECT = '
SELECT DISTINCT 
                    JOB_TRAFFIC.ROWID, 
                    JOB_LOG.CL_CODE, 
                    CLIENT.CL_NAME, 
                    JOB_LOG.DIV_CODE, 
                    DIVISION.DIV_NAME, 
                    JOB_LOG.PRD_CODE, 
                    PRODUCT.PRD_DESCRIPTION, 
                    JOB_LOG.JOB_NUMBER, 
                    JOB_LOG.JOB_DESC, 
                    JOB_TRAFFIC.JOB_COMPONENT_NBR, 
                    JOB_COMPONENT.JOB_COMP_DESC, 
                    JOB_TRAFFIC.TRF_CODE, 
                    JOB_COMPONENT.EMP_CODE AS EMP_CODE_AE, 
                    JOB_TRAFFIC.COMPLETED_DATE AS JobCompleted, 
                    CAST(JOB_TRAFFIC.TRF_COMMENTS AS VARCHAR(4000)) AS Comments, 
                    TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
                    JOB_TRAFFIC.COMPLETED_DATE, 
                    JOB_TRAFFIC.DATE_DELIVERED, 
                    JOB_TRAFFIC.DATE_SHIPPED, 
                    JOB_TRAFFIC.RECEIVED_BY, 
                    ISNULL(EMPLOYEE.EMP_FNAME,'''') + ISNULL('' ''+EMPLOYEE.EMP_MI + ''.'', '''') + ISNULL('' ''+EMPLOYEE.EMP_LNAME, '''') AS AE_NAME, 
                    PRODUCT.OFFICE_CODE, 
                    OFFICE.OFFICE_NAME, 
                    JOB_TRAFFIC.ASSIGN_1, 
                    JOB_TRAFFIC.ASSIGN_2, 
                    JOB_TRAFFIC.ASSIGN_3, 
                    JOB_TRAFFIC.ASSIGN_4, 
                    JOB_TRAFFIC.ASSIGN_5, 
                    ISNULL(EMPLOYEE_1.EMP_FNAME,'''')+ISNULL('' ''+EMPLOYEE_1.EMP_MI+''.'','''')+ISNULL('' ''+EMPLOYEE_1.EMP_LNAME,'''') AS ASSIGN_1_FML_NAME,
                    ISNULL(EMPLOYEE_2.EMP_FNAME,'''')+ISNULL('' ''+EMPLOYEE_2.EMP_MI+''.'','''')+ISNULL('' ''+EMPLOYEE_2.EMP_LNAME,'''') AS ASSIGN_2_FML_NAME,
                    ISNULL(EMPLOYEE_3.EMP_FNAME,'''')+ISNULL('' ''+EMPLOYEE_3.EMP_MI+''.'','''')+ISNULL('' ''+EMPLOYEE_3.EMP_LNAME,'''') AS ASSIGN_3_FML_NAME,
                    ISNULL(EMPLOYEE_4.EMP_FNAME,'''')+ISNULL('' ''+EMPLOYEE_4.EMP_MI+''.'','''')+ISNULL('' ''+EMPLOYEE_4.EMP_LNAME,'''') AS ASSIGN_4_FML_NAME,
                    ISNULL(EMPLOYEE_5.EMP_FNAME,'''')+ISNULL('' ''+EMPLOYEE_5.EMP_MI+''.'','''')+ISNULL('' ''+EMPLOYEE_5.EMP_LNAME,'''') AS ASSIGN_5_FML_NAME, 
                    JOB_TRAFFIC.REFERENCE, 
                    JOB_COMPONENT.JOB_FIRST_USE_DATE, 
                    JOB_COMPONENT.START_DATE,
                    ISNULL(JOB_LOG.JOB_RUSH_CHARGES,0) AS JOB_RUSH_CHARGES,
                   	CASE JOB_COMPONENT.TRF_SCHEDULE_BY
		                WHEN 1 THEN 1
		                WHEN 0 THEN 0
		                ELSE (SELECT ISNULL(TRF_SCHEDULE_BY,0) FROM AGENCY)
	                END AS TRF_SCHEDULE_BY,
					JOB_COMPONENT.JOB_MARKUP_PCT, 
					ISNULL(JOB_COMPONENT.NOBILL_FLAG,0)  AS NOBILL_FLAG,
					RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20),ISNULL(JOB_LOG.JOB_NUMBER,0)), 6)+RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20),ISNULL(JOB_COMPONENT.JOB_COMPONENT_NBR,0)), 2) AS JOB_AND_COMP,
					JOB_LOG.CL_CODE+JOB_LOG.DIV_CODE+JOB_LOG.PRD_CODE AS CDP,ISNULL(JOB_TRAFFIC.PERCENT_COMPLETE,0) AS GUT_PERCENT_COMPLETE, ISNULL(JOB_TRAFFIC.SCHEDULE_CALC,-1) AS SCHEDULE_CALC,
					JOB_TRAFFIC.AUTO_UPDATE_STATUS,
					JOB_TRAFFIC_VER.ID AS VERSION_ID,
					JOB_TRAFFIC_VER.VER_SEQ_NBR,
					JOB_TRAFFIC_VER.VER_NAME AS VERSION_NAME,
					JOB_TRAFFIC_VER.VER_COMMENT AS VERSION_COMMENT,
					JOB_TRAFFIC.VERSION_LAST_APPLIED,
					JOB_TRAFFIC.IS_TEMPLATE

'
SET @SQL_FROM = '

FROM         
                    JOB_COMPONENT WITH(NOLOCK) INNER JOIN
                    JOB_TRAFFIC WITH(NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR'
                    IF @ExcludeProjectedTasks = 'Y'
						BEGIN
							SET @SQL_FROM = @SQL_FROM + ' INNER JOIN
									JOB_TRAFFIC_DET WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
									JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR'
						END
					ELSE
						BEGIN
							SET @SQL_FROM = @SQL_FROM + ' LEFT OUTER JOIN
									JOB_TRAFFIC_DET WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
									JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR'
						END	
                    
 SET @SQL_FROM = @SQL_FROM + '
  INNER JOIN
                    JOB_LOG WITH(NOLOCK) ON JOB_TRAFFIC.JOB_NUMBER = JOB_LOG.JOB_NUMBER INNER JOIN
                    CLIENT WITH(NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE INNER JOIN
                    PRODUCT WITH(NOLOCK) ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION WITH(NOLOCK) ON JOB_LOG.DIV_CODE = DIVISION.DIV_CODE AND JOB_LOG.CL_CODE = DIVISION.CL_CODE LEFT OUTER JOIN
                    EMPLOYEE  EMPLOYEE_5  ON JOB_TRAFFIC.ASSIGN_5 = EMPLOYEE_5.EMP_CODE LEFT OUTER JOIN
                    EMPLOYEE  EMPLOYEE_4  ON JOB_TRAFFIC.ASSIGN_4 = EMPLOYEE_4.EMP_CODE LEFT OUTER JOIN
                    EMPLOYEE  EMPLOYEE_3  ON JOB_TRAFFIC.ASSIGN_3 = EMPLOYEE_3.EMP_CODE LEFT OUTER JOIN
                    EMPLOYEE  EMPLOYEE_2  ON JOB_TRAFFIC.ASSIGN_2 = EMPLOYEE_2.EMP_CODE LEFT OUTER JOIN
                    EMPLOYEE  EMPLOYEE_1  ON JOB_TRAFFIC.ASSIGN_1 = EMPLOYEE_1.EMP_CODE LEFT OUTER JOIN
                    OFFICE  WITH(NOLOCK)ON PRODUCT.OFFICE_CODE = OFFICE.OFFICE_CODE LEFT OUTER JOIN
                    EMPLOYEE  WITH(NOLOCK)ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE LEFT OUTER JOIN
                    TRAFFIC  WITH(NOLOCK)ON JOB_TRAFFIC.TRF_CODE = TRAFFIC.TRF_CODE LEFT OUTER JOIN
                    TASK_TRAFFIC_ROLE  WITH(NOLOCK)ON JOB_TRAFFIC_DET.FNC_CODE = TASK_TRAFFIC_ROLE.TRF_CODE LEFT OUTER JOIN
                    EMP_TRAFFIC_ROLE  WITH(NOLOCK)ON JOB_TRAFFIC_DET.EMP_CODE = EMP_TRAFFIC_ROLE.EMP_CODE LEFT OUTER JOIN
                    CAMPAIGN WITH(NOLOCK) ON JOB_LOG.CMP_IDENTIFIER = CAMPAIGN.CMP_IDENTIFIER LEFT OUTER JOIN
					JOB_TRAFFIC_DET_EMPS ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_EMPS.JOB_NUMBER AND 
					JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR AND JOB_TRAFFIC_DET_EMPS.SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR
					LEFT OUTER JOIN JOB_TRAFFIC_VER ON JOB_TRAFFIC.JOB_TRAFFIC_VER_ID = JOB_TRAFFIC_VER.ID

'
IF @Restrictions > 0
BEGIN
    SET @SQL_FROM = @SQL_FROM +
    '
					INNER JOIN SEC_CLIENT WITH(NOLOCK)
					ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE
    '
END

	IF @OfficeCount > 0
		BEGIN
			SELECT @SQL_FROM = @SQL_FROM + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
		END

SET @SQL_WHERE = 
'
WHERE 1 = 1 '    

IF @ONLY_SCHEDULE_TEMPLATES = 1 BEGIN

    SET @SQL_WHERE = @SQL_WHERE+ ' AND (JOB_TRAFFIC.IS_TEMPLATE = 1)'

END ELSE BEGIN

	IF @INCLUDE_CLOSE_JOBS = 0 BEGIN

	   SET @SQL_WHERE = @SQL_WHERE + ' AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))'

	END

END

IF @SHOW_ONLY_OPEN_SCHEDS = 1 
BEGIN
    SET @SQL_WHERE = @SQL_WHERE+ ' AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL)'
END
IF @Restrictions > 0
BEGIN
    SET @SQL_WHERE = @SQL_WHERE+' AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + LTRIM(RTRIM(@USER_ID)) +''')) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)'
END
SET @SQL_DYNAMIC = ' AND 1 = 1'
IF @JOB_NUMBER > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC +' AND (JOB_LOG.JOB_NUMBER = '+ LTRIM(RTRIM(CAST(@JOB_NUMBER AS VARCHAR(15)))) +')'
END
IF @JOB_COMPONENT_NBR > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC.JOB_COMPONENT_NBR = '+ LTRIM(RTRIM(CAST(@JOB_COMPONENT_NBR AS VARCHAR(15)))) +')'
END
IF DATALENGTH(@CL_CODE) > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_LOG.CL_CODE =''' + LTRIM(RTRIM(@CL_CODE)) + ''')'
END
IF DATALENGTH(@DIV_CODE) > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_LOG.DIV_CODE =''' + LTRIM(RTRIM(@DIV_CODE)) + ''')'
END
IF DATALENGTH(@PRD_CODE) > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_LOG.PRD_CODE =''' + LTRIM(RTRIM(@PRD_CODE)) + ''')'
END
IF DATALENGTH(@EMP_CODE) > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC_DET_EMPS.EMP_CODE =''' + LTRIM(RTRIM(@EMP_CODE)) + ''')'
	--SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND ((JOB_TRAFFIC_DET.EMP_CODE =''' + LTRIM(RTRIM(@EMP_CODE)) + ''') OR (JOB_TRAFFIC_DET.EMP_CODE =''' + ' ... ' + '''))'
END
IF DATALENGTH(@AE_CODE) > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_COMPONENT.EMP_CODE =''' + LTRIM(RTRIM(@AE_CODE)) + ''')'
END
IF DATALENGTH(@TASK_CODE) > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC_DET.FNC_CODE =''' + LTRIM(RTRIM(@TASK_CODE)) + ''')'
END
IF DATALENGTH(@ROLE_CODE) > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND ((TASK_TRAFFIC_ROLE.ROLE_CODE =''' + LTRIM(RTRIM(@ROLE_CODE)) + ''')'
END
IF DATALENGTH(@ROLE_CODE) > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' OR (EMP_TRAFFIC_ROLE.ROLE_CODE =''' + LTRIM(RTRIM(@ROLE_CODE)) + '''))'
END
IF @IncludeOnlyPendingTasks = 'Y'
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + 'AND JOB_TRAFFIC_DET.TEMP_COMP_DATE IS NOT NULL '
		--OVERRIDE COMPLETED ISSUE 499
		SET @IncludeCompletedTasks = 'N'
END								

IF @IncludeCompletedTasks = 'N'
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + 'AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL '
END	
IF @ExcludeProjectedTasks = 'Y'
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + 'AND (JOB_TRAFFIC_DET.TASK_STATUS <> ''P'' OR JOB_TRAFFIC_DET.TASK_STATUS IS NULL) '
END	    
IF DATALENGTH(@CUT_OFF_DATE) > 0 AND @CUT_OFF_DATE IS NOT NULL
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (NOT (JOB_REVISED_DATE IS NULL)) AND (JOB_REVISED_DATE <= CONVERT(DATETIME, ''' + Cast(@CUT_OFF_DATE as varchar) +   ''', 102)) '
END

IF DATALENGTH(@MGR_CODE) > 0
BEGIN
    SELECT @MGR_COL = CAST( AGY_SETTINGS_VALUE AS varchar(20) )
    FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'TRAFFIC_MGR_COL' 

    SELECT @COLUMN_INDEX = SUBSTRING(@MGR_COL,9,1)

    SET @ASSIGN_COL = 'ASSIGN_' + @COLUMN_INDEX

	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC.'+@ASSIGN_COL+' =''' + LTRIM(RTRIM(@MGR_CODE)) + ''')'

END
IF DATALENGTH(@CMP_CODE) > 0
BEGIN
   SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_LOG.CMP_CODE = ''' + LTRIM(RTRIM(@CMP_CODE)) + ''')'
END
IF @MILESTONES_ONLY = 1
BEGIN
   SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC_DET.MILESTONE = 1)'
END
IF DATALENGTH(@TRAFFIC_STATUS_CODE) > 0
BEGIN
   SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC.TRF_CODE = ''' + LTRIM(RTRIM(@TRAFFIC_STATUS_CODE)) + ''')'
END
IF @GANTT = 1
BEGIN
   SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_COMPONENT.JOB_FIRST_USE_DATE IS NOT NULL OR JOB_COMPONENT.START_DATE IS NOT NULL)'
END
IF DATALENGTH(@OFFICE_CODE) > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_LOG.OFFICE_CODE =''' + LTRIM(RTRIM(@OFFICE_CODE)) + ''')'
END
IF DATALENGTH(@SC_CODE) > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_LOG.SC_CODE =''' + LTRIM(RTRIM(@SC_CODE)) + ''')'
END
IF DATALENGTH(@JT_CODE) > 0
BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_COMPONENT.JT_CODE =''' + LTRIM(RTRIM(@JT_CODE)) + ''')'
END
IF @TRAFFIC_PHASE_ID > 0 BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID = '+ LTRIM(RTRIM(CAST(@TRAFFIC_PHASE_ID AS VARCHAR(15)))) +')'
END ELSE IF @TRAFFIC_PHASE_ID = 0 BEGIN
	SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID IS NULL)'
END

SET @SQL_GROUP_BY = 
' 
GROUP BY 
                    JOB_TRAFFIC.ROWID, JOB_LOG.CL_CODE, CLIENT.CL_NAME, JOB_LOG.DIV_CODE, DIVISION.DIV_NAME, JOB_LOG.PRD_CODE, 
                    PRODUCT.PRD_DESCRIPTION, JOB_LOG.JOB_NUMBER, JOB_LOG.JOB_DESC, JOB_TRAFFIC.JOB_COMPONENT_NBR, 
                    JOB_COMPONENT.EMP_CODE, JOB_COMPONENT.JOB_COMP_DESC, JOB_TRAFFIC.TRF_CODE, JOB_TRAFFIC.COMPLETED_DATE, 
                    CAST(JOB_TRAFFIC.TRF_COMMENTS AS VarChar(4000)), TRAFFIC.TRF_DESCRIPTION, JOB_TRAFFIC.DATE_DELIVERED, JOB_TRAFFIC.DATE_SHIPPED, 
                    JOB_TRAFFIC.RECEIVED_BY, EMPLOYEE.EMP_FNAME, EMPLOYEE.EMP_MI, EMPLOYEE.EMP_LNAME, PRODUCT.OFFICE_CODE, OFFICE.OFFICE_NAME,
                    JOB_TRAFFIC.ASSIGN_1, JOB_TRAFFIC.ASSIGN_2, JOB_TRAFFIC.ASSIGN_3, 
                    JOB_TRAFFIC.ASSIGN_4, JOB_TRAFFIC.ASSIGN_5, 
                    ISNULL(EMPLOYEE_1.EMP_FNAME,'''')+ISNULL('' ''+EMPLOYEE_1.EMP_MI+''.'','''')+ISNULL('' ''+EMPLOYEE_1.EMP_LNAME,''''),
                    ISNULL(EMPLOYEE_2.EMP_FNAME,'''')+ISNULL('' ''+EMPLOYEE_2.EMP_MI+''.'','''')+ISNULL('' ''+EMPLOYEE_2.EMP_LNAME,'''') ,
                    ISNULL(EMPLOYEE_3.EMP_FNAME,'''')+ISNULL('' ''+EMPLOYEE_3.EMP_MI+''.'','''')+ISNULL('' ''+EMPLOYEE_3.EMP_LNAME,'''') ,
                    ISNULL(EMPLOYEE_4.EMP_FNAME,'''')+ISNULL('' ''+EMPLOYEE_4.EMP_MI+''.'','''')+ISNULL('' ''+EMPLOYEE_4.EMP_LNAME,'''') ,
                    ISNULL(EMPLOYEE_5.EMP_FNAME,'''')+ISNULL('' ''+EMPLOYEE_5.EMP_MI+''.'','''')+ISNULL('' ''+EMPLOYEE_5.EMP_LNAME,'''') , 
                    JOB_TRAFFIC.REFERENCE, 
                    JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_COMPONENT.START_DATE, JOB_LOG.JOB_RUSH_CHARGES,JOB_COMPONENT.TRF_SCHEDULE_BY,JOB_COMPONENT.JOB_MARKUP_PCT,JOB_COMPONENT.NOBILL_FLAG,
                    RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20),ISNULL(JOB_LOG.JOB_NUMBER,0)), 6)+RIGHT(REPLICATE(''0'', 6) + CONVERT(VARCHAR(20),ISNULL(JOB_COMPONENT.JOB_COMPONENT_NBR,0)), 2),
                    JOB_LOG.CL_CODE,JOB_LOG.DIV_CODE,JOB_LOG.PRD_CODE,JOB_TRAFFIC.PERCENT_COMPLETE, JOB_TRAFFIC.SCHEDULE_CALC, JOB_TRAFFIC.AUTO_UPDATE_STATUS,
					JOB_TRAFFIC_VER.ID,
					JOB_TRAFFIC_VER.VER_SEQ_NBR,
					JOB_TRAFFIC_VER.VER_NAME,
					JOB_TRAFFIC_VER.VER_COMMENT,
					JOB_TRAFFIC.VERSION_LAST_APPLIED,
					JOB_TRAFFIC.IS_TEMPLATE
ORDER BY 
                    JOB_LOG.JOB_NUMBER DESC, JOB_TRAFFIC.JOB_COMPONENT_NBR ASC;                    
'


PRINT @SQL_SELECT
PRINT @SQL_FROM
PRINT @SQL_WHERE
PRINT @SQL_DYNAMIC
Print @SQL_GROUP_BY
PRINT @SQL_SELECT2
PRINT @SQL_FROM2
PRINT @SQL_WHERE2 
PRINT @SQL_DYNAMIC2
PRINT @SQL_GROUP_BY2
EXEC(@SQL_SELECT+@SQL_FROM+@SQL_WHERE+@SQL_DYNAMIC+@SQL_GROUP_BY+@SQL_SELECT2+@SQL_FROM2+@SQL_WHERE2+@SQL_DYNAMIC2+@SQL_GROUP_BY2);
EXEC usp_wv_Traffic_Schedule_GetAssignmentLabels;
