CREATE PROCEDURE [dbo].[usp_wv_Traffic_Schedule_GetWSTasksData]
	@JobNumber INT,
	@JobCompNumber INT,
	@USER_ID AS VARCHAR(100),
	@CL_CODE AS VARCHAR(6),
	@DIV_CODE AS VARCHAR(6),
	@PRD_CODE AS VARCHAR(6),
	@EMP_CODE AS VARCHAR(6),
	@MGR_CODE AS VARCHAR(6),
	@AE_CODE AS VARCHAR(6),
	@TASK_CODE AS VARCHAR(10),
	@ROLE_CODE AS VARCHAR(6),
	@CUT_OFF_DATE AS VARCHAR(15),
	@CMP_CODE AS VARCHAR(6),
	@SHOW_ONLY_OPEN_SCHEDS AS SMALLINT,
	--TASK LEVEL STUFF:
	@IncludeCompletedTasks AS CHAR(1) = NULL,
	@IncludeOnlyPendingTasks AS CHAR(1) = NULL,
	@ExcludeProjectedTasks AS CHAR(1) = NULL,
	@PHASE_FILTER AS VARCHAR(50)  = '',
	@MILESTONES_ONLY BIT,
	@TRAFFIC_STATUS_CODE VARCHAR(10)
AS
DECLARE 
		@Restrictions INT,
		@SQL_SELECT AS VARCHAR(8000),
		@SQL_FROM AS VARCHAR(8000),
		@SQL_WHERE AS VARCHAR(8000),
		@SQL_DYNAMIC AS VARCHAR(8000),
		@SQL_GROUP_BY AS VARCHAR(8000),
		--Manager stuff:
		@MGR_COL VARCHAR(20),
		@COLUMN_INDEX VARCHAR(1),
		@ASSIGN_COL VARCHAR(20)

CREATE TABLE  #report( 	
	ProjectStartDate		SMALLDATETIME,
	JobDueDate		SMALLDATETIME, 
	JobStatus		VARCHAR(40),
	StatusCode		VARCHAR(11),
	ClientCode		VARCHAR(6),
	ClientName		VARCHAR(100),
	DivisionCode		VARCHAR(6),
	DivisionName		VARCHAR(100),
	ProductCode		VARCHAR(6),
	ProductName		VARCHAR(100),
	JobNumber		INT NULL,
	JobDescription		VARCHAR(100),
	JobCompNumber		INT NULL, 
	JobCompDescription	VARCHAR(100),
	TRFComments		TEXT,
	OnlyProjected		VARCHAR(5),
	AccExecutive    VARCHAR(100),
	JobType			VARCHAR(10),	
	JobTypeDesc		VARCHAR(30),
	ClientRef		VARCHAR(30),
	JobCompletedDate SMALLDATETIME,
	Rush			VARCHAR(10),
	JobMarkup		DECIMAL(15,3),
	JobNonBillFlag	VARCHAR(10)
	) 	
	
SELECT @Restrictions = ISNULL(Count(1),0) FROM SEC_CLIENT WHERE UPPER(USER_ID) = UPPER(@USER_ID)

SET @SQL_SELECT = 'INSERT INTO #report 
						SELECT   
						JOB_COMPONENT.START_DATE,
						JOB_COMPONENT.JOB_FIRST_USE_DATE,
						TRAFFIC.TRF_DESCRIPTION,
						TRAFFIC.TRF_CODE,
						JOB_LOG.CL_CODE,
						CLIENT.CL_NAME,
						JOB_LOG.DIV_CODE,
						DIVISION.DIV_NAME,
						JOB_LOG.PRD_CODE,
						PRODUCT.PRD_DESCRIPTION,
						JOB_LOG.JOB_NUMBER,
						JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR,
						JOB_COMPONENT.JOB_COMP_DESC,
						CAST(JOB_TRAFFIC.TRF_COMMENTS AS VARCHAR(4000)) AS Comments,
						NULL,
						''('' + JOB_COMPONENT.EMP_CODE + '') '' + EMPLOYEE.EMP_FNAME + '' '' + EMPLOYEE.EMP_MI + '' '' + EMPLOYEE.EMP_LNAME AS AE,  
						JOB_COMPONENT.JT_CODE, 
						JOB_TYPE.JT_DESC, 
						JOB_LOG.JOB_CLI_REF, 
						JOB_TRAFFIC.COMPLETED_DATE, 
						CASE WHEN JOB_LOG.JOB_RUSH_CHARGES = 1 THEN ''X'' ELSE '''' END AS RUSH,
						JOB_COMPONENT.JOB_MARKUP_PCT, 
						CASE WHEN JOB_COMPONENT.NOBILL_FLAG = 1 THEN ''X'' ELSE '''' END AS NOBILL_FLAG'
						
						
SET @SQL_FROM = ' FROM 
						JOB_COMPONENT WITH(NOLOCK) INNER JOIN
                    JOB_TRAFFIC WITH(NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
                    JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR'
                    IF @IncludeCompletedTasks = 'Y' or @ExcludeProjectedTasks = 'Y'
						BEGIN
							SET @SQL_FROM = @SQL_FROM + ' INNER JOIN
									JOB_TRAFFIC_DET WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
									JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR'
						END
					ELSE
						BEGIN
							SET @SQL_FROM = @SQL_FROM + ' LEFT OUTER JOIN
									JOB_TRAFFIC_DET WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND 
									JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR'
						END	
                    
 SET @SQL_FROM = @SQL_FROM + ' INNER JOIN
                    JOB_LOG WITH(NOLOCK) ON JOB_TRAFFIC.JOB_NUMBER = JOB_LOG.JOB_NUMBER INNER JOIN
                    CLIENT WITH(NOLOCK) ON CLIENT.CL_CODE = JOB_LOG.CL_CODE INNER JOIN
                    PRODUCT WITH(NOLOCK) ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
                    JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
                    DIVISION WITH(NOLOCK) ON JOB_LOG.DIV_CODE = DIVISION.DIV_CODE AND JOB_LOG.CL_CODE = DIVISION.CL_CODE LEFT OUTER JOIN
                    EMPLOYEE  EMPLOYEE_5  ON JOB_TRAFFIC.ASSIGN_5 = EMPLOYEE_5.EMP_CODE LEFT OUTER JOIN
                    EMPLOYEE  EMPLOYEE_4  ON JOB_TRAFFIC.ASSIGN_4 = EMPLOYEE_4.EMP_CODE LEFT OUTER JOIN
                    EMPLOYEE  EMPLOYEE_3  ON JOB_TRAFFIC.ASSIGN_3 = EMPLOYEE_3.EMP_CODE LEFT OUTER JOIN
                    EMPLOYEE  EMPLOYEE_2  ON JOB_TRAFFIC.ASSIGN_2 = EMPLOYEE_2.EMP_CODE LEFT OUTER JOIN
                    EMPLOYEE  EMPLOYEE_1  ON JOB_TRAFFIC.ASSIGN_1 = EMPLOYEE_1.EMP_CODE LEFT OUTER JOIN
                    OFFICE  WITH(NOLOCK)ON PRODUCT.OFFICE_CODE = OFFICE.OFFICE_CODE LEFT OUTER JOIN
                    EMPLOYEE  WITH(NOLOCK)ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE LEFT OUTER JOIN
                    TRAFFIC  WITH(NOLOCK)ON JOB_TRAFFIC.TRF_CODE = TRAFFIC.TRF_CODE LEFT OUTER JOIN
                    TASK_TRAFFIC_ROLE  WITH(NOLOCK)ON JOB_TRAFFIC_DET.FNC_CODE = TASK_TRAFFIC_ROLE.TRF_CODE LEFT OUTER JOIN
                    EMP_TRAFFIC_ROLE  WITH(NOLOCK)ON JOB_TRAFFIC_DET.EMP_CODE = EMP_TRAFFIC_ROLE.EMP_CODE 
						LEFT OUTER JOIN JOB_TYPE ON JOB_COMPONENT.JT_CODE = JOB_TYPE.JT_CODE	
						 LEFT OUTER JOIN
						CAMPAIGN ON JOB_LOG.CMP_IDENTIFIER = CAMPAIGN.CMP_IDENTIFIER LEFT OUTER JOIN
								  JOB_TRAFFIC_DET_EMPS ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_EMPS.JOB_NUMBER AND 
								  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR AND JOB_TRAFFIC_DET_EMPS.SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR'
						IF @Restrictions > 0
							BEGIN
								SET @SQL_FROM = @SQL_FROM +
								' INNER JOIN SEC_CLIENT WITH(NOLOCK)
							     ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE
								'
							END
					SET @SQL_WHERE = ' WHERE 1=1'
						IF @SHOW_ONLY_OPEN_SCHEDS = 1 
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE+ ' AND (JOB_TRAFFIC.COMPLETED_DATE IS NULL)'
						END
						IF @Restrictions > 0
						BEGIN
							SET @SQL_WHERE = @SQL_WHERE+' AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(''' + LTRIM(RTRIM(@USER_ID)) +''')) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)'
						END
						SET @SQL_DYNAMIC = ' AND 1 = 1'
						IF @JobNumber > 0
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC +' AND (JOB_LOG.JOB_NUMBER = '+ LTRIM(RTRIM(CAST(@JobNumber AS VARCHAR(15)))) +')'
						END
						IF @JobCompNumber > 0
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC.JOB_COMPONENT_NBR = '+ LTRIM(RTRIM(CAST(@JobCompNumber AS VARCHAR(15)))) +')'
						END
						IF DATALENGTH(@CL_CODE) > 0
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_LOG.CL_CODE =''' + LTRIM(RTRIM(@CL_CODE)) + ''')'
						END
						IF DATALENGTH(@DIV_CODE) > 0
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_LOG.DIV_CODE =''' + LTRIM(RTRIM(@DIV_CODE)) + ''')'
						END
						IF DATALENGTH(@PRD_CODE) > 0
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_LOG.PRD_CODE =''' + LTRIM(RTRIM(@PRD_CODE)) + ''')'
						END
						IF DATALENGTH(@EMP_CODE) > 0
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC_DET_EMPS.EMP_CODE =''' + LTRIM(RTRIM(@EMP_CODE)) + ''')'
							--SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND ((JOB_TRAFFIC_DET.EMP_CODE =''' + LTRIM(RTRIM(@EMP_CODE)) + ''') OR (JOB_TRAFFIC_DET.EMP_CODE =''' + ' ... ' + '''))'
						END
						IF DATALENGTH(@AE_CODE) > 0
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_COMPONENT.EMP_CODE =''' + LTRIM(RTRIM(@AE_CODE)) + ''')'
						END
						IF DATALENGTH(@TASK_CODE) > 0
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC_DET.FNC_CODE =''' + LTRIM(RTRIM(@TASK_CODE)) + ''')'
						END
						IF DATALENGTH(@ROLE_CODE) > 0
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND ((TASK_TRAFFIC_ROLE.ROLE_CODE =''' + LTRIM(RTRIM(@ROLE_CODE)) + ''')'
						END
						IF DATALENGTH(@ROLE_CODE) > 0
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' OR (EMP_TRAFFIC_ROLE.ROLE_CODE =''' + LTRIM(RTRIM(@ROLE_CODE)) + '''))'
						END
						IF @IncludeOnlyPendingTasks = 'Y'
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + 'AND JOB_TRAFFIC_DET.TEMP_COMP_DATE IS NOT NULL '
							--OVERRIDE COMPLETED ISSUE 499
							SET @IncludeCompletedTasks = 'N'
						END								

						IF @IncludeCompletedTasks = 'N'
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + 'AND JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL '
						END	
						IF @ExcludeProjectedTasks = 'Y'
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + 'AND (JOB_TRAFFIC_DET.TASK_STATUS <> ''P'' OR JOB_TRAFFIC_DET.TASK_STATUS IS NULL) '
						END	    
						IF DATALENGTH(@CUT_OFF_DATE) > 0
						BEGIN
							SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (NOT (JOB_REVISED_DATE IS NULL)) AND (JOB_REVISED_DATE <= CONVERT(DATETIME, ''' + @CUT_OFF_DATE +   ' 23:59:00'', 102)) '
						END
						
                        IF @PHASE_FILTER = 'is_null'
                        BEGIN
		                        SELECT @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID IS NULL '
                        END
                        IF ISNUMERIC(@PHASE_FILTER) = 1
                        BEGIN
		                        SELECT @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID = ' + @PHASE_FILTER
                        END

						IF DATALENGTH(@MGR_CODE) > 0
						BEGIN
							SELECT @MGR_COL = CAST( AGY_SETTINGS_VALUE AS varchar(20) )
							FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'TRAFFIC_MGR_COL' 

							SELECT @COLUMN_INDEX = SUBSTRING(@MGR_COL,9,1)

							SET @ASSIGN_COL = 'ASSIGN_' + @COLUMN_INDEX

							SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC.'+@ASSIGN_COL+' =''' + LTRIM(RTRIM(@MGR_CODE)) + ''')'

						END
						IF DATALENGTH(@CMP_CODE) > 0
							BEGIN
							   SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_LOG.CMP_CODE = ''' + LTRIM(RTRIM(@CMP_CODE)) + ''')'
							END

						IF @MILESTONES_ONLY = 1
						BEGIN
						   SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC_DET.MILESTONE = 1)'
						END

						IF DATALENGTH(@TRAFFIC_STATUS_CODE) > 0
						BEGIN
						   SET @SQL_DYNAMIC = @SQL_DYNAMIC + ' AND (JOB_TRAFFIC.TRF_CODE = ''' + LTRIM(RTRIM(@TRAFFIC_STATUS_CODE)) + ''')'
						END
				


				    SET @SQL_GROUP_BY = ' GROUP BY
						JOB_LOG.CL_CODE,
						CLIENT.CL_NAME,
						JOB_LOG.DIV_CODE,
						DIVISION.DIV_NAME,
						JOB_LOG.PRD_CODE,
						PRODUCT.PRD_DESCRIPTION,
						JOB_LOG.JOB_NUMBER,
						JOB_LOG.JOB_DESC,
						JOB_COMPONENT.JOB_COMPONENT_NBR,
						JOB_COMPONENT.JOB_COMP_DESC	,
						CAST(JOB_TRAFFIC.TRF_COMMENTS AS VarChar(4000)),
						JOB_FIRST_USE_DATE,
						TRAFFIC.TRF_DESCRIPTION,
						TRAFFIC.TRF_CODE,
						JOB_COMPONENT.START_DATE,
						JOB_COMPONENT.EMP_CODE, EMPLOYEE.EMP_FNAME, EMPLOYEE.EMP_MI, EMPLOYEE.EMP_LNAME,  
						JOB_COMPONENT.JT_CODE, JOB_TYPE.JT_DESC, JOB_LOG.JOB_CLI_REF, JOB_TRAFFIC.COMPLETED_DATE, JOB_LOG.JOB_RUSH_CHARGES,
						JOB_COMPONENT.JOB_MARKUP_PCT, JOB_COMPONENT.NOBILL_FLAG ORDER BY JOB_LOG.JOB_NUMBER DESC'

					EXEC(@SQL_SELECT+@SQL_FROM+@SQL_WHERE+@SQL_DYNAMIC+@SQL_GROUP_BY)
						
					PRINT @SQL_SELECT+@SQL_FROM+@SQL_WHERE+@SQL_DYNAMIC+@SQL_GROUP_BY
				
	
--UPDATE #report
--SET  TRFComments = JOB_TRAFFIC.TRF_COMMENTS
--FROM #report
--	INNER JOIN JOB_TRAFFIC
--	    ON #report.JobNumber = JOB_TRAFFIC.JOB_NUMBER
--	    AND #report.JobCompNumber = JOB_TRAFFIC.JOB_COMPONENT_NBR



SELECT 
    ProjectStartDate,
	JobDueDate,
	JobCompletedDate,
	ClientCode,
	ClientName,
	DivisionCode,
	DivisionName,
	ProductCode,
	ProductName,
	JobNumber,
	JobDescription,
	JobCompNumber,
	JobCompDescription,
	ClientRef,
	AccExecutive,
	JobType,	
	JobTypeDesc,
	Rush,
	JobMarkup,
	JobNonBillFlag,
	JobDueDate,
	JobStatus AS JobStatus,	
	TRFComments,
	StatusCode		
   FROM 
        #report


