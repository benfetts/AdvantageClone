
CREATE PROCEDURE [dbo].[usp_wv_Traffic_Schedule_Search] 
	@CL_CODE VARCHAR(6),
	@DIV_CODE VARCHAR(6),
	@PRD_CODE VARCHAR(6),
	@JOB_NUMBER INT,
	@JOB_COMPONENT_NBR SMALLINT,
	@OFFICE_CODE VARCHAR(6),
	@SALES_CLASS VARCHAR(6),
	@CMP_CODE VARCHAR(6),
	@AE_CODE VARCHAR(6),
	@USER_ID AS VARCHAR(100),
	@JT_CODE AS VARCHAR(10)
AS

	DECLARE
		@SQL AS NVARCHAR(4000), @SQL_UNION AS NVARCHAR(4000);


DECLARE @EMP_CDE AS VARCHAR(6)
DECLARE @OfficeCount AS INTEGER

SELECT @EMP_CDE = EMP_CODE FROM SEC_USER WHERE UPPER(USER_CODE) = UPPER(@USER_ID)

SELECT @OfficeCount = COUNT(*) FROM EMP_OFFICE WHERE EMP_CODE = @EMP_CDE
		
	IF @CL_CODE IS NULL
	BEGIN
		SET @CL_CODE = ''
	END	
	IF @DIV_CODE IS NULL
	BEGIN
		SET @DIV_CODE = ''
	END	
	IF @PRD_CODE IS NULL
	BEGIN
		SET @PRD_CODE = ''
	END	
	IF @JOB_NUMBER IS NULL 
	BEGIN
		SET @JOB_NUMBER = 0
	END	
	IF @JOB_COMPONENT_NBR IS NULL 
	BEGIN
		SET @JOB_COMPONENT_NBR = 0
	END	
	IF @OFFICE_CODE IS NULL
	BEGIN
		SET @OFFICE_CODE = ''
	END	
	IF @SALES_CLASS IS NULL
	BEGIN
		SET @SALES_CLASS = ''
	END	
	IF @CMP_CODE IS NULL
	BEGIN
		SET @CMP_CODE = ''
	END	
	IF @AE_CODE IS NULL 
	BEGIN
		SET @AE_CODE = 0
	END	
	IF @JT_CODE IS NULL
	BEGIN
		SET @JT_CODE = ''
	END	
	
	--DON'T ALLOW "FULL" SEARCH
	IF @CL_CODE = '' AND @DIV_CODE = '' AND @PRD_CODE = '' AND @JOB_NUMBER = 0 AND @JOB_COMPONENT_NBR = 0 AND @OFFICE_CODE = '' AND @SALES_CLASS = '' AND @CMP_CODE = '' AND @AE_CODE = '' AND @JT_CODE = ''
	BEGIN
	    SET @CL_CODE = 'FAKE_C'
	    SET @DIV_CODE = 'FAKE_D'
	    SET @PRD_CODE = 'FAKE_P'
	    SET @JOB_NUMBER = -1
	    SET @JOB_COMPONENT_NBR = -1
		SET @OFFICE_CODE = 'FAKE_O'
	    SET @SALES_CLASS = 'FAKE_SC'
	    SET @AE_CODE = 'FAKE_AE'
	    SET @CMP_CODE = 'FAKE_CC'
	    SET @JT_CODE = 'FAKE_JTC'
	END

	SET @SQL = 'SELECT JOB_LOG.OFFICE_CODE, JOB_LOG.CL_CODE, JOB_LOG.DIV_CODE, JOB_LOG.PRD_CODE, JOB_LOG.JOB_NUMBER, JOB_COMPONENT.JOB_COMPONENT_NBR, JOB_LOG.JOB_DESC, JOB_COMPONENT.JOB_COMP_DESC
	FROM JOB_TRAFFIC WITH(NOLOCK) INNER JOIN
	JOB_COMPONENT WITH(NOLOCK) ON JOB_TRAFFIC.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
	JOB_TRAFFIC.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
	JOB_LOG WITH(NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER'

	IF @OfficeCount > 0
		BEGIN
			SELECT @SQL = @SQL + ' INNER JOIN EMP_OFFICE ON JOB_LOG.OFFICE_CODE = EMP_OFFICE.OFFICE_CODE AND EMP_OFFICE.EMP_CODE = ''' + @EMP_CDE + ''''
		END

	SET @SQL = @SQL + ' WHERE 1 = 1  AND (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))'
	
	IF @JOB_NUMBER <= 0 AND @JOB_COMPONENT_NBR <= 0
	BEGIN
		SET @SQL = @SQL + ' AND JOB_TRAFFIC.COMPLETED_DATE IS NULL 
	'
	END
	IF (@OFFICE_CODE <> '')
	BEGIN
		SET @SQL = @SQL + ' AND (JOB_LOG.OFFICE_CODE = '''+@OFFICE_CODE+''') 
	'
	END
	IF (@CL_CODE <> '')
	BEGIN
		SET @SQL = @SQL + ' AND (JOB_LOG.CL_CODE = '''+@CL_CODE+''') 
	'
	END
	IF (@DIV_CODE <> '')
	BEGIN
		SET @SQL = @SQL + ' AND (JOB_LOG.DIV_CODE = '''+@DIV_CODE+''') 
	'
	END
	IF (@PRD_CODE <> '')
	BEGIN
		SET @SQL = @SQL + ' AND (JOB_LOG.PRD_CODE = '''+@PRD_CODE+''') 
	'
	END
	IF (@SALES_CLASS <> '')
	BEGIN
		SET @SQL = @SQL + ' AND (JOB_LOG.SC_CODE = '''+@SALES_CLASS+''') 
	'
	END
	IF (@CMP_CODE <> '')
	BEGIN
		SET @SQL = @SQL + ' AND (JOB_LOG.CMP_CODE = '''+@CMP_CODE+''') 
	'
	END
	IF (@JT_CODE <> '')
	BEGIN
		SET @SQL = @SQL + ' AND (JOB_COMPONENT.JT_CODE = '''+@JT_CODE+''') 
	'
	END
	IF @JOB_NUMBER <> 0
	BEGIN
		SET @SQL = @SQL + ' AND JOB_LOG.JOB_NUMBER = ' + CAST(@JOB_NUMBER AS VARCHAR(10))
	END
	IF @JOB_COMPONENT_NBR <> 0 
	BEGIN
		SET @SQL = @SQL + ' AND JOB_COMPONENT.JOB_COMPONENT_NBR =' + CAST(@JOB_COMPONENT_NBR AS VARCHAR(10))
	END
	
	IF @AE_CODE <> '' 
	BEGIN
		SET @SQL = @SQL + ' AND (JOB_COMPONENT.EMP_CODE ='''+@AE_CODE+''')
	'
	END
	SET @SQL = @SQL + ' ORDER BY JOB_LOG.CL_CODE,JOB_LOG.DIV_CODE,JOB_LOG.PRD_CODE, JOB_LOG.JOB_NUMBER DESC, JOB_COMPONENT.JOB_COMPONENT_NBR ASC'

	--PRINT @SQL
	EXEC (@SQL);

