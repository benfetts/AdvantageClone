SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_Traffic_Schedule_SetNextTaskActive]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_Traffic_Schedule_SetNextTaskActive]
GO
CREATE PROCEDURE [dbo].[usp_wv_Traffic_Schedule_SetNextTaskActive] /*WITH ENCRYPTION*/
@JOB_NUMBER INT,
@JOB_COMPONENT_NBR SMALLINT,
@SEQ_NBR SMALLINT
AS
/*=========== QUERY ===========*/
BEGIN
	DECLARE @RUN TINYINT,
			@ALERT_NEXT_EMPLOYEES TINYINT,
			@CALC_BY_PRED BIT,
			@CURRENT_JOB_ORDER SMALLINT,
			@NEXT_JOB_ORDER SMALLINT,
			@CURRENT_START_DATE SMALLDATETIME,
			@NEXT_START_DATE SMALLDATETIME

	DECLARE @NEXT_TASKS TABLE (SEQ_NBR SMALLINT)	
		
	SELECT 
		@RUN = CAST(AGY_SETTINGS_VALUE AS  TINYINT)
	FROM 
		AGY_SETTINGS WITH(NOLOCK)
	WHERE 
		AGY_SETTINGS_CODE = 'TRF_ACTIVE_NEXT_TASK';

	SELECT 
		@ALERT_NEXT_EMPLOYEES = CAST(AGY_SETTINGS_VALUE AS  TINYINT)
	FROM 
		AGY_SETTINGS WITH(NOLOCK)
	WHERE 
		AGY_SETTINGS_CODE = 'TRF_NXT_TSK_AUTO_EML';

	SET @RUN = ISNULL(@RUN, 0);
	SET @ALERT_NEXT_EMPLOYEES = ISNULL(@ALERT_NEXT_EMPLOYEES, 0);
		
	IF @RUN = 1
	BEGIN
		
		SELECT 
			@CALC_BY_PRED = CONVERT(BIT, ISNULL(JOB_TRAFFIC.SCHEDULE_CALC, 0))
		FROM
			dbo.JOB_TRAFFIC 
		WHERE
			JOB_NUMBER = @JOB_NUMBER AND
			JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR

		SELECT
			@CURRENT_JOB_ORDER = ISNULL(JOB_ORDER, -1),
			@CURRENT_START_DATE = TASK_START_DATE
		FROM
			dbo.JOB_TRAFFIC_DET
		WHERE
			JOB_NUMBER = @JOB_NUMBER AND
			JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND
			SEQ_NBR = @SEQ_NBR

		IF @CALC_BY_PRED = 1 
		BEGIN
	
			INSERT INTO 
				@NEXT_TASKS
			SELECT 
				JOB_TRAFFIC_DET_PREDS.SEQ_NBR
			FROM
				dbo.JOB_TRAFFIC_DET_PREDS JOIN
				dbo.JOB_TRAFFIC_DET ON JOB_TRAFFIC_DET_PREDS.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND
										JOB_TRAFFIC_DET_PREDS.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR AND
										JOB_TRAFFIC_DET_PREDS.SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR
			WHERE
				JOB_TRAFFIC_DET_PREDS.JOB_NUMBER = @JOB_NUMBER AND
				JOB_TRAFFIC_DET_PREDS.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND
				JOB_TRAFFIC_DET_PREDS.PREDECESSOR_SEQ_NBR = @SEQ_NBR AND
				JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL
			
			-- Remove tasks that have predecessors that are not completed
			DELETE FROM	
				@NEXT_TASKS
			WHERE 
				SEQ_NBR IN ( SELECT	
								JOB_TRAFFIC_DET_PREDS.SEQ_NBR
							 FROM
								dbo.JOB_TRAFFIC_DET_PREDS JOIN
								dbo.JOB_TRAFFIC_DET ON JOB_TRAFFIC_DET_PREDS.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND
														JOB_TRAFFIC_DET_PREDS.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR AND
														JOB_TRAFFIC_DET_PREDS.PREDECESSOR_SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR
							 WHERE
								JOB_TRAFFIC_DET_PREDS.JOB_NUMBER = @JOB_NUMBER AND
								JOB_TRAFFIC_DET_PREDS.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND
								JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL)

			-- if no tasks were found, select next task based on start date
			IF (SELECT COUNT(*) FROM @NEXT_TASKS) = 0 
			BEGIN
		
				SELECT TOP 1
					@NEXT_START_DATE = JOB_TRAFFIC_DET.TASK_START_DATE
				FROM
					dbo.JOB_TRAFFIC_DET 
				WHERE
					JOB_NUMBER = @JOB_NUMBER AND
					JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND 
					SEQ_NBR <> @SEQ_NBR AND
					TASK_START_DATE >= TASK_START_DATE AND
					JOB_COMPLETED_DATE IS NULL
				ORDER BY
					TASK_START_DATE

				INSERT INTO 
					@NEXT_TASKS
				SELECT 
					SEQ_NBR
				FROM 
					dbo.JOB_TRAFFIC_DET 
				WHERE 
					JOB_NUMBER = @JOB_NUMBER AND
					JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND
					SEQ_NBR <> @SEQ_NBR AND
					TASK_START_DATE = @NEXT_START_DATE AND
					ISNULL(TASK_STATUS, 'P') = 'P' AND
					JOB_COMPLETED_DATE IS NULL
					
				-- Remove tasks that have predecessors that are not completed
				DELETE FROM	
					@NEXT_TASKS
				WHERE 
					SEQ_NBR IN ( SELECT	
									JOB_TRAFFIC_DET_PREDS.SEQ_NBR
								 FROM
									dbo.JOB_TRAFFIC_DET_PREDS JOIN
									dbo.JOB_TRAFFIC_DET ON JOB_TRAFFIC_DET_PREDS.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND
														   JOB_TRAFFIC_DET_PREDS.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR AND
														   JOB_TRAFFIC_DET_PREDS.PREDECESSOR_SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR
								 WHERE
									JOB_TRAFFIC_DET_PREDS.JOB_NUMBER = @JOB_NUMBER AND
									JOB_TRAFFIC_DET_PREDS.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND
									JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL)
		
			END

		END
		ELSE
		BEGIN
			IF NOT EXISTS (
					SELECT 1 
					FROM JOB_TRAFFIC_DET 
					WHERE JOB_NUMBER = @JOB_NUMBER 
						AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR	
						AND JOB_ORDER = @CURRENT_JOB_ORDER 
						AND JOB_COMPLETED_DATE IS NULL 
						AND SEQ_NBR <> @SEQ_NBR
			)
			BEGIN
				--CURRENT TASK IS ONLY NOT COMPLETED TASK BY ORDER\
				SELECT TOP 1
					@NEXT_JOB_ORDER = JOB_ORDER
				FROM
					dbo.JOB_TRAFFIC_DET 
				WHERE
					JOB_NUMBER = @JOB_NUMBER AND
					JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND
					SEQ_NBR <> @SEQ_NBR AND 
					JOB_ORDER > @CURRENT_JOB_ORDER AND
					JOB_COMPLETED_DATE IS NULL
				ORDER BY
					JOB_ORDER ASC

				INSERT INTO 
					@NEXT_TASKS
				SELECT
					SEQ_NBR
				FROM
					dbo.JOB_TRAFFIC_DET 
				WHERE
					JOB_NUMBER = @JOB_NUMBER AND
					JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND
					JOB_ORDER = @NEXT_JOB_ORDER AND
					ISNULL(TASK_STATUS, 'P') = 'P' AND
					JOB_COMPLETED_DATE IS NULL

			END
		

		END

		UPDATE
			dbo.JOB_TRAFFIC_DET
		SET
			TASK_STATUS = 'A' 
		WHERE
			JOB_NUMBER = @JOB_NUMBER AND
			JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND
			SEQ_NBR IN (SELECT SEQ_NBR FROM @NEXT_TASKS)
		
	END

	SELECT * FROM @NEXT_TASKS;

END
/*=========== QUERY ===========*/
GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO