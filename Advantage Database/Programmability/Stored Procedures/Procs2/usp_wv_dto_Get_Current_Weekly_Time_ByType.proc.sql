IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_dto_Get_Current_Weekly_Time_ByType]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_dto_Get_Current_Weekly_Time_ByType]
GO
CREATE PROCEDURE [dbo].[usp_wv_dto_Get_Current_Weekly_Time_ByType] /*WITH ENCRYPTION*/
@EMP_CODE VARCHAR(6),
@DAYS_TO_DISPLAY SMALLINT,
@START_DATE SMALLDATETIME
AS
/*=========== QUERY ===========*/
BEGIN
	DECLARE @END_DATE SMALLDATETIME,
			@AGENCY_START_WEEK_ON AS SMALLINT,
			@START_WEEK_ON AS SMALLINT,
			@AGENCY_DAYS_TO_DISPLAY AS SMALLINT
	--	START WEEK ON
	BEGIN

		SELECT @AGENCY_START_WEEK_ON = CAST(COALESCE(AGYS.AGY_SETTINGS_VALUE, AGYS.AGY_SETTINGS_DEF) AS INT) FROM AGY_SETTINGS AS AGYS WITH(NOLOCK) WHERE AGYS.AGY_SETTINGS_CODE = 'TS_START_WEEK_ON';
		SELECT @START_WEEK_ON = A.START_WEEK_ON 
		FROM (
			SELECT 
				TOP 1 CAST(COALESCE(APP_VARS.VARIABLE_VALUE, @START_WEEK_ON) AS INT) AS START_WEEK_ON
			FROM            
				APP_VARS WITH(NOLOCK) INNER JOIN SEC_USER WITH(NOLOCK) ON UPPER(APP_VARS.USERID) = UPPER(SEC_USER.USER_CODE)
			WHERE 
				SEC_USER.EMP_CODE = @EMP_CODE AND APP_VARS.APPLICATION = 'TIMESHEET' AND APP_VARS.VARIABLE_NAME = 'START_WEEK_ON'
		) AS A;
		SET @START_WEEK_ON = ISNULL(@START_WEEK_ON, @AGENCY_START_WEEK_ON);
		SET @START_WEEK_ON = ISNULL(@START_WEEK_ON, 0) + 1; -- SQL DAY OF WEEK SUNDAY IS ONE, .NET SUNDAY IS ZERO

	END

	--	DAYS TO DISPLAY
	IF @DAYS_TO_DISPLAY IS NULL OR @DAYS_TO_DISPLAY = 0
	BEGIN

		SELECT @AGENCY_DAYS_TO_DISPLAY = CAST(COALESCE(AGYS.AGY_SETTINGS_VALUE, AGYS.AGY_SETTINGS_DEF) AS INT) FROM AGY_SETTINGS AS AGYS WITH(NOLOCK) WHERE AGYS.AGY_SETTINGS_CODE = 'TS_DAYS_TO_DISPLAY';
		SELECT @DAYS_TO_DISPLAY = A.DAYS_TO_DISPLAY 
		FROM (
			SELECT 
				TOP 1 CAST(COALESCE(APP_VARS.VARIABLE_VALUE, @START_WEEK_ON) AS INT) AS DAYS_TO_DISPLAY
			FROM            
				APP_VARS WITH(NOLOCK) INNER JOIN SEC_USER WITH(NOLOCK) ON UPPER(APP_VARS.USERID) = UPPER(SEC_USER.USER_CODE)
			WHERE 
				SEC_USER.EMP_CODE = @EMP_CODE AND APP_VARS.APPLICATION = 'TIMESHEET' AND APP_VARS.VARIABLE_NAME = 'DAYS_TO_DISPLAY'
		) AS A;
		SET @DAYS_TO_DISPLAY = ISNULL(@DAYS_TO_DISPLAY, @AGENCY_DAYS_TO_DISPLAY);

	END

	--	START DATE
	IF @START_DATE IS NULL
	BEGIN

		SELECT @START_DATE = dbo.F_START_OF_WEEK(GETDATE(), @START_WEEK_ON);
		SELECT @END_DATE = DATEADD(DAY, @DAYS_TO_DISPLAY, @START_DATE)

	END
	ELSE
	BEGIN

		SELECT @START_DATE = dbo.F_START_OF_WEEK(@START_DATE, @START_WEEK_ON);

	END

	
	SELECT SUM(A.Client) AS Client, SUM(A.Agency) AS Agency, SUM(A.[New Business]) AS [New Business], SUM(A.Indirect) AS Indirect FROM (
	SELECT EMP_CODE, CASE WHEN CASE
						WHEN agy.CL_CODE IS NOT NULL THEN 'AG'
						WHEN c.NEW_BUSINESS = 1 THEN 'NW'
						WHEN EMP_TIME_DTL.EMP_NON_BILL_FLAG = 1 AND ISNULL(EMP_TIME_DTL.FEE_TIME, 0) = 0 THEN 'NB'
						ELSE 'BL' END IN ('BL','NB') THEN EMP_TIME_DTL.EMP_HOURS ELSE 0 END AS [Client],
					CASE WHEN agy.CL_CODE IS NOT NULL THEN EMP_TIME_DTL.EMP_HOURS ELSE 0 END AS [Agency],
					CASE WHEN c.NEW_BUSINESS = 1 THEN EMP_TIME_DTL.EMP_HOURS ELSE 0 END AS [New Business], 0 AS Indirect				
					FROM EMP_TIME_DTL INNER JOIN
						 EMP_TIME ON EMP_TIME_DTL.ET_ID = EMP_TIME.ET_ID LEFT OUTER JOIN
						 JOB_LOG AS j ON j.JOB_NUMBER = EMP_TIME_DTL.JOB_NUMBER LEFT OUTER JOIN 
						 dbo.AGENCY_CLIENTS AS agy ON j.CL_CODE = agy.CL_CODE LEFT OUTER JOIN 
						 dbo.CLIENT AS c ON j.CL_CODE = c.CL_CODE	
					WHERE EMP_DATE BETWEEN @START_DATE AND @END_DATE AND EMP_CODE = @EMP_CODE
	UNION ALL
	SELECT EMP_TIME.EMP_CODE, 0,0,0,ISNULL(EMP_HOURS,0)
						FROM EMP_TIME_NP INNER JOIN
							EMP_TIME ON EMP_TIME_NP.ET_ID = EMP_TIME.ET_ID INNER JOIN
							EMPLOYEE ON EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
							TIME_CATEGORY ON EMP_TIME_NP.CATEGORY = TIME_CATEGORY.CATEGORY
						WHERE (EMP_TIME.EMP_DATE BETWEEN @START_DATE AND @END_DATE) AND EMP_TIME.EMP_CODE = @EMP_CODE) AS A GROUP BY A.EMP_CODE


END
/*=========== QUERY ===========*/