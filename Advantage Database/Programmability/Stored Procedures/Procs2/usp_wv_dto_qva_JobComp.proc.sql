if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_dto_qva_JobComp]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_dto_qva_JobComp]
GO

CREATE PROCEDURE [dbo].[usp_wv_dto_qva_JobComp] 
@TimeOnly Char(1),
@UserID varchar(100),
@JobNo integer,
@JobComp as smallint

AS
DECLARE @sql varchar(8000)
DECLARE @sql_from varchar(4000)
DECLARE @sql_where varchar(4000)
DECLARE @JOBSTR AS VARCHAR(10)
DECLARE @COMPSTR AS VARCHAR(3)

SET @JOBSTR = CAST(@JobNo as VARCHAR(10))
SET @COMPSTR = CAST(@JobComp AS VARCHAR(3))

CREATE TABLE #QVA( 	
	JOB_NUMBER			int NULL,
	JOB_COMPONENT_NBR	smallint NULL,
	QUOTED				Decimal (14,2) NULL,
	ACTUAL				Decimal (14,2) NULL,
	QUOTED_HRS			decimal(15,2) NULL,
	ACTUAL_HRS			decimal(15,2) NULL )

Set @sql = 'Insert INTO #QVA
		SELECT  EMP_TIME_DTL.JOB_NUMBER, EMP_TIME_DTL.JOB_COMPONENT_NBR, 
				0, Sum(EMP_TIME_DTL.LINE_TOTAL), 0, ISNULL(SUM(EMP_TIME_DTL.EMP_HOURS), 0.00) '
				
Set @sql_from = ' FROM  EMP_TIME_DTL '

Set @sql_where =  ' Where (EMP_TIME_DTL.EDIT_FLAG <> 1 OR EMP_TIME_DTL.EDIT_FLAG IS NULL) AND EMP_TIME_DTL.JOB_NUMBER = ' + @JOBSTR + ' AND EMP_TIME_DTL.JOB_COMPONENT_NBR = ' + @COMPSTR

Set @sql = @sql + @sql_from + @sql_where

Set @sql = @sql + ' Group By EMP_TIME_DTL.JOB_NUMBER, EMP_TIME_DTL.JOB_COMPONENT_NBR '

EXEC(@sql)
--print(@sql)		    
	

If @TimeOnly <> 'E'
	BEGIN
		Set @sql = 'Insert INTO #QVA
			SELECT INCOME_ONLY.JOB_NUMBER, INCOME_ONLY.JOB_COMPONENT_NBR, 
				 0, Sum(INCOME_ONLY.LINE_TOTAL), 0, ISNULL(SUM(INCOME_ONLY.IO_QTY), 0.00) '
		
		Set @sql_from = ' FROM INCOME_ONLY '
			
		Set @sql_where =  ' Where INCOME_ONLY.JOB_NUMBER = ' + @JOBSTR + ' AND INCOME_ONLY.JOB_COMPONENT_NBR = ' + @COMPSTR

		Set @sql = @sql + @sql_from + @sql_where

		Set @sql = @sql + ' Group By INCOME_ONLY.JOB_NUMBER, INCOME_ONLY.JOB_COMPONENT_NBR '

EXEC(@sql)	
--print(@sql)
		
		Set @sql = ' Insert INTO #QVA
			SELECT  AP_PRODUCTION.JOB_NUMBER, AP_PRODUCTION.JOB_COMPONENT_NBR, 
					0, Sum(AP_PRODUCTION.LINE_TOTAL), 0, ISNULL(SUM(AP_PRODUCTION.AP_PROD_QUANTITY), 0.00) '    
			
		Set @sql_from = ' FROM   AP_PRODUCTION '
					   	
		Set @sql_where = ' Where AP_PRODUCTION.JOB_NUMBER = ' + @JOBSTR + ' AND AP_PRODUCTION.JOB_COMPONENT_NBR = ' + @COMPSTR
		
		Set @sql = @sql + @sql_from + @sql_where

		Set @sql = @sql + ' Group By AP_PRODUCTION.JOB_NUMBER, AP_PRODUCTION.JOB_COMPONENT_NBR '

--print(@sql)
EXEC(@sql)	

	Declare @MaxBAID int

	SELECT @MaxBAID= MAX(BH.BA_ID)
	FROM BILL_APPR_DTL BD, BILL_APPR_HDR BH
	WHERE BH.JOB_NUMBER = @JOBSTR AND BH.JOB_COMPONENT_NBR = @COMPSTR
	AND BH.JOB_NUMBER = BD.JOB_NUMBER
	AND BH.JOB_COMPONENT_NBR = BD.JOB_COMPONENT_NBR
	AND BH.BA_ID = BD.BA_ID

	Set @sql = 'Insert INTO #QVA
			SELECT BILL_APPR_HDR.JOB_NUMBER, BILL_APPR_HDR.JOB_COMPONENT_NBR,  
			0, ISNULL(Sum(BILL_APPR_DTL.APPROVED_AMT),0), 0, ISNULL(Sum(BILL_APPR_DTL.QTY_HRS),0.00) '

	Set @sql_from = ' FROM BILL_APPR_HDR
		INNER JOIN BILL_APPR_DTL ON BILL_APPR_HDR.JOB_NUMBER = BILL_APPR_DTL.JOB_NUMBER
			AND BILL_APPR_HDR.JOB_COMPONENT_NBR = BILL_APPR_DTL.JOB_COMPONENT_NBR
			AND BILL_APPR_HDR.BA_ID = BILL_APPR_DTL.BA_ID '
							
	Set @sql_where = ' Where BILL_APPR_HDR.AR_INV_NBR IS NULL AND BILL_APPR_HDR.BA_ID = ' + CAST(@MaxBAID as VARCHAR(10)) + '
		And BILL_APPR_HDR.JOB_NUMBER = ' + @JOBSTR + ' AND BILL_APPR_HDR.JOB_COMPONENT_NBR = ' + @COMPSTR

	Set @sql = @sql + @sql_from + @sql_where

	Set @sql = @sql + ' Group By BILL_APPR_HDR.JOB_NUMBER, BILL_APPR_HDR.JOB_COMPONENT_NBR '

EXEC(@sql)	
--print(@sql)
END	


	DECLARE @HAS_EST_APPR AS INT, @HAS_EST_INT_APPR AS INT
	IF EXISTS(SELECT JOB_NUMBER FROM ESTIMATE_APPROVAL WHERE JOB_NUMBER = @JobNo AND JOB_COMPONENT_NBR = @JobComp)
		BEGIN
			SET @HAS_EST_APPR = 1
		END
		ELSE
		BEGIN
			SET @HAS_EST_APPR = 0
		END
		IF EXISTS(SELECT JOB_NUMBER FROM ESTIMATE_INT_APPR WHERE JOB_NUMBER = @JobNo AND JOB_COMPONENT_NBR = @JobComp)
		BEGIN
			SET @HAS_EST_INT_APPR = 1
		END
		ELSE
		BEGIN
			SET @HAS_EST_INT_APPR = 0
		END


	if @HAS_EST_APPR = 1
	BEGIN
		Set @sql = 'Insert INTO #QVA
			SELECT  ESTIMATE_APPROVAL.JOB_NUMBER, ESTIMATE_APPROVAL.JOB_COMPONENT_NBR, 
			ISNULL(Sum(ESTIMATE_REV_DET.LINE_TOTAL),0), 0, ISNULL(SUM(ESTIMATE_REV_DET.EST_REV_QUANTITY), 0.00), 0 '

		Set @sql_from = ' FROM	ESTIMATE_REV_DET 
							INNER JOIN ESTIMATE_APPROVAL ON ESTIMATE_REV_DET.ESTIMATE_NUMBER = ESTIMATE_APPROVAL.ESTIMATE_NUMBER 
								AND ESTIMATE_REV_DET.EST_COMPONENT_NBR = ESTIMATE_APPROVAL.EST_COMPONENT_NBR
								AND  ESTIMATE_REV_DET.EST_QUOTE_NBR = ESTIMATE_APPROVAL.EST_QUOTE_NBR 
								AND ESTIMATE_REV_DET.EST_REV_NBR = ESTIMATE_APPROVAL.EST_REVISION_NBR '
							   
		Set @sql_where = ' Where ESTIMATE_APPROVAL.JOB_NUMBER = ' + @JOBSTR + ' AND ESTIMATE_APPROVAL.JOB_COMPONENT_NBR = ' + @COMPSTR
		
		If @TimeOnly <> ''
			Set @sql_where = @sql_where + ' AND ESTIMATE_REV_DET.EST_FNC_TYPE = ''' +  @TimeOnly + ''''	
			
		Set @sql = @sql + @sql_from + @sql_where

		Set @sql = @sql + ' Group By ESTIMATE_APPROVAL.JOB_NUMBER,  ESTIMATE_APPROVAL.JOB_COMPONENT_NBR '

		EXEC(@sql)	
		--print(@sql)	
	END
	ELSE if @HAS_EST_APPR = 0 AND  @HAS_EST_INT_APPR = 1
	BEGIN
		Set @sql = 'Insert INTO #QVA
			SELECT  ESTIMATE_INT_APPR.JOB_NUMBER, ESTIMATE_INT_APPR.JOB_COMPONENT_NBR, 
			ISNULL(Sum(ESTIMATE_REV_DET.LINE_TOTAL),0), 0, ISNULL(SUM(ESTIMATE_REV_DET.EST_REV_QUANTITY), 0.00), 0 '

		Set @sql_from = ' FROM	ESTIMATE_REV_DET 
							INNER JOIN ESTIMATE_INT_APPR ON ESTIMATE_REV_DET.ESTIMATE_NUMBER = ESTIMATE_INT_APPR.ESTIMATE_NUMBER 
								AND ESTIMATE_REV_DET.EST_COMPONENT_NBR = ESTIMATE_INT_APPR.EST_COMPONENT_NBR
								AND  ESTIMATE_REV_DET.EST_QUOTE_NBR = ESTIMATE_INT_APPR.EST_QUOTE_NBR 
								AND ESTIMATE_REV_DET.EST_REV_NBR = ESTIMATE_INT_APPR.EST_REVISION_NBR '
							   
		Set @sql_where = ' Where ESTIMATE_INT_APPR.JOB_NUMBER = ' + @JOBSTR + ' AND ESTIMATE_INT_APPR.JOB_COMPONENT_NBR = ' + @COMPSTR
		
		If @TimeOnly <> ''
			Set @sql_where = @sql_where + ' AND ESTIMATE_REV_DET.EST_FNC_TYPE = ''' +  @TimeOnly + ''''	
			
		Set @sql = @sql + @sql_from + @sql_where

		Set @sql = @sql + ' Group By ESTIMATE_INT_APPR.JOB_NUMBER,  ESTIMATE_INT_APPR.JOB_COMPONENT_NBR '

		EXEC(@sql)	
		--print(@sql)	
	END
	


--SELECT * FROM #QVA		
Select  JOB_NUMBER, JOB_COMPONENT_NBR,
 SUM(QUOTED) as QUOTED, SUM(ACTUAL) AS ACTUAL, SUM(QUOTED_HRS) AS QUOTED_HRS, SUM(ACTUAL_HRS) AS ACTUAL_HRS 
From #QVA
Group By JOB_NUMBER, JOB_COMPONENT_NBR 

Drop Table #QVA


