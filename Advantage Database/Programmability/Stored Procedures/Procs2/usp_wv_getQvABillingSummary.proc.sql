if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_getQvABillingSummary]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[usp_wv_getQvABillingSummary]
GO

CREATE PROCEDURE [dbo].[usp_wv_getQvABillingSummary]
@JobNum Varchar(6),
@JobComp Varchar(6),
@Group varchar(10),
@CampaignID Int,
@IncludeClosedJobs smallint,
@DesktopObject varchar(10),
@UserID Varchar(100)

AS

CREATE TABLE #AB_TEMP (
	AR_INV_NBR INT,
	AR_INV_SEQ INT,
	AR_TYPE VARCHAR(3) COLLATE SQL_Latin1_General_CP1_CS_AS,
	cc_hrs_billed DECIMAL(14,2),
	cc_net_amt_billed DECIMAL(14,2),
	cc_markup_billed  DECIMAL(14,2),
	cc_resale_billed DECIMAL(14,2),
	cc_total_billed DECIMAL(14,2),
	cc_actual_billed DECIMAL(14,2)
)

CREATE TABLE #IO_TEMP (
	AR_INV_NBR INT,
	AR_INV_SEQ INT,
	AR_TYPE VARCHAR(3) COLLATE SQL_Latin1_General_CP1_CS_AS,
	cc_hrs_billed DECIMAL(14,2),
	cc_net_amt_billed DECIMAL(14,2),
	cc_markup_billed  DECIMAL(14,2),
	cc_resale_billed DECIMAL(14,2),
	cc_total_billed DECIMAL(14,2),
	cc_actual_billed DECIMAL(14,2)
)

CREATE TABLE #AP_TEMP (
	AR_INV_NBR INT,
	AR_INV_SEQ INT,
	AR_TYPE VARCHAR(3) COLLATE SQL_Latin1_General_CP1_CS_AS,
	cc_hrs_billed DECIMAL(14,2),
	cc_net_amt_billed DECIMAL(14,2),
	cc_markup_billed  DECIMAL(14,2),
	cc_resale_billed DECIMAL(14,2),
	cc_total_billed DECIMAL(14,2),
	cc_actual_billed DECIMAL(14,2)
)

CREATE TABLE #ETD_TEMP (
	AR_INV_NBR INT,
	AR_INV_SEQ INT,
	AR_TYPE VARCHAR(3) COLLATE SQL_Latin1_General_CP1_CS_AS,
	cc_hrs_billed DECIMAL(14,2),
	cc_net_amt_billed DECIMAL(14,2),
	cc_markup_billed  DECIMAL(14,2),
	cc_resale_billed DECIMAL(14,2),
	cc_total_billed DECIMAL(14,2),
	cc_actual_billed DECIMAL(14,2)
)

DECLARE	@INCLUDE_SALES_TAX BIT,
		@APP_VARS_APPLICATION VARCHAR(20),
		@InclClosedJobs VARCHAR(6)
SET @INCLUDE_SALES_TAX = 0

	IF @DesktopObject = 'All'
	BEGIN
	
		SET @APP_VARS_APPLICATION = 'AllQvA'
	
	END
	ELSE
	BEGIN
	
		SET @APP_VARS_APPLICATION = 'MyQvA'
	
	END

	SELECT @InclClosedJobs = VARIABLE_VALUE FROM APP_VARS WITH(NOLOCK) WHERE VARIABLE_NAME = 'InclClosedJobs' AND UPPER(USERID) = UPPER(@UserID) AND [APPLICATION] = @APP_VARS_APPLICATION;
	
	IF @InclClosedJobs IS NULL OR @InclClosedJobs = ''
	BEGIN
		IF @DesktopObject = 'All'
		BEGIN
	
			SET @APP_VARS_APPLICATION = 'ALL_QVA_DTO'
	
		END
		ELSE
		BEGIN
	
			SET @APP_VARS_APPLICATION = 'MY_QVA_DTO'
	
		END

		SELECT @InclClosedJobs = VARIABLE_VALUE FROM APP_VARS WITH(NOLOCK) WHERE VARIABLE_NAME = 'InclClosedJobs' AND UPPER(USERID) = UPPER(@UserID) AND [APPLICATION] = @APP_VARS_APPLICATION;
		
	END

	IF @InclClosedJobs IS NULL OR @InclClosedJobs = ''
	BEGIN
		SET @InclClosedJobs = 'False'
	END
	
	IF @InclClosedJobs = 'False' 
	BEGIN
		SET @IncludeClosedJobs = 0
	END
	ELSE
	BEGIN
		SET @IncludeClosedJobs = 1
	END

CREATE TABLE #job(
	RowID int IDENTITY(1, 1), 
	JobNo int,
	JobCompNo int)

	if @IncludeClosedJobs = 1
	Begin
		INSERT INTO #job 
		SELECT JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR 
		FROM JOB_LOG JL INNER JOIN JOB_COMPONENT JC ON JL.JOB_NUMBER = JC.JOB_NUMBER
		WHERE JL.CMP_IDENTIFIER = @CampaignID
	End
	Else
	Begin
		INSERT INTO #job 
		SELECT JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR 
		FROM JOB_LOG JL INNER JOIN JOB_COMPONENT JC ON JL.JOB_NUMBER = JC.JOB_NUMBER
		WHERE JL.CMP_IDENTIFIER = @CampaignID AND (NOT (JC.JOB_PROCESS_CONTRL IN (6, 12)) )
	End

IF @Group = 'job'
BEGIN
	--INSERT INTO #AB_TEMP
	--SELECT AR_INV_NBR, AR_INV_SEQ, AR_TYPE,
 -- 		0.00,  
	--	COALESCE( SUM( COALESCE( ADV_BILL_NET_AMT, 0 ) + COALESCE( EXT_NONRESALE_TAX, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_MARKUP_AMT, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ),
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ) - ( COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ) )
	--FROM ADVANCE_BILLING 
	--WHERE JOB_NUMBER = @JobNum 
	--GROUP BY AR_INV_NBR, AR_INV_SEQ, AR_TYPE

	--INSERT INTO #IO_TEMP 
	--SELECT AR_INV_NBR, AR_INV_SEQ, AR_TYPE,
 --  		COALESCE( SUM( COALESCE( IO_QTY, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( IO_AMOUNT, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_MARKUP_AMT, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ),
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ) - ( COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ))
	--FROM INCOME_ONLY 
	--WHERE  JOB_NUMBER = @JobNum 
	--GROUP BY AR_INV_NBR, AR_INV_SEQ, AR_TYPE

	--INSERT INTO #AP_TEMP
	--SELECT 	AR_INV_NBR, AR_INV_SEQ, AR_TYPE,
	--	COALESCE( SUM( COALESCE( AP_PROD_QUANTITY, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( AP_PROD_EXT_AMT, 0 ) + COALESCE( EXT_NONRESALE_TAX, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_MARKUP_AMT, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ),
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ) - ( COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ) )
	--FROM AP_PRODUCTION
	--WHERE  JOB_NUMBER = @JobNum 
	--GROUP BY AR_INV_NBR, AR_INV_SEQ, AR_TYPE

	--INSERT INTO #ETD_TEMP
	--SELECT AR_INV_NBR, AR_INV_SEQ, AR_TYPE,
 -- 		COALESCE( SUM( COALESCE( EMP_HOURS, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( TOTAL_BILL, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_MARKUP_AMT, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ), 
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ),
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ) - ( COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ) )

	--FROM EMP_TIME_DTL
	--WHERE  JOB_NUMBER = @JobNum 
	--GROUP BY AR_INV_NBR, AR_INV_SEQ, AR_TYPE
	
	--SELECT DISTINCT ACCT_REC.AR_INV_NBR,
	--	ACCT_REC.AR_INV_DATE,
	--	ACCT_REC.AR_POST_PERIOD,
	--	CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE ISNULL( #AP_TEMP.cc_hrs_billed, 0 ) + ISNULL( #ETD_TEMP.cc_hrs_billed, 0 ) + ISNULL(#IO_TEMP.cc_hrs_billed,0) END AS cc_hrs_billed,    
	--	CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE ISNULL( #AB_TEMP.cc_net_amt_billed, 0 ) + ISNULL( #AP_TEMP.cc_net_amt_billed, 0 )  + ISNULL( #ETD_TEMP.cc_net_amt_billed, 0 ) + ISNULL(#IO_TEMP.cc_net_amt_billed,0) END AS cc_net_amt_billed,      
	--	CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE ISNULL(#AB_TEMP.cc_markup_billed, 0 ) + ISNULL( #AP_TEMP.cc_markup_billed, 0 ) + ISNULL( #ETD_TEMP.cc_markup_billed, 0 ) + ISNULL(#IO_TEMP.cc_markup_billed,0) END AS cc_markup_billed,     
	--	CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE ISNULL( #AB_TEMP.cc_actual_billed, 0 )  + ISNULL( #AP_TEMP.cc_actual_billed, 0 ) + ISNULL( #ETD_TEMP.cc_actual_billed, 0 ) + ISNULL(#IO_TEMP.cc_actual_billed,0) END AS cc_actual_billed,  
	--	CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE ISNULL( #AB_TEMP.cc_resale_billed, 0 ) + ISNULL( #AP_TEMP.cc_resale_billed, 0 )  + ISNULL( #ETD_TEMP.cc_resale_billed, 0 ) + ISNULL(#IO_TEMP.cc_resale_billed,0) END AS cc_resale_billed,     
	--	CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE ISNULL( #AB_TEMP.cc_total_billed, 0 ) + ISNULL( #AP_TEMP.cc_total_billed, 0 ) + ISNULL( #ETD_TEMP.cc_total_billed, 0 ) + ISNULL(#IO_TEMP.cc_total_billed,0) END AS cc_total_billed    
	--FROM ACCT_REC 
	--	INNER JOIN ARINV_JOB  ON ACCT_REC.AR_INV_NBR = ARINV_JOB.AR_INV_NBR  
 -- 					 AND ACCT_REC.AR_INV_SEQ = ARINV_JOB.AR_INV_SEQ 
 -- 					 AND ACCT_REC.AR_TYPE = ARINV_JOB.AR_TYPE
	--	LEFT OUTER JOIN #AB_TEMP  ON ACCT_REC.AR_INV_NBR = #AB_TEMP.AR_INV_NBR  
 -- 						AND ACCT_REC.AR_INV_SEQ = #AB_TEMP.AR_INV_SEQ
 -- 						AND ACCT_REC.AR_TYPE = #AB_TEMP.AR_TYPE
 -- 		LEFT OUTER JOIN #AP_TEMP ON ACCT_REC.AR_INV_NBR = #AP_TEMP.AR_INV_NBR  
 -- 						 AND ACCT_REC.AR_INV_SEQ = #AP_TEMP.AR_INV_SEQ
 -- 						 AND ACCT_REC.AR_TYPE = #AP_TEMP.AR_TYPE
 -- 		LEFT OUTER JOIN #ETD_TEMP ON ACCT_REC.AR_INV_NBR = #ETD_TEMP.AR_INV_NBR  
 -- 						AND ACCT_REC.AR_INV_SEQ = #ETD_TEMP.AR_INV_SEQ
 -- 						AND ACCT_REC.AR_TYPE = #ETD_TEMP.AR_TYPE
 -- 		LEFT OUTER JOIN #IO_TEMP ON ACCT_REC.AR_INV_NBR = #IO_TEMP.AR_INV_NBR  
 -- 						AND ACCT_REC.AR_INV_SEQ = #IO_TEMP.AR_INV_SEQ
 -- 						AND ACCT_REC.AR_TYPE = #IO_TEMP.AR_TYPE

	--WHERE ARINV_JOB.JOB_NUMBER = @JobNum 
	--ORDER BY ACCT_REC.AR_INV_NBR DESC

	SELECT DISTINCT AR.AR_INV_NBR,AR.AR_INV_SEQ,
		AR.AR_TYPE,
		ACCT_REC.AR_INV_DATE,
		ACCT_REC.AR_POST_PERIOD,
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.HRS_QTY, 0 )) END AS cc_hrs_billed,   
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.COST_AMT,0) + ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)+ISNULL(AR.AB_NONRESALE_AMT,0)) END AS cc_net_amt_billed,      
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.COMMISSION_AMT, 0) + ISNULL(AR.AB_COMMISSION_AMT, 0)) END AS cc_markup_billed,   
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.AB_SALE_AMT,0)) END AS cc_advance_refrained, 
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.TOTAL_BILL, 0)) - SUM(ISNULL(AR.CITY_TAX_AMT, 0) + ISNULL( AR.CNTY_TAX_AMT, 0) + ISNULL(AR.STATE_TAX_AMT,0)) END AS cc_actual_billed,  
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.CITY_TAX_AMT, 0) + ISNULL(AR.CNTY_TAX_AMT, 0) + ISNULL(AR.STATE_TAX_AMT,0)) END AS cc_resale_billed,     
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.TOTAL_BILL, 0)) END AS cc_total_billed,
		(SELECT COUNT(1) FROM ARINV_DOCUMENT WHERE AR_INV_NBR = AR.AR_INV_NBR AND AR_INV_SEQ = AR.AR_INV_SEQ) AS AttachmentCount,
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 'No' ELSE 
			CASE WHEN SUM(ISNULL(AR.TOTAL_BILL, 0)) - (SELECT (SUM(COALESCE(CCD.CR_PAY_AMT,0)) + SUM(COALESCE(CCD.CR_ADJ_AMT,0))) FROM CR_CLIENT_DTL CCD 
															WHERE AR.AR_INV_NBR = CCD.AR_INV_NBR AND AR.AR_INV_SEQ = CCD.AR_INV_SEQ AND AR.AR_TYPE = CCD.AR_TYPE) = 0 THEN 'Yes' ELSE 'No' END END AS Paid,
		ISNULL((SELECT (SUM(COALESCE(CCD.CR_PAY_AMT,0)) + SUM(COALESCE(CCD.CR_ADJ_AMT,0))) FROM CR_CLIENT_DTL CCD 
															WHERE AR.AR_INV_NBR = CCD.AR_INV_NBR AND AR.AR_INV_SEQ = CCD.AR_INV_SEQ AND AR.AR_TYPE = CCD.AR_TYPE),0) AS PaidAmount      
	FROM AR_SUMMARY AR 
		INNER JOIN ACCT_REC ON ACCT_REC.AR_INV_NBR = AR.AR_INV_NBR AND ACCT_REC.AR_INV_SEQ = AR.AR_INV_SEQ AND ACCT_REC.AR_TYPE = AR.AR_TYPE
	WHERE AR.JOB_NUMBER = @JobNum AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACCT_REC.AR_INV_SEQ = 99 OR ACCT_REC.AR_INV_SEQ = 0)
	GROUP BY AR.AR_INV_NBR,AR.AR_INV_SEQ,
		AR.AR_TYPE,
		ACCT_REC.AR_INV_DATE,
		ACCT_REC.AR_POST_PERIOD,ACCT_REC.VOID_FLAG
	ORDER BY AR.AR_INV_NBR DESC
END
ELSE IF @Group = 'campaign'
BEGIN
	SELECT DISTINCT AR.AR_INV_NBR,AR.AR_INV_SEQ,
		AR.AR_TYPE,
		ACCT_REC.AR_INV_DATE,
		ACCT_REC.AR_POST_PERIOD,
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.HRS_QTY, 0 )) END AS cc_hrs_billed,   
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.COST_AMT,0) + ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)+ISNULL(AR.AB_NONRESALE_AMT,0)) END AS cc_net_amt_billed,      
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.COMMISSION_AMT, 0) + ISNULL(AR.AB_COMMISSION_AMT, 0)) END AS cc_markup_billed,   
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.AB_SALE_AMT,0)) END AS cc_advance_refrained, 
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.TOTAL_BILL, 0)) - SUM(ISNULL(AR.CITY_TAX_AMT, 0) + ISNULL( AR.CNTY_TAX_AMT, 0) + ISNULL(AR.STATE_TAX_AMT,0)) END AS cc_actual_billed,  
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.CITY_TAX_AMT, 0) + ISNULL(AR.CNTY_TAX_AMT, 0) + ISNULL(AR.STATE_TAX_AMT,0)) END AS cc_resale_billed,     
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.TOTAL_BILL, 0)) END AS cc_total_billed,
		(SELECT COUNT(1) FROM ARINV_DOCUMENT WHERE AR_INV_NBR = AR.AR_INV_NBR AND AR_INV_SEQ = AR.AR_INV_SEQ) AS AttachmentCount,
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 'No' ELSE 
			CASE WHEN SUM(ISNULL(AR.TOTAL_BILL, 0)) - (SELECT (SUM(COALESCE(CCD.CR_PAY_AMT,0)) + SUM(COALESCE(CCD.CR_ADJ_AMT,0))) FROM CR_CLIENT_DTL CCD 
															WHERE AR.AR_INV_NBR = CCD.AR_INV_NBR AND AR.AR_INV_SEQ = CCD.AR_INV_SEQ AND AR.AR_TYPE = CCD.AR_TYPE) = 0 THEN 'Yes' ELSE 'No' END END AS Paid,
		ISNULL((SELECT (SUM(COALESCE(CCD.CR_PAY_AMT,0)) + SUM(COALESCE(CCD.CR_ADJ_AMT,0))) FROM CR_CLIENT_DTL CCD 
															WHERE AR.AR_INV_NBR = CCD.AR_INV_NBR AND AR.AR_INV_SEQ = CCD.AR_INV_SEQ AND AR.AR_TYPE = CCD.AR_TYPE),0) AS PaidAmount      
	FROM AR_SUMMARY AR 
		INNER JOIN ACCT_REC ON ACCT_REC.AR_INV_NBR = AR.AR_INV_NBR AND ACCT_REC.AR_INV_SEQ = AR.AR_INV_SEQ AND ACCT_REC.AR_TYPE = AR.AR_TYPE
		INNER JOIN #job ON #job.JobNo = AR.JOB_NUMBER AND #job.JobCompNo = AR.JOB_COMPONENT_NBR
	WHERE (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACCT_REC.AR_INV_SEQ = 99 OR ACCT_REC.AR_INV_SEQ = 0)
	GROUP BY AR.AR_INV_NBR,AR.AR_INV_SEQ,
		AR.AR_TYPE,
		ACCT_REC.AR_INV_DATE,
		ACCT_REC.AR_POST_PERIOD,ACCT_REC.VOID_FLAG
	ORDER BY AR.AR_INV_NBR DESC
END
ELSE
BEGIN
	--INSERT INTO #AB_TEMP
	--SELECT AR_INV_NBR, AR_INV_SEQ, AR_TYPE,
 -- 		0.00,  
	--	COALESCE( SUM( COALESCE( ADV_BILL_NET_AMT, 0 ) + COALESCE( EXT_NONRESALE_TAX, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_MARKUP_AMT, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ),
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ) - ( COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ) )
	--FROM ADVANCE_BILLING 
	--WHERE JOB_NUMBER = @JobNum AND JOB_COMPONENT_NBR = @JobComp  
	--GROUP BY AR_INV_NBR, AR_INV_SEQ, AR_TYPE

	--INSERT INTO #IO_TEMP 
	--SELECT AR_INV_NBR, AR_INV_SEQ, AR_TYPE,
 --  		COALESCE( SUM( COALESCE( IO_QTY, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( IO_AMOUNT, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_MARKUP_AMT, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ),
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ) - ( COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ))
	--FROM INCOME_ONLY 
	--WHERE  JOB_NUMBER = @JobNum AND JOB_COMPONENT_NBR = @JobComp
	--GROUP BY AR_INV_NBR, AR_INV_SEQ, AR_TYPE

	--INSERT INTO #AP_TEMP
	--SELECT 	AR_INV_NBR, AR_INV_SEQ, AR_TYPE,
	--	COALESCE( SUM( COALESCE( AP_PROD_QUANTITY, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( AP_PROD_EXT_AMT, 0 ) + COALESCE( EXT_NONRESALE_TAX, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_MARKUP_AMT, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ),
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ) - ( COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ) )
	--FROM AP_PRODUCTION
	--WHERE  JOB_NUMBER = @JobNum AND JOB_COMPONENT_NBR = @JobComp
	--GROUP BY AR_INV_NBR, AR_INV_SEQ, AR_TYPE

	--INSERT INTO #ETD_TEMP
	--SELECT AR_INV_NBR, AR_INV_SEQ, AR_TYPE,
 -- 		COALESCE( SUM( COALESCE( EMP_HOURS, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( TOTAL_BILL, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_MARKUP_AMT, 0 )), 0 ),  
	--	COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ), 
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ),
	--	COALESCE( SUM( COALESCE( LINE_TOTAL, 0 )), 0 ) - ( COALESCE( SUM( COALESCE( EXT_STATE_RESALE, 0 ) + COALESCE( EXT_COUNTY_RESALE, 0 ) + COALESCE( EXT_CITY_RESALE, 0 )), 0 ) )

	--FROM EMP_TIME_DTL
	--WHERE  JOB_NUMBER = @JobNum AND JOB_COMPONENT_NBR = @JobComp
	--GROUP BY AR_INV_NBR, AR_INV_SEQ, AR_TYPE
  
	--SELECT ACCT_REC.AR_INV_NBR,
	--	ACCT_REC.AR_INV_DATE,
	--	ACCT_REC.AR_POST_PERIOD,
	--	CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE ISNULL( #AP_TEMP.cc_hrs_billed, 0 ) + ISNULL( #ETD_TEMP.cc_hrs_billed, 0 ) + ISNULL(#IO_TEMP.cc_hrs_billed,0) END AS cc_hrs_billed,    
	--	CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE ISNULL( #AB_TEMP.cc_net_amt_billed, 0 ) + ISNULL( #AP_TEMP.cc_net_amt_billed, 0 )  + ISNULL( #ETD_TEMP.cc_net_amt_billed, 0 ) + ISNULL(#IO_TEMP.cc_net_amt_billed,0) END AS cc_net_amt_billed,      
	--	CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE ISNULL(#AB_TEMP.cc_markup_billed, 0 ) + ISNULL( #AP_TEMP.cc_markup_billed, 0 ) + ISNULL( #ETD_TEMP.cc_markup_billed, 0 ) + ISNULL(#IO_TEMP.cc_markup_billed,0) END AS cc_markup_billed,     
	--	CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE ISNULL( #AB_TEMP.cc_actual_billed, 0 )  + ISNULL( #AP_TEMP.cc_actual_billed, 0 ) + ISNULL( #ETD_TEMP.cc_actual_billed, 0 ) + ISNULL(#IO_TEMP.cc_actual_billed,0) END AS cc_actual_billed,  
	--	CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE ISNULL( #AB_TEMP.cc_resale_billed, 0 ) + ISNULL( #AP_TEMP.cc_resale_billed, 0 )  + ISNULL( #ETD_TEMP.cc_resale_billed, 0 ) + ISNULL(#IO_TEMP.cc_resale_billed,0) END AS cc_resale_billed,     
	--	CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE ISNULL( #AB_TEMP.cc_total_billed, 0 ) + ISNULL( #AP_TEMP.cc_total_billed, 0 ) + ISNULL( #ETD_TEMP.cc_total_billed, 0 ) + ISNULL(#IO_TEMP.cc_total_billed,0) END AS cc_total_billed    
	--FROM ACCT_REC 
	--	INNER JOIN ARINV_JOB  ON ACCT_REC.AR_INV_NBR = ARINV_JOB.AR_INV_NBR  
 -- 					 AND ACCT_REC.AR_INV_SEQ = ARINV_JOB.AR_INV_SEQ 
 -- 					 AND ACCT_REC.AR_TYPE = ARINV_JOB.AR_TYPE
	--	LEFT OUTER JOIN #AB_TEMP  ON ACCT_REC.AR_INV_NBR = #AB_TEMP.AR_INV_NBR  
 -- 						AND ACCT_REC.AR_INV_SEQ = #AB_TEMP.AR_INV_SEQ
 -- 						AND ACCT_REC.AR_TYPE = #AB_TEMP.AR_TYPE
 -- 		LEFT OUTER JOIN #AP_TEMP ON ACCT_REC.AR_INV_NBR = #AP_TEMP.AR_INV_NBR  
 -- 						 AND ACCT_REC.AR_INV_SEQ = #AP_TEMP.AR_INV_SEQ
 -- 						 AND ACCT_REC.AR_TYPE = #AP_TEMP.AR_TYPE
 -- 		LEFT OUTER JOIN #ETD_TEMP ON ACCT_REC.AR_INV_NBR = #ETD_TEMP.AR_INV_NBR  
 -- 						AND ACCT_REC.AR_INV_SEQ = #ETD_TEMP.AR_INV_SEQ
 -- 						AND ACCT_REC.AR_TYPE = #ETD_TEMP.AR_TYPE
 -- 		LEFT OUTER JOIN #IO_TEMP ON ACCT_REC.AR_INV_NBR = #IO_TEMP.AR_INV_NBR  
 -- 						AND ACCT_REC.AR_INV_SEQ = #IO_TEMP.AR_INV_SEQ
 -- 						AND ACCT_REC.AR_TYPE = #IO_TEMP.AR_TYPE

	--WHERE ARINV_JOB.JOB_NUMBER = @JobNum AND ARINV_JOB.JOB_COMPONENT_NBR = @JobComp 
	--ORDER BY ACCT_REC.AR_INV_NBR DESC

	SELECT DISTINCT AR.AR_INV_NBR,AR.AR_INV_SEQ,
		AR.AR_TYPE,
		ACCT_REC.AR_INV_DATE,
		ACCT_REC.AR_POST_PERIOD,
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.HRS_QTY, 0 )) END AS cc_hrs_billed,   
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.COST_AMT,0) + ISNULL(AR.AB_COST_AMT,0)+ISNULL(AR.NON_RESALE_AMT,0)+ISNULL(AR.AB_NONRESALE_AMT,0)) END AS cc_net_amt_billed,      
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.COMMISSION_AMT, 0) + ISNULL(AR.AB_COMMISSION_AMT, 0)) END AS cc_markup_billed,   
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.AB_SALE_AMT,0)) END AS cc_advance_refrained, 
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.TOTAL_BILL, 0)) - SUM(ISNULL(AR.CITY_TAX_AMT, 0) + ISNULL( AR.CNTY_TAX_AMT, 0) + ISNULL(AR.STATE_TAX_AMT,0)) END AS cc_actual_billed,  
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.CITY_TAX_AMT, 0) + ISNULL(AR.CNTY_TAX_AMT, 0) + ISNULL(AR.STATE_TAX_AMT,0)) END AS cc_resale_billed,     
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 0 ELSE SUM(ISNULL(AR.TOTAL_BILL, 0)) END AS cc_total_billed,
		(SELECT COUNT(1) FROM ARINV_DOCUMENT WHERE AR_INV_NBR = AR.AR_INV_NBR AND AR_INV_SEQ = AR.AR_INV_SEQ) AS AttachmentCount,    
		--(SELECT (SUM(COALESCE(CCD.CR_PAY_AMT,0)) + SUM(COALESCE(CCD.CR_ADJ_AMT,0))) FROM CR_CLIENT_DTL CCD 
		--													WHERE AR.AR_INV_NBR = CCD.AR_INV_NBR AND AR.AR_INV_SEQ = CCD.AR_INV_SEQ AND AR.AR_TYPE = CCD.AR_TYPE) AS Payments,
		CASE WHEN ACCT_REC.VOID_FLAG = 1 THEN 'No' ELSE 
			CASE WHEN SUM(ISNULL(AR.TOTAL_BILL, 0)) - (SELECT (SUM(COALESCE(CCD.CR_PAY_AMT,0)) + SUM(COALESCE(CCD.CR_ADJ_AMT,0))) FROM CR_CLIENT_DTL CCD 
															WHERE AR.AR_INV_NBR = CCD.AR_INV_NBR AND AR.AR_INV_SEQ = CCD.AR_INV_SEQ AND AR.AR_TYPE = CCD.AR_TYPE) = 0 THEN 'Yes' ELSE 'No' END END AS Paid,
		ISNULL((SELECT (SUM(COALESCE(CCD.CR_PAY_AMT,0)) + SUM(COALESCE(CCD.CR_ADJ_AMT,0))) FROM CR_CLIENT_DTL CCD 
															WHERE AR.AR_INV_NBR = CCD.AR_INV_NBR AND AR.AR_INV_SEQ = CCD.AR_INV_SEQ AND AR.AR_TYPE = CCD.AR_TYPE),0) AS PaidAmount
	FROM AR_SUMMARY AR 
		INNER JOIN ACCT_REC ON ACCT_REC.AR_INV_NBR = AR.AR_INV_NBR AND ACCT_REC.AR_INV_SEQ = AR.AR_INV_SEQ AND ACCT_REC.AR_TYPE = AR.AR_TYPE
	WHERE AR.JOB_NUMBER = @JobNum AND AR.JOB_COMPONENT_NBR = @JobComp AND (AR.AR_INV_SEQ = 99 OR AR.AR_INV_SEQ = 0) AND (ACCT_REC.AR_INV_SEQ = 99 OR ACCT_REC.AR_INV_SEQ = 0)
	GROUP BY AR.AR_INV_NBR,AR.AR_INV_SEQ,
		AR.AR_TYPE,
		ACCT_REC.AR_INV_DATE,
		ACCT_REC.AR_POST_PERIOD,ACCT_REC.VOID_FLAG
	ORDER BY AR.AR_INV_NBR DESC


END



