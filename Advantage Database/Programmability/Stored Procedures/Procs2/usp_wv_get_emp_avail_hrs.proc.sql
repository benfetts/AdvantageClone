
CREATE PROCEDURE usp_wv_get_emp_avail_hrs 
	@emp_code 	varchar(6),
	@start_date	varchar(12),
	@end_date	varchar(12)

AS
SET NOCOUNT ON

DECLARE @DAYOFWEEK 	INTEGER
DECLARE @CURRENT_DATE 	SMALLDATETIME
DECLARE @STARTDAY 	INTEGER
DECLARE @ENDDAY 	INTEGER
DECLARE @DAYIDX 	INTEGER
DECLARE @MONTHS_NBR	INTEGER
DECLARE	@WEEKS_NBR	INTEGER
DECLARE	@DAYS_NBR	INTEGER
DECLARE @CURRENT_DAY	INTEGER
DECLARE @startdate	smalldatetime
DECLARE @enddate	smalldatetime
DECLARE @WEEK		INTEGER
DECLARE @MONTH		INTEGER

SELECT @startdate = CAST(@start_date AS SMALLDATETIME)
SELECT @enddate = CAST(@end_date AS SMALLDATETIME)


CREATE TABLE #W_EMP_WEEKDAY_HRS (
	EMP_CODE VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS, 
	WEEKDAY INT, 
	HOURS DECIMAL(9,3)
)

INSERT INTO #W_EMP_WEEKDAY_HRS

SELECT EMP_CODE,1 AS WEEKDAY, ISNULL(SUN_HRS,0)
FROM EMPLOYEE WHERE EMP_CODE = @emp_code 
UNION
SELECT EMP_CODE,2 AS WEEKDAY, ISNULL(MON_HRS,0)
FROM EMPLOYEE WHERE EMP_CODE = @emp_code 
UNION
SELECT EMP_CODE,3 AS WEEKDAY, ISNULL(TUE_HRS,0)
FROM EMPLOYEE WHERE EMP_CODE = @emp_code 
UNION
SELECT EMP_CODE,4 AS WEEKDAY, ISNULL(WED_HRS,0)
FROM EMPLOYEE WHERE EMP_CODE = @emp_code 
UNION
SELECT EMP_CODE,5 AS WEEKDAY, ISNULL(THU_HRS,0)
FROM EMPLOYEE WHERE EMP_CODE = @emp_code 
UNION
SELECT EMP_CODE,6 AS WEEKDAY, ISNULL(FRI_HRS,0)
FROM EMPLOYEE WHERE EMP_CODE = @emp_code 
UNION
SELECT EMP_CODE,7 AS WEEKDAY, ISNULL(SAT_HRS,0)
FROM EMPLOYEE WHERE EMP_CODE = @emp_code 


CREATE TABLE #W_NONTASK_TEMP (
	EMP_CODE 	VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
	YEAR		INT,
	MONTH		INT,
	DAY			INT,
	WEEK		INT,
	WEEKDAY		INT, 
	DAYOFYEAR	INT, 
    ALL_DAY		INT,
	HOURS		DECIMAL(9,3),
	WORKDAY_HRS	DECIMAL(9,3),
	HOURS_AVAIL	DECIMAL(9,3)
)

INSERT INTO #W_NONTASK_TEMP 
SELECT 	ET.EMP_CODE, 
	DATEPART(year, ET.START_DATE),
	DATEPART(month, ET.START_DATE),
	DATEPART(day, ET.START_DATE),
	DATEPART(week, ET.START_DATE),
	DATEPART(weekday, ET.START_DATE), 
	DATEPART(dayofyear, ET.START_DATE), 
    ET.ALL_DAY,
	ISNULL(ET.HOURS,0),
	ISNULL(EWH.HOURS,0),
	CASE ET.ALL_DAY WHEN 0 THEN EWH.HOURS - ET.HOURS
		ELSE 0 END 
FROM EMP_NON_TASKS ET
	INNER JOIN TIME_CATEGORY ON ET.CATEGORY = TIME_CATEGORY.CATEGORY AND VAC_SICK_FLAG IN (1,2,3)
	INNER JOIN #W_EMP_WEEKDAY_HRS EWH ON DATEPART(weekday, ET.START_DATE) = EWH.WEEKDAY 
	   AND ( ET.EMP_CODE = EWH.EMP_CODE OR ET.EMP_CODE IS NULL )
WHERE ET.START_DATE BETWEEN @startdate AND @enddate
AND ( ET.EMP_CODE = @emp_code OR ET.TYPE = 'H' )




CREATE TABLE #W_CALENDAR_MATRIX (
	DAYOFYEAR 	INT,
	WEEKDAY 	INT,
	WEEK		INT,
	MONTH		INT
)


SELECT @DAYS_NBR   = DATEDIFF ( day , @startdate , @enddate )
SELECT @WEEKS_NBR  = DATEDIFF ( week , @startdate , @enddate )
SELECT @MONTHS_NBR = DATEDIFF ( month , @startdate , @enddate )

SELECT @STARTDAY = DATEPART(dayofyear, @startdate)
SELECT @ENDDAY = @STARTDAY + @DAYS_NBR
SELECT @DAYIDX = @STARTDAY
SELECT @CURRENT_DATE = @startdate


WHILE @DAYIDX < @ENDDAY + 1
BEGIN
	SELECT @DAYOFWEEK = DATEPART(weekday, @CURRENT_DATE)
	SELECT @CURRENT_DAY = DATEPART(dayofyear, @CURRENT_DATE)
	SELECT @WEEK  = DATEPART(week, @CURRENT_DATE)
	SELECT @MONTH  = DATEPART(month, @CURRENT_DATE)
	INSERT INTO #W_CALENDAR_MATRIX (DAYOFYEAR, WEEKDAY, WEEK, MONTH) VALUES(@CURRENT_DAY, @DAYOFWEEK, @WEEK, @MONTH)
	SELECT @CURRENT_DATE = DATEADD(Day, 1, @CURRENT_DATE)
	SELECT @DAYIDX = @DAYIDX + 1
END


CREATE TABLE #W_DAY_WK_HRS_MATRIX (
	EMP_CODE	VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
	DAYOFYEAR 	INT,
	WEEK		INT,
	MONTH		INT,
	WEEKDAY 	INT,
	HOURS		DECIMAL(9,3)
)

INSERT INTO #W_DAY_WK_HRS_MATRIX
SELECT EWH.EMP_CODE, WCM.DAYOFYEAR, WCM.WEEK, WCM.MONTH, EWH.WEEKDAY, EWH.HOURS
FROM #W_EMP_WEEKDAY_HRS EWH, #W_CALENDAR_MATRIX WCM
WHERE EWH.WEEKDAY = WCM.WEEKDAY


INSERT INTO #W_EMP_HRS_AVAIL
SELECT EMP_CODE, DAYOFYEAR, WEEK, MONTH, ISNULL(HOURS_AVAIL,0)
FROM  #W_NONTASK_TEMP
UNION ALL
SELECT EMP_CODE, DAYOFYEAR, WEEK, MONTH, ISNULL(HOURS,0)
FROM #W_DAY_WK_HRS_MATRIX
WHERE DAYOFYEAR NOT IN (SELECT DAYOFYEAR FROM #W_NONTASK_TEMP)

CREATE TABLE #W_EMP_NONWORK_HRS (
EMP_CODE VARCHAR(6) COLLATE SQL_Latin1_General_CP1_CS_AS,
DAYOFYEAR 	INT,
WEEK		INT,
MONTH		INT,
HRS DECIMAL(9,3)
)

INSERT INTO #W_EMP_NONWORK_HRS
SELECT 	ET.EMP_CODE, 
DATEPART(dayofyear, ET.START_DATE),
DATEPART(week, ET.START_DATE),
DATEPART(month, ET.START_DATE),
CASE ET.ALL_DAY WHEN 0 THEN ET.HOURS
		ELSE 8 END           
FROM EMP_NON_TASKS ET
  INNER JOIN TIME_CATEGORY ON ET.CATEGORY = TIME_CATEGORY.CATEGORY AND VAC_SICK_FLAG IN (1,2,3)
WHERE ET.START_DATE BETWEEN @startdate AND @enddate
AND ( ET.EMP_CODE = @emp_code OR ET.TYPE = 'H' )



CREATE TABLE #W_TEMP_HRS (
DAYOFYEAR 	INT,
HRS DECIMAL(9,3)
)

INSERT INTO #W_TEMP_HRS
--SELECT ENW.DAYOFYEAR,  EHA.HOURS - ENW.HRS AS HRS
--FROM #W_EMP_NONWORK_HRS ENW, #W_EMP_HRS_AVAIL EHA
--WHERE ENW.DAYOFYEAR = EHA.DAYOFYEAR
SELECT ENW.DAYOFYEAR,  CASE WHEN EHA.HOURS - ENW.HRS < 0 THEN 0 ELSE EHA.HOURS - ENW.HRS END
FROM #W_EMP_NONWORK_HRS ENW, #W_DAY_WK_HRS_MATRIX EHA
WHERE ENW.DAYOFYEAR = EHA.DAYOFYEAR 

UPDATE #W_EMP_HRS_AVAIL 
SET HOURS = HRS FROM #W_TEMP_HRS WHERE #W_EMP_HRS_AVAIL.DAYOFYEAR = #W_TEMP_HRS.DAYOFYEAR

----ST:  REMOVE HOLIDAYS FROM AVAILABLE HOURS:??
UPDATE #W_EMP_HRS_AVAIL
SET #W_EMP_HRS_AVAIL.HOURS = 0
WHERE #W_EMP_HRS_AVAIL.DAYOFYEAR IN (SELECT DATEPART(dayofyear, START_DATE) FROM EMP_NON_TASKS WHERE TYPE = 'H' AND EMP_NON_TASKS.ALL_DAY = 1);


--DECLARE @NON_PROD_HRS_SUM DECIMAL(9,3)
--DECLARE @PROD_HRS_SUM DECIMAL(9,3)
--DECLARE @SUM_HRS_TOTAL DECIMAL(9,3)

--SELECT @NON_PROD_HRS_SUM =  SUM(HRS) FROM W_EMP_NONWORK_HRS
--SELECT @PROD_HRS_SUM = SUM(HOURS) FROM W_EMP_HRS_AVAIL
--SELECT @SUM_HRS_TOTAL = @PROD_HRS_SUM - @NON_PROD_HRS_SUM

--If	@SUM_HRS_TOTAL IS NULL 
--	set @SUM_HRS_TOTAL = 0
	
--UPDATE W_EMP_HRS_AVAIL SET HOURS = @SUM_HRS_TOTAL


--DROP TABLE W_EMP_WEEKDAY_HRS
--DROP TABLE W_NONTASK_TEMP
--DROP TABLE W_CALENDAR_MATRIX
--DROP TABLE W_DAY_WK_HRS_MATRIX
--DROP TABLE W_EMP_NONWORK_HRS
--DROP TABLE W_TEMP_HRS

SET QUOTED_IDENTIFIER ON 
