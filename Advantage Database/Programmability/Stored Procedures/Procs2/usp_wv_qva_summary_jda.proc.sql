SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_qva_summary_jda]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_qva_summary_jda]
GO
CREATE PROCEDURE [dbo].[usp_wv_qva_summary_jda] /*WITH ENCRYPTION*/
@UserID VarChar(100),
--@JobNum Varchar(6),
--@JobComp Varchar(6),
@Emps Varchar(2000),
@Display Varchar(20)
AS
/*=========== QUERY ===========*/

	Declare @Rescrictions Int,
			@RescrictionsEmp Int, @MaxBAID int, @ArInvNbr int, @ProdConsFunc smallint, @EstMaxRev int, @JobNum int, @JobComp smallint, @NumberRecords int, @RowCount int

	Select @Rescrictions = Count(*) 
	FROM SEC_CLIENT
	WHERE UPPER(USER_ID) = UPPER(@UserID)

	Select @RescrictionsEmp = Count(*) 
	FROM SEC_EMP
	WHERE UPPER(USER_ID) = UPPER(@UserID)

	DECLARE
		@BREAKOUT_ALL_NB BIT,
		@BREAKOUT_NB_FOR_FT BIT,
		@FILTER_INCLUDE_NB BIT,
		@FILTER_EMPLOYEE_TIME BIT,
		@FILTER_INCOME_ONLY BIT,
		@FILTER_VENDOR BIT,
		@INCLUDE_SALES_TAX BIT

	SET @BREAKOUT_ALL_NB = 0;
	SET @BREAKOUT_NB_FOR_FT = 0;
	SET @FILTER_INCLUDE_NB = 1;
	SET @FILTER_EMPLOYEE_TIME = 0;
	SET @FILTER_INCOME_ONLY = 0;
	SET @FILTER_VENDOR = 0;
	SET @INCLUDE_SALES_TAX = 0
	
	--IF EXISTS (SELECT USERID FROM APP_VARS WITH(NOLOCK) WHERE [APPLICATION] = 'QvAPopup' AND VARIABLE_NAME = 'QvaFilterBreakoutAllNB' AND UPPER(USERID) = UPPER(@UserID) AND RTRIM(LTRIM(LOWER(VARIABLE_VALUE))) = 'true')
	--BEGIN
	--	SET @BREAKOUT_ALL_NB = 1;
	--END
	--IF EXISTS (SELECT USERID FROM APP_VARS WITH(NOLOCK) WHERE [APPLICATION] = 'QvAPopup' AND VARIABLE_NAME = 'QvaFilterBreakoutNBForFT' AND UPPER(USERID) = UPPER(@UserID) AND RTRIM(LTRIM(LOWER(VARIABLE_VALUE))) = 'true')
	--BEGIN
	--	SET @BREAKOUT_NB_FOR_FT = 1;
	--END
	--IF EXISTS (SELECT USERID FROM APP_VARS WITH(NOLOCK) WHERE [APPLICATION] = 'QvAPopup' AND VARIABLE_NAME = 'QvaFilterIncludeNB' AND UPPER(USERID) = UPPER(@UserID) AND VARIABLE_VALUE LIKE 'True')
	--BEGIN
	--	SET @FILTER_INCLUDE_NB = 1;
	--END
	--IF EXISTS (SELECT USERID FROM APP_VARS WITH(NOLOCK) WHERE [APPLICATION] = 'QvAPopup' AND VARIABLE_NAME = 'QvaFilterEmployeeTime' AND UPPER(USERID) = UPPER(@UserID) AND RTRIM(LTRIM(LOWER(VARIABLE_VALUE))) = 'true')
	--BEGIN
	--	SET @FILTER_EMPLOYEE_TIME = 1;
	--END
	--IF EXISTS (SELECT USERID FROM APP_VARS WITH(NOLOCK) WHERE [APPLICATION] = 'QvAPopup' AND VARIABLE_NAME = 'QvaFilterIncomeOnly' AND UPPER(USERID) = UPPER(@UserID) AND RTRIM(LTRIM(LOWER(VARIABLE_VALUE))) = 'true')
	--BEGIN
	--	SET @FILTER_INCOME_ONLY = 1;
	--END
	--IF EXISTS (SELECT USERID FROM APP_VARS WITH(NOLOCK) WHERE [APPLICATION] = 'QvAPopup' AND VARIABLE_NAME = 'QvaFilterVendor' AND UPPER(USERID) = UPPER(@UserID) AND RTRIM(LTRIM(LOWER(VARIABLE_VALUE))) = 'true')
	--BEGIN
	--	SET @FILTER_VENDOR = 1;
	--END
	--IF EXISTS (SELECT USERID FROM APP_VARS WITH(NOLOCK) WHERE [APPLICATION] = 'QvAPopup' AND VARIABLE_NAME = 'QvaFilterSalesTax' AND UPPER(USERID) = UPPER(@UserID) AND RTRIM(LTRIM(LOWER(VARIABLE_VALUE))) = 'true')
	--BEGIN
	--	SET @INCLUDE_SALES_TAX = 1;
	--END

	--SELECT @EstMaxRev = MAX(dbo.ESTIMATE_REV.EST_REV_NBR)
	--FROM  ESTIMATE_REV INNER JOIN
 --         JOB_COMPONENT ON dbo.ESTIMATE_REV.ESTIMATE_NUMBER = dbo.JOB_COMPONENT.ESTIMATE_NUMBER AND 
 --         ESTIMATE_REV.EST_COMPONENT_NBR = dbo.JOB_COMPONENT.EST_COMPONENT_NBR
	--WHERE (JOB_COMPONENT.JOB_NUMBER = @JobNum) AND (JOB_COMPONENT.JOB_COMPONENT_NBR = @JobComp)

	CREATE TABLE #qva_rows( 
		RowID int IDENTITY(1, 1),
		ClientCode				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		ClientName				varchar(40) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		DivisionCode			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		DivisionName			varchar(40) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		ProductCode				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		ProductDescription		varchar(40) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,	
		JOB_NUMBER  			int NULL,	
		JOB_DESC				varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		JOB_COMPONENT_NBR		smallint,
		JOB_COMP_DESC			varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		ESTIMATE_NUMBER			int,
		EST_LOG_DESC			varchar(60) NULL,
		EST_COMPONENT_NBR		smallint,
		EST_COMP_DESC			varchar(60) NULL,
		EST_QUOTE_NBR			smallint,
		EST_QUOTE_DESC			varchar(60) NULL,
		EST_REV_NBR 			smallint NULL,		
		JOB_CLI_REF				varchar(30) NULL,
		FNC_CODE				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		FNC_DESCRIPTION			varchar(30) NULL,
		FNC_TYPE      			varchar(1) NULL,
		FNC_HEADING_ID			int NULL,
		FNC_HEADING_DESC		varchar(60) NULL,
		FNC_HEADING_SEQ			int NULL,
		FNC_CONSOL_CODE			varchar(6),
		Quoted_QtyHrs			decimal(15,2) NULL,
		Quoted_Amount  			decimal(15,2) NULL,
		Quoted_Markup			decimal(15,2) NULL,
		Quoted_Tax				decimal(15,2) NULL,	
		Quoted_Total			decimal(15,2) NULL,
		Actual_Hours			decimal(15,2) NULL,
		Actual_Amount			decimal(15,2) NULL,
		Actual_Markup			decimal(15,2) NULL,
		Actual_Tax				decimal(15,2) NULL,
		Actual_Total			decimal(15,2) NULL,
		Open_PO_Net_Amt			decimal(15,2) NULL,
		Billed_to_Date			decimal(15,2) NULL,
		Quote_vs_Actual_PO		decimal(15,2) NULL,
		Actual_PO_vs_Billed		decimal(15,2) NULL,
		Qva						decimal(15,2) NULL,
		Avb						decimal(15,2) NULL,
		Qva_PO					decimal(15,2) NULL,
		Avb_PO					decimal(15,2) NULL,
		NB_Actual_Hours         decimal(15,2) NULL,
		NB_Actual_Total         decimal(15,2) NULL,
		Adv_Billed				decimal(15,2) NULL,
		PO_Total				decimal(15,2) NULL,
		PO_Applied				decimal(15,2) NULL,
		NB_Tax					decimal(15,2) NULL,
		NB_Markup				decimal(15,2) NULL,
		NB_Amount				decimal(15,2) NULL,
		APPROVED_AMT			decimal(15,2) NULL,
		NB_Hours                decimal(15,2) NULL,
		QUOTE_PERC				DECIMAL(15,2) NULL,
		NB_Total				DECIMAL(15,2) NULL,
		Billed_to_Date_Total	DECIMAL(15,2) NULL,
		QUOTE_PERC_AMT			DECIMAL(15,2) NULL
				)

	CREATE TABLE #qva_rows_sum( 
		RowID int IDENTITY(1, 1),	
		JOB_NUMBER  			int NULL,	
		JOB_COMPONENT_NBR		smallint NULL,
		FNC_CODE				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
		FNC_DESCRIPTION			varchar(30) NULL,
		FNC_TYPE      			varchar(1) NULL,
		FNC_HEADING_ID			int NULL,
		FNC_HEADING_DESC		varchar(60) NULL,
		FNC_HEADING_SEQ			int NULL,
		FNC_CONSOL_CODE			varchar(6),
		Quoted_QtyHrs			decimal(15,2) NULL,
		Quoted_Amount  			decimal(15,2) NULL,
		Quoted_Markup			decimal(15,2) NULL,
		Quoted_Tax				decimal(15,2) NULL,	
		Quoted_Total			decimal(15,2) NULL,
		Actual_Hours			decimal(15,2) NULL,
		Actual_Amount			decimal(15,2) NULL,
		Actual_Markup			decimal(15,2) NULL,
		Actual_Tax				decimal(15,2) NULL,
		Actual_Total			decimal(15,2) NULL,
		Open_PO_Net_Amt			decimal(15,2) NULL,
		Billed_to_Date			decimal(15,2) NULL,
		Quote_vs_Actual_PO		decimal(15,2) NULL,
		Actual_PO_vs_Billed		decimal(15,2) NULL,
		Qva						decimal(15,2) NULL,
		Avb						decimal(15,2) NULL,
		Qva_PO					decimal(15,2) NULL,
		Avb_PO					decimal(15,2) NULL,
		NB_Actual_Hours         decimal(15,2) NULL,
		NB_Actual_Total         decimal(15,2) NULL,
		Adv_Billed				decimal(15,2) NULL,
		PO_Total				decimal(15,2) NULL,
		PO_Applied				decimal(15,2) NULL,
		NB_Tax					decimal(15,2) NULL,
		NB_Markup				decimal(15,2) NULL,
		NB_Amount				decimal(15,2) NULL,
		APPROVED_AMT			decimal(15,2) NULL,
		NB_Hours                decimal(15,2) NULL,
		QUOTE_PERC				DECIMAL(15,2) NULL,
		NB_Total				DECIMAL(15,2) NULL,
		Billed_to_Date_Total	DECIMAL(15,2) NULL,
		QUOTE_PERC_AMT			DECIMAL(15,2) NULL
				)

	DECLARE @qva_quoted TABLE( 
			JOB_NUMBER  			int NULL,	
			JOB_COMPONENT_NBR		smallint NULL,
			ESTIMATE_NUMBER			int,
			EST_COMPONENT_NBR		smallint,
			EST_QUOTE_NBR			smallint,
			EST_REV_NBR 			smallint NULL,
			FNC_CODE				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_DESCRIPTION			varchar(30) NULL,
			FNC_TYPE      			varchar(1) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_ID			int NULL,
			FNC_HEADING_DESC		varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_SEQ			int NULL,
			FNC_CONSOL_CODE			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			Quoted_QtyHrs			decimal(15,2) NULL,
			Quoted_Amount  			decimal(15,2) NULL,
			Quoted_Markup			decimal(15,2) NULL,
			Quoted_Tax				decimal(15,2) NULL,	
			Quoted_Total			decimal(15,2) NULL)
	
	DECLARE @qva_actual TABLE( 
			JOB_NUMBER  			int NULL,	
			JOB_COMPONENT_NBR		smallint NULL,
			FNC_CODE				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_DESCRIPTION			varchar(30) NULL,
			FNC_TYPE      			varchar(1) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_ID			int NULL,
			FNC_HEADING_DESC		varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_SEQ			int NULL,
			FNC_CONSOL_CODE			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			Actual_Hours			decimal(15,2) NULL,
			Actual_Amount			decimal(15,2) NULL,
			Actual_Markup			decimal(15,2) NULL,
			Actual_Tax				decimal(15,2) NULL,
			Actual_Total			decimal(15,2) NULL)

	DECLARE @qva_Billed TABLE( 
			JOB_NUMBER  			int NULL,	
			JOB_COMPONENT_NBR		smallint NULL,
			FNC_CODE				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_DESCRIPTION			varchar(30) NULL,
			FNC_TYPE      			varchar(1) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_ID			int NULL,
			FNC_HEADING_DESC		varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_SEQ			int NULL,
			FNC_CONSOL_CODE			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			Open_PO_Net_Amt			decimal(15,2) NULL,
			Billed_to_Date			decimal(15,2) NULL)

	DECLARE @qva_AdvBilled TABLE( 
			JOB_NUMBER  			int NULL,	
			JOB_COMPONENT_NBR		smallint NULL,
			FNC_CODE				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_DESCRIPTION			varchar(30) NULL,
			FNC_TYPE      			varchar(1) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_ID			int NULL,
			FNC_HEADING_DESC		varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_SEQ			int NULL,
			FNC_CONSOL_CODE			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			Quote_vs_Actual_PO		decimal(15,2) NULL,
			Actual_PO_vs_Billed		decimal(15,2) NULL,
			Adv_Billed				decimal(15,2) NULL,		
			Qva						decimal(15,2) NULL,
			Avb						decimal(15,2) NULL,
			Qva_PO					decimal(15,2) NULL,
			Avb_PO					decimal(15,2) NULL,
			NB_Actual_Hours			decimal(15,2) NULL,
			NB_Actual_Total			decimal(15,2) NULL)

	DECLARE @qva_POtotal TABLE( 
			JOB_NUMBER  			int NULL,	
			JOB_COMPONENT_NBR		smallint NULL,
			FNC_CODE				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_DESCRIPTION			varchar(30) NULL,
			FNC_TYPE      			varchar(1) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_ID			int NULL,
			FNC_HEADING_DESC		varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_SEQ			int NULL,
			FNC_CONSOL_CODE			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			PO_Total			    decimal(15,2) NULL)

	DECLARE @qva_POapplied TABLE( 
			JOB_NUMBER  			int NULL,	
			JOB_COMPONENT_NBR		smallint NULL,
			FNC_CODE				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_DESCRIPTION			varchar(30) NULL,
			FNC_TYPE      			varchar(1) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_ID			int NULL,
			FNC_HEADING_DESC		varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_SEQ			int NULL,
			FNC_CONSOL_CODE			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			PO_Applied		    	decimal(15,2) NULL)

	DECLARE @qva_NB TABLE( 
			JOB_NUMBER  			int NULL,	
			JOB_COMPONENT_NBR		smallint NULL,
			FNC_CODE				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_DESCRIPTION			varchar(30) NULL,
			FNC_TYPE      			varchar(1) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_ID			int NULL,
			FNC_HEADING_DESC		varchar(60) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			FNC_HEADING_SEQ			int NULL,
			FNC_CONSOL_CODE			varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			NB_Tax					decimal(15,2) NULL,
			NB_Markup				decimal(15,2) NULL,
			NB_Amount				decimal(15,2) NULL,
			NB_Hours                decimal(15,2) NULL)

	DECLARE @APPROVED_AMT TABLE (
			JOB_NUMBER  			int NULL,	
			JOB_COMPONENT_NBR		smallint NULL,
			FNC_CODE				varchar(6) COLLATE SQL_Latin1_General_CP1_CS_AS NULL,
			APPROVED_AMT			decimal(15,2) NULL)


	INSERT INTO @qva_quoted
		SELECT     V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, V_ESTIMATEAPPR.ESTIMATE_NUMBER, V_ESTIMATEAPPR.EST_COMPONENT_NBR, V_ESTIMATEAPPR.EST_QUOTE_NBR, V_ESTIMATEAPPR.EST_REVISION_NBR,
				   V_QUOTE_VS_ACTUAL.FNC_CODE, ISNULL(FUNCTIONS.FNC_DESCRIPTION,'') FNC_DESCRIPTION, FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END,
						  ISNULL(SUM(ESTIMATE_REV_DET.EST_REV_QUANTITY), 0.00)  AS Quoted_QtyHrs, 
						  ISNULL(SUM(ESTIMATE_REV_DET.EST_REV_EXT_AMT), 0.00) + ISNULL(SUM(ESTIMATE_REV_DET.EXT_NONRESALE_TAX), 0.00) AS Quoted_Amount, 
						  ISNULL(SUM(ESTIMATE_REV_DET.EXT_MARKUP_AMT), 0.00) AS Quoted_Markup, 
						  ISNULL(SUM(ESTIMATE_REV_DET.EXT_CITY_RESALE), 0.00) + ISNULL(SUM(ESTIMATE_REV_DET.EXT_STATE_RESALE), 0.00) 
						  + ISNULL(SUM(ESTIMATE_REV_DET.EXT_COUNTY_RESALE), 0.00) 
						  AS Quoted_Tax, 0.00 AS Quoted_Total	
	FROM         FUNCTIONS INNER JOIN
						  V_QUOTE_VS_ACTUAL ON FUNCTIONS.FNC_CODE = V_QUOTE_VS_ACTUAL.FNC_CODE INNER JOIN
						  JOB_COMPONENT ON V_QUOTE_VS_ACTUAL.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
						  V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR LEFT OUTER JOIN
						  V_ESTIMATEAPPR INNER JOIN
						  ESTIMATE_REV_DET ON V_ESTIMATEAPPR.ESTIMATE_NUMBER = ESTIMATE_REV_DET.ESTIMATE_NUMBER AND 
						  V_ESTIMATEAPPR.EST_COMPONENT_NBR = ESTIMATE_REV_DET.EST_COMPONENT_NBR AND 
						  V_ESTIMATEAPPR.EST_QUOTE_NBR = ESTIMATE_REV_DET.EST_QUOTE_NBR AND 
						  V_ESTIMATEAPPR.EST_REVISION_NBR = ESTIMATE_REV_DET.EST_REV_NBR ON 
						  V_QUOTE_VS_ACTUAL.JOB_NUMBER = V_ESTIMATEAPPR.JOB_NUMBER AND 
						  V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = V_ESTIMATEAPPR.JOB_COMPONENT_NBR AND 
						  V_QUOTE_VS_ACTUAL.FNC_CODE = ESTIMATE_REV_DET.FNC_CODE LEFT OUTER JOIN
						  FNC_HEADING ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID
	--WHERE     (V_QUOTE_VS_ACTUAL.JOB_NUMBER = @JobNum) AND (V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = @JobComp)   
	GROUP BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, V_ESTIMATEAPPR.ESTIMATE_NUMBER, V_ESTIMATEAPPR.EST_COMPONENT_NBR, V_ESTIMATEAPPR.EST_QUOTE_NBR, V_ESTIMATEAPPR.EST_REVISION_NBR,
			 V_QUOTE_VS_ACTUAL.FNC_CODE, FUNCTIONS.FNC_DESCRIPTION, FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END
	ORDER BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, FUNCTIONS.FNC_DESCRIPTION

	INSERT INTO @qva_actual
		SELECT      V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, V_QUOTE_VS_ACTUAL.FNC_CODE, FUNCTIONS.FNC_DESCRIPTION, FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END, 
						  CASE WHEN FUNCTIONS.FNC_TYPE = 'E' THEN ISNULL(SUM(EMP_TIME_DTL.EMP_HOURS), 0.00)  
							   WHEN FUNCTIONS.FNC_TYPE = 'I' THEN ISNULL(SUM(INCOME_ONLY.IO_QTY), 0.00) 
							   WHEN FUNCTIONS.FNC_TYPE = 'V' THEN ISNULL(SUM(AP_PRODUCTION.AP_PROD_QUANTITY), 0.00) 
							   WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS Actual_hours,
						  CASE WHEN FUNCTIONS.FNC_TYPE = 'E' THEN ISNULL(SUM(EMP_TIME_DTL.TOTAL_BILL), 0.00)  
							   WHEN FUNCTIONS.FNC_TYPE = 'I' THEN ISNULL(SUM(INCOME_ONLY.IO_AMOUNT), 0.00) 
							   WHEN FUNCTIONS.FNC_TYPE = 'V' THEN ISNULL(SUM(AP_PRODUCTION.AP_PROD_EXT_AMT), 0.00) + ISNULL(SUM(AP_PRODUCTION.EXT_NONRESALE_TAX), 0.00)  
							   WHEN FUNCTIONS.FNC_TYPE = 'C' THEN ISNULL(SUM(CLIENT_OOP.AMOUNT), 0.00) END AS Actual_Amount,
						  CASE WHEN FUNCTIONS.FNC_TYPE = 'E' THEN ISNULL(SUM(EMP_TIME_DTL.EXT_MARKUP_AMT), 0.00)  
							   WHEN FUNCTIONS.FNC_TYPE = 'I' THEN ISNULL(SUM(INCOME_ONLY.EXT_MARKUP_AMT), 0.00) 
							   WHEN FUNCTIONS.FNC_TYPE = 'V' THEN ISNULL(SUM(AP_PRODUCTION.EXT_MARKUP_AMT), 0.00) 
							   WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS Actual_Markup,
						  CASE WHEN FUNCTIONS.FNC_TYPE = 'E' THEN ISNULL(SUM(EMP_TIME_DTL.EXT_CITY_RESALE), 0.00) + ISNULL(SUM(EMP_TIME_DTL.EXT_STATE_RESALE), 0.00) + ISNULL(SUM(EMP_TIME_DTL.EXT_COUNTY_RESALE), 0.00)  
							   WHEN FUNCTIONS.FNC_TYPE = 'I' THEN ISNULL(SUM(INCOME_ONLY.EXT_CITY_RESALE), 0.00) + ISNULL(SUM(INCOME_ONLY.EXT_STATE_RESALE), 0.00) + ISNULL(SUM(INCOME_ONLY.EXT_COUNTY_RESALE), 0.00)   
							   WHEN FUNCTIONS.FNC_TYPE = 'V' THEN ISNULL(SUM(AP_PRODUCTION.EXT_CITY_RESALE), 0.00) + ISNULL(SUM(AP_PRODUCTION.EXT_STATE_RESALE), 0.00) + ISNULL(SUM(AP_PRODUCTION.EXT_COUNTY_RESALE), 0.00)
							   WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS Actual_Tax, 0.00 AS Actual_Total
	FROM         dbo.FUNCTIONS INNER JOIN
						  dbo.V_QUOTE_VS_ACTUAL ON dbo.FUNCTIONS.FNC_CODE = dbo.V_QUOTE_VS_ACTUAL.FNC_CODE INNER JOIN
						  dbo.JOB_COMPONENT ON dbo.V_QUOTE_VS_ACTUAL.JOB_NUMBER = dbo.JOB_COMPONENT.JOB_NUMBER AND 
						  dbo.V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = dbo.JOB_COMPONENT.JOB_COMPONENT_NBR LEFT OUTER JOIN
						  dbo.EMP_TIME_DTL ON dbo.JOB_COMPONENT.JOB_NUMBER = dbo.EMP_TIME_DTL.JOB_NUMBER AND 
						  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.EMP_TIME_DTL.JOB_COMPONENT_NBR AND 
						  dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.EMP_TIME_DTL.FNC_CODE LEFT OUTER JOIN
						  dbo.INCOME_ONLY ON dbo.JOB_COMPONENT.JOB_NUMBER = dbo.INCOME_ONLY.JOB_NUMBER AND 
						  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.INCOME_ONLY.JOB_COMPONENT_NBR AND 
						  dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.INCOME_ONLY.FNC_CODE LEFT OUTER JOIN
						  dbo.AP_PRODUCTION ON dbo.JOB_COMPONENT.JOB_NUMBER = dbo.AP_PRODUCTION.JOB_NUMBER AND 
						  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.AP_PRODUCTION.JOB_COMPONENT_NBR AND 
						  dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.AP_PRODUCTION.FNC_CODE LEFT OUTER JOIN
						  dbo.CLIENT_OOP ON dbo.JOB_COMPONENT.JOB_NUMBER = dbo.CLIENT_OOP.JOB_NUMBER AND 
						  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.CLIENT_OOP.JOB_COMPONENT_NBR AND 
						  dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.CLIENT_OOP.FNC_CODE LEFT OUTER JOIN
						  FNC_HEADING ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID
	--WHERE     (dbo.V_QUOTE_VS_ACTUAL.JOB_NUMBER = @JobNum) AND (dbo.V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = @JobComp)
	GROUP BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END
	ORDER BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.FUNCTIONS.FNC_DESCRIPTION

	INSERT INTO @qva_Billed
		SELECT     V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END, 0.00,
						  CASE WHEN FUNCTIONS.FNC_TYPE = 'E' THEN ISNULL(SUM(EMP_TIME_DTL.LINE_TOTAL), 0.00) 
						  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS Billed_to_Date
		FROM         dbo.FUNCTIONS INNER JOIN
							  dbo.V_QUOTE_VS_ACTUAL ON dbo.FUNCTIONS.FNC_CODE = dbo.V_QUOTE_VS_ACTUAL.FNC_CODE INNER JOIN
							  dbo.JOB_COMPONENT ON dbo.V_QUOTE_VS_ACTUAL.JOB_NUMBER = dbo.JOB_COMPONENT.JOB_NUMBER AND 
							  dbo.V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = dbo.JOB_COMPONENT.JOB_COMPONENT_NBR LEFT OUTER JOIN
							  dbo.EMP_TIME_DTL ON dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.EMP_TIME_DTL.FNC_CODE AND 
							  dbo.JOB_COMPONENT.JOB_NUMBER = dbo.EMP_TIME_DTL.JOB_NUMBER AND 
							  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.EMP_TIME_DTL.JOB_COMPONENT_NBR LEFT OUTER JOIN
						      FNC_HEADING ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID 
		WHERE     (dbo.EMP_TIME_DTL.AR_INV_NBR IS NOT NULL OR dbo.EMP_TIME_DTL.AB_FLAG = 3) 
		GROUP BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END                     
		ORDER BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.FUNCTIONS.FNC_DESCRIPTION

	INSERT INTO @qva_Billed
		SELECT     V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END, 0.00,
							  CASE WHEN FUNCTIONS.FNC_TYPE = 'I' THEN ISNULL(SUM(INCOME_ONLY.LINE_TOTAL), 0.00) 
							  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS Billed_to_Date
		FROM         dbo.FUNCTIONS INNER JOIN
							  dbo.V_QUOTE_VS_ACTUAL ON dbo.FUNCTIONS.FNC_CODE = dbo.V_QUOTE_VS_ACTUAL.FNC_CODE INNER JOIN
							  dbo.JOB_COMPONENT ON dbo.V_QUOTE_VS_ACTUAL.JOB_NUMBER = dbo.JOB_COMPONENT.JOB_NUMBER AND 
							  dbo.V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = dbo.JOB_COMPONENT.JOB_COMPONENT_NBR LEFT OUTER JOIN
							  dbo.INCOME_ONLY ON dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.INCOME_ONLY.FNC_CODE AND 
							  dbo.JOB_COMPONENT.JOB_NUMBER = dbo.INCOME_ONLY.JOB_NUMBER AND 
							  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.INCOME_ONLY.JOB_COMPONENT_NBR LEFT OUTER JOIN
						      FNC_HEADING ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID 
		WHERE     (dbo.INCOME_ONLY.AR_INV_NBR IS NOT NULL OR dbo.INCOME_ONLY.AB_FLAG = 3) 
		GROUP BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END                    
		ORDER BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.FUNCTIONS.FNC_DESCRIPTION

	INSERT INTO @qva_Billed
		SELECT     V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END, 0.00,
							  CASE WHEN FUNCTIONS.FNC_TYPE = 'V' THEN ISNULL(SUM(AP_PRODUCTION.LINE_TOTAL), 0.00) 
							  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS Billed_to_Date
		FROM         dbo.FUNCTIONS INNER JOIN
							  dbo.V_QUOTE_VS_ACTUAL ON dbo.FUNCTIONS.FNC_CODE = dbo.V_QUOTE_VS_ACTUAL.FNC_CODE INNER JOIN
							  dbo.JOB_COMPONENT ON dbo.V_QUOTE_VS_ACTUAL.JOB_NUMBER = dbo.JOB_COMPONENT.JOB_NUMBER AND 
							  dbo.V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = dbo.JOB_COMPONENT.JOB_COMPONENT_NBR LEFT OUTER JOIN
							  dbo.AP_PRODUCTION ON dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.AP_PRODUCTION.FNC_CODE AND 
							  dbo.JOB_COMPONENT.JOB_NUMBER = dbo.AP_PRODUCTION.JOB_NUMBER AND 
							  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.AP_PRODUCTION.JOB_COMPONENT_NBR LEFT OUTER JOIN
						      FNC_HEADING ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID 
		WHERE     (dbo.AP_PRODUCTION.AR_INV_NBR IS NOT NULL OR dbo.AP_PRODUCTION.AB_FLAG = 3) 
		GROUP BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END                     
		ORDER BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.FUNCTIONS.FNC_DESCRIPTION

	INSERT INTO @qva_AdvBilled
		SELECT     V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END,0.00,0.00,
						  ISNULL(SUM(ADVANCE_BILLING.LINE_TOTAL), 0.00) AS Adv_Billed, 0.00,0.00,0.00,0.00,0.00,0.00
		FROM         dbo.FUNCTIONS INNER JOIN
							  dbo.V_QUOTE_VS_ACTUAL ON dbo.FUNCTIONS.FNC_CODE = dbo.V_QUOTE_VS_ACTUAL.FNC_CODE INNER JOIN
							  dbo.JOB_COMPONENT ON dbo.V_QUOTE_VS_ACTUAL.JOB_NUMBER = dbo.JOB_COMPONENT.JOB_NUMBER AND 
							  dbo.V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = dbo.JOB_COMPONENT.JOB_COMPONENT_NBR LEFT OUTER JOIN
							  dbo.ADVANCE_BILLING ON dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.ADVANCE_BILLING.FNC_CODE AND 
							  dbo.JOB_COMPONENT.JOB_NUMBER = dbo.ADVANCE_BILLING.JOB_NUMBER AND 
							  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.ADVANCE_BILLING.JOB_COMPONENT_NBR LEFT OUTER JOIN
						      FNC_HEADING ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID 
		WHERE     (dbo.ADVANCE_BILLING.AR_INV_NBR IS NOT NULL OR dbo.ADVANCE_BILLING.AB_FLAG = 3) 
		GROUP BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END                     
		ORDER BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.FUNCTIONS.FNC_DESCRIPTION

	INSERT INTO @qva_POtotal
		SELECT     V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END, 
						  CASE WHEN FUNCTIONS.FNC_TYPE = 'V' THEN ISNULL(SUM(dbo.PURCHASE_ORDER_DET.PO_EXT_AMOUNT), 0.00)
							ELSE 0.00 END AS PO_Total
		FROM         dbo.FUNCTIONS INNER JOIN
							  dbo.V_QUOTE_VS_ACTUAL ON dbo.FUNCTIONS.FNC_CODE = dbo.V_QUOTE_VS_ACTUAL.FNC_CODE INNER JOIN
							  dbo.JOB_COMPONENT ON dbo.V_QUOTE_VS_ACTUAL.JOB_NUMBER = dbo.JOB_COMPONENT.JOB_NUMBER AND 
							  dbo.V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = dbo.JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
							  dbo.PURCHASE_ORDER_DET ON dbo.JOB_COMPONENT.JOB_NUMBER = dbo.PURCHASE_ORDER_DET.JOB_NUMBER AND 
							  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.PURCHASE_ORDER_DET.JOB_COMPONENT_NBR AND 
							  dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.PURCHASE_ORDER_DET.FNC_CODE INNER JOIN
							  dbo.PURCHASE_ORDER ON dbo.PURCHASE_ORDER_DET.PO_NUMBER = dbo.PURCHASE_ORDER.PO_NUMBER LEFT OUTER JOIN
						      FNC_HEADING ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID
		WHERE     (PURCHASE_ORDER_DET.PO_COMPLETE IS NULL OR PURCHASE_ORDER_DET.PO_COMPLETE = 0) AND (PURCHASE_ORDER.VOID_FLAG IS NULL OR PURCHASE_ORDER.VOID_FLAG = 0)
		GROUP BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END                      
		ORDER BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.FUNCTIONS.FNC_DESCRIPTION

	INSERT INTO @qva_POapplied
		SELECT     V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END, 
						  CASE WHEN FUNCTIONS.FNC_TYPE = 'V' THEN ISNULL(SUM(dbo.AP_PRODUCTION.AP_PROD_EXT_AMT), 0.00)
							ELSE 0.00 END AS PO_Applied
		FROM         dbo.FUNCTIONS INNER JOIN
							  dbo.V_QUOTE_VS_ACTUAL ON dbo.FUNCTIONS.FNC_CODE = dbo.V_QUOTE_VS_ACTUAL.FNC_CODE INNER JOIN
							  dbo.JOB_COMPONENT ON dbo.V_QUOTE_VS_ACTUAL.JOB_NUMBER = dbo.JOB_COMPONENT.JOB_NUMBER AND 
							  dbo.V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = dbo.JOB_COMPONENT.JOB_COMPONENT_NBR INNER JOIN
							  dbo.PURCHASE_ORDER_DET ON dbo.JOB_COMPONENT.JOB_NUMBER = dbo.PURCHASE_ORDER_DET.JOB_NUMBER AND 
							  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.PURCHASE_ORDER_DET.JOB_COMPONENT_NBR AND 
							  dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.PURCHASE_ORDER_DET.FNC_CODE INNER JOIN
							  dbo.AP_PRODUCTION ON dbo.PURCHASE_ORDER_DET.PO_NUMBER = dbo.AP_PRODUCTION.PO_NUMBER AND 
							  dbo.PURCHASE_ORDER_DET.LINE_NUMBER = dbo.AP_PRODUCTION.PO_LINE_NUMBER LEFT OUTER JOIN
						      FNC_HEADING ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID
		WHERE     (PURCHASE_ORDER_DET.PO_COMPLETE = 0 OR PURCHASE_ORDER_DET.PO_COMPLETE IS NULL) AND
					(AP_PRODUCTION.DELETE_FLAG IS NULL OR AP_PRODUCTION.DELETE_FLAG = 0)
		GROUP BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END
		ORDER BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.FUNCTIONS.FNC_DESCRIPTION

	INSERT INTO @qva_NB
		SELECT     V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END, 
						  CASE WHEN FUNCTIONS.FNC_TYPE = 'E' THEN ISNULL(SUM(EMP_TIME_DTL.EXT_CITY_RESALE), 0.00) + ISNULL(SUM(EMP_TIME_DTL.EXT_STATE_RESALE), 0.00) + ISNULL(SUM(EMP_TIME_DTL.EXT_COUNTY_RESALE), 0.00)
						  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS NB_Tax,
						  CASE WHEN FUNCTIONS.FNC_TYPE = 'E' THEN ISNULL(SUM(EMP_TIME_DTL.EXT_MARKUP_AMT), 0.00)
						  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS NB_Markup,	
						  CASE WHEN FUNCTIONS.FNC_TYPE = 'E' THEN ISNULL(SUM(EMP_TIME_DTL.TOTAL_BILL), 0.00)
						  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS NB_Amount,
						  CASE WHEN FUNCTIONS.FNC_TYPE = 'E' THEN ISNULL(SUM(EMP_TIME_DTL.EMP_HOURS), 0.00)
						  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS NB_Hours	
		FROM         dbo.FUNCTIONS INNER JOIN
							  dbo.V_QUOTE_VS_ACTUAL ON dbo.FUNCTIONS.FNC_CODE = dbo.V_QUOTE_VS_ACTUAL.FNC_CODE INNER JOIN
							  dbo.JOB_COMPONENT ON dbo.V_QUOTE_VS_ACTUAL.JOB_NUMBER = dbo.JOB_COMPONENT.JOB_NUMBER AND 
							  dbo.V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = dbo.JOB_COMPONENT.JOB_COMPONENT_NBR LEFT OUTER JOIN
							  dbo.EMP_TIME_DTL ON dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.EMP_TIME_DTL.FNC_CODE AND 
							  dbo.JOB_COMPONENT.JOB_NUMBER = dbo.EMP_TIME_DTL.JOB_NUMBER AND 
							  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.EMP_TIME_DTL.JOB_COMPONENT_NBR LEFT OUTER JOIN
						      FNC_HEADING ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID 
		WHERE     (dbo.EMP_TIME_DTL.EMP_NON_BILL_FLAG = 1) 
		GROUP BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END                     
		ORDER BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.FUNCTIONS.FNC_DESCRIPTION
	INSERT INTO @qva_NB
		SELECT     V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END, 
							  CASE WHEN FUNCTIONS.FNC_TYPE = 'I' THEN ISNULL(SUM(INCOME_ONLY.EXT_CITY_RESALE), 0.00) + ISNULL(SUM(INCOME_ONLY.EXT_STATE_RESALE), 0.00) + ISNULL(SUM(INCOME_ONLY.EXT_COUNTY_RESALE), 0.00) 
							  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS NB_Tax,
							  CASE WHEN FUNCTIONS.FNC_TYPE = 'I' THEN ISNULL(SUM(INCOME_ONLY.EXT_MARKUP_AMT), 0.00)
							  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS NB_Markup,	
							  CASE WHEN FUNCTIONS.FNC_TYPE = 'I' THEN ISNULL(SUM(INCOME_ONLY.IO_AMOUNT), 0.00)
							  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS NB_Amount,
							  CASE WHEN FUNCTIONS.FNC_TYPE = 'I' THEN ISNULL(SUM(INCOME_ONLY.IO_QTY), 0.00)
							  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS NB_Hours
		FROM         dbo.FUNCTIONS INNER JOIN
							  dbo.V_QUOTE_VS_ACTUAL ON dbo.FUNCTIONS.FNC_CODE = dbo.V_QUOTE_VS_ACTUAL.FNC_CODE INNER JOIN
							  dbo.JOB_COMPONENT ON dbo.V_QUOTE_VS_ACTUAL.JOB_NUMBER = dbo.JOB_COMPONENT.JOB_NUMBER AND 
							  dbo.V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = dbo.JOB_COMPONENT.JOB_COMPONENT_NBR LEFT OUTER JOIN
							  dbo.INCOME_ONLY ON dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.INCOME_ONLY.FNC_CODE AND 
							  dbo.JOB_COMPONENT.JOB_NUMBER = dbo.INCOME_ONLY.JOB_NUMBER AND 
							  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.INCOME_ONLY.JOB_COMPONENT_NBR LEFT OUTER JOIN
						      FNC_HEADING ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID 
		WHERE     (dbo.INCOME_ONLY.NON_BILL_FLAG = 1)  
		GROUP BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END                     
		ORDER BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.FUNCTIONS.FNC_DESCRIPTION
	INSERT INTO @qva_NB
		SELECT     V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END, 
							  CASE WHEN FUNCTIONS.FNC_TYPE = 'V' THEN ISNULL(SUM(AP_PRODUCTION.EXT_CITY_RESALE), 0.00) + ISNULL(SUM(AP_PRODUCTION.EXT_STATE_RESALE), 0.00) + ISNULL(SUM(AP_PRODUCTION.EXT_COUNTY_RESALE), 0.00)
							  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS NB_Tax,
							  CASE WHEN FUNCTIONS.FNC_TYPE = 'V' THEN ISNULL(SUM(AP_PRODUCTION.EXT_MARKUP_AMT), 0.00)
							  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS NB_Markup,
							  CASE WHEN FUNCTIONS.FNC_TYPE = 'V' THEN ISNULL(SUM(AP_PRODUCTION.AP_PROD_EXT_AMT), 0.00)
							  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS NB_Amount,
							  CASE WHEN FUNCTIONS.FNC_TYPE = 'V' THEN ISNULL(SUM(AP_PRODUCTION.AP_PROD_QUANTITY), 0.00)
							  WHEN FUNCTIONS.FNC_TYPE = 'C' THEN 0.00 END AS NB_Hours
		FROM         dbo.FUNCTIONS INNER JOIN
							  dbo.V_QUOTE_VS_ACTUAL ON dbo.FUNCTIONS.FNC_CODE = dbo.V_QUOTE_VS_ACTUAL.FNC_CODE INNER JOIN
							  dbo.JOB_COMPONENT ON dbo.V_QUOTE_VS_ACTUAL.JOB_NUMBER = dbo.JOB_COMPONENT.JOB_NUMBER AND 
							  dbo.V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR = dbo.JOB_COMPONENT.JOB_COMPONENT_NBR LEFT OUTER JOIN
							  dbo.AP_PRODUCTION ON dbo.V_QUOTE_VS_ACTUAL.FNC_CODE = dbo.AP_PRODUCTION.FNC_CODE AND 
							  dbo.JOB_COMPONENT.JOB_NUMBER = dbo.AP_PRODUCTION.JOB_NUMBER AND 
							  dbo.JOB_COMPONENT.JOB_COMPONENT_NBR = dbo.AP_PRODUCTION.JOB_COMPONENT_NBR LEFT OUTER JOIN
						      FNC_HEADING ON FUNCTIONS.FNC_HEADING_ID = FNC_HEADING.FNC_HEADING_ID 
		WHERE     (dbo.AP_PRODUCTION.AP_PROD_NOBILL_FLG = 1) 
		GROUP BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.V_QUOTE_VS_ACTUAL.FNC_CODE, dbo.FUNCTIONS.FNC_DESCRIPTION, dbo.FUNCTIONS.FNC_TYPE, FNC_HEADING.FNC_HEADING_ID,
					  FNC_HEADING.FNC_HEADING_DESC, FNC_HEADING.FNC_HEADING_SEQ, CASE WHEN FUNCTIONS.FNC_CONSOLIDATION IS NULL THEN V_QUOTE_VS_ACTUAL.FNC_CODE ELSE FUNCTIONS.FNC_CONSOLIDATION END                     
		ORDER BY V_QUOTE_VS_ACTUAL.JOB_NUMBER, V_QUOTE_VS_ACTUAL.JOB_COMPONENT_NBR, dbo.FUNCTIONS.FNC_DESCRIPTION

	INSERT INTO #qva_rows
		SELECT NULL,NULL,NULL,NULL,NULL,NULL,qq.JOB_NUMBER,NULL, qq.JOB_COMPONENT_NBR,NULL,qq.ESTIMATE_NUMBER,NULL, qq.EST_COMPONENT_NBR,NULL, qq.EST_QUOTE_NBR,NULL, qq.EST_REV_NBR, NULL,
				qq.FNC_CODE, qq.FNC_DESCRIPTION, qq.FNC_TYPE, qq.FNC_HEADING_ID,
					  qq.FNC_HEADING_DESC, qq.FNC_HEADING_SEQ, qq.FNC_CONSOL_CODE, ISNULL(qq.Quoted_QtyHrs,0.00), ISNULL(qq.Quoted_Amount,0.00),
			   ISNULL(qq.Quoted_Markup,0.00), ISNULL(qq.Quoted_Tax,0.00), 0.00 AS Quoted_Total,
			   ISNULL(qa.Actual_Hours,0.00), ISNULL(qa.Actual_Amount,0.00), ISNULL(qa.Actual_Markup,0.00), ISNULL(qa.Actual_Tax,0.00), 0.00 AS Actual_Total,
			   0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00  ,0,0.00, NULL, 0.00, 0.00,NULL
		FROM @qva_quoted qq INNER JOIN @qva_actual qa ON qq.JOB_NUMBER = qa.JOB_NUMBER AND qq.JOB_COMPONENT_NBR = qa.JOB_COMPONENT_NBR AND qq.FNC_CODE = qa.FNC_CODE AND qq.FNC_TYPE = qa.FNC_TYPE

	UPDATE #qva_rows
	SET Open_PO_Net_Amt = ISNULL(qb.Open_PO_Net_Amt,0.00),
		Billed_to_Date = ISNULL(qb.Billed_to_Date,0.00)
	FROM #qva_rows qv, @qva_Billed qb
	WHERE qv.JOB_NUMBER = qb.JOB_NUMBER AND qv.JOB_COMPONENT_NBR = qb.JOB_COMPONENT_NBR AND qv.FNC_CODE = qb.FNC_CODE

	UPDATE #qva_rows
	SET Quote_vs_Actual_PO = ISNULL(qab.Quote_vs_Actual_PO,0.00),
		Actual_PO_vs_Billed = ISNULL(qab.Actual_PO_vs_Billed,0.00),
		Qva = ISNULL(qab.Qva,0.00),
		Avb = ISNULL(qab.Avb,0.00),
		Qva_PO = ISNULL(qab.Qva_PO,0.00),
		Avb_PO = ISNULL(qab.Avb_PO,0.00),
		NB_Actual_Hours = ISNULL(qab.NB_Actual_Hours,0.00),
		NB_Actual_Total = ISNULL(qab.NB_Actual_Total,0.00),
		Adv_Billed = ISNULL(qab.Adv_Billed,0.00)
	FROM #qva_rows qv, @qva_AdvBilled qab
	WHERE qv.JOB_NUMBER = qab.JOB_NUMBER AND qv.JOB_COMPONENT_NBR = qab.JOB_COMPONENT_NBR AND qv.FNC_CODE = qab.FNC_CODE

	UPDATE #qva_rows
	SET PO_Total = ISNULL(qpt.PO_Total,0.00)
	FROM #qva_rows qv, @qva_POtotal qpt
	WHERE qv.JOB_NUMBER = qpt.JOB_NUMBER AND qv.JOB_COMPONENT_NBR = qpt.JOB_COMPONENT_NBR AND qv.FNC_CODE = qpt.FNC_CODE

	UPDATE #qva_rows
	SET PO_Applied = ISNULL(qpa.PO_Applied,0.00)
	FROM #qva_rows qv, @qva_POapplied qpa
	WHERE qv.JOB_NUMBER = qpa.JOB_NUMBER AND qv.JOB_COMPONENT_NBR = qpa.JOB_COMPONENT_NBR AND qv.FNC_CODE = qpa.FNC_CODE

	UPDATE #qva_rows
	SET NB_Tax = ISNULL(qn.NB_Tax,0.00),  
		NB_Markup = ISNULL(qn.NB_Markup,0.00),
		NB_Amount = ISNULL(qn.NB_Amount,0.00),
		NB_Hours = ISNULL(qn.NB_Hours,0.00)
	FROM #qva_rows qv, @qva_NB qn
	WHERE qv.JOB_NUMBER = qn.JOB_NUMBER AND qv.JOB_COMPONENT_NBR = qn.JOB_COMPONENT_NBR AND qv.FNC_CODE = qn.FNC_CODE
	
	SELECT @NumberRecords = COUNT(*) FROM #qva_rows
	SET @RowCount = 1
	
	WHILE @RowCount <= @NumberRecords
	BEGIN
		SELECT @JobNum = JOB_NUMBER, @JobComp = JOB_COMPONENT_NBR
		FROM #qva_rows
		WHERE RowID = @RowCount
	
		SELECT @MaxBAID= MAX(BH.BA_ID)
		FROM BILL_APPR_DTL BD, BILL_APPR_HDR BH
		WHERE BH.JOB_NUMBER = @JobNum AND BH.JOB_COMPONENT_NBR = @JobComp
		AND BH.JOB_NUMBER = BD.JOB_NUMBER
		AND BH.JOB_COMPONENT_NBR = BD.JOB_COMPONENT_NBR
		AND BH.BA_ID = BD.BA_ID

		SELECT @ArInvNbr = AR_INV_NBR FROM BILL_APPR_HDR BH
		WHERE BH.BA_ID = @MaxBAID AND BH.JOB_NUMBER = @JobNum AND BH.JOB_COMPONENT_NBR = @JobComp

		if @ArInvNbr IS NULL
		Begin
			INSERT INTO @APPROVED_AMT
			SELECT BD.JOB_NUMBER, BD.JOB_COMPONENT_NBR, BD.FNC_CODE, ISNULL(SUM(BD.APPROVED_AMT), 0)
			FROM BILL_APPR_DTL BD
			WHERE BD.BA_ID = @MaxBAID AND BD.JOB_NUMBER = @JobNum AND BD.JOB_COMPONENT_NBR = @JobComp
			GROUP BY BD.JOB_NUMBER, BD.JOB_COMPONENT_NBR, BD.FNC_CODE
		End

		UPDATE #qva_rows
		SET APPROVED_AMT = AA.APPROVED_AMT
		FROM @APPROVED_AMT AA
		WHERE AA.JOB_NUMBER = #qva_rows.JOB_NUMBER AND AA.JOB_COMPONENT_NBR = #qva_rows.JOB_COMPONENT_NBR AND AA.FNC_CODE = #qva_rows.FNC_CODE;
		
		SET @RowCount = @RowCount + 1
		SET @MaxBAID = 0
		SET @ArInvNbr = 0
	END

	
	--SELECT @BREAKOUT_ALL_NB	
	IF @BREAKOUT_ALL_NB = 1
	BEGIN

		UPDATE #qva_rows 
		SET 
			QUOTE_PERC = ((ISNULL(#qva_rows.Actual_Hours, 0.00) - ISNULL(#qva_rows.NB_Hours, 0.00)) / ISNULL(#qva_rows.Quoted_QtyHrs, 0.00)) * 100
		WHERE #qva_rows.Quoted_QtyHrs > 0;

		UPDATE #qva_rows 
		SET
			QUOTE_PERC_AMT = ((ISNULL(#qva_rows.Actual_Amount, 0.00) - ISNULL(#qva_rows.NB_Amount, 0.00)) / ISNULL(#qva_rows.Quoted_Amount, 0.00)) * 100
		WHERE #qva_rows.Quoted_Amount > 0;

		UPDATE #qva_rows 
		SET 
			Actual_Hours = (ISNULL(#qva_rows.Actual_Hours, 0.00) - ISNULL(#qva_rows.NB_Hours, 0.00)),
			Actual_Amount = (ISNULL(#qva_rows.Actual_Amount, 0.00) - ISNULL(#qva_rows.NB_Amount, 0.00)) ,
			Actual_Tax = (ISNULL(#qva_rows.Actual_Tax, 0.00) - ISNULL(#qva_rows.NB_Tax, 0.00)) ,
			Actual_Markup = (ISNULL(#qva_rows.Actual_Markup, 0.00) - ISNULL(#qva_rows.NB_Markup, 0.00))
		;

	END	
	
	IF @BREAKOUT_NB_FOR_FT = 1 AND @BREAKOUT_ALL_NB = 0
	BEGIN

		IF @FILTER_EMPLOYEE_TIME = 1
		BEGIN

			UPDATE #qva_rows 
			SET 
				QUOTE_PERC = ((ISNULL(#qva_rows.Actual_Hours, 0.00) - ISNULL(#qva_rows.NB_Hours, 0.00)) / ISNULL(#qva_rows.Quoted_QtyHrs, 0.00)) * 100
			WHERE #qva_rows.Quoted_QtyHrs > 0 AND FNC_TYPE = 'E';

			UPDATE #qva_rows 
			SET 
				QUOTE_PERC_AMT = ((ISNULL(#qva_rows.Actual_Amount, 0.00) - ISNULL(#qva_rows.NB_Amount, 0.00)) / ISNULL(#qva_rows.Quoted_Amount, 0.00)) * 100
			WHERE #qva_rows.Quoted_Amount > 0 AND FNC_TYPE = 'E';

			UPDATE #qva_rows 
			SET
				Actual_Hours = (ISNULL(#qva_rows.Actual_Hours, 0.00) - ISNULL(#qva_rows.NB_Hours, 0.00)),
				Actual_Amount = (ISNULL(#qva_rows.Actual_Amount, 0.00) - ISNULL(#qva_rows.NB_Amount, 0.00)) ,
				Actual_Tax = (ISNULL(#qva_rows.Actual_Tax, 0.00) - ISNULL(#qva_rows.NB_Tax, 0.00)) ,
				Actual_Markup = (ISNULL(#qva_rows.Actual_Markup, 0.00) - ISNULL(#qva_rows.NB_Markup, 0.00))
			WHERE FNC_TYPE = 'E';

		END
		IF @FILTER_INCOME_ONLY = 1
		BEGIN

			UPDATE #qva_rows 
			SET 
				QUOTE_PERC = ((ISNULL(#qva_rows.Actual_Hours, 0.00) - ISNULL(#qva_rows.NB_Hours, 0.00)) / ISNULL(#qva_rows.Quoted_QtyHrs, 0.00)) * 100
			WHERE #qva_rows.Quoted_QtyHrs > 0 AND FNC_TYPE = 'I';

			UPDATE #qva_rows 
			SET 
				QUOTE_PERC_AMT = ((ISNULL(#qva_rows.Actual_Amount, 0.00) - ISNULL(#qva_rows.NB_Amount, 0.00)) / ISNULL(#qva_rows.Quoted_Amount, 0.00)) * 100
			WHERE #qva_rows.Quoted_Amount > 0 AND FNC_TYPE = 'I';

			UPDATE #qva_rows 
			SET 
				Actual_Hours = (ISNULL(#qva_rows.Actual_Hours, 0.00) - ISNULL(#qva_rows.NB_Hours, 0.00)),
				Actual_Amount = (ISNULL(#qva_rows.Actual_Amount, 0.00) - ISNULL(#qva_rows.NB_Amount, 0.00)) ,
				Actual_Tax = (ISNULL(#qva_rows.Actual_Tax, 0.00) - ISNULL(#qva_rows.NB_Tax, 0.00)) ,
				Actual_Markup = (ISNULL(#qva_rows.Actual_Markup, 0.00) - ISNULL(#qva_rows.NB_Markup, 0.00))
			WHERE FNC_TYPE = 'I';

		END
		IF @FILTER_VENDOR = 1
		BEGIN

			UPDATE #qva_rows 
			SET 
				QUOTE_PERC = ((ISNULL(#qva_rows.Actual_Hours, 0.00) - ISNULL(#qva_rows.NB_Hours, 0.00)) / ISNULL(#qva_rows.Quoted_QtyHrs, 0.00)) * 100
			WHERE #qva_rows.Quoted_QtyHrs > 0 AND FNC_TYPE = 'V';

			UPDATE #qva_rows 
			SET 
				QUOTE_PERC_AMT = ((ISNULL(#qva_rows.Actual_Amount, 0.00) - ISNULL(#qva_rows.NB_Amount, 0.00)) / ISNULL(#qva_rows.Quoted_Amount, 0.00)) * 100
			WHERE #qva_rows.Quoted_Amount > 0 AND FNC_TYPE = 'V';

			UPDATE #qva_rows 
			SET 
				Actual_Hours = (ISNULL(#qva_rows.Actual_Hours, 0.00) - ISNULL(#qva_rows.NB_Hours, 0.00)),
				Actual_Amount = (ISNULL(#qva_rows.Actual_Amount, 0.00) - ISNULL(#qva_rows.NB_Amount, 0.00)) ,
				Actual_Tax = (ISNULL(#qva_rows.Actual_Tax, 0.00) - ISNULL(#qva_rows.NB_Tax, 0.00)) ,
				Actual_Markup = (ISNULL(#qva_rows.Actual_Markup, 0.00) - ISNULL(#qva_rows.NB_Markup, 0.00))
			WHERE FNC_TYPE = 'V';

		END
		

	END
	
	UPDATE #qva_rows SET QUOTE_PERC = (ISNULL(#qva_rows.Actual_Hours, 0.00) / ISNULL(#qva_rows.Quoted_QtyHrs, 0.00)) * 100
	WHERE #qva_rows.Quoted_QtyHrs > 0 AND QUOTE_PERC IS NULL;

	UPDATE #qva_rows SET QUOTE_PERC_AMT = (ISNULL(#qva_rows.Actual_Amount, 0.00) / ISNULL(#qva_rows.Quoted_Amount, 0.00)) * 100
	WHERE #qva_rows.Quoted_Amount > 0 AND QUOTE_PERC_AMT IS NULL;
	--SELECT * FROM #qva_rows

	if @INCLUDE_SALES_TAX = 1
	BEGIN
		UPDATE #qva_rows 
		SET 
			Actual_Total = ISNULL(#qva_rows.Actual_Amount, 0.00) + ISNULL(#qva_rows.Actual_Tax, 0.00) + ISNULL(#qva_rows.Actual_Markup, 0.00),
			NB_Total = ISNULL(#qva_rows.NB_Amount, 0.00) + ISNULL(#qva_rows.NB_Tax, 0.00) + ISNULL(#qva_rows.NB_Markup, 0.00),
			Quoted_Total = ISNULL(#qva_rows.Quoted_Amount, 0.00) + ISNULL(#qva_rows.Quoted_Tax, 0.00) + ISNULL(#qva_rows.Quoted_Markup, 0.00),
			Open_PO_Net_Amt = ISNULL(#qva_rows.PO_Total, 0.00) - ISNULL(#qva_rows.PO_Applied, 0.00),
			Billed_to_Date = ISNULL(#qva_rows.Billed_to_Date, 0.00) + ISNULL(#qva_rows.Adv_Billed, 0.00)--,
			--Actual_Hours = ISNULL(Actual_Hours, 0.00) - ISNULL(NB_Hours, 0.00),
			--Actual_Amount =  ISNULL(Actual_Amount, 0.00) - ISNULL(NB_Amount, 0.00)
	END
	ELSE
	BEGIN
		UPDATE #qva_rows 
		SET 
			Actual_Total = ISNULL(#qva_rows.Actual_Amount, 0.00) + ISNULL(#qva_rows.Actual_Markup, 0.00),
			NB_Total = ISNULL(#qva_rows.NB_Amount, 0.00) + ISNULL(#qva_rows.NB_Markup, 0.00),
			Quoted_Total = ISNULL(#qva_rows.Quoted_Amount, 0.00) + ISNULL(#qva_rows.Quoted_Markup, 0.00),
			Open_PO_Net_Amt = ISNULL(#qva_rows.PO_Total, 0.00) - ISNULL(#qva_rows.PO_Applied, 0.00),
			Billed_to_Date = ISNULL(#qva_rows.Billed_to_Date, 0.00) + ISNULL(#qva_rows.Adv_Billed, 0.00)--,
			--Actual_Hours = ISNULL(Actual_Hours, 0.00) - ISNULL(NB_Hours, 0.00),
			--Actual_Amount =  ISNULL(Actual_Amount, 0.00) - ISNULL(NB_Amount, 0.00)
	END	
	     
	UPDATE #qva_rows 
	SET 
		Quote_vs_Actual_PO = ISNULL(#qva_rows.Quoted_Total, 0.00) - (ISNULL(#qva_rows.Actual_Total, 0.00) + ISNULL(#qva_rows.Open_PO_Net_Amt, 0.00)),
		Actual_PO_vs_Billed = (ISNULL(#qva_rows.Actual_Total, 0.00) + ISNULL(#qva_rows.Open_PO_Net_Amt, 0.00)) - ISNULL(Billed_to_Date, 0.00)--,
		--Actual_Total = Actual_Total - NB_Total

	UPDATE #qva_rows SET ClientCode = (SELECT CL_CODE FROM JOB_LOG WHERE JOB_LOG.JOB_NUMBER = #qva_rows.JOB_NUMBER)
	UPDATE #qva_rows SET ClientName = (SELECT CL_NAME FROM CLIENT WHERE CLIENT.CL_CODE = #qva_rows.ClientCode)
	UPDATE #qva_rows SET DivisionCode = (SELECT DIV_CODE FROM JOB_LOG WHERE JOB_LOG.JOB_NUMBER = #qva_rows.JOB_NUMBER)
	UPDATE #qva_rows SET DivisionName = (SELECT DIV_NAME FROM DIVISION WHERE DIVISION.CL_CODE = #qva_rows.ClientCode AND DIVISION.DIV_CODE = #qva_rows.DivisionCode)
	UPDATE #qva_rows SET ProductCode = (SELECT PRD_CODE FROM JOB_LOG WHERE JOB_LOG.JOB_NUMBER = #qva_rows.JOB_NUMBER)
	UPDATE #qva_rows SET ProductDescription = (SELECT PRD_DESCRIPTION FROM PRODUCT WHERE PRODUCT.CL_CODE = #qva_rows.ClientCode AND PRODUCT.DIV_CODE = #qva_rows.DivisionCode AND PRODUCT.PRD_CODE = #qva_rows.ProductCode)
	UPDATE #qva_rows SET JOB_DESC = (SELECT JOB_DESC FROM JOB_LOG WHERE JOB_LOG.JOB_NUMBER = #qva_rows.JOB_NUMBER)
	UPDATE #qva_rows SET JOB_COMP_DESC = (SELECT JOB_COMP_DESC FROM JOB_COMPONENT WHERE JOB_COMPONENT.JOB_NUMBER = #qva_rows.JOB_NUMBER AND JOB_COMPONENT.JOB_COMPONENT_NBR = #qva_rows.JOB_COMPONENT_NBR)
	UPDATE #qva_rows SET EST_LOG_DESC = (SELECT EST_LOG_DESC FROM ESTIMATE_LOG WHERE ESTIMATE_LOG.ESTIMATE_NUMBER = #qva_rows.ESTIMATE_NUMBER)
	UPDATE #qva_rows SET EST_COMP_DESC = (SELECT EST_COMP_DESC FROM ESTIMATE_COMPONENT WHERE ESTIMATE_COMPONENT.ESTIMATE_NUMBER = #qva_rows.ESTIMATE_NUMBER AND ESTIMATE_COMPONENT.EST_COMPONENT_NBR = #qva_rows.EST_COMPONENT_NBR)
	UPDATE #qva_rows SET EST_QUOTE_DESC = (SELECT EST_QUOTE_DESC FROM ESTIMATE_QUOTE WHERE ESTIMATE_QUOTE.ESTIMATE_NUMBER = #qva_rows.ESTIMATE_NUMBER AND ESTIMATE_QUOTE.EST_COMPONENT_NBR = #qva_rows.EST_COMPONENT_NBR AND ESTIMATE_QUOTE.EST_QUOTE_NBR = #qva_rows.EST_QUOTE_NBR)
	UPDATE #qva_rows SET JOB_CLI_REF = (SELECT JOB_CLI_REF FROM JOB_LOG WHERE JOB_LOG.JOB_NUMBER = #qva_rows.JOB_NUMBER)
	
if @Display = 'Type'
Begin
	SELECT 
		FNC_CODE,
		FNC_DESCRIPTION,
		FNC_TYPE,
		CASE 
			WHEN FNC_TYPE = 'E' THEN 'Employee'
			WHEN FNC_TYPE = 'V' THEN 'Vendor'
			WHEN FNC_TYPE = 'I' THEN 'Income Only'
			WHEN FNC_TYPE = 'C' THEN 'Client Out of Pocket'
		END AS FNC_TYPE_DESC,

		ISNULL(Quoted_QtyHrs, 0.00) AS QuotedQtyHrs,
		ISNULL(Quoted_Amount, 0.00) AS QuotedAmount,
		ISNULL(Quoted_Markup, 0.00) AS QuotedMarkup,
		ISNULL(Quoted_Tax, 0.00) AS QuotedTax,	

		ISNULL(Quoted_Total, 0.00) AS QuotedTotal,

		ISNULL(Actual_Hours, 0.00) AS ActualHours,
		ISNULL(Actual_Amount, 0.00) AS ActualAmount,
		ISNULL(Actual_Markup, 0.00) AS ActualMarkup,
		ISNULL(Actual_Tax, 0.00) AS ActualTax,

		ISNULL(Actual_Total, 0.00) AS ActualTotal,

		ISNULL(Open_PO_Net_Amt, 0.00) AS OpenPONetAmt,
		ISNULL(Billed_to_Date, 0.00) AS BilledToDate,
		ISNULL(Quote_vs_Actual_PO, 0.00) AS QuotedvsActualPO,
		ISNULL(Actual_PO_vs_Billed, 0.00) AS ActualPOvsBilled,

		ISNULL(Qva, 0.00) AS Qva,
		ISNULL(Avb, 0.00) AS Avb,
		ISNULL(Qva_PO, 0.00) AS QvaPO,
		ISNULL(Avb_PO, 0.00) AS AvbPO,

		ISNULL(NB_Actual_Hours, 0.00) AS NBActualHours,
		ISNULL(NB_Actual_Total, 0.00) AS NBActualTotal,
		ISNULL(Adv_Billed, 0.00) AS AdvBilled,

		ISNULL(PO_Total, 0.00) AS POTotal,
		ISNULL(PO_Applied, 0.00) AS POApplied,
		ISNULL(NB_Tax, 0.00) AS NBTax,
		ISNULL(NB_Markup, 0.00) AS NBMarkup,
		ISNULL(NB_Amount, 0.00) AS NBAmount,
		ISNULL(APPROVED_AMT, 0.00) AS APPROVED_AMT,
		ISNULL(NB_Hours, 0.00) AS NBHours,

		ISNULL((Actual_Hours/NULLIF(Quoted_QtyHrs,0.00))*100.00,0.00) AS PERCENT_QUOTE,
		ISNULL(QUOTE_PERC, 0.00) AS PercentQuote,

		ISNULL(NB_Total, 0.00) AS NBTotal,
		ISNULL(QUOTE_PERC_AMT,0.00) AS PercentQuoteAmt

	FROM 
		#qva_rows 
	ORDER BY 
		FNC_TYPE, FNC_DESCRIPTION;

	--SUMMARY DATA
	INSERT INTO #qva_rows_sum
	SELECT 		
		NULL,
		CASE 
			WHEN FNC_TYPE = 'E' THEN 'Employee'
			WHEN FNC_TYPE = 'V' THEN 'Vendor'
			WHEN FNC_TYPE = 'I' THEN 'Income Only'
			WHEN FNC_TYPE = 'C' THEN 'Client Out of Pocket'
		END AS FNC_TYPE_DESC,
		FNC_TYPE,
		NULL,
		NULL,
		NULL,
		NULL,

		SUM(ISNULL(Quoted_QtyHrs, 0.00)) AS QuotedQtyHrs,
		SUM(ISNULL(Quoted_Amount, 0.00)) AS QuotedAmount,
		SUM(ISNULL(Quoted_Markup, 0.00)) AS QuotedMarkup,
		SUM(ISNULL(Quoted_Tax, 0.00)) AS QuotedTax,	

		SUM(ISNULL(Quoted_Total, 0.00)) AS QuotedTotal,

		SUM(ISNULL(Actual_Hours, 0.00)) AS ActualHours,
		SUM(ISNULL(Actual_Amount, 0.00)) AS ActualAmount,
		SUM(ISNULL(Actual_Markup, 0.00)) AS ActualMarkup,
		SUM(ISNULL(Actual_Tax, 0.00)) AS ActualTax,

		SUM(ISNULL(Actual_Total, 0.00)) AS ActualTotal,

		SUM(ISNULL(Open_PO_Net_Amt, 0.00)) AS OpenPONetAmt,
		SUM(ISNULL(Billed_to_Date, 0.00)) AS BilledToDate,
		SUM(ISNULL(Quote_vs_Actual_PO, 0.00)) AS QuotedvsActualPO,
		SUM(ISNULL(Actual_PO_vs_Billed, 0.00)) AS ActualPOvsBilled,

		SUM(ISNULL(Qva, 0.00)) AS Qva,
		SUM(ISNULL(Avb, 0.00)) AS Avb,
		SUM(ISNULL(Qva_PO, 0.00)) AS QvaPO,
		SUM(ISNULL(Avb_PO, 0.00)) AS AvbPO,

		SUM(ISNULL(NB_Actual_Hours, 0.00)) AS NBActualHours,
		SUM(ISNULL(NB_Actual_Total, 0.00)) AS NBActualTotal,
		SUM(ISNULL(Adv_Billed, 0.00)) AS AdvBilled,

		SUM(ISNULL(PO_Total, 0.00)) AS POTotal,
		SUM(ISNULL(PO_Applied, 0.00)) AS POApplied,
		SUM(ISNULL(NB_Tax, 0.00)) AS NBTax,
		SUM(ISNULL(NB_Markup, 0.00)) AS NBMarkup,
		SUM(ISNULL(NB_Amount, 0.00)) AS NBAmount,
		SUM(ISNULL(APPROVED_AMT, 0.00)) AS APPROVED_AMT,
		SUM(ISNULL(NB_Hours, 0.00)) AS NBHours,
			
		ISNULL(SUM(QUOTE_PERC), 0.00) AS PercentQuote,
		SUM(ISNULL(NB_Total, 0.00)) AS NBTotal,
		SUM(ISNULL(Billed_to_Date_Total,0.00)) AS Billed_to_Date_Total,
		ISNULL(SUM(QUOTE_PERC_AMT), 0.00) AS PercentQuoteAmt

	FROM 
		#qva_rows 
	GROUP BY
		FNC_TYPE			
	ORDER BY 
		FNC_TYPE;	

	IF @BREAKOUT_ALL_NB = 1
	BEGIN

		UPDATE #qva_rows_sum 
		SET 
			QUOTE_PERC = ((ISNULL(#qva_rows_sum.Actual_Hours, 0.00) - ISNULL(#qva_rows_sum.NB_Hours, 0.00)) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
		WHERE #qva_rows_sum.Quoted_QtyHrs > 0;

		UPDATE #qva_rows_sum 
		SET 		
			QUOTE_PERC_AMT = ((ISNULL(#qva_rows_sum.Actual_Amount, 0.00) - ISNULL(#qva_rows_sum.NB_Amount, 0.00)) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
		WHERE #qva_rows_sum.Quoted_Amount > 0;

	END
	
	IF @BREAKOUT_NB_FOR_FT = 1 AND @BREAKOUT_ALL_NB = 0
	BEGIN

		IF @FILTER_EMPLOYEE_TIME = 1
		BEGIN

			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC = ((ISNULL(#qva_rows_sum.Actual_Hours, 0.00) - ISNULL(#qva_rows_sum.NB_Hours, 0.00)) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_QtyHrs > 0 AND FNC_TYPE = 'E';
			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC_AMT = ((ISNULL(#qva_rows_sum.Actual_Amount, 0.00) - ISNULL(#qva_rows_sum.NB_Amount, 0.00)) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_Amount > 0 AND FNC_TYPE = 'E';

		END
		IF @FILTER_INCOME_ONLY = 1
		BEGIN

			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC = ((ISNULL(#qva_rows_sum.Actual_Hours, 0.00) - ISNULL(#qva_rows_sum.NB_Hours, 0.00)) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_QtyHrs > 0 AND FNC_TYPE = 'I';
			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC_AMT = ((ISNULL(#qva_rows_sum.Actual_Amount, 0.00) - ISNULL(#qva_rows_sum.NB_Amount, 0.00)) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_Amount > 0 AND FNC_TYPE = 'I';

		END
		IF @FILTER_VENDOR = 1
		BEGIN

			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC = ((ISNULL(#qva_rows_sum.Actual_Hours, 0.00) - ISNULL(#qva_rows_sum.NB_Hours, 0.00)) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_QtyHrs > 0 AND FNC_TYPE = 'V';
			UPDATE #qva_rows_sum 
			SET
				QUOTE_PERC_AMT = ((ISNULL(#qva_rows_sum.Actual_Amount, 0.00) - ISNULL(#qva_rows_sum.NB_Amount, 0.00)) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_Amount > 0 AND FNC_TYPE = 'V';

		END		

	END
	
	UPDATE #qva_rows_sum SET QUOTE_PERC = (ISNULL(#qva_rows_sum.Actual_Hours, 0.00) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
	WHERE #qva_rows_sum.Quoted_QtyHrs > 0;

	UPDATE #qva_rows_sum SET QUOTE_PERC_AMT = (ISNULL(#qva_rows_sum.Actual_Amount, 0.00) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
	WHERE #qva_rows_sum.Quoted_Amount > 0 ;

	SELECT
		FNC_TYPE,
		FNC_DESCRIPTION,

		ISNULL(Quoted_QtyHrs, 0.00) AS QuotedQtyHrs,
		ISNULL(Quoted_Amount, 0.00) AS QuotedAmount,
		ISNULL(Quoted_Markup, 0.00) AS QuotedMarkup,
		ISNULL(Quoted_Tax, 0.00) AS QuotedTax,	

		ISNULL(Quoted_Total, 0.00) AS QuotedTotal,

		ISNULL(Actual_Hours, 0.00) AS ActualHours,
		ISNULL(Actual_Amount, 0.00) AS ActualAmount,
		ISNULL(Actual_Markup, 0.00) AS ActualMarkup,
		ISNULL(Actual_Tax, 0.00) AS ActualTax,

		ISNULL(Actual_Total, 0.00) AS ActualTotal,

		ISNULL(Open_PO_Net_Amt, 0.00) AS OpenPONetAmt,
		ISNULL(Billed_to_Date, 0.00) AS BilledToDate,
		ISNULL(Quote_vs_Actual_PO, 0.00) AS QuotedvsActualPO,
		ISNULL(Actual_PO_vs_Billed, 0.00) AS ActualPOvsBilled,

		ISNULL(Qva, 0.00) AS Qva,
		ISNULL(Avb, 0.00) AS Avb,
		ISNULL(Qva_PO, 0.00) AS QvaPO,
		ISNULL(Avb_PO, 0.00) AS AvbPO,

		ISNULL(NB_Actual_Hours, 0.00) AS NBActualHours,
		ISNULL(NB_Actual_Total, 0.00) AS NBActualTotal,
		ISNULL(Adv_Billed, 0.00) AS AdvBilled,

		ISNULL(PO_Total, 0.00) AS POTotal,
		ISNULL(PO_Applied, 0.00) AS POApplied,
		ISNULL(NB_Tax, 0.00) AS NBTax,
		ISNULL(NB_Markup, 0.00) AS NBMarkup,
		ISNULL(NB_Amount, 0.00) AS NBAmount,
		ISNULL(APPROVED_AMT, 0.00) AS APPROVED_AMT,
		ISNULL(NB_Hours, 0.00) AS NBHours,

		ISNULL((Actual_Hours/NULLIF(Quoted_QtyHrs,0.00))*100.00,0.00) AS PERCENT_QUOTE,
		ISNULL(QUOTE_PERC, 0.00) AS PercentQuote,

		ISNULL(NB_Total, 0.00) AS NBTotal,
		ISNULL(QUOTE_PERC_AMT, 0.00) AS PercentQuoteAmt

	FROM 
		#qva_rows_sum 
	ORDER BY 
		FNC_TYPE; 
End

if @Display = 'Heading'
Begin
	SELECT 
		FNC_CODE,
		FNC_DESCRIPTION,
		FNC_TYPE,
		CASE 
			WHEN FNC_TYPE = 'E' THEN 'Employee'
			WHEN FNC_TYPE = 'V' THEN 'Vendor'
			WHEN FNC_TYPE = 'I' THEN 'Income Only'			
			WHEN FNC_TYPE = 'C' THEN 'Client Out of Pocket'
		END AS FNC_TYPE_DESC,
		ISNULL(FNC_HEADING_ID,'') AS FNC_HEADING_ID,
		ISNULL(FNC_HEADING_DESC,'') AS FNC_HEADING_DESC,
		ISNULL(FNC_HEADING_SEQ,'') AS FNC_HEADING_SEQ,

		ISNULL(Quoted_QtyHrs, 0.00) AS QuotedQtyHrs,
		ISNULL(Quoted_Amount, 0.00) AS QuotedAmount,
		ISNULL(Quoted_Markup, 0.00) AS QuotedMarkup,
		ISNULL(Quoted_Tax, 0.00) AS QuotedTax,	

		ISNULL(Quoted_Total, 0.00) AS QuotedTotal,

		ISNULL(Actual_Hours, 0.00) AS ActualHours,
		ISNULL(Actual_Amount, 0.00) AS ActualAmount,
		ISNULL(Actual_Markup, 0.00) AS ActualMarkup,
		ISNULL(Actual_Tax, 0.00) AS ActualTax,

		ISNULL(Actual_Total, 0.00) AS ActualTotal,

		ISNULL(Open_PO_Net_Amt, 0.00) AS OpenPONetAmt,
		ISNULL(Billed_to_Date, 0.00) AS BilledToDate,
		ISNULL(Quote_vs_Actual_PO, 0.00) AS QuotedvsActualPO,
		ISNULL(Actual_PO_vs_Billed, 0.00) AS ActualPOvsBilled,

		ISNULL(Qva, 0.00) AS Qva,
		ISNULL(Avb, 0.00) AS Avb,
		ISNULL(Qva_PO, 0.00) AS QvaPO,
		ISNULL(Avb_PO, 0.00) AS AvbPO,

		ISNULL(NB_Actual_Hours, 0.00) AS NBActualHours,
		ISNULL(NB_Actual_Total, 0.00) AS NBActualTotal,
		ISNULL(Adv_Billed, 0.00) AS AdvBilled,

		ISNULL(PO_Total, 0.00) AS POTotal,
		ISNULL(PO_Applied, 0.00) AS POApplied,
		ISNULL(NB_Tax, 0.00) AS NBTax,
		ISNULL(NB_Markup, 0.00) AS NBMarkup,
		ISNULL(NB_Amount, 0.00) AS NBAmount,
		ISNULL(APPROVED_AMT, 0.00) AS APPROVED_AMT,
		ISNULL(NB_Hours, 0.00) AS NBHours,

		ISNULL((Actual_Hours/NULLIF(Quoted_QtyHrs,0.00))*100.00,0.00) AS PERCENT_QUOTE,
		ISNULL(QUOTE_PERC, 0.00) AS PercentQuote,

		ISNULL(NB_Total, 0.00) AS NBTotal,
		ISNULL(QUOTE_PERC_AMT, 0.00) AS PercentQuoteAmt

	FROM 
		#qva_rows 
	ORDER BY 
		FNC_HEADING_SEQ;

	--SUMMARY DATA
	INSERT INTO #qva_rows_sum
	SELECT 		
		NULL,NULL,NULL,
		FNC_HEADING_ID,
		FNC_HEADING_DESC,
		FNC_HEADING_SEQ,
		NULL,

		SUM(ISNULL(Quoted_QtyHrs, 0.00)) AS QuotedQtyHrs,
		SUM(ISNULL(Quoted_Amount, 0.00)) AS QuotedAmount,
		SUM(ISNULL(Quoted_Markup, 0.00)) AS QuotedMarkup,
		SUM(ISNULL(Quoted_Tax, 0.00)) AS QuotedTax,	

		SUM(ISNULL(Quoted_Total, 0.00)) AS QuotedTotal,

		SUM(ISNULL(Actual_Hours, 0.00)) AS ActualHours,
		SUM(ISNULL(Actual_Amount, 0.00)) AS ActualAmount,
		SUM(ISNULL(Actual_Markup, 0.00)) AS ActualMarkup,
		SUM(ISNULL(Actual_Tax, 0.00)) AS ActualTax,

		SUM(ISNULL(Actual_Total, 0.00)) AS ActualTotal,

		SUM(ISNULL(Open_PO_Net_Amt, 0.00)) AS OpenPONetAmt,
		SUM(ISNULL(Billed_to_Date, 0.00)) AS BilledToDate,
		SUM(ISNULL(Quote_vs_Actual_PO, 0.00)) AS QuotedvsActualPO,
		SUM(ISNULL(Actual_PO_vs_Billed, 0.00)) AS ActualPOvsBilled,

		SUM(ISNULL(Qva, 0.00)) AS Qva,
		SUM(ISNULL(Avb, 0.00)) AS Avb,
		SUM(ISNULL(Qva_PO, 0.00)) AS QvaPO,
		SUM(ISNULL(Avb_PO, 0.00)) AS AvbPO,

		SUM(ISNULL(NB_Actual_Hours, 0.00)) AS NBActualHours,
		SUM(ISNULL(NB_Actual_Total, 0.00)) AS NBActualTotal,
		SUM(ISNULL(Adv_Billed, 0.00)) AS AdvBilled,

		SUM(ISNULL(PO_Total, 0.00)) AS POTotal,
		SUM(ISNULL(PO_Applied, 0.00)) AS POApplied,
		SUM(ISNULL(NB_Tax, 0.00)) AS NBTax,
		SUM(ISNULL(NB_Markup, 0.00)) AS NBMarkup,
		SUM(ISNULL(NB_Amount, 0.00)) AS NBAmount,
		SUM(ISNULL(APPROVED_AMT, 0.00)) AS APPROVED_AMT,
		SUM(ISNULL(NB_Hours, 0.00)) AS NBHours,
			
		ISNULL(SUM(QUOTE_PERC), 0.00) AS PercentQuote,
		SUM(ISNULL(NB_Total, 0.00)) AS NBTotal,
		SUM(ISNULL(Billed_to_Date_Total,0.00)) AS Billed_to_Date_Total,			
		ISNULL(SUM(QUOTE_PERC_AMT), 0.00) AS PercentQuoteAmt

	FROM 
		#qva_rows 
	GROUP BY
		FNC_HEADING_SEQ, FNC_HEADING_DESC, FNC_HEADING_ID				
	ORDER BY 
		FNC_HEADING_SEQ;	

	IF @BREAKOUT_ALL_NB = 1
	BEGIN

		UPDATE #qva_rows_sum 
		SET 
			QUOTE_PERC = ((ISNULL(#qva_rows_sum.Actual_Hours, 0.00) - ISNULL(#qva_rows_sum.NB_Hours, 0.00)) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
		WHERE #qva_rows_sum.Quoted_QtyHrs > 0;

		UPDATE #qva_rows_sum 
		SET 		
			QUOTE_PERC_AMT = ((ISNULL(#qva_rows_sum.Actual_Amount, 0.00) - ISNULL(#qva_rows_sum.NB_Amount, 0.00)) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
		WHERE #qva_rows_sum.Quoted_Amount > 0;

	END
	
	IF @BREAKOUT_NB_FOR_FT = 1 AND @BREAKOUT_ALL_NB = 0
	BEGIN

		IF @FILTER_EMPLOYEE_TIME = 1
		BEGIN

			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC = ((ISNULL(#qva_rows_sum.Actual_Hours, 0.00) - ISNULL(#qva_rows_sum.NB_Hours, 0.00)) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_QtyHrs > 0 AND FNC_TYPE = 'E';
			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC_AMT = ((ISNULL(#qva_rows_sum.Actual_Amount, 0.00) - ISNULL(#qva_rows_sum.NB_Amount, 0.00)) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_Amount > 0 AND FNC_TYPE = 'E';

		END
		IF @FILTER_INCOME_ONLY = 1
		BEGIN

			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC = ((ISNULL(#qva_rows_sum.Actual_Hours, 0.00) - ISNULL(#qva_rows_sum.NB_Hours, 0.00)) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_QtyHrs > 0 AND FNC_TYPE = 'I';
			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC_AMT = ((ISNULL(#qva_rows_sum.Actual_Amount, 0.00) - ISNULL(#qva_rows_sum.NB_Amount, 0.00)) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_Amount > 0 AND FNC_TYPE = 'I';

		END
		IF @FILTER_VENDOR = 1
		BEGIN

			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC = ((ISNULL(#qva_rows_sum.Actual_Hours, 0.00) - ISNULL(#qva_rows_sum.NB_Hours, 0.00)) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_QtyHrs > 0 AND FNC_TYPE = 'V';
			UPDATE #qva_rows_sum 
			SET
				QUOTE_PERC_AMT = ((ISNULL(#qva_rows_sum.Actual_Amount, 0.00) - ISNULL(#qva_rows_sum.NB_Amount, 0.00)) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_Amount > 0 AND FNC_TYPE = 'V';

		END		

	END

	UPDATE #qva_rows_sum SET QUOTE_PERC = (ISNULL(#qva_rows_sum.Actual_Hours, 0.00) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
	WHERE #qva_rows_sum.Quoted_QtyHrs > 0;

	UPDATE #qva_rows_sum SET QUOTE_PERC_AMT = (ISNULL(#qva_rows_sum.Actual_Amount, 0.00) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
	WHERE #qva_rows_sum.Quoted_Amount > 0;

	SELECT
		ISNULL(FNC_HEADING_ID,'') AS FNC_HEADING_ID,
		ISNULL(FNC_HEADING_DESC,'') AS FNC_DESCRIPTION,
		ISNULL(FNC_HEADING_SEQ,'') AS FNC_HEADING_SEQ,

		ISNULL(Quoted_QtyHrs, 0.00) AS QuotedQtyHrs,
		ISNULL(Quoted_Amount, 0.00) AS QuotedAmount,
		ISNULL(Quoted_Markup, 0.00) AS QuotedMarkup,
		ISNULL(Quoted_Tax, 0.00) AS QuotedTax,	

		ISNULL(Quoted_Total, 0.00) AS QuotedTotal,

		ISNULL(Actual_Hours, 0.00) AS ActualHours,
		ISNULL(Actual_Amount, 0.00) AS ActualAmount,
		ISNULL(Actual_Markup, 0.00) AS ActualMarkup,
		ISNULL(Actual_Tax, 0.00) AS ActualTax,

		ISNULL(Actual_Total, 0.00) AS ActualTotal,

		ISNULL(Open_PO_Net_Amt, 0.00) AS OpenPONetAmt,
		ISNULL(Billed_to_Date, 0.00) AS BilledToDate,
		ISNULL(Quote_vs_Actual_PO, 0.00) AS QuotedvsActualPO,
		ISNULL(Actual_PO_vs_Billed, 0.00) AS ActualPOvsBilled,

		ISNULL(Qva, 0.00) AS Qva,
		ISNULL(Avb, 0.00) AS Avb,
		ISNULL(Qva_PO, 0.00) AS QvaPO,
		ISNULL(Avb_PO, 0.00) AS AvbPO,

		ISNULL(NB_Actual_Hours, 0.00) AS NBActualHours,
		ISNULL(NB_Actual_Total, 0.00) AS NBActualTotal,
		ISNULL(Adv_Billed, 0.00) AS AdvBilled,

		ISNULL(PO_Total, 0.00) AS POTotal,
		ISNULL(PO_Applied, 0.00) AS POApplied,
		ISNULL(NB_Tax, 0.00) AS NBTax,
		ISNULL(NB_Markup, 0.00) AS NBMarkup,
		ISNULL(NB_Amount, 0.00) AS NBAmount,
		ISNULL(APPROVED_AMT, 0.00) AS APPROVED_AMT,
		ISNULL(NB_Hours, 0.00) AS NBHours,

		ISNULL((Actual_Hours/NULLIF(Quoted_QtyHrs,0.00))*100.00,0.00) AS PERCENT_QUOTE,
		ISNULL(QUOTE_PERC, 0.00) AS PercentQuote,

		ISNULL(NB_Total, 0.00) AS NBTotal,
		ISNULL(QUOTE_PERC_AMT, 0.00) AS PercentQuoteAmt

	FROM 
		#qva_rows_sum 
	ORDER BY 
		FNC_HEADING_SEQ; 
	
End

if @Display = 'Consolidation'
Begin
	SELECT 
		FNC_CONSOL_CODE,
		(SELECT FNC_DESCRIPTION FROM FUNCTIONS WHERE FNC_CODE COLLATE SQL_Latin1_General_CP1_CS_AS = #qva_rows.FNC_CONSOL_CODE) AS FNC_CONSOL_DESC,
		FNC_CODE,
		FNC_DESCRIPTION,

		ISNULL(Quoted_QtyHrs, 0.00) AS QuotedQtyHrs,
		ISNULL(Quoted_Amount, 0.00) AS QuotedAmount,
		ISNULL(Quoted_Markup, 0.00) AS QuotedMarkup,
		ISNULL(Quoted_Tax, 0.00) AS QuotedTax,	

		ISNULL(Quoted_Total, 0.00) AS QuotedTotal,

		ISNULL(Actual_Hours, 0.00) AS ActualHours,
		ISNULL(Actual_Amount, 0.00) AS ActualAmount,
		ISNULL(Actual_Markup, 0.00) AS ActualMarkup,
		ISNULL(Actual_Tax, 0.00) AS ActualTax,

		ISNULL(Actual_Total, 0.00) AS ActualTotal,

		ISNULL(Open_PO_Net_Amt, 0.00) AS OpenPONetAmt,
		ISNULL(Billed_to_Date, 0.00) AS BilledToDate,
		ISNULL(Quote_vs_Actual_PO, 0.00) AS QuotedvsActualPO,
		ISNULL(Actual_PO_vs_Billed, 0.00) AS ActualPOvsBilled,

		ISNULL(Qva, 0.00) AS Qva,
		ISNULL(Avb, 0.00) AS Avb,
		ISNULL(Qva_PO, 0.00) AS QvaPO,
		ISNULL(Avb_PO, 0.00) AS AvbPO,

		ISNULL(NB_Actual_Hours, 0.00) AS NBActualHours,
		ISNULL(NB_Actual_Total, 0.00) AS NBActualTotal,
		ISNULL(Adv_Billed, 0.00) AS AdvBilled,

		ISNULL(PO_Total, 0.00) AS POTotal,
		ISNULL(PO_Applied, 0.00) AS POApplied,
		ISNULL(NB_Tax, 0.00) AS NBTax,
		ISNULL(NB_Markup, 0.00) AS NBMarkup,
		ISNULL(NB_Amount, 0.00) AS NBAmount,
		ISNULL(APPROVED_AMT, 0.00) AS APPROVED_AMT,
		ISNULL(NB_Hours, 0.00) AS NBHours,

		ISNULL((Actual_Hours/NULLIF(Quoted_QtyHrs,0.00))*100.00,0.00) AS PERCENT_QUOTE,
		ISNULL(QUOTE_PERC, 0.00) AS PercentQuote,

		ISNULL(NB_Total, 0.00) AS NBTotal,
		ISNULL(QUOTE_PERC_AMT, 0.00) AS PercentQuoteAmt

	FROM 
		#qva_rows 
	ORDER BY 
		FNC_CONSOL_CODE;

	--SUMMARY DATA
	INSERT INTO #qva_rows_sum
	SELECT 		
		NULL,(SELECT FNC_DESCRIPTION FROM FUNCTIONS WHERE FNC_CODE COLLATE SQL_Latin1_General_CP1_CS_AS = #qva_rows.FNC_CONSOL_CODE) AS FNC_CONSOL_DESC,NULL,
		NULL,
		NULL,
		NULL,
		FNC_CONSOL_CODE,		

		SUM(ISNULL(Quoted_QtyHrs, 0.00)) AS QuotedQtyHrs,
		SUM(ISNULL(Quoted_Amount, 0.00)) AS QuotedAmount,
		SUM(ISNULL(Quoted_Markup, 0.00)) AS QuotedMarkup,
		SUM(ISNULL(Quoted_Tax, 0.00)) AS QuotedTax,	

		SUM(ISNULL(Quoted_Total, 0.00)) AS QuotedTotal,

		SUM(ISNULL(Actual_Hours, 0.00)) AS ActualHours,
		SUM(ISNULL(Actual_Amount, 0.00)) AS ActualAmount,
		SUM(ISNULL(Actual_Markup, 0.00)) AS ActualMarkup,
		SUM(ISNULL(Actual_Tax, 0.00)) AS ActualTax,

		SUM(ISNULL(Actual_Total, 0.00)) AS ActualTotal,

		SUM(ISNULL(Open_PO_Net_Amt, 0.00)) AS OpenPONetAmt,
		SUM(ISNULL(Billed_to_Date, 0.00)) AS BilledToDate,
		SUM(ISNULL(Quote_vs_Actual_PO, 0.00)) AS QuotedvsActualPO,
		SUM(ISNULL(Actual_PO_vs_Billed, 0.00)) AS ActualPOvsBilled,

		SUM(ISNULL(Qva, 0.00)) AS Qva,
		SUM(ISNULL(Avb, 0.00)) AS Avb,
		SUM(ISNULL(Qva_PO, 0.00)) AS QvaPO,
		SUM(ISNULL(Avb_PO, 0.00)) AS AvbPO,

		SUM(ISNULL(NB_Actual_Hours, 0.00)) AS NBActualHours,
		SUM(ISNULL(NB_Actual_Total, 0.00)) AS NBActualTotal,
		SUM(ISNULL(Adv_Billed, 0.00)) AS AdvBilled,

		SUM(ISNULL(PO_Total, 0.00)) AS POTotal,
		SUM(ISNULL(PO_Applied, 0.00)) AS POApplied,
		SUM(ISNULL(NB_Tax, 0.00)) AS NBTax,
		SUM(ISNULL(NB_Markup, 0.00)) AS NBMarkup,
		SUM(ISNULL(NB_Amount, 0.00)) AS NBAmount,
		SUM(ISNULL(APPROVED_AMT, 0.00)) AS APPROVED_AMT,
		SUM(ISNULL(NB_Hours, 0.00)) AS NBHours,
			
		ISNULL(SUM(QUOTE_PERC), 0.00) AS PercentQuote,
		SUM(ISNULL(NB_Total, 0.00)) AS NBTotal,
		SUM(ISNULL(Billed_to_Date_Total,0.00)) AS Billed_to_Date_Total,
		ISNULL(SUM(QUOTE_PERC_AMT), 0.00) AS PercentQuoteAmt

	FROM 
		#qva_rows 
	GROUP BY
		FNC_CONSOL_CODE	
	ORDER BY 
		FNC_CONSOL_CODE;	

	IF @BREAKOUT_ALL_NB = 1
	BEGIN

		UPDATE #qva_rows_sum 
		SET 
			QUOTE_PERC = ((ISNULL(#qva_rows_sum.Actual_Hours, 0.00) - ISNULL(#qva_rows_sum.NB_Hours, 0.00)) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
		WHERE #qva_rows_sum.Quoted_QtyHrs > 0;

		UPDATE #qva_rows_sum 
		SET 		
			QUOTE_PERC_AMT = ((ISNULL(#qva_rows_sum.Actual_Amount, 0.00) - ISNULL(#qva_rows_sum.NB_Amount, 0.00)) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
		WHERE #qva_rows_sum.Quoted_Amount > 0;

	END
	
	IF @BREAKOUT_NB_FOR_FT = 1 AND @BREAKOUT_ALL_NB = 0
	BEGIN

		IF @FILTER_EMPLOYEE_TIME = 1
		BEGIN

			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC = ((ISNULL(#qva_rows_sum.Actual_Hours, 0.00) - ISNULL(#qva_rows_sum.NB_Hours, 0.00)) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_QtyHrs > 0 AND FNC_TYPE = 'E';
			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC_AMT = ((ISNULL(#qva_rows_sum.Actual_Amount, 0.00) - ISNULL(#qva_rows_sum.NB_Amount, 0.00)) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_Amount > 0 AND FNC_TYPE = 'E';

		END
		IF @FILTER_INCOME_ONLY = 1
		BEGIN

			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC = ((ISNULL(#qva_rows_sum.Actual_Hours, 0.00) - ISNULL(#qva_rows_sum.NB_Hours, 0.00)) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_QtyHrs > 0 AND FNC_TYPE = 'I';
			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC_AMT = ((ISNULL(#qva_rows_sum.Actual_Amount, 0.00) - ISNULL(#qva_rows_sum.NB_Amount, 0.00)) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_Amount > 0 AND FNC_TYPE = 'I';

		END
		IF @FILTER_VENDOR = 1
		BEGIN

			UPDATE #qva_rows_sum 
			SET 
				QUOTE_PERC = ((ISNULL(#qva_rows_sum.Actual_Hours, 0.00) - ISNULL(#qva_rows_sum.NB_Hours, 0.00)) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_QtyHrs > 0 AND FNC_TYPE = 'V';
			UPDATE #qva_rows_sum 
			SET
				QUOTE_PERC_AMT = ((ISNULL(#qva_rows_sum.Actual_Amount, 0.00) - ISNULL(#qva_rows_sum.NB_Amount, 0.00)) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
			WHERE #qva_rows_sum.Quoted_Amount > 0 AND FNC_TYPE = 'V';

		END		

	END

	UPDATE #qva_rows_sum SET QUOTE_PERC = (ISNULL(#qva_rows_sum.Actual_Hours, 0.00) / ISNULL(#qva_rows_sum.Quoted_QtyHrs, 0.00)) * 100
	WHERE #qva_rows_sum.Quoted_QtyHrs > 0;

	UPDATE #qva_rows_sum SET QUOTE_PERC_AMT = (ISNULL(#qva_rows_sum.Actual_Amount, 0.00) / ISNULL(#qva_rows_sum.Quoted_Amount, 0.00)) * 100
	WHERE #qva_rows_sum.Quoted_Amount > 0;

	SELECT
		FNC_CONSOL_CODE,
		FNC_DESCRIPTION,

		ISNULL(Quoted_QtyHrs, 0.00) AS QuotedQtyHrs,
		ISNULL(Quoted_Amount, 0.00) AS QuotedAmount,
		ISNULL(Quoted_Markup, 0.00) AS QuotedMarkup,
		ISNULL(Quoted_Tax, 0.00) AS QuotedTax,	

		ISNULL(Quoted_Total, 0.00) AS QuotedTotal,

		ISNULL(Actual_Hours, 0.00) AS ActualHours,
		ISNULL(Actual_Amount, 0.00) AS ActualAmount,
		ISNULL(Actual_Markup, 0.00) AS ActualMarkup,
		ISNULL(Actual_Tax, 0.00) AS ActualTax,

		ISNULL(Actual_Total, 0.00) AS ActualTotal,

		ISNULL(Open_PO_Net_Amt, 0.00) AS OpenPONetAmt,
		ISNULL(Billed_to_Date, 0.00) AS BilledToDate,
		ISNULL(Quote_vs_Actual_PO, 0.00) AS QuotedvsActualPO,
		ISNULL(Actual_PO_vs_Billed, 0.00) AS ActualPOvsBilled,

		ISNULL(Qva, 0.00) AS Qva,
		ISNULL(Avb, 0.00) AS Avb,
		ISNULL(Qva_PO, 0.00) AS QvaPO,
		ISNULL(Avb_PO, 0.00) AS AvbPO,

		ISNULL(NB_Actual_Hours, 0.00) AS NBActualHours,
		ISNULL(NB_Actual_Total, 0.00) AS NBActualTotal,
		ISNULL(Adv_Billed, 0.00) AS AdvBilled,

		ISNULL(PO_Total, 0.00) AS POTotal,
		ISNULL(PO_Applied, 0.00) AS POApplied,
		ISNULL(NB_Tax, 0.00) AS NBTax,
		ISNULL(NB_Markup, 0.00) AS NBMarkup,
		ISNULL(NB_Amount, 0.00) AS NBAmount,
		ISNULL(APPROVED_AMT, 0.00) AS APPROVED_AMT,
		ISNULL(NB_Hours, 0.00) AS NBHours,

		ISNULL((Actual_Hours/NULLIF(Quoted_QtyHrs,0.00))*100.00,0.00) AS PERCENT_QUOTE,
		ISNULL(QUOTE_PERC, 0.00) AS PercentQuote,

		ISNULL(NB_Total, 0.00) AS NBTotal,
		ISNULL(QUOTE_PERC_AMT, 0.00) AS PercentQuoteAmt

	FROM 
		#qva_rows_sum 
	ORDER BY 
		FNC_CONSOL_CODE; 

End

if @Display = 'Function'
Begin
	SELECT 
		FNC_CODE,
		FNC_DESCRIPTION,
		FNC_TYPE,
		CASE 
			WHEN FNC_TYPE = 'E' THEN 'Employee'
			WHEN FNC_TYPE = 'V' THEN 'Vendor'
			WHEN FNC_TYPE = 'I' THEN 'Income Only'
			WHEN FNC_TYPE = 'C' THEN 'Client Out of Pocket'
		END AS FNC_TYPE_DESC,

		ISNULL(Quoted_QtyHrs, 0.00) AS QuotedQtyHrs,
		ISNULL(Quoted_Amount, 0.00) AS QuotedAmount,
		ISNULL(Quoted_Markup, 0.00) AS QuotedMarkup,
		ISNULL(Quoted_Tax, 0.00) AS QuotedTax,	

		ISNULL(Quoted_Total, 0.00) AS QuotedTotal,

		ISNULL(Actual_Hours, 0.00) AS ActualHours,
		ISNULL(Actual_Amount, 0.00) AS ActualAmount,
		ISNULL(Actual_Markup, 0.00) AS ActualMarkup,
		ISNULL(Actual_Tax, 0.00) AS ActualTax,

		ISNULL(Actual_Total, 0.00) AS ActualTotal,

		ISNULL(Open_PO_Net_Amt, 0.00) AS OpenPONetAmt,
		ISNULL(Billed_to_Date, 0.00) AS BilledToDate,
		ISNULL(Quote_vs_Actual_PO, 0.00) AS QuotedvsActualPO,
		ISNULL(Actual_PO_vs_Billed, 0.00) AS ActualPOvsBilled,

		ISNULL(Qva, 0.00) AS Qva,
		ISNULL(Avb, 0.00) AS Avb,
		ISNULL(Qva_PO, 0.00) AS QvaPO,
		ISNULL(Avb_PO, 0.00) AS AvbPO,

		ISNULL(NB_Actual_Hours, 0.00) AS NBActualHours,
		ISNULL(NB_Actual_Total, 0.00) AS NBActualTotal,
		ISNULL(Adv_Billed, 0.00) AS AdvBilled,

		ISNULL(PO_Total, 0.00) AS POTotal,
		ISNULL(PO_Applied, 0.00) AS POApplied,
		ISNULL(NB_Tax, 0.00) AS NBTax,
		ISNULL(NB_Markup, 0.00) AS NBMarkup,
		ISNULL(NB_Amount, 0.00) AS NBAmount,
		ISNULL(APPROVED_AMT, 0.00) AS APPROVED_AMT,
		ISNULL(NB_Hours, 0.00) AS NBHours,

		ISNULL((Actual_Hours/NULLIF(Quoted_QtyHrs,0.00))*100.00,0.00) AS PERCENT_QUOTE,
		ISNULL(QUOTE_PERC, 0.00) AS PercentQuote,

		ISNULL(NB_Total, 0.00) AS NBTotal,
		ISNULL(QUOTE_PERC_AMT,0.00) AS PercentQuoteAmt

	FROM 
		#qva_rows 
	ORDER BY 
		FNC_TYPE, FNC_DESCRIPTION;

End

if @Display = 'JDA'
Begin
	SELECT 
		ClientCode,
		ClientName,
		DivisionCode,
		DivisionName,
		ProductCode,
		ProductDescription,
		JOB_NUMBER AS JobNumber,
		JOB_DESC AS JobDescription,
		JOB_COMPONENT_NBR AS JobComponentNumber,
		JOB_COMP_DESC AS JobComponentDescription,
		ESTIMATE_NUMBER AS EstimateNummber,
		EST_LOG_DESC AS EstimateDescription,
		EST_COMPONENT_NBR AS EstimateComponentNumber,
		EST_COMP_DESC AS EstimateComponentDescription,
		EST_QUOTE_NBR AS EstimateQuoteNumber,
		EST_QUOTE_DESC AS EstimateQuoteDescription,
		EST_REV_NBR AS EstimateRevisionNumber,
		JOB_CLI_REF AS ClientReference,
		FNC_CODE AS FunctionCode,
		FNC_DESCRIPTION AS FunctionDescription,
		FNC_TYPE AS FunctionType,
		CASE 
			WHEN FNC_TYPE = 'E' THEN 'Employee'
			WHEN FNC_TYPE = 'V' THEN 'Vendor'
			WHEN FNC_TYPE = 'I' THEN 'Income Only'
			WHEN FNC_TYPE = 'C' THEN 'Client Out of Pocket'
		END AS FunctionTypeDescription,

		ISNULL(Quoted_QtyHrs, 0.00) AS QuotedQuantityHours,
		ISNULL(Quoted_Amount, 0.00) AS QuotedAmount,
		ISNULL(Quoted_Markup, 0.00) AS QuotedMarkup,
		ISNULL(Quoted_Tax, 0.00) AS QuotedTax,	

		ISNULL(Quoted_Total, 0.00) AS QuotedTotal,

		ISNULL(Actual_Hours, 0.00) AS ActualHours,
		ISNULL(Actual_Amount, 0.00) AS ActualAmount,
		ISNULL(Actual_Markup, 0.00) AS ActualMarkup,
		ISNULL(Actual_Tax, 0.00) AS ActualTax,

		ISNULL(Actual_Total, 0.00) AS ActualTotal,

		ISNULL(Open_PO_Net_Amt, 0.00) AS OpenPONetAmount,
		ISNULL(Billed_to_Date, 0.00) AS BilledToDate,
		ISNULL(Quote_vs_Actual_PO, 0.00) AS QuotedvsActualPO,
		ISNULL(Actual_PO_vs_Billed, 0.00) AS ActualPOvsBilled,

		ISNULL(Qva, 0.00) AS Qva,
		ISNULL(Avb, 0.00) AS Avb,
		ISNULL(Qva_PO, 0.00) AS QvaPO,
		ISNULL(Avb_PO, 0.00) AS AvbPO,

		ISNULL(NB_Actual_Hours, 0.00) AS NBActualHours,
		ISNULL(NB_Actual_Total, 0.00) AS NBActualTotal,
		ISNULL(Adv_Billed, 0.00) AS AdvanceBilled,

		ISNULL(PO_Total, 0.00) AS POTotal,
		ISNULL(PO_Applied, 0.00) AS POApplied,
		ISNULL(NB_Tax, 0.00) AS NonBillableTax,
		ISNULL(NB_Markup, 0.00) AS NonBillableMarkup,
		ISNULL(NB_Amount, 0.00) AS NonBillableAmount,
		ISNULL(APPROVED_AMT, 0.00) AS ApprovedAmount,
		ISNULL(NB_Hours, 0.00) AS NonBillableHours,

		ISNULL((Actual_Hours/NULLIF(Quoted_QtyHrs,0.00))*100.00,0.00) AS QuotePercent,
		ISNULL(QUOTE_PERC, 0.00) AS PercentQuote,

		ISNULL(NB_Total, 0.00) AS NonBillableTotal,
		ISNULL(QUOTE_PERC_AMT,0.00) AS PercentQuoteAmount

	FROM 
		#qva_rows 
	ORDER BY 
		JOB_NUMBER, JOB_COMPONENT_NBR, FNC_TYPE, FNC_DESCRIPTION;

End

	DROP TABLE #qva_rows;
	DROP TABLE #qva_rows_sum;

/*=========== QUERY ===========*/
GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO