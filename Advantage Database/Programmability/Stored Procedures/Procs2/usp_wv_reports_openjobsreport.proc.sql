























--Webvantage Open Jobs Report
CREATE PROCEDURE [dbo].[usp_wv_reports_openjobsreport] 
@UserID as VarChar(100),
@ClientCode as Varchar(6)
AS
Declare @Rescrictions Int

Select @Rescrictions = Count(*) 
FROM SEC_CLIENT
WHERE UPPER(USER_ID) = UPPER(@UserID)

If @Rescrictions > 0
	SELECT  CLIENT.CL_NAME AS Client,
		DIVISION.DIV_NAME AS Division,
		PRODUCT.PRD_DESCRIPTION AS Product,
		Cast(JOB_LOG.JOB_NUMBER as Varchar(10)) + ' - ' +  JOB_LOG.JOB_DESC AS Job,
		Cast(JOB_COMPONENT.JOB_COMPONENT_NBR as Varchar(10)) + ' - ' +  JOB_COMPONENT.JOB_COMP_DESC AS Component, 
	        EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
		JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], 
	        JOB_LOG.USER_ID AS [User ID]
	FROM         JOB_LOG INNER JOIN
	                      JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
	                      EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
	                      CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
	                      PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
	                      JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
	                      DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE
	INNER JOIN SEC_CLIENT 
	    ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE
	WHERE (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
	AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@UserID)) AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)
		    And CLIENT.CL_CODE Like '%' + @ClientCode
	GROUP BY CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, CAST(JOB_LOG.JOB_NUMBER AS Varchar(10)) + ' - ' + JOB_LOG.JOB_DESC, 
	                      CAST(JOB_COMPONENT.JOB_COMPONENT_NBR AS Varchar(10)) + ' - ' + JOB_COMPONENT.JOB_COMP_DESC, 
	                      EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID
Else
	SELECT  CLIENT.CL_NAME AS Client,
		DIVISION.DIV_NAME AS Division,
		PRODUCT.PRD_DESCRIPTION AS Product,
		Cast(JOB_LOG.JOB_NUMBER as Varchar(10)) + ' - ' +  JOB_LOG.JOB_DESC AS Job,
		Cast(JOB_COMPONENT.JOB_COMPONENT_NBR as Varchar(10)) + ' - ' +  JOB_COMPONENT.JOB_COMP_DESC AS Component, 
	        EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME AS [Account Executive],
		JOB_COMPONENT.JOB_FIRST_USE_DATE AS [Due Date], 
	        JOB_LOG.USER_ID AS [User ID]
	FROM         JOB_LOG INNER JOIN
	                      JOB_COMPONENT ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
	                      EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
	                      CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
	                      PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
	                      JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
	                      DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE
	WHERE      (NOT (JOB_COMPONENT.JOB_PROCESS_CONTRL IN (6, 12)))
		    And CLIENT.CL_CODE Like '%' + @ClientCode
	GROUP BY CLIENT.CL_NAME, DIVISION.DIV_NAME, PRODUCT.PRD_DESCRIPTION, CAST(JOB_LOG.JOB_NUMBER AS Varchar(10)) + ' - ' + JOB_LOG.JOB_DESC, 
	                      CAST(JOB_COMPONENT.JOB_COMPONENT_NBR AS Varchar(10)) + ' - ' + JOB_COMPONENT.JOB_COMP_DESC, 
	                      EMPLOYEE.EMP_FNAME + ' ' + EMPLOYEE.EMP_LNAME, JOB_COMPONENT.JOB_FIRST_USE_DATE, JOB_LOG.USER_ID


















