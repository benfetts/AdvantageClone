--DROP PROCEDURE [dbo].[usp_wv_ts_GetJobsBySearch]
CREATE PROCEDURE [dbo].[usp_wv_ts_GetJobsBySearch]
@SEARCH_STRING VARCHAR(1000),
@USER_CODE VARCHAR(100)
AS
/*=========== QUERY ===========*/
BEGIN
	DECLARE @RESTRICTIONS INT;
	SELECT @RESTRICTIONS = COUNT(1) FROM SEC_CLIENT WITH(NOLOCK) WHERE UPPER([USER_ID]) = UPPER(@USER_CODE);

	IF @SEARCH_STRING IS NULL OR @SEARCH_STRING = ''
	BEGIN
		PRINT ''
		--IF @RESTRICTIONS > 0
		--BEGIN
		--	SELECT 
		--		DISTINCT 
		--			JOB_LOG.JOB_NUMBER AS JobNumber,
		--			JOB_LOG.JOB_DESC AS JobDescription,
		--			JOB_COMPONENT.JOB_COMPONENT_NBR AS JobComponentNumber,
		--			JOB_COMPONENT.JOB_COMP_DESC AS JobComponentDescription,
		--			CLIENT.CL_CODE AS ClientCode,
		--			CLIENT.CL_NAME AS ClientName,
		--			DIVISION.DIV_CODE AS DivisionCode,
		--			DIVISION.DIV_NAME AS DivisionName,
		--			PRODUCT.PRD_CODE AS ProductCode,
		--			PRODUCT.PRD_DESCRIPTION AS ProductDescription
		--	FROM            
		--		JOB_LOG WITH (NOLOCK) INNER JOIN
		--		JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
		--		SEC_CLIENT WITH (NOLOCK) ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
		--		CLIENT WITH(NOLOCK) ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
		--		PRODUCT WITH(NOLOCK) ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
		--		DIVISION WITH(NOLOCK) ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE
		--	WHERE     
		--		(JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (2,3,5,6,9,10,12,13)) 
		--		AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@USER_CODE)) 
		--		AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)
		--	GROUP BY 
		--		JOB_LOG.JOB_NUMBER,
		--		JOB_LOG.JOB_DESC,
		--		JOB_COMPONENT.JOB_COMPONENT_NBR,
		--		JOB_COMPONENT.JOB_COMP_DESC,
		--		CLIENT.CL_CODE,
		--		CLIENT.CL_NAME,
		--		DIVISION.DIV_CODE,
		--		DIVISION.DIV_NAME,
		--		PRODUCT.PRD_CODE,
		--		PRODUCT.PRD_DESCRIPTION
		--	ORDER BY 
		--		JOB_LOG.JOB_NUMBER DESC;
		--END
		--ELSE
		--BEGIN
		--	SELECT 
		--		DISTINCT 
		--			JOB_LOG.JOB_NUMBER AS JobNumber,
		--			JOB_LOG.JOB_DESC AS JobDescription,
		--			JOB_COMPONENT.JOB_COMPONENT_NBR AS JobComponentNumber,
		--			JOB_COMPONENT.JOB_COMP_DESC AS JobComponentDescription,
		--			CLIENT.CL_CODE AS ClientCode,
		--			CLIENT.CL_NAME AS ClientName,
		--			DIVISION.DIV_CODE AS DivisionCode,
		--			DIVISION.DIV_NAME AS DivisionName,
		--			PRODUCT.PRD_CODE AS ProductCode,
		--			PRODUCT.PRD_DESCRIPTION AS ProductDescription
		--	FROM            
		--		JOB_LOG WITH (NOLOCK) INNER JOIN
		--		JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
		--		CLIENT WITH(NOLOCK) ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
		--		PRODUCT WITH(NOLOCK) ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
		--		DIVISION WITH(NOLOCK) ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE
		--	WHERE     
		--		(JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (2,3,5,6,9,10,12,13)) 
		--	GROUP BY 
		--		JOB_LOG.JOB_NUMBER,
		--		JOB_LOG.JOB_DESC,
		--		JOB_COMPONENT.JOB_COMPONENT_NBR,
		--		JOB_COMPONENT.JOB_COMP_DESC,
		--		CLIENT.CL_CODE,
		--		CLIENT.CL_NAME,
		--		DIVISION.DIV_CODE,
		--		DIVISION.DIV_NAME,
		--		PRODUCT.PRD_CODE,
		--		PRODUCT.PRD_DESCRIPTION
		--	ORDER BY 
		--		JOB_LOG.JOB_NUMBER DESC;
		--END
	END
	ELSE
	BEGIN
		IF ISNUMERIC(@SEARCH_STRING) = 1
		BEGIN
			IF @RESTRICTIONS > 0
			BEGIN
				SELECT 
					DISTINCT 
						JOB_LOG.JOB_NUMBER AS JobNumber,
						JOB_LOG.JOB_DESC AS JobDescription,
						JOB_COMPONENT.JOB_COMPONENT_NBR AS JobComponentNumber,
						JOB_COMPONENT.JOB_COMP_DESC AS JobComponentDescription,
						CLIENT.CL_CODE AS ClientCode,
						CLIENT.CL_NAME AS ClientName,
						DIVISION.DIV_CODE AS DivisionCode,
						DIVISION.DIV_NAME AS DivisionName,
						PRODUCT.PRD_CODE AS ProductCode,
						PRODUCT.PRD_DESCRIPTION AS ProductDescription
				FROM            
					JOB_LOG WITH (NOLOCK) INNER JOIN
					JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
					SEC_CLIENT WITH (NOLOCK) ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
					CLIENT WITH(NOLOCK) ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
					PRODUCT WITH(NOLOCK) ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
					DIVISION WITH(NOLOCK) ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE
				WHERE     
					(JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (2,3,5,6,9,10,12,13)) 
					AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@USER_CODE)) 
					AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)
					AND (JOB_LOG.JOB_NUMBER = CAST(@SEARCH_STRING AS INT)) 
				GROUP BY 
					JOB_LOG.JOB_NUMBER,
					JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR,
					JOB_COMPONENT.JOB_COMP_DESC,
					CLIENT.CL_CODE,
					CLIENT.CL_NAME,
					DIVISION.DIV_CODE,
					DIVISION.DIV_NAME,
					PRODUCT.PRD_CODE,
					PRODUCT.PRD_DESCRIPTION
				ORDER BY 
					JOB_LOG.JOB_NUMBER DESC;
			END
			ELSE
			BEGIN
				SELECT 
					DISTINCT 
						JOB_LOG.JOB_NUMBER AS JobNumber,
						JOB_LOG.JOB_DESC AS JobDescription,
						JOB_COMPONENT.JOB_COMPONENT_NBR AS JobComponentNumber,
						JOB_COMPONENT.JOB_COMP_DESC AS JobComponentDescription,
						CLIENT.CL_CODE AS ClientCode,
						CLIENT.CL_NAME AS ClientName,
						DIVISION.DIV_CODE AS DivisionCode,
						DIVISION.DIV_NAME AS DivisionName,
						PRODUCT.PRD_CODE AS ProductCode,
						PRODUCT.PRD_DESCRIPTION AS ProductDescription
				FROM            
					JOB_LOG WITH (NOLOCK) INNER JOIN
					JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
					CLIENT WITH(NOLOCK) ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
					PRODUCT WITH(NOLOCK) ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
					DIVISION WITH(NOLOCK) ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE
				WHERE     
					(JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (2,3,5,6,9,10,12,13)) 
					AND (JOB_LOG.JOB_NUMBER = CAST(@SEARCH_STRING AS INT)) 
				GROUP BY 
					JOB_LOG.JOB_NUMBER,
					JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR,
					JOB_COMPONENT.JOB_COMP_DESC,
					CLIENT.CL_CODE,
					CLIENT.CL_NAME,
					DIVISION.DIV_CODE,
					DIVISION.DIV_NAME,
					PRODUCT.PRD_CODE,
					PRODUCT.PRD_DESCRIPTION
				ORDER BY 
					JOB_LOG.JOB_NUMBER DESC;
			END
		END
		ELSE
		BEGIN
			SET @SEARCH_STRING = UPPER(@SEARCH_STRING);
			IF @RESTRICTIONS > 0
			BEGIN
				SELECT 
					DISTINCT 
						JOB_LOG.JOB_NUMBER AS JobNumber,
						JOB_LOG.JOB_DESC AS JobDescription,
						JOB_COMPONENT.JOB_COMPONENT_NBR AS JobComponentNumber,
						JOB_COMPONENT.JOB_COMP_DESC AS JobComponentDescription,
						CLIENT.CL_CODE AS ClientCode,
						CLIENT.CL_NAME AS ClientName,
						DIVISION.DIV_CODE AS DivisionCode,
						DIVISION.DIV_NAME AS DivisionName,
						PRODUCT.PRD_CODE AS ProductCode,
						PRODUCT.PRD_DESCRIPTION AS ProductDescription
				FROM            
					JOB_LOG WITH (NOLOCK) INNER JOIN
					JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
					SEC_CLIENT WITH (NOLOCK) ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE INNER JOIN
					CLIENT WITH(NOLOCK) ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
					PRODUCT WITH(NOLOCK) ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
					DIVISION WITH(NOLOCK) ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE
				WHERE     
					(JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (2,3,5,6,9,10,12,13)) 
					AND (UPPER(SEC_CLIENT.USER_ID) = UPPER(@USER_CODE)) 
					AND (SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL)
					AND (
							(UPPER(JOB_LOG.JOB_DESC) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(JOB_COMPONENT.JOB_COMP_DESC) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(CLIENT.CL_CODE) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(CLIENT.CL_NAME) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(DIVISION.DIV_CODE) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(DIVISION.DIV_NAME) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(PRODUCT.PRD_CODE) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(PRODUCT.PRD_DESCRIPTION) LIKE '%' + @SEARCH_STRING + '%') 
						)
				GROUP BY 
					JOB_LOG.JOB_NUMBER,
					JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR,
					JOB_COMPONENT.JOB_COMP_DESC,
					CLIENT.CL_CODE,
					CLIENT.CL_NAME,
					DIVISION.DIV_CODE,
					DIVISION.DIV_NAME,
					PRODUCT.PRD_CODE,
					PRODUCT.PRD_DESCRIPTION
				ORDER BY 
					JOB_LOG.JOB_NUMBER DESC;
			END
			ELSE
			BEGIN
				SELECT 
					DISTINCT 
						JOB_LOG.JOB_NUMBER AS JobNumber,
						JOB_LOG.JOB_DESC AS JobDescription,
						JOB_COMPONENT.JOB_COMPONENT_NBR AS JobComponentNumber,
						JOB_COMPONENT.JOB_COMP_DESC AS JobComponentDescription,
						CLIENT.CL_CODE AS ClientCode,
						CLIENT.CL_NAME AS ClientName,
						DIVISION.DIV_CODE AS DivisionCode,
						DIVISION.DIV_NAME AS DivisionName,
						PRODUCT.PRD_CODE AS ProductCode,
						PRODUCT.PRD_DESCRIPTION AS ProductDescription
				FROM            
					JOB_LOG WITH (NOLOCK) INNER JOIN
					JOB_COMPONENT WITH (NOLOCK) ON JOB_LOG.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER INNER JOIN
					CLIENT WITH(NOLOCK) ON JOB_LOG.CL_CODE = CLIENT.CL_CODE INNER JOIN
					PRODUCT WITH(NOLOCK) ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE INNER JOIN
					DIVISION WITH(NOLOCK) ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND JOB_LOG.DIV_CODE = DIVISION.DIV_CODE
				WHERE     
					(JOB_COMPONENT.JOB_PROCESS_CONTRL NOT IN (2,3,5,6,9,10,12,13)) 
					AND (
							(UPPER(JOB_LOG.JOB_DESC) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(JOB_COMPONENT.JOB_COMP_DESC) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(CLIENT.CL_CODE) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(CLIENT.CL_NAME) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(DIVISION.DIV_CODE) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(DIVISION.DIV_NAME) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(PRODUCT.PRD_CODE) LIKE '%' + @SEARCH_STRING + '%') OR 
							(UPPER(PRODUCT.PRD_DESCRIPTION) LIKE '%' + @SEARCH_STRING + '%') 
						)
				GROUP BY 
					JOB_LOG.JOB_NUMBER,
					JOB_LOG.JOB_DESC,
					JOB_COMPONENT.JOB_COMPONENT_NBR,
					JOB_COMPONENT.JOB_COMP_DESC,
					CLIENT.CL_CODE,
					CLIENT.CL_NAME,
					DIVISION.DIV_CODE,
					DIVISION.DIV_NAME,
					PRODUCT.PRD_CODE,
					PRODUCT.PRD_DESCRIPTION
				ORDER BY 
					JOB_LOG.JOB_NUMBER DESC;
			END
		END
	END
END
/*=========== QUERY ===========*/