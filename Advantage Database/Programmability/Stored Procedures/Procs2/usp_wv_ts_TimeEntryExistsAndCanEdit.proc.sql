SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO
IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_ts_TimeEntryExistsAndCanEdit]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_ts_TimeEntryExistsAndCanEdit]
GO
CREATE PROCEDURE [dbo].[usp_wv_ts_TimeEntryExistsAndCanEdit] /*WITH ENCRYPTION*/
@emp_code VARCHAR(6), 
@emp_date SMALLDATETIME, 
@fnc_cat VARCHAR(10), 
@job_nbr INTEGER, 
@job_cmp_nbr SMALLINT, 
@dp_tm VARCHAR(4),
@ProdCat VARCHAR(10)
AS
/*=========== QUERY ===========*/
	DECLARE
		@EXISTING_ET_ID INT,
		@EXISTING_ET_DTL_ID INT,
		@EXISTING_HOURS DECIMAL(7,2),
		@EXISTING_EDIT_FLAG INT,
		@EXISTING_COMMENT VARCHAR(MAX),

		@POST_PERIOD_CHECK INT,
		@POST_PERIOD INT,
		@SIMPLE_DATE SMALLDATETIME,
		@APPROVED_PENDING SMALLINT,
		@JOB_COMPONENT_PROC_CTRL SMALLINT,
		@CAN_EDIT SMALLINT,
		@RETURN_MESSAGE VARCHAR(100)

	SET @CAN_EDIT = 1;	
	SET @SIMPLE_DATE = CONVERT(VARCHAR(10),@emp_date,120);

	-- CHECK POST PERIOD
	SELECT @POST_PERIOD_CHECK = TS_PPERIOD_CHK FROM AGENCY WITH(NOLOCK);
	SET @POST_PERIOD_CHECK = ISNULL(@POST_PERIOD_CHECK, 0)
	IF @POST_PERIOD_CHECK = 1
	BEGIN
		SELECT @POST_PERIOD = COUNT(*) 
		FROM POSTPERIOD WITH (NOLOCK)
		WHERE	PPSRTDATE <= @SIMPLE_DATE
		AND	PPENDDATE >= @SIMPLE_DATE
		AND (PPTECURMTH = 'C' OR PPTECURMTH IS NULL);
	END
	SET @POST_PERIOD = ISNULL(@POST_PERIOD, 0);
	IF @POST_PERIOD_CHECK = 1 AND @POST_PERIOD = 0
	BEGIN
		SET @CAN_EDIT = 0;
	END

	IF @CAN_EDIT = 1
	BEGIN

		-- CHECK FOR APPROVAL STATUS
		SELECT @APPROVED_PENDING = (ISNULL(APPR_FLAG, 0) + ISNULL(APPR_PENDING, 0))
		FROM EMP_TIME WITH (NOLOCK) 
		WHERE 
			EMP_CODE = @emp_code 
			AND EMP_DATE = @SIMPLE_DATE;
		
		-- NOT ZERO IS EITHER APPROVED OR PENDING; DON'T CARE WHICH
		SET @APPROVED_PENDING = ISNULL(@APPROVED_PENDING, 0);	
		IF @APPROVED_PENDING > 0
		BEGIN
			SET @CAN_EDIT = 0;
		END

	END


	--STD TIME
	IF @job_nbr > 0 AND @job_cmp_nbr > 0 
	BEGIN
	
		SELECT 
			@JOB_COMPONENT_PROC_CTRL = JOB_PROCESS_CONTRL 
		FROM 
			JOB_COMPONENT WITH(NOLOCK) 
		WHERE 
			JOB_NUMBER = @job_nbr 
			AND JOB_COMPONENT_NBR = @job_cmp_nbr;

		IF @JOB_COMPONENT_PROC_CTRL IN (2,3,5,6,9,10,12,13)
		BEGIN
			SET @CAN_EDIT = 0;
		END

		SELECT        
			@EXISTING_ET_ID = A.ET_ID, 
			@EXISTING_ET_DTL_ID = A.ET_DTL_ID,
			@EXISTING_HOURS = A.EMP_HOURS
		FROM (
			SELECT TOP 1       
				EMP_TIME_DTL.ET_ID, 
				EMP_TIME_DTL.ET_DTL_ID,
				EMP_TIME_DTL.EMP_HOURS
			FROM            
				EMP_TIME WITH(NOLOCK) INNER JOIN
				EMP_TIME_DTL WITH(NOLOCK) ON EMP_TIME.ET_ID = EMP_TIME_DTL.ET_ID
			WHERE        
				(EMP_TIME.EMP_CODE = @emp_code) 
				AND (EMP_TIME.EMP_DATE = @emp_date) 
				AND (EMP_TIME_DTL.FNC_CODE = @fnc_cat) 
				AND (EMP_TIME_DTL.JOB_NUMBER = @job_nbr) 
				AND (EMP_TIME_DTL.JOB_COMPONENT_NBR = @job_cmp_nbr) 
				AND (ISNULL(EMP_TIME_DTL.DP_TM_CODE,'') = ISNULL(@dp_tm,'')) 
				AND (ISNULL(EMP_TIME_DTL.PROD_CAT_CODE,'') = ISNULL(@ProdCat,''))
            ORDER BY 
				EMP_TIME_DTL.DATE_ENTERED DESC
			) AS A;


		DECLARE @TEMP_VAR TABLE (EDIT_FLAG INT)
		INSERT INTO @TEMP_VAR
		EXEC [dbo].[usp_wv_ts_Check_Edit_Status] @EXISTING_ET_ID, @EXISTING_ET_DTL_ID


		SELECT @EXISTING_EDIT_FLAG = ISNULL(EDIT_FLAG, 0) FROM @TEMP_VAR;

		IF @CAN_EDIT = 1 AND (@EXISTING_EDIT_FLAG <> 0 AND @EXISTING_EDIT_FLAG <> 7)
		BEGIN

			SET @CAN_EDIT = 0;

		END


	END

	--NP TIME
	IF @job_nbr = 0 AND @job_cmp_nbr = 0 
	BEGIN

		SELECT        
			@EXISTING_ET_ID = A.ET_ID, 
			@EXISTING_ET_DTL_ID = A.ET_DTL_ID,
			@EXISTING_HOURS = A.EMP_HOURS
		FROM (
			SELECT TOP 1       
				EMP_TIME_NP.ET_ID, 
				EMP_TIME_NP.ET_DTL_ID,
				EMP_TIME_NP.EMP_HOURS
			FROM            
				EMP_TIME WITH(NOLOCK) INNER JOIN
				EMP_TIME_NP WITH(NOLOCK) ON EMP_TIME.ET_ID = EMP_TIME_NP.ET_ID
			WHERE        
				(EMP_TIME.EMP_CODE = @emp_code) 
				AND (EMP_TIME.EMP_DATE = @emp_date) 
				AND (EMP_TIME_NP.CATEGORY = @fnc_cat) 
				AND (ISNULL(EMP_TIME_NP.DP_TM_CODE,'') = ISNULL(@dp_tm,''))
			ORDER BY
				EMP_TIME_NP.DATE_ENTERED
		) AS A;

	END

	SET @EXISTING_ET_ID = ISNULL(@EXISTING_ET_ID, 0);
	SET @EXISTING_ET_DTL_ID = ISNULL(@EXISTING_ET_DTL_ID, 0);
	SET @EXISTING_HOURS = ISNULL(@EXISTING_HOURS, 00.00);

	IF @EXISTING_ET_ID > 0 AND @EXISTING_ET_DTL_ID > 0
	BEGIN
		
		SELECT      
			@EXISTING_COMMENT = A.EMP_COMMENT
		FROM (
			SELECT	
				CAST(EMP_COMMENT AS VARCHAR(MAX)) AS EMP_COMMENT
			FROM            
				EMP_TIME_DTL_CMTS WITH(NOLOCK)
			WHERE        
				(ET_ID = @EXISTING_ET_ID) 
				AND (ET_DTL_ID = @EXISTING_ET_DTL_ID)
			) AS A;

	END

	SET @EXISTING_COMMENT = ISNULL(@EXISTING_COMMENT,'');
	SET @CAN_EDIT = ISNULL(@CAN_EDIT, 0);

	SELECT 
		@EXISTING_ET_ID AS EXISTING_ET_ID,
		@EXISTING_ET_DTL_ID AS EXISTING_ET_DTL_ID,
		@EXISTING_HOURS AS EXISTING_HOURS,
		@EXISTING_COMMENT AS EXISTING_COMMENT,
		@EXISTING_EDIT_FLAG AS EXISTING_EDIT_FLAG,
		@CAN_EDIT AS CAN_EDIT

/*=========== QUERY ===========*/
GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO