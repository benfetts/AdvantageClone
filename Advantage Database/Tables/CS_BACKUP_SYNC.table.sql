IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CS_BACKUP_LOG') 
BEGIN
    DROP TABLE [dbo].[CS_BACKUP_LOG]
END
GO
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CS_FEEDBACK_LOG') 
BEGIN
    DROP TABLE [dbo].[CS_FEEDBACK_LOG]
END
GO
IF NOT EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CS_BACKUP_LOG') 
BEGIN
	CREATE TABLE [dbo].[CS_BACKUP_LOG](
		[ID] [int] IDENTITY(1,1) NOT NULL,
		[AlertID] [int] NULL,
		[ProjectID] [int] NULL,
		[ReviewID] [int] NULL,
		[AssetID] [int] NULL,
		[DocumentID] [int] NULL,
		[Filename] [varchar](MAX) NULL,
		[BackedUp] [bit] NULL,
		CONSTRAINT [PK_CS_BACKUP_LOG] PRIMARY KEY CLUSTERED 
	(
		[ID] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]
END
GO

IF NOT EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'CS_FEEDBACK_LOG') 
BEGIN
	CREATE TABLE [dbo].[CS_FEEDBACK_LOG](
		[ID] [int] IDENTITY(1,1) NOT NULL,
		[AlertID] [int] NULL,
		[ProjectID] [int] NULL,
		[ReviewID] [int] NULL,
		[Title] [varchar](max) NULL,
		[EmployeeCode] [varchar](6) NULL,
		[BackupDate] [smalldatetime] NULL,
		[BackedUp] [bit] NULL,
		[BackUpFailed] [bit] NULL,
		[FailReason] [varchar](max) NULL,
		CONSTRAINT [PK_CS_FEEDBACK_LOG] PRIMARY KEY CLUSTERED 
	(
		[ID] ASC
	)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
	) ON [PRIMARY]
END
GO

