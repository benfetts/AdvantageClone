'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.CodeDom.Compiler
Imports System.Data.Entity.Core.Metadata.Edm
Imports System.Data.Entity.Infrastructure.MappingViews

<Assembly: DbMappingViewCacheTypeAttribute(
    GetType(AdvantageSES.Database.DbContext),
    GetType(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets87cddbd539c623aa6426086940eea69d1daa1a64da991a8d7a2f5094ea010397))>

Namespace Edm_EntityMappingGeneratedViews

    ''' <summary>
    ''' Implements a mapping view cache.
    ''' </summary>
    <GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")>
    Friend NotInheritable Class ViewsForBaseEntitySets87cddbd539c623aa6426086940eea69d1daa1a64da991a8d7a2f5094ea010397
        Inherits DbMappingViewCache

        ''' <summary>
        ''' Gets a hash value computed over the mapping closure.
        ''' </summary>
        Public Overrides ReadOnly Property MappingHashValue As String
            Get
                Return "87cddbd539c623aa6426086940eea69d1daa1a64da991a8d7a2f5094ea010397"
            End Get
        End Property

        ''' <summary>
        ''' Gets a view corresponding to the specified extent.
        ''' </summary>
        ''' <param name="extent">The extent.</param>
        ''' <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        Public Overrides Function GetView(extent As EntitySetBase) As DbMappingView
            If extent Is Nothing Then
                Throw New ArgumentNullException("extent")
            End If

            Dim extentName = extent.EntityContainer.Name & "." & extent.Name

            If extentName = "CodeFirstDatabase.AdvantageSES" Then
                Return GetView0()
            End If

            If extentName = "DbContext.AdvantageSESs" Then
                Return GetView1()
            End If

            Return Nothing
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.AdvantageSES.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView0() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing AdvantageSES" & vbCrLf &
                "        [CodeFirstDatabaseSchema.AdvantageSES](T1.[AdvantageSES.ADVANTAGE_SES_ID], T1.[AdvantageSES.SMTP_AUTH_METHOD], T1.[AdvantageSES.SMTP_PORT_NUMBER], T1.[AdvantageSES.SMTP_SECURE_TYPE], T1.[AdvantageSES.SMTP_SERVER], T1.[AdvantageSES.SMTP_SENDER], T1.[AdvantageSES.EMAIL_USERNAME], T1.[AdvantageSES.EMAIL_PWD], T1.[AdvantageSES.EMAIL_REPLY_TO])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [AdvantageSES.ADVANTAGE_SES_ID], " & vbCrLf &
                "            T.SMTPAuthMethod AS [AdvantageSES.SMTP_AUTH_METHOD], " & vbCrLf &
                "            T.SMTPPortNumber AS [AdvantageSES.SMTP_PORT_NUMBER], " & vbCrLf &
                "            T.SMTPSecureType AS [AdvantageSES.SMTP_SECURE_TYPE], " & vbCrLf &
                "            T.SMTPServer AS [AdvantageSES.SMTP_SERVER], " & vbCrLf &
                "            T.SMTPSender AS [AdvantageSES.SMTP_SENDER], " & vbCrLf &
                "            T.EmailUsername AS [AdvantageSES.EMAIL_USERNAME], " & vbCrLf &
                "            T.EmailPassword AS [AdvantageSES.EMAIL_PWD], " & vbCrLf &
                "            T.EmailReplyTo AS [AdvantageSES.EMAIL_REPLY_TO], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.AdvantageSESs AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.AdvantageSESs.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView1() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing AdvantageSESs" & vbCrLf &
                "        [AdvantageSES.Database.AdvantageSES](T1.AdvantageSES_ID, T1.AdvantageSES_SMTPAuthMethod, T1.AdvantageSES_SMTPPortNumber, T1.AdvantageSES_SMTPSecureType, T1.AdvantageSES_SMTPServer, T1.AdvantageSES_SMTPSender, T1.AdvantageSES_EmailUsername, T1.AdvantageSES_EmailPassword, T1.AdvantageSES_EmailReplyTo)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ADVANTAGE_SES_ID AS AdvantageSES_ID, " & vbCrLf &
                "            T.SMTP_AUTH_METHOD AS AdvantageSES_SMTPAuthMethod, " & vbCrLf &
                "            T.SMTP_PORT_NUMBER AS AdvantageSES_SMTPPortNumber, " & vbCrLf &
                "            T.SMTP_SECURE_TYPE AS AdvantageSES_SMTPSecureType, " & vbCrLf &
                "            T.SMTP_SERVER AS AdvantageSES_SMTPServer, " & vbCrLf &
                "            T.SMTP_SENDER AS AdvantageSES_SMTPSender, " & vbCrLf &
                "            T.EMAIL_USERNAME AS AdvantageSES_EmailUsername, " & vbCrLf &
                "            T.EMAIL_PWD AS AdvantageSES_EmailPassword, " & vbCrLf &
                "            T.EMAIL_REPLY_TO AS AdvantageSES_EmailReplyTo, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.AdvantageSES AS T" & vbCrLf &
                "    ) AS T1")
        End Function
    End Class
End Namespace
