'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.CodeDom.Compiler
Imports System.Data.Entity.Core.Metadata.Edm
Imports System.Data.Entity.Infrastructure.MappingViews

<Assembly: DbMappingViewCacheTypeAttribute(
    GetType(AdvantageFramework.Security.Database.DbContext),
    GetType(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsaf788d9870336a59640df57a2d9da27cb3b718990ffecf575b613a8b740eb7fd))>

Namespace Edm_EntityMappingGeneratedViews

    ''' <summary>
    ''' Implements a mapping view cache.
    ''' </summary>
    <GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")>
    Friend NotInheritable Class ViewsForBaseEntitySetsaf788d9870336a59640df57a2d9da27cb3b718990ffecf575b613a8b740eb7fd
        Inherits DbMappingViewCache

        ''' <summary>
        ''' Gets a hash value computed over the mapping closure.
        ''' </summary>
        Public Overrides ReadOnly Property MappingHashValue As String
            Get
                Return "af788d9870336a59640df57a2d9da27cb3b718990ffecf575b613a8b740eb7fd"
            End Get
        End Property

        ''' <summary>
        ''' Gets a view corresponding to the specified extent.
        ''' </summary>
        ''' <param name="extent">The extent.</param>
        ''' <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        Public Overrides Function GetView(extent As EntitySetBase) As DbMappingView
            If extent Is Nothing Then
                Throw New ArgumentNullException("extent")
            End If

            Dim extentName = extent.EntityContainer.Name & "." & extent.Name

            If extentName = "CodeFirstDatabase.AdassistUser" Then
                Return GetView0()
            End If

            If extentName = "CodeFirstDatabase.Employee" Then
                Return GetView1()
            End If

            If extentName = "CodeFirstDatabase.Department" Then
                Return GetView2()
            End If

            If extentName = "CodeFirstDatabase.Office" Then
                Return GetView3()
            End If

            If extentName = "CodeFirstDatabase.Product" Then
                Return GetView4()
            End If

            If extentName = "CodeFirstDatabase.CDPSecurityGroup" Then
                Return GetView5()
            End If

            If extentName = "CodeFirstDatabase.CDPSecurityGroupEmployee" Then
                Return GetView6()
            End If

            If extentName = "CodeFirstDatabase.Client" Then
                Return GetView7()
            End If

            If extentName = "CodeFirstDatabase.ClientContact" Then
                Return GetView8()
            End If

            If extentName = "CodeFirstDatabase.ClientContactDetail" Then
                Return GetView9()
            End If

            If extentName = "CodeFirstDatabase.ClientPortalUser" Then
                Return GetView10()
            End If

            If extentName = "CodeFirstDatabase.ClientPortalUserApplicationAccess" Then
                Return GetView11()
            End If

            If extentName = "CodeFirstDatabase.Application" Then
                Return GetView12()
            End If

            If extentName = "CodeFirstDatabase.ApplicationModule" Then
                Return GetView13()
            End If

            If extentName = "CodeFirstDatabase.Module" Then
                Return GetView14()
            End If

            If extentName = "CodeFirstDatabase.ClientPortalUserModuleAccess" Then
                Return GetView15()
            End If

            If extentName = "CodeFirstDatabase.GroupModuleAccess" Then
                Return GetView16()
            End If

            If extentName = "CodeFirstDatabase.Group" Then
                Return GetView17()
            End If

            If extentName = "CodeFirstDatabase.GroupApplicationAccess" Then
                Return GetView18()
            End If

            If extentName = "CodeFirstDatabase.GroupSetting" Then
                Return GetView19()
            End If

            If extentName = "CodeFirstDatabase.GroupUserDefinedReportAccess" Then
                Return GetView20()
            End If

            If extentName = "CodeFirstDatabase.GroupUser" Then
                Return GetView21()
            End If

            If extentName = "CodeFirstDatabase.User" Then
                Return GetView22()
            End If

            If extentName = "CodeFirstDatabase.UserApplicationAccess" Then
                Return GetView23()
            End If

            If extentName = "CodeFirstDatabase.UserMenu" Then
                Return GetView24()
            End If

            If extentName = "CodeFirstDatabase.UserMenuTab" Then
                Return GetView25()
            End If

            If extentName = "CodeFirstDatabase.UserModuleAccess" Then
                Return GetView26()
            End If

            If extentName = "CodeFirstDatabase.UserSetting" Then
                Return GetView27()
            End If

            If extentName = "CodeFirstDatabase.UserUserDefinedReportAccess" Then
                Return GetView28()
            End If

            If extentName = "CodeFirstDatabase.WorkspaceTemplate" Then
                Return GetView29()
            End If

            If extentName = "CodeFirstDatabase.WorkspaceTemplateDetail" Then
                Return GetView30()
            End If

            If extentName = "CodeFirstDatabase.WorkspaceTemplateItem" Then
                Return GetView31()
            End If

            If extentName = "CodeFirstDatabase.ModuleInformation" Then
                Return GetView32()
            End If

            If extentName = "CodeFirstDatabase.ModuleSub" Then
                Return GetView33()
            End If

            If extentName = "CodeFirstDatabase.ClientPortalUserWorkspace" Then
                Return GetView34()
            End If

            If extentName = "CodeFirstDatabase.ClientPortalWorkspaceObject" Then
                Return GetView35()
            End If

            If extentName = "CodeFirstDatabase.Division" Then
                Return GetView36()
            End If

            If extentName = "CodeFirstDatabase.UserClientDivisionProductAccess" Then
                Return GetView37()
            End If

            If extentName = "CodeFirstDatabase.UserEmployeeAccess" Then
                Return GetView38()
            End If

            If extentName = "CodeFirstDatabase.UserLoginAudit" Then
                Return GetView39()
            End If

            If extentName = "DbContext.AdassistUsers" Then
                Return GetView40()
            End If

            If extentName = "DbContext.AdassistUser_Employee" Then
                Return GetView41()
            End If

            If extentName = "DbContext.SecurityEmployees" Then
                Return GetView42()
            End If

            If extentName = "DbContext.SecurityDepartments" Then
                Return GetView43()
            End If

            If extentName = "DbContext.SecurityOffices" Then
                Return GetView44()
            End If

            If extentName = "DbContext.SecurityProducts" Then
                Return GetView45()
            End If

            If extentName = "DbContext.CDPSecurityGroups" Then
                Return GetView46()
            End If

            If extentName = "DbContext.CDPSecurityGroupEmployees" Then
                Return GetView47()
            End If

            If extentName = "DbContext.SecurityClients" Then
                Return GetView48()
            End If

            If extentName = "DbContext.SecurityClientContacts" Then
                Return GetView49()
            End If

            If extentName = "DbContext.SecurityClientContactDetails" Then
                Return GetView50()
            End If

            If extentName = "DbContext.ClientPortalUsers" Then
                Return GetView51()
            End If

            If extentName = "DbContext.ClientPortalUserApplicationAccesses" Then
                Return GetView52()
            End If

            If extentName = "DbContext.Applications" Then
                Return GetView53()
            End If

            If extentName = "DbContext.ApplicationModules" Then
                Return GetView54()
            End If

            If extentName = "DbContext.Modules" Then
                Return GetView55()
            End If

            If extentName = "DbContext.ClientPortalUserModuleAccesses" Then
                Return GetView56()
            End If

            If extentName = "DbContext.GroupModuleAccesses" Then
                Return GetView57()
            End If

            If extentName = "DbContext.Groups" Then
                Return GetView58()
            End If

            If extentName = "DbContext.GroupApplicationAccesses" Then
                Return GetView59()
            End If

            If extentName = "DbContext.GroupSettings" Then
                Return GetView60()
            End If

            If extentName = "DbContext.GroupUserDefinedReportAccesses" Then
                Return GetView61()
            End If

            If extentName = "DbContext.GroupUsers" Then
                Return GetView62()
            End If

            If extentName = "DbContext.Users" Then
                Return GetView63()
            End If

            If extentName = "DbContext.UserApplicationAccesses" Then
                Return GetView64()
            End If

            If extentName = "DbContext.UserMenus" Then
                Return GetView65()
            End If

            If extentName = "DbContext.UserMenuTabs" Then
                Return GetView66()
            End If

            If extentName = "DbContext.UserModuleAccesses" Then
                Return GetView67()
            End If

            If extentName = "DbContext.UserSettings" Then
                Return GetView68()
            End If

            If extentName = "DbContext.UserUserDefinedReportAccesses" Then
                Return GetView69()
            End If

            If extentName = "DbContext.WorkspaceTemplates" Then
                Return GetView70()
            End If

            If extentName = "DbContext.WorkspaceTemplateDetails" Then
                Return GetView71()
            End If

            If extentName = "DbContext.WorkspaceTemplateItems" Then
                Return GetView72()
            End If

            If extentName = "DbContext.ModuleInformations" Then
                Return GetView73()
            End If

            If extentName = "DbContext.ModuleSubs" Then
                Return GetView74()
            End If

            If extentName = "DbContext.Module_ParentSubModules" Then
                Return GetView75()
            End If

            If extentName = "DbContext.Module_SubModules" Then
                Return GetView76()
            End If

            If extentName = "DbContext.ClientPortalUserWorkspaces" Then
                Return GetView77()
            End If

            If extentName = "DbContext.ClientPortalWorkspaceObjects" Then
                Return GetView78()
            End If

            If extentName = "DbContext.SecurityDivisions" Then
                Return GetView79()
            End If

            If extentName = "DbContext.UserClientDivisionProductAccesses" Then
                Return GetView80()
            End If

            If extentName = "DbContext.UserEmployeeAccesses" Then
                Return GetView81()
            End If

            If extentName = "DbContext.UserLoginAudits" Then
                Return GetView82()
            End If

            If extentName = "CodeFirstDatabase.AdvantageUserLicenseInUse" Then
                Return GetView83()
            End If

            If extentName = "DbContext.AdvantageUserLicenseInUses" Then
                Return GetView84()
            End If

            If extentName = "CodeFirstDatabase.ApplicationSetting" Then
                Return GetView85()
            End If

            If extentName = "DbContext.ApplicationSettings" Then
                Return GetView86()
            End If

            If extentName = "CodeFirstDatabase.CPUserFavoriteModule" Then
                Return GetView87()
            End If

            If extentName = "DbContext.CPUserFavoriteModules" Then
                Return GetView88()
            End If

            If extentName = "CodeFirstDatabase.DatabaseSQLUser" Then
                Return GetView89()
            End If

            If extentName = "DbContext.DatabaseSQLUsers" Then
                Return GetView90()
            End If

            If extentName = "CodeFirstDatabase.EmployeeSummary" Then
                Return GetView91()
            End If

            If extentName = "DbContext.EmployeeSummaries" Then
                Return GetView92()
            End If

            If extentName = "CodeFirstDatabase.GroupPermission" Then
                Return GetView93()
            End If

            If extentName = "DbContext.GroupPermissions" Then
                Return GetView94()
            End If

            If extentName = "CodeFirstDatabase.GroupPermissionsReport" Then
                Return GetView95()
            End If

            If extentName = "DbContext.GroupPermissionsReports" Then
                Return GetView96()
            End If

            If extentName = "CodeFirstDatabase.ModuleStructure" Then
                Return GetView97()
            End If

            If extentName = "DbContext.ModuleStructures" Then
                Return GetView98()
            End If

            If extentName = "CodeFirstDatabase.ModuleView" Then
                Return GetView99()
            End If

            If extentName = "DbContext.ModuleViews" Then
                Return GetView100()
            End If

            If extentName = "CodeFirstDatabase.PasswordHistory" Then
                Return GetView101()
            End If

            If extentName = "DbContext.PasswordHistories" Then
                Return GetView102()
            End If

            If extentName = "CodeFirstDatabase.PasswordLockout" Then
                Return GetView103()
            End If

            If extentName = "DbContext.PasswordLockouts" Then
                Return GetView104()
            End If

            If extentName = "CodeFirstDatabase.ReportAccess" Then
                Return GetView105()
            End If

            If extentName = "DbContext.ReportAccesses" Then
                Return GetView106()
            End If

            If extentName = "CodeFirstDatabase.Report" Then
                Return GetView107()
            End If

            If extentName = "DbContext.Reports" Then
                Return GetView108()
            End If

            If extentName = "CodeFirstDatabase.ServerSQLUser" Then
                Return GetView109()
            End If

            If extentName = "DbContext.ServerSQLUsers" Then
                Return GetView110()
            End If

            If extentName = "CodeFirstDatabase.ServiceFeeReconciliationReportColumn" Then
                Return GetView111()
            End If

            If extentName = "CodeFirstDatabase.ServiceFeeReconciliationReport" Then
                Return GetView112()
            End If

            If extentName = "CodeFirstDatabase.ServiceFeeReconciliationReportSummaryItem" Then
                Return GetView113()
            End If

            If extentName = "DbContext.ServiceFeeReconciliationReportColumns" Then
                Return GetView114()
            End If

            If extentName = "DbContext.ServiceFeeReconciliationReports" Then
                Return GetView115()
            End If

            If extentName = "DbContext.ServiceFeeReconciliationReportSummaryItems" Then
                Return GetView116()
            End If

            If extentName = "CodeFirstDatabase.ServiceFeeReconciliationSettingCDP" Then
                Return GetView117()
            End If

            If extentName = "DbContext.ServiceFeeReconciliationSettingCDPs" Then
                Return GetView118()
            End If

            If extentName = "CodeFirstDatabase.ServiceFeeReconciliationSettingDetail" Then
                Return GetView119()
            End If

            If extentName = "DbContext.ServiceFeeReconciliationSettingDetails" Then
                Return GetView120()
            End If

            If extentName = "CodeFirstDatabase.ServiceFeeReconciliationSetting" Then
                Return GetView121()
            End If

            If extentName = "DbContext.ServiceFeeReconciliationSettings" Then
                Return GetView122()
            End If

            If extentName = "CodeFirstDatabase.UserFavoriteModule" Then
                Return GetView123()
            End If

            If extentName = "DbContext.UserFavoriteModules" Then
                Return GetView124()
            End If

            If extentName = "CodeFirstDatabase.UserPermission" Then
                Return GetView125()
            End If

            If extentName = "DbContext.UserPermissions" Then
                Return GetView126()
            End If

            If extentName = "CodeFirstDatabase.UserPermissionsReport" Then
                Return GetView127()
            End If

            If extentName = "DbContext.UserPermissionsReports" Then
                Return GetView128()
            End If

            If extentName = "CodeFirstDatabase.UserUserDefinedReportPermission" Then
                Return GetView129()
            End If

            If extentName = "DbContext.UserUserDefinedReportPermissions" Then
                Return GetView130()
            End If

            If extentName = "CodeFirstDatabase.UserWorkspace" Then
                Return GetView131()
            End If

            If extentName = "CodeFirstDatabase.WorkspaceObject" Then
                Return GetView132()
            End If

            If extentName = "DbContext.UserWorkspaces" Then
                Return GetView133()
            End If

            If extentName = "DbContext.WorkspaceObjects" Then
                Return GetView134()
            End If

            Return Nothing
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.AdassistUser.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView0() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing AdassistUser" & vbCrLf &
                "        [CodeFirstDatabaseSchema.AdassistUser](T3.[AdassistUser.ACCT_EXEC], T3.[AdassistUser.PASSWORD_ID], T3.[AdassistUser.USER_ID], T3.[AdassistUser.DATE_CREATED], T3.AdassistUser_INACTIVE, T3.[AdassistUser.Employee_Code])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT T1.[AdassistUser.ACCT_EXEC], T1.[AdassistUser.PASSWORD_ID], T1.[AdassistUser.USER_ID], T1.[AdassistUser.DATE_CREATED], T1.AdassistUser_INACTIVE, T2.[AdassistUser.Employee_Code], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1" & vbCrLf &
                "        FROM  (" & vbCrLf &
                "            SELECT " & vbCrLf &
                "                T.EmployeeCode AS [AdassistUser.ACCT_EXEC], " & vbCrLf &
                "                T.Password AS [AdassistUser.PASSWORD_ID], " & vbCrLf &
                "                T.UserCode AS [AdassistUser.USER_ID], " & vbCrLf &
                "                T.CreatedDate AS [AdassistUser.DATE_CREATED], " & vbCrLf &
                "                T.IsInactive AS AdassistUser_INACTIVE, " & vbCrLf &
                "                True AS _from0" & vbCrLf &
                "            FROM DbContext.AdassistUsers AS T) AS T1" & vbCrLf &
                "            LEFT OUTER JOIN (" & vbCrLf &
                "            SELECT " & vbCrLf &
                "                Key(T.AdassistUser_Employee_Source).EmployeeCode AS [AdassistUser.ACCT_EXEC], " & vbCrLf &
                "                Key(T.AdassistUser_Employee_Target).Code AS [AdassistUser.Employee_Code], " & vbCrLf &
                "                True AS _from1" & vbCrLf &
                "            FROM DbContext.AdassistUser_Employee AS T) AS T2" & vbCrLf &
                "            ON T1.[AdassistUser.ACCT_EXEC] = T2.[AdassistUser.ACCT_EXEC]" & vbCrLf &
                "    ) AS T3")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.Employee.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView1() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Employee" & vbCrLf &
                "        [CodeFirstDatabaseSchema.Employee](T1.[Employee.EMP_CODE], T1.[Employee.EMP_LNAME], T1.[Employee.EMP_FNAME], T1.[Employee.EMP_MI], T1.[Employee.DP_TM_CODE], T1.[Employee.WV_TMPLT_HDR_ID], T1.[Employee.EMP_TERM_DATE], T1.[Employee.OFFICE_CODE], T1.[Employee.IGNORE_CALENDAR_SYNC], T1.[Employee.DEF_FNC_CODE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.Code AS [Employee.EMP_CODE], " & vbCrLf &
                "            T.LastName AS [Employee.EMP_LNAME], " & vbCrLf &
                "            T.FirstName AS [Employee.EMP_FNAME], " & vbCrLf &
                "            T.MiddleInitial AS [Employee.EMP_MI], " & vbCrLf &
                "            T.DepartmentCode AS [Employee.DP_TM_CODE], " & vbCrLf &
                "            T.WorkspaceTemplateID AS [Employee.WV_TMPLT_HDR_ID], " & vbCrLf &
                "            T.TerminationDate AS [Employee.EMP_TERM_DATE], " & vbCrLf &
                "            T.OfficeCode AS [Employee.OFFICE_CODE], " & vbCrLf &
                "            T.IgnoreCalendarSync AS [Employee.IGNORE_CALENDAR_SYNC], " & vbCrLf &
                "            T.FunctionCode AS [Employee.DEF_FNC_CODE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.SecurityEmployees AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.Department.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView2() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Department" & vbCrLf &
                "        [CodeFirstDatabaseSchema.Department](T1.[Department.DP_TM_CODE], T1.[Department.DP_TM_DESC], T1.[Department.INACTIVE_FLAG], T1.[Department.DIRECT_HRS_PER_GOAL], T1.Department_CATEGORY, T1.[Department.PO_APPR_RULE_CODE], T1.[Department.SERVICE_FEE_TYPE_CODE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.Code AS [Department.DP_TM_CODE], " & vbCrLf &
                "            T.Description AS [Department.DP_TM_DESC], " & vbCrLf &
                "            T.IsInactive AS [Department.INACTIVE_FLAG], " & vbCrLf &
                "            T.DirectHoursPercentGoal AS [Department.DIRECT_HRS_PER_GOAL], " & vbCrLf &
                "            T.Category AS Department_CATEGORY, " & vbCrLf &
                "            T.PurchaseOrderApprovalRuleCode AS [Department.PO_APPR_RULE_CODE], " & vbCrLf &
                "            T.ServiceFeeTypeCode AS [Department.SERVICE_FEE_TYPE_CODE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.SecurityDepartments AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.Office.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView3() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Office" & vbCrLf &
                "        [CodeFirstDatabaseSchema.Office](T1.[Office.OFFICE_CODE], T1.[Office.OFFICE_NAME], T1.[Office.INACTIVE_FLAG])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.Code AS [Office.OFFICE_CODE], " & vbCrLf &
                "            T.Name AS [Office.OFFICE_NAME], " & vbCrLf &
                "            T.IsInactive AS [Office.INACTIVE_FLAG], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.SecurityOffices AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.Product.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView4() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Product" & vbCrLf &
                "        [CodeFirstDatabaseSchema.Product](T1.[Product.CL_CODE], T1.[Product.DIV_CODE], T1.[Product.PRD_CODE], T1.[Product.PRD_DESCRIPTION], T1.[Product.OFFICE_CODE], T1.[Product.ACTIVE_FLAG], T1.[Product.CDP_GROUP_ID])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ClientCode AS [Product.CL_CODE], " & vbCrLf &
                "            T.DivisionCode AS [Product.DIV_CODE], " & vbCrLf &
                "            T.Code AS [Product.PRD_CODE], " & vbCrLf &
                "            T.Name AS [Product.PRD_DESCRIPTION], " & vbCrLf &
                "            T.OfficeCode AS [Product.OFFICE_CODE], " & vbCrLf &
                "            T.IsActive AS [Product.ACTIVE_FLAG], " & vbCrLf &
                "            T.CDPSecurityGroupID AS [Product.CDP_GROUP_ID], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.SecurityProducts AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.CDPSecurityGroup.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView5() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing CDPSecurityGroup" & vbCrLf &
                "        [CodeFirstDatabaseSchema.CDPSecurityGroup](T1.[CDPSecurityGroup.CDP_GROUP_ID], T1.CDPSecurityGroup_NAME)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [CDPSecurityGroup.CDP_GROUP_ID], " & vbCrLf &
                "            T.Name AS CDPSecurityGroup_NAME, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.CDPSecurityGroups AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.CDPSecurityGroupEmployee.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView6() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing CDPSecurityGroupEmployee" & vbCrLf &
                "        [CodeFirstDatabaseSchema.CDPSecurityGroupEmployee](T1.[CDPSecurityGroupEmployee.CDP_GROUP_EMPLOYEE_ID], T1.[CDPSecurityGroupEmployee.CDP_GROUP_ID], T1.[CDPSecurityGroupEmployee.EMP_CODE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [CDPSecurityGroupEmployee.CDP_GROUP_EMPLOYEE_ID], " & vbCrLf &
                "            T.CDPSecurityGroupID AS [CDPSecurityGroupEmployee.CDP_GROUP_ID], " & vbCrLf &
                "            T.EmployeeCode AS [CDPSecurityGroupEmployee.EMP_CODE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.CDPSecurityGroupEmployees AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.Client.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView7() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Client" & vbCrLf &
                "        [CodeFirstDatabaseSchema.Client](T1.[Client.CL_CODE], T1.[Client.CL_NAME], T1.[Client.ACTIVE_FLAG], T1.[Client.REQ_TIME_COMMENT])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.Code AS [Client.CL_CODE], " & vbCrLf &
                "            T.Name AS [Client.CL_NAME], " & vbCrLf &
                "            T.IsActive AS [Client.ACTIVE_FLAG], " & vbCrLf &
                "            T.RequireTimeComment AS [Client.REQ_TIME_COMMENT], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.SecurityClients AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ClientContact.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView8() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ClientContact" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ClientContact](T1.[ClientContact.CDP_CONTACT_ID], T1.[ClientContact.CONT_CODE], T1.[ClientContact.CL_CODE], T1.[ClientContact.EMAIL_ADDRESS], T1.[ClientContact.CONT_FNAME], T1.[ClientContact.CONT_LNAME], T1.[ClientContact.CONT_MI], T1.[ClientContact.CONT_TITLE], T1.[ClientContact.CONT_ADDRESS1], T1.[ClientContact.CONT_ADDRESS2], T1.[ClientContact.CONT_CITY], T1.[ClientContact.CONT_COUNTY], T1.[ClientContact.CONT_STATE], T1.[ClientContact.CONT_COUNTRY], T1.[ClientContact.CONT_ZIP], T1.[ClientContact.CONT_TELEPHONE], T1.[ClientContact.CONT_EXTENTION], T1.[ClientContact.CONT_FAX], T1.[ClientContact.CONT_FAX_EXTENTION], T1.[ClientContact.SCHEDULE_USER], T1.[ClientContact.DEFAULT_TASK], T1.[ClientContact.CP_ALERTS], T1.[ClientContact.EMAIL_RCPT], T1.[ClientContact.TASK_PRIMARY], T1.[ClientContact.INACTIVE_FLAG], T1.[ClientContact.CELL_PHONE], T1.[ClientContact.CONT_COMMENT], T1.[ClientContact.CP_USER], T1.[ClientContact.CONTACT_TYPE_ID], T1.[ClientContact.CONT_LF], T1.[ClientContact.CONT_FML])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ContactID AS [ClientContact.CDP_CONTACT_ID], " & vbCrLf &
                "            T.ContactCode AS [ClientContact.CONT_CODE], " & vbCrLf &
                "            T.ClientCode AS [ClientContact.CL_CODE], " & vbCrLf &
                "            T.EmailAddress AS [ClientContact.EMAIL_ADDRESS], " & vbCrLf &
                "            T.FirstName AS [ClientContact.CONT_FNAME], " & vbCrLf &
                "            T.LastName AS [ClientContact.CONT_LNAME], " & vbCrLf &
                "            T.MiddleInitial AS [ClientContact.CONT_MI], " & vbCrLf &
                "            T.Title AS [ClientContact.CONT_TITLE], " & vbCrLf &
                "            T.Address AS [ClientContact.CONT_ADDRESS1], " & vbCrLf &
                "            T.Address2 AS [ClientContact.CONT_ADDRESS2], " & vbCrLf &
                "            T.City AS [ClientContact.CONT_CITY], " & vbCrLf &
                "            T.County AS [ClientContact.CONT_COUNTY], " & vbCrLf &
                "            T.State AS [ClientContact.CONT_STATE], " & vbCrLf &
                "            T.Country AS [ClientContact.CONT_COUNTRY], " & vbCrLf &
                "            T.Zip AS [ClientContact.CONT_ZIP], " & vbCrLf &
                "            T.PhoneNumber AS [ClientContact.CONT_TELEPHONE], " & vbCrLf &
                "            T.PhoneNumberExtention AS [ClientContact.CONT_EXTENTION], " & vbCrLf &
                "            T.FaxNumber AS [ClientContact.CONT_FAX], " & vbCrLf &
                "            T.FaxNumberExtention AS [ClientContact.CONT_FAX_EXTENTION], " & vbCrLf &
                "            T.ScheduleUser AS [ClientContact.SCHEDULE_USER], " & vbCrLf &
                "            T.DefaultTaskCode AS [ClientContact.DEFAULT_TASK], " & vbCrLf &
                "            T.RecievesAlerts AS [ClientContact.CP_ALERTS], " & vbCrLf &
                "            T.IsEmailRecipient AS [ClientContact.EMAIL_RCPT], " & vbCrLf &
                "            T.IsPrimaryTask AS [ClientContact.TASK_PRIMARY], " & vbCrLf &
                "            T.IsInactive AS [ClientContact.INACTIVE_FLAG], " & vbCrLf &
                "            T.CellPhoneNumber AS [ClientContact.CELL_PHONE], " & vbCrLf &
                "            T.Comments AS [ClientContact.CONT_COMMENT], " & vbCrLf &
                "            T.IsClientPortalUser AS [ClientContact.CP_USER], " & vbCrLf &
                "            T.ContactTypeID AS [ClientContact.CONTACT_TYPE_ID], " & vbCrLf &
                "            T.FullNameLF AS [ClientContact.CONT_LF], " & vbCrLf &
                "            T.FullNameFML AS [ClientContact.CONT_FML], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.SecurityClientContacts AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ClientContactDetail.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView9() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ClientContactDetail" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ClientContactDetail](T1.[ClientContactDetail.CDP_CONTACT_ID], T1.[ClientContactDetail.SEQ_NBR], T1.[ClientContactDetail.DIV_CODE], T1.[ClientContactDetail.PRD_CODE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ContactID AS [ClientContactDetail.CDP_CONTACT_ID], " & vbCrLf &
                "            T.SequenceNumber AS [ClientContactDetail.SEQ_NBR], " & vbCrLf &
                "            T.DivisionCode AS [ClientContactDetail.DIV_CODE], " & vbCrLf &
                "            T.ProductCode AS [ClientContactDetail.PRD_CODE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.SecurityClientContactDetails AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ClientPortalUser.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView10() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ClientPortalUser" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ClientPortalUser](T1.[ClientPortalUser.USER_GUID], T1.[ClientPortalUser.USER_NAME], T1.[ClientPortalUser.LOWERED_USER_NAME], T1.[ClientPortalUser.FULL_NAME], T1.[ClientPortalUser.PASSWORD_HASH], T1.[ClientPortalUser.LAST_LOGON], T1.[ClientPortalUser.CREATED_BY], T1.[ClientPortalUser.CREATED_TIMESTAMP], T1.[ClientPortalUser.IS_LOCKED], T1.[ClientPortalUser.EMAIL_ADDRESS], T1.[ClientPortalUser.LOGIN_TRY_COUNT], T1.[ClientPortalUser.UNLOCK_TIME], T1.[ClientPortalUser.MUST_CHANGE_PASSORD], T1.ClientPortalUser_THEME, T1.[ClientPortalUser.CDP_CONTACT_ID], T1.[ClientPortalUser.DESKTOP_TEMPLATE], T1.[ClientPortalUser.WEB_ID], T1.[ClientPortalUser.ADMIN_USER], T1.[ClientPortalUser.CL_CODE], T1.[ClientPortalUser.ALERT_GROUP_CODE], T1.[ClientPortalUser.AGENCY_CONTACT_CODE], T1.[ClientPortalUser.TIME_ZONE_ID], T1.[ClientPortalUser.CS_USERID], T1.[ClientPortalUser.CS_PASSWORD])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [ClientPortalUser.USER_GUID], " & vbCrLf &
                "            T.UserName AS [ClientPortalUser.USER_NAME], " & vbCrLf &
                "            T.LoweredUserName AS [ClientPortalUser.LOWERED_USER_NAME], " & vbCrLf &
                "            T.FullName AS [ClientPortalUser.FULL_NAME], " & vbCrLf &
                "            T.Password AS [ClientPortalUser.PASSWORD_HASH], " & vbCrLf &
                "            T.LastLoginDate AS [ClientPortalUser.LAST_LOGON], " & vbCrLf &
                "            T.CreatedByUserCode AS [ClientPortalUser.CREATED_BY], " & vbCrLf &
                "            T.CreatedDate AS [ClientPortalUser.CREATED_TIMESTAMP], " & vbCrLf &
                "            T.IsLocked AS [ClientPortalUser.IS_LOCKED], " & vbCrLf &
                "            T.EmailAddress AS [ClientPortalUser.EMAIL_ADDRESS], " & vbCrLf &
                "            T.LoginsAttempted AS [ClientPortalUser.LOGIN_TRY_COUNT], " & vbCrLf &
                "            T.UnlockedDate AS [ClientPortalUser.UNLOCK_TIME], " & vbCrLf &
                "            T.MustChangePassword AS [ClientPortalUser.MUST_CHANGE_PASSORD], " & vbCrLf &
                "            T.Theme AS ClientPortalUser_THEME, " & vbCrLf &
                "            T.ClientContactID AS [ClientPortalUser.CDP_CONTACT_ID], " & vbCrLf &
                "            T.DesktopTemplate AS [ClientPortalUser.DESKTOP_TEMPLATE], " & vbCrLf &
                "            T.WebID AS [ClientPortalUser.WEB_ID], " & vbCrLf &
                "            T.IsAdminUser AS [ClientPortalUser.ADMIN_USER], " & vbCrLf &
                "            T.ClientCode AS [ClientPortalUser.CL_CODE], " & vbCrLf &
                "            T.AlertGroupCode AS [ClientPortalUser.ALERT_GROUP_CODE], " & vbCrLf &
                "            T.AgencyContactEmployeeCode AS [ClientPortalUser.AGENCY_CONTACT_CODE], " & vbCrLf &
                "            T.TimeZoneID AS [ClientPortalUser.TIME_ZONE_ID], " & vbCrLf &
                "            T.ConceptShareUserID AS [ClientPortalUser.CS_USERID], " & vbCrLf &
                "            T.ConceptSharePassword AS [ClientPortalUser.CS_PASSWORD], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ClientPortalUsers AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ClientPortalUserApplicationAccess.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView11() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ClientPortalUserApplicationAccess" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ClientPortalUserApplicationAccess](T1.[ClientPortalUserApplicationAccess.SEC_CPUSER_APPACCESS_ID], T1.[ClientPortalUserApplicationAccess.CPUSER_GUID], T1.[ClientPortalUserApplicationAccess.SEC_APPLICATION_ID], T1.[ClientPortalUserApplicationAccess.IS_BLOCKED], T1.[ClientPortalUserApplicationAccess.CAN_PRINT], T1.[ClientPortalUserApplicationAccess.CAN_UPDATE], T1.[ClientPortalUserApplicationAccess.CAN_ADD], T1.ClientPortalUserApplicationAccess_CUSTOM1, T1.ClientPortalUserApplicationAccess_CUSTOM2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [ClientPortalUserApplicationAccess.SEC_CPUSER_APPACCESS_ID], " & vbCrLf &
                "            T.ClientPortalUserID AS [ClientPortalUserApplicationAccess.CPUSER_GUID], " & vbCrLf &
                "            T.ApplicationID AS [ClientPortalUserApplicationAccess.SEC_APPLICATION_ID], " & vbCrLf &
                "            T.IsBlocked AS [ClientPortalUserApplicationAccess.IS_BLOCKED], " & vbCrLf &
                "            T.CanPrint AS [ClientPortalUserApplicationAccess.CAN_PRINT], " & vbCrLf &
                "            T.CanUpdate AS [ClientPortalUserApplicationAccess.CAN_UPDATE], " & vbCrLf &
                "            T.CanAdd AS [ClientPortalUserApplicationAccess.CAN_ADD], " & vbCrLf &
                "            T.Custom1 AS ClientPortalUserApplicationAccess_CUSTOM1, " & vbCrLf &
                "            T.Custom2 AS ClientPortalUserApplicationAccess_CUSTOM2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ClientPortalUserApplicationAccesses AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.Application.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView12() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Application" & vbCrLf &
                "        [CodeFirstDatabaseSchema.Application](T1.[Application.SEC_APPLICATION_ID], T1.Application_DESCRIPTION, T1.Application_NAME)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [Application.SEC_APPLICATION_ID], " & vbCrLf &
                "            T.Description AS Application_DESCRIPTION, " & vbCrLf &
                "            T.Name AS Application_NAME, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.Applications AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ApplicationModule.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView13() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ApplicationModule" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ApplicationModule](T1.[ApplicationModule.SEC_APPLICATION_MOD_ID], T1.[ApplicationModule.SEC_APPLICATION_ID], T1.[ApplicationModule.SEC_MODULE_ID])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [ApplicationModule.SEC_APPLICATION_MOD_ID], " & vbCrLf &
                "            T.ApplicationID AS [ApplicationModule.SEC_APPLICATION_ID], " & vbCrLf &
                "            T.ModuleID AS [ApplicationModule.SEC_MODULE_ID], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ApplicationModules AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.Module.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView14() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Module" & vbCrLf &
                "        [CodeFirstDatabaseSchema.Module](T1.[Module.SEC_MODULE_ID], T1.Module_DESCRIPTION, T1.[Module.IS_INACTIVE], T1.[Module.IS_MENU_ITEM], T1.[Module.IS_CATEGORY], T1.[Module.IS_APPLICATION], T1.[Module.IS_REPORT], T1.[Module.IS_DESKTOP_OBJECT], T1.[Module.IS_DASH_QUERY], T1.[Module.SEC_MODULE_INFO_ID], T1.[Module.SEC_MODULE_CODE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [Module.SEC_MODULE_ID], " & vbCrLf &
                "            T.Description AS Module_DESCRIPTION, " & vbCrLf &
                "            T.IsInactive AS [Module.IS_INACTIVE], " & vbCrLf &
                "            T.IsMenuItem AS [Module.IS_MENU_ITEM], " & vbCrLf &
                "            T.IsCategory AS [Module.IS_CATEGORY], " & vbCrLf &
                "            T.IsApplication AS [Module.IS_APPLICATION], " & vbCrLf &
                "            T.IsReport AS [Module.IS_REPORT], " & vbCrLf &
                "            T.IsDesktopObject AS [Module.IS_DESKTOP_OBJECT], " & vbCrLf &
                "            T.IsDashQuery AS [Module.IS_DASH_QUERY], " & vbCrLf &
                "            T.ModuleInformationID AS [Module.SEC_MODULE_INFO_ID], " & vbCrLf &
                "            T.Code AS [Module.SEC_MODULE_CODE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.Modules AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ClientPortalUserModuleAccess.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView15() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ClientPortalUserModuleAccess" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ClientPortalUserModuleAccess](T1.[ClientPortalUserModuleAccess.SEC_CPUSER_MODACCESS_ID], T1.[ClientPortalUserModuleAccess.CPUSER_GUID], T1.[ClientPortalUserModuleAccess.SEC_MODULE_ID], T1.[ClientPortalUserModuleAccess.IS_BLOCKED], T1.[ClientPortalUserModuleAccess.CAN_PRINT], T1.[ClientPortalUserModuleAccess.CAN_UPDATE], T1.[ClientPortalUserModuleAccess.CAN_ADD], T1.ClientPortalUserModuleAccess_CUSTOM1, T1.ClientPortalUserModuleAccess_CUSTOM2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [ClientPortalUserModuleAccess.SEC_CPUSER_MODACCESS_ID], " & vbCrLf &
                "            T.ClientPortalUserID AS [ClientPortalUserModuleAccess.CPUSER_GUID], " & vbCrLf &
                "            T.ModuleID AS [ClientPortalUserModuleAccess.SEC_MODULE_ID], " & vbCrLf &
                "            T.IsBlocked AS [ClientPortalUserModuleAccess.IS_BLOCKED], " & vbCrLf &
                "            T.CanPrint AS [ClientPortalUserModuleAccess.CAN_PRINT], " & vbCrLf &
                "            T.CanUpdate AS [ClientPortalUserModuleAccess.CAN_UPDATE], " & vbCrLf &
                "            T.CanAdd AS [ClientPortalUserModuleAccess.CAN_ADD], " & vbCrLf &
                "            T.Custom1 AS ClientPortalUserModuleAccess_CUSTOM1, " & vbCrLf &
                "            T.Custom2 AS ClientPortalUserModuleAccess_CUSTOM2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ClientPortalUserModuleAccesses AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.GroupModuleAccess.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView16() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupModuleAccess" & vbCrLf &
                "        [CodeFirstDatabaseSchema.GroupModuleAccess](T1.[GroupModuleAccess.SEC_GROUP_MODACCESS_ID], T1.[GroupModuleAccess.SEC_GROUP_ID], T1.[GroupModuleAccess.SEC_MODULE_ID], T1.[GroupModuleAccess.IS_BLOCKED], T1.[GroupModuleAccess.CAN_PRINT], T1.[GroupModuleAccess.CAN_UPDATE], T1.[GroupModuleAccess.CAN_ADD], T1.GroupModuleAccess_CUSTOM1, T1.GroupModuleAccess_CUSTOM2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [GroupModuleAccess.SEC_GROUP_MODACCESS_ID], " & vbCrLf &
                "            T.GroupID AS [GroupModuleAccess.SEC_GROUP_ID], " & vbCrLf &
                "            T.ModuleID AS [GroupModuleAccess.SEC_MODULE_ID], " & vbCrLf &
                "            T.IsBlocked AS [GroupModuleAccess.IS_BLOCKED], " & vbCrLf &
                "            T.CanPrint AS [GroupModuleAccess.CAN_PRINT], " & vbCrLf &
                "            T.CanUpdate AS [GroupModuleAccess.CAN_UPDATE], " & vbCrLf &
                "            T.CanAdd AS [GroupModuleAccess.CAN_ADD], " & vbCrLf &
                "            T.Custom1 AS GroupModuleAccess_CUSTOM1, " & vbCrLf &
                "            T.Custom2 AS GroupModuleAccess_CUSTOM2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.GroupModuleAccesses AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.Group.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView17() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Group" & vbCrLf &
                "        [CodeFirstDatabaseSchema.Group](T1.[Group.SEC_GROUP_ID], T1.Group_DESCRIPTION, T1.Group_NAME)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [Group.SEC_GROUP_ID], " & vbCrLf &
                "            T.Description AS Group_DESCRIPTION, " & vbCrLf &
                "            T.Name AS Group_NAME, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.Groups AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.GroupApplicationAccess.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView18() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupApplicationAccess" & vbCrLf &
                "        [CodeFirstDatabaseSchema.GroupApplicationAccess](T1.[GroupApplicationAccess.SEC_GROUP_APPACCESS_ID], T1.[GroupApplicationAccess.SEC_GROUP_ID], T1.[GroupApplicationAccess.SEC_APPLICATION_ID], T1.[GroupApplicationAccess.IS_BLOCKED], T1.[GroupApplicationAccess.CAN_PRINT], T1.[GroupApplicationAccess.CAN_UPDATE], T1.[GroupApplicationAccess.CAN_ADD], T1.GroupApplicationAccess_CUSTOM1, T1.GroupApplicationAccess_CUSTOM2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [GroupApplicationAccess.SEC_GROUP_APPACCESS_ID], " & vbCrLf &
                "            T.GroupID AS [GroupApplicationAccess.SEC_GROUP_ID], " & vbCrLf &
                "            T.ApplicationID AS [GroupApplicationAccess.SEC_APPLICATION_ID], " & vbCrLf &
                "            T.IsBlocked AS [GroupApplicationAccess.IS_BLOCKED], " & vbCrLf &
                "            T.CanPrint AS [GroupApplicationAccess.CAN_PRINT], " & vbCrLf &
                "            T.CanUpdate AS [GroupApplicationAccess.CAN_UPDATE], " & vbCrLf &
                "            T.CanAdd AS [GroupApplicationAccess.CAN_ADD], " & vbCrLf &
                "            T.Custom1 AS GroupApplicationAccess_CUSTOM1, " & vbCrLf &
                "            T.Custom2 AS GroupApplicationAccess_CUSTOM2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.GroupApplicationAccesses AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.GroupSetting.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView19() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupSetting" & vbCrLf &
                "        [CodeFirstDatabaseSchema.GroupSetting](T1.[GroupSetting.SEC_GROUP_ID], T1.[GroupSetting.SETTING_CODE], T1.[GroupSetting.SEC_GROUP_SETTING_ID], T1.[GroupSetting.STRING_VALUE], T1.[GroupSetting.NUMERIC_VALUE], T1.[GroupSetting.DATE_VALUE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.GroupID AS [GroupSetting.SEC_GROUP_ID], " & vbCrLf &
                "            T.SettingCode AS [GroupSetting.SETTING_CODE], " & vbCrLf &
                "            T.ID AS [GroupSetting.SEC_GROUP_SETTING_ID], " & vbCrLf &
                "            T.StringValue AS [GroupSetting.STRING_VALUE], " & vbCrLf &
                "            T.NumericValue AS [GroupSetting.NUMERIC_VALUE], " & vbCrLf &
                "            T.DateValue AS [GroupSetting.DATE_VALUE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.GroupSettings AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.GroupUserDefinedReportAccess.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView20() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupUserDefinedReportAccess" & vbCrLf &
                "        [CodeFirstDatabaseSchema.GroupUserDefinedReportAccess](T1.[GroupUserDefinedReportAccess.SEC_GROUP_UDRACCESS_ID], T1.[GroupUserDefinedReportAccess.SEC_GROUP_ID], T1.[GroupUserDefinedReportAccess.USER_DEF_REPORT_ID], T1.[GroupUserDefinedReportAccess.IS_BLOCKED])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [GroupUserDefinedReportAccess.SEC_GROUP_UDRACCESS_ID], " & vbCrLf &
                "            T.GroupID AS [GroupUserDefinedReportAccess.SEC_GROUP_ID], " & vbCrLf &
                "            T.UserDefinedReportID AS [GroupUserDefinedReportAccess.USER_DEF_REPORT_ID], " & vbCrLf &
                "            T.IsBlocked AS [GroupUserDefinedReportAccess.IS_BLOCKED], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.GroupUserDefinedReportAccesses AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.GroupUser.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView21() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupUser" & vbCrLf &
                "        [CodeFirstDatabaseSchema.GroupUser](T1.[GroupUser.SEC_GROUPUSER_ID], T1.[GroupUser.SEC_GROUP_ID], T1.[GroupUser.SEC_USER_ID])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [GroupUser.SEC_GROUPUSER_ID], " & vbCrLf &
                "            T.GroupID AS [GroupUser.SEC_GROUP_ID], " & vbCrLf &
                "            T.UserID AS [GroupUser.SEC_USER_ID], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.GroupUsers AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.User.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView22() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing User" & vbCrLf &
                "        [CodeFirstDatabaseSchema.User](T1.[User.SEC_USER_ID], T1.[User.USER_CODE], T1.[User.EMP_CODE], T1.[User.USER_NAME], T1.[User.CHECK_USER_ACCESS], T1.[User.TIME_HWND], T1.[User.MENU_HWND], T1.[User.WEB_ID], T1.[User.IS_INACTIVE], T1.User_PASSWORD, T1.User_SID)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [User.SEC_USER_ID], " & vbCrLf &
                "            T.UserCode AS [User.USER_CODE], " & vbCrLf &
                "            T.EmployeeCode AS [User.EMP_CODE], " & vbCrLf &
                "            T.UserName AS [User.USER_NAME], " & vbCrLf &
                "            T.CheckForUserAccess AS [User.CHECK_USER_ACCESS], " & vbCrLf &
                "            T.TimeHWND AS [User.TIME_HWND], " & vbCrLf &
                "            T.MenuHWND AS [User.MENU_HWND], " & vbCrLf &
                "            T.WebID AS [User.WEB_ID], " & vbCrLf &
                "            T.IsInactive AS [User.IS_INACTIVE], " & vbCrLf &
                "            T.Password AS User_PASSWORD, " & vbCrLf &
                "            T.SID AS User_SID, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.Users AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserApplicationAccess.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView23() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserApplicationAccess" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserApplicationAccess](T1.[UserApplicationAccess.SEC_USER_APPACCESS_ID], T1.[UserApplicationAccess.SEC_USER_ID], T1.[UserApplicationAccess.SEC_APPLICATION_ID], T1.[UserApplicationAccess.IS_BLOCKED], T1.[UserApplicationAccess.CAN_PRINT], T1.[UserApplicationAccess.CAN_UPDATE], T1.[UserApplicationAccess.CAN_ADD], T1.UserApplicationAccess_CUSTOM1, T1.UserApplicationAccess_CUSTOM2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [UserApplicationAccess.SEC_USER_APPACCESS_ID], " & vbCrLf &
                "            T.UserID AS [UserApplicationAccess.SEC_USER_ID], " & vbCrLf &
                "            T.ApplicationID AS [UserApplicationAccess.SEC_APPLICATION_ID], " & vbCrLf &
                "            T.IsBlocked AS [UserApplicationAccess.IS_BLOCKED], " & vbCrLf &
                "            T.CanPrint AS [UserApplicationAccess.CAN_PRINT], " & vbCrLf &
                "            T.CanUpdate AS [UserApplicationAccess.CAN_UPDATE], " & vbCrLf &
                "            T.CanAdd AS [UserApplicationAccess.CAN_ADD], " & vbCrLf &
                "            T.Custom1 AS UserApplicationAccess_CUSTOM1, " & vbCrLf &
                "            T.Custom2 AS UserApplicationAccess_CUSTOM2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserApplicationAccesses AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserMenu.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView24() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserMenu" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserMenu](T1.[UserMenu.SEC_USER_MENU_ID], T1.[UserMenu.SEC_USER_ID], T1.[UserMenu.SEC_MODULE_ID], T1.[UserMenu.MENU_TYPE], T1.UserMenu_ORDER, T1.[UserMenu.SEC_USER_MENU_TAB_ID])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [UserMenu.SEC_USER_MENU_ID], " & vbCrLf &
                "            T.UserID AS [UserMenu.SEC_USER_ID], " & vbCrLf &
                "            T.ModuleID AS [UserMenu.SEC_MODULE_ID], " & vbCrLf &
                "            T.MenuType AS [UserMenu.MENU_TYPE], " & vbCrLf &
                "            T.[Order] AS UserMenu_ORDER, " & vbCrLf &
                "            T.UserMenuTabID AS [UserMenu.SEC_USER_MENU_TAB_ID], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserMenus AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserMenuTab.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView25() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserMenuTab" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserMenuTab](T1.[UserMenuTab.SEC_USER_MENU_TAB_ID], T1.[UserMenuTab.TAB_NAME], T1.UserMenuTab_ORDER, T1.[UserMenuTab.SEC_USER_ID], T1.[UserMenuTab.SMALL_ICONS])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [UserMenuTab.SEC_USER_MENU_TAB_ID], " & vbCrLf &
                "            T.Name AS [UserMenuTab.TAB_NAME], " & vbCrLf &
                "            T.[Order] AS UserMenuTab_ORDER, " & vbCrLf &
                "            T.UserID AS [UserMenuTab.SEC_USER_ID], " & vbCrLf &
                "            T.HasSmallIcons AS [UserMenuTab.SMALL_ICONS], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserMenuTabs AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserModuleAccess.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView26() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserModuleAccess" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserModuleAccess](T1.[UserModuleAccess.SEC_USER_MODACCESS_ID], T1.[UserModuleAccess.SEC_USER_ID], T1.[UserModuleAccess.SEC_MODULE_ID], T1.[UserModuleAccess.IS_BLOCKED], T1.[UserModuleAccess.CAN_PRINT], T1.[UserModuleAccess.CAN_UPDATE], T1.[UserModuleAccess.CAN_ADD], T1.UserModuleAccess_CUSTOM1, T1.UserModuleAccess_CUSTOM2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [UserModuleAccess.SEC_USER_MODACCESS_ID], " & vbCrLf &
                "            T.UserID AS [UserModuleAccess.SEC_USER_ID], " & vbCrLf &
                "            T.ModuleID AS [UserModuleAccess.SEC_MODULE_ID], " & vbCrLf &
                "            T.IsBlocked AS [UserModuleAccess.IS_BLOCKED], " & vbCrLf &
                "            T.CanPrint AS [UserModuleAccess.CAN_PRINT], " & vbCrLf &
                "            T.CanUpdate AS [UserModuleAccess.CAN_UPDATE], " & vbCrLf &
                "            T.CanAdd AS [UserModuleAccess.CAN_ADD], " & vbCrLf &
                "            T.Custom1 AS UserModuleAccess_CUSTOM1, " & vbCrLf &
                "            T.Custom2 AS UserModuleAccess_CUSTOM2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserModuleAccesses AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserSetting.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView27() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserSetting" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserSetting](T1.[UserSetting.SEC_USER_ID], T1.[UserSetting.SETTING_CODE], T1.[UserSetting.SEC_USER_SETTING_ID], T1.[UserSetting.STRING_VALUE], T1.[UserSetting.NUMERIC_VALUE], T1.[UserSetting.DATE_VALUE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.UserID AS [UserSetting.SEC_USER_ID], " & vbCrLf &
                "            T.SettingCode AS [UserSetting.SETTING_CODE], " & vbCrLf &
                "            T.ID AS [UserSetting.SEC_USER_SETTING_ID], " & vbCrLf &
                "            T.StringValue AS [UserSetting.STRING_VALUE], " & vbCrLf &
                "            T.NumericValue AS [UserSetting.NUMERIC_VALUE], " & vbCrLf &
                "            T.DateValue AS [UserSetting.DATE_VALUE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserSettings AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserUserDefinedReportAccess.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView28() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserUserDefinedReportAccess" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserUserDefinedReportAccess](T1.[UserUserDefinedReportAccess.SEC_USER_UDRACCESS_ID], T1.[UserUserDefinedReportAccess.SEC_USER_ID], T1.[UserUserDefinedReportAccess.USER_DEF_REPORT_ID], T1.[UserUserDefinedReportAccess.IS_BLOCKED])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [UserUserDefinedReportAccess.SEC_USER_UDRACCESS_ID], " & vbCrLf &
                "            T.UserID AS [UserUserDefinedReportAccess.SEC_USER_ID], " & vbCrLf &
                "            T.UserDefinedReportID AS [UserUserDefinedReportAccess.USER_DEF_REPORT_ID], " & vbCrLf &
                "            T.IsBlocked AS [UserUserDefinedReportAccess.IS_BLOCKED], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserUserDefinedReportAccesses AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.WorkspaceTemplate.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView29() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing WorkspaceTemplate" & vbCrLf &
                "        [CodeFirstDatabaseSchema.WorkspaceTemplate](T1.[WorkspaceTemplate.TEMPLATE_ID], T1.[WorkspaceTemplate.CREATED_BY_ID], T1.WorkspaceTemplate_NAME, T1.WorkspaceTemplate_DESCRIPTION, T1.[WorkspaceTemplate.CREATE_DATE], T1.WorkspaceTemplate_CP)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [WorkspaceTemplate.TEMPLATE_ID], " & vbCrLf &
                "            T.CreatedByUserID AS [WorkspaceTemplate.CREATED_BY_ID], " & vbCrLf &
                "            T.Name AS WorkspaceTemplate_NAME, " & vbCrLf &
                "            T.Description AS WorkspaceTemplate_DESCRIPTION, " & vbCrLf &
                "            T.CreatedDate AS [WorkspaceTemplate.CREATE_DATE], " & vbCrLf &
                "            T.IsClientPortal AS WorkspaceTemplate_CP, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.WorkspaceTemplates AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.WorkspaceTemplateDetail.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView30() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing WorkspaceTemplateDetail" & vbCrLf &
                "        [CodeFirstDatabaseSchema.WorkspaceTemplateDetail](T1.[WorkspaceTemplateDetail.WORKSPACE_ID], T1.[WorkspaceTemplateDetail.TEMPLATE_ID], T1.WorkspaceTemplateDetail_NAME, T1.WorkspaceTemplateDetail_DESCRIPTION, T1.[WorkspaceTemplateDetail.SORT_ORDER], T1.WorkspaceTemplateDetail_CP)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [WorkspaceTemplateDetail.WORKSPACE_ID], " & vbCrLf &
                "            T.WorkspaceTemplateID AS [WorkspaceTemplateDetail.TEMPLATE_ID], " & vbCrLf &
                "            T.Name AS WorkspaceTemplateDetail_NAME, " & vbCrLf &
                "            T.Description AS WorkspaceTemplateDetail_DESCRIPTION, " & vbCrLf &
                "            T.SortOrder AS [WorkspaceTemplateDetail.SORT_ORDER], " & vbCrLf &
                "            T.IsClientPortal AS WorkspaceTemplateDetail_CP, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.WorkspaceTemplateDetails AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.WorkspaceTemplateItem.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView31() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing WorkspaceTemplateItem" & vbCrLf &
                "        [CodeFirstDatabaseSchema.WorkspaceTemplateItem](T1.WorkspaceTemplateItem_ID, T1.[WorkspaceTemplateItem.WORKSPACE_ID], T1.[WorkspaceTemplateItem.DESKTOP_OBJECT_ID], T1.[WorkspaceTemplateItem.ZONE_ID], T1.WorkspaceTemplateItem_HEIGHT, T1.WorkspaceTemplateItem_WIDTH, T1.[WorkspaceTemplateItem.TOP_COORD], T1.[WorkspaceTemplateItem.LEFT_COORD], T1.[WorkspaceTemplateItem.SORT_ORDER])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS WorkspaceTemplateItem_ID, " & vbCrLf &
                "            T.WorkspaceTemplateDetailID AS [WorkspaceTemplateItem.WORKSPACE_ID], " & vbCrLf &
                "            T.ModuleID AS [WorkspaceTemplateItem.DESKTOP_OBJECT_ID], " & vbCrLf &
                "            T.ZoneID AS [WorkspaceTemplateItem.ZONE_ID], " & vbCrLf &
                "            T.Height AS WorkspaceTemplateItem_HEIGHT, " & vbCrLf &
                "            T.Width AS WorkspaceTemplateItem_WIDTH, " & vbCrLf &
                "            T.TopCoordinate AS [WorkspaceTemplateItem.TOP_COORD], " & vbCrLf &
                "            T.LeftCoordinate AS [WorkspaceTemplateItem.LEFT_COORD], " & vbCrLf &
                "            T.SortOrder AS [WorkspaceTemplateItem.SORT_ORDER], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.WorkspaceTemplateItems AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ModuleInformation.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView32() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ModuleInformation" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ModuleInformation](T1.[ModuleInformation.SEC_MODULE_INFO_ID], T1.ModuleInformation_IMAGENAME, T1.[ModuleInformation.SORT_ORDER], T1.[ModuleInformation.CUSTOM_PERMISSION], T1.[ModuleInformation.WV_URL], T1.[ModuleInformation.WV_IMAGEPATHACTIVE], T1.[ModuleInformation.WV_IMAGEPATH], T1.[ModuleInformation.PB_APPNAME], T1.[ModuleInformation.PB_MENU], T1.[ModuleInformation.PB_NAME], T1.[ModuleInformation.PB_COMMAND_STRING], T1.[ModuleInformation.PB_ICON], T1.[ModuleInformation.PB_ALLOW_MULTI], T1.[ModuleInformation.WV_DO_NAME], T1.[ModuleInformation.WV_DO_DSIZE], T1.[ModuleInformation.WV_RPT_URL], T1.[ModuleInformation.WV_RPT_IMAGEPATHACTIVE], T1.[ModuleInformation.WV_RPT_IMAGEPATH], T1.[ModuleInformation.WV_RPT_DESCRIPTION], T1.[ModuleInformation.WV_RPT_PREVIEWLOCATION], T1.[ModuleInformation.WV_RPT_LOCKED], T1.[ModuleInformation.WV_IMAGEPATHLARGE], T1.[ModuleInformation.WV_RPT_IMAGEPATHLARGE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [ModuleInformation.SEC_MODULE_INFO_ID], " & vbCrLf &
                "            T.ImageName AS ModuleInformation_IMAGENAME, " & vbCrLf &
                "            T.SortOrder AS [ModuleInformation.SORT_ORDER], " & vbCrLf &
                "            T.HasCustomPermission AS [ModuleInformation.CUSTOM_PERMISSION], " & vbCrLf &
                "            T.WebvantageURL AS [ModuleInformation.WV_URL], " & vbCrLf &
                "            T.WebvantageImagePathActive AS [ModuleInformation.WV_IMAGEPATHACTIVE], " & vbCrLf &
                "            T.WebvantageImagePath AS [ModuleInformation.WV_IMAGEPATH], " & vbCrLf &
                "            T.ApplicationName AS [ModuleInformation.PB_APPNAME], " & vbCrLf &
                "            T.MenuName AS [ModuleInformation.PB_MENU], " & vbCrLf &
                "            T.ApplicationCode AS [ModuleInformation.PB_NAME], " & vbCrLf &
                "            T.CommandString AS [ModuleInformation.PB_COMMAND_STRING], " & vbCrLf &
                "            T.IconIndex AS [ModuleInformation.PB_ICON], " & vbCrLf &
                "            T.AllowMultipleInstances AS [ModuleInformation.PB_ALLOW_MULTI], " & vbCrLf &
                "            T.DesktopObjectName AS [ModuleInformation.WV_DO_NAME], " & vbCrLf &
                "            T.DesktopObjectSize AS [ModuleInformation.WV_DO_DSIZE], " & vbCrLf &
                "            T.ReportURL AS [ModuleInformation.WV_RPT_URL], " & vbCrLf &
                "            T.ReportImagePathActive AS [ModuleInformation.WV_RPT_IMAGEPATHACTIVE], " & vbCrLf &
                "            T.ReportImagePath AS [ModuleInformation.WV_RPT_IMAGEPATH], " & vbCrLf &
                "            T.ReportDescription AS [ModuleInformation.WV_RPT_DESCRIPTION], " & vbCrLf &
                "            T.ReportPreviewLocation AS [ModuleInformation.WV_RPT_PREVIEWLOCATION], " & vbCrLf &
                "            T.ReportIsLocked AS [ModuleInformation.WV_RPT_LOCKED], " & vbCrLf &
                "            T.WebvantageLargeImagePath AS [ModuleInformation.WV_IMAGEPATHLARGE], " & vbCrLf &
                "            T.ReportLargeImagePath AS [ModuleInformation.WV_RPT_IMAGEPATHLARGE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ModuleInformations AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ModuleSub.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView33() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ModuleSub" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ModuleSub](T4.[ModuleSub.SEC_MODULE_SUB_ID], T4.[ModuleSub.PARENT_MODULE_ID], T4.[ModuleSub.SEC_MODULE_ID], T4.[ModuleSub.Module_ID], T4.[ModuleSub.Module_ID1])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT T1.[ModuleSub.SEC_MODULE_SUB_ID], T1.[ModuleSub.PARENT_MODULE_ID], T1.[ModuleSub.SEC_MODULE_ID], T2.[ModuleSub.Module_ID], T3.[ModuleSub.Module_ID1], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, (T3._from2 AND T3._from2 IS NOT NULL) AS _from2" & vbCrLf &
                "        FROM  (" & vbCrLf &
                "            SELECT " & vbCrLf &
                "                T.ID AS [ModuleSub.SEC_MODULE_SUB_ID], " & vbCrLf &
                "                T.ParentModuleID AS [ModuleSub.PARENT_MODULE_ID], " & vbCrLf &
                "                T.ModuleID AS [ModuleSub.SEC_MODULE_ID], " & vbCrLf &
                "                True AS _from0" & vbCrLf &
                "            FROM DbContext.ModuleSubs AS T) AS T1" & vbCrLf &
                "            LEFT OUTER JOIN (" & vbCrLf &
                "            SELECT " & vbCrLf &
                "                Key(T.Module_ParentSubModules_Target).ID AS [ModuleSub.SEC_MODULE_SUB_ID], " & vbCrLf &
                "                Key(T.Module_ParentSubModules_Source).ID AS [ModuleSub.Module_ID], " & vbCrLf &
                "                True AS _from1" & vbCrLf &
                "            FROM DbContext.Module_ParentSubModules AS T) AS T2" & vbCrLf &
                "            ON T1.[ModuleSub.SEC_MODULE_SUB_ID] = T2.[ModuleSub.SEC_MODULE_SUB_ID]" & vbCrLf &
                "            LEFT OUTER JOIN (" & vbCrLf &
                "            SELECT " & vbCrLf &
                "                Key(T.Module_SubModules_Target).ID AS [ModuleSub.SEC_MODULE_SUB_ID], " & vbCrLf &
                "                Key(T.Module_SubModules_Source).ID AS [ModuleSub.Module_ID1], " & vbCrLf &
                "                True AS _from2" & vbCrLf &
                "            FROM DbContext.Module_SubModules AS T) AS T3" & vbCrLf &
                "            ON T1.[ModuleSub.SEC_MODULE_SUB_ID] = T3.[ModuleSub.SEC_MODULE_SUB_ID]" & vbCrLf &
                "    ) AS T4")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ClientPortalUserWorkspace.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView34() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ClientPortalUserWorkspace" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ClientPortalUserWorkspace](T1.[ClientPortalUserWorkspace.WORKSPACE_ID], T1.[ClientPortalUserWorkspace.CDP_CONTACT_ID], T1.ClientPortalUserWorkspace_NAME, T1.ClientPortalUserWorkspace_DESCRIPTION, T1.[ClientPortalUserWorkspace.SORT_ORDER])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [ClientPortalUserWorkspace.WORKSPACE_ID], " & vbCrLf &
                "            T.ClientContactID AS [ClientPortalUserWorkspace.CDP_CONTACT_ID], " & vbCrLf &
                "            T.Name AS ClientPortalUserWorkspace_NAME, " & vbCrLf &
                "            T.Description AS ClientPortalUserWorkspace_DESCRIPTION, " & vbCrLf &
                "            T.SortOrder AS [ClientPortalUserWorkspace.SORT_ORDER], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ClientPortalUserWorkspaces AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ClientPortalWorkspaceObject.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView35() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ClientPortalWorkspaceObject" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ClientPortalWorkspaceObject](T1.ClientPortalWorkspaceObject_ID, T1.[ClientPortalWorkspaceObject.WORKSPACE_ID], T1.[ClientPortalWorkspaceObject.DESKTOP_OBJECT_ID], T1.[ClientPortalWorkspaceObject.ZONE_ID], T1.ClientPortalWorkspaceObject_HEIGHT, T1.ClientPortalWorkspaceObject_WIDTH, T1.[ClientPortalWorkspaceObject.TOP_COORD], T1.[ClientPortalWorkspaceObject.LEFT_COORD], T1.[ClientPortalWorkspaceObject.SORT_ORDER])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS ClientPortalWorkspaceObject_ID, " & vbCrLf &
                "            T.ClientPortalUserWorkspaceID AS [ClientPortalWorkspaceObject.WORKSPACE_ID], " & vbCrLf &
                "            T.DesktopObjectID AS [ClientPortalWorkspaceObject.DESKTOP_OBJECT_ID], " & vbCrLf &
                "            T.ZoneID AS [ClientPortalWorkspaceObject.ZONE_ID], " & vbCrLf &
                "            T.Height AS ClientPortalWorkspaceObject_HEIGHT, " & vbCrLf &
                "            T.Width AS ClientPortalWorkspaceObject_WIDTH, " & vbCrLf &
                "            T.TopCoordinate AS [ClientPortalWorkspaceObject.TOP_COORD], " & vbCrLf &
                "            T.LeftCoordinate AS [ClientPortalWorkspaceObject.LEFT_COORD], " & vbCrLf &
                "            T.SortOrder AS [ClientPortalWorkspaceObject.SORT_ORDER], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ClientPortalWorkspaceObjects AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.Division.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView36() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Division" & vbCrLf &
                "        [CodeFirstDatabaseSchema.Division](T1.[Division.CL_CODE], T1.[Division.DIV_CODE], T1.[Division.DIV_NAME], T1.[Division.ACTIVE_FLAG])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ClientCode AS [Division.CL_CODE], " & vbCrLf &
                "            T.Code AS [Division.DIV_CODE], " & vbCrLf &
                "            T.Name AS [Division.DIV_NAME], " & vbCrLf &
                "            T.IsActive AS [Division.ACTIVE_FLAG], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.SecurityDivisions AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserClientDivisionProductAccess.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView37() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserClientDivisionProductAccess" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserClientDivisionProductAccess](T1.[UserClientDivisionProductAccess.USER_ID], T1.[UserClientDivisionProductAccess.CL_CODE], T1.[UserClientDivisionProductAccess.DIV_CODE], T1.[UserClientDivisionProductAccess.PRD_CODE], T1.[UserClientDivisionProductAccess.TIME_ENTRY])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.UserCode AS [UserClientDivisionProductAccess.USER_ID], " & vbCrLf &
                "            T.ClientCode AS [UserClientDivisionProductAccess.CL_CODE], " & vbCrLf &
                "            T.DivisionCode AS [UserClientDivisionProductAccess.DIV_CODE], " & vbCrLf &
                "            T.ProductCode AS [UserClientDivisionProductAccess.PRD_CODE], " & vbCrLf &
                "            T.AllowTimeEntryOnly AS [UserClientDivisionProductAccess.TIME_ENTRY], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserClientDivisionProductAccesses AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserEmployeeAccess.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView38() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserEmployeeAccess" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserEmployeeAccess](T1.[UserEmployeeAccess.USER_ID], T1.[UserEmployeeAccess.EMP_CODE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.UserCode AS [UserEmployeeAccess.USER_ID], " & vbCrLf &
                "            T.EmployeeCode AS [UserEmployeeAccess.EMP_CODE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserEmployeeAccesses AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserLoginAudit.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView39() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserLoginAudit" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserLoginAudit](T1.[UserLoginAudit.SEC_USER_LOGIN_AUDIT_ID], T1.[UserLoginAudit.USER_CODE], T1.[UserLoginAudit.IP_ADDRESS], T1.[UserLoginAudit.SEC_APPLICATION_ID], T1.[UserLoginAudit.LOGIN_DATETIME], T1.[UserLoginAudit.LOGOUT_DATETIME], T1.UserLoginAudit_SUCCESSFUL, T1.[UserLoginAudit.FAILURE_REASON])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [UserLoginAudit.SEC_USER_LOGIN_AUDIT_ID], " & vbCrLf &
                "            T.UserCode AS [UserLoginAudit.USER_CODE], " & vbCrLf &
                "            T.IPAddress AS [UserLoginAudit.IP_ADDRESS], " & vbCrLf &
                "            T.ApplicationID AS [UserLoginAudit.SEC_APPLICATION_ID], " & vbCrLf &
                "            T.LoginDateTime AS [UserLoginAudit.LOGIN_DATETIME], " & vbCrLf &
                "            T.LogoutDateTime AS [UserLoginAudit.LOGOUT_DATETIME], " & vbCrLf &
                "            T.Successful AS UserLoginAudit_SUCCESSFUL, " & vbCrLf &
                "            T.FailureReason AS [UserLoginAudit.FAILURE_REASON], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserLoginAudits AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.AdassistUsers.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView40() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing AdassistUsers" & vbCrLf &
                "        [AdvantageFramework.Security.Database.AdassistUser](T1.AdassistUser_EmployeeCode, T1.AdassistUser_Password, T1.AdassistUser_UserCode, T1.AdassistUser_CreatedDate, T1.AdassistUser_IsInactive) WITH " & vbCrLf &
                "        RELATIONSHIP(CREATEREF(DbContext.SecurityEmployees, ROW(T1.[AdassistUser_Employee.AdassistUser_Employee_Target.Code]),[AdvantageFramework.Security.Database.Employee]),[AdvantageFramework.Security.Database.AdassistUser_Employee],AdassistUser_Employee_Source,AdassistUser_Employee_Target) " & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ACCT_EXEC AS AdassistUser_EmployeeCode, " & vbCrLf &
                "            T.PASSWORD_ID AS AdassistUser_Password, " & vbCrLf &
                "            T.USER_ID AS AdassistUser_UserCode, " & vbCrLf &
                "            T.DATE_CREATED AS AdassistUser_CreatedDate, " & vbCrLf &
                "            T.INACTIVE AS AdassistUser_IsInactive, " & vbCrLf &
                "            True AS _from0, " & vbCrLf &
                "            T.Employee_Code AS [AdassistUser_Employee.AdassistUser_Employee_Target.Code]" & vbCrLf &
                "        FROM CodeFirstDatabase.AdassistUser AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.AdassistUser_Employee.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView41() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing AdassistUser_Employee" & vbCrLf &
                "        [AdvantageFramework.Security.Database.AdassistUser_Employee](T3.[AdassistUser_Employee.AdassistUser_Employee_Source], T3.[AdassistUser_Employee.AdassistUser_Employee_Target])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT -- Constructing AdassistUser_Employee_Source" & vbCrLf &
                "            CreateRef(DbContext.AdassistUsers, row(T2.[AdassistUser_Employee.AdassistUser_Employee_Source.EmployeeCode]), [AdvantageFramework.Security.Database.AdassistUser]) AS [AdassistUser_Employee.AdassistUser_Employee_Source], " & vbCrLf &
                "            T2.[AdassistUser_Employee.AdassistUser_Employee_Target]" & vbCrLf &
                "        FROM (" & vbCrLf &
                "            SELECT -- Constructing AdassistUser_Employee_Target" & vbCrLf &
                "                T1.[AdassistUser_Employee.AdassistUser_Employee_Source.EmployeeCode], " & vbCrLf &
                "                CreateRef(DbContext.SecurityEmployees, row(T1.[AdassistUser_Employee.AdassistUser_Employee_Target.Code]), [AdvantageFramework.Security.Database.Employee]) AS [AdassistUser_Employee.AdassistUser_Employee_Target]" & vbCrLf &
                "            FROM (" & vbCrLf &
                "                SELECT " & vbCrLf &
                "                    T.ACCT_EXEC AS [AdassistUser_Employee.AdassistUser_Employee_Source.EmployeeCode], " & vbCrLf &
                "                    T.Employee_Code AS [AdassistUser_Employee.AdassistUser_Employee_Target.Code], " & vbCrLf &
                "                    True AS _from0" & vbCrLf &
                "                FROM CodeFirstDatabase.AdassistUser AS T" & vbCrLf &
                "                WHERE T.Employee_Code IS NOT NULL" & vbCrLf &
                "            ) AS T1" & vbCrLf &
                "        ) AS T2" & vbCrLf &
                "    ) AS T3")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.SecurityEmployees.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView42() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing SecurityEmployees" & vbCrLf &
                "        [AdvantageFramework.Security.Database.Employee](T1.Employee_Code, T1.Employee_LastName, T1.Employee_FirstName, T1.Employee_MiddleInitial, T1.Employee_DepartmentCode, T1.Employee_WorkspaceTemplateID, T1.Employee_TerminationDate, T1.Employee_OfficeCode, T1.Employee_IgnoreCalendarSync, T1.Employee_FunctionCode)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.EMP_CODE AS Employee_Code, " & vbCrLf &
                "            T.EMP_LNAME AS Employee_LastName, " & vbCrLf &
                "            T.EMP_FNAME AS Employee_FirstName, " & vbCrLf &
                "            T.EMP_MI AS Employee_MiddleInitial, " & vbCrLf &
                "            T.DP_TM_CODE AS Employee_DepartmentCode, " & vbCrLf &
                "            T.WV_TMPLT_HDR_ID AS Employee_WorkspaceTemplateID, " & vbCrLf &
                "            T.EMP_TERM_DATE AS Employee_TerminationDate, " & vbCrLf &
                "            T.OFFICE_CODE AS Employee_OfficeCode, " & vbCrLf &
                "            T.IGNORE_CALENDAR_SYNC AS Employee_IgnoreCalendarSync, " & vbCrLf &
                "            T.DEF_FNC_CODE AS Employee_FunctionCode, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.Employee AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.SecurityDepartments.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView43() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing SecurityDepartments" & vbCrLf &
                "        [AdvantageFramework.Security.Database.Department](T1.Department_Code, T1.Department_Description, T1.Department_IsInactive, T1.Department_DirectHoursPercentGoal, T1.Department_Category, T1.Department_PurchaseOrderApprovalRuleCode, T1.Department_ServiceFeeTypeCode)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.DP_TM_CODE AS Department_Code, " & vbCrLf &
                "            T.DP_TM_DESC AS Department_Description, " & vbCrLf &
                "            T.INACTIVE_FLAG AS Department_IsInactive, " & vbCrLf &
                "            T.DIRECT_HRS_PER_GOAL AS Department_DirectHoursPercentGoal, " & vbCrLf &
                "            T.CATEGORY AS Department_Category, " & vbCrLf &
                "            T.PO_APPR_RULE_CODE AS Department_PurchaseOrderApprovalRuleCode, " & vbCrLf &
                "            T.SERVICE_FEE_TYPE_CODE AS Department_ServiceFeeTypeCode, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.Department AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.SecurityOffices.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView44() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing SecurityOffices" & vbCrLf &
                "        [AdvantageFramework.Security.Database.Office](T1.Office_Code, T1.Office_Name, T1.Office_IsInactive)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.OFFICE_CODE AS Office_Code, " & vbCrLf &
                "            T.OFFICE_NAME AS Office_Name, " & vbCrLf &
                "            T.INACTIVE_FLAG AS Office_IsInactive, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.Office AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.SecurityProducts.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView45() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing SecurityProducts" & vbCrLf &
                "        [AdvantageFramework.Security.Database.Product](T1.Product_ClientCode, T1.Product_DivisionCode, T1.Product_Code, T1.Product_Name, T1.Product_OfficeCode, T1.Product_IsActive, T1.Product_CDPSecurityGroupID)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.CL_CODE AS Product_ClientCode, " & vbCrLf &
                "            T.DIV_CODE AS Product_DivisionCode, " & vbCrLf &
                "            T.PRD_CODE AS Product_Code, " & vbCrLf &
                "            T.PRD_DESCRIPTION AS Product_Name, " & vbCrLf &
                "            T.OFFICE_CODE AS Product_OfficeCode, " & vbCrLf &
                "            T.ACTIVE_FLAG AS Product_IsActive, " & vbCrLf &
                "            T.CDP_GROUP_ID AS Product_CDPSecurityGroupID, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.Product AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.CDPSecurityGroups.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView46() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing CDPSecurityGroups" & vbCrLf &
                "        [AdvantageFramework.Security.Database.CDPSecurityGroup](T1.CDPSecurityGroup_ID, T1.CDPSecurityGroup_Name)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.CDP_GROUP_ID AS CDPSecurityGroup_ID, " & vbCrLf &
                "            T.NAME AS CDPSecurityGroup_Name, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.CDPSecurityGroup AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.CDPSecurityGroupEmployees.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView47() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing CDPSecurityGroupEmployees" & vbCrLf &
                "        [AdvantageFramework.Security.Database.CDPSecurityGroupEmployee](T1.CDPSecurityGroupEmployee_ID, T1.CDPSecurityGroupEmployee_CDPSecurityGroupID, T1.CDPSecurityGroupEmployee_EmployeeCode)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.CDP_GROUP_EMPLOYEE_ID AS CDPSecurityGroupEmployee_ID, " & vbCrLf &
                "            T.CDP_GROUP_ID AS CDPSecurityGroupEmployee_CDPSecurityGroupID, " & vbCrLf &
                "            T.EMP_CODE AS CDPSecurityGroupEmployee_EmployeeCode, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.CDPSecurityGroupEmployee AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.SecurityClients.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView48() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing SecurityClients" & vbCrLf &
                "        [AdvantageFramework.Security.Database.Client](T1.Client_Code, T1.Client_Name, T1.Client_IsActive, T1.Client_RequireTimeComment)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.CL_CODE AS Client_Code, " & vbCrLf &
                "            T.CL_NAME AS Client_Name, " & vbCrLf &
                "            T.ACTIVE_FLAG AS Client_IsActive, " & vbCrLf &
                "            T.REQ_TIME_COMMENT AS Client_RequireTimeComment, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.Client AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.SecurityClientContacts.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView49() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing SecurityClientContacts" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ClientContact](T1.ClientContact_ContactID, T1.ClientContact_ContactCode, T1.ClientContact_ClientCode, T1.ClientContact_EmailAddress, T1.ClientContact_FirstName, T1.ClientContact_LastName, T1.ClientContact_MiddleInitial, T1.ClientContact_Title, T1.ClientContact_Address, T1.ClientContact_Address2, T1.ClientContact_City, T1.ClientContact_County, T1.ClientContact_State, T1.ClientContact_Country, T1.ClientContact_Zip, T1.ClientContact_PhoneNumber, T1.ClientContact_PhoneNumberExtention, T1.ClientContact_FaxNumber, T1.ClientContact_FaxNumberExtention, T1.ClientContact_ScheduleUser, T1.ClientContact_DefaultTaskCode, T1.ClientContact_RecievesAlerts, T1.ClientContact_IsEmailRecipient, T1.ClientContact_IsPrimaryTask, T1.ClientContact_IsInactive, T1.ClientContact_CellPhoneNumber, T1.ClientContact_Comments, T1.ClientContact_IsClientPortalUser, T1.ClientContact_ContactTypeID, T1.ClientContact_FullNameLF, T1.ClientContact_FullNameFML)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.CDP_CONTACT_ID AS ClientContact_ContactID, " & vbCrLf &
                "            T.CONT_CODE AS ClientContact_ContactCode, " & vbCrLf &
                "            T.CL_CODE AS ClientContact_ClientCode, " & vbCrLf &
                "            T.EMAIL_ADDRESS AS ClientContact_EmailAddress, " & vbCrLf &
                "            T.CONT_FNAME AS ClientContact_FirstName, " & vbCrLf &
                "            T.CONT_LNAME AS ClientContact_LastName, " & vbCrLf &
                "            T.CONT_MI AS ClientContact_MiddleInitial, " & vbCrLf &
                "            T.CONT_TITLE AS ClientContact_Title, " & vbCrLf &
                "            T.CONT_ADDRESS1 AS ClientContact_Address, " & vbCrLf &
                "            T.CONT_ADDRESS2 AS ClientContact_Address2, " & vbCrLf &
                "            T.CONT_CITY AS ClientContact_City, " & vbCrLf &
                "            T.CONT_COUNTY AS ClientContact_County, " & vbCrLf &
                "            T.CONT_STATE AS ClientContact_State, " & vbCrLf &
                "            T.CONT_COUNTRY AS ClientContact_Country, " & vbCrLf &
                "            T.CONT_ZIP AS ClientContact_Zip, " & vbCrLf &
                "            T.CONT_TELEPHONE AS ClientContact_PhoneNumber, " & vbCrLf &
                "            T.CONT_EXTENTION AS ClientContact_PhoneNumberExtention, " & vbCrLf &
                "            T.CONT_FAX AS ClientContact_FaxNumber, " & vbCrLf &
                "            T.CONT_FAX_EXTENTION AS ClientContact_FaxNumberExtention, " & vbCrLf &
                "            T.SCHEDULE_USER AS ClientContact_ScheduleUser, " & vbCrLf &
                "            T.DEFAULT_TASK AS ClientContact_DefaultTaskCode, " & vbCrLf &
                "            T.CP_ALERTS AS ClientContact_RecievesAlerts, " & vbCrLf &
                "            T.EMAIL_RCPT AS ClientContact_IsEmailRecipient, " & vbCrLf &
                "            T.TASK_PRIMARY AS ClientContact_IsPrimaryTask, " & vbCrLf &
                "            T.INACTIVE_FLAG AS ClientContact_IsInactive, " & vbCrLf &
                "            T.CELL_PHONE AS ClientContact_CellPhoneNumber, " & vbCrLf &
                "            T.CONT_COMMENT AS ClientContact_Comments, " & vbCrLf &
                "            T.CP_USER AS ClientContact_IsClientPortalUser, " & vbCrLf &
                "            T.CONTACT_TYPE_ID AS ClientContact_ContactTypeID, " & vbCrLf &
                "            T.CONT_LF AS ClientContact_FullNameLF, " & vbCrLf &
                "            T.CONT_FML AS ClientContact_FullNameFML, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ClientContact AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.SecurityClientContactDetails.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView50() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing SecurityClientContactDetails" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ClientContactDetail](T1.ClientContactDetail_ContactID, T1.ClientContactDetail_SequenceNumber, T1.ClientContactDetail_DivisionCode, T1.ClientContactDetail_ProductCode)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.CDP_CONTACT_ID AS ClientContactDetail_ContactID, " & vbCrLf &
                "            T.SEQ_NBR AS ClientContactDetail_SequenceNumber, " & vbCrLf &
                "            T.DIV_CODE AS ClientContactDetail_DivisionCode, " & vbCrLf &
                "            T.PRD_CODE AS ClientContactDetail_ProductCode, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ClientContactDetail AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ClientPortalUsers.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView51() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ClientPortalUsers" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ClientPortalUser](T1.ClientPortalUser_ID, T1.ClientPortalUser_UserName, T1.ClientPortalUser_LoweredUserName, T1.ClientPortalUser_FullName, T1.ClientPortalUser_Password, T1.ClientPortalUser_LastLoginDate, T1.ClientPortalUser_CreatedByUserCode, T1.ClientPortalUser_CreatedDate, T1.ClientPortalUser_IsLocked, T1.ClientPortalUser_EmailAddress, T1.ClientPortalUser_LoginsAttempted, T1.ClientPortalUser_UnlockedDate, T1.ClientPortalUser_MustChangePassword, T1.ClientPortalUser_Theme, T1.ClientPortalUser_ClientContactID, T1.ClientPortalUser_DesktopTemplate, T1.ClientPortalUser_WebID, T1.ClientPortalUser_IsAdminUser, T1.ClientPortalUser_ClientCode, T1.ClientPortalUser_AlertGroupCode, T1.ClientPortalUser_AgencyContactEmployeeCode, T1.ClientPortalUser_TimeZoneID, T1.ClientPortalUser_ConceptShareUserID, T1.ClientPortalUser_ConceptSharePassword)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.USER_GUID AS ClientPortalUser_ID, " & vbCrLf &
                "            T.USER_NAME AS ClientPortalUser_UserName, " & vbCrLf &
                "            T.LOWERED_USER_NAME AS ClientPortalUser_LoweredUserName, " & vbCrLf &
                "            T.FULL_NAME AS ClientPortalUser_FullName, " & vbCrLf &
                "            T.PASSWORD_HASH AS ClientPortalUser_Password, " & vbCrLf &
                "            T.LAST_LOGON AS ClientPortalUser_LastLoginDate, " & vbCrLf &
                "            T.CREATED_BY AS ClientPortalUser_CreatedByUserCode, " & vbCrLf &
                "            T.CREATED_TIMESTAMP AS ClientPortalUser_CreatedDate, " & vbCrLf &
                "            T.IS_LOCKED AS ClientPortalUser_IsLocked, " & vbCrLf &
                "            T.EMAIL_ADDRESS AS ClientPortalUser_EmailAddress, " & vbCrLf &
                "            T.LOGIN_TRY_COUNT AS ClientPortalUser_LoginsAttempted, " & vbCrLf &
                "            T.UNLOCK_TIME AS ClientPortalUser_UnlockedDate, " & vbCrLf &
                "            T.MUST_CHANGE_PASSORD AS ClientPortalUser_MustChangePassword, " & vbCrLf &
                "            T.THEME AS ClientPortalUser_Theme, " & vbCrLf &
                "            T.CDP_CONTACT_ID AS ClientPortalUser_ClientContactID, " & vbCrLf &
                "            T.DESKTOP_TEMPLATE AS ClientPortalUser_DesktopTemplate, " & vbCrLf &
                "            T.WEB_ID AS ClientPortalUser_WebID, " & vbCrLf &
                "            T.ADMIN_USER AS ClientPortalUser_IsAdminUser, " & vbCrLf &
                "            T.CL_CODE AS ClientPortalUser_ClientCode, " & vbCrLf &
                "            T.ALERT_GROUP_CODE AS ClientPortalUser_AlertGroupCode, " & vbCrLf &
                "            T.AGENCY_CONTACT_CODE AS ClientPortalUser_AgencyContactEmployeeCode, " & vbCrLf &
                "            T.TIME_ZONE_ID AS ClientPortalUser_TimeZoneID, " & vbCrLf &
                "            T.CS_USERID AS ClientPortalUser_ConceptShareUserID, " & vbCrLf &
                "            T.CS_PASSWORD AS ClientPortalUser_ConceptSharePassword, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ClientPortalUser AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ClientPortalUserApplicationAccesses.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView52() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ClientPortalUserApplicationAccesses" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ClientPortalUserApplicationAccess](T1.ClientPortalUserApplicationAccess_ID, T1.ClientPortalUserApplicationAccess_ClientPortalUserID, T1.ClientPortalUserApplicationAccess_ApplicationID, T1.ClientPortalUserApplicationAccess_IsBlocked, T1.ClientPortalUserApplicationAccess_CanPrint, T1.ClientPortalUserApplicationAccess_CanUpdate, T1.ClientPortalUserApplicationAccess_CanAdd, T1.ClientPortalUserApplicationAccess_Custom1, T1.ClientPortalUserApplicationAccess_Custom2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_CPUSER_APPACCESS_ID AS ClientPortalUserApplicationAccess_ID, " & vbCrLf &
                "            T.CPUSER_GUID AS ClientPortalUserApplicationAccess_ClientPortalUserID, " & vbCrLf &
                "            T.SEC_APPLICATION_ID AS ClientPortalUserApplicationAccess_ApplicationID, " & vbCrLf &
                "            T.IS_BLOCKED AS ClientPortalUserApplicationAccess_IsBlocked, " & vbCrLf &
                "            T.CAN_PRINT AS ClientPortalUserApplicationAccess_CanPrint, " & vbCrLf &
                "            T.CAN_UPDATE AS ClientPortalUserApplicationAccess_CanUpdate, " & vbCrLf &
                "            T.CAN_ADD AS ClientPortalUserApplicationAccess_CanAdd, " & vbCrLf &
                "            T.CUSTOM1 AS ClientPortalUserApplicationAccess_Custom1, " & vbCrLf &
                "            T.CUSTOM2 AS ClientPortalUserApplicationAccess_Custom2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ClientPortalUserApplicationAccess AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.Applications.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView53() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Applications" & vbCrLf &
                "        [AdvantageFramework.Security.Database.Application](T1.Application_ID, T1.Application_Description, T1.Application_Name)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_APPLICATION_ID AS Application_ID, " & vbCrLf &
                "            T.DESCRIPTION AS Application_Description, " & vbCrLf &
                "            T.NAME AS Application_Name, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.Application AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ApplicationModules.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView54() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ApplicationModules" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ApplicationModule](T1.ApplicationModule_ID, T1.ApplicationModule_ApplicationID, T1.ApplicationModule_ModuleID)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_APPLICATION_MOD_ID AS ApplicationModule_ID, " & vbCrLf &
                "            T.SEC_APPLICATION_ID AS ApplicationModule_ApplicationID, " & vbCrLf &
                "            T.SEC_MODULE_ID AS ApplicationModule_ModuleID, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ApplicationModule AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.Modules.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView55() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Modules" & vbCrLf &
                "        [AdvantageFramework.Security.Database.Module](T1.Module_ID, T1.Module_Description, T1.Module_IsInactive, T1.Module_IsMenuItem, T1.Module_IsCategory, T1.Module_IsApplication, T1.Module_IsReport, T1.Module_IsDesktopObject, T1.Module_IsDashQuery, T1.Module_ModuleInformationID, T1.Module_Code)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_MODULE_ID AS Module_ID, " & vbCrLf &
                "            T.DESCRIPTION AS Module_Description, " & vbCrLf &
                "            T.IS_INACTIVE AS Module_IsInactive, " & vbCrLf &
                "            T.IS_MENU_ITEM AS Module_IsMenuItem, " & vbCrLf &
                "            T.IS_CATEGORY AS Module_IsCategory, " & vbCrLf &
                "            T.IS_APPLICATION AS Module_IsApplication, " & vbCrLf &
                "            T.IS_REPORT AS Module_IsReport, " & vbCrLf &
                "            T.IS_DESKTOP_OBJECT AS Module_IsDesktopObject, " & vbCrLf &
                "            T.IS_DASH_QUERY AS Module_IsDashQuery, " & vbCrLf &
                "            T.SEC_MODULE_INFO_ID AS Module_ModuleInformationID, " & vbCrLf &
                "            T.SEC_MODULE_CODE AS Module_Code, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.Module AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ClientPortalUserModuleAccesses.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView56() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ClientPortalUserModuleAccesses" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ClientPortalUserModuleAccess](T1.ClientPortalUserModuleAccess_ID, T1.ClientPortalUserModuleAccess_ClientPortalUserID, T1.ClientPortalUserModuleAccess_ModuleID, T1.ClientPortalUserModuleAccess_IsBlocked, T1.ClientPortalUserModuleAccess_CanPrint, T1.ClientPortalUserModuleAccess_CanUpdate, T1.ClientPortalUserModuleAccess_CanAdd, T1.ClientPortalUserModuleAccess_Custom1, T1.ClientPortalUserModuleAccess_Custom2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_CPUSER_MODACCESS_ID AS ClientPortalUserModuleAccess_ID, " & vbCrLf &
                "            T.CPUSER_GUID AS ClientPortalUserModuleAccess_ClientPortalUserID, " & vbCrLf &
                "            T.SEC_MODULE_ID AS ClientPortalUserModuleAccess_ModuleID, " & vbCrLf &
                "            T.IS_BLOCKED AS ClientPortalUserModuleAccess_IsBlocked, " & vbCrLf &
                "            T.CAN_PRINT AS ClientPortalUserModuleAccess_CanPrint, " & vbCrLf &
                "            T.CAN_UPDATE AS ClientPortalUserModuleAccess_CanUpdate, " & vbCrLf &
                "            T.CAN_ADD AS ClientPortalUserModuleAccess_CanAdd, " & vbCrLf &
                "            T.CUSTOM1 AS ClientPortalUserModuleAccess_Custom1, " & vbCrLf &
                "            T.CUSTOM2 AS ClientPortalUserModuleAccess_Custom2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ClientPortalUserModuleAccess AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.GroupModuleAccesses.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView57() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupModuleAccesses" & vbCrLf &
                "        [AdvantageFramework.Security.Database.GroupModuleAccess](T1.GroupModuleAccess_ID, T1.GroupModuleAccess_GroupID, T1.GroupModuleAccess_ModuleID, T1.GroupModuleAccess_IsBlocked, T1.GroupModuleAccess_CanPrint, T1.GroupModuleAccess_CanUpdate, T1.GroupModuleAccess_CanAdd, T1.GroupModuleAccess_Custom1, T1.GroupModuleAccess_Custom2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_GROUP_MODACCESS_ID AS GroupModuleAccess_ID, " & vbCrLf &
                "            T.SEC_GROUP_ID AS GroupModuleAccess_GroupID, " & vbCrLf &
                "            T.SEC_MODULE_ID AS GroupModuleAccess_ModuleID, " & vbCrLf &
                "            T.IS_BLOCKED AS GroupModuleAccess_IsBlocked, " & vbCrLf &
                "            T.CAN_PRINT AS GroupModuleAccess_CanPrint, " & vbCrLf &
                "            T.CAN_UPDATE AS GroupModuleAccess_CanUpdate, " & vbCrLf &
                "            T.CAN_ADD AS GroupModuleAccess_CanAdd, " & vbCrLf &
                "            T.CUSTOM1 AS GroupModuleAccess_Custom1, " & vbCrLf &
                "            T.CUSTOM2 AS GroupModuleAccess_Custom2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.GroupModuleAccess AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.Groups.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView58() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Groups" & vbCrLf &
                "        [AdvantageFramework.Security.Database.Group](T1.Group_ID, T1.Group_Description, T1.Group_Name)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_GROUP_ID AS Group_ID, " & vbCrLf &
                "            T.DESCRIPTION AS Group_Description, " & vbCrLf &
                "            T.NAME AS Group_Name, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.[Group] AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.GroupApplicationAccesses.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView59() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupApplicationAccesses" & vbCrLf &
                "        [AdvantageFramework.Security.Database.GroupApplicationAccess](T1.GroupApplicationAccess_ID, T1.GroupApplicationAccess_GroupID, T1.GroupApplicationAccess_ApplicationID, T1.GroupApplicationAccess_IsBlocked, T1.GroupApplicationAccess_CanPrint, T1.GroupApplicationAccess_CanUpdate, T1.GroupApplicationAccess_CanAdd, T1.GroupApplicationAccess_Custom1, T1.GroupApplicationAccess_Custom2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_GROUP_APPACCESS_ID AS GroupApplicationAccess_ID, " & vbCrLf &
                "            T.SEC_GROUP_ID AS GroupApplicationAccess_GroupID, " & vbCrLf &
                "            T.SEC_APPLICATION_ID AS GroupApplicationAccess_ApplicationID, " & vbCrLf &
                "            T.IS_BLOCKED AS GroupApplicationAccess_IsBlocked, " & vbCrLf &
                "            T.CAN_PRINT AS GroupApplicationAccess_CanPrint, " & vbCrLf &
                "            T.CAN_UPDATE AS GroupApplicationAccess_CanUpdate, " & vbCrLf &
                "            T.CAN_ADD AS GroupApplicationAccess_CanAdd, " & vbCrLf &
                "            T.CUSTOM1 AS GroupApplicationAccess_Custom1, " & vbCrLf &
                "            T.CUSTOM2 AS GroupApplicationAccess_Custom2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.GroupApplicationAccess AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.GroupSettings.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView60() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupSettings" & vbCrLf &
                "        [AdvantageFramework.Security.Database.GroupSetting](T1.GroupSetting_GroupID, T1.GroupSetting_SettingCode, T1.GroupSetting_ID, T1.GroupSetting_StringValue, T1.GroupSetting_NumericValue, T1.GroupSetting_DateValue)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_GROUP_ID AS GroupSetting_GroupID, " & vbCrLf &
                "            T.SETTING_CODE AS GroupSetting_SettingCode, " & vbCrLf &
                "            T.SEC_GROUP_SETTING_ID AS GroupSetting_ID, " & vbCrLf &
                "            T.STRING_VALUE AS GroupSetting_StringValue, " & vbCrLf &
                "            T.NUMERIC_VALUE AS GroupSetting_NumericValue, " & vbCrLf &
                "            T.DATE_VALUE AS GroupSetting_DateValue, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.GroupSetting AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.GroupUserDefinedReportAccesses.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView61() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupUserDefinedReportAccesses" & vbCrLf &
                "        [AdvantageFramework.Security.Database.GroupUserDefinedReportAccess](T1.GroupUserDefinedReportAccess_ID, T1.GroupUserDefinedReportAccess_GroupID, T1.GroupUserDefinedReportAccess_UserDefinedReportID, T1.GroupUserDefinedReportAccess_IsBlocked)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_GROUP_UDRACCESS_ID AS GroupUserDefinedReportAccess_ID, " & vbCrLf &
                "            T.SEC_GROUP_ID AS GroupUserDefinedReportAccess_GroupID, " & vbCrLf &
                "            T.USER_DEF_REPORT_ID AS GroupUserDefinedReportAccess_UserDefinedReportID, " & vbCrLf &
                "            T.IS_BLOCKED AS GroupUserDefinedReportAccess_IsBlocked, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.GroupUserDefinedReportAccess AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.GroupUsers.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView62() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupUsers" & vbCrLf &
                "        [AdvantageFramework.Security.Database.GroupUser](T1.GroupUser_ID, T1.GroupUser_GroupID, T1.GroupUser_UserID)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_GROUPUSER_ID AS GroupUser_ID, " & vbCrLf &
                "            T.SEC_GROUP_ID AS GroupUser_GroupID, " & vbCrLf &
                "            T.SEC_USER_ID AS GroupUser_UserID, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.GroupUser AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.Users.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView63() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Users" & vbCrLf &
                "        [AdvantageFramework.Security.Database.User](T1.User_ID, T1.User_UserCode, T1.User_EmployeeCode, T1.User_UserName, T1.User_CheckForUserAccess, T1.User_TimeHWND, T1.User_MenuHWND, T1.User_WebID, T1.User_IsInactive, T1.User_Password, T1.User_SID)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_USER_ID AS User_ID, " & vbCrLf &
                "            T.USER_CODE AS User_UserCode, " & vbCrLf &
                "            T.EMP_CODE AS User_EmployeeCode, " & vbCrLf &
                "            T.USER_NAME AS User_UserName, " & vbCrLf &
                "            T.CHECK_USER_ACCESS AS User_CheckForUserAccess, " & vbCrLf &
                "            T.TIME_HWND AS User_TimeHWND, " & vbCrLf &
                "            T.MENU_HWND AS User_MenuHWND, " & vbCrLf &
                "            T.WEB_ID AS User_WebID, " & vbCrLf &
                "            T.IS_INACTIVE AS User_IsInactive, " & vbCrLf &
                "            T.PASSWORD AS User_Password, " & vbCrLf &
                "            T.SID AS User_SID, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.User AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserApplicationAccesses.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView64() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserApplicationAccesses" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserApplicationAccess](T1.UserApplicationAccess_ID, T1.UserApplicationAccess_UserID, T1.UserApplicationAccess_ApplicationID, T1.UserApplicationAccess_IsBlocked, T1.UserApplicationAccess_CanPrint, T1.UserApplicationAccess_CanUpdate, T1.UserApplicationAccess_CanAdd, T1.UserApplicationAccess_Custom1, T1.UserApplicationAccess_Custom2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_USER_APPACCESS_ID AS UserApplicationAccess_ID, " & vbCrLf &
                "            T.SEC_USER_ID AS UserApplicationAccess_UserID, " & vbCrLf &
                "            T.SEC_APPLICATION_ID AS UserApplicationAccess_ApplicationID, " & vbCrLf &
                "            T.IS_BLOCKED AS UserApplicationAccess_IsBlocked, " & vbCrLf &
                "            T.CAN_PRINT AS UserApplicationAccess_CanPrint, " & vbCrLf &
                "            T.CAN_UPDATE AS UserApplicationAccess_CanUpdate, " & vbCrLf &
                "            T.CAN_ADD AS UserApplicationAccess_CanAdd, " & vbCrLf &
                "            T.CUSTOM1 AS UserApplicationAccess_Custom1, " & vbCrLf &
                "            T.CUSTOM2 AS UserApplicationAccess_Custom2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserApplicationAccess AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserMenus.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView65() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserMenus" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserMenu](T1.UserMenu_ID, T1.UserMenu_UserID, T1.UserMenu_ModuleID, T1.UserMenu_MenuType, T1.UserMenu_Order, T1.UserMenu_UserMenuTabID)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_USER_MENU_ID AS UserMenu_ID, " & vbCrLf &
                "            T.SEC_USER_ID AS UserMenu_UserID, " & vbCrLf &
                "            T.SEC_MODULE_ID AS UserMenu_ModuleID, " & vbCrLf &
                "            T.MENU_TYPE AS UserMenu_MenuType, " & vbCrLf &
                "            T.[ORDER] AS UserMenu_Order, " & vbCrLf &
                "            T.SEC_USER_MENU_TAB_ID AS UserMenu_UserMenuTabID, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserMenu AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserMenuTabs.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView66() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserMenuTabs" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserMenuTab](T1.UserMenuTab_ID, T1.UserMenuTab_Name, T1.UserMenuTab_Order, T1.UserMenuTab_UserID, T1.UserMenuTab_HasSmallIcons)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_USER_MENU_TAB_ID AS UserMenuTab_ID, " & vbCrLf &
                "            T.TAB_NAME AS UserMenuTab_Name, " & vbCrLf &
                "            T.[ORDER] AS UserMenuTab_Order, " & vbCrLf &
                "            T.SEC_USER_ID AS UserMenuTab_UserID, " & vbCrLf &
                "            T.SMALL_ICONS AS UserMenuTab_HasSmallIcons, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserMenuTab AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserModuleAccesses.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView67() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserModuleAccesses" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserModuleAccess](T1.UserModuleAccess_ID, T1.UserModuleAccess_UserID, T1.UserModuleAccess_ModuleID, T1.UserModuleAccess_IsBlocked, T1.UserModuleAccess_CanPrint, T1.UserModuleAccess_CanUpdate, T1.UserModuleAccess_CanAdd, T1.UserModuleAccess_Custom1, T1.UserModuleAccess_Custom2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_USER_MODACCESS_ID AS UserModuleAccess_ID, " & vbCrLf &
                "            T.SEC_USER_ID AS UserModuleAccess_UserID, " & vbCrLf &
                "            T.SEC_MODULE_ID AS UserModuleAccess_ModuleID, " & vbCrLf &
                "            T.IS_BLOCKED AS UserModuleAccess_IsBlocked, " & vbCrLf &
                "            T.CAN_PRINT AS UserModuleAccess_CanPrint, " & vbCrLf &
                "            T.CAN_UPDATE AS UserModuleAccess_CanUpdate, " & vbCrLf &
                "            T.CAN_ADD AS UserModuleAccess_CanAdd, " & vbCrLf &
                "            T.CUSTOM1 AS UserModuleAccess_Custom1, " & vbCrLf &
                "            T.CUSTOM2 AS UserModuleAccess_Custom2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserModuleAccess AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserSettings.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView68() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserSettings" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserSetting](T1.UserSetting_UserID, T1.UserSetting_SettingCode, T1.UserSetting_ID, T1.UserSetting_StringValue, T1.UserSetting_NumericValue, T1.UserSetting_DateValue)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_USER_ID AS UserSetting_UserID, " & vbCrLf &
                "            T.SETTING_CODE AS UserSetting_SettingCode, " & vbCrLf &
                "            T.SEC_USER_SETTING_ID AS UserSetting_ID, " & vbCrLf &
                "            T.STRING_VALUE AS UserSetting_StringValue, " & vbCrLf &
                "            T.NUMERIC_VALUE AS UserSetting_NumericValue, " & vbCrLf &
                "            T.DATE_VALUE AS UserSetting_DateValue, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserSetting AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserUserDefinedReportAccesses.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView69() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserUserDefinedReportAccesses" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserUserDefinedReportAccess](T1.UserUserDefinedReportAccess_ID, T1.UserUserDefinedReportAccess_UserID, T1.UserUserDefinedReportAccess_UserDefinedReportID, T1.UserUserDefinedReportAccess_IsBlocked)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_USER_UDRACCESS_ID AS UserUserDefinedReportAccess_ID, " & vbCrLf &
                "            T.SEC_USER_ID AS UserUserDefinedReportAccess_UserID, " & vbCrLf &
                "            T.USER_DEF_REPORT_ID AS UserUserDefinedReportAccess_UserDefinedReportID, " & vbCrLf &
                "            T.IS_BLOCKED AS UserUserDefinedReportAccess_IsBlocked, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserUserDefinedReportAccess AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.WorkspaceTemplates.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView70() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing WorkspaceTemplates" & vbCrLf &
                "        [AdvantageFramework.Security.Database.WorkspaceTemplate](T1.WorkspaceTemplate_ID, T1.WorkspaceTemplate_CreatedByUserID, T1.WorkspaceTemplate_Name, T1.WorkspaceTemplate_Description, T1.WorkspaceTemplate_CreatedDate, T1.WorkspaceTemplate_IsClientPortal)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.TEMPLATE_ID AS WorkspaceTemplate_ID, " & vbCrLf &
                "            T.CREATED_BY_ID AS WorkspaceTemplate_CreatedByUserID, " & vbCrLf &
                "            T.NAME AS WorkspaceTemplate_Name, " & vbCrLf &
                "            T.DESCRIPTION AS WorkspaceTemplate_Description, " & vbCrLf &
                "            T.CREATE_DATE AS WorkspaceTemplate_CreatedDate, " & vbCrLf &
                "            T.CP AS WorkspaceTemplate_IsClientPortal, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.WorkspaceTemplate AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.WorkspaceTemplateDetails.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView71() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing WorkspaceTemplateDetails" & vbCrLf &
                "        [AdvantageFramework.Security.Database.WorkspaceTemplateDetail](T1.WorkspaceTemplateDetail_ID, T1.WorkspaceTemplateDetail_WorkspaceTemplateID, T1.WorkspaceTemplateDetail_Name, T1.WorkspaceTemplateDetail_Description, T1.WorkspaceTemplateDetail_SortOrder, T1.WorkspaceTemplateDetail_IsClientPortal)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.WORKSPACE_ID AS WorkspaceTemplateDetail_ID, " & vbCrLf &
                "            T.TEMPLATE_ID AS WorkspaceTemplateDetail_WorkspaceTemplateID, " & vbCrLf &
                "            T.NAME AS WorkspaceTemplateDetail_Name, " & vbCrLf &
                "            T.DESCRIPTION AS WorkspaceTemplateDetail_Description, " & vbCrLf &
                "            T.SORT_ORDER AS WorkspaceTemplateDetail_SortOrder, " & vbCrLf &
                "            T.CP AS WorkspaceTemplateDetail_IsClientPortal, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.WorkspaceTemplateDetail AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.WorkspaceTemplateItems.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView72() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing WorkspaceTemplateItems" & vbCrLf &
                "        [AdvantageFramework.Security.Database.WorkspaceTemplateItem](T1.WorkspaceTemplateItem_ID, T1.WorkspaceTemplateItem_WorkspaceTemplateDetailID, T1.WorkspaceTemplateItem_ModuleID, T1.WorkspaceTemplateItem_ZoneID, T1.WorkspaceTemplateItem_Height, T1.WorkspaceTemplateItem_Width, T1.WorkspaceTemplateItem_TopCoordinate, T1.WorkspaceTemplateItem_LeftCoordinate, T1.WorkspaceTemplateItem_SortOrder)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS WorkspaceTemplateItem_ID, " & vbCrLf &
                "            T.WORKSPACE_ID AS WorkspaceTemplateItem_WorkspaceTemplateDetailID, " & vbCrLf &
                "            T.DESKTOP_OBJECT_ID AS WorkspaceTemplateItem_ModuleID, " & vbCrLf &
                "            T.ZONE_ID AS WorkspaceTemplateItem_ZoneID, " & vbCrLf &
                "            T.HEIGHT AS WorkspaceTemplateItem_Height, " & vbCrLf &
                "            T.WIDTH AS WorkspaceTemplateItem_Width, " & vbCrLf &
                "            T.TOP_COORD AS WorkspaceTemplateItem_TopCoordinate, " & vbCrLf &
                "            T.LEFT_COORD AS WorkspaceTemplateItem_LeftCoordinate, " & vbCrLf &
                "            T.SORT_ORDER AS WorkspaceTemplateItem_SortOrder, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.WorkspaceTemplateItem AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ModuleInformations.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView73() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ModuleInformations" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ModuleInformation](T1.ModuleInformation_ID, T1.ModuleInformation_ImageName, T1.ModuleInformation_SortOrder, T1.ModuleInformation_HasCustomPermission, T1.ModuleInformation_WebvantageURL, T1.ModuleInformation_WebvantageImagePathActive, T1.ModuleInformation_WebvantageImagePath, T1.ModuleInformation_ApplicationName, T1.ModuleInformation_MenuName, T1.ModuleInformation_ApplicationCode, T1.ModuleInformation_CommandString, T1.ModuleInformation_IconIndex, T1.ModuleInformation_AllowMultipleInstances, T1.ModuleInformation_DesktopObjectName, T1.ModuleInformation_DesktopObjectSize, T1.ModuleInformation_ReportURL, T1.ModuleInformation_ReportImagePathActive, T1.ModuleInformation_ReportImagePath, T1.ModuleInformation_ReportDescription, T1.ModuleInformation_ReportPreviewLocation, T1.ModuleInformation_ReportIsLocked, T1.ModuleInformation_WebvantageLargeImagePath, T1.ModuleInformation_ReportLargeImagePath)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_MODULE_INFO_ID AS ModuleInformation_ID, " & vbCrLf &
                "            T.IMAGENAME AS ModuleInformation_ImageName, " & vbCrLf &
                "            T.SORT_ORDER AS ModuleInformation_SortOrder, " & vbCrLf &
                "            T.CUSTOM_PERMISSION AS ModuleInformation_HasCustomPermission, " & vbCrLf &
                "            T.WV_URL AS ModuleInformation_WebvantageURL, " & vbCrLf &
                "            T.WV_IMAGEPATHACTIVE AS ModuleInformation_WebvantageImagePathActive, " & vbCrLf &
                "            T.WV_IMAGEPATH AS ModuleInformation_WebvantageImagePath, " & vbCrLf &
                "            T.PB_APPNAME AS ModuleInformation_ApplicationName, " & vbCrLf &
                "            T.PB_MENU AS ModuleInformation_MenuName, " & vbCrLf &
                "            T.PB_NAME AS ModuleInformation_ApplicationCode, " & vbCrLf &
                "            T.PB_COMMAND_STRING AS ModuleInformation_CommandString, " & vbCrLf &
                "            T.PB_ICON AS ModuleInformation_IconIndex, " & vbCrLf &
                "            T.PB_ALLOW_MULTI AS ModuleInformation_AllowMultipleInstances, " & vbCrLf &
                "            T.WV_DO_NAME AS ModuleInformation_DesktopObjectName, " & vbCrLf &
                "            T.WV_DO_DSIZE AS ModuleInformation_DesktopObjectSize, " & vbCrLf &
                "            T.WV_RPT_URL AS ModuleInformation_ReportURL, " & vbCrLf &
                "            T.WV_RPT_IMAGEPATHACTIVE AS ModuleInformation_ReportImagePathActive, " & vbCrLf &
                "            T.WV_RPT_IMAGEPATH AS ModuleInformation_ReportImagePath, " & vbCrLf &
                "            T.WV_RPT_DESCRIPTION AS ModuleInformation_ReportDescription, " & vbCrLf &
                "            T.WV_RPT_PREVIEWLOCATION AS ModuleInformation_ReportPreviewLocation, " & vbCrLf &
                "            T.WV_RPT_LOCKED AS ModuleInformation_ReportIsLocked, " & vbCrLf &
                "            T.WV_IMAGEPATHLARGE AS ModuleInformation_WebvantageLargeImagePath, " & vbCrLf &
                "            T.WV_RPT_IMAGEPATHLARGE AS ModuleInformation_ReportLargeImagePath, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ModuleInformation AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ModuleSubs.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView74() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ModuleSubs" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ModuleSub](T1.ModuleSub_ID, T1.ModuleSub_ParentModuleID, T1.ModuleSub_ModuleID) WITH " & vbCrLf &
                "        RELATIONSHIP(CREATEREF(DbContext.Modules, ROW(T1.[Module_ParentSubModules.Module_ParentSubModules_Source.ID]),[AdvantageFramework.Security.Database.Module]),[AdvantageFramework.Security.Database.Module_ParentSubModules],Module_ParentSubModules_Target,Module_ParentSubModules_Source) " & vbCrLf &
                "        RELATIONSHIP(CREATEREF(DbContext.Modules, ROW(T1.[Module_SubModules.Module_SubModules_Source.ID]),[AdvantageFramework.Security.Database.Module]),[AdvantageFramework.Security.Database.Module_SubModules],Module_SubModules_Target,Module_SubModules_Source) " & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_MODULE_SUB_ID AS ModuleSub_ID, " & vbCrLf &
                "            T.PARENT_MODULE_ID AS ModuleSub_ParentModuleID, " & vbCrLf &
                "            T.SEC_MODULE_ID AS ModuleSub_ModuleID, " & vbCrLf &
                "            True AS _from0, " & vbCrLf &
                "            T.Module_ID AS [Module_ParentSubModules.Module_ParentSubModules_Source.ID], " & vbCrLf &
                "            T.Module_ID1 AS [Module_SubModules.Module_SubModules_Source.ID]" & vbCrLf &
                "        FROM CodeFirstDatabase.ModuleSub AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.Module_ParentSubModules.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView75() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Module_ParentSubModules" & vbCrLf &
                "        [AdvantageFramework.Security.Database.Module_ParentSubModules](T3.[Module_ParentSubModules.Module_ParentSubModules_Source], T3.[Module_ParentSubModules.Module_ParentSubModules_Target])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT -- Constructing Module_ParentSubModules_Source" & vbCrLf &
                "            CreateRef(DbContext.Modules, row(T2.[Module_ParentSubModules.Module_ParentSubModules_Source.ID]), [AdvantageFramework.Security.Database.Module]) AS [Module_ParentSubModules.Module_ParentSubModules_Source], " & vbCrLf &
                "            T2.[Module_ParentSubModules.Module_ParentSubModules_Target]" & vbCrLf &
                "        FROM (" & vbCrLf &
                "            SELECT -- Constructing Module_ParentSubModules_Target" & vbCrLf &
                "                T1.[Module_ParentSubModules.Module_ParentSubModules_Source.ID], " & vbCrLf &
                "                CreateRef(DbContext.ModuleSubs, row(T1.[Module_ParentSubModules.Module_ParentSubModules_Target.ID]), [AdvantageFramework.Security.Database.ModuleSub]) AS [Module_ParentSubModules.Module_ParentSubModules_Target]" & vbCrLf &
                "            FROM (" & vbCrLf &
                "                SELECT " & vbCrLf &
                "                    T.Module_ID AS [Module_ParentSubModules.Module_ParentSubModules_Source.ID], " & vbCrLf &
                "                    T.SEC_MODULE_SUB_ID AS [Module_ParentSubModules.Module_ParentSubModules_Target.ID], " & vbCrLf &
                "                    True AS _from0" & vbCrLf &
                "                FROM CodeFirstDatabase.ModuleSub AS T" & vbCrLf &
                "                WHERE T.Module_ID IS NOT NULL" & vbCrLf &
                "            ) AS T1" & vbCrLf &
                "        ) AS T2" & vbCrLf &
                "    ) AS T3")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.Module_SubModules.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView76() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Module_SubModules" & vbCrLf &
                "        [AdvantageFramework.Security.Database.Module_SubModules](T3.[Module_SubModules.Module_SubModules_Source], T3.[Module_SubModules.Module_SubModules_Target])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT -- Constructing Module_SubModules_Source" & vbCrLf &
                "            CreateRef(DbContext.Modules, row(T2.[Module_SubModules.Module_SubModules_Source.ID]), [AdvantageFramework.Security.Database.Module]) AS [Module_SubModules.Module_SubModules_Source], " & vbCrLf &
                "            T2.[Module_SubModules.Module_SubModules_Target]" & vbCrLf &
                "        FROM (" & vbCrLf &
                "            SELECT -- Constructing Module_SubModules_Target" & vbCrLf &
                "                T1.[Module_SubModules.Module_SubModules_Source.ID], " & vbCrLf &
                "                CreateRef(DbContext.ModuleSubs, row(T1.[Module_SubModules.Module_SubModules_Target.ID]), [AdvantageFramework.Security.Database.ModuleSub]) AS [Module_SubModules.Module_SubModules_Target]" & vbCrLf &
                "            FROM (" & vbCrLf &
                "                SELECT " & vbCrLf &
                "                    T.Module_ID1 AS [Module_SubModules.Module_SubModules_Source.ID], " & vbCrLf &
                "                    T.SEC_MODULE_SUB_ID AS [Module_SubModules.Module_SubModules_Target.ID], " & vbCrLf &
                "                    True AS _from0" & vbCrLf &
                "                FROM CodeFirstDatabase.ModuleSub AS T" & vbCrLf &
                "                WHERE T.Module_ID1 IS NOT NULL" & vbCrLf &
                "            ) AS T1" & vbCrLf &
                "        ) AS T2" & vbCrLf &
                "    ) AS T3")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ClientPortalUserWorkspaces.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView77() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ClientPortalUserWorkspaces" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ClientPortalUserWorkspace](T1.ClientPortalUserWorkspace_ID, T1.ClientPortalUserWorkspace_ClientContactID, T1.ClientPortalUserWorkspace_Name, T1.ClientPortalUserWorkspace_Description, T1.ClientPortalUserWorkspace_SortOrder)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.WORKSPACE_ID AS ClientPortalUserWorkspace_ID, " & vbCrLf &
                "            T.CDP_CONTACT_ID AS ClientPortalUserWorkspace_ClientContactID, " & vbCrLf &
                "            T.NAME AS ClientPortalUserWorkspace_Name, " & vbCrLf &
                "            T.DESCRIPTION AS ClientPortalUserWorkspace_Description, " & vbCrLf &
                "            T.SORT_ORDER AS ClientPortalUserWorkspace_SortOrder, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ClientPortalUserWorkspace AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ClientPortalWorkspaceObjects.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView78() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ClientPortalWorkspaceObjects" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ClientPortalWorkspaceObject](T1.ClientPortalWorkspaceObject_ID, T1.ClientPortalWorkspaceObject_ClientPortalUserWorkspaceID, T1.ClientPortalWorkspaceObject_DesktopObjectID, T1.ClientPortalWorkspaceObject_ZoneID, T1.ClientPortalWorkspaceObject_Height, T1.ClientPortalWorkspaceObject_Width, T1.ClientPortalWorkspaceObject_TopCoordinate, T1.ClientPortalWorkspaceObject_LeftCoordinate, T1.ClientPortalWorkspaceObject_SortOrder)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS ClientPortalWorkspaceObject_ID, " & vbCrLf &
                "            T.WORKSPACE_ID AS ClientPortalWorkspaceObject_ClientPortalUserWorkspaceID, " & vbCrLf &
                "            T.DESKTOP_OBJECT_ID AS ClientPortalWorkspaceObject_DesktopObjectID, " & vbCrLf &
                "            T.ZONE_ID AS ClientPortalWorkspaceObject_ZoneID, " & vbCrLf &
                "            T.HEIGHT AS ClientPortalWorkspaceObject_Height, " & vbCrLf &
                "            T.WIDTH AS ClientPortalWorkspaceObject_Width, " & vbCrLf &
                "            T.TOP_COORD AS ClientPortalWorkspaceObject_TopCoordinate, " & vbCrLf &
                "            T.LEFT_COORD AS ClientPortalWorkspaceObject_LeftCoordinate, " & vbCrLf &
                "            T.SORT_ORDER AS ClientPortalWorkspaceObject_SortOrder, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ClientPortalWorkspaceObject AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.SecurityDivisions.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView79() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing SecurityDivisions" & vbCrLf &
                "        [AdvantageFramework.Security.Database.Division](T1.Division_ClientCode, T1.Division_Code, T1.Division_Name, T1.Division_IsActive)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.CL_CODE AS Division_ClientCode, " & vbCrLf &
                "            T.DIV_CODE AS Division_Code, " & vbCrLf &
                "            T.DIV_NAME AS Division_Name, " & vbCrLf &
                "            T.ACTIVE_FLAG AS Division_IsActive, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.Division AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserClientDivisionProductAccesses.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView80() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserClientDivisionProductAccesses" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserClientDivisionProductAccess](T1.UserClientDivisionProductAccess_UserCode, T1.UserClientDivisionProductAccess_ClientCode, T1.UserClientDivisionProductAccess_DivisionCode, T1.UserClientDivisionProductAccess_ProductCode, T1.UserClientDivisionProductAccess_AllowTimeEntryOnly)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.USER_ID AS UserClientDivisionProductAccess_UserCode, " & vbCrLf &
                "            T.CL_CODE AS UserClientDivisionProductAccess_ClientCode, " & vbCrLf &
                "            T.DIV_CODE AS UserClientDivisionProductAccess_DivisionCode, " & vbCrLf &
                "            T.PRD_CODE AS UserClientDivisionProductAccess_ProductCode, " & vbCrLf &
                "            T.TIME_ENTRY AS UserClientDivisionProductAccess_AllowTimeEntryOnly, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserClientDivisionProductAccess AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserEmployeeAccesses.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView81() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserEmployeeAccesses" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserEmployeeAccess](T1.UserEmployeeAccess_UserCode, T1.UserEmployeeAccess_EmployeeCode)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.USER_ID AS UserEmployeeAccess_UserCode, " & vbCrLf &
                "            T.EMP_CODE AS UserEmployeeAccess_EmployeeCode, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserEmployeeAccess AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserLoginAudits.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView82() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserLoginAudits" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserLoginAudit](T1.UserLoginAudit_ID, T1.UserLoginAudit_UserCode, T1.UserLoginAudit_IPAddress, T1.UserLoginAudit_ApplicationID, T1.UserLoginAudit_LoginDateTime, T1.UserLoginAudit_LogoutDateTime, T1.UserLoginAudit_Successful, T1.UserLoginAudit_FailureReason)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SEC_USER_LOGIN_AUDIT_ID AS UserLoginAudit_ID, " & vbCrLf &
                "            T.USER_CODE AS UserLoginAudit_UserCode, " & vbCrLf &
                "            T.IP_ADDRESS AS UserLoginAudit_IPAddress, " & vbCrLf &
                "            T.SEC_APPLICATION_ID AS UserLoginAudit_ApplicationID, " & vbCrLf &
                "            T.LOGIN_DATETIME AS UserLoginAudit_LoginDateTime, " & vbCrLf &
                "            T.LOGOUT_DATETIME AS UserLoginAudit_LogoutDateTime, " & vbCrLf &
                "            T.SUCCESSFUL AS UserLoginAudit_Successful, " & vbCrLf &
                "            T.FAILURE_REASON AS UserLoginAudit_FailureReason, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserLoginAudit AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.AdvantageUserLicenseInUse.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView83() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing AdvantageUserLicenseInUse" & vbCrLf &
                "        [CodeFirstDatabaseSchema.AdvantageUserLicenseInUse](T1.[AdvantageUserLicenseInUse.AULU_ID], T1.[AdvantageUserLicenseInUse.AULU_TYPE], T1.[AdvantageUserLicenseInUse.AULU_ASSIGN])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [AdvantageUserLicenseInUse.AULU_ID], " & vbCrLf &
                "            T.Type AS [AdvantageUserLicenseInUse.AULU_TYPE], " & vbCrLf &
                "            T.Assigned AS [AdvantageUserLicenseInUse.AULU_ASSIGN], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.AdvantageUserLicenseInUses AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.AdvantageUserLicenseInUses.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView84() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing AdvantageUserLicenseInUses" & vbCrLf &
                "        [AdvantageFramework.Security.Database.AdvantageUserLicenseInUse](T1.AdvantageUserLicenseInUse_ID, T1.AdvantageUserLicenseInUse_Type, T1.AdvantageUserLicenseInUse_Assigned)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.AULU_ID AS AdvantageUserLicenseInUse_ID, " & vbCrLf &
                "            T.AULU_TYPE AS AdvantageUserLicenseInUse_Type, " & vbCrLf &
                "            T.AULU_ASSIGN AS AdvantageUserLicenseInUse_Assigned, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.AdvantageUserLicenseInUse AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ApplicationSetting.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView85() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ApplicationSetting" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ApplicationSetting](T1.ApplicationSetting_USERID, T1.ApplicationSetting_APPLICATION, T1.[ApplicationSetting.VARIABLE_GROUP], T1.[ApplicationSetting.VARIABLE_NAME], T1.[ApplicationSetting.VARIABLE_TYPE], T1.[ApplicationSetting.VARIABLE_ORDER], T1.[ApplicationSetting.VARIABLE_VALUE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.UserCode AS ApplicationSetting_USERID, " & vbCrLf &
                "            T.ApplicationSection AS ApplicationSetting_APPLICATION, " & vbCrLf &
                "            T.[Group] AS [ApplicationSetting.VARIABLE_GROUP], " & vbCrLf &
                "            T.Name AS [ApplicationSetting.VARIABLE_NAME], " & vbCrLf &
                "            T.Type AS [ApplicationSetting.VARIABLE_TYPE], " & vbCrLf &
                "            T.OrderNumber AS [ApplicationSetting.VARIABLE_ORDER], " & vbCrLf &
                "            T.[Value] AS [ApplicationSetting.VARIABLE_VALUE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ApplicationSettings AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ApplicationSettings.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView86() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ApplicationSettings" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ApplicationSetting](T1.ApplicationSetting_UserCode, T1.ApplicationSetting_ApplicationSection, T1.ApplicationSetting_Group, T1.ApplicationSetting_Name, T1.ApplicationSetting_Type, T1.ApplicationSetting_OrderNumber, T1.ApplicationSetting_Value)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.USERID AS ApplicationSetting_UserCode, " & vbCrLf &
                "            T.APPLICATION AS ApplicationSetting_ApplicationSection, " & vbCrLf &
                "            T.VARIABLE_GROUP AS ApplicationSetting_Group, " & vbCrLf &
                "            T.VARIABLE_NAME AS ApplicationSetting_Name, " & vbCrLf &
                "            T.VARIABLE_TYPE AS ApplicationSetting_Type, " & vbCrLf &
                "            T.VARIABLE_ORDER AS ApplicationSetting_OrderNumber, " & vbCrLf &
                "            T.VARIABLE_VALUE AS ApplicationSetting_Value, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ApplicationSetting AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.CPUserFavoriteModule.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView87() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing CPUserFavoriteModule" & vbCrLf &
                "        [CodeFirstDatabaseSchema.CPUserFavoriteModule](T1.[CPUserFavoriteModule.CDP_CONTACT_ID], T1.[CPUserFavoriteModule.TAB_ID], T1.[CPUserFavoriteModule.APPLICATION_ID], T1.CPUserFavoriteModule_HEIGHT, T1.CPUserFavoriteModule_WIDTH, T1.[CPUserFavoriteModule.TOP_COORD], T1.[CPUserFavoriteModule.LEFT_COORD])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [CPUserFavoriteModule.CDP_CONTACT_ID], " & vbCrLf &
                "            T.WorkspaceID AS [CPUserFavoriteModule.TAB_ID], " & vbCrLf &
                "            T.ModuleID AS [CPUserFavoriteModule.APPLICATION_ID], " & vbCrLf &
                "            T.Height AS CPUserFavoriteModule_HEIGHT, " & vbCrLf &
                "            T.Width AS CPUserFavoriteModule_WIDTH, " & vbCrLf &
                "            T.TopCoord AS [CPUserFavoriteModule.TOP_COORD], " & vbCrLf &
                "            T.LeftCoord AS [CPUserFavoriteModule.LEFT_COORD], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.CPUserFavoriteModules AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.CPUserFavoriteModules.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView88() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing CPUserFavoriteModules" & vbCrLf &
                "        [AdvantageFramework.Security.Database.CPUserFavoriteModule](T1.CPUserFavoriteModule_ID, T1.CPUserFavoriteModule_WorkspaceID, T1.CPUserFavoriteModule_ModuleID, T1.CPUserFavoriteModule_Height, T1.CPUserFavoriteModule_Width, T1.CPUserFavoriteModule_TopCoord, T1.CPUserFavoriteModule_LeftCoord)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.CDP_CONTACT_ID AS CPUserFavoriteModule_ID, " & vbCrLf &
                "            T.TAB_ID AS CPUserFavoriteModule_WorkspaceID, " & vbCrLf &
                "            T.APPLICATION_ID AS CPUserFavoriteModule_ModuleID, " & vbCrLf &
                "            T.HEIGHT AS CPUserFavoriteModule_Height, " & vbCrLf &
                "            T.WIDTH AS CPUserFavoriteModule_Width, " & vbCrLf &
                "            T.TOP_COORD AS CPUserFavoriteModule_TopCoord, " & vbCrLf &
                "            T.LEFT_COORD AS CPUserFavoriteModule_LeftCoord, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.CPUserFavoriteModule AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.DatabaseSQLUser.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView89() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing DatabaseSQLUser" & vbCrLf &
                "        [CodeFirstDatabaseSchema.DatabaseSQLUser](T1.[DatabaseSQLUser.principal_id], T1.DatabaseSQLUser_name, T1.DatabaseSQLUser_type, T1.[DatabaseSQLUser.type_desc], T1.[DatabaseSQLUser.default_schema_name], T1.[DatabaseSQLUser.create_date], T1.[DatabaseSQLUser.modify_date], T1.[DatabaseSQLUser.owning_principal_id], T1.DatabaseSQLUser_sid, T1.[DatabaseSQLUser.is_fixed_role])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [DatabaseSQLUser.principal_id], " & vbCrLf &
                "            T.Name AS DatabaseSQLUser_name, " & vbCrLf &
                "            T.Type AS DatabaseSQLUser_type, " & vbCrLf &
                "            T.TypeDescription AS [DatabaseSQLUser.type_desc], " & vbCrLf &
                "            T.DefaultSchemaName AS [DatabaseSQLUser.default_schema_name], " & vbCrLf &
                "            T.CreatedDate AS [DatabaseSQLUser.create_date], " & vbCrLf &
                "            T.ModifiedDate AS [DatabaseSQLUser.modify_date], " & vbCrLf &
                "            T.OwnerID AS [DatabaseSQLUser.owning_principal_id], " & vbCrLf &
                "            T.SID AS DatabaseSQLUser_sid, " & vbCrLf &
                "            T.IsFixedRole AS [DatabaseSQLUser.is_fixed_role], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.DatabaseSQLUsers AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.DatabaseSQLUsers.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView90() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing DatabaseSQLUsers" & vbCrLf &
                "        [AdvantageFramework.Security.Database.DatabaseSQLUser](T1.DatabaseSQLUser_ID, T1.DatabaseSQLUser_Name, T1.DatabaseSQLUser_Type, T1.DatabaseSQLUser_TypeDescription, T1.DatabaseSQLUser_DefaultSchemaName, T1.DatabaseSQLUser_CreatedDate, T1.DatabaseSQLUser_ModifiedDate, T1.DatabaseSQLUser_OwnerID, T1.DatabaseSQLUser_SID, T1.DatabaseSQLUser_IsFixedRole)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.principal_id AS DatabaseSQLUser_ID, " & vbCrLf &
                "            T.name AS DatabaseSQLUser_Name, " & vbCrLf &
                "            T.type AS DatabaseSQLUser_Type, " & vbCrLf &
                "            T.type_desc AS DatabaseSQLUser_TypeDescription, " & vbCrLf &
                "            T.default_schema_name AS DatabaseSQLUser_DefaultSchemaName, " & vbCrLf &
                "            T.create_date AS DatabaseSQLUser_CreatedDate, " & vbCrLf &
                "            T.modify_date AS DatabaseSQLUser_ModifiedDate, " & vbCrLf &
                "            T.owning_principal_id AS DatabaseSQLUser_OwnerID, " & vbCrLf &
                "            T.sid AS DatabaseSQLUser_SID, " & vbCrLf &
                "            T.is_fixed_role AS DatabaseSQLUser_IsFixedRole, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.DatabaseSQLUser AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.EmployeeSummary.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView91() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing EmployeeSummary" & vbCrLf &
                "        [CodeFirstDatabaseSchema.EmployeeSummary](T1.EmployeeSummary_ID, T1.EmployeeSummary_UserCode, T1.EmployeeSummary_CheckForUserAccess, T1.EmployeeSummary_Employee, T1.EmployeeSummary_EmployeeCode, T1.EmployeeSummary_EmployeeName, T1.EmployeeSummary_Group, T1.EmployeeSummary_GroupName, T1.EmployeeSummary_GroupDescription)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS EmployeeSummary_ID, " & vbCrLf &
                "            T.UserCode AS EmployeeSummary_UserCode, " & vbCrLf &
                "            T.CheckForUserAccess AS EmployeeSummary_CheckForUserAccess, " & vbCrLf &
                "            T.Employee AS EmployeeSummary_Employee, " & vbCrLf &
                "            T.EmployeeCode AS EmployeeSummary_EmployeeCode, " & vbCrLf &
                "            T.EmployeeName AS EmployeeSummary_EmployeeName, " & vbCrLf &
                "            T.[Group] AS EmployeeSummary_Group, " & vbCrLf &
                "            T.GroupName AS EmployeeSummary_GroupName, " & vbCrLf &
                "            T.GroupDescription AS EmployeeSummary_GroupDescription, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.EmployeeSummaries AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.EmployeeSummaries.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView92() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing EmployeeSummaries" & vbCrLf &
                "        [AdvantageFramework.Security.Database.EmployeeSummary](T1.EmployeeSummary_ID, T1.EmployeeSummary_UserCode, T1.EmployeeSummary_CheckForUserAccess, T1.EmployeeSummary_Employee, T1.EmployeeSummary_EmployeeCode, T1.EmployeeSummary_EmployeeName, T1.EmployeeSummary_Group, T1.EmployeeSummary_GroupName, T1.EmployeeSummary_GroupDescription)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS EmployeeSummary_ID, " & vbCrLf &
                "            T.UserCode AS EmployeeSummary_UserCode, " & vbCrLf &
                "            T.CheckForUserAccess AS EmployeeSummary_CheckForUserAccess, " & vbCrLf &
                "            T.Employee AS EmployeeSummary_Employee, " & vbCrLf &
                "            T.EmployeeCode AS EmployeeSummary_EmployeeCode, " & vbCrLf &
                "            T.EmployeeName AS EmployeeSummary_EmployeeName, " & vbCrLf &
                "            T.[Group] AS EmployeeSummary_Group, " & vbCrLf &
                "            T.GroupName AS EmployeeSummary_GroupName, " & vbCrLf &
                "            T.GroupDescription AS EmployeeSummary_GroupDescription, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.EmployeeSummary AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.GroupPermission.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView93() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupPermission" & vbCrLf &
                "        [CodeFirstDatabaseSchema.GroupPermission](T1.GroupPermission_ID, T1.GroupPermission_ApplicationID, T1.GroupPermission_ModuleID, T1.GroupPermission_ModuleCode, T1.GroupPermission_Module, T1.GroupPermission_ModuleIsCategory, T1.GroupPermission_ModuleInfoID, T1.GroupPermission_GroupID, T1.GroupPermission_GroupName, T1.GroupPermission_GroupDescription, T1.GroupPermission_IsBlocked, T1.GroupPermission_CanPrint, T1.GroupPermission_CanUpdate, T1.GroupPermission_CanAdd, T1.GroupPermission_Custom1, T1.GroupPermission_Custom2, T1.GroupPermission_ApplicationIsBlocked, T1.GroupPermission_ApplicationCanPrint, T1.GroupPermission_ApplicationCanUpdate, T1.GroupPermission_ApplicationCanAdd, T1.GroupPermission_ApplicationCustom1, T1.GroupPermission_ApplicationCustom2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS GroupPermission_ID, " & vbCrLf &
                "            T.ApplicationID AS GroupPermission_ApplicationID, " & vbCrLf &
                "            T.ModuleID AS GroupPermission_ModuleID, " & vbCrLf &
                "            T.ModuleCode AS GroupPermission_ModuleCode, " & vbCrLf &
                "            T.Module AS GroupPermission_Module, " & vbCrLf &
                "            T.ModuleIsCategory AS GroupPermission_ModuleIsCategory, " & vbCrLf &
                "            T.ModuleInfoID AS GroupPermission_ModuleInfoID, " & vbCrLf &
                "            T.GroupID AS GroupPermission_GroupID, " & vbCrLf &
                "            T.GroupName AS GroupPermission_GroupName, " & vbCrLf &
                "            T.GroupDescription AS GroupPermission_GroupDescription, " & vbCrLf &
                "            T.IsBlocked AS GroupPermission_IsBlocked, " & vbCrLf &
                "            T.CanPrint AS GroupPermission_CanPrint, " & vbCrLf &
                "            T.CanUpdate AS GroupPermission_CanUpdate, " & vbCrLf &
                "            T.CanAdd AS GroupPermission_CanAdd, " & vbCrLf &
                "            T.Custom1 AS GroupPermission_Custom1, " & vbCrLf &
                "            T.Custom2 AS GroupPermission_Custom2, " & vbCrLf &
                "            T.ApplicationIsBlocked AS GroupPermission_ApplicationIsBlocked, " & vbCrLf &
                "            T.ApplicationCanPrint AS GroupPermission_ApplicationCanPrint, " & vbCrLf &
                "            T.ApplicationCanUpdate AS GroupPermission_ApplicationCanUpdate, " & vbCrLf &
                "            T.ApplicationCanAdd AS GroupPermission_ApplicationCanAdd, " & vbCrLf &
                "            T.ApplicationCustom1 AS GroupPermission_ApplicationCustom1, " & vbCrLf &
                "            T.ApplicationCustom2 AS GroupPermission_ApplicationCustom2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.GroupPermissions AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.GroupPermissions.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView94() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupPermissions" & vbCrLf &
                "        [AdvantageFramework.Security.Database.GroupPermission](T1.GroupPermission_ID, T1.GroupPermission_ApplicationID, T1.GroupPermission_ModuleID, T1.GroupPermission_ModuleCode, T1.GroupPermission_Module, T1.GroupPermission_ModuleIsCategory, T1.GroupPermission_ModuleInfoID, T1.GroupPermission_GroupID, T1.GroupPermission_GroupName, T1.GroupPermission_GroupDescription, T1.GroupPermission_IsBlocked, T1.GroupPermission_CanPrint, T1.GroupPermission_CanUpdate, T1.GroupPermission_CanAdd, T1.GroupPermission_Custom1, T1.GroupPermission_Custom2, T1.GroupPermission_ApplicationIsBlocked, T1.GroupPermission_ApplicationCanPrint, T1.GroupPermission_ApplicationCanUpdate, T1.GroupPermission_ApplicationCanAdd, T1.GroupPermission_ApplicationCustom1, T1.GroupPermission_ApplicationCustom2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS GroupPermission_ID, " & vbCrLf &
                "            T.ApplicationID AS GroupPermission_ApplicationID, " & vbCrLf &
                "            T.ModuleID AS GroupPermission_ModuleID, " & vbCrLf &
                "            T.ModuleCode AS GroupPermission_ModuleCode, " & vbCrLf &
                "            T.Module AS GroupPermission_Module, " & vbCrLf &
                "            T.ModuleIsCategory AS GroupPermission_ModuleIsCategory, " & vbCrLf &
                "            T.ModuleInfoID AS GroupPermission_ModuleInfoID, " & vbCrLf &
                "            T.GroupID AS GroupPermission_GroupID, " & vbCrLf &
                "            T.GroupName AS GroupPermission_GroupName, " & vbCrLf &
                "            T.GroupDescription AS GroupPermission_GroupDescription, " & vbCrLf &
                "            T.IsBlocked AS GroupPermission_IsBlocked, " & vbCrLf &
                "            T.CanPrint AS GroupPermission_CanPrint, " & vbCrLf &
                "            T.CanUpdate AS GroupPermission_CanUpdate, " & vbCrLf &
                "            T.CanAdd AS GroupPermission_CanAdd, " & vbCrLf &
                "            T.Custom1 AS GroupPermission_Custom1, " & vbCrLf &
                "            T.Custom2 AS GroupPermission_Custom2, " & vbCrLf &
                "            T.ApplicationIsBlocked AS GroupPermission_ApplicationIsBlocked, " & vbCrLf &
                "            T.ApplicationCanPrint AS GroupPermission_ApplicationCanPrint, " & vbCrLf &
                "            T.ApplicationCanUpdate AS GroupPermission_ApplicationCanUpdate, " & vbCrLf &
                "            T.ApplicationCanAdd AS GroupPermission_ApplicationCanAdd, " & vbCrLf &
                "            T.ApplicationCustom1 AS GroupPermission_ApplicationCustom1, " & vbCrLf &
                "            T.ApplicationCustom2 AS GroupPermission_ApplicationCustom2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.GroupPermission AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.GroupPermissionsReport.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView95() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupPermissionsReport" & vbCrLf &
                "        [CodeFirstDatabaseSchema.GroupPermissionsReport](T1.GroupPermissionsReport_ID, T1.GroupPermissionsReport_ApplicationID, T1.GroupPermissionsReport_ParentModuleID, T1.GroupPermissionsReport_ParentModule, T1.GroupPermissionsReport_ParentModuleSortOrder, T1.GroupPermissionsReport_SubParentModuleID, T1.GroupPermissionsReport_SubParentModule, T1.GroupPermissionsReport_SubParentModuleSortOrder, T1.GroupPermissionsReport_SubSubParentModuleID, T1.GroupPermissionsReport_SubSubParentModule, T1.GroupPermissionsReport_SubSubParentModuleSortOrder, T1.GroupPermissionsReport_ModuleID, T1.GroupPermissionsReport_ModuleCode, T1.GroupPermissionsReport_Module, T1.GroupPermissionsReport_ModuleIsCategory, T1.GroupPermissionsReport_ModuleInfoID, T1.GroupPermissionsReport_ModuleSortOrder, T1.GroupPermissionsReport_ModuleHasCustomPermission, T1.GroupPermissionsReport_GroupID, T1.GroupPermissionsReport_GroupName, T1.GroupPermissionsReport_GroupDescription, T1.GroupPermissionsReport_IsBlocked, T1.GroupPermissionsReport_CanPrint, T1.GroupPermissionsReport_CanUpdate, T1.GroupPermissionsReport_CanAdd, T1.GroupPermissionsReport_Custom1, T1.GroupPermissionsReport_Custom2, T1.GroupPermissionsReport_ApplicationIsBlocked, T1.GroupPermissionsReport_ApplicationCanPrint, T1.GroupPermissionsReport_ApplicationCanUpdate, T1.GroupPermissionsReport_ApplicationCanAdd, T1.GroupPermissionsReport_ApplicationCustom1, T1.GroupPermissionsReport_ApplicationCustom2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS GroupPermissionsReport_ID, " & vbCrLf &
                "            T.ApplicationID AS GroupPermissionsReport_ApplicationID, " & vbCrLf &
                "            T.ParentModuleID AS GroupPermissionsReport_ParentModuleID, " & vbCrLf &
                "            T.ParentModule AS GroupPermissionsReport_ParentModule, " & vbCrLf &
                "            T.ParentModuleSortOrder AS GroupPermissionsReport_ParentModuleSortOrder, " & vbCrLf &
                "            T.SubParentModuleID AS GroupPermissionsReport_SubParentModuleID, " & vbCrLf &
                "            T.SubParentModule AS GroupPermissionsReport_SubParentModule, " & vbCrLf &
                "            T.SubParentModuleSortOrder AS GroupPermissionsReport_SubParentModuleSortOrder, " & vbCrLf &
                "            T.SubSubParentModuleID AS GroupPermissionsReport_SubSubParentModuleID, " & vbCrLf &
                "            T.SubSubParentModule AS GroupPermissionsReport_SubSubParentModule, " & vbCrLf &
                "            T.SubSubParentModuleSortOrder AS GroupPermissionsReport_SubSubParentModuleSortOrder, " & vbCrLf &
                "            T.ModuleID AS GroupPermissionsReport_ModuleID, " & vbCrLf &
                "            T.ModuleCode AS GroupPermissionsReport_ModuleCode, " & vbCrLf &
                "            T.Module AS GroupPermissionsReport_Module, " & vbCrLf &
                "            T.ModuleIsCategory AS GroupPermissionsReport_ModuleIsCategory, " & vbCrLf &
                "            T.ModuleInfoID AS GroupPermissionsReport_ModuleInfoID, " & vbCrLf &
                "            T.ModuleSortOrder AS GroupPermissionsReport_ModuleSortOrder, " & vbCrLf &
                "            T.ModuleHasCustomPermission AS GroupPermissionsReport_ModuleHasCustomPermission, " & vbCrLf &
                "            T.GroupID AS GroupPermissionsReport_GroupID, " & vbCrLf &
                "            T.GroupName AS GroupPermissionsReport_GroupName, " & vbCrLf &
                "            T.GroupDescription AS GroupPermissionsReport_GroupDescription, " & vbCrLf &
                "            T.IsBlocked AS GroupPermissionsReport_IsBlocked, " & vbCrLf &
                "            T.CanPrint AS GroupPermissionsReport_CanPrint, " & vbCrLf &
                "            T.CanUpdate AS GroupPermissionsReport_CanUpdate, " & vbCrLf &
                "            T.CanAdd AS GroupPermissionsReport_CanAdd, " & vbCrLf &
                "            T.Custom1 AS GroupPermissionsReport_Custom1, " & vbCrLf &
                "            T.Custom2 AS GroupPermissionsReport_Custom2, " & vbCrLf &
                "            T.ApplicationIsBlocked AS GroupPermissionsReport_ApplicationIsBlocked, " & vbCrLf &
                "            T.ApplicationCanPrint AS GroupPermissionsReport_ApplicationCanPrint, " & vbCrLf &
                "            T.ApplicationCanUpdate AS GroupPermissionsReport_ApplicationCanUpdate, " & vbCrLf &
                "            T.ApplicationCanAdd AS GroupPermissionsReport_ApplicationCanAdd, " & vbCrLf &
                "            T.ApplicationCustom1 AS GroupPermissionsReport_ApplicationCustom1, " & vbCrLf &
                "            T.ApplicationCustom2 AS GroupPermissionsReport_ApplicationCustom2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.GroupPermissionsReports AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.GroupPermissionsReports.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView96() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing GroupPermissionsReports" & vbCrLf &
                "        [AdvantageFramework.Security.Database.GroupPermissionsReport](T1.GroupPermissionsReport_ID, T1.GroupPermissionsReport_ApplicationID, T1.GroupPermissionsReport_ParentModuleID, T1.GroupPermissionsReport_ParentModule, T1.GroupPermissionsReport_ParentModuleSortOrder, T1.GroupPermissionsReport_SubParentModuleID, T1.GroupPermissionsReport_SubParentModule, T1.GroupPermissionsReport_SubParentModuleSortOrder, T1.GroupPermissionsReport_SubSubParentModuleID, T1.GroupPermissionsReport_SubSubParentModule, T1.GroupPermissionsReport_SubSubParentModuleSortOrder, T1.GroupPermissionsReport_ModuleID, T1.GroupPermissionsReport_ModuleCode, T1.GroupPermissionsReport_Module, T1.GroupPermissionsReport_ModuleIsCategory, T1.GroupPermissionsReport_ModuleInfoID, T1.GroupPermissionsReport_ModuleSortOrder, T1.GroupPermissionsReport_ModuleHasCustomPermission, T1.GroupPermissionsReport_GroupID, T1.GroupPermissionsReport_GroupName, T1.GroupPermissionsReport_GroupDescription, T1.GroupPermissionsReport_IsBlocked, T1.GroupPermissionsReport_CanPrint, T1.GroupPermissionsReport_CanUpdate, T1.GroupPermissionsReport_CanAdd, T1.GroupPermissionsReport_Custom1, T1.GroupPermissionsReport_Custom2, T1.GroupPermissionsReport_ApplicationIsBlocked, T1.GroupPermissionsReport_ApplicationCanPrint, T1.GroupPermissionsReport_ApplicationCanUpdate, T1.GroupPermissionsReport_ApplicationCanAdd, T1.GroupPermissionsReport_ApplicationCustom1, T1.GroupPermissionsReport_ApplicationCustom2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS GroupPermissionsReport_ID, " & vbCrLf &
                "            T.ApplicationID AS GroupPermissionsReport_ApplicationID, " & vbCrLf &
                "            T.ParentModuleID AS GroupPermissionsReport_ParentModuleID, " & vbCrLf &
                "            T.ParentModule AS GroupPermissionsReport_ParentModule, " & vbCrLf &
                "            T.ParentModuleSortOrder AS GroupPermissionsReport_ParentModuleSortOrder, " & vbCrLf &
                "            T.SubParentModuleID AS GroupPermissionsReport_SubParentModuleID, " & vbCrLf &
                "            T.SubParentModule AS GroupPermissionsReport_SubParentModule, " & vbCrLf &
                "            T.SubParentModuleSortOrder AS GroupPermissionsReport_SubParentModuleSortOrder, " & vbCrLf &
                "            T.SubSubParentModuleID AS GroupPermissionsReport_SubSubParentModuleID, " & vbCrLf &
                "            T.SubSubParentModule AS GroupPermissionsReport_SubSubParentModule, " & vbCrLf &
                "            T.SubSubParentModuleSortOrder AS GroupPermissionsReport_SubSubParentModuleSortOrder, " & vbCrLf &
                "            T.ModuleID AS GroupPermissionsReport_ModuleID, " & vbCrLf &
                "            T.ModuleCode AS GroupPermissionsReport_ModuleCode, " & vbCrLf &
                "            T.Module AS GroupPermissionsReport_Module, " & vbCrLf &
                "            T.ModuleIsCategory AS GroupPermissionsReport_ModuleIsCategory, " & vbCrLf &
                "            T.ModuleInfoID AS GroupPermissionsReport_ModuleInfoID, " & vbCrLf &
                "            T.ModuleSortOrder AS GroupPermissionsReport_ModuleSortOrder, " & vbCrLf &
                "            T.ModuleHasCustomPermission AS GroupPermissionsReport_ModuleHasCustomPermission, " & vbCrLf &
                "            T.GroupID AS GroupPermissionsReport_GroupID, " & vbCrLf &
                "            T.GroupName AS GroupPermissionsReport_GroupName, " & vbCrLf &
                "            T.GroupDescription AS GroupPermissionsReport_GroupDescription, " & vbCrLf &
                "            T.IsBlocked AS GroupPermissionsReport_IsBlocked, " & vbCrLf &
                "            T.CanPrint AS GroupPermissionsReport_CanPrint, " & vbCrLf &
                "            T.CanUpdate AS GroupPermissionsReport_CanUpdate, " & vbCrLf &
                "            T.CanAdd AS GroupPermissionsReport_CanAdd, " & vbCrLf &
                "            T.Custom1 AS GroupPermissionsReport_Custom1, " & vbCrLf &
                "            T.Custom2 AS GroupPermissionsReport_Custom2, " & vbCrLf &
                "            T.ApplicationIsBlocked AS GroupPermissionsReport_ApplicationIsBlocked, " & vbCrLf &
                "            T.ApplicationCanPrint AS GroupPermissionsReport_ApplicationCanPrint, " & vbCrLf &
                "            T.ApplicationCanUpdate AS GroupPermissionsReport_ApplicationCanUpdate, " & vbCrLf &
                "            T.ApplicationCanAdd AS GroupPermissionsReport_ApplicationCanAdd, " & vbCrLf &
                "            T.ApplicationCustom1 AS GroupPermissionsReport_ApplicationCustom1, " & vbCrLf &
                "            T.ApplicationCustom2 AS GroupPermissionsReport_ApplicationCustom2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.GroupPermissionsReport AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ModuleStructure.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView97() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ModuleStructure" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ModuleStructure](T1.ModuleStructure_ID, T1.ModuleStructure_ParentModuleID, T1.ModuleStructure_ParentModule, T1.ModuleStructure_ParentModuleSortOrder, T1.ModuleStructure_SubParentModuleID, T1.ModuleStructure_SubParentModule, T1.ModuleStructure_SubParentModuleSortOrder, T1.ModuleStructure_SubSubParentModuleID, T1.ModuleStructure_SubSubParentModule, T1.ModuleStructure_SubSubParentModuleSortOrder, T1.ModuleStructure_ModuleID, T1.ModuleStructure_ModuleCode, T1.ModuleStructure_Module, T1.ModuleStructure_ModuleSortOrder, T1.ModuleStructure_ModuleHasCustomPermission)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS ModuleStructure_ID, " & vbCrLf &
                "            T.ParentModuleID AS ModuleStructure_ParentModuleID, " & vbCrLf &
                "            T.ParentModule AS ModuleStructure_ParentModule, " & vbCrLf &
                "            T.ParentModuleSortOrder AS ModuleStructure_ParentModuleSortOrder, " & vbCrLf &
                "            T.SubParentModuleID AS ModuleStructure_SubParentModuleID, " & vbCrLf &
                "            T.SubParentModule AS ModuleStructure_SubParentModule, " & vbCrLf &
                "            T.SubParentModuleSortOrder AS ModuleStructure_SubParentModuleSortOrder, " & vbCrLf &
                "            T.SubSubParentModuleID AS ModuleStructure_SubSubParentModuleID, " & vbCrLf &
                "            T.SubSubParentModule AS ModuleStructure_SubSubParentModule, " & vbCrLf &
                "            T.SubSubParentModuleSortOrder AS ModuleStructure_SubSubParentModuleSortOrder, " & vbCrLf &
                "            T.ModuleID AS ModuleStructure_ModuleID, " & vbCrLf &
                "            T.ModuleCode AS ModuleStructure_ModuleCode, " & vbCrLf &
                "            T.Module AS ModuleStructure_Module, " & vbCrLf &
                "            T.ModuleSortOrder AS ModuleStructure_ModuleSortOrder, " & vbCrLf &
                "            T.ModuleHasCustomPermission AS ModuleStructure_ModuleHasCustomPermission, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ModuleStructures AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ModuleStructures.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView98() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ModuleStructures" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ModuleStructure](T1.ModuleStructure_ID, T1.ModuleStructure_ParentModuleID, T1.ModuleStructure_ParentModule, T1.ModuleStructure_ParentModuleSortOrder, T1.ModuleStructure_SubParentModuleID, T1.ModuleStructure_SubParentModule, T1.ModuleStructure_SubParentModuleSortOrder, T1.ModuleStructure_SubSubParentModuleID, T1.ModuleStructure_SubSubParentModule, T1.ModuleStructure_SubSubParentModuleSortOrder, T1.ModuleStructure_ModuleID, T1.ModuleStructure_ModuleCode, T1.ModuleStructure_Module, T1.ModuleStructure_ModuleSortOrder, T1.ModuleStructure_ModuleHasCustomPermission)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS ModuleStructure_ID, " & vbCrLf &
                "            T.ParentModuleID AS ModuleStructure_ParentModuleID, " & vbCrLf &
                "            T.ParentModule AS ModuleStructure_ParentModule, " & vbCrLf &
                "            T.ParentModuleSortOrder AS ModuleStructure_ParentModuleSortOrder, " & vbCrLf &
                "            T.SubParentModuleID AS ModuleStructure_SubParentModuleID, " & vbCrLf &
                "            T.SubParentModule AS ModuleStructure_SubParentModule, " & vbCrLf &
                "            T.SubParentModuleSortOrder AS ModuleStructure_SubParentModuleSortOrder, " & vbCrLf &
                "            T.SubSubParentModuleID AS ModuleStructure_SubSubParentModuleID, " & vbCrLf &
                "            T.SubSubParentModule AS ModuleStructure_SubSubParentModule, " & vbCrLf &
                "            T.SubSubParentModuleSortOrder AS ModuleStructure_SubSubParentModuleSortOrder, " & vbCrLf &
                "            T.ModuleID AS ModuleStructure_ModuleID, " & vbCrLf &
                "            T.ModuleCode AS ModuleStructure_ModuleCode, " & vbCrLf &
                "            T.Module AS ModuleStructure_Module, " & vbCrLf &
                "            T.ModuleSortOrder AS ModuleStructure_ModuleSortOrder, " & vbCrLf &
                "            T.ModuleHasCustomPermission AS ModuleStructure_ModuleHasCustomPermission, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ModuleStructure AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ModuleView.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView99() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ModuleView" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ModuleView](T1.ModuleView_ID, T1.ModuleView_ApplicationID, T1.ModuleView_ApplicationName, T1.ModuleView_ApplicationDescription, T1.ModuleView_ModuleCode, T1.ModuleView_ModuleInformationID, T1.ModuleView_ModuleID, T1.ModuleView_ModuleDescription, T1.ModuleView_IsInactive, T1.ModuleView_IsMenuItem, T1.ModuleView_IsCategory, T1.ModuleView_IsApplication, T1.ModuleView_IsReport, T1.ModuleView_IsDesktopObject, T1.ModuleView_IsDashQuery, T1.ModuleView_ParentModuleID, T1.ModuleView_ReportIsLocked, T1.ModuleView_ReportPreviewLocation, T1.ModuleView_ReportDescription, T1.ModuleView_ReportImagePath, T1.ModuleView_ReportImagePathActive, T1.ModuleView_ReportLargeImagePath, T1.ModuleView_ReportURL, T1.ModuleView_DesktopObjectSize, T1.ModuleView_DesktopObjectName, T1.ModuleView_ImageName, T1.ModuleView_SortOrder, T1.ModuleView_HasCustomPermission, T1.ModuleView_WebvantageURL, T1.ModuleView_WebvantageImagePathActive, T1.ModuleView_WebvantageImagePath, T1.ModuleView_WebvantageLargeImagePath, T1.ModuleView_AdvantageApplicationName, T1.ModuleView_AdvantageMenuName, T1.ModuleView_AdvantageApplicationCode, T1.ModuleView_AdvantageCommandString, T1.ModuleView_AdvantageIconIndex, T1.ModuleView_AdvantageAllowMultipleInstances, T1.ModuleView_ParentModuleCode, T1.ModuleView_ParentModuleDescription)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS ModuleView_ID, " & vbCrLf &
                "            T.ApplicationID AS ModuleView_ApplicationID, " & vbCrLf &
                "            T.ApplicationName AS ModuleView_ApplicationName, " & vbCrLf &
                "            T.ApplicationDescription AS ModuleView_ApplicationDescription, " & vbCrLf &
                "            T.ModuleCode AS ModuleView_ModuleCode, " & vbCrLf &
                "            T.ModuleInformationID AS ModuleView_ModuleInformationID, " & vbCrLf &
                "            T.ModuleID AS ModuleView_ModuleID, " & vbCrLf &
                "            T.ModuleDescription AS ModuleView_ModuleDescription, " & vbCrLf &
                "            T.IsInactive AS ModuleView_IsInactive, " & vbCrLf &
                "            T.IsMenuItem AS ModuleView_IsMenuItem, " & vbCrLf &
                "            T.IsCategory AS ModuleView_IsCategory, " & vbCrLf &
                "            T.IsApplication AS ModuleView_IsApplication, " & vbCrLf &
                "            T.IsReport AS ModuleView_IsReport, " & vbCrLf &
                "            T.IsDesktopObject AS ModuleView_IsDesktopObject, " & vbCrLf &
                "            T.IsDashQuery AS ModuleView_IsDashQuery, " & vbCrLf &
                "            T.ParentModuleID AS ModuleView_ParentModuleID, " & vbCrLf &
                "            T.ReportIsLocked AS ModuleView_ReportIsLocked, " & vbCrLf &
                "            T.ReportPreviewLocation AS ModuleView_ReportPreviewLocation, " & vbCrLf &
                "            T.ReportDescription AS ModuleView_ReportDescription, " & vbCrLf &
                "            T.ReportImagePath AS ModuleView_ReportImagePath, " & vbCrLf &
                "            T.ReportImagePathActive AS ModuleView_ReportImagePathActive, " & vbCrLf &
                "            T.ReportLargeImagePath AS ModuleView_ReportLargeImagePath, " & vbCrLf &
                "            T.ReportURL AS ModuleView_ReportURL, " & vbCrLf &
                "            T.DesktopObjectSize AS ModuleView_DesktopObjectSize, " & vbCrLf &
                "            T.DesktopObjectName AS ModuleView_DesktopObjectName, " & vbCrLf &
                "            T.ImageName AS ModuleView_ImageName, " & vbCrLf &
                "            T.SortOrder AS ModuleView_SortOrder, " & vbCrLf &
                "            T.HasCustomPermission AS ModuleView_HasCustomPermission, " & vbCrLf &
                "            T.WebvantageURL AS ModuleView_WebvantageURL, " & vbCrLf &
                "            T.WebvantageImagePathActive AS ModuleView_WebvantageImagePathActive, " & vbCrLf &
                "            T.WebvantageImagePath AS ModuleView_WebvantageImagePath, " & vbCrLf &
                "            T.WebvantageLargeImagePath AS ModuleView_WebvantageLargeImagePath, " & vbCrLf &
                "            T.AdvantageApplicationName AS ModuleView_AdvantageApplicationName, " & vbCrLf &
                "            T.AdvantageMenuName AS ModuleView_AdvantageMenuName, " & vbCrLf &
                "            T.AdvantageApplicationCode AS ModuleView_AdvantageApplicationCode, " & vbCrLf &
                "            T.AdvantageCommandString AS ModuleView_AdvantageCommandString, " & vbCrLf &
                "            T.AdvantageIconIndex AS ModuleView_AdvantageIconIndex, " & vbCrLf &
                "            T.AdvantageAllowMultipleInstances AS ModuleView_AdvantageAllowMultipleInstances, " & vbCrLf &
                "            T.ParentModuleCode AS ModuleView_ParentModuleCode, " & vbCrLf &
                "            T.ParentModuleDescription AS ModuleView_ParentModuleDescription, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ModuleViews AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ModuleViews.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView100() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ModuleViews" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ModuleView](T1.ModuleView_ID, T1.ModuleView_ApplicationID, T1.ModuleView_ApplicationName, T1.ModuleView_ApplicationDescription, T1.ModuleView_ModuleCode, T1.ModuleView_ModuleInformationID, T1.ModuleView_ModuleID, T1.ModuleView_ModuleDescription, T1.ModuleView_IsInactive, T1.ModuleView_IsMenuItem, T1.ModuleView_IsCategory, T1.ModuleView_IsApplication, T1.ModuleView_IsReport, T1.ModuleView_IsDesktopObject, T1.ModuleView_IsDashQuery, T1.ModuleView_ParentModuleID, T1.ModuleView_ReportIsLocked, T1.ModuleView_ReportPreviewLocation, T1.ModuleView_ReportDescription, T1.ModuleView_ReportImagePath, T1.ModuleView_ReportImagePathActive, T1.ModuleView_ReportLargeImagePath, T1.ModuleView_ReportURL, T1.ModuleView_DesktopObjectSize, T1.ModuleView_DesktopObjectName, T1.ModuleView_ImageName, T1.ModuleView_SortOrder, T1.ModuleView_HasCustomPermission, T1.ModuleView_WebvantageURL, T1.ModuleView_WebvantageImagePathActive, T1.ModuleView_WebvantageImagePath, T1.ModuleView_WebvantageLargeImagePath, T1.ModuleView_AdvantageApplicationName, T1.ModuleView_AdvantageMenuName, T1.ModuleView_AdvantageApplicationCode, T1.ModuleView_AdvantageCommandString, T1.ModuleView_AdvantageIconIndex, T1.ModuleView_AdvantageAllowMultipleInstances, T1.ModuleView_ParentModuleCode, T1.ModuleView_ParentModuleDescription)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS ModuleView_ID, " & vbCrLf &
                "            T.ApplicationID AS ModuleView_ApplicationID, " & vbCrLf &
                "            T.ApplicationName AS ModuleView_ApplicationName, " & vbCrLf &
                "            T.ApplicationDescription AS ModuleView_ApplicationDescription, " & vbCrLf &
                "            T.ModuleCode AS ModuleView_ModuleCode, " & vbCrLf &
                "            T.ModuleInformationID AS ModuleView_ModuleInformationID, " & vbCrLf &
                "            T.ModuleID AS ModuleView_ModuleID, " & vbCrLf &
                "            T.ModuleDescription AS ModuleView_ModuleDescription, " & vbCrLf &
                "            T.IsInactive AS ModuleView_IsInactive, " & vbCrLf &
                "            T.IsMenuItem AS ModuleView_IsMenuItem, " & vbCrLf &
                "            T.IsCategory AS ModuleView_IsCategory, " & vbCrLf &
                "            T.IsApplication AS ModuleView_IsApplication, " & vbCrLf &
                "            T.IsReport AS ModuleView_IsReport, " & vbCrLf &
                "            T.IsDesktopObject AS ModuleView_IsDesktopObject, " & vbCrLf &
                "            T.IsDashQuery AS ModuleView_IsDashQuery, " & vbCrLf &
                "            T.ParentModuleID AS ModuleView_ParentModuleID, " & vbCrLf &
                "            T.ReportIsLocked AS ModuleView_ReportIsLocked, " & vbCrLf &
                "            T.ReportPreviewLocation AS ModuleView_ReportPreviewLocation, " & vbCrLf &
                "            T.ReportDescription AS ModuleView_ReportDescription, " & vbCrLf &
                "            T.ReportImagePath AS ModuleView_ReportImagePath, " & vbCrLf &
                "            T.ReportImagePathActive AS ModuleView_ReportImagePathActive, " & vbCrLf &
                "            T.ReportLargeImagePath AS ModuleView_ReportLargeImagePath, " & vbCrLf &
                "            T.ReportURL AS ModuleView_ReportURL, " & vbCrLf &
                "            T.DesktopObjectSize AS ModuleView_DesktopObjectSize, " & vbCrLf &
                "            T.DesktopObjectName AS ModuleView_DesktopObjectName, " & vbCrLf &
                "            T.ImageName AS ModuleView_ImageName, " & vbCrLf &
                "            T.SortOrder AS ModuleView_SortOrder, " & vbCrLf &
                "            T.HasCustomPermission AS ModuleView_HasCustomPermission, " & vbCrLf &
                "            T.WebvantageURL AS ModuleView_WebvantageURL, " & vbCrLf &
                "            T.WebvantageImagePathActive AS ModuleView_WebvantageImagePathActive, " & vbCrLf &
                "            T.WebvantageImagePath AS ModuleView_WebvantageImagePath, " & vbCrLf &
                "            T.WebvantageLargeImagePath AS ModuleView_WebvantageLargeImagePath, " & vbCrLf &
                "            T.AdvantageApplicationName AS ModuleView_AdvantageApplicationName, " & vbCrLf &
                "            T.AdvantageMenuName AS ModuleView_AdvantageMenuName, " & vbCrLf &
                "            T.AdvantageApplicationCode AS ModuleView_AdvantageApplicationCode, " & vbCrLf &
                "            T.AdvantageCommandString AS ModuleView_AdvantageCommandString, " & vbCrLf &
                "            T.AdvantageIconIndex AS ModuleView_AdvantageIconIndex, " & vbCrLf &
                "            T.AdvantageAllowMultipleInstances AS ModuleView_AdvantageAllowMultipleInstances, " & vbCrLf &
                "            T.ParentModuleCode AS ModuleView_ParentModuleCode, " & vbCrLf &
                "            T.ParentModuleDescription AS ModuleView_ParentModuleDescription, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ModuleView AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.PasswordHistory.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView101() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing PasswordHistory" & vbCrLf &
                "        [CodeFirstDatabaseSchema.PasswordHistory](T1.PasswordHistory_ID, T1.[PasswordHistory.USER_CODE], T1.[PasswordHistory.START_DATE], T1.PasswordHistory_PASSWORD)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS PasswordHistory_ID, " & vbCrLf &
                "            T.UserCode AS [PasswordHistory.USER_CODE], " & vbCrLf &
                "            T.StartDate AS [PasswordHistory.START_DATE], " & vbCrLf &
                "            T.Password AS PasswordHistory_PASSWORD, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.PasswordHistories AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.PasswordHistories.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView102() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing PasswordHistories" & vbCrLf &
                "        [AdvantageFramework.Security.Database.PasswordHistory](T1.PasswordHistory_ID, T1.PasswordHistory_UserCode, T1.PasswordHistory_StartDate, T1.PasswordHistory_Password)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS PasswordHistory_ID, " & vbCrLf &
                "            T.USER_CODE AS PasswordHistory_UserCode, " & vbCrLf &
                "            T.START_DATE AS PasswordHistory_StartDate, " & vbCrLf &
                "            T.PASSWORD AS PasswordHistory_Password, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.PasswordHistory AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.PasswordLockout.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView103() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing PasswordLockout" & vbCrLf &
                "        [CodeFirstDatabaseSchema.PasswordLockout](T1.PasswordLockout_ID, T1.[PasswordLockout.USER_CODE], T1.PasswordLockout_ATTEMPTS, T1.[PasswordLockout.LOCK_DATE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS PasswordLockout_ID, " & vbCrLf &
                "            T.UserCode AS [PasswordLockout.USER_CODE], " & vbCrLf &
                "            T.Attempts AS PasswordLockout_ATTEMPTS, " & vbCrLf &
                "            T.LockDate AS [PasswordLockout.LOCK_DATE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.PasswordLockouts AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.PasswordLockouts.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView104() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing PasswordLockouts" & vbCrLf &
                "        [AdvantageFramework.Security.Database.PasswordLockout](T1.PasswordLockout_ID, T1.PasswordLockout_UserCode, T1.PasswordLockout_Attempts, T1.PasswordLockout_LockDate)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS PasswordLockout_ID, " & vbCrLf &
                "            T.USER_CODE AS PasswordLockout_UserCode, " & vbCrLf &
                "            T.ATTEMPTS AS PasswordLockout_Attempts, " & vbCrLf &
                "            T.LOCK_DATE AS PasswordLockout_LockDate, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.PasswordLockout AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ReportAccess.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView105() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ReportAccess" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ReportAccess](T1.[ReportAccess.USER_ID], T1.ReportAccess_REPORTFILE, T1.ReportAccess_ENABLE)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.UserCode AS [ReportAccess.USER_ID], " & vbCrLf &
                "            T.ReportCode AS ReportAccess_REPORTFILE, " & vbCrLf &
                "            T.Enabled AS ReportAccess_ENABLE, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ReportAccesses AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ReportAccesses.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView106() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ReportAccesses" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ReportAccess](T1.ReportAccess_UserCode, T1.ReportAccess_ReportCode, T1.ReportAccess_Enabled)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.USER_ID AS ReportAccess_UserCode, " & vbCrLf &
                "            T.REPORTFILE AS ReportAccess_ReportCode, " & vbCrLf &
                "            T.ENABLE AS ReportAccess_Enabled, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ReportAccess AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.Report.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView107() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Report" & vbCrLf &
                "        [CodeFirstDatabaseSchema.Report](T1.Report_REPORTFILE, T1.Report_REPORTNAME, T1.Report_REPORTTYPE, T1.Report_REPORTACTIVE, T1.Report_REPORTCATEGORY, T1.Report_REPORTNUMBER, T1.Report_REPORTSUB, T1.Report_REPORTORIENT)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.Code AS Report_REPORTFILE, " & vbCrLf &
                "            T.Name AS Report_REPORTNAME, " & vbCrLf &
                "            T.Type AS Report_REPORTTYPE, " & vbCrLf &
                "            T.IsActive AS Report_REPORTACTIVE, " & vbCrLf &
                "            T.Category AS Report_REPORTCATEGORY, " & vbCrLf &
                "            T.Number AS Report_REPORTNUMBER, " & vbCrLf &
                "            T.SubReportNumber AS Report_REPORTSUB, " & vbCrLf &
                "            T.Orient AS Report_REPORTORIENT, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.Reports AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.Reports.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView108() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing Reports" & vbCrLf &
                "        [AdvantageFramework.Security.Database.Report](T1.Report_Code, T1.Report_Name, T1.Report_Type, T1.Report_IsActive, T1.Report_Category, T1.Report_Number, T1.Report_SubReportNumber, T1.Report_Orient)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.REPORTFILE AS Report_Code, " & vbCrLf &
                "            T.REPORTNAME AS Report_Name, " & vbCrLf &
                "            T.REPORTTYPE AS Report_Type, " & vbCrLf &
                "            T.REPORTACTIVE AS Report_IsActive, " & vbCrLf &
                "            T.REPORTCATEGORY AS Report_Category, " & vbCrLf &
                "            T.REPORTNUMBER AS Report_Number, " & vbCrLf &
                "            T.REPORTSUB AS Report_SubReportNumber, " & vbCrLf &
                "            T.REPORTORIENT AS Report_Orient, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.Report AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ServerSQLUser.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView109() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServerSQLUser" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ServerSQLUser](T1.[ServerSQLUser.principal_id], T1.ServerSQLUser_name, T1.ServerSQLUser_sid, T1.ServerSQLUser_type, T1.[ServerSQLUser.type_desc], T1.[ServerSQLUser.is_disabled], T1.[ServerSQLUser.create_date], T1.[ServerSQLUser.modify_date], T1.[ServerSQLUser.default_database_name], T1.[ServerSQLUser.default_language_name], T1.[ServerSQLUser.credential_id])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [ServerSQLUser.principal_id], " & vbCrLf &
                "            T.Name AS ServerSQLUser_name, " & vbCrLf &
                "            T.SID AS ServerSQLUser_sid, " & vbCrLf &
                "            T.Type AS ServerSQLUser_type, " & vbCrLf &
                "            T.TypeDescription AS [ServerSQLUser.type_desc], " & vbCrLf &
                "            T.IsDisabled AS [ServerSQLUser.is_disabled], " & vbCrLf &
                "            T.CreatedDate AS [ServerSQLUser.create_date], " & vbCrLf &
                "            T.ModifiedDate AS [ServerSQLUser.modify_date], " & vbCrLf &
                "            T.DefaultDatabaseName AS [ServerSQLUser.default_database_name], " & vbCrLf &
                "            T.DefaultLanguageName AS [ServerSQLUser.default_language_name], " & vbCrLf &
                "            T.CredentialID AS [ServerSQLUser.credential_id], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ServerSQLUsers AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ServerSQLUsers.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView110() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServerSQLUsers" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ServerSQLUser](T1.ServerSQLUser_ID, T1.ServerSQLUser_Name, T1.ServerSQLUser_SID, T1.ServerSQLUser_Type, T1.ServerSQLUser_TypeDescription, T1.ServerSQLUser_IsDisabled, T1.ServerSQLUser_CreatedDate, T1.ServerSQLUser_ModifiedDate, T1.ServerSQLUser_DefaultDatabaseName, T1.ServerSQLUser_DefaultLanguageName, T1.ServerSQLUser_CredentialID)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.principal_id AS ServerSQLUser_ID, " & vbCrLf &
                "            T.name AS ServerSQLUser_Name, " & vbCrLf &
                "            T.sid AS ServerSQLUser_SID, " & vbCrLf &
                "            T.type AS ServerSQLUser_Type, " & vbCrLf &
                "            T.type_desc AS ServerSQLUser_TypeDescription, " & vbCrLf &
                "            T.is_disabled AS ServerSQLUser_IsDisabled, " & vbCrLf &
                "            T.create_date AS ServerSQLUser_CreatedDate, " & vbCrLf &
                "            T.modify_date AS ServerSQLUser_ModifiedDate, " & vbCrLf &
                "            T.default_database_name AS ServerSQLUser_DefaultDatabaseName, " & vbCrLf &
                "            T.default_language_name AS ServerSQLUser_DefaultLanguageName, " & vbCrLf &
                "            T.credential_id AS ServerSQLUser_CredentialID, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ServerSQLUser AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ServiceFeeReconciliationReportColumn.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView111() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServiceFeeReconciliationReportColumn" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ServiceFeeReconciliationReportColumn](T1.[ServiceFeeReconciliationReportColumn.SERVICE_FEE_REPORT_COL_ID], T1.[ServiceFeeReconciliationReportColumn.SERVICE_FEE_REPORT_ID], T1.[ServiceFeeReconciliationReportColumn.FIELD_NAME], T1.[ServiceFeeReconciliationReportColumn.HEADER_TEXT], T1.[ServiceFeeReconciliationReportColumn.IS_VISIBLE], T1.[ServiceFeeReconciliationReportColumn.SORT_ORDER], T1.[ServiceFeeReconciliationReportColumn.SORT_INDEX], T1.[ServiceFeeReconciliationReportColumn.GROUP_INDEX], T1.ServiceFeeReconciliationReportColumn_WIDTH, T1.[ServiceFeeReconciliationReportColumn.VISIBLE_INDEX], T1.[ServiceFeeReconciliationReportColumn.GRIDVIEW_ID])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [ServiceFeeReconciliationReportColumn.SERVICE_FEE_REPORT_COL_ID], " & vbCrLf &
                "            T.ServiceFeeReconciliationReportID AS [ServiceFeeReconciliationReportColumn.SERVICE_FEE_REPORT_ID], " & vbCrLf &
                "            T.FieldName AS [ServiceFeeReconciliationReportColumn.FIELD_NAME], " & vbCrLf &
                "            T.HeaderText AS [ServiceFeeReconciliationReportColumn.HEADER_TEXT], " & vbCrLf &
                "            T.IsVisible AS [ServiceFeeReconciliationReportColumn.IS_VISIBLE], " & vbCrLf &
                "            T.SortOrder AS [ServiceFeeReconciliationReportColumn.SORT_ORDER], " & vbCrLf &
                "            T.SortIndex AS [ServiceFeeReconciliationReportColumn.SORT_INDEX], " & vbCrLf &
                "            T.GroupIndex AS [ServiceFeeReconciliationReportColumn.GROUP_INDEX], " & vbCrLf &
                "            T.Width AS ServiceFeeReconciliationReportColumn_WIDTH, " & vbCrLf &
                "            T.VisibleIndex AS [ServiceFeeReconciliationReportColumn.VISIBLE_INDEX], " & vbCrLf &
                "            T.GridViewID AS [ServiceFeeReconciliationReportColumn.GRIDVIEW_ID], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ServiceFeeReconciliationReportColumns AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ServiceFeeReconciliationReport.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView112() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServiceFeeReconciliationReport" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ServiceFeeReconciliationReport](T1.[ServiceFeeReconciliationReport.SERVICE_FEE_REPORT_ID], T1.ServiceFeeReconciliationReport_DESCRIPTION, T1.[ServiceFeeReconciliationReport.CREATED_BY], T1.[ServiceFeeReconciliationReport.CREATED_DATE], T1.[ServiceFeeReconciliationReport.ALLOW_CELL_MERGE], T1.[ServiceFeeReconciliationReport.PRINT_AUTOSIZE_COL], T1.[ServiceFeeReconciliationReport.PRINT_HEADER], T1.[ServiceFeeReconciliationReport.PRINT_FOOTER], T1.[ServiceFeeReconciliationReport.PRINT_GROUP_FOOTER], T1.[ServiceFeeReconciliationReport.PRINT_SEL_ROWS], T1.[ServiceFeeReconciliationReport.PRINT_FILTER_INFO], T1.[ServiceFeeReconciliationReport.SHOW_VIEW_CAPTION], T1.[ServiceFeeReconciliationReport.SHOW_GROUPBY_BOX], T1.[ServiceFeeReconciliationReport.SHOW_AUTOFILTER_ROW], T1.[ServiceFeeReconciliationReport.UPDATED_BY], T1.[ServiceFeeReconciliationReport.UPDATED_DATE], T1.[ServiceFeeReconciliationReport.ACTIVE_FILTER], T1.[ServiceFeeReconciliationReport.SERVICE_GROUP_BY], T1.[ServiceFeeReconciliationReport.SERVICE_SUMMARY_STYLE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [ServiceFeeReconciliationReport.SERVICE_FEE_REPORT_ID], " & vbCrLf &
                "            T.Description AS ServiceFeeReconciliationReport_DESCRIPTION, " & vbCrLf &
                "            T.CreatedByUserCode AS [ServiceFeeReconciliationReport.CREATED_BY], " & vbCrLf &
                "            T.CreatedDate AS [ServiceFeeReconciliationReport.CREATED_DATE], " & vbCrLf &
                "            T.AllowCellMerge AS [ServiceFeeReconciliationReport.ALLOW_CELL_MERGE], " & vbCrLf &
                "            T.AutoSizeColumnsWhenPrinting AS [ServiceFeeReconciliationReport.PRINT_AUTOSIZE_COL], " & vbCrLf &
                "            T.PrintHeader AS [ServiceFeeReconciliationReport.PRINT_HEADER], " & vbCrLf &
                "            T.PrintFooter AS [ServiceFeeReconciliationReport.PRINT_FOOTER], " & vbCrLf &
                "            T.PrintGroupFooter AS [ServiceFeeReconciliationReport.PRINT_GROUP_FOOTER], " & vbCrLf &
                "            T.PrintSelectedRowsOnly AS [ServiceFeeReconciliationReport.PRINT_SEL_ROWS], " & vbCrLf &
                "            T.PrintFilterInformation AS [ServiceFeeReconciliationReport.PRINT_FILTER_INFO], " & vbCrLf &
                "            T.ShowViewCaption AS [ServiceFeeReconciliationReport.SHOW_VIEW_CAPTION], " & vbCrLf &
                "            T.ShowGroupByBox AS [ServiceFeeReconciliationReport.SHOW_GROUPBY_BOX], " & vbCrLf &
                "            T.ShowAutoFilterRow AS [ServiceFeeReconciliationReport.SHOW_AUTOFILTER_ROW], " & vbCrLf &
                "            T.UpdatedByUserCode AS [ServiceFeeReconciliationReport.UPDATED_BY], " & vbCrLf &
                "            T.UpdatedDate AS [ServiceFeeReconciliationReport.UPDATED_DATE], " & vbCrLf &
                "            T.ActiveFilter AS [ServiceFeeReconciliationReport.ACTIVE_FILTER], " & vbCrLf &
                "            T.GroupByOption AS [ServiceFeeReconciliationReport.SERVICE_GROUP_BY], " & vbCrLf &
                "            T.SummaryStyle AS [ServiceFeeReconciliationReport.SERVICE_SUMMARY_STYLE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ServiceFeeReconciliationReports AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ServiceFeeReconciliationReportSummaryItem.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView113() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServiceFeeReconciliationReportSummaryItem" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ServiceFeeReconciliationReportSummaryItem](T1.[ServiceFeeReconciliationReportSummaryItem.SERVICE_FEE_REPORT_SUM_ID], T1.[ServiceFeeReconciliationReportSummaryItem.SERVICE_FEE_REPORT_ID], T1.[ServiceFeeReconciliationReportSummaryItem.SUM_TYPE], T1.[ServiceFeeReconciliationReportSummaryItem.FIELD_NAME], T1.[ServiceFeeReconciliationReportSummaryItem.COLUMN_NAME], T1.[ServiceFeeReconciliationReportSummaryItem.DISPLAY_FORMAT], T1.[ServiceFeeReconciliationReportSummaryItem.ON_FOOTER], T1.[ServiceFeeReconciliationReportSummaryItem.GRIDVIEW_ID])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [ServiceFeeReconciliationReportSummaryItem.SERVICE_FEE_REPORT_SUM_ID], " & vbCrLf &
                "            T.ServiceFeeReconciliationReportID AS [ServiceFeeReconciliationReportSummaryItem.SERVICE_FEE_REPORT_ID], " & vbCrLf &
                "            T.SummaryItemType AS [ServiceFeeReconciliationReportSummaryItem.SUM_TYPE], " & vbCrLf &
                "            T.FieldName AS [ServiceFeeReconciliationReportSummaryItem.FIELD_NAME], " & vbCrLf &
                "            T.ColumnName AS [ServiceFeeReconciliationReportSummaryItem.COLUMN_NAME], " & vbCrLf &
                "            T.DisplayFormat AS [ServiceFeeReconciliationReportSummaryItem.DISPLAY_FORMAT], " & vbCrLf &
                "            T.OnFooter AS [ServiceFeeReconciliationReportSummaryItem.ON_FOOTER], " & vbCrLf &
                "            T.GridViewID AS [ServiceFeeReconciliationReportSummaryItem.GRIDVIEW_ID], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ServiceFeeReconciliationReportSummaryItems AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ServiceFeeReconciliationReportColumns.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView114() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServiceFeeReconciliationReportColumns" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ServiceFeeReconciliationReportColumn](T1.ServiceFeeReconciliationReportColumn_ID, T1.ServiceFeeReconciliationReportColumn_ServiceFeeReconciliationReportID, T1.ServiceFeeReconciliationReportColumn_FieldName, T1.ServiceFeeReconciliationReportColumn_HeaderText, T1.ServiceFeeReconciliationReportColumn_IsVisible, T1.ServiceFeeReconciliationReportColumn_SortOrder, T1.ServiceFeeReconciliationReportColumn_SortIndex, T1.ServiceFeeReconciliationReportColumn_GroupIndex, T1.ServiceFeeReconciliationReportColumn_Width, T1.ServiceFeeReconciliationReportColumn_VisibleIndex, T1.ServiceFeeReconciliationReportColumn_GridViewID)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SERVICE_FEE_REPORT_COL_ID AS ServiceFeeReconciliationReportColumn_ID, " & vbCrLf &
                "            T.SERVICE_FEE_REPORT_ID AS ServiceFeeReconciliationReportColumn_ServiceFeeReconciliationReportID, " & vbCrLf &
                "            T.FIELD_NAME AS ServiceFeeReconciliationReportColumn_FieldName, " & vbCrLf &
                "            T.HEADER_TEXT AS ServiceFeeReconciliationReportColumn_HeaderText, " & vbCrLf &
                "            T.IS_VISIBLE AS ServiceFeeReconciliationReportColumn_IsVisible, " & vbCrLf &
                "            T.SORT_ORDER AS ServiceFeeReconciliationReportColumn_SortOrder, " & vbCrLf &
                "            T.SORT_INDEX AS ServiceFeeReconciliationReportColumn_SortIndex, " & vbCrLf &
                "            T.GROUP_INDEX AS ServiceFeeReconciliationReportColumn_GroupIndex, " & vbCrLf &
                "            T.WIDTH AS ServiceFeeReconciliationReportColumn_Width, " & vbCrLf &
                "            T.VISIBLE_INDEX AS ServiceFeeReconciliationReportColumn_VisibleIndex, " & vbCrLf &
                "            T.GRIDVIEW_ID AS ServiceFeeReconciliationReportColumn_GridViewID, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ServiceFeeReconciliationReportColumn AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ServiceFeeReconciliationReports.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView115() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServiceFeeReconciliationReports" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ServiceFeeReconciliationReport](T1.ServiceFeeReconciliationReport_ID, T1.ServiceFeeReconciliationReport_Description, T1.ServiceFeeReconciliationReport_CreatedByUserCode, T1.ServiceFeeReconciliationReport_CreatedDate, T1.ServiceFeeReconciliationReport_AllowCellMerge, T1.ServiceFeeReconciliationReport_AutoSizeColumnsWhenPrinting, T1.ServiceFeeReconciliationReport_PrintHeader, T1.ServiceFeeReconciliationReport_PrintFooter, T1.ServiceFeeReconciliationReport_PrintGroupFooter, T1.ServiceFeeReconciliationReport_PrintSelectedRowsOnly, T1.ServiceFeeReconciliationReport_PrintFilterInformation, T1.ServiceFeeReconciliationReport_ShowViewCaption, T1.ServiceFeeReconciliationReport_ShowGroupByBox, T1.ServiceFeeReconciliationReport_ShowAutoFilterRow, T1.ServiceFeeReconciliationReport_UpdatedByUserCode, T1.ServiceFeeReconciliationReport_UpdatedDate, T1.ServiceFeeReconciliationReport_ActiveFilter, T1.ServiceFeeReconciliationReport_GroupByOption, T1.ServiceFeeReconciliationReport_SummaryStyle)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SERVICE_FEE_REPORT_ID AS ServiceFeeReconciliationReport_ID, " & vbCrLf &
                "            T.DESCRIPTION AS ServiceFeeReconciliationReport_Description, " & vbCrLf &
                "            T.CREATED_BY AS ServiceFeeReconciliationReport_CreatedByUserCode, " & vbCrLf &
                "            T.CREATED_DATE AS ServiceFeeReconciliationReport_CreatedDate, " & vbCrLf &
                "            T.ALLOW_CELL_MERGE AS ServiceFeeReconciliationReport_AllowCellMerge, " & vbCrLf &
                "            T.PRINT_AUTOSIZE_COL AS ServiceFeeReconciliationReport_AutoSizeColumnsWhenPrinting, " & vbCrLf &
                "            T.PRINT_HEADER AS ServiceFeeReconciliationReport_PrintHeader, " & vbCrLf &
                "            T.PRINT_FOOTER AS ServiceFeeReconciliationReport_PrintFooter, " & vbCrLf &
                "            T.PRINT_GROUP_FOOTER AS ServiceFeeReconciliationReport_PrintGroupFooter, " & vbCrLf &
                "            T.PRINT_SEL_ROWS AS ServiceFeeReconciliationReport_PrintSelectedRowsOnly, " & vbCrLf &
                "            T.PRINT_FILTER_INFO AS ServiceFeeReconciliationReport_PrintFilterInformation, " & vbCrLf &
                "            T.SHOW_VIEW_CAPTION AS ServiceFeeReconciliationReport_ShowViewCaption, " & vbCrLf &
                "            T.SHOW_GROUPBY_BOX AS ServiceFeeReconciliationReport_ShowGroupByBox, " & vbCrLf &
                "            T.SHOW_AUTOFILTER_ROW AS ServiceFeeReconciliationReport_ShowAutoFilterRow, " & vbCrLf &
                "            T.UPDATED_BY AS ServiceFeeReconciliationReport_UpdatedByUserCode, " & vbCrLf &
                "            T.UPDATED_DATE AS ServiceFeeReconciliationReport_UpdatedDate, " & vbCrLf &
                "            T.ACTIVE_FILTER AS ServiceFeeReconciliationReport_ActiveFilter, " & vbCrLf &
                "            T.SERVICE_GROUP_BY AS ServiceFeeReconciliationReport_GroupByOption, " & vbCrLf &
                "            T.SERVICE_SUMMARY_STYLE AS ServiceFeeReconciliationReport_SummaryStyle, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ServiceFeeReconciliationReport AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ServiceFeeReconciliationReportSummaryItems.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView116() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServiceFeeReconciliationReportSummaryItems" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ServiceFeeReconciliationReportSummaryItem](T1.ServiceFeeReconciliationReportSummaryItem_ID, T1.ServiceFeeReconciliationReportSummaryItem_ServiceFeeReconciliationReportID, T1.ServiceFeeReconciliationReportSummaryItem_SummaryItemType, T1.ServiceFeeReconciliationReportSummaryItem_FieldName, T1.ServiceFeeReconciliationReportSummaryItem_ColumnName, T1.ServiceFeeReconciliationReportSummaryItem_DisplayFormat, T1.ServiceFeeReconciliationReportSummaryItem_OnFooter, T1.ServiceFeeReconciliationReportSummaryItem_GridViewID)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SERVICE_FEE_REPORT_SUM_ID AS ServiceFeeReconciliationReportSummaryItem_ID, " & vbCrLf &
                "            T.SERVICE_FEE_REPORT_ID AS ServiceFeeReconciliationReportSummaryItem_ServiceFeeReconciliationReportID, " & vbCrLf &
                "            T.SUM_TYPE AS ServiceFeeReconciliationReportSummaryItem_SummaryItemType, " & vbCrLf &
                "            T.FIELD_NAME AS ServiceFeeReconciliationReportSummaryItem_FieldName, " & vbCrLf &
                "            T.COLUMN_NAME AS ServiceFeeReconciliationReportSummaryItem_ColumnName, " & vbCrLf &
                "            T.DISPLAY_FORMAT AS ServiceFeeReconciliationReportSummaryItem_DisplayFormat, " & vbCrLf &
                "            T.ON_FOOTER AS ServiceFeeReconciliationReportSummaryItem_OnFooter, " & vbCrLf &
                "            T.GRIDVIEW_ID AS ServiceFeeReconciliationReportSummaryItem_GridViewID, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ServiceFeeReconciliationReportSummaryItem AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ServiceFeeReconciliationSettingCDP.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView117() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServiceFeeReconciliationSettingCDP" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ServiceFeeReconciliationSettingCDP](T1.[ServiceFeeReconciliationSettingCDP.SERVICE_FEE_DEF_CDP], T1.[ServiceFeeReconciliationSettingCDP.SEC_USER_ID], T1.[ServiceFeeReconciliationSettingCDP.CL_CODE], T1.[ServiceFeeReconciliationSettingCDP.DIV_CODE], T1.[ServiceFeeReconciliationSettingCDP.PRD_CODE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [ServiceFeeReconciliationSettingCDP.SERVICE_FEE_DEF_CDP], " & vbCrLf &
                "            T.UserID AS [ServiceFeeReconciliationSettingCDP.SEC_USER_ID], " & vbCrLf &
                "            T.ClientCode AS [ServiceFeeReconciliationSettingCDP.CL_CODE], " & vbCrLf &
                "            T.DivisionCode AS [ServiceFeeReconciliationSettingCDP.DIV_CODE], " & vbCrLf &
                "            T.ProductCode AS [ServiceFeeReconciliationSettingCDP.PRD_CODE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ServiceFeeReconciliationSettingCDPs AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ServiceFeeReconciliationSettingCDPs.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView118() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServiceFeeReconciliationSettingCDPs" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ServiceFeeReconciliationSettingCDP](T1.ServiceFeeReconciliationSettingCDP_ID, T1.ServiceFeeReconciliationSettingCDP_UserID, T1.ServiceFeeReconciliationSettingCDP_ClientCode, T1.ServiceFeeReconciliationSettingCDP_DivisionCode, T1.ServiceFeeReconciliationSettingCDP_ProductCode)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.SERVICE_FEE_DEF_CDP AS ServiceFeeReconciliationSettingCDP_ID, " & vbCrLf &
                "            T.SEC_USER_ID AS ServiceFeeReconciliationSettingCDP_UserID, " & vbCrLf &
                "            T.CL_CODE AS ServiceFeeReconciliationSettingCDP_ClientCode, " & vbCrLf &
                "            T.DIV_CODE AS ServiceFeeReconciliationSettingCDP_DivisionCode, " & vbCrLf &
                "            T.PRD_CODE AS ServiceFeeReconciliationSettingCDP_ProductCode, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ServiceFeeReconciliationSettingCDP AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ServiceFeeReconciliationSettingDetail.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView119() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServiceFeeReconciliationSettingDetail" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ServiceFeeReconciliationSettingDetail](T1.[ServiceFeeReconciliationSettingDetail.USER_ID], T1.[ServiceFeeReconciliationSettingDetail.DTL_TYPE], T1.[ServiceFeeReconciliationSettingDetail.DTL_CODE])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.UserCode AS [ServiceFeeReconciliationSettingDetail.USER_ID], " & vbCrLf &
                "            T.Type AS [ServiceFeeReconciliationSettingDetail.DTL_TYPE], " & vbCrLf &
                "            T.Code AS [ServiceFeeReconciliationSettingDetail.DTL_CODE], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ServiceFeeReconciliationSettingDetails AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ServiceFeeReconciliationSettingDetails.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView120() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServiceFeeReconciliationSettingDetails" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ServiceFeeReconciliationSettingDetail](T1.ServiceFeeReconciliationSettingDetail_UserCode, T1.ServiceFeeReconciliationSettingDetail_Type, T1.ServiceFeeReconciliationSettingDetail_Code)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.USER_ID AS ServiceFeeReconciliationSettingDetail_UserCode, " & vbCrLf &
                "            T.DTL_TYPE AS ServiceFeeReconciliationSettingDetail_Type, " & vbCrLf &
                "            T.DTL_CODE AS ServiceFeeReconciliationSettingDetail_Code, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ServiceFeeReconciliationSettingDetail AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.ServiceFeeReconciliationSetting.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView121() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServiceFeeReconciliationSetting" & vbCrLf &
                "        [CodeFirstDatabaseSchema.ServiceFeeReconciliationSetting](T1.[ServiceFeeReconciliationSetting.USER_ID], T1.[ServiceFeeReconciliationSetting.INCOME_ONLY_INCL], T1.[ServiceFeeReconciliationSetting.PRODUCT_COMM_INCL], T1.[ServiceFeeReconciliationSetting.MEDIA_COMM_INCL], T1.[ServiceFeeReconciliationSetting.STD_FEE_JOB_COMP], T1.[ServiceFeeReconciliationSetting.STD_FEE_SC], T1.[ServiceFeeReconciliationSetting.STD_FEE_FUNC], T1.[ServiceFeeReconciliationSetting.PROD_COMM_SC], T1.[ServiceFeeReconciliationSetting.PROD_COMM_FUNC], T1.[ServiceFeeReconciliationSetting.BROAD_COMM], T1.[ServiceFeeReconciliationSetting.MAG_COMM], T1.[ServiceFeeReconciliationSetting.NEWS_COMM], T1.[ServiceFeeReconciliationSetting.INT_COMM], T1.[ServiceFeeReconciliationSetting.OOH_COMM], T1.[ServiceFeeReconciliationSetting.CDP_INCL], T1.[ServiceFeeReconciliationSetting.UN_REC_ONLY], T1.[ServiceFeeReconciliationSetting.FEETIME_TYPE_INCL_STD], T1.[ServiceFeeReconciliationSetting.FEETIME_TYPE_INCL_PROD_COMM], T1.[ServiceFeeReconciliationSetting.FEETIME_TYPE_INCL_MEDIA_COMM], T1.[ServiceFeeReconciliationSetting.PRIMARY_DISPL_OPT], T1.[ServiceFeeReconciliationSetting.GRD_DISPL_OPT_CMPN], T1.[ServiceFeeReconciliationSetting.GRD_DISPL_OPT_JOB_NBR], T1.[ServiceFeeReconciliationSetting.GRD_DISPL_OPT_JOB_NAME], T1.[ServiceFeeReconciliationSetting.GRD_DISPL_OPT_COMP_NBR], T1.[ServiceFeeReconciliationSetting.GRD_DISPL_OPT_COMP_NAME], T1.[ServiceFeeReconciliationSetting.GRD_DISPL_OPT_FUNC], T1.[ServiceFeeReconciliationSetting.SERVICE_FEE_SEL], T1.[ServiceFeeReconciliationSetting.SERVICE_GROUP_BY], T1.[ServiceFeeReconciliationSetting.SERVICE_SUMMARY_STYLE], T1.[ServiceFeeReconciliationSetting.INCLD_SERV_FEE_TYPE_LEVEL], T1.[ServiceFeeReconciliationSetting.ADD_FEE_DESC_TO_GRP_BY])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.UserCode AS [ServiceFeeReconciliationSetting.USER_ID], " & vbCrLf &
                "            T.IncludeIncomeOnly AS [ServiceFeeReconciliationSetting.INCOME_ONLY_INCL], " & vbCrLf &
                "            T.IncludeProductionCommission AS [ServiceFeeReconciliationSetting.PRODUCT_COMM_INCL], " & vbCrLf &
                "            T.IncludeMediaCommission AS [ServiceFeeReconciliationSetting.MEDIA_COMM_INCL], " & vbCrLf &
                "            T.IncomeOnlyJobCompMarkedAsFee AS [ServiceFeeReconciliationSetting.STD_FEE_JOB_COMP], " & vbCrLf &
                "            T.IncomeOnlyPostedBasedOnSalesClass AS [ServiceFeeReconciliationSetting.STD_FEE_SC], " & vbCrLf &
                "            T.IncomeOnlyPostedBasedOnFunction AS [ServiceFeeReconciliationSetting.STD_FEE_FUNC], " & vbCrLf &
                "            T.ProductionCommissionPostedBasedOnSalesClass AS [ServiceFeeReconciliationSetting.PROD_COMM_SC], " & vbCrLf &
                "            T.ProductionCommissionPostedBasedOnFunction AS [ServiceFeeReconciliationSetting.PROD_COMM_FUNC], " & vbCrLf &
                "            T.BroadcastCommission AS [ServiceFeeReconciliationSetting.BROAD_COMM], " & vbCrLf &
                "            T.MagazineCommission AS [ServiceFeeReconciliationSetting.MAG_COMM], " & vbCrLf &
                "            T.NewspaperCommission AS [ServiceFeeReconciliationSetting.NEWS_COMM], " & vbCrLf &
                "            T.InternetCommission AS [ServiceFeeReconciliationSetting.INT_COMM], " & vbCrLf &
                "            T.OutOfHomeCommission AS [ServiceFeeReconciliationSetting.OOH_COMM], " & vbCrLf &
                "            T.ClientDivisionProductIncludeOption AS [ServiceFeeReconciliationSetting.CDP_INCL], " & vbCrLf &
                "            T.IncludeUnreconciledOnly AS [ServiceFeeReconciliationSetting.UN_REC_ONLY], " & vbCrLf &
                "            T.IncludeIncomeOnlyFeeTime AS [ServiceFeeReconciliationSetting.FEETIME_TYPE_INCL_STD], " & vbCrLf &
                "            T.IncludeProductionCommissionFeeTime AS [ServiceFeeReconciliationSetting.FEETIME_TYPE_INCL_PROD_COMM], " & vbCrLf &
                "            T.IncludeMediaCommissionFeeTime AS [ServiceFeeReconciliationSetting.FEETIME_TYPE_INCL_MEDIA_COMM], " & vbCrLf &
                "            T.PrimaryDisplayOption AS [ServiceFeeReconciliationSetting.PRIMARY_DISPL_OPT], " & vbCrLf &
                "            T.DisplayCampaign AS [ServiceFeeReconciliationSetting.GRD_DISPL_OPT_CMPN], " & vbCrLf &
                "            T.DisplayJobNumber AS [ServiceFeeReconciliationSetting.GRD_DISPL_OPT_JOB_NBR], " & vbCrLf &
                "            T.DisplayJobName AS [ServiceFeeReconciliationSetting.GRD_DISPL_OPT_JOB_NAME], " & vbCrLf &
                "            T.DisplayJobComponentNumber AS [ServiceFeeReconciliationSetting.GRD_DISPL_OPT_COMP_NBR], " & vbCrLf &
                "            T.DisplayJobComponentName AS [ServiceFeeReconciliationSetting.GRD_DISPL_OPT_COMP_NAME], " & vbCrLf &
                "            T.DisplayFunction AS [ServiceFeeReconciliationSetting.GRD_DISPL_OPT_FUNC], " & vbCrLf &
                "            T.ServiceFeeTypeSelection AS [ServiceFeeReconciliationSetting.SERVICE_FEE_SEL], " & vbCrLf &
                "            T.GroupByOption AS [ServiceFeeReconciliationSetting.SERVICE_GROUP_BY], " & vbCrLf &
                "            T.SummaryStyle AS [ServiceFeeReconciliationSetting.SERVICE_SUMMARY_STYLE], " & vbCrLf &
                "            T.IncludeServiceFeeTypeLevel AS [ServiceFeeReconciliationSetting.INCLD_SERV_FEE_TYPE_LEVEL], " & vbCrLf &
                "            T.AddFeeDescriptionToGroupBy AS [ServiceFeeReconciliationSetting.ADD_FEE_DESC_TO_GRP_BY], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.ServiceFeeReconciliationSettings AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.ServiceFeeReconciliationSettings.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView122() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing ServiceFeeReconciliationSettings" & vbCrLf &
                "        [AdvantageFramework.Security.Database.ServiceFeeReconciliationSetting](T1.ServiceFeeReconciliationSetting_UserCode, T1.ServiceFeeReconciliationSetting_IncludeIncomeOnly, T1.ServiceFeeReconciliationSetting_IncludeProductionCommission, T1.ServiceFeeReconciliationSetting_IncludeMediaCommission, T1.ServiceFeeReconciliationSetting_IncomeOnlyJobCompMarkedAsFee, T1.ServiceFeeReconciliationSetting_IncomeOnlyPostedBasedOnSalesClass, T1.ServiceFeeReconciliationSetting_IncomeOnlyPostedBasedOnFunction, T1.ServiceFeeReconciliationSetting_ProductionCommissionPostedBasedOnSalesClass, T1.ServiceFeeReconciliationSetting_ProductionCommissionPostedBasedOnFunction, T1.ServiceFeeReconciliationSetting_BroadcastCommission, T1.ServiceFeeReconciliationSetting_MagazineCommission, T1.ServiceFeeReconciliationSetting_NewspaperCommission, T1.ServiceFeeReconciliationSetting_InternetCommission, T1.ServiceFeeReconciliationSetting_OutOfHomeCommission, T1.ServiceFeeReconciliationSetting_ClientDivisionProductIncludeOption, T1.ServiceFeeReconciliationSetting_IncludeUnreconciledOnly, T1.ServiceFeeReconciliationSetting_IncludeIncomeOnlyFeeTime, T1.ServiceFeeReconciliationSetting_IncludeProductionCommissionFeeTime, T1.ServiceFeeReconciliationSetting_IncludeMediaCommissionFeeTime, T1.ServiceFeeReconciliationSetting_PrimaryDisplayOption, T1.ServiceFeeReconciliationSetting_DisplayCampaign, T1.ServiceFeeReconciliationSetting_DisplayJobNumber, T1.ServiceFeeReconciliationSetting_DisplayJobName, T1.ServiceFeeReconciliationSetting_DisplayJobComponentNumber, T1.ServiceFeeReconciliationSetting_DisplayJobComponentName, T1.ServiceFeeReconciliationSetting_DisplayFunction, T1.ServiceFeeReconciliationSetting_ServiceFeeTypeSelection, T1.ServiceFeeReconciliationSetting_GroupByOption, T1.ServiceFeeReconciliationSetting_SummaryStyle, T1.ServiceFeeReconciliationSetting_IncludeServiceFeeTypeLevel, T1.ServiceFeeReconciliationSetting_AddFeeDescriptionToGroupBy)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.USER_ID AS ServiceFeeReconciliationSetting_UserCode, " & vbCrLf &
                "            T.INCOME_ONLY_INCL AS ServiceFeeReconciliationSetting_IncludeIncomeOnly, " & vbCrLf &
                "            T.PRODUCT_COMM_INCL AS ServiceFeeReconciliationSetting_IncludeProductionCommission, " & vbCrLf &
                "            T.MEDIA_COMM_INCL AS ServiceFeeReconciliationSetting_IncludeMediaCommission, " & vbCrLf &
                "            T.STD_FEE_JOB_COMP AS ServiceFeeReconciliationSetting_IncomeOnlyJobCompMarkedAsFee, " & vbCrLf &
                "            T.STD_FEE_SC AS ServiceFeeReconciliationSetting_IncomeOnlyPostedBasedOnSalesClass, " & vbCrLf &
                "            T.STD_FEE_FUNC AS ServiceFeeReconciliationSetting_IncomeOnlyPostedBasedOnFunction, " & vbCrLf &
                "            T.PROD_COMM_SC AS ServiceFeeReconciliationSetting_ProductionCommissionPostedBasedOnSalesClass, " & vbCrLf &
                "            T.PROD_COMM_FUNC AS ServiceFeeReconciliationSetting_ProductionCommissionPostedBasedOnFunction, " & vbCrLf &
                "            T.BROAD_COMM AS ServiceFeeReconciliationSetting_BroadcastCommission, " & vbCrLf &
                "            T.MAG_COMM AS ServiceFeeReconciliationSetting_MagazineCommission, " & vbCrLf &
                "            T.NEWS_COMM AS ServiceFeeReconciliationSetting_NewspaperCommission, " & vbCrLf &
                "            T.INT_COMM AS ServiceFeeReconciliationSetting_InternetCommission, " & vbCrLf &
                "            T.OOH_COMM AS ServiceFeeReconciliationSetting_OutOfHomeCommission, " & vbCrLf &
                "            T.CDP_INCL AS ServiceFeeReconciliationSetting_ClientDivisionProductIncludeOption, " & vbCrLf &
                "            T.UN_REC_ONLY AS ServiceFeeReconciliationSetting_IncludeUnreconciledOnly, " & vbCrLf &
                "            T.FEETIME_TYPE_INCL_STD AS ServiceFeeReconciliationSetting_IncludeIncomeOnlyFeeTime, " & vbCrLf &
                "            T.FEETIME_TYPE_INCL_PROD_COMM AS ServiceFeeReconciliationSetting_IncludeProductionCommissionFeeTime, " & vbCrLf &
                "            T.FEETIME_TYPE_INCL_MEDIA_COMM AS ServiceFeeReconciliationSetting_IncludeMediaCommissionFeeTime, " & vbCrLf &
                "            T.PRIMARY_DISPL_OPT AS ServiceFeeReconciliationSetting_PrimaryDisplayOption, " & vbCrLf &
                "            T.GRD_DISPL_OPT_CMPN AS ServiceFeeReconciliationSetting_DisplayCampaign, " & vbCrLf &
                "            T.GRD_DISPL_OPT_JOB_NBR AS ServiceFeeReconciliationSetting_DisplayJobNumber, " & vbCrLf &
                "            T.GRD_DISPL_OPT_JOB_NAME AS ServiceFeeReconciliationSetting_DisplayJobName, " & vbCrLf &
                "            T.GRD_DISPL_OPT_COMP_NBR AS ServiceFeeReconciliationSetting_DisplayJobComponentNumber, " & vbCrLf &
                "            T.GRD_DISPL_OPT_COMP_NAME AS ServiceFeeReconciliationSetting_DisplayJobComponentName, " & vbCrLf &
                "            T.GRD_DISPL_OPT_FUNC AS ServiceFeeReconciliationSetting_DisplayFunction, " & vbCrLf &
                "            T.SERVICE_FEE_SEL AS ServiceFeeReconciliationSetting_ServiceFeeTypeSelection, " & vbCrLf &
                "            T.SERVICE_GROUP_BY AS ServiceFeeReconciliationSetting_GroupByOption, " & vbCrLf &
                "            T.SERVICE_SUMMARY_STYLE AS ServiceFeeReconciliationSetting_SummaryStyle, " & vbCrLf &
                "            T.INCLD_SERV_FEE_TYPE_LEVEL AS ServiceFeeReconciliationSetting_IncludeServiceFeeTypeLevel, " & vbCrLf &
                "            T.ADD_FEE_DESC_TO_GRP_BY AS ServiceFeeReconciliationSetting_AddFeeDescriptionToGroupBy, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.ServiceFeeReconciliationSetting AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserFavoriteModule.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView123() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserFavoriteModule" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserFavoriteModule](T1.UserFavoriteModule_USERID, T1.UserFavoriteModule_TABNO, T1.UserFavoriteModule_APPID)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.UserCode AS UserFavoriteModule_USERID, " & vbCrLf &
                "            T.WorkspaceID AS UserFavoriteModule_TABNO, " & vbCrLf &
                "            T.ModuleID AS UserFavoriteModule_APPID, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserFavoriteModules AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserFavoriteModules.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView124() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserFavoriteModules" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserFavoriteModule](T1.UserFavoriteModule_UserCode, T1.UserFavoriteModule_WorkspaceID, T1.UserFavoriteModule_ModuleID)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.USERID AS UserFavoriteModule_UserCode, " & vbCrLf &
                "            T.TABNO AS UserFavoriteModule_WorkspaceID, " & vbCrLf &
                "            T.APPID AS UserFavoriteModule_ModuleID, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserFavoriteModule AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserPermission.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView125() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserPermission" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserPermission](T1.UserPermission_ID, T1.UserPermission_ApplicationID, T1.UserPermission_ModuleID, T1.UserPermission_ModuleCode, T1.UserPermission_Module, T1.UserPermission_ModuleIsCategory, T1.UserPermission_ModuleInfoID, T1.UserPermission_UserID, T1.UserPermission_UserCode, T1.UserPermission_EmployeeCode, T1.UserPermission_IsBlocked, T1.UserPermission_CanPrint, T1.UserPermission_CanUpdate, T1.UserPermission_CanAdd, T1.UserPermission_Custom1, T1.UserPermission_Custom2, T1.UserPermission_ApplicationIsBlocked, T1.UserPermission_ApplicationCanPrint, T1.UserPermission_ApplicationCanUpdate, T1.UserPermission_ApplicationCanAdd, T1.UserPermission_ApplicationCustom1, T1.UserPermission_ApplicationCustom2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS UserPermission_ID, " & vbCrLf &
                "            T.ApplicationID AS UserPermission_ApplicationID, " & vbCrLf &
                "            T.ModuleID AS UserPermission_ModuleID, " & vbCrLf &
                "            T.ModuleCode AS UserPermission_ModuleCode, " & vbCrLf &
                "            T.Module AS UserPermission_Module, " & vbCrLf &
                "            T.ModuleIsCategory AS UserPermission_ModuleIsCategory, " & vbCrLf &
                "            T.ModuleInfoID AS UserPermission_ModuleInfoID, " & vbCrLf &
                "            T.UserID AS UserPermission_UserID, " & vbCrLf &
                "            T.UserCode AS UserPermission_UserCode, " & vbCrLf &
                "            T.EmployeeCode AS UserPermission_EmployeeCode, " & vbCrLf &
                "            T.IsBlocked AS UserPermission_IsBlocked, " & vbCrLf &
                "            T.CanPrint AS UserPermission_CanPrint, " & vbCrLf &
                "            T.CanUpdate AS UserPermission_CanUpdate, " & vbCrLf &
                "            T.CanAdd AS UserPermission_CanAdd, " & vbCrLf &
                "            T.Custom1 AS UserPermission_Custom1, " & vbCrLf &
                "            T.Custom2 AS UserPermission_Custom2, " & vbCrLf &
                "            T.ApplicationIsBlocked AS UserPermission_ApplicationIsBlocked, " & vbCrLf &
                "            T.ApplicationCanPrint AS UserPermission_ApplicationCanPrint, " & vbCrLf &
                "            T.ApplicationCanUpdate AS UserPermission_ApplicationCanUpdate, " & vbCrLf &
                "            T.ApplicationCanAdd AS UserPermission_ApplicationCanAdd, " & vbCrLf &
                "            T.ApplicationCustom1 AS UserPermission_ApplicationCustom1, " & vbCrLf &
                "            T.ApplicationCustom2 AS UserPermission_ApplicationCustom2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserPermissions AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserPermissions.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView126() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserPermissions" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserPermission](T1.UserPermission_ID, T1.UserPermission_ApplicationID, T1.UserPermission_ModuleID, T1.UserPermission_ModuleCode, T1.UserPermission_Module, T1.UserPermission_ModuleIsCategory, T1.UserPermission_ModuleInfoID, T1.UserPermission_UserID, T1.UserPermission_UserCode, T1.UserPermission_EmployeeCode, T1.UserPermission_IsBlocked, T1.UserPermission_CanPrint, T1.UserPermission_CanUpdate, T1.UserPermission_CanAdd, T1.UserPermission_Custom1, T1.UserPermission_Custom2, T1.UserPermission_ApplicationIsBlocked, T1.UserPermission_ApplicationCanPrint, T1.UserPermission_ApplicationCanUpdate, T1.UserPermission_ApplicationCanAdd, T1.UserPermission_ApplicationCustom1, T1.UserPermission_ApplicationCustom2)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS UserPermission_ID, " & vbCrLf &
                "            T.ApplicationID AS UserPermission_ApplicationID, " & vbCrLf &
                "            T.ModuleID AS UserPermission_ModuleID, " & vbCrLf &
                "            T.ModuleCode AS UserPermission_ModuleCode, " & vbCrLf &
                "            T.Module AS UserPermission_Module, " & vbCrLf &
                "            T.ModuleIsCategory AS UserPermission_ModuleIsCategory, " & vbCrLf &
                "            T.ModuleInfoID AS UserPermission_ModuleInfoID, " & vbCrLf &
                "            T.UserID AS UserPermission_UserID, " & vbCrLf &
                "            T.UserCode AS UserPermission_UserCode, " & vbCrLf &
                "            T.EmployeeCode AS UserPermission_EmployeeCode, " & vbCrLf &
                "            T.IsBlocked AS UserPermission_IsBlocked, " & vbCrLf &
                "            T.CanPrint AS UserPermission_CanPrint, " & vbCrLf &
                "            T.CanUpdate AS UserPermission_CanUpdate, " & vbCrLf &
                "            T.CanAdd AS UserPermission_CanAdd, " & vbCrLf &
                "            T.Custom1 AS UserPermission_Custom1, " & vbCrLf &
                "            T.Custom2 AS UserPermission_Custom2, " & vbCrLf &
                "            T.ApplicationIsBlocked AS UserPermission_ApplicationIsBlocked, " & vbCrLf &
                "            T.ApplicationCanPrint AS UserPermission_ApplicationCanPrint, " & vbCrLf &
                "            T.ApplicationCanUpdate AS UserPermission_ApplicationCanUpdate, " & vbCrLf &
                "            T.ApplicationCanAdd AS UserPermission_ApplicationCanAdd, " & vbCrLf &
                "            T.ApplicationCustom1 AS UserPermission_ApplicationCustom1, " & vbCrLf &
                "            T.ApplicationCustom2 AS UserPermission_ApplicationCustom2, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserPermission AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserPermissionsReport.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView127() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserPermissionsReport" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserPermissionsReport](T1.UserPermissionsReport_ID, T1.UserPermissionsReport_ApplicationID, T1.UserPermissionsReport_ParentModuleID, T1.UserPermissionsReport_ParentModule, T1.UserPermissionsReport_ParentModuleSortOrder, T1.UserPermissionsReport_SubParentModuleID, T1.UserPermissionsReport_SubParentModule, T1.UserPermissionsReport_SubParentModuleSortOrder, T1.UserPermissionsReport_SubSubParentModuleID, T1.UserPermissionsReport_SubSubParentModule, T1.UserPermissionsReport_SubSubParentModuleSortOrder, T1.UserPermissionsReport_ModuleID, T1.UserPermissionsReport_ModuleCode, T1.UserPermissionsReport_Module, T1.UserPermissionsReport_ModuleIsCategory, T1.UserPermissionsReport_ModuleInfoID, T1.UserPermissionsReport_ModuleSortOrder, T1.UserPermissionsReport_ModuleHasCustomPermission, T1.UserPermissionsReport_UserID, T1.UserPermissionsReport_UserCode, T1.UserPermissionsReport_EmployeeCode, T1.UserPermissionsReport_IsBlocked, T1.UserPermissionsReport_CanPrint, T1.UserPermissionsReport_CanUpdate, T1.UserPermissionsReport_CanAdd, T1.UserPermissionsReport_Custom1, T1.UserPermissionsReport_Custom2, T1.UserPermissionsReport_ApplicationIsBlocked, T1.UserPermissionsReport_ApplicationCanPrint, T1.UserPermissionsReport_ApplicationCanUpdate, T1.UserPermissionsReport_ApplicationCanAdd, T1.UserPermissionsReport_ApplicationCustom1, T1.UserPermissionsReport_ApplicationCustom2, T1.UserPermissionsReport_Employee)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS UserPermissionsReport_ID, " & vbCrLf &
                "            T.ApplicationID AS UserPermissionsReport_ApplicationID, " & vbCrLf &
                "            T.ParentModuleID AS UserPermissionsReport_ParentModuleID, " & vbCrLf &
                "            T.ParentModule AS UserPermissionsReport_ParentModule, " & vbCrLf &
                "            T.ParentModuleSortOrder AS UserPermissionsReport_ParentModuleSortOrder, " & vbCrLf &
                "            T.SubParentModuleID AS UserPermissionsReport_SubParentModuleID, " & vbCrLf &
                "            T.SubParentModule AS UserPermissionsReport_SubParentModule, " & vbCrLf &
                "            T.SubParentModuleSortOrder AS UserPermissionsReport_SubParentModuleSortOrder, " & vbCrLf &
                "            T.SubSubParentModuleID AS UserPermissionsReport_SubSubParentModuleID, " & vbCrLf &
                "            T.SubSubParentModule AS UserPermissionsReport_SubSubParentModule, " & vbCrLf &
                "            T.SubSubParentModuleSortOrder AS UserPermissionsReport_SubSubParentModuleSortOrder, " & vbCrLf &
                "            T.ModuleID AS UserPermissionsReport_ModuleID, " & vbCrLf &
                "            T.ModuleCode AS UserPermissionsReport_ModuleCode, " & vbCrLf &
                "            T.Module AS UserPermissionsReport_Module, " & vbCrLf &
                "            T.ModuleIsCategory AS UserPermissionsReport_ModuleIsCategory, " & vbCrLf &
                "            T.ModuleInfoID AS UserPermissionsReport_ModuleInfoID, " & vbCrLf &
                "            T.ModuleSortOrder AS UserPermissionsReport_ModuleSortOrder, " & vbCrLf &
                "            T.ModuleHasCustomPermission AS UserPermissionsReport_ModuleHasCustomPermission, " & vbCrLf &
                "            T.UserID AS UserPermissionsReport_UserID, " & vbCrLf &
                "            T.UserCode AS UserPermissionsReport_UserCode, " & vbCrLf &
                "            T.EmployeeCode AS UserPermissionsReport_EmployeeCode, " & vbCrLf &
                "            T.IsBlocked AS UserPermissionsReport_IsBlocked, " & vbCrLf &
                "            T.CanPrint AS UserPermissionsReport_CanPrint, " & vbCrLf &
                "            T.CanUpdate AS UserPermissionsReport_CanUpdate, " & vbCrLf &
                "            T.CanAdd AS UserPermissionsReport_CanAdd, " & vbCrLf &
                "            T.Custom1 AS UserPermissionsReport_Custom1, " & vbCrLf &
                "            T.Custom2 AS UserPermissionsReport_Custom2, " & vbCrLf &
                "            T.ApplicationIsBlocked AS UserPermissionsReport_ApplicationIsBlocked, " & vbCrLf &
                "            T.ApplicationCanPrint AS UserPermissionsReport_ApplicationCanPrint, " & vbCrLf &
                "            T.ApplicationCanUpdate AS UserPermissionsReport_ApplicationCanUpdate, " & vbCrLf &
                "            T.ApplicationCanAdd AS UserPermissionsReport_ApplicationCanAdd, " & vbCrLf &
                "            T.ApplicationCustom1 AS UserPermissionsReport_ApplicationCustom1, " & vbCrLf &
                "            T.ApplicationCustom2 AS UserPermissionsReport_ApplicationCustom2, " & vbCrLf &
                "            T.Employee AS UserPermissionsReport_Employee, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserPermissionsReports AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserPermissionsReports.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView128() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserPermissionsReports" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserPermissionsReport](T1.UserPermissionsReport_ID, T1.UserPermissionsReport_ApplicationID, T1.UserPermissionsReport_ParentModuleID, T1.UserPermissionsReport_ParentModule, T1.UserPermissionsReport_ParentModuleSortOrder, T1.UserPermissionsReport_SubParentModuleID, T1.UserPermissionsReport_SubParentModule, T1.UserPermissionsReport_SubParentModuleSortOrder, T1.UserPermissionsReport_SubSubParentModuleID, T1.UserPermissionsReport_SubSubParentModule, T1.UserPermissionsReport_SubSubParentModuleSortOrder, T1.UserPermissionsReport_ModuleID, T1.UserPermissionsReport_ModuleCode, T1.UserPermissionsReport_Module, T1.UserPermissionsReport_ModuleIsCategory, T1.UserPermissionsReport_ModuleInfoID, T1.UserPermissionsReport_ModuleSortOrder, T1.UserPermissionsReport_ModuleHasCustomPermission, T1.UserPermissionsReport_UserID, T1.UserPermissionsReport_UserCode, T1.UserPermissionsReport_EmployeeCode, T1.UserPermissionsReport_IsBlocked, T1.UserPermissionsReport_CanPrint, T1.UserPermissionsReport_CanUpdate, T1.UserPermissionsReport_CanAdd, T1.UserPermissionsReport_Custom1, T1.UserPermissionsReport_Custom2, T1.UserPermissionsReport_ApplicationIsBlocked, T1.UserPermissionsReport_ApplicationCanPrint, T1.UserPermissionsReport_ApplicationCanUpdate, T1.UserPermissionsReport_ApplicationCanAdd, T1.UserPermissionsReport_ApplicationCustom1, T1.UserPermissionsReport_ApplicationCustom2, T1.UserPermissionsReport_Employee)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS UserPermissionsReport_ID, " & vbCrLf &
                "            T.ApplicationID AS UserPermissionsReport_ApplicationID, " & vbCrLf &
                "            T.ParentModuleID AS UserPermissionsReport_ParentModuleID, " & vbCrLf &
                "            T.ParentModule AS UserPermissionsReport_ParentModule, " & vbCrLf &
                "            T.ParentModuleSortOrder AS UserPermissionsReport_ParentModuleSortOrder, " & vbCrLf &
                "            T.SubParentModuleID AS UserPermissionsReport_SubParentModuleID, " & vbCrLf &
                "            T.SubParentModule AS UserPermissionsReport_SubParentModule, " & vbCrLf &
                "            T.SubParentModuleSortOrder AS UserPermissionsReport_SubParentModuleSortOrder, " & vbCrLf &
                "            T.SubSubParentModuleID AS UserPermissionsReport_SubSubParentModuleID, " & vbCrLf &
                "            T.SubSubParentModule AS UserPermissionsReport_SubSubParentModule, " & vbCrLf &
                "            T.SubSubParentModuleSortOrder AS UserPermissionsReport_SubSubParentModuleSortOrder, " & vbCrLf &
                "            T.ModuleID AS UserPermissionsReport_ModuleID, " & vbCrLf &
                "            T.ModuleCode AS UserPermissionsReport_ModuleCode, " & vbCrLf &
                "            T.Module AS UserPermissionsReport_Module, " & vbCrLf &
                "            T.ModuleIsCategory AS UserPermissionsReport_ModuleIsCategory, " & vbCrLf &
                "            T.ModuleInfoID AS UserPermissionsReport_ModuleInfoID, " & vbCrLf &
                "            T.ModuleSortOrder AS UserPermissionsReport_ModuleSortOrder, " & vbCrLf &
                "            T.ModuleHasCustomPermission AS UserPermissionsReport_ModuleHasCustomPermission, " & vbCrLf &
                "            T.UserID AS UserPermissionsReport_UserID, " & vbCrLf &
                "            T.UserCode AS UserPermissionsReport_UserCode, " & vbCrLf &
                "            T.EmployeeCode AS UserPermissionsReport_EmployeeCode, " & vbCrLf &
                "            T.IsBlocked AS UserPermissionsReport_IsBlocked, " & vbCrLf &
                "            T.CanPrint AS UserPermissionsReport_CanPrint, " & vbCrLf &
                "            T.CanUpdate AS UserPermissionsReport_CanUpdate, " & vbCrLf &
                "            T.CanAdd AS UserPermissionsReport_CanAdd, " & vbCrLf &
                "            T.Custom1 AS UserPermissionsReport_Custom1, " & vbCrLf &
                "            T.Custom2 AS UserPermissionsReport_Custom2, " & vbCrLf &
                "            T.ApplicationIsBlocked AS UserPermissionsReport_ApplicationIsBlocked, " & vbCrLf &
                "            T.ApplicationCanPrint AS UserPermissionsReport_ApplicationCanPrint, " & vbCrLf &
                "            T.ApplicationCanUpdate AS UserPermissionsReport_ApplicationCanUpdate, " & vbCrLf &
                "            T.ApplicationCanAdd AS UserPermissionsReport_ApplicationCanAdd, " & vbCrLf &
                "            T.ApplicationCustom1 AS UserPermissionsReport_ApplicationCustom1, " & vbCrLf &
                "            T.ApplicationCustom2 AS UserPermissionsReport_ApplicationCustom2, " & vbCrLf &
                "            T.Employee AS UserPermissionsReport_Employee, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserPermissionsReport AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserUserDefinedReportPermission.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView129() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserUserDefinedReportPermission" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserUserDefinedReportPermission](T1.UserUserDefinedReportPermission_ID, T1.UserUserDefinedReportPermission_UserDefinedReportID, T1.UserUserDefinedReportPermission_UserDefinedReportName, T1.UserUserDefinedReportPermission_UserDefinedReportCategoryID, T1.UserUserDefinedReportPermission_UserID, T1.UserUserDefinedReportPermission_UserCode, T1.UserUserDefinedReportPermission_EmployeeCode, T1.UserUserDefinedReportPermission_IsBlocked)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS UserUserDefinedReportPermission_ID, " & vbCrLf &
                "            T.UserDefinedReportID AS UserUserDefinedReportPermission_UserDefinedReportID, " & vbCrLf &
                "            T.UserDefinedReportName AS UserUserDefinedReportPermission_UserDefinedReportName, " & vbCrLf &
                "            T.UserDefinedReportCategoryID AS UserUserDefinedReportPermission_UserDefinedReportCategoryID, " & vbCrLf &
                "            T.UserID AS UserUserDefinedReportPermission_UserID, " & vbCrLf &
                "            T.UserCode AS UserUserDefinedReportPermission_UserCode, " & vbCrLf &
                "            T.EmployeeCode AS UserUserDefinedReportPermission_EmployeeCode, " & vbCrLf &
                "            T.IsBlocked AS UserUserDefinedReportPermission_IsBlocked, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserUserDefinedReportPermissions AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserUserDefinedReportPermissions.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView130() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserUserDefinedReportPermissions" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserUserDefinedReportPermission](T1.UserUserDefinedReportPermission_ID, T1.UserUserDefinedReportPermission_UserDefinedReportID, T1.UserUserDefinedReportPermission_UserDefinedReportName, T1.UserUserDefinedReportPermission_UserDefinedReportCategoryID, T1.UserUserDefinedReportPermission_UserID, T1.UserUserDefinedReportPermission_UserCode, T1.UserUserDefinedReportPermission_EmployeeCode, T1.UserUserDefinedReportPermission_IsBlocked)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS UserUserDefinedReportPermission_ID, " & vbCrLf &
                "            T.UserDefinedReportID AS UserUserDefinedReportPermission_UserDefinedReportID, " & vbCrLf &
                "            T.UserDefinedReportName AS UserUserDefinedReportPermission_UserDefinedReportName, " & vbCrLf &
                "            T.UserDefinedReportCategoryID AS UserUserDefinedReportPermission_UserDefinedReportCategoryID, " & vbCrLf &
                "            T.UserID AS UserUserDefinedReportPermission_UserID, " & vbCrLf &
                "            T.UserCode AS UserUserDefinedReportPermission_UserCode, " & vbCrLf &
                "            T.EmployeeCode AS UserUserDefinedReportPermission_EmployeeCode, " & vbCrLf &
                "            T.IsBlocked AS UserUserDefinedReportPermission_IsBlocked, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserUserDefinedReportPermission AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.UserWorkspace.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView131() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserWorkspace" & vbCrLf &
                "        [CodeFirstDatabaseSchema.UserWorkspace](T1.[UserWorkspace.WORKSPACE_ID], T1.[UserWorkspace.USER_CODE], T1.UserWorkspace_NAME, T1.UserWorkspace_DESCRIPTION, T1.[UserWorkspace.SORT_ORDER], T1.UserWorkspace_CP)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS [UserWorkspace.WORKSPACE_ID], " & vbCrLf &
                "            T.UserCode AS [UserWorkspace.USER_CODE], " & vbCrLf &
                "            T.Name AS UserWorkspace_NAME, " & vbCrLf &
                "            T.Description AS UserWorkspace_DESCRIPTION, " & vbCrLf &
                "            T.SortOrder AS [UserWorkspace.SORT_ORDER], " & vbCrLf &
                "            T.IsClientPortal AS UserWorkspace_CP, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.UserWorkspaces AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for CodeFirstDatabase.WorkspaceObject.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView132() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing WorkspaceObject" & vbCrLf &
                "        [CodeFirstDatabaseSchema.WorkspaceObject](T1.WorkspaceObject_ID, T1.[WorkspaceObject.WORKSPACE_ID], T1.[WorkspaceObject.DESKTOP_OBJECT_ID], T1.[WorkspaceObject.ZONE_ID], T1.WorkspaceObject_HEIGHT, T1.WorkspaceObject_WIDTH, T1.[WorkspaceObject.TOP_COORD], T1.[WorkspaceObject.LEFT_COORD], T1.[WorkspaceObject.SORT_ORDER])" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS WorkspaceObject_ID, " & vbCrLf &
                "            T.UserWorkspaceID AS [WorkspaceObject.WORKSPACE_ID], " & vbCrLf &
                "            T.DesktopObjectID AS [WorkspaceObject.DESKTOP_OBJECT_ID], " & vbCrLf &
                "            T.ZoneID AS [WorkspaceObject.ZONE_ID], " & vbCrLf &
                "            T.Height AS WorkspaceObject_HEIGHT, " & vbCrLf &
                "            T.Width AS WorkspaceObject_WIDTH, " & vbCrLf &
                "            T.TopCoordinate AS [WorkspaceObject.TOP_COORD], " & vbCrLf &
                "            T.LeftCoordinate AS [WorkspaceObject.LEFT_COORD], " & vbCrLf &
                "            T.SortOrder AS [WorkspaceObject.SORT_ORDER], " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM DbContext.WorkspaceObjects AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.UserWorkspaces.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView133() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing UserWorkspaces" & vbCrLf &
                "        [AdvantageFramework.Security.Database.UserWorkspace](T1.UserWorkspace_ID, T1.UserWorkspace_UserCode, T1.UserWorkspace_Name, T1.UserWorkspace_Description, T1.UserWorkspace_SortOrder, T1.UserWorkspace_IsClientPortal)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.WORKSPACE_ID AS UserWorkspace_ID, " & vbCrLf &
                "            T.USER_CODE AS UserWorkspace_UserCode, " & vbCrLf &
                "            T.NAME AS UserWorkspace_Name, " & vbCrLf &
                "            T.DESCRIPTION AS UserWorkspace_Description, " & vbCrLf &
                "            T.SORT_ORDER AS UserWorkspace_SortOrder, " & vbCrLf &
                "            T.CP AS UserWorkspace_IsClientPortal, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.UserWorkspace AS T" & vbCrLf &
                "    ) AS T1")
        End Function

        ''' <summary>
        ''' Gets the view for DbContext.WorkspaceObjects.
        ''' </summary>
        ''' <returns>The mapping view.</returns>
        Private Shared Function GetView134() As DbMappingView
            Return New DbMappingView(
                "" & vbCrLf &
                "    SELECT VALUE -- Constructing WorkspaceObjects" & vbCrLf &
                "        [AdvantageFramework.Security.Database.WorkspaceObject](T1.WorkspaceObject_ID, T1.WorkspaceObject_UserWorkspaceID, T1.WorkspaceObject_DesktopObjectID, T1.WorkspaceObject_ZoneID, T1.WorkspaceObject_Height, T1.WorkspaceObject_Width, T1.WorkspaceObject_TopCoordinate, T1.WorkspaceObject_LeftCoordinate, T1.WorkspaceObject_SortOrder)" & vbCrLf &
                "    FROM (" & vbCrLf &
                "        SELECT " & vbCrLf &
                "            T.ID AS WorkspaceObject_ID, " & vbCrLf &
                "            T.WORKSPACE_ID AS WorkspaceObject_UserWorkspaceID, " & vbCrLf &
                "            T.DESKTOP_OBJECT_ID AS WorkspaceObject_DesktopObjectID, " & vbCrLf &
                "            T.ZONE_ID AS WorkspaceObject_ZoneID, " & vbCrLf &
                "            T.HEIGHT AS WorkspaceObject_Height, " & vbCrLf &
                "            T.WIDTH AS WorkspaceObject_Width, " & vbCrLf &
                "            T.TOP_COORD AS WorkspaceObject_TopCoordinate, " & vbCrLf &
                "            T.LEFT_COORD AS WorkspaceObject_LeftCoordinate, " & vbCrLf &
                "            T.SORT_ORDER AS WorkspaceObject_SortOrder, " & vbCrLf &
                "            True AS _from0" & vbCrLf &
                "        FROM CodeFirstDatabase.WorkspaceObject AS T" & vbCrLf &
                "    ) AS T1")
        End Function
    End Class
End Namespace
