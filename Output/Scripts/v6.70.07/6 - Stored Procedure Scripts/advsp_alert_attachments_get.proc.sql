IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[advsp_alert_attachments_get]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[advsp_alert_attachments_get] 
GO

CREATE PROCEDURE [dbo].[advsp_alert_attachments_get]
@ALERT_ID INT,
@EMP_CODE VARCHAR(6),
@OFFSET [DECIMAL](9,3)
AS
BEGIN	
	
	SELECT
		A.*
	FROM (
		SELECT 
			[ID] = ALERT_ATTACHMENT.ATTACHMENT_ID,
			[AlertID] = ALERT_ATTACHMENT.ALERT_ID,
			[FileName] = DOCUMENTS.FILENAME,
			[Generated] = [dbo].[advfn_local_date](@OFFSET, ALERT_ATTACHMENT.GENERATED_DATE),
			[EmployeeFullName] = CASE 
									WHEN USER_CODE_CP IS NULL OR USER_CODE_CP = 0 THEN ISNULL(EMPLOYEE.EMP_FNAME+' ','') + ISNULL(EMPLOYEE.EMP_MI+'. ','') + ISNULL(EMPLOYEE.EMP_LNAME,'')
									ELSE (SELECT CONT_FML FROM CDP_CONTACT_HDR WITH (NOLOCK) WHERE CDP_CONTACT_ID = USER_CODE_CP) 
								 END,
			[MIMEType] = DOCUMENTS.MIME_TYPE,
			[RepositoryFileName] = DOCUMENTS.REPOSITORY_FILENAME,
			[DocumentID] = DOCUMENTS.DOCUMENT_ID,
			[FileSize] = DOCUMENTS.FILE_SIZE,
			[FileSizeKB] = CASE 
								WHEN DOCUMENTS.FILE_SIZE > 0 THEN CAST(DOCUMENTS.FILE_SIZE / 1024 AS INT)
								ELSE 0
							END,
			[Description] = DOCUMENTS.DESCRIPTION,
			[UserCode] = ALERT_ATTACHMENT.USER_CODE,
			[PrivateFlag] = ISNULL(DOCUMENTS.PRIVATE_FLAG, 0),
			[IsPrivate] = CASE 
							WHEN DOCUMENTS.PRIVATE_FLAG IS NULL OR DOCUMENTS.PRIVATE_FLAG = 0 THEN 	'No'
							ELSE 'Yes'
						 END,
			[ProofHQUrl] = DOCUMENTS.PROOFHQ_URL,
			[HistoryCount] = (SELECT COUNT(1) FROM DOCUMENTS DH WHERE DH.[FILENAME] = DOCUMENTS.[FILENAME]),
			[JobNumber] = ALERT.JOB_NUMBER, 
			[JobComponentNumber] = ALERT.JOB_COMPONENT_NBR, 
			[SequenceNumber] = ALERT.TASK_SEQ_NBR,
			[IsTaskDocument] = CAST(0 AS BIT),
			[UploadedToDocumentManager] = CASE
											  WHEN DOCUMENTS.REPOSITORY_FILENAME LIKE 'd_%' THEN CAST(1 AS BIT)
											  ELSE CAST (0 AS BIT)
										  END
		FROM 
			dbo.EMPLOYEE WITH (NOLOCK) 
		INNER JOIN
			dbo.SEC_USER WITH (NOLOCK) ON EMPLOYEE.EMP_CODE = SEC_USER.EMP_CODE 
		RIGHT OUTER JOIN
			dbo.ALERT_ATTACHMENT WITH (NOLOCK) 
		INNER JOIN
			dbo.DOCUMENTS WITH (NOLOCK) ON ALERT_ATTACHMENT.DOCUMENT_ID = DOCUMENTS.DOCUMENT_ID ON 
										   UPPER(SEC_USER.USER_CODE) = UPPER(ALERT_ATTACHMENT.USER_CODE)
		INNER JOIN ALERT WITH (NOLOCK) ON ALERT_ATTACHMENT.ALERT_ID = ALERT.ALERT_ID
		WHERE
			ALERT_ATTACHMENT.ALERT_ID = @ALERT_ID AND
			DOCUMENTS.DOCUMENT_ID IN ( SELECT     
											MAX(ALERT_ATTACHMENT_1.DOCUMENT_ID) AS DOCUMENT_ID
										FROM          
											dbo.ALERT_ATTACHMENT AS ALERT_ATTACHMENT_1 
										INNER JOIN
											dbo.DOCUMENTS AS DOCUMENTS_1 ON ALERT_ATTACHMENT_1.DOCUMENT_ID = DOCUMENTS_1.DOCUMENT_ID
										GROUP BY 
											ALERT_ATTACHMENT_1.ALERT_ID, 
											DOCUMENTS_1.FILENAME)

		UNION 

		SELECT
			[ID] = ROWID,  
			[AlertID] = ALERT.ALERT_ID,
			[FileName] = DOCUMENTS.[FILENAME], 
			[Generated] = DOCUMENTS.UPLOADED_DATE,
			[EmployeeFullName] = NULL,
			[MIMEType] = DOCUMENTS.MIME_TYPE, 
			[RepositoryFileName] = DOCUMENTS.REPOSITORY_FILENAME,
			[DocumentID] = DOCUMENTS.DOCUMENT_ID, 
			[FileSize] = DOCUMENTS.FILE_SIZE,
			[FileSizeKB] = CASE 
								WHEN DOCUMENTS.FILE_SIZE > 0 THEN CAST(DOCUMENTS.FILE_SIZE / 1024 AS INT)
								ELSE 0
							END,
			[Description] = DOCUMENTS.[DESCRIPTION],
			[UserCode] = DOCUMENTS.USER_CODE,  
			[PrivateFlag] = ISNULL(DOCUMENTS.PRIVATE_FLAG, 0),
			[IsPrivate] = CASE 
							WHEN DOCUMENTS.PRIVATE_FLAG IS NULL OR DOCUMENTS.PRIVATE_FLAG = 0 THEN 	'No'
							ELSE 'Yes'
						 END,
			[ProofHQUrl] = DOCUMENTS.PROOFHQ_URL,
			[HistoryCount] = (SELECT COUNT(1) FROM DOCUMENTS DH WHERE DH.[FILENAME] = DOCUMENTS.[FILENAME]),
			[JobNumber] = JOB_TRAFFIC_DET_DOCS.JOB_NUMBER, 
			[JobComponentNumber] = JOB_TRAFFIC_DET_DOCS.JOB_COMPONENT_NBR, 
			[SequenceNumber] = JOB_TRAFFIC_DET_DOCS.SEQ_NBR,
			[IsTaskDocument] = CAST(1 AS BIT),
			[UploadedToDocumentManager] = CASE
											  WHEN DOCUMENTS.REPOSITORY_FILENAME LIKE 'd_%' THEN CAST(1 AS BIT)
											  ELSE CAST (0 AS BIT)
										  END
		FROM
			dbo.DOCUMENTS INNER JOIN
			dbo.JOB_TRAFFIC_DET_DOCS ON DOCUMENTS.DOCUMENT_ID = JOB_TRAFFIC_DET_DOCS.DOCUMENT_ID INNER JOIN
			dbo.DOCUMENT_TYPE ON DOCUMENTS.DOCUMENT_TYPE_ID = DOCUMENT_TYPE.DOCUMENT_TYPE_ID INNER JOIN
			dbo.ALERT ON ALERT.JOB_NUMBER = JOB_TRAFFIC_DET_DOCS.JOB_NUMBER AND ALERT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_DOCS.JOB_COMPONENT_NBR AND ALERT.TASK_SEQ_NBR = JOB_TRAFFIC_DET_DOCS.SEQ_NBR
		WHERE ALERT_LEVEL <> 'PST' AND ALERT.ALERT_ID = @ALERT_ID AND  
			(DOCUMENTS.DOCUMENT_ID IN (	SELECT     
											MAX(JOB_TRAFFIC_DET_DOCS_1.DOCUMENT_ID) AS DOCUMENT_ID
										FROM          
											dbo.JOB_TRAFFIC_DET_DOCS AS JOB_TRAFFIC_DET_DOCS_1 INNER JOIN
											dbo.DOCUMENTS AS DOCUMENTS_1 ON JOB_TRAFFIC_DET_DOCS_1.DOCUMENT_ID = DOCUMENTS_1.DOCUMENT_ID
										GROUP BY 
											JOB_TRAFFIC_DET_DOCS_1.JOB_NUMBER,
											JOB_TRAFFIC_DET_DOCS_1.JOB_COMPONENT_NBR,
											JOB_TRAFFIC_DET_DOCS_1.SEQ_NBR, 
											DOCUMENTS_1.[FILENAME])
										) AND
			DOCUMENTS.DOCUMENT_ID NOT IN ( SELECT     
											MAX(ALERT_ATTACHMENT_1.DOCUMENT_ID) AS DOCUMENT_ID
										FROM          
											dbo.ALERT_ATTACHMENT AS ALERT_ATTACHMENT_1 
										INNER JOIN
											dbo.DOCUMENTS AS DOCUMENTS_1 ON ALERT_ATTACHMENT_1.DOCUMENT_ID = DOCUMENTS_1.DOCUMENT_ID
										GROUP BY 
											ALERT_ATTACHMENT_1.ALERT_ID, 
											DOCUMENTS_1.FILENAME)
		) AS A
	ORDER BY A.Generated
END
