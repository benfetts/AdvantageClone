IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[advsp_alert_reset_routed_assignment]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
    DROP PROCEDURE [dbo].[advsp_alert_reset_routed_assignment]
GO
CREATE PROCEDURE [dbo].[advsp_alert_reset_routed_assignment] 
@ALERT_ID INT,
@USER_CODE VARCHAR(100)
AS
/*=========== QUERY ===========*/
BEGIN
	--	VARS
	BEGIN
		DECLARE
			@ALRT_NOTIFY_HDR_ID INT,
			@ALERT_STATE_ID INT,
			@FIRST_STATE_ID INT,
			@FIRST_STATE_NAME VARCHAR(100),
			@CUSTODY_DATE SMALLDATETIME,
			@CS_PROJECT_ID INT,
			@CS_REVIEW_ID INT;
		DECLARE
			@FIRST_STATE_EMPS TABLE (ID INT IDENTITY, EMP_CODE VARCHAR(6));
	END
	--	INIT
	BEGIN
		SELECT @CUSTODY_DATE = GETDATE();
		SELECT
			@ALRT_NOTIFY_HDR_ID = A.ALRT_NOTIFY_HDR_ID,
			@ALERT_STATE_ID = A.ALERT_STATE_ID,
			@CS_PROJECT_ID = A.CS_PROJECT_ID,
			@CS_REVIEW_ID = A.CS_REVIEW_ID
		FROM
			ALERT A WITH(NOLOCK)
		WHERE
			A.ALERT_ID = @ALERT_ID;
	END
	IF @ALRT_NOTIFY_HDR_ID IS NOT NULL AND @ALRT_NOTIFY_HDR_ID > 0
	BEGIN		
		SELECT @FIRST_STATE_ID = (
									SELECT TOP 1 ANS.ALERT_STATE_ID 
									FROM ALERT_NOTIFY_STATES ANS WITH(NOLOCK) 
									WHERE ANS.ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID ORDER BY SORT_ORDER
								 );
		IF @FIRST_STATE_ID IS NOT NULL AND @FIRST_STATE_ID > 0 AND @ALERT_STATE_ID <> @FIRST_STATE_ID
		BEGIN			
			--	STATE NAME
			BEGIN
				SELECT @FIRST_STATE_NAME = ALERT_STATE_NAME FROM ALERT_STATES WITH(NOLOCK) WHERE ALERT_STATE_ID = @FIRST_STATE_ID
			END
			--	SET CUSTODY END FOR EXISTING
			BEGIN
				UPDATE ALERT_COMMENT
				SET CUSTODY_END = @CUSTODY_DATE
				WHERE
					ALERT_ID = @ALERT_ID
					AND CUSTODY_END IS NULL
					AND ASSIGNED_EMP_CODE IS NOT NULL;
			END
			--	GET FIRST STATE EMPLOYEES
			BEGIN
				INSERT INTO @FIRST_STATE_EMPS
				SELECT ANE.EMP_CODE
				FROM ALERT_NOTIFY_EMPS ANE WITH(NOLOCK)
				WHERE
					ANE.ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID
					AND ANE.ALERT_STATE_ID = @FIRST_STATE_ID
					AND ANE.IS_DFLT = 1;
			END
			--	SET EMPS
			BEGIN
				DECLARE
					@EMP_COUNT INT,
					@CTR INT,
					@CURR_EMP_CODE VARCHAR(6),
					@CURR_HOURS DECIMAL (7,2),
					@MAX_RCPT_ID INT;
				SELECT @EMP_COUNT = COUNT(1) FROM @FIRST_STATE_EMPS;
				SELECT @CTR = 0;
				IF @EMP_COUNT > 0
				BEGIN
					--	SET DFLT ASSIGNEES
					WHILE @CTR < @EMP_COUNT
					BEGIN
						SET @CTR = @CTR + 1;
						SET @CURR_EMP_CODE = NULL;
						SET @CURR_HOURS = NULL;
						SELECT @CURR_EMP_CODE = EMP_CODE FROM @FIRST_STATE_EMPS WHERE ID = @CTR;
						IF NOT @CURR_EMP_CODE IS NULL
						BEGIN
							-- DELETE DISMISSED RECORD (RE-OPEN) IF COMPLETED ON A DIFFERENT STATE; PRESERVE HOURS
							IF EXISTS (SELECT ALERT_ID FROM ALERT_RCPT_DISMISSED WHERE ALERT_ID = @ALERT_ID AND EMP_CODE = @CURR_EMP_CODE AND CURRENT_NOTIFY = 1)
							BEGIN
								SELECT @CURR_HOURS = (SELECT TOP 1 A.HOURS_ALLOWED FROM ALERT_RCPT_DISMISSED A WHERE ALERT_ID = @ALERT_ID AND EMP_CODE = @CURR_EMP_CODE AND CURRENT_NOTIFY = 1);
								DELETE FROM ALERT_RCPT_DISMISSED WHERE ALERT_ID = @ALERT_ID AND EMP_CODE = @CURR_EMP_CODE AND CURRENT_NOTIFY = 1;
							END
							-- MAKE SURE ASSIGNEE ADDED OR UPDATED TO CORRECT STATE
							IF EXISTS (SELECT ALERT_ID FROM ALERT_RCPT WHERE ALERT_ID = @ALERT_ID AND EMP_CODE = @CURR_EMP_CODE AND CURRENT_NOTIFY = 1)
							BEGIN
								UPDATE ALERT_RCPT SET ALRT_NOTIFY_HDR_ID = @ALRT_NOTIFY_HDR_ID, ALERT_STATE_ID = @FIRST_STATE_ID
								WHERE
									ALERT_ID = @ALERT_ID AND EMP_CODE = @CURR_EMP_CODE AND CURRENT_NOTIFY = 1;
							END
							ELSE
							BEGIN
								SELECT @MAX_RCPT_ID = MAX(ALERT_RCPT_ID) FROM ALERT_RCPT WHERE ALERT_ID = @ALERT_ID;
								SELECT @MAX_RCPT_ID = ISNULL(@MAX_RCPT_ID, 0);
								INSERT INTO ALERT_RCPT(ALERT_ID, ALERT_RCPT_ID, EMP_CODE, EMAIL_ADDRESS, CURRENT_RCPT, CURRENT_NOTIFY, ALRT_NOTIFY_HDR_ID, ALERT_STATE_ID, HOURS_ALLOWED)
								SELECT
									@ALERT_ID, N.ID + ISNULL(@MAX_RCPT_ID, 0), N.EMP_CODE, E.EMP_EMAIL, 0, 1, @ALRT_NOTIFY_HDR_ID, @FIRST_STATE_ID, @CURR_HOURS
								FROM
									@FIRST_STATE_EMPS N
									INNER JOIN EMPLOYEE E ON N.EMP_CODE = E.EMP_CODE
								WHERE
									N.EMP_CODE = @CURR_EMP_CODE;
							END
							--  ADD COMMENT THAT AUTO CHANGED
							INSERT INTO ALERT_COMMENT (ALERT_ID, USER_CODE, GENERATED_DATE, COMMENT, EMAILSENT, ALRT_NOTIFY_HDR_ID, ALERT_STATE_ID, ASSIGNED_EMP_CODE, CS_PROJECT_ID, CS_REVIEW_ID)
							SELECT 
								@ALERT_ID,
								@USER_CODE,
								@CUSTODY_DATE,
								UPPER(@FIRST_STATE_NAME) + ' | ' + ISNULL(E.EMP_FNAME + ' ', '') + ISNULL(E.EMP_MI + '. ', '') + E.EMP_LNAME + ' | ',
								0,
								@ALRT_NOTIFY_HDR_ID,
								@FIRST_STATE_ID,
								E.EMP_CODE,
								@CS_PROJECT_ID,
								@CS_REVIEW_ID
							FROM 
								@FIRST_STATE_EMPS N
								INNER JOIN EMPLOYEE E ON N.EMP_CODE = E.EMP_CODE 
							WHERE 
								N.EMP_CODE = @CURR_EMP_CODE;		
						END
					END
					--  REMOVE ASSIGNEES THAT ARENT DFLT
					BEGIN
						UPDATE ALERT_RCPT SET ALERT_STATE_ID = NULL WHERE ALERT_ID = @ALERT_ID AND CURRENT_NOTIFY = 1 AND ALERT_STATE_ID <> @FIRST_STATE_ID;
						UPDATE ALERT_RCPT_DISMISSED SET ALERT_STATE_ID = NULL WHERE ALERT_ID = @ALERT_ID AND CURRENT_NOTIFY = 1 AND ALERT_STATE_ID <> @FIRST_STATE_ID;
					END
				END
				ELSE
				BEGIN
					--  NO DFLT EMPLOYEES, SET TO UNASSIGNED
					--	SHOULD NEVER GO HERE FOR CS REVIEWS...
					--	WRITE UNASSIGNED COMMENT
						INSERT INTO ALERT_COMMENT (ALERT_ID, USER_CODE, GENERATED_DATE, COMMENT, EMAILSENT, ALRT_NOTIFY_HDR_ID, ALERT_STATE_ID)
						SELECT 
							@ALERT_ID,
							@USER_CODE,
							@CUSTODY_DATE,
							UPPER(@FIRST_STATE_NAME) + ' | UNASSIGNED',
							0,
							@ALRT_NOTIFY_HDR_ID,
							@FIRST_STATE_ID
					--	REMOVE ALL ASSIGNEES
						UPDATE ALERT_RCPT SET ALERT_STATE_ID = NULL WHERE ALERT_ID = @ALERT_ID AND CURRENT_NOTIFY = 1;
						UPDATE ALERT_RCPT_DISMISSED SET ALERT_STATE_ID = NULL WHERE ALERT_ID = @ALERT_ID AND CURRENT_NOTIFY = 1;
				END
			END
			--	UPDATE ALERT
			BEGIN	
				UPDATE ALERT WITH(ROWLOCK) 
				SET ALERT_STATE_ID = @FIRST_STATE_ID 
				WHERE 
					ALERT_ID = @ALERT_ID;
			END
		END
	END
END
/*=========== QUERY ===========*/