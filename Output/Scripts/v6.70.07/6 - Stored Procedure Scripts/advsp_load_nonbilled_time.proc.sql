CREATE PROCEDURE [dbo].[advsp_load_nonbilled_time]
	@EMP_CODE VARCHAR(6) = NULL,
	@JOB_NUMBER INT = NULL,
	@JOB_COMP_NBR SMALLINT = NULL,
	@DATE_FROM DATETIME = NULL,
	@DATE_TO DATETIME = NULL,
	@JOB_TIME_ONLY BIT = 0,
	@CL_CODE VARCHAR(6) = NULL,
	@INCLUDE_BILLED_TIME BIT = 0,
	@USER_CODE varchar(100)
AS BEGIN

/*
--MJC 02/02/16 - added TRF_CODE and TRF_DESC
--MJC 07/20/16 - Apply Office Level and CDP Level security to the Adjust Time Module
exec [advsp_load_nonbilled_time]
*/

	DECLARE @EmployeeCode varchar(6), @HasCDPLimits bit, @HasOfficeLimits bit

	SET @HasCDPLimits = 0
	SET @HasOfficeLimits = 0

	SELECT @EmployeeCode = EMP_CODE
	FROM dbo.SEC_USER
	WHERE UPPER(USER_CODE) = UPPER(@USER_CODE)

	IF (SELECT COUNT(1) FROM dbo.SEC_CLIENT WHERE UPPER([USER_ID]) = UPPER(@USER_CODE)) > 0
		SET @HasCDPLimits = 1

	IF (SELECT COUNT(1) FROM dbo.EMP_OFFICE WHERE EMP_CODE = @EmployeeCode) > 0
		SET @HasOfficeLimits  = 1

	IF @CL_CODE IS NOT NULL OR @JOB_NUMBER IS NOT NULL 
		SET @JOB_TIME_ONLY = 1

	SELECT	[EmployeeTimeID] = EMP_TIME_DTL.ET_ID,
			[EmployeeTimeDetailID] = EMP_TIME_DTL.ET_DTL_ID,
			SequenceNumber = EMP_TIME_DTL.SEQ_NBR,
			[EmployeeCode] = EMP_TIME.EMP_CODE,
			[EmployeeName] = EMPLOYEE.EMP_FNAME + CASE WHEN EMPLOYEE.EMP_MI IS NULL OR EMPLOYEE.EMP_MI = '' THEN ' ' ELSE ' ' + EMPLOYEE.EMP_MI + '. ' END + EMPLOYEE.EMP_LNAME,
			[EmployeeDate] = EMP_TIME.EMP_DATE, 
			[DepartmentTeamCode] = EMP_TIME_DTL.DP_TM_CODE,  
			[DepartmentTeamDescription] = DEPT_TEAM.DP_TM_DESC, 
			EmployeeTitleID = EMP_TIME_DTL.EMPLOYEE_TITLE_ID,
			[ClientCode] = JOB_LOG.CL_CODE,
			[ClientName] = CLIENT.CL_NAME,
			[DivisionCode] = JOB_LOG.DIV_CODE,
			[DivisionName] = DIVISION.DIV_NAME,
			[ProductCode] = JOB_LOG.PRD_CODE,
			[ProductDescription] = PRODUCT.PRD_DESCRIPTION,
			[JobNumber] = JOB_LOG.JOB_NUMBER,
			[JobDescription] = JOB_LOG.JOB_DESC,
			[JobComponentNumber] = JOB_COMPONENT.JOB_COMPONENT_NBR,
			[JobComponentDescription] = JOB_COMPONENT.JOB_COMP_DESC,
			[FunctionCode] = EMP_TIME_DTL.FNC_CODE,
			FunctionDescription = FUNCTIONS.FNC_DESCRIPTION,
			EmployeeHours = EMP_TIME_DTL.EMP_HOURS, 
			EmployeeNonBillableFlag = EMP_TIME_DTL.EMP_NON_BILL_FLAG,
			FeeTimeFlag = EMP_TIME_DTL.FEE_TIME,
			BillingRate = EMP_TIME_DTL.EMP_BILL_RATE, 
			TotalBill = EMP_TIME_DTL.TOTAL_BILL,
			EmployeeRateFrom = EMP_TIME_DTL.EMP_RATE_FROM,
			EmployeeCommissionPercent = EMP_TIME_DTL.EMP_COMM_PCT,
			ExtendedMarkupAmount = EMP_TIME_DTL.EXT_MARKUP_AMT,
			TaxCode = EMP_TIME_DTL.TAX_CODE,
			TaxStatePercent = EMP_TIME_DTL.TAX_STATE_PCT, 
			TaxCountyPercent = EMP_TIME_DTL.TAX_COUNTY_PCT,
			TaxCityPercent = EMP_TIME_DTL.TAX_CITY_PCT,
			TaxResale = EMP_TIME_DTL.TAX_RESALE, 
			TaxCommission = EMP_TIME_DTL.TAX_COMM, 
			TaxCommissionOnly = EMP_TIME_DTL.TAX_COMM_ONLY, 
			ExtendedStateResale = EMP_TIME_DTL.EXT_STATE_RESALE,
			ExtendedCountyResale = EMP_TIME_DTL.EXT_COUNTY_RESALE,
			ExtendedCityResale = EMP_TIME_DTL.EXT_CITY_RESALE,
			LineTotal = EMP_TIME_DTL.LINE_TOTAL,
			AdjusterComments = CONVERT(VARCHAR(MAX), EMP_TIME_DTL.ADJ_COMMENTS),
			SalesClassCode = JOB_LOG.SC_CODE,
			EmployeeTimeFlag = CASE 
								WHEN ISNULL(EMP_TIME_DTL.AB_FLAG, 0) IN (3, 6) OR
									 ISNULL(EMP_TIME_DTL.AR_INV_NBR, 0) <> 0 OR 
									 ISNULL(EMP_TIME_DTL.EDIT_FLAG, 0) <> 0 THEN 1
								WHEN JOB_COMPONENT.BILLING_USER IS NOT NULL AND JOB_COMPONENT.BILLING_USER <> '' THEN 3
								ELSE 0 
							  END,
			[TaskCode] = EMP_TIME_DTL.TRF_CODE,
			TaskDescription = TRAFFIC_FNC.TRF_DESC,
			Assignment = ALERT.ALERT_ID
	FROM dbo.EMP_TIME_DTL INNER JOIN
		 dbo.EMP_TIME ON EMP_TIME_DTL.ET_ID = EMP_TIME.ET_ID INNER JOIN
		 dbo.EMPLOYEE ON EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
		 dbo.FUNCTIONS ON EMP_TIME_DTL.FNC_CODE = FUNCTIONS.FNC_CODE LEFT OUTER JOIN
		 dbo.JOB_LOG ON EMP_TIME_DTL.JOB_NUMBER = JOB_LOG.JOB_NUMBER LEFT OUTER JOIN
		 dbo.JOB_COMPONENT ON EMP_TIME_DTL.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND 
							  EMP_TIME_DTL.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR LEFT OUTER JOIN
		 dbo.CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE LEFT OUTER JOIN
		 dbo.DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND 
						 JOB_LOG.DIV_CODE = DIVISION.DIV_CODE LEFT OUTER JOIN
		 dbo.PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND 
						JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND 
						JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE LEFT OUTER JOIN
		 dbo.DEPT_TEAM ON EMP_TIME_DTL.DP_TM_CODE = DEPT_TEAM.DP_TM_CODE LEFT OUTER JOIN
		 dbo.TRAFFIC_FNC ON EMP_TIME_DTL.TRF_CODE = TRAFFIC_FNC.TRF_CODE LEFT OUTER JOIN
         dbo.ALERT ON ALERT.ALERT_ID = EMP_TIME_DTL.ALERT_ID AND ALERT.ALERT_TYPE_ID = 6
	WHERE 1 = CASE WHEN @EMP_CODE IS NULL THEN 1 WHEN EMP_TIME.EMP_CODE = @EMP_CODE THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @CL_CODE IS NULL THEN 1 WHEN JOB_LOG.CL_CODE = @CL_CODE THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @JOB_NUMBER IS NULL THEN 1 WHEN EMP_TIME_DTL.JOB_NUMBER = @JOB_NUMBER THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @JOB_NUMBER IS NULL AND @JOB_COMP_NBR IS NULL THEN 1 WHEN EMP_TIME_DTL.JOB_NUMBER = @JOB_NUMBER AND (@JOB_COMP_NBR IS NULL OR EMP_TIME_DTL.JOB_COMPONENT_NBR = @JOB_COMP_NBR) THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @DATE_FROM IS NULL THEN 1 WHEN EMP_TIME.EMP_DATE >= @DATE_FROM THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @DATE_TO IS NULL THEN 1 WHEN EMP_TIME.EMP_DATE <= @DATE_TO THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @INCLUDE_BILLED_TIME = 1 AND (EMP_TIME_DTL.EDIT_FLAG IS NULL OR EMP_TIME_DTL.EDIT_FLAG = 0 ) THEN 1
				   WHEN (EMP_TIME_DTL.AB_FLAG IS NULL OR EMP_TIME_DTL.AB_FLAG NOT IN (3, 6)) AND 
						(EMP_TIME_DTL.AR_INV_NBR IS NULL OR EMP_TIME_DTL.AR_INV_NBR = 0) AND 
						(EMP_TIME_DTL.EDIT_FLAG IS NULL OR EMP_TIME_DTL.EDIT_FLAG = 0 ) AND
						(JOB_COMPONENT.BILLING_USER IS NULL OR JOB_COMPONENT.BILLING_USER = '') THEN 1 ELSE 0 END AND
		  (JOB_COMPONENT.JOB_PROCESS_CONTRL IS NULL OR 
		   JOB_COMPONENT.JOB_PROCESS_CONTRL IN (1, 3, 4, 5, 7, 8, 9, 10, 11)) AND
          EMP_TIME_DTL.EMP_HOURS <> 0
	AND (
		( @HasCDPLimits = 1 AND EXISTS (
										SELECT 1
										FROM dbo.SEC_CLIENT sc
										WHERE UPPER(sc.[USER_ID]) = UPPER(@USER_CODE)
										AND sc.CL_CODE = JOB_LOG.CL_CODE
										AND sc.DIV_CODE = JOB_LOG.DIV_CODE
										AND sc.PRD_CODE = JOB_LOG.PRD_CODE
										AND JOB_LOG.OFFICE_CODE IN (SELECT OFFICE_CODE FROM dbo.advtf_employee_office_limits (@EmployeeCode))
									   ))
		OR
		( @HasCDPLimits = 0 AND JOB_LOG.OFFICE_CODE IN (SELECT OFFICE_CODE FROM dbo.advtf_employee_office_limits (@EmployeeCode)))
		)
	AND (
		( @HasOfficeLimits = 1 AND EMPLOYEE.OFFICE_CODE IN (SELECT OFFICE_CODE FROM dbo.advtf_employee_office_limits (@EmployeeCode)))
		OR
		( @HasOfficeLimits = 0 )
		)
	UNION
	SELECT	[ET_ID] = EMP_TIME_NP.ET_ID,
			[ET_DTL_ID] = EMP_TIME_NP.ET_DTL_ID,
			[SEQ_NBR] = EMP_TIME_NP.SEQ_NBR,
			[EMP_CODE] = EMP_TIME.EMP_CODE,
			[EMP_NAME] = EMPLOYEE.EMP_FNAME + CASE WHEN EMPLOYEE.EMP_MI IS NULL OR EMPLOYEE.EMP_MI = '' THEN ' ' ELSE ' ' + EMPLOYEE.EMP_MI + '. ' END + EMPLOYEE.EMP_LNAME,
			[EMP_DATE] = EMP_TIME.EMP_DATE, 
			[DP_TM_CODE] = EMP_TIME_NP.DP_TM_CODE,  
			[DP_TM_DESC] = DEPT_TEAM.DP_TM_DESC, 
			[EMPLOYEE_TITLE_ID] = NULL,
			[CL_CODE] = NULL,
			[CL_NAME] = NULL,
			[DIV_CODE] = NULL,
			[DIV_NAME] = NULL,
			[PRD_CODE] = NULL,
			[PRD_DESCRIPTION] = NULL,
			[JOB_NUMBER] = NULL,
			[JOB_DESC] = NULL,
			[JOB_COMPONENT_NBR] = NULL,
			[JOB_COMP_DESC] = NULL,
			[FNC_CODE] = EMP_TIME_NP.CATEGORY,
			[FNC_DESCRIPTION] = TIME_CATEGORY.[DESCRIPTION],
			[EMP_HOURS] = EMP_TIME_NP.EMP_HOURS, 
			[EMP_NON_BILL_FLAG] = NULL,
			[FEE_TIME] = NULL,
			[EMP_BILL_RATE] = NULL, 
			[TOTAL_BILL] = NULL,
			[EMP_RATE_FROM] = NULL,
			[EMP_COMM_PCT] = NULL,
			[EXT_MARKUP_AMT] = NULL,
			[TAX_CODE] = NULL,
			[TAX_STATE_PCT] = NULL,
			[TAX_COUNTY_PCT] = NULL,
			[TAX_CITY_PCT] = NULL,
			[TAX_RESALE] = NULL,
			[TAX_COMM] = NULL,
			[TAX_COMM_ONLY] = NULL,
			[EXT_STATE_RESALE] = NULL,
			[EXT_COUNTY_RESALE] = NULL,
			[EXT_CITY_RESALE] = NULL,
			[LINE_TOTAL] = NULL,
			[ADJ_COMMENTS] = NULL,
			[SC_CODE] = NULL,
			[EMP_TIME_FLAG] = 2,
			[TRF_CODE] = NULL,
			[TRF_DESC] = NULL,
            [ALERT_ID] = NULL
	FROM dbo.EMP_TIME_NP INNER JOIN
		 dbo.EMP_TIME ON EMP_TIME_NP.ET_ID = EMP_TIME.ET_ID INNER JOIN
		 dbo.EMPLOYEE ON EMP_TIME.EMP_CODE = EMPLOYEE.EMP_CODE INNER JOIN
		 dbo.DEPT_TEAM ON EMP_TIME_NP.DP_TM_CODE = DEPT_TEAM.DP_TM_CODE INNER JOIN
		 dbo.TIME_CATEGORY ON EMP_TIME_NP.CATEGORY = TIME_CATEGORY.CATEGORY
	WHERE 1 = CASE WHEN @JOB_TIME_ONLY = 0 THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @EMP_CODE IS NULL THEN 1 WHEN EMP_TIME.EMP_CODE = @EMP_CODE THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @DATE_FROM IS NULL THEN 1 WHEN EMP_TIME.EMP_DATE >= @DATE_FROM THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @DATE_TO IS NULL THEN 1 WHEN EMP_TIME.EMP_DATE <= @DATE_TO THEN 1 ELSE 0 END
	AND (
		( @HasOfficeLimits = 1 AND EMPLOYEE.OFFICE_CODE IN (SELECT OFFICE_CODE FROM dbo.advtf_employee_office_limits (@EmployeeCode)))
		OR
		( @HasOfficeLimits = 0 )
		) AND
          EMP_TIME_NP.EMP_HOURS <> 0
END
GO
