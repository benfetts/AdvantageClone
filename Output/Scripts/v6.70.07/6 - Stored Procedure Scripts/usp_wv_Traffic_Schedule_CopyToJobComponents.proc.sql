CREATE PROCEDURE [dbo].[usp_wv_Traffic_Schedule_CopyToJobComponents] 
@JOB_NUMBER int,
@JOB_COMPONENT_NBR smallint,
@SELECTED_JOB_COMPONENT_IDs varchar(MAX),
@ADD_SCHEDULE_IF_SCHEDULE_DOESNT_EXIST bit,
@UPDATE_SCHEDULE_IF_EXIST bit,
@INCLUDE_SCHEDULE_HEADER_DATA bit,
@INCLUDE_SCHEDULE_DETAIL_DATA bit,
@INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES bit,
@INCLUDE_SCHEDULE_DETAIL_EMPLOYEE_ASSIGNMENTS bit,
@INCLUDE_SCHEDULE_DETAIL_TASK_COMMENTS bit,
@INCLUDE_SCHEDULE_DETAIL_DUE_DATE_COMMENTS bit,
@INCLUDE_SCHEDULE_DETAIL_REVISION_COMMENTS bit,
@UPDATE_COMPONENT_BUDGET bit,
@USER_CODE VARCHAR(100)
AS
BEGIN

	CREATE TABLE #CTJobComponents(RowID int IDENTITY(1, 1), 
								  JobNumber int,
								  JobComponentNumber smallint)
	
	CREATE TABLE #CTProjectScheduleDetails(RowID int IDENTITY(1, 1), 
										   SEQ_NBR smallint,
										   FNC_CODE varchar(10) COLLATE SQL_Latin1_General_CP1_CS_AS, 
										   TASK_START_DATE smalldatetime,
										   JOB_DUE_DATE smalldatetime,
										   JOB_REVISED_DATE smalldatetime,
										   DUE_TIME varchar(10) COLLATE SQL_Latin1_General_CP1_CS_AS,
										   REVISED_DUE_TIME varchar(10) COLLATE SQL_Latin1_General_CP1_CS_AS,
										   FNC_COMMENTS text COLLATE SQL_Latin1_General_CP1_CS_AS,
										   DUE_DATE_COMMENTS text COLLATE SQL_Latin1_General_CP1_CS_AS,
										   REV_DATE_COMMENTS text COLLATE SQL_Latin1_General_CP1_CS_AS)

	DECLARE @RowCount AS int
	DECLARE @RowID AS int
	DECLARE @JobNumber AS int
	DECLARE @JobComponentNumber AS smallint
	DECLARE @ScheduleExist AS bit
	DECLARE @TaskRowCount AS int
	DECLARE @TaskRowID AS int
	DECLARE @TaskCode varchar(10)
	DECLARE @EmployeeCode varchar(10)
	DECLARE @NewSequenceNumber AS smallint
	DECLARE @HoursAllowed decimal,  @TempCompDate smalldatetime, @CompletedComments varchar(MAX), @PercentComplete decimal, @CardSeqNbr int
	DECLARE @ComponentBudgetAmount decimal(11, 2)
	DECLARE @JDTRowID AS int

	INSERT INTO #CTJobComponents
	SELECT 
		JC.JOB_NUMBER,
		JC.JOB_COMPONENT_NBR
	FROM 
		dbo.JOB_COMPONENT AS JC INNER JOIN
		dbo.fn_intlist_to_table(@SELECTED_JOB_COMPONENT_IDs) AS ID ON ID.number = JC.ROWID

	SET @RowCount = @@ROWCOUNT
	SET @RowID = 1

	WHILE @RowID <= @RowCount BEGIN

		SET @ScheduleExist = 0

		SELECT
			@JobNumber = JobNumber,
			@JobComponentNumber = JobComponentNumber
		FROM 
			#CTJobComponents
		WHERE
			RowID = @RowID

		IF EXISTS(SELECT JT.JOB_NUMBER FROM dbo.JOB_TRAFFIC JT WHERE JT.JOB_NUMBER = @JobNumber AND JT.JOB_COMPONENT_NBR = @JobComponentNumber) BEGIN
		
			SET @ScheduleExist = 1

		END ELSE BEGIN

			SET @ScheduleExist = 0

		END

		IF @ScheduleExist = 0 AND @ADD_SCHEDULE_IF_SCHEDULE_DOESNT_EXIST = 1 BEGIN

			IF @INCLUDE_SCHEDULE_HEADER_DATA = 1 BEGIN

				INSERT INTO dbo.JOB_TRAFFIC(JOB_NUMBER, JOB_COMPONENT_NBR, TRF_CODE, IS_TEMPLATE, TRF_PRESET_CODE, 
											TRF_COMMENTS, ASSIGN_1, ASSIGN_2, ASSIGN_3, ASSIGN_4, ASSIGN_5, COMPLETED_DATE, 
											DATE_DELIVERED, DATE_SHIPPED, RECEIVED_BY, REFERENCE, SCHEDULE_CALC, AUTO_UPDATE_STATUS)
				SELECT @JobNumber, @JobComponentNumber, JT.TRF_CODE, 0, JT.TRF_PRESET_CODE, 
					   JT.TRF_COMMENTS, JT.ASSIGN_1, JT.ASSIGN_2, JT.ASSIGN_3, JT.ASSIGN_4, JT.ASSIGN_5, JT.COMPLETED_DATE, 
					   JT.DATE_DELIVERED, JT.DATE_SHIPPED, JT.RECEIVED_BY, JT.REFERENCE, JT.SCHEDULE_CALC, JT.AUTO_UPDATE_STATUS
				FROM
					dbo.JOB_TRAFFIC AS JT 
				WHERE
					JT.JOB_NUMBER = @JOB_NUMBER AND
					JT.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR

			END ELSE BEGIN
			
				INSERT INTO dbo.JOB_TRAFFIC(JOB_NUMBER, JOB_COMPONENT_NBR, TRF_CODE, IS_TEMPLATE)
				SELECT @JobNumber, @JobComponentNumber, JT.TRF_CODE, 0
				FROM
					dbo.JOB_TRAFFIC AS JT 
				WHERE
					JT.JOB_NUMBER = @JOB_NUMBER AND
					JT.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR

			END
			
			IF @INCLUDE_SCHEDULE_DETAIL_DATA = 1 BEGIN

				INSERT INTO dbo.JOB_TRAFFIC_DET(JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR, FNC_CODE, FNC_EST, TASK_DESCRIPTION, 
												TASK_START_DATE, 
												JOB_DUE_DATE, 
												JOB_REVISED_DATE, 
												DUE_TIME, 
												REVISED_DUE_TIME,
												FNC_COMMENTS, 
												DUE_DATE_COMMENTS, 
												REV_DATE_COMMENTS, JOB_ORDER, JOB_DAYS, PARENT_TASK, 
												JOB_HRS, TASK_STATUS, MILESTONE, TRAFFIC_PHASE_ID, TRF_ROLE,
												GRID_ORDER, PARENT_TASK_SEQ, DUE_DATE_LOCK)
				SELECT @JobNumber, @JobComponentNumber, JTD.SEQ_NBR, JTD.FNC_CODE, JTD.FNC_EST, JTD.TASK_DESCRIPTION, 
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTD.TASK_START_DATE ELSE NULL END, 
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTD.JOB_DUE_DATE ELSE NULL END,  
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTD.JOB_REVISED_DATE ELSE NULL END,  
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTD.DUE_TIME ELSE NULL END, 
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTD.REVISED_DUE_TIME ELSE NULL END, 
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_TASK_COMMENTS = 1 THEN JTD.FNC_COMMENTS ELSE NULL END, 
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_DUE_DATE_COMMENTS = 1 THEN JTD.DUE_DATE_COMMENTS ELSE NULL END, 
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_REVISION_COMMENTS = 1 THEN JTD.REV_DATE_COMMENTS ELSE NULL END, 
					   JTD.JOB_ORDER, JTD.JOB_DAYS, JTD.PARENT_TASK, 
					   JTD.JOB_HRS, JTD.TASK_STATUS, JTD.MILESTONE, JTD.TRAFFIC_PHASE_ID, JTD.TRF_ROLE,
					   JTD.GRID_ORDER, JTD.PARENT_TASK_SEQ, JTD.DUE_DATE_LOCK
				FROM
					dbo.JOB_TRAFFIC_DET AS JTD 
				WHERE
					JTD.JOB_NUMBER = @JOB_NUMBER AND
					JTD.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR

				INSERT INTO 
					dbo.JOB_TRAFFIC_DET_PREDS(JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR, PREDECESSOR_SEQ_NBR)
				SELECT @JobNumber, @JobComponentNumber, JTDP.SEQ_NBR, JTDP.PREDECESSOR_SEQ_NBR
				FROM
					dbo.JOB_TRAFFIC_DET_PREDS AS JTDP 
				WHERE
					JTDP.JOB_NUMBER = @JOB_NUMBER AND
					JTDP.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR

				IF @INCLUDE_SCHEDULE_DETAIL_EMPLOYEE_ASSIGNMENTS = 1 BEGIN

					INSERT INTO dbo.JOB_TRAFFIC_DET_EMPS(JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR, EMP_CODE, HOURS_ALLOWED)
					SELECT 
						@JobNumber, @JobComponentNumber, JTDE.SEQ_NBR, JTDE.EMP_CODE, JTDE.HOURS_ALLOWED
					FROM  
						dbo.JOB_TRAFFIC_DET_EMPS AS JTDE
					WHERE 
						JTDE.JOB_NUMBER = @JOB_NUMBER AND 
						JTDE.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR 

				END
				
				IF @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 BEGIN
				
					UPDATE 
						dbo.JOB_COMPONENT
					SET 
						[START_DATE] = (SELECT MIN(TASK_START_DATE) FROM dbo.JOB_TRAFFIC_DET WHERE JOB_NUMBER = @JobNumber AND JOB_COMPONENT_NBR = @JobComponentNumber),
						JOB_FIRST_USE_DATE = (SELECT MAX(JOB_REVISED_DATE) FROM dbo.JOB_TRAFFIC_DET WHERE JOB_NUMBER = @JobNumber AND JOB_COMPONENT_NBR = @JobComponentNumber)
					WHERE
						JOB_NUMBER = @JobNumber AND
						JOB_COMPONENT_NBR = @JobComponentNumber

				END

			END
			
			UPDATE 
				dbo.JOB_COMPONENT
			SET 
				TRF_JOB_NUMBER = @JOB_NUMBER,
				TRF_JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
			WHERE
				JOB_NUMBER = @JobNumber AND
				JOB_COMPONENT_NBR = @JobComponentNumber
			
		END
		
		IF @ScheduleExist = 1 AND @UPDATE_SCHEDULE_IF_EXIST = 1 BEGIN

			IF @INCLUDE_SCHEDULE_HEADER_DATA = 1 BEGIN
			
				UPDATE 
					JT
				SET  
					JT.TRF_CODE = JTCF.TRF_CODE, 
					JT.TRF_PRESET_CODE = JTCF.TRF_PRESET_CODE,
					JT.TRF_COMMENTS = JTCF.TRF_COMMENTS,
					JT.ASSIGN_1 = JTCF.ASSIGN_1,
					JT.ASSIGN_2 = JTCF.ASSIGN_2,
					JT.ASSIGN_3 = JTCF.ASSIGN_3,
					JT.ASSIGN_4 = JTCF.ASSIGN_4,
					JT.ASSIGN_5 = JTCF.ASSIGN_5,
					JT.COMPLETED_DATE = JTCF.COMPLETED_DATE,
					JT.DATE_DELIVERED = JTCF.DATE_DELIVERED,
					JT.DATE_SHIPPED = JTCF.DATE_SHIPPED,
					JT.RECEIVED_BY = JTCF.RECEIVED_BY,
					JT.REFERENCE = JTCF.REFERENCE,
					JT.SCHEDULE_CALC = JTCF.SCHEDULE_CALC,
					JT.AUTO_UPDATE_STATUS = JTCF.AUTO_UPDATE_STATUS
				FROM	
					dbo.JOB_TRAFFIC JT INNER JOIN
					dbo.JOB_TRAFFIC JTCF ON (JT.JOB_NUMBER = @JobNumber AND JT.JOB_COMPONENT_NBR = @JobComponentNumber) AND
											(JTCF.JOB_NUMBER = @JOB_NUMBER AND JTCF.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
					
			END
			
			IF @INCLUDE_SCHEDULE_DETAIL_DATA = 1 BEGIN
				
				CREATE TABLE #CTJobComponentEmployeeTasks(RowID int IDENTITY(1, 1), 
														  JTDRowID int,
														  TaskCode varchar(10), 
														  EmployeeCode varchar(6), 
														  HoursAllowed decimal(8,2),
														  TempCompDate smalldatetime,
														  CompletedComments text,
														  PercentComplete decimal(7,3),
														  CardSeqNbr int)

				--ALWAYS DELETE THIS DATA
				DELETE FROM 
					dbo.JOB_TRAFFIC_DET_PREDS
				WHERE
					JOB_TRAFFIC_DET_PREDS.JOB_NUMBER = @JobNumber AND
					JOB_TRAFFIC_DET_PREDS.JOB_COMPONENT_NBR = @JobComponentNumber

				--DELETE TASK NOT ON COPY FROM JOB
				DELETE FROM 
					dbo.JOB_TRAFFIC_DET_CMTS 
				WHERE
					JOB_TRAFFIC_DET_CMTS.JOB_NUMBER = @JobNumber AND
					JOB_TRAFFIC_DET_CMTS.JOB_COMPONENT_NBR = @JobComponentNumber
						
				DELETE FROM 
					dbo.JOB_TRAFFIC_DET_CNTS 
				WHERE
					JOB_TRAFFIC_DET_CNTS.JOB_NUMBER = @JobNumber AND
					JOB_TRAFFIC_DET_CNTS.JOB_COMPONENT_NBR = @JobComponentNumber

				DELETE FROM 
					dbo.JOB_TRAFFIC_DET_DOCS 
				WHERE
					JOB_TRAFFIC_DET_DOCS.JOB_NUMBER = @JobNumber AND
					JOB_TRAFFIC_DET_DOCS.JOB_COMPONENT_NBR = @JobComponentNumber
					
				IF @INCLUDE_SCHEDULE_DETAIL_EMPLOYEE_ASSIGNMENTS = 1 BEGIN
				
					DELETE FROM 
						dbo.JOB_TRAFFIC_DET_EMPS
					WHERE
						JOB_TRAFFIC_DET_EMPS.JOB_NUMBER = @JobNumber AND
						JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR = @JobComponentNumber
				
				END ELSE BEGIN
				
					INSERT INTO #CTJobComponentEmployeeTasks(JTDRowID, TaskCode, EmployeeCode, HoursAllowed, TempCompDate, 
															 CompletedComments, PercentComplete, CardSeqNbr)
					SELECT
						JTD.ROWID,
						JTD.FNC_CODE,
						JTDE.EMP_CODE,
						JTDE.HOURS_ALLOWED,
						JTDE.TEMP_COMP_DATE,
						JTDE.COMPLETED_COMMENTS,
						JTDE.PERCENT_COMPLETE,
						JTDE.CARD_SEQ_NBR
					FROM
						dbo.JOB_TRAFFIC_DET AS JTD  INNER JOIN
						dbo.JOB_TRAFFIC_DET_EMPS AS JTDE ON JTDE.JOB_NUMBER = JTD.JOB_NUMBER 
															AND JTDE.JOB_COMPONENT_NBR = JTD.JOB_COMPONENT_NBR
															AND JTDE.SEQ_NBR = JTD.SEQ_NBR
					WHERE 
						JTD.JOB_NUMBER = @JobNumber AND 
						JTD.JOB_COMPONENT_NBR = @JobComponentNumber
						
					SET @TaskRowCount = @@ROWCOUNT
					SET @TaskRowID = 1
					
					DELETE FROM 
						dbo.JOB_TRAFFIC_DET_EMPS
					WHERE
						JOB_TRAFFIC_DET_EMPS.JOB_NUMBER = @JobNumber AND
						JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR = @JobComponentNumber
				
				END
				
				INSERT INTO #CTProjectScheduleDetails(SEQ_NBR, FNC_CODE, TASK_START_DATE, JOB_DUE_DATE, JOB_REVISED_DATE, DUE_TIME, REVISED_DUE_TIME, FNC_COMMENTS, DUE_DATE_COMMENTS, REV_DATE_COMMENTS)
				SELECT 
					SEQ_NBR, FNC_CODE, TASK_START_DATE, JOB_DUE_DATE, JOB_REVISED_DATE, DUE_TIME, REVISED_DUE_TIME, FNC_COMMENTS, DUE_DATE_COMMENTS, REV_DATE_COMMENTS
				FROM
					dbo.JOB_TRAFFIC_DET
				WHERE
					JOB_TRAFFIC_DET.JOB_NUMBER = @JobNumber AND
					JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @JobComponentNumber

				DELETE FROM 
					dbo.JOB_TRAFFIC_DET 
				WHERE
					JOB_TRAFFIC_DET.JOB_NUMBER = @JobNumber AND
					JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = @JobComponentNumber AND
					JOB_TRAFFIC_DET.SEQ_NBR NOT IN (SELECT JTD.SEQ_NBR FROM dbo.JOB_TRAFFIC_DET AS JTD WHERE JTD.JOB_NUMBER = @JOB_NUMBER AND JTD.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
				
				--UPDATE EXISTING TASKS
				UPDATE 
					JTD
				SET  
					JTD.FNC_CODE = JTDCF.FNC_CODE, 
					JTD.FNC_EST = JTDCF.FNC_EST,
					JTD.TASK_DESCRIPTION = JTDCF.TASK_DESCRIPTION,
					JTD.TASK_START_DATE = CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTDCF.TASK_START_DATE ELSE (SELECT TOP 1 PSD.TASK_START_DATE FROM #CTProjectScheduleDetails PSD WHERE ISNULL(PSD.FNC_CODE, '') = ISNULL(JTDCF.FNC_CODE, '') AND PSD.SEQ_NBR = JTDCF.SEQ_NBR) END,
					JTD.JOB_DUE_DATE = CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTDCF.JOB_DUE_DATE ELSE (SELECT TOP 1 PSD.JOB_DUE_DATE FROM #CTProjectScheduleDetails PSD WHERE ISNULL(PSD.FNC_CODE, '') = ISNULL(JTDCF.FNC_CODE, '') AND PSD.SEQ_NBR = JTDCF.SEQ_NBR) END,
					JTD.JOB_REVISED_DATE = CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTDCF.JOB_REVISED_DATE ELSE (SELECT TOP 1 PSD.JOB_REVISED_DATE FROM #CTProjectScheduleDetails PSD WHERE ISNULL(PSD.FNC_CODE, '') = ISNULL(JTDCF.FNC_CODE, '') AND PSD.SEQ_NBR = JTDCF.SEQ_NBR) END,
					JTD.DUE_TIME = CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTDCF.DUE_TIME ELSE (SELECT TOP 1 PSD.DUE_TIME FROM #CTProjectScheduleDetails PSD WHERE ISNULL(PSD.FNC_CODE, '') = ISNULL(JTDCF.FNC_CODE, '') AND PSD.SEQ_NBR = JTDCF.SEQ_NBR) END,
					JTD.REVISED_DUE_TIME = CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTDCF.REVISED_DUE_TIME ELSE (SELECT TOP 1 PSD.REVISED_DUE_TIME FROM #CTProjectScheduleDetails PSD WHERE ISNULL(PSD.FNC_CODE, '') = ISNULL(JTDCF.FNC_CODE, '') AND PSD.SEQ_NBR = JTDCF.SEQ_NBR) END,
					JTD.FNC_COMMENTS = CASE WHEN @INCLUDE_SCHEDULE_DETAIL_TASK_COMMENTS = 1 THEN JTDCF.FNC_COMMENTS ELSE (SELECT TOP 1 PSD.FNC_COMMENTS FROM #CTProjectScheduleDetails PSD WHERE ISNULL(PSD.FNC_CODE, '') = ISNULL(JTDCF.FNC_CODE, '') AND PSD.SEQ_NBR = JTDCF.SEQ_NBR) END,
					JTD.DUE_DATE_COMMENTS = CASE WHEN @INCLUDE_SCHEDULE_DETAIL_DUE_DATE_COMMENTS = 1 THEN JTDCF.DUE_DATE_COMMENTS ELSE (SELECT TOP 1 PSD.DUE_DATE_COMMENTS FROM #CTProjectScheduleDetails PSD WHERE ISNULL(PSD.FNC_CODE, '') = ISNULL(JTDCF.FNC_CODE, '') AND PSD.SEQ_NBR = JTDCF.SEQ_NBR) END,
					JTD.REV_DATE_COMMENTS = CASE WHEN @INCLUDE_SCHEDULE_DETAIL_REVISION_COMMENTS = 1 THEN  JTDCF.REV_DATE_COMMENTS ELSE (SELECT TOP 1 PSD.REV_DATE_COMMENTS FROM #CTProjectScheduleDetails PSD WHERE ISNULL(PSD.FNC_CODE, '') = ISNULL(JTDCF.FNC_CODE, '') AND PSD.SEQ_NBR = JTDCF.SEQ_NBR) END,
					JTD.JOB_ORDER = JTDCF.JOB_ORDER,
					JTD.JOB_DAYS = JTDCF.JOB_DAYS,
					JTD.PARENT_TASK = JTDCF.PARENT_TASK,
					JTD.JOB_HRS = JTDCF.JOB_HRS,
					JTD.TASK_STATUS = JTDCF.TASK_STATUS,
					JTD.MILESTONE = JTDCF.MILESTONE,
					JTD.TRAFFIC_PHASE_ID = JTDCF.TRAFFIC_PHASE_ID,
					JTD.TRF_ROLE = JTDCF.TRF_ROLE,
					JTD.GRID_ORDER = JTDCF.GRID_ORDER,
					JTD.PARENT_TASK_SEQ = JTDCF.PARENT_TASK_SEQ,
					JTD.DUE_DATE_LOCK = JTDCF.DUE_DATE_LOCK
				FROM	
					dbo.JOB_TRAFFIC_DET JTD INNER JOIN
					dbo.JOB_TRAFFIC_DET JTDCF ON (JTD.JOB_NUMBER = @JobNumber AND JTD.JOB_COMPONENT_NBR = @JobComponentNumber) AND
												 (JTDCF.JOB_NUMBER = @JOB_NUMBER AND JTDCF.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR) AND
												 JTD.SEQ_NBR = JTDCF.SEQ_NBR
				
				INSERT INTO dbo.JOB_TRAFFIC_DET(JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR, FNC_CODE, FNC_EST, TASK_DESCRIPTION, 
												TASK_START_DATE, 
												JOB_DUE_DATE, 
												JOB_REVISED_DATE, 
												DUE_TIME, 
												REVISED_DUE_TIME,
												FNC_COMMENTS, 
												DUE_DATE_COMMENTS, 
												REV_DATE_COMMENTS, JOB_ORDER, JOB_DAYS, PARENT_TASK, 
												JOB_HRS, TASK_STATUS, MILESTONE, TRAFFIC_PHASE_ID, TRF_ROLE,
												GRID_ORDER, PARENT_TASK_SEQ, DUE_DATE_LOCK)
				SELECT @JobNumber, @JobComponentNumber, JTD.SEQ_NBR, JTD.FNC_CODE, JTD.FNC_EST, JTD.TASK_DESCRIPTION, 
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTD.TASK_START_DATE ELSE NULL END, 
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTD.JOB_DUE_DATE ELSE NULL END,  
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTD.JOB_REVISED_DATE ELSE NULL END,  
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTD.DUE_TIME ELSE NULL END, 
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 THEN JTD.REVISED_DUE_TIME ELSE NULL END, 
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_TASK_COMMENTS = 1 THEN JTD.FNC_COMMENTS ELSE NULL END, 
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_DUE_DATE_COMMENTS = 1 THEN JTD.DUE_DATE_COMMENTS ELSE NULL END, 
					   CASE WHEN @INCLUDE_SCHEDULE_DETAIL_REVISION_COMMENTS = 1 THEN JTD.REV_DATE_COMMENTS ELSE NULL END, 
					   JTD.JOB_ORDER, JTD.JOB_DAYS, JTD.PARENT_TASK, 
					   JTD.JOB_HRS, JTD.TASK_STATUS, JTD.MILESTONE, JTD.TRAFFIC_PHASE_ID, JTD.TRF_ROLE,
					   JTD.GRID_ORDER, JTD.PARENT_TASK_SEQ, JTD.DUE_DATE_LOCK
				FROM
					dbo.JOB_TRAFFIC_DET AS JTD 
				WHERE
					JTD.JOB_NUMBER = @JOB_NUMBER AND
					JTD.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND
					JTD.SEQ_NBR NOT IN (SELECT JTD.SEQ_NBR FROM dbo.JOB_TRAFFIC_DET AS JTD WHERE JTD.JOB_NUMBER = @JobNumber AND JTD.JOB_COMPONENT_NBR = @JobComponentNumber)
					
				INSERT INTO 
					dbo.JOB_TRAFFIC_DET_PREDS(JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR, PREDECESSOR_SEQ_NBR)
				SELECT @JobNumber, @JobComponentNumber, JTDP.SEQ_NBR, JTDP.PREDECESSOR_SEQ_NBR
				FROM
					dbo.JOB_TRAFFIC_DET_PREDS AS JTDP 
				WHERE
					JTDP.JOB_NUMBER = @JOB_NUMBER AND
					JTDP.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR

				IF @INCLUDE_SCHEDULE_DETAIL_EMPLOYEE_ASSIGNMENTS = 1 BEGIN

					INSERT INTO dbo.JOB_TRAFFIC_DET_EMPS(JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR, EMP_CODE, HOURS_ALLOWED)
					SELECT 
						@JobNumber, @JobComponentNumber, JTDE.SEQ_NBR, JTDE.EMP_CODE, JTDE.HOURS_ALLOWED
					FROM  
						dbo.JOB_TRAFFIC_DET_EMPS AS JTDE
					WHERE 
						JTDE.JOB_NUMBER = @JOB_NUMBER AND 
						JTDE.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR 

				END ELSE BEGIN

					WHILE @TaskRowID <= @TaskRowCount BEGIN
					
						SELECT
							@JDTRowID = JTDRowID,
							@TaskCode = TaskCode,
							@EmployeeCode = EmployeeCode,
							@HoursAllowed = HoursAllowed,  
							@TempCompDate = TempCompDate, 
							@CompletedComments = CompletedComments, 
							@PercentComplete = PercentComplete, 
							@CardSeqNbr = CardSeqNbr
						FROM 
							#CTJobComponentEmployeeTasks
						WHERE
							RowID = @TaskRowID
							
						SELECT
							@NewSequenceNumber = (SELECT
														TOP 1 JTD.SEQ_NBR
													FROM 
														dbo.JOB_TRAFFIC_DET JTD
													WHERE 
														JTD.JOB_NUMBER = @JobNumber 
														AND JTD.JOB_COMPONENT_NBR = @JobComponentNumber  
														AND JTD.FNC_CODE = @TaskCode
														AND JTD.ROWID = @JDTRowID)

						IF ISNULL(@NewSequenceNumber, -1) <> -1 BEGIN

							INSERT INTO dbo.JOB_TRAFFIC_DET_EMPS(JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR, EMP_CODE, HOURS_ALLOWED, TEMP_COMP_DATE, COMPLETED_COMMENTS, PERCENT_COMPLETE, CARD_SEQ_NBR)
							SELECT 
								@JobNumber, @JobComponentNumber, @NewSequenceNumber, @EmployeeCode, @HoursAllowed, @TempCompDate, @CompletedComments, @PercentComplete, @CardSeqNbr
							FROM  
								dbo.JOB_TRAFFIC_DET AS JTDE
							WHERE 
								JTDE.JOB_NUMBER = @JOB_NUMBER AND 
								JTDE.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR  AND 
								JTDE.SEQ_NBR = @NewSequenceNumber 

						END

						SET @TaskRowID = @TaskRowID + 1
	
					END

				END
				
				IF @INCLUDE_SCHEDULE_DETAIL_SCHEDULE_DATES = 1 BEGIN
				
					UPDATE 
						dbo.JOB_COMPONENT
					SET 
						[START_DATE] = (SELECT MIN(TASK_START_DATE) FROM dbo.JOB_TRAFFIC_DET WHERE JOB_NUMBER = @JobNumber AND JOB_COMPONENT_NBR = @JobComponentNumber),
						JOB_FIRST_USE_DATE = (SELECT MAX(JOB_REVISED_DATE) FROM dbo.JOB_TRAFFIC_DET WHERE JOB_NUMBER = @JobNumber AND JOB_COMPONENT_NBR = @JobComponentNumber)
					WHERE
						JOB_NUMBER = @JobNumber AND
						JOB_COMPONENT_NBR = @JobComponentNumber

				END
				
				DROP TABLE #CTJobComponentEmployeeTasks

				DELETE FROM #CTProjectScheduleDetails

			END

			UPDATE 
				dbo.JOB_COMPONENT
			SET 
				TRF_JOB_NUMBER = @JOB_NUMBER,
				TRF_JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR
			WHERE
				JOB_NUMBER = @JobNumber AND
				JOB_COMPONENT_NBR = @JobComponentNumber
				
		END
		
		IF @UPDATE_COMPONENT_BUDGET = 1 BEGIN

			SELECT 
				@ComponentBudgetAmount = JOB_COMP_BUDGET_AM
			FROM
				dbo.JOB_COMPONENT
			WHERE
				JOB_NUMBER = @JOB_NUMBER AND
				JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR

			UPDATE 
				dbo.JOB_COMPONENT
			SET 
				JOB_COMP_BUDGET_AM = @ComponentBudgetAmount
			WHERE
				JOB_NUMBER = @JobNumber AND
				JOB_COMPONENT_NBR = @JobComponentNumber

		END

		EXEC [dbo].[advsp_agile_add_task_assignments_for_job] @JobNumber, @JobComponentNumber, @USER_CODE;
			
		SET @RowID = @RowID + 1
	
	END
	
	DROP TABLE #CTJobComponents
	DROP TABLE #CTProjectScheduleDetails

END


