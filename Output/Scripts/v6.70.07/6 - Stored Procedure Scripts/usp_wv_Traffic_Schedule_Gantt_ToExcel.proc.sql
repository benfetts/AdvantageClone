IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_Traffic_Schedule_Gantt_ToExcel]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_Traffic_Schedule_Gantt_ToExcel]
GO
CREATE PROCEDURE [dbo].[usp_wv_Traffic_Schedule_Gantt_ToExcel] 
@CL_CODE AS VARCHAR(6) = NULL,
@CL_NAME as VARCHAR(40) = NULL,
@DIV_CODE AS VARCHAR(6) = NULL,
@DIV_NAME as VARCHAR(40) = NULL,
@CMP_CODE AS VARCHAR(6) = NULL,
@JOB_NUMBER AS INT = 0,
@JOB_COMPONENT_NBR AS SMALLINT = 0,
@JOB_COMPONENT_NAME AS VARCHAR(40) = NULL,
@ORDERBY as VARCHAR(250) = NULL,
@MS as int,
@Completed AS INT
AS
BEGIN
/*=========== QUERY ===========*/
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
DECLARE 
@SQL_SELECT AS VARCHAR(4000),
@SQL_FROM AS VARCHAR(4000),
@SQL_WHERE AS VARCHAR(4000),
@SQL_ORDERBY AS VARCHAR(4000),
@SCHEDULE_CALC AS INT

SELECT
	@SCHEDULE_CALC = ISNULL(SCHEDULE_CALC, 0)
FROM
	dbo.JOB_TRAFFIC
WHERE
	JOB_NUMBER = @JOB_NUMBER AND
	JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR

CREATE TABLE #TASKS
        (
	        [ID] [int] IDENTITY(1,1) NOT NULL,
            JOB_NUMBER int,
            JOB_COMPONENT_NBR smallint,
            SEQ_NBR int,
            FNC_CODE varchar(10), 
            FNC_EST varchar(6),
            TASK_DESCRIPTION varchar(1000),
            TASK_START_DATE smalldatetime,            
            JOB_DUE_DATE smalldatetime,
            JOB_REVISED_DATE smalldatetime,
            DUE_DATE_LOCK smallint, 
            JOB_COMPLETED_DATE smalldatetime,
            JOB_ORDER smallint, 
            JOB_DAYS smallint,
            PARENT_TASK smallint, 
            FNC_COMMENTS varchar(MAX),
            DUE_DATE_COMMENTS varchar(MAX),
            REV_DATE_COMMENTS varchar(MAX), 
            JOB_HRS decimal(8,2),
            DUE_TIME varchar(10),
            REVISED_DUE_TIME varchar(10), 
            TASK_STATUS varchar(1), 
            MILESTONE smallint,
            TRAFFIC_PHASE_ID int, 
            ROWID int,
            TEMP_SEQ smallint, 
            TRF_ROLE varchar(6), 
            HOURS_ASSIGNED decimal(15,2),
            TEMP_COMP_DATE smalldatetime, 
            EMP_CODE_LIST varchar(MAX), 
            CLIENT_LNAME_LIST varchar(MAX),
            OFFICE_CODE varchar(6),
            CL_CODE varchar(6), 
            DIV_CODE varchar(6),
            PRD_CODE varchar(6), 
            CMP_CODE varchar(6),
            SC_CODE varchar(6), 
            [USER_ID] varchar(100),
            CREATE_DATE smalldatetime, 
            JOB_DESC varchar(60),
            JOB_DATE_OPENED smalldatetime,
            JOB_RUSH_CHARGES smallint,
            JOB_ESTIMATE_REQ smallint, 
            JOB_COMMENTS varchar(MAX),
            JOB_COMP_DESC varchar(60),
            JOB_COMP_COMMENTS varchar(MAX),
            CMP_NAME varchar(128), 
            PHASE_DESC varchar(40),
            PHASE_ORDER int,
            CL_NAME varchar(40), 
            DIV_NAME varchar(40), 
            PRD_DESCRIPTION varchar(40), 
            TRF_COMMENTS varchar(MAX),
            TRF_CODE varchar(10),
            TRF_DESC varchar(30),
            HAS_CHILDREN bit,
            PARENT_DAYS Int,
            CONCURRENT bit
        );


    -- Insert statements for procedure here
SET @SQL_SELECT = 'INSERT INTO #TASKS
	SELECT     dbo.JOB_TRAFFIC_DET.JOB_NUMBER, dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR, dbo.JOB_TRAFFIC_DET.SEQ_NBR, dbo.JOB_TRAFFIC_DET.FNC_CODE, 
                      dbo.JOB_TRAFFIC_DET.FNC_EST, dbo.JOB_TRAFFIC_DET.TASK_DESCRIPTION, dbo.JOB_TRAFFIC_DET.TASK_START_DATE, 
                      dbo.JOB_TRAFFIC_DET.JOB_DUE_DATE, dbo.JOB_TRAFFIC_DET.JOB_REVISED_DATE, dbo.JOB_TRAFFIC_DET.DUE_DATE_LOCK, 
                      dbo.JOB_TRAFFIC_DET.JOB_COMPLETED_DATE, dbo.JOB_TRAFFIC_DET.JOB_ORDER, dbo.JOB_TRAFFIC_DET.JOB_DAYS, dbo.JOB_TRAFFIC_DET.PARENT_TASK_SEQ AS PARENT_TASK, 
                      dbo.JOB_TRAFFIC_DET.FNC_COMMENTS, dbo.JOB_TRAFFIC_DET.DUE_DATE_COMMENTS, dbo.JOB_TRAFFIC_DET.REV_DATE_COMMENTS, 
                      dbo.JOB_TRAFFIC_DET.JOB_HRS, dbo.JOB_TRAFFIC_DET.DUE_TIME, dbo.JOB_TRAFFIC_DET.REVISED_DUE_TIME, dbo.JOB_TRAFFIC_DET.TASK_STATUS, 
                      dbo.JOB_TRAFFIC_DET.MILESTONE, dbo.JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, dbo.JOB_TRAFFIC_DET.ROWID, dbo.JOB_TRAFFIC_DET.TEMP_SEQ, 
                      dbo.JOB_TRAFFIC_DET.TRF_ROLE, dbo.JOB_TRAFFIC_DET.HOURS_ASSIGNED, dbo.JOB_TRAFFIC_DET.TEMP_COMP_DATE, 
                      dbo.V_JOB_TRAFFIC_DET_EMPS.EMP_CODE_LIST, dbo.V_JOB_TRAFFIC_DET_CLIENTS.CLIENT_LNAME_LIST, dbo.JOB_LOG.OFFICE_CODE, dbo.JOB_LOG.CL_CODE, 
                      dbo.JOB_LOG.DIV_CODE, dbo.JOB_LOG.PRD_CODE, dbo.JOB_LOG.CMP_CODE, dbo.JOB_LOG.SC_CODE, dbo.JOB_LOG.USER_ID, dbo.JOB_LOG.CREATE_DATE, 
                      dbo.JOB_LOG.JOB_DESC, dbo.JOB_LOG.JOB_DATE_OPENED, dbo.JOB_LOG.JOB_RUSH_CHARGES, dbo.JOB_LOG.JOB_ESTIMATE_REQ, 
                      dbo.JOB_LOG.JOB_COMMENTS, dbo.JOB_COMPONENT.JOB_COMP_DESC, dbo.JOB_COMPONENT.JOB_COMP_COMMENTS, dbo.CAMPAIGN.CMP_NAME, 
                      dbo.TRAFFIC_PHASE.PHASE_DESC, dbo.TRAFFIC_PHASE.PHASE_ORDER, dbo.CLIENT.CL_NAME, dbo.DIVISION.DIV_NAME, dbo.PRODUCT.PRD_DESCRIPTION, 
                      dbo.JOB_TRAFFIC.TRF_COMMENTS,dbo.JOB_TRAFFIC.TRF_CODE,TRAFFIC.TRF_DESCRIPTION AS TRF_DESC,
					  [HAS_CHILDREN] = CONVERT(BIT, CASE WHEN PARENT_TASKS.JOB_NUMBER IS NOT NULL THEN 1 ELSE 0 END),NULL,NULL
'   
SET @SQL_FROM = '
FROM         dbo.TRAFFIC_PHASE RIGHT OUTER JOIN
                      dbo.JOB_TRAFFIC INNER JOIN
                      dbo.JOB_TRAFFIC_DET INNER JOIN
                      dbo.V_JOB_TRAFFIC_DET_EMPS ON dbo.JOB_TRAFFIC_DET.JOB_NUMBER = dbo.V_JOB_TRAFFIC_DET_EMPS.JOB_NUMBER AND 
                      dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = dbo.V_JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR AND 
                      dbo.JOB_TRAFFIC_DET.SEQ_NBR = dbo.V_JOB_TRAFFIC_DET_EMPS.SEQ_NBR INNER JOIN
                      dbo.JOB_COMPONENT ON dbo.JOB_TRAFFIC_DET.JOB_NUMBER = dbo.JOB_COMPONENT.JOB_NUMBER AND 
                      dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = dbo.JOB_COMPONENT.JOB_COMPONENT_NBR ON 
                      dbo.JOB_TRAFFIC.JOB_NUMBER = dbo.JOB_TRAFFIC_DET.JOB_NUMBER AND 
                      dbo.JOB_TRAFFIC.JOB_COMPONENT_NBR = dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR ON 
                      dbo.TRAFFIC_PHASE.TRAFFIC_PHASE_ID = dbo.JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID LEFT OUTER JOIN
                      dbo.CLIENT RIGHT OUTER JOIN
                      dbo.DIVISION ON dbo.CLIENT.CL_CODE = dbo.DIVISION.CL_CODE RIGHT OUTER JOIN
                      dbo.PRODUCT ON dbo.DIVISION.CL_CODE = dbo.PRODUCT.CL_CODE AND dbo.DIVISION.DIV_CODE = dbo.PRODUCT.DIV_CODE RIGHT OUTER JOIN
                      dbo.JOB_LOG ON dbo.PRODUCT.PRD_CODE = dbo.JOB_LOG.PRD_CODE AND dbo.PRODUCT.DIV_CODE = dbo.JOB_LOG.DIV_CODE AND 
                      dbo.PRODUCT.CL_CODE = dbo.JOB_LOG.CL_CODE LEFT OUTER JOIN
                      dbo.CAMPAIGN ON dbo.JOB_LOG.CMP_IDENTIFIER = dbo.CAMPAIGN.CMP_IDENTIFIER ON dbo.JOB_COMPONENT.JOB_NUMBER = dbo.JOB_LOG.JOB_NUMBER AND
                       dbo.JOB_TRAFFIC_DET.JOB_NUMBER = dbo.JOB_LOG.JOB_NUMBER LEFT OUTER JOIN
                      dbo.V_JOB_TRAFFIC_DET_CLIENTS ON dbo.JOB_TRAFFIC_DET.JOB_NUMBER = dbo.V_JOB_TRAFFIC_DET_CLIENTS.JOB_NUMBER AND 
                      dbo.JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = dbo.V_JOB_TRAFFIC_DET_CLIENTS.JOB_COMPONENT_NBR AND 
                      dbo.JOB_TRAFFIC_DET.SEQ_NBR = dbo.V_JOB_TRAFFIC_DET_CLIENTS.SEQ_NBR LEFT OUTER JOIN
					  dbo.TRAFFIC WITH(NOLOCK)ON dbo.JOB_TRAFFIC.TRF_CODE = dbo.TRAFFIC.TRF_CODE INNER JOIN
					  dbo.advtf_traffic_schedule_GetHierarchyDates(' + CAST(@JOB_NUMBER AS VARCHAR)+', ' + CAST(@JOB_COMPONENT_NBR AS VARCHAR)+') HT ON JOB_TRAFFIC_DET.JOB_NUMBER = HT.JOB_NUMBER AND
																														   JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = HT.JOB_COMPONENT_NBR AND
																														   JOB_TRAFFIC_DET.SEQ_NBR = HT.SEQ_NBR LEFT OUTER JOIN (SELECT DISTINCT
													 JOB_TRAFFIC_DET.JOB_NUMBER,
													 JOB_TRAFFIC_DET.JOB_COMPONENT_NBR,
													 [SEQ_NBR] = JOB_TRAFFIC_DET.PARENT_TASK_SEQ
												 FROM
													 dbo.JOB_TRAFFIC_DET JOIN
													 dbo.JOB_TRAFFIC ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC.JOB_NUMBER AND
																	    JOB_TRAFFIC.JOB_COMPONENT_NBR = JOB_TRAFFIC.JOB_COMPONENT_NBR
												 WHERE
													 JOB_TRAFFIC.SCHEDULE_CALC = 1 AND
													 PARENT_TASK_SEQ IS NOT NULL) PARENT_TASKS ON JOB_TRAFFIC_DET.JOB_NUMBER = PARENT_TASKS.JOB_NUMBER AND JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = PARENT_TASKS.JOB_COMPONENT_NBR AND JOB_TRAFFIC_DET.SEQ_NBR = PARENT_TASKS.SEQ_NBR
'
--WHERE     (dbo.JOB_TRAFFIC_DET.JOB_NUMBER = ''87'')
SET @SQL_WHERE = 
'
WHERE   1=1'  
  
IF DATALENGTH(@CL_CODE) > 0
BEGIN
	SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_LOG.CL_CODE =''' + LTRIM(RTRIM(@CL_CODE)) + ''')'
END
IF DATALENGTH(@CL_NAME) > 0
BEGIN
	SET @SQL_WHERE = @SQL_WHERE + ' AND (CLIENT.CL_NAME =''' + LTRIM(RTRIM(@CL_NAME)) + ''')'
END

IF DATALENGTH(@DIV_CODE) > 0
BEGIN
	SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_LOG.DIV_CODE =''' + LTRIM(RTRIM(@DIV_CODE)) + ''')'
END
IF DATALENGTH(@DIV_NAME) > 0
BEGIN
	SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_LOG.DIV_NAME =''' + LTRIM(RTRIM(@DIV_NAME)) + ''')'
END

IF DATALENGTH(@CMP_CODE) > 0
BEGIN
	SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_LOG.CMP_CODE =''' + LTRIM(RTRIM(@CMP_CODE)) + ''')'
END

IF @JOB_NUMBER > 0
BEGIN
	SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_TRAFFIC_DET.JOB_NUMBER = '+ LTRIM(RTRIM(CAST(@JOB_NUMBER AS VARCHAR(15)))) +')'
END

IF @JOB_COMPONENT_NBR > 0
BEGIN
	SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_TRAFFIC.JOB_COMPONENT_NBR = '+ LTRIM(RTRIM(CAST(@JOB_COMPONENT_NBR AS VARCHAR(15)))) +')'
END

IF DATALENGTH(@JOB_COMPONENT_NAME) > 0
BEGIN
	SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_COMPONENT.JOB_COMP_DESC =''' + LTRIM(RTRIM(@JOB_COMPONENT_NAME)) + ''')'
END

IF @MS = 1
BEGIN
	SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_TRAFFIC_DET.MILESTONE = 1)'
END

IF @Completed = 0
BEGIN
	SET @SQL_WHERE = @SQL_WHERE + ' AND (JOB_TRAFFIC_DET.JOB_COMPLETED_DATE IS NULL)'
END
--IF DATALENGTH(@ORDERBY)>0
--BEGIN
--	SET @SQL_ORDERBY = @SQL_ORDERBY + ' ORDER BY dbo.TRAFFIC_PHASE.PHASE_ORDER ' --+ SUBSTRING(@ORDERBY,2,DATALENGTH(@ORDERBY)-2)
--END
--IF @ORDERBY = 'phase'
--	BEGIN
--		SET @SQL_ORDERBY = '
--		ORDER BY TRAFFIC_PHASE.PHASE_ORDER ASC, JOB_TRAFFIC_DET.JOB_ORDER ASC, JOB_TRAFFIC_DET.JOB_REVISED_DATE ASC, JOB_TRAFFIC_DET.SEQ_NBR ASC
--		'
--	END

IF @SCHEDULE_CALC = 1
	BEGIN
		SET @SQL_ORDERBY = '
		ORDER BY 
			HT.ROW_ORDER ASC
		'
	END

IF @SCHEDULE_CALC = 0
	BEGIN
		SET @SQL_ORDERBY = '
		ORDER BY 
			JOB_TRAFFIC_DET.JOB_ORDER ASC,
			ISNULL(JOB_TRAFFIC_DET.GRID_ORDER, JOB_TRAFFIC_DET.SEQ_NBR) ASC
		'
	END

--PRINT('RESULT: ' + @SQL_ORDERBY)
EXEC(@SQL_SELECT+@SQL_FROM+@SQL_WHERE+@SQL_ORDERBY)


UPDATE #TASKS
SET PARENT_DAYS = datediff(dd, TASK_START_DATE, JOB_REVISED_DATE) - (datediff(wk, TASK_START_DATE, JOB_REVISED_DATE) * 2) -
                       case when datepart(dw, TASK_START_DATE) = 1 then 1 else 0 end +
                      case when datepart(dw, JOB_REVISED_DATE) = 1 then 1 else 0 end + 1
WHERE HAS_CHILDREN = 1



SELECT * FROM #TASKS


DROP TABLE #TASKS


end