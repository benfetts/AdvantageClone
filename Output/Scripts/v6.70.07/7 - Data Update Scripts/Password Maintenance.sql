DECLARE
	@AGY_SETTINGS_APP_ID INT

SELECT
	@AGY_SETTINGS_APP_ID = 10

--	APP
IF NOT EXISTS(SELECT 1
			  FROM AGY_SETTINGS_APP
			  WHERE
				AGY_SETTINGS_APP = @AGY_SETTINGS_APP_ID) BEGIN

		INSERT INTO AGY_SETTINGS_APP WITH(ROWLOCK) (AGY_SETTINGS_APP, APP_DESC)
		VALUES (@AGY_SETTINGS_APP_ID, 'Password Settings');

END
--	TAB
DELETE FROM AGY_SETTINGS_TAB WHERE AGY_SETTINGS_APP = @AGY_SETTINGS_APP_ID;
IF NOT EXISTS(SELECT 1
			  FROM AGY_SETTINGS_TAB
			  WHERE
				AGY_SETTINGS_APP = @AGY_SETTINGS_APP_ID
				AND AGY_SETTINGS_TAB = 1)
BEGIN
	INSERT INTO AGY_SETTINGS_TAB (AGY_SETTINGS_APP, AGY_SETTINGS_TAB, TAB_DESC)
	VALUES ( @AGY_SETTINGS_APP_ID, 1, 'Settings');
END
--	SETTINGS
BEGIN
	--	Minimum password length
	IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_MIN_LEN')
	BEGIN
		INSERT INTO AGY_SETTINGS WITH(ROWLOCK) (AGY_SETTINGS_CODE, AGY_SETTINGS_DESC, AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF, AGY_SETTINGS_ORDER,
												AGY_SETTINGS_APP, AGY_SETTINGS_TAB, DTYPE_ID)
										VALUES ('PWD_MIN_LEN', 'Minimum password length', 0, 0, 1,
												@AGY_SETTINGS_APP_ID, 1, 20);
	END

	--	Password complexity required, enable/disable, (One Upper case, One Lower Case, One Numeric, One Special Character)
	BEGIN
		--	Required
		IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_CXT_REQ')
		BEGIN
			INSERT INTO AGY_SETTINGS WITH(ROWLOCK) (AGY_SETTINGS_CODE, AGY_SETTINGS_DESC, AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF, AGY_SETTINGS_ORDER,
													AGY_SETTINGS_APP, AGY_SETTINGS_TAB, DTYPE_ID)
											VALUES ('PWD_CXT_REQ', 'Password complexity required', 0, 0, 2,
													@AGY_SETTINGS_APP_ID, 1, 16);
		END
		--	Uppercase
		IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_CXT_UC')
		BEGIN
			INSERT INTO AGY_SETTINGS WITH(ROWLOCK) (AGY_SETTINGS_CODE, AGY_SETTINGS_DESC, AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF, AGY_SETTINGS_ORDER,
													AGY_SETTINGS_APP, AGY_SETTINGS_TAB, DTYPE_ID)
											VALUES ('PWD_CXT_UC', 'Uppercase', 0, 0, 3,
													@AGY_SETTINGS_APP_ID, 1, 16);
		END
		--	Lowercase
		IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_CXT_LC')
		BEGIN
			INSERT INTO AGY_SETTINGS WITH(ROWLOCK) (AGY_SETTINGS_CODE, AGY_SETTINGS_DESC, AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF, AGY_SETTINGS_ORDER,
													AGY_SETTINGS_APP, AGY_SETTINGS_TAB, DTYPE_ID)
											VALUES ('PWD_CXT_LC', 'Lowercase', 0, 0, 4,
													@AGY_SETTINGS_APP_ID, 1, 16);
		END
		--	Number
		IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_CXT_NUM')
		BEGIN
			INSERT INTO AGY_SETTINGS WITH(ROWLOCK) (AGY_SETTINGS_CODE, AGY_SETTINGS_DESC, AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF, AGY_SETTINGS_ORDER,
													AGY_SETTINGS_APP, AGY_SETTINGS_TAB, DTYPE_ID)
											VALUES ('PWD_CXT_NUM', 'Number', 0, 0, 5,
													@AGY_SETTINGS_APP_ID, 1, 16);
		END
		--	Special Character
		IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_XST_SPL')
		BEGIN
			INSERT INTO AGY_SETTINGS WITH(ROWLOCK) (AGY_SETTINGS_CODE, AGY_SETTINGS_DESC, AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF, AGY_SETTINGS_ORDER,
													AGY_SETTINGS_APP, AGY_SETTINGS_TAB, DTYPE_ID)
											VALUES ('PWD_XST_SPL', 'Special Character', 0, 0, 6,
													@AGY_SETTINGS_APP_ID, 1, 16);
		END
	END

	--	Password history, enable/disable, allow users to configure between 0 to something reasonable like 24. (We need to keep track of the past passwords used)
	IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_HIST_CT')
	BEGIN
		INSERT INTO AGY_SETTINGS WITH(ROWLOCK) (AGY_SETTINGS_CODE, AGY_SETTINGS_DESC, AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF, AGY_SETTINGS_MIN, AGY_SETTINGS_MAX, AGY_SETTINGS_ORDER,
												AGY_SETTINGS_APP, AGY_SETTINGS_TAB, DTYPE_ID)
										VALUES ('PWD_HIST_CT', 'Password history', 0, 0, 0, 24, 7,
												@AGY_SETTINGS_APP_ID, 1, 20);
	END

	--	Password expiration(age), enable/disable, allow users to configure password to expire between 7 to 90 days
	IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_EXP_DYS')
	BEGIN
		INSERT INTO AGY_SETTINGS WITH(ROWLOCK) (AGY_SETTINGS_CODE, AGY_SETTINGS_DESC, AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF, AGY_SETTINGS_MIN, AGY_SETTINGS_MAX, AGY_SETTINGS_ORDER,
												AGY_SETTINGS_APP, AGY_SETTINGS_TAB, DTYPE_ID)
										VALUES ('PWD_EXP_DYS', 'Password expiration (age) days', 0, 0, 0, 90, 8,
												@AGY_SETTINGS_APP_ID, 1, 20);
	END

	--  Attempts before lockout
	IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_MAX_FAIL')
	BEGIN
		INSERT INTO AGY_SETTINGS WITH(ROWLOCK) (AGY_SETTINGS_CODE, AGY_SETTINGS_DESC, AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF, AGY_SETTINGS_MIN, AGY_SETTINGS_MAX, AGY_SETTINGS_ORDER, 
												AGY_SETTINGS_APP, AGY_SETTINGS_TAB, DTYPE_ID)
										 VALUES('PWD_MAX_FAIL', 'Attempts before lockout', 0, 0, 0, 99, 9,
												@AGY_SETTINGS_APP_ID, 1, 20);
	END

	--  Lockout timeout
	IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_LO_TO')
	BEGIN
		INSERT INTO AGY_SETTINGS WITH(ROWLOCK) (AGY_SETTINGS_CODE, AGY_SETTINGS_DESC, AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF, AGY_SETTINGS_MIN, AGY_SETTINGS_MAX, AGY_SETTINGS_ORDER, 
												AGY_SETTINGS_APP, AGY_SETTINGS_TAB, DTYPE_ID)
										 VALUES('PWD_LO_TO', 'Lockout reset (minutes)', 0, 0, 0, 90, 10,
												@AGY_SETTINGS_APP_ID, 1, 20);
	END

	--  Two factor authentication
	IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_TWO_FCTR')
	BEGIN
		INSERT INTO AGY_SETTINGS WITH(ROWLOCK) (AGY_SETTINGS_CODE, AGY_SETTINGS_DESC, AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF, AGY_SETTINGS_ORDER,
												AGY_SETTINGS_APP, AGY_SETTINGS_TAB, DTYPE_ID)
										VALUES ('PWD_TWO_FCTR', 'Two factor authentication', 'none', 'none', 11,
												@AGY_SETTINGS_APP_ID, 1, 9);
	END ELSE BEGIN

        IF EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_TWO_FCTR' AND (AGY_SETTINGS_VALUE = '0' OR AGY_SETTINGS_VALUE = 0)) BEGIN

            UPDATE AGY_SETTINGS SET AGY_SETTINGS_VALUE = 'none', AGY_SETTINGS_DEF = 'none' WHERE AGY_SETTINGS_CODE = 'PWD_TWO_FCTR'

        END ELSE BEGIN
        
            UPDATE AGY_SETTINGS SET AGY_SETTINGS_DEF = 'none' WHERE AGY_SETTINGS_CODE = 'PWD_TWO_FCTR'

        END

    END
	IF EXISTS (SELECT 1 FROM AGY_SETTINGS WHERE AGY_SETTINGS_CODE = 'PWD_TWO_FCTR')
	BEGIN
		--DELETE FROM AGY_SETTINGS_LOOKUP WHERE  AGY_SETTINGS_CODE = 'PWD_TWO_FCTR' AND LOOKUP_VALUE = 'none';
		IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS_LOOKUP WHERE AGY_SETTINGS_CODE = 'PWD_TWO_FCTR' AND LOOKUP_VALUE = 'none')
		BEGIN
			INSERT INTO AGY_SETTINGS_LOOKUP WITH(ROWLOCK) (AGY_SETTINGS_CODE, LOOKUP_DISPLAY, LOOKUP_VALUE)
			VALUES ('PWD_TWO_FCTR', '[None]', 'none');
		END
		IF NOT EXISTS (SELECT 1 FROM AGY_SETTINGS_LOOKUP WHERE AGY_SETTINGS_CODE = 'PWD_TWO_FCTR' AND LOOKUP_VALUE = 'email')
		BEGIN
			INSERT INTO AGY_SETTINGS_LOOKUP WITH(ROWLOCK) (AGY_SETTINGS_CODE, LOOKUP_DISPLAY, LOOKUP_VALUE)
			VALUES ('PWD_TWO_FCTR', 'Email', 'email');
		END
	END

END

UPDATE AGY_SETTINGS SET AGY_SETTINGS_TAB = 1, INACTIVE_FLAG = NULL 
WHERE 
	AGY_SETTINGS_CODE LIKE 'PWD_%' 
	AND AGY_SETTINGS_APP = @AGY_SETTINGS_APP_ID;

--SELECT
--	*
--FROM
--	AGY_SETTINGS
--WHERE 
--	AGY_SETTINGS_CODE LIKE 'PWD_%';
