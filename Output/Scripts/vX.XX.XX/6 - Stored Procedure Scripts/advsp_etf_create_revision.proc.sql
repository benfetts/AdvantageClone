CREATE PROCEDURE [dbo].[advsp_etf_create_revision](
	@ETF_ID AS int,
	@ETF_OFFDTL_ID AS int,
	@NEW_ETF_OFFDTL_ID AS int,
	@UPDATE_EMP_RATES AS bit,
	@UPDATE_REV_AMTS AS bit,
	@EXCLUDE_HOURS_ENTERED AS bit)
AS
BEGIN

	SET NOCOUNT ON

	DECLARE @USE_JOB_BUDGET_AMT_DFTL_REV AS bit
	DECLARE @USE_EMP_TITLE_BILLING_RATE AS bit
	DECLARE @BILL_RATE_PREC_ID AS smallint

	SET @USE_JOB_BUDGET_AMT_DFTL_REV = 0
	SET @USE_EMP_TITLE_BILLING_RATE = 0

	CREATE TABLE #ESTIMATE_BUDGET_AMOUNTS([RowID] [int] IDENTITY(1,1), 
										  [JOB_NUMBER] [int] NOT NULL,
										  [JOB_COMPONENT_NBR] [smallint] NOT NULL,
										  [BUDGET_AMT] [decimal](14,2) NOT NULL)
	CREATE TABLE #EMPLOYEE_TITLE_BILLING_RATES([RowID] [int] IDENTITY(1,1), 
											   [EMPLOYEE_TITLE_ID] [int] NOT NULL,
											   [BILL_RATE] [decimal](14,2) NOT NULL)
	CREATE TABLE #EMPLOYEE_RATES([RowID] [int] IDENTITY(1,1), 
								 [EMP_CODE] [varchar](6) COLLATE SQL_Latin1_General_CP1_CS_AS,
								 [BILL_RATE] [decimal](14,2) NOT NULL,
								 [COST_RATE] [decimal](14,2) NOT NULL)

	IF @UPDATE_REV_AMTS = 1 BEGIN

		SELECT @USE_JOB_BUDGET_AMT_DFTL_REV = CAST(ISNULL(AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF) AS bit) FROM dbo.AGY_SETTINGS WHERE AGY_SETTINGS_APP = 4 AND AGY_SETTINGS_TAB = 0 AND AGY_SETTINGS_CODE = 'ETF_REVAMT_CALC'

		IF @USE_JOB_BUDGET_AMT_DFTL_REV = 1 BEGIN

			INSERT INTO #ESTIMATE_BUDGET_AMOUNTS
			SELECT 
				JC.[JOB_NUMBER],
				JC.[JOB_COMPONENT_NBR],
				ISNULL(JC.JOB_COMP_BUDGET_AM, 0)
			FROM 
				dbo.JOB_COMPONENT AS JC
				
		END ELSE BEGIN

			INSERT INTO #ESTIMATE_BUDGET_AMOUNTS
			SELECT 
				EA.[JOB_NUMBER],
				EA.[JOB_COMPONENT_NBR],
				ISNULL(EARD.[BUDGET_AMT], 0)
			FROM 
				dbo.ESTIMATE_APPROVAL AS EA INNER JOIN
				(SELECT 
					ERD.ESTIMATE_NUMBER,
					ERD.EST_COMPONENT_NBR,
					ERD.EST_QUOTE_NBR,
					ERD.EST_REV_NBR,
					[BUDGET_AMT] = SUM(CASE WHEN F.FNC_TYPE = 'E' OR F.FNC_TYPE = 'I' THEN ERD.LINE_TOTAL 
											WHEN F.FNC_TYPE = 'V' THEN ERD.EXT_MARKUP_AMT
											ELSE 0 END)
				FROM 
					dbo.ESTIMATE_REV_DET AS ERD LEFT OUTER JOIN
					dbo.FUNCTIONS AS F ON F.FNC_CODE = ERD.FNC_CODE
				WHERE
					ERD.FNC_CODE IS NOT NULL
				GROUP BY
					ERD.ESTIMATE_NUMBER,
					ERD.EST_COMPONENT_NBR,
					ERD.EST_QUOTE_NBR,
					ERD.EST_REV_NBR) AS EARD ON EARD.ESTIMATE_NUMBER = EA.ESTIMATE_NUMBER AND
										   EARD.EST_COMPONENT_NBR = EA.EST_COMPONENT_NBR AND
										   EARD.EST_QUOTE_NBR = EA.EST_QUOTE_NBR AND
										   EARD.EST_REV_NBR = EA.EST_REVISION_NBR

		END

	END ELSE BEGIN

		INSERT INTO #ESTIMATE_BUDGET_AMOUNTS
		SELECT 
			ETFODJC.[JOB_NUMBER],
			ETFODJC.[JOB_COMPONENT_NBR],
			ETFODJC.REV_AMT
		FROM 
			dbo.ETF_OFFDTLJC AS ETFODJC
		WHERE 
			ETFODJC.ETF_OFFDTL_ID = @ETF_OFFDTL_ID
			
	END

	IF @UPDATE_EMP_RATES = 1 BEGIN
							 
		SELECT @USE_EMP_TITLE_BILLING_RATE = CAST(ISNULL(AGY_SETTINGS_VALUE, AGY_SETTINGS_DEF) AS bit) FROM dbo.AGY_SETTINGS WHERE AGY_SETTINGS_APP = 4 AND AGY_SETTINGS_TAB = 0 AND AGY_SETTINGS_CODE = 'ETF_USE_EMPTTLE_RATE'

		IF @USE_EMP_TITLE_BILLING_RATE = 1 BEGIN

			SET @BILL_RATE_PREC_ID = 0

			SELECT @BILL_RATE_PREC_ID = ISNULL(BILL_RATE_PREC_ID, 0) FROM dbo.BILL_RATE_PREC WHERE LEVEL_DESC = 'Employee Title' AND TITLE_INCL = 1 AND ISNULL(INACTIVE_FLAG, 0) = 0

			IF @BILL_RATE_PREC_ID > 0 BEGIN

				INSERT INTO #EMPLOYEE_TITLE_BILLING_RATES
				SELECT 
					BR.EMPLOYEE_TITLE_ID,
					BR.BILLING_RATE
				FROM 
					dbo.BILLING_RATE AS BR
				WHERE
					BR.BILL_RATE_PREC_ID = @BILL_RATE_PREC_ID
					
				INSERT INTO #EMPLOYEE_RATES
				SELECT
					EMP.EMP_CODE,
					ISNULL(ISNULL(ETBR.BILL_RATE, EMP.EMP_BILL_RATE), 0),
					ISNULL(EMP.EMP_COST_RATE, 0)
				FROM
					dbo.EMPLOYEE AS EMP LEFT OUTER JOIN
					#EMPLOYEE_TITLE_BILLING_RATES AS ETBR ON ETBR.EMPLOYEE_TITLE_ID = EMP.EMPLOYEE_TITLE_ID
						
			END ELSE BEGIN
			
				INSERT INTO #EMPLOYEE_RATES
				SELECT
					EMP.EMP_CODE,
					ISNULL(EMP.EMP_BILL_RATE, 0),
					ISNULL(EMP.EMP_COST_RATE, 0)
				FROM
					dbo.EMPLOYEE AS EMP
						
			END

		END ELSE BEGIN

			INSERT INTO #EMPLOYEE_RATES
			SELECT
				EMP.EMP_CODE,
				ISNULL(EMP.EMP_BILL_RATE, 0),
				ISNULL(EMP.EMP_COST_RATE, 0)
			FROM
				dbo.EMPLOYEE AS EMP
				
		END

	END ELSE BEGIN

		INSERT INTO #EMPLOYEE_RATES
		SELECT 
			ETFODEMP.EMP_CODE,
			ETFODEMP.BILL_RATE,
			ETFODEMP.COST_RATE
		FROM 
			dbo.ETF_OFFDTLEMP AS ETFODEMP
		WHERE 
			ETFODEMP.ETF_OFFDTL_ID = @ETF_OFFDTL_ID
			
	END
	--JOB COMP
	INSERT INTO dbo.ETF_OFFDTLJC([ETF_ID],[ETF_OFFDTL_ID],[JOB_NUMBER],[REV_AMT],[JOB_COMPONENT_NBR],[CL_CODE],[DIV_CODE],[PRD_CODE],[OFFICE_CODE])
	SELECT 
		@ETF_ID, @NEW_ETF_OFFDTL_ID, ETFODJC.[JOB_NUMBER], ISNULL(EBA.[BUDGET_AMT], ETFODJC.REV_AMT), ETFODJC.[JOB_COMPONENT_NBR], ETFODJC.[CL_CODE], ETFODJC.[DIV_CODE], ETFODJC.[PRD_CODE], ETFODJC.[OFFICE_CODE]
	FROM 
		dbo.ETF_OFFDTLJC AS ETFODJC LEFT OUTER JOIN
		#ESTIMATE_BUDGET_AMOUNTS AS EBA ON EBA.JOB_NUMBER = ETFODJC.JOB_NUMBER AND 
										   EBA.JOB_COMPONENT_NBR = ETFODJC.JOB_COMPONENT_NBR
	WHERE 
		ETFODJC.ETF_OFFDTL_ID = @ETF_OFFDTL_ID
	--INDIRECT CATEGORY
	INSERT INTO dbo.ETF_OFFDTLCAT([ETF_ID],[ETF_OFFDTL_ID],[CATEGORY])
	SELECT 
		@ETF_ID, @NEW_ETF_OFFDTL_ID, ETFODC.[CATEGORY]
	FROM 
		dbo.ETF_OFFDTLCAT AS ETFODC
	WHERE 
		ETFODC.ETF_OFFDTL_ID = @ETF_OFFDTL_ID
	--EMPLOYEES
	INSERT INTO dbo.ETF_OFFDTLEMP([ETF_ID],[ETF_OFFDTL_ID],[EMP_CODE],[BILL_RATE],[COST_RATE])
	SELECT 
		@ETF_ID, @NEW_ETF_OFFDTL_ID, ETFODEMP.EMP_CODE, ISNULL(ER.[BILL_RATE], ETFODEMP.[BILL_RATE]), ISNULL(ER.[COST_RATE], ETFODEMP.[COST_RATE]) 
	FROM 
		dbo.ETF_OFFDTLEMP AS ETFODEMP INNER JOIN
		#EMPLOYEE_RATES AS ER ON ER.EMP_CODE = ETFODEMP.EMP_CODE
	WHERE 
		ETFODEMP.ETF_OFFDTL_ID = @ETF_OFFDTL_ID
	----ALT EMPLOYEES
	INSERT INTO dbo.ETF_OFFDTLAE([ETF_ID],[ETF_OFFDTL_ID],[EMPLOYEE_TITLE_ID],[DESCRIPTION],[OFFICE_CODE],[BILL_RATE],[COST_RATE])
	SELECT 
		@ETF_ID, @NEW_ETF_OFFDTL_ID, ETFODAE.[EMPLOYEE_TITLE_ID], ETFODAE.[DESCRIPTION], ETFODAE.[OFFICE_CODE], ETFODAE.[BILL_RATE], ETFODAE.[COST_RATE]
	FROM 
		dbo.ETF_OFFDTLAE AS ETFODAE
	WHERE 
		ETFODAE.ETF_OFFDTL_ID = @ETF_OFFDTL_ID
	--EMP HOURS (JC)
	INSERT INTO dbo.ETF_OFFDTLJC_EMP([ETF_ID], [ETF_OFFDTL_ID], [ETF_OFFDTLJC_ID], [ETF_OFFDTLEMP_ID], [HOURS]) 
	SELECT 
		@ETF_ID, @NEW_ETF_OFFDTL_ID, NEWETF.[ETF_OFFDTLJC_ID], NEWETF.[ETF_OFFDTLEMP_ID], CASE WHEN @EXCLUDE_HOURS_ENTERED = 0 THEN OLDETF.[HOURS] ELSE 0 END 
	FROM 	
		(SELECT  
			EEMP.EMP_CODE,
			EJC.[JOB_NUMBER],
			EJC.[JOB_COMPONENT_NBR],
			EJC.ETF_OFFDTLJC_ID, 
			EEMP.ETF_OFFDTLEMP_ID 
		FROM 
			dbo.ETF_OFFDTLJC AS EJC CROSS JOIN 
			dbo.ETF_OFFDTLEMP AS EEMP 
		WHERE 
			EJC.ETF_OFFDTL_ID = @NEW_ETF_OFFDTL_ID AND 
			EEMP.ETF_OFFDTL_ID = @NEW_ETF_OFFDTL_ID) AS NEWETF INNER JOIN
		(SELECT 
			EEMP.EMP_CODE,
			EJC.[JOB_NUMBER],
			EJC.[JOB_COMPONENT_NBR],
			EJCEMP.[HOURS]
		FROM 
			dbo.ETF_OFFDTLJC_EMP AS EJCEMP INNER JOIN
			dbo.ETF_OFFDTLJC AS EJC ON EJC.ETF_OFFDTLJC_ID = EJCEMP.ETF_OFFDTLJC_ID INNER JOIN
			dbo.ETF_OFFDTLEMP AS EEMP ON EEMP.ETF_OFFDTLEMP_ID = EJCEMP.ETF_OFFDTLEMP_ID
		WHERE 
			EJCEMP.ETF_OFFDTL_ID = @ETF_OFFDTL_ID) AS OLDETF ON OLDETF.EMP_CODE = NEWETF.EMP_CODE AND
																OLDETF.JOB_NUMBER = NEWETF.JOB_NUMBER AND
																OLDETF.JOB_COMPONENT_NBR = NEWETF.JOB_COMPONENT_NBR
	--ALT EMP HOURS (JC)
	INSERT INTO dbo.ETF_OFFDTLJC_AE([ETF_ID], [ETF_OFFDTL_ID], [ETF_OFFDTLJC_ID], [ETF_OFFDTLAE_ID], [HOURS]) 
	SELECT 
		@ETF_ID, @NEW_ETF_OFFDTL_ID, NEWETF.[ETF_OFFDTLJC_ID], NEWETF.[ETF_OFFDTLAE_ID], CASE WHEN @EXCLUDE_HOURS_ENTERED = 0 THEN OLDETF.[HOURS] ELSE 0 END 
	FROM 	
		(SELECT  
			EAE.[DESCRIPTION],
			EJC.[JOB_NUMBER],
			EJC.[JOB_COMPONENT_NBR],
			EJC.ETF_OFFDTLJC_ID, 
			EAE.ETF_OFFDTLAE_ID
		FROM 
			dbo.ETF_OFFDTLJC AS EJC CROSS JOIN 
			dbo.ETF_OFFDTLAE AS EAE
		WHERE 
			EJC.ETF_OFFDTL_ID = @NEW_ETF_OFFDTL_ID AND 
			EAE.ETF_OFFDTL_ID = @NEW_ETF_OFFDTL_ID) AS NEWETF INNER JOIN
		(SELECT 
			EAE.[DESCRIPTION],
			EJC.[JOB_NUMBER],
			EJC.[JOB_COMPONENT_NBR],
			EJCEA.[HOURS]
		FROM 
			dbo.ETF_OFFDTLJC_AE AS EJCEA INNER JOIN
			dbo.ETF_OFFDTLJC AS EJC ON EJC.ETF_OFFDTLJC_ID = EJCEA.ETF_OFFDTLJC_ID INNER JOIN
			dbo.ETF_OFFDTLAE AS EAE ON EAE.ETF_OFFDTLAE_ID = EJCEA.ETF_OFFDTLAE_ID
		WHERE 
			EJCEA.ETF_OFFDTL_ID = @ETF_OFFDTL_ID) AS OLDETF ON OLDETF.[DESCRIPTION] = NEWETF.[DESCRIPTION] AND
															   OLDETF.JOB_NUMBER = NEWETF.JOB_NUMBER AND
															   OLDETF.JOB_COMPONENT_NBR = NEWETF.JOB_COMPONENT_NBR
	--EMP HOURS (CAT)
	INSERT INTO dbo.ETF_OFFDTLCAT_EMP([ETF_ID], [ETF_OFFDTL_ID], [ETF_OFFDTLCAT_ID], [ETF_OFFDTLEMP_ID], [HOURS]) 
	SELECT 
		@ETF_ID, @NEW_ETF_OFFDTL_ID, NEWETF.[ETF_OFFDTLCAT_ID], NEWETF.[ETF_OFFDTLEMP_ID], CASE WHEN @EXCLUDE_HOURS_ENTERED = 0 THEN OLDETF.[HOURS] ELSE 0 END 
	FROM 	
		(SELECT  
			EEMP.EMP_CODE,
			ECAT.[CATEGORY],
			ECAT.ETF_OFFDTLCAT_ID, 
			EEMP.ETF_OFFDTLEMP_ID 
		FROM 
			dbo.ETF_OFFDTLCAT AS ECAT CROSS JOIN 
			dbo.ETF_OFFDTLEMP AS EEMP 
		WHERE 
			ECAT.ETF_OFFDTL_ID = @NEW_ETF_OFFDTL_ID AND 
			EEMP.ETF_OFFDTL_ID = @NEW_ETF_OFFDTL_ID) AS NEWETF INNER JOIN
		(SELECT 
			EEMP.EMP_CODE,
			ECAT.[CATEGORY],
			ECATEMP.[HOURS]
		FROM 
			dbo.ETF_OFFDTLCAT_EMP AS ECATEMP INNER JOIN
			dbo.ETF_OFFDTLCAT AS ECAT ON ECAT.ETF_OFFDTLCAT_ID = ECATEMP.ETF_OFFDTLCAT_ID INNER JOIN
			dbo.ETF_OFFDTLEMP AS EEMP ON EEMP.ETF_OFFDTLEMP_ID = ECATEMP.ETF_OFFDTLEMP_ID
		WHERE 
			ECATEMP.ETF_OFFDTL_ID = @ETF_OFFDTL_ID) AS OLDETF ON OLDETF.EMP_CODE = NEWETF.EMP_CODE AND
																 OLDETF.[CATEGORY] = NEWETF.[CATEGORY]
	--ALT EMP HOURS (CAT)
	INSERT INTO dbo.ETF_OFFDTLCAT_AE([ETF_ID], [ETF_OFFDTL_ID], [ETF_OFFDTLCAT_ID], [ETF_OFFDTLAE_ID], [HOURS]) 
	SELECT 
		@ETF_ID, @NEW_ETF_OFFDTL_ID, NEWETF.[ETF_OFFDTLCAT_ID], NEWETF.[ETF_OFFDTLAE_ID], CASE WHEN @EXCLUDE_HOURS_ENTERED = 0 THEN OLDETF.[HOURS] ELSE 0 END 
	FROM 	
		(SELECT  
			EAE.[DESCRIPTION],
			ECAT.[CATEGORY],
			ECAT.ETF_OFFDTLCAT_ID, 
			EAE.ETF_OFFDTLAE_ID
		FROM 
			dbo.ETF_OFFDTLCAT AS ECAT CROSS JOIN 
			dbo.ETF_OFFDTLAE AS EAE
		WHERE 
			ECAT.ETF_OFFDTL_ID = @NEW_ETF_OFFDTL_ID AND 
			EAE.ETF_OFFDTL_ID = @NEW_ETF_OFFDTL_ID) AS NEWETF INNER JOIN
		(SELECT 
			EAE.[DESCRIPTION],
			ECAT.[CATEGORY],
			ECATEA.[HOURS]
		FROM 
			dbo.ETF_OFFDTLCAT_AE AS ECATEA INNER JOIN
			dbo.ETF_OFFDTLCAT AS ECAT ON ECAT.ETF_OFFDTLCAT_ID = ECATEA.ETF_OFFDTLCAT_ID INNER JOIN
			dbo.ETF_OFFDTLAE AS EAE ON EAE.ETF_OFFDTLAE_ID = ECATEA.ETF_OFFDTLAE_ID
		WHERE 
			ECATEA.ETF_OFFDTL_ID = @ETF_OFFDTL_ID) AS OLDETF ON OLDETF.[DESCRIPTION] = NEWETF.[DESCRIPTION] AND
																OLDETF.[CATEGORY] = NEWETF.[CATEGORY]
	 
	DROP TABLE #ESTIMATE_BUDGET_AMOUNTS
	DROP TABLE #EMPLOYEE_TITLE_BILLING_RATES
	DROP TABLE #EMPLOYEE_RATES
	
END
GO