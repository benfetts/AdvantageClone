SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS OFF 
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[advsp_get_content_for_user]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[advsp_get_content_for_user]
GO

CREATE PROCEDURE [dbo].[advsp_get_content_for_user] /*WITH ENCRYPTION*/
@USER_CODE VARCHAR(100),
@CONTENT_ID INT,
@EMP_CODE VARCHAR(6),
@JOB_NUMBER INT,
@JOB_COMPONENT_NBR SMALLINT
AS
BEGIN
/*=========== QUERY ===========*/

	--	PREFILL DEFAULT SET IF NON EXIST
	IF NOT EXISTS (SELECT TOP 1 * FROM CONTENT_USER WITH(NOLOCK) WHERE UPPER(USER_CODE) = UPPER(@USER_CODE) AND CONTENT_ID = @CONTENT_ID)
	BEGIN

		INSERT INTO CONTENT_USER
		SELECT UPPER(@USER_CODE), CD.CONTENT_ID, CD.CONTENT_ITEM_ID, CD.SEQ_NBR, 1 
		FROM CONTENT_DEFAULT CD INNER JOIN CONTENT_ITEM CI ON CD.CONTENT_ID = CI.ID 
		WHERE CD.CONTENT_ID = @CONTENT_ID AND CI.IS_ACTIVE = 1;
	
	END
	ELSE
	BEGIN
	
		INSERT INTO CONTENT_USER(USER_CODE, CONTENT_ID, CONTENT_ITEM_ID, SEQ_NBR, IS_VISIBLE)
		SELECT
			UPPER(@USER_CODE), CD.CONTENT_ID, CD.CONTENT_ITEM_ID, CD.SEQ_NBR, 1
		FROM
			CONTENT_DEFAULT CD INNER JOIN
			CONTENT_ITEM CI ON CD.CONTENT_ID = CI.ID LEFT OUTER JOIN
			(SELECT UPPER(USER_CODE) AS USER_CODE, CONTENT_ID, CONTENT_ITEM_ID, SEQ_NBR
			 FROM CONTENT_USER 
			 WHERE UPPER(USER_CODE) = UPPER(@USER_CODE)) CU ON CD.CONTENT_ID = CU.CONTENT_ID AND
												 CD.CONTENT_ITEM_ID = CU.CONTENT_ITEM_ID
		WHERE
			CD.CONTENT_ID = @CONTENT_ID AND CI.IS_ACTIVE = 1 AND CU.USER_CODE IS NULL;
	
	END;

	-- SEE IF ITEMS EXIST FOR JOB/COMP
	BEGIN

		DECLARE
			@HAS_JOB_JACKET BIT,
			@HAS_TEAM BIT,
			@HAS_ALERT BIT,
			@HAS_DOCUMENT BIT,
			@HAS_CREATIVE_BRIEF BIT,
			@HAS_SPECIFICATION BIT,
			@HAS_VERSION BIT,
			@HAS_ESTIMATE BIT,
			@HAS_SCHEDULE BIT,
			@HAS_PURCHASE_ORDER BIT,
			@HAS_EVENT BIT,
			@HAS_JOB_FORECAST BIT,
			@HAS_MEDIA_ORDER BIT,
			@HAS_ACCOUNT_SETUP BIT,
			@HAS_CHAT BIT,
			@HAS_REVIEW BIT,
			@HAS_BOARD BIT

		SET @HAS_JOB_JACKET = 0;
		SET @HAS_TEAM = 0;
		SET @HAS_ALERT = 0;
		SET @HAS_DOCUMENT = 0;
		SET @HAS_CREATIVE_BRIEF = 0;
		SET @HAS_SPECIFICATION = 0;
		SET @HAS_VERSION = 0;
		SET @HAS_ESTIMATE = 0;
		SET @HAS_SCHEDULE = 0;
		SET @HAS_PURCHASE_ORDER = 0;
		SET @HAS_EVENT = 0;
		SET @HAS_JOB_FORECAST = 0;
		SET @HAS_MEDIA_ORDER = 0;
		SET @HAS_ACCOUNT_SETUP = 0;
		SET @HAS_CHAT = 0;
		SET @HAS_REVIEW = 0;
		SET @HAS_BOARD = 0;

		IF @JOB_NUMBER > 0 AND @JOB_COMPONENT_NBR > 0
		BEGIN
			IF EXISTS (SELECT JOB_NUMBER FROM JOB_TRAFFIC WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
			BEGIN
				SET @HAS_SCHEDULE = 1;
			END
			IF EXISTS (SELECT JOB_NUMBER FROM JOB_VER_HDR WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
			BEGIN
				SET @HAS_VERSION = 1;
			END
			IF EXISTS (SELECT JOB_NUMBER FROM ALERT WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
			BEGIN
				SET @HAS_ALERT = 1;
			END
			IF EXISTS (SELECT JOB_NUMBER FROM ALERT WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND NOT CS_REVIEW_ID IS NULL)
			BEGIN
				SET @HAS_REVIEW = 1;
			END
			IF EXISTS (SELECT JOB_NUMBER FROM JOB_SPECS WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
			BEGIN
				SET @HAS_SPECIFICATION = 1;
			END
			-- CHECK FOR DOCUMENT
			BEGIN
				IF EXISTS (SELECT JOB_NUMBER FROM JOB_COMPONENT_DOCUMENTS WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NUMBER = @JOB_COMPONENT_NBR)
				BEGIN
					SET @HAS_DOCUMENT = 1;
				END
				IF @HAS_DOCUMENT = 0 
				BEGIN
					IF EXISTS (SELECT JOB_NUMBER FROM JOB_DOCUMENTS WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER)
					BEGIN
						SET @HAS_DOCUMENT = 1;
					END
				END
				IF @HAS_DOCUMENT = 0 
				BEGIN
					IF EXISTS (SELECT AD.AR_INV_NBR FROM ARINV_DOCUMENT AD INNER JOIN ARINV_JOB AJ ON AD.AR_INV_NBR = AJ.AR_INV_NBR AND AD.AR_INV_SEQ = AJ.AR_INV_SEQ AND AJ.JOB_NUMBER = @JOB_NUMBER AND AJ.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
					BEGIN
						SET @HAS_DOCUMENT = 1;
					END
				END
				--IF @HAS_DOCUMENT = 0 
				--BEGIN
				--	IF EXISTS (SELECT AD.AR_INV_NBR FROM ARINV_DOCUMENT AD INNER JOIN ARINV_JOB AJ ON AD.AR_INV_NBR = AJ.AR_INV_NBR AND AD.AR_INV_SEQ = AJ.AR_INV_SEQ AND AJ.JOB_NUMBER = @JOB_NUMBER)
				--	BEGIN
				--		SET @HAS_DOCUMENT = 1;
				--	END
				--END
				IF @HAS_DOCUMENT = 0 
				BEGIN
					IF EXISTS (SELECT AD.AP_ID FROM AP_DOCUMENTS AD INNER JOIN AP_PRODUCTION AP ON AD.AP_ID = AP.AP_ID AND AP.JOB_NUMBER = @JOB_NUMBER AND AP.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
					BEGIN
						SET @HAS_DOCUMENT = 1;
					END
				END
				--IF @HAS_DOCUMENT = 0 
				--BEGIN
				--	IF EXISTS (SELECT AD.AP_ID FROM AP_DOCUMENTS AD INNER JOIN AP_PRODUCTION AP ON AD.AP_ID = AP.AP_ID AND AP.JOB_NUMBER = @JOB_NUMBER)
				--	BEGIN
				--		SET @HAS_DOCUMENT = 1;
				--	END
				--END
                IF @HAS_DOCUMENT = 0 
				BEGIN
					IF EXISTS (SELECT JOB_NUMBER FROM JOB_TRAFFIC_DET_DOCS WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
					BEGIN
						SET @HAS_DOCUMENT = 1;
					END
				END
			END
			IF EXISTS (SELECT JOB_NUMBER FROM PURCHASE_ORDER_DET WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
			BEGIN
				SET @HAS_PURCHASE_ORDER = 1;
			END
			IF EXISTS (SELECT JOB_NUMBER FROM CRTV_BRF_DTL WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
			BEGIN
				SET @HAS_CREATIVE_BRIEF = 1;
			END
			IF EXISTS (SELECT JOB_NUMBER FROM [EVENT] WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
			BEGIN
				SET @HAS_EVENT = 1;
			END
			IF NOT (SELECT ESTIMATE_NUMBER FROM JOB_COMPONENT WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR) IS NULL
			BEGIN
				SET @HAS_ESTIMATE = 1;
			END
			IF EXISTS (SELECT JOB_NUMBER FROM JF_JOB WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
			BEGIN
				SET @HAS_JOB_FORECAST = 1;
				SET @HAS_ACCOUNT_SETUP = 1;
			END
			IF @HAS_ACCOUNT_SETUP = 0
			BEGIN
				IF EXISTS (SELECT JOB_NUMBER FROM ACCOUNT_SETUP_FORM WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
				BEGIN
					SET @HAS_ACCOUNT_SETUP = 1;
				END
			END
			IF EXISTS (SELECT JOB_NUMBER FROM CHAT_ROOM WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
			BEGIN
				SET @HAS_CHAT = 1;
			END
			IF @HAS_CHAT = 0
			BEGIN
				IF EXISTS (SELECT JOB_NUMBER FROM CHAT_ROOM WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER)
				BEGIN
					SET @HAS_CHAT = 1;
				END
			END;
			IF EXISTS (SELECT JOB_NUMBER FROM BOARD_JOB BJ INNER JOIN BOARD B ON BJ.BOARD_ID = B.ID WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR)
			BEGIN
				SET @HAS_BOARD = 1;
			END

			-- CHECK FOR MEDIA
			BEGIN
				IF EXISTS (SELECT JOB_NUMBER FROM INTERNET_DETAIL WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND ACTIVE_REV = 1) 
				BEGIN
					SET @HAS_MEDIA_ORDER = 1;
				END;
				IF @HAS_MEDIA_ORDER = 0
				BEGIN
					IF EXISTS (SELECT JOB_NUMBER FROM MAGAZINE_DETAIL WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND ACTIVE_REV = 1) 
					BEGIN
						SET @HAS_MEDIA_ORDER = 1;
					END;
				END;
				IF @HAS_MEDIA_ORDER = 0
				BEGIN
					IF EXISTS (SELECT JOB_NUMBER FROM NEWSPAPER_DETAIL WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND ACTIVE_REV = 1) 
					BEGIN
						SET @HAS_MEDIA_ORDER = 1;
					END;
				END;
				IF @HAS_MEDIA_ORDER = 0
				BEGIN
					IF EXISTS (SELECT JOB_NUMBER FROM OUTDOOR_DETAIL WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND ACTIVE_REV = 1) 
					BEGIN
						SET @HAS_MEDIA_ORDER = 1;
					END;
				END;
				IF @HAS_MEDIA_ORDER = 0
				BEGIN
					IF EXISTS (SELECT JOB_NUMBER FROM RADIO_DETAIL WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND ACTIVE_REV = 1) 
					BEGIN
						SET @HAS_MEDIA_ORDER = 1;
					END;
				END;
				IF @HAS_MEDIA_ORDER = 0
				BEGIN
					IF EXISTS (SELECT JOB_NUMBER FROM TV_DETAIL WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND ACTIVE_REV = 1)
					BEGIN
						SET @HAS_MEDIA_ORDER = 1;
					END;
				END;
			END;
		END;
	END;

	-- GET DISPLAY
	BEGIN
		
		DECLARE @CUSTOM_LABEL VARCHAR(50);
		SELECT @CUSTOM_LABEL = COALESCE(NULLIF(CAST(AGY_SETTINGS_VALUE AS VARCHAR), ''), CAST(AGY_SETTINGS_DEF AS VARCHAR), 'Versions') FROM AGY_SETTINGS WITH(NOLOCK) WHERE AGY_SETTINGS_CODE = 'JOB_VERSION_DESC';

		SELECT 
			ISNULL(CU.ID, 0) AS ContentUserID,
			ISNULL(CI.ID, 0) AS ContentItemID,
			CASE
				WHEN CONTENT_CODE = 'JobVersion' THEN @CUSTOM_LABEL
				ELSE CI.NAME 
			END	AS Name, 
			CI.PAGE_NAME AS PageName,
			CI.USER_CONTROL_NAME AS UserControlName,
			CI.VIEW_NAME AS ViewName,
			CI.FORM_NAME AS FormName,
			ISNULL(CU.IS_VISIBLE, 1) AS IsVisible,
			CI.CONTENT_CODE AS ContentCode,
			CI.MODULE_CODE AS ModuleCode,
			CASE
				WHEN CI.CONTENT_CODE = 'JobStatus' THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'JobTemplate' THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'JobStatus_Team' THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'Alerts' AND @HAS_ALERT = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'Documents' AND @HAS_DOCUMENT = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'CreativeBrief' AND @HAS_CREATIVE_BRIEF = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'JobSpecifications' AND @HAS_SPECIFICATION = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'JobVersion' AND @HAS_VERSION = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'Estimates' AND @HAS_ESTIMATE = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'Schedule' AND @HAS_SCHEDULE = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'PurchaseOrder' AND @HAS_PURCHASE_ORDER = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'Events' AND @HAS_EVENT = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'Gantt' AND @HAS_SCHEDULE = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'Risk' AND @HAS_SCHEDULE = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'Calendar' THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'Workload' AND @HAS_SCHEDULE = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'FinancialStatus' THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'Billing' THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'Reports' THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'JobForecasts' AND @HAS_JOB_FORECAST = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'MediaOrderList' AND @HAS_MEDIA_ORDER = 1 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'AccountSetupForm' AND @HAS_ACCOUNT_SETUP > 0 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'Chat' AND @HAS_CHAT > 0 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'DigitalAssetReviews' AND @HAS_REVIEW > 0 THEN CAST(1 AS BIT)
				WHEN CI.CONTENT_CODE = 'ProjectBoard' AND @HAS_BOARD > 0 THEN CAST(1 AS BIT)
				ELSE CAST(0 AS BIT)
			END AS HasContent
		FROM 
            CONTENT_ITEM CI
			LEFT OUTER JOIN CONTENT_USER CU ON CI.ID = CU.CONTENT_ITEM_ID
		WHERE 
			(UPPER(CU.USER_CODE) = UPPER(@USER_CODE) OR CU.USER_CODE IS NULL)
			AND (CU.CONTENT_ID = @CONTENT_ID OR CU.CONTENT_ID IS NULL)
			AND CI.IS_ACTIVE = 1 and CI.NAME <> 'Gantt'
		ORDER BY
			CU.SEQ_NBR;

	END

/*=========== QUERY ===========*/
END
GO
SET QUOTED_IDENTIFIER ON 
GO
SET ANSI_NULLS ON 
GO