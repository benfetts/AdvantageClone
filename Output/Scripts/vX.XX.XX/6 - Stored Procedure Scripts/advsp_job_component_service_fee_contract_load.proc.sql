CREATE PROCEDURE [dbo].[advsp_job_component_service_fee_contract_load] 
	@JOB_SERVICE_FEE_ID INT = 0,
	@CL_CODE VARCHAR(6) = NULL,
	@DIV_CODE VARCHAR(6) = NULL,
	@PRD_CODE VARCHAR(6) = NULL,
	@JOB_NUMBER INT = 0,
	@JOB_COMPONENT_NBR INT = 0,
	@USER_CODE VARCHAR(100)
AS
BEGIN

	SELECT 
		[ID] = JOB_SERVICE_FEE.JOB_SERVICE_FEE_ID,
		[OfficeCode] = OFFICE.OFFICE_CODE,
		[OfficeName] = OFFICE.OFFICE_NAME,
		[ClientCode] = CLIENT.CL_CODE,
		[ClientName] = CLIENT.CL_NAME,
		[DivisionCode] = DIVISION.DIV_CODE,
		[DivisionName] = DIVISION.DIV_NAME,
		[ProductCode] = PRODUCT.PRD_CODE,
		[ProductName] = PRODUCT.PRD_DESCRIPTION,
		[JobNumber] = JOB_SERVICE_FEE.JOB_NUMBER,
		[JobDescription] = JOB_LOG.JOB_DESC,
		[JobComponentNumber] = JOB_SERVICE_FEE.JOB_COMPONENT_NBR,
		[JobComponentDescription] = JOB_COMPONENT.JOB_COMP_DESC,
		[IsServiceFeeJob] = CONVERT(BIT, ISNULL(JOB_COMPONENT.SERVICE_FEE_FLAG, 0)),
		[ServiceFeeTypeID] = JOB_COMPONENT.SERVICE_FEE_TYPE_ID,
		[ServiceFeeTypeCode] = SERVICE_FEE_TYPE.CODE,
		[ServiceFeeTypeDescription] = SERVICE_FEE_TYPE.[DESCRIPTION],
		[SalesClassCode] = JOB_LOG.SC_CODE,
		[SalesClassDescription] = SALES_CLASS.SC_DESCRIPTION,
		[AccountExecutiveCode] = JOB_COMPONENT.EMP_CODE,
		[AccountExecutiveName] = dbo.advfn_get_emp_name(JOB_COMPONENT.EMP_CODE, 'FML'),
		[FeeDescription] = JOB_SERVICE_FEE.FEE_DESCRIPTION,
		[FeeStartDate] = JOB_SERVICE_FEE.FEE_START_DATE,
		[FeeEndDate] = JOB_SERVICE_FEE.FEE_END_DATE,
		[Frequency] = JOB_SERVICE_FEE.FREQUENCY,
		[NumberOfFees] = JOB_SERVICE_FEE.NUMBER_OF_FEES,
		[FunctionCode] = JOB_SERVICE_FEE.FNC_CODE,
		[FunctionDescription] = FUNCTIONS.FNC_DESCRIPTION,
		[Quantity] = JOB_SERVICE_FEE.FEE_QTY,
		[Rate] = JOB_SERVICE_FEE.FEE_RATE,
		[FeeAmount] = JOB_SERVICE_FEE.FEE_AMT,
		[MaxAmount] = JOB_SERVICE_FEE.MAX_AMT,
		[ClientComments] = JOB_SERVICE_FEE.CLIENT_COMMENT,
		[ContractNotes] = JOB_SERVICE_FEE.CONTACT_INFO,
		[HasRecords] = CONVERT(BIT, CASE WHEN INCOME_ONLY.JOB_SERVICE_FEE_ID IS NOT NULL THEN 1 ELSE 0 END),
		[LastRecordGenerated] = INCOME_ONLY.IO_INV_DATE,
		[CreatedDate] = JOB_SERVICE_FEE.CREATE_DATE,
		[CreatedBy] = JOB_SERVICE_FEE.CREATED_BY,
		[ModifiedDate] = JOB_SERVICE_FEE.MODIFY_DATE,
		[ModifiedBy] = JOB_SERVICE_FEE.MODIFIED_BY,
		[MissingRecords] = ISNULL(JOB_SERVICE_FEE.NUMBER_OF_FEES, 0) - ISNULL([dbo].[advfn_service_fee_load_count](INCOME_ONLY.JOB_SERVICE_FEE_ID, JOB_SERVICE_FEE.FEE_START_DATE, JOB_SERVICE_FEE.FEE_END_DATE), 0)
	FROM 
		dbo.JOB_SERVICE_FEE JOIN
		dbo.JOB_LOG ON JOB_SERVICE_FEE.JOB_NUMBER = JOB_LOG.JOB_NUMBER JOIN
		dbo.JOB_COMPONENT ON JOB_SERVICE_FEE.JOB_NUMBER = JOB_COMPONENT.JOB_NUMBER AND
							 JOB_SERVICE_FEE.JOB_COMPONENT_NBR = JOB_COMPONENT.JOB_COMPONENT_NBR JOIN
		dbo.CLIENT ON JOB_LOG.CL_CODE = CLIENT.CL_CODE JOIN
		dbo.DIVISION ON JOB_LOG.CL_CODE = DIVISION.CL_CODE AND
						JOB_LOG.DIV_CODE = DIVISION.DIV_CODE JOIN
		dbo.PRODUCT ON JOB_LOG.CL_CODE = PRODUCT.CL_CODE AND
					   JOB_LOG.DIV_CODE = PRODUCT.DIV_CODE AND
					   JOB_LOG.PRD_CODE = PRODUCT.PRD_CODE JOIN
		dbo.OFFICE ON PRODUCT.OFFICE_CODE = OFFICE.OFFICE_CODE LEFT OUTER JOIN
		dbo.FUNCTIONS ON JOB_SERVICE_FEE.FNC_CODE = FUNCTIONS.FNC_CODE LEFT OUTER JOIN
		dbo.SERVICE_FEE_TYPE ON JOB_COMPONENT.SERVICE_FEE_TYPE_ID = SERVICE_FEE_TYPE.SERVICE_FEE_TYPE_ID LEFT OUTER JOIN
		dbo.EMPLOYEE ON JOB_COMPONENT.EMP_CODE = EMPLOYEE.EMP_CODE LEFT OUTER JOIN
		dbo.SALES_CLASS ON JOB_LOG.SC_CODE = SALES_CLASS.SC_CODE LEFT OUTER JOIN
		(SELECT	
			[JOB_SERVICE_FEE_ID] = INCOME_ONLY.JOB_SERVICE_FEE_ID,
			[FEE_COUNT] = COUNT(*),
			[IO_INV_DATE] = MAX(INCOME_ONLY.IO_INV_DATE)
		 FROM	
			dbo.INCOME_ONLY JOIN
			(SELECT	
				INCOME_ONLY.IO_ID,
 				INCOME_ONLY.SEQ_NBR
			 FROM
				dbo.INCOME_ONLY
			 WHERE 
				ISNULL(INCOME_ONLY.DELETE_FLAG, 0) = 0 AND
				ISNULL(INCOME_ONLY.MODIFY_FLAG, 0) = 0
			UNION
			SELECT
				INCOME_ONLY.IO_ID,
 				INCOME_ONLY.SEQ_NBR
			FROM
				dbo.INCOME_ONLY JOIN
				(SELECT
					[IO_ID] = INCOME_ONLY.IO_ID,
  					[SEQ_NBR] = MAX(INCOME_ONLY.SEQ_NBR)
				 FROM	
					dbo.INCOME_ONLY
				 GROUP BY
					INCOME_ONLY.IO_ID) IO_MAX ON INCOME_ONLY.IO_ID = IO_MAX.IO_ID AND	
												 INCOME_ONLY.SEQ_NBR = IO_MAX.SEQ_NBR
			WHERE	
				ISNULL(INCOME_ONLY.DELETE_FLAG, 0) = 0 AND
				ISNULL(INCOME_ONLY.MODIFY_FLAG, 0) = 1) IO_CURRENT ON INCOME_ONLY.IO_ID = IO_CURRENT.IO_ID AND		
																	  INCOME_ONLY.SEQ_NBR = IO_CURRENT.SEQ_NBR
		 WHERE
			INCOME_ONLY.JOB_SERVICE_FEE_ID IS NOT NULL
		 GROUP BY
			INCOME_ONLY.JOB_SERVICE_FEE_ID) INCOME_ONLY ON JOB_SERVICE_FEE.JOB_SERVICE_FEE_ID = INCOME_ONLY.JOB_SERVICE_FEE_ID  
														   AND INCOME_ONLY.[IO_INV_DATE] >= JOB_SERVICE_FEE.FEE_START_DATE 
														   AND INCOME_ONLY.[IO_INV_DATE] <= JOB_SERVICE_FEE.FEE_END_DATE INNER JOIN
		dbo.advtf_user_job_limits(@USER_CODE) JL ON JOB_COMPONENT.JOB_NUMBER = JL.JOB_NUMBER
	WHERE
		JOB_COMPONENT.JOB_PROCESS_CONTRL IN (1, 8, 9, 10, 11) AND
		1 = CASE WHEN ISNULL(@JOB_SERVICE_FEE_ID, 0) = 0 THEN 1 WHEN JOB_SERVICE_FEE.JOB_SERVICE_FEE_ID = @JOB_SERVICE_FEE_ID THEN 1 ELSE 0 END AND
		1 = CASE WHEN ISNULL(@CL_CODE, '') = '' THEN 1 WHEN JOB_LOG.CL_CODE = @CL_CODE THEN 1 ELSE 0 END AND  
		1 = CASE WHEN ISNULL(@DIV_CODE, '') = '' THEN 1 WHEN JOB_LOG.DIV_CODE = @DIV_CODE THEN 1 ELSE 0 END AND   
		1 = CASE WHEN ISNULL(@PRD_CODE, '') = '' THEN 1 WHEN JOB_LOG.PRD_CODE = @PRD_CODE THEN 1 ELSE 0 END AND  
		1 = CASE WHEN ISNULL(@JOB_NUMBER, 0) = 0 THEN 1 WHEN JOB_SERVICE_FEE.JOB_NUMBER = @JOB_NUMBER THEN 1 ELSE 0 END AND
		1 = CASE WHEN ISNULL(@JOB_COMPONENT_NBR, 0) = 0 THEN 1 WHEN JOB_SERVICE_FEE.JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR THEN 1 ELSE 0 END

END
GO