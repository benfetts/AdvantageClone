/****** Open PO's with Job & AP Details ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'dbo.advsp_po_job_ap_detail_dataset') AND type in (N'P', N'PC'))
DROP PROCEDURE dbo.advsp_po_job_ap_detail_dataset
GO


CREATE PROCEDURE dbo.advsp_po_job_ap_detail_dataset
	@begin_date smalldatetime,
	@end_date smalldatetime,
	@include_closed bit,
	@include_voided bit,
	@include_clientpos bit,
	@include_nonclientpos bit,
	@CLIENT_LIST AS varchar(MAX) = NULL,
	@DIVISION_LIST AS varchar(MAX) = NULL,
	@PRODUCT_LIST AS varchar(MAX) = NULL,
	@VENDOR_LIST AS varchar(MAX) = NULL
AS
BEGIN

/* 
Used by AdvantageFramework.Reporting.Database.Classes.[OpenPurchaseOrderDetail.vb]
		in AdvantageFramework.Reporting.[Methods.vb] 
*/


DECLARE @poh TABLE
(
	PO_NUMBER int NOT NULL,
	PO_CREATE_DATE smalldatetime NULL,
	PO_TYPE varchar(15) NULL,
	[USER_ID] varchar(100) NULL,
	VN_CODE varchar(6) NULL,
	EMP_CODE varchar(6) NULL,
	PO_DATE smalldatetime NULL,
	PO_DUE_DATE smalldatetime NULL,
	PO_DESCRIPTION varchar(40) NULL,
	PO_MAIN_INSTRUCT varchar(max) NULL,
	PO_COMPLETE smallint NULL,
	DEL_INSTRUCT  varchar(max) NULL,
	VOID_FLAG smallint NULL,
	VOIDED_BY varchar(100) NULL,
	VOID_DATE smalldatetime NULL,
	VOIDED varchar(6),
	PO_REVISION smallint NULL,
	PO_WORK_COMPLETE smallint NULL,
	ARCHIVE_FLAG smallint NULL,
	VN_CONT_CODE varchar(4) NULL,
	PO_FOOTER  varchar(max) NULL,
	WV_FLAG smallint NULL,
	PO_APPROVAL_FLAG smallint NULL,
	PO_PRINTED smallint NULL,
	PO_APPR_RULE_CODE varchar(6) NULL,
	LOCK_USER varchar(100) NULL,
	USER_MODIFIED varchar(100) NULL,
	MODIFIED_DATE smalldatetime NULL,
	/*****************************************/
	LINE_NUMBER int NOT NULL,
	DET_DESC  varchar(max) NULL,
	LINE_DESC varchar(40) NULL,
	DET_INSTRUCT  varchar(max) NULL,
	PO_QTY int NULL,
	PO_RATE decimal(17, 4) NULL,
	PO_EXT_AMOUNT decimal(14, 2) NULL,
	PO_TAX_PCT decimal(8, 4) NULL,
	PO_COMPLETE_DET smallint NULL,
	PO_TOTAL_AMOUNT decimal(14, 2) NULL,
	JOB_NUMBER int NULL,
	JOB_COMPONENT_NBR smallint NULL,
	FNC_CODE varchar(6) NULL,
	PO_COMM_PCT decimal(9, 3) NULL,
	EXT_MARKUP_AMT decimal(15, 2) NULL,
	GLACODE varchar(30) NULL,
	GLADESC varchar(75) NULL,
	BA_ID int NULL,
	/*****************************************/
	CL_CODE varchar(6) NULL,
	CL_NAME varchar(40) NULL,
	DIV_CODE varchar(6) NULL,
	DIV_NAME varchar(40) NULL,
	PRD_CODE varchar(6) NULL,
	PRD_DESCRIPTION varchar(40) NULL,
	JOB_DESC varchar(60) NULL,
	JOB_COMP_DESC varchar(60) NULL,
	JOB_COMP_OPEN varchar(5) NULL,
	JOB_PROCESS_CONTRL int NULL,
	JOB_PROCESS_DESC varchar(40) NULL,
	FNC_DESCRIPTION varchar(40) NULL,
	EMP_LNAME varchar(40) NULL,
	EMP_FNAME varchar(40) NULL,
	EMP_MI varchar(2) NULL,
	AP_NET_AMT decimal(15, 2) NULL,
	AP_GROSS_AMT decimal(15, 2) NULL,
	AP_MARKUP_AMT decimal(15, 2) NULL,
	AP_BILLED_NET_AMT decimal(15, 2) NULL,
	AP_BILLED_GROSS_AMT decimal(15, 2) NULL,	
	AP_PO_COMPLETE smallint,
	AP_INV_LIST varchar (max),
	
	VN_NAME varchar(40) NULL,
	VN_ADDRESS1 varchar(40) NULL,
	VN_ADDRESS2 varchar(40) NULL,
	VN_ADDRESS3 varchar(30) NULL,
	VN_CITY varchar(25) NULL,
	VN_COUNTY varchar(20) NULL,
	VN_STATE varchar(10) NULL,
	VN_COUNTRY varchar(20) NULL,
	VN_ZIP varchar(10) NULL,
	VN_OFFICE_CODE varchar(6) NULL,
	VN_OFFICE_NAME varchar(30) NULL,
	
	PO_NET_BALANCE decimal(15, 2) NULL,
	PO_GROSS_BALANCE decimal(15, 2) NULL,
	
	PO_STATUS varchar(25) NULL
	)

DECLARE @ap TABLE (
	AP_ID int NOT NULL,
	AP_INV_VCHR varchar(20) NOT NULL,
	PO_NUMBER int NOT NULL,
	PO_LINE_NUMBER int NOT NULL,
	AP_SOURCE varchar(8) NOT NULL
	)

DECLARE @ap_list varchar(max)

SET @ap_list = ''

INSERT INTO @poh
			(PO_NUMBER, PO_DESCRIPTION, PO_DATE, PO_DUE_DATE, PO_MAIN_INSTRUCT, [USER_ID], VN_CODE, VN_NAME, 
			VN_ADDRESS1, VN_ADDRESS2, VN_ADDRESS3, VN_CITY, VN_STATE, VN_ZIP, VN_OFFICE_CODE, VN_OFFICE_NAME, DET_DESC, DET_INSTRUCT, FNC_CODE, 
			JOB_NUMBER, JOB_COMPONENT_NBR, DEL_INSTRUCT, PO_EXT_AMOUNT, PO_TAX_PCT, PO_QTY, PO_RATE, EXT_MARKUP_AMT, EMP_CODE, 
			PO_COMPLETE, LINE_NUMBER, LINE_DESC, PO_FOOTER, VOID_FLAG, PO_CREATE_DATE, GLACODE, GLADESC,
			CL_CODE, CL_NAME, DIV_CODE, DIV_NAME, PRD_CODE, PRD_DESCRIPTION, JOB_DESC, JOB_COMP_DESC, 
			JOB_COMP_OPEN, JOB_PROCESS_CONTRL, JOB_PROCESS_DESC, PO_TYPE, PO_WORK_COMPLETE, 
			C.FNC_DESCRIPTION, D.EMP_LNAME, D.EMP_FNAME, D.EMP_MI, A.PO_STATUS, A.PO_APPROVAL_FLAG, A.PO_PRINTED, A.PO_APPR_RULE_CODE )

SELECT A.PO_NUMBER, A.PO_DESCRIPTION, A.PO_DATE, A.PO_DUE_DATE, A.PO_MAIN_INSTRUCT, A.[USER_ID], A.VN_CODE, A.VN_NAME, 
			VN_ADDRESS1, A.VN_ADDRESS2, A.VN_ADDRESS3, A.VN_CITY, A.VN_STATE, A.VN_ZIP, A.OFFICE_CODE, A.OFFICE_NAME, A.DET_DESC, A.DET_INSTRUCT, A.FNC_CODE, 
			A.JOB_NUMBER, A.JOB_COMPONENT_NBR, A.DEL_INSTRUCT, A.PO_EXT_AMOUNT, A.PO_TAX_PCT, A.PO_QTY, A.PO_RATE, A.EXT_MARKUP_AMT, A.EMP_CODE, 
			A.PO_COMPLETE, A.LINE_NUMBER, A.LINE_DESC, A.PO_FOOTER, A.VOID_FLAG, A.PO_CREATE_DATE,  A.GLACODE, A.GLADESC,  
			B.CL_CODE, B.CL_NAME, B.DIV_CODE, B.DIV_NAME, B.PRD_CODE, B.PRD_DESCRIPTION, B.JOB_DESC, B.JOB_COMP_DESC, 
			B.JOB_COMP_OPEN, JOB_PROCESS_CONTRL, JOB_PROCESS_DESC, CASE WHEN A.JOB_NUMBER IS NULL THEN 'Non Client' ELSE 'Client' END, 
			PO_WORK_COMPLETE,
			C.FNC_DESCRIPTION, D.EMP_LNAME, D.EMP_FNAME, D.EMP_MI, A.PO_STATUS, A.PO_APPROVAL_FLAG, A.PO_PRINTED, A.PO_APPR_RULE_CODE
FROM (
	SELECT A.PO_NUMBER, PO_DESCRIPTION, PO_DATE, PO_DUE_DATE, PO_MAIN_INSTRUCT, A.[USER_ID], A.VN_CODE, VN_NAME, 
				VN_ADDRESS1, VN_ADDRESS2, VN_ADDRESS3, VN_CITY, VN_STATE, VN_ZIP, C.OFFICE_CODE, O.OFFICE_NAME, DET_DESC, DET_INSTRUCT, B.FNC_CODE, 
				B.JOB_NUMBER, JOB_COMPONENT_NBR, DEL_INSTRUCT, PO_EXT_AMOUNT, PO_TAX_PCT, PO_QTY, PO_RATE, EXT_MARKUP_AMT, EMP_CODE, 
				B.PO_COMPLETE, LINE_NUMBER, LINE_DESC, PO_FOOTER, VOID_FLAG, PO_CREATE_DATE,  B.GLACODE, E.GLADESC, A.PO_WORK_COMPLETE,
				A.PO_APPROVAL_FLAG, A.PO_PRINTED, A.PO_APPR_RULE_CODE, 
				CASE
					WHEN PO_APPR_RULE_CODE IS NULL THEN 'None'
					WHEN PO_APPR_RULE_CODE IS NOT NULL AND PO_APPROVAL_FLAG = 1 THEN 'Pending'
					WHEN PO_APPR_RULE_CODE IS NOT NULL AND PO_APPROVAL_FLAG = 2 THEN 'Approved'
					WHEN PO_APPR_RULE_CODE IS NOT NULL AND PO_APPROVAL_FLAG = 3 THEN 'Denied'
					WHEN PO_APPR_RULE_CODE IS NOT NULL AND COALESCE(PO_APPROVAL_FLAG,0) = 0 AND COALESCE(PO_PRINTED,0) = 0 THEN 'Incomplete'
					WHEN PO_APPR_RULE_CODE IS NOT NULL AND COALESCE(PO_APPROVAL_FLAG,0) = 0 AND PO_PRINTED = 1 THEN 'None'
				END AS PO_STATUS				
	FROM dbo.PURCHASE_ORDER A 
		JOIN dbo.PURCHASE_ORDER_DET B ON A.PO_NUMBER=B.PO_NUMBER 
		JOIN dbo.VENDOR C ON A.VN_CODE=C.VN_CODE
		LEFT OUTER JOIN dbo.JOB_LOG D ON B.JOB_NUMBER = D.JOB_NUMBER
		LEFT OUTER JOIN dbo.GLACCOUNT E ON E.GLACODE =  B.GLACODE
		LEFT OUTER JOIN dbo.OFFICE O ON O.OFFICE_CODE = C.OFFICE_CODE
	WHERE ((VOID_FLAG IS NULL OR VOID_FLAG = 0) OR @include_voided = 1) AND
		((A.PO_COMPLETE IS NULL OR A.PO_COMPLETE = 0) OR @include_closed = 1) AND
		((A.PO_DATE BETWEEN @begin_date AND @end_date) OR @begin_date IS NULL)
) A 
LEFT OUTER JOIN (
	SELECT JOB_DESC, jl.CL_CODE, CL_NAME, jl.DIV_CODE, DIV_NAME, jl.PRD_CODE, PRD_DESCRIPTION, 
		JOB_COMP_DESC, jl.JOB_NUMBER, jc.JOB_COMPONENT_NBR, CASE WHEN jl.COMP_OPEN = 0 THEN 'No' ELSE 'Yes' END AS JOB_COMP_OPEN,
		jc.JOB_PROCESS_CONTRL, jpc.JOB_PROCESS_DESC
	FROM dbo.JOB_LOG jl
	JOIN dbo.CLIENT c ON jl.CL_CODE = c.CL_CODE
	JOIN dbo.DIVISION d ON jl.CL_CODE = d.CL_CODE AND jl.DIV_CODE = d.DIV_CODE
	JOIN dbo.PRODUCT p ON jl.CL_CODE = p.CL_CODE   AND jl.DIV_CODE = p.DIV_CODE    AND jl.PRD_CODE = p.PRD_CODE  
	JOIN dbo.JOB_COMPONENT jc ON jc.JOB_NUMBER = jl.JOB_NUMBER
	JOIN dbo.JOB_PROC_CONTROLS jpc ON jpc.JOB_PROCESS_CONTRL = jc.JOB_PROCESS_CONTRL
) B ON A.JOB_NUMBER = B.JOB_NUMBER  AND  A.JOB_COMPONENT_NBR = B.JOB_COMPONENT_NBR
LEFT OUTER JOIN dbo.FUNCTIONS C ON A.FNC_CODE = C.FNC_CODE
JOIN dbo.EMPLOYEE D ON A.EMP_CODE = D.EMP_CODE

--WHERE (VOID_FLAG IS NULL OR VOID_FLAG = 0) AND
--		(A.PO_COMPLETE IS NULL OR A.PO_COMPLETE = 0)


UPDATE A
SET A.AP_PO_COMPLETE = B.PO_COMPLETE,
		A.AP_NET_AMT = B.AP_NET_AMT,
		A.AP_GROSS_AMT = B.AP_GROSS_AMT,
		A.AP_MARKUP_AMT = B.AP_MARKUP_AMT,
		A.AP_BILLED_NET_AMT = B.AP_BILLED_NET_AMT,
		A.AP_BILLED_GROSS_AMT = B.AP_BILLED_GROSS_AMT	
FROM @poh A
    INNER JOIN  (
		SELECT AP.PO_NUMBER, AP.PO_LINE_NUMBER, PO_COMPLETE = MAX(ISNULL(AP.PO_COMPLETE, 0)), 	
					AP_NET_AMT = SUM(AP.AP_PROD_EXT_AMT), AP_GROSS_AMT = SUM(AP.AP_PROD_EXT_AMT) + SUM(AP.EXT_MARKUP_AMT), AP_MARKUP_AMT = SUM(AP.EXT_MARKUP_AMT),
					AP_BILLED_NET_AMT = SUM(CASE WHEN AP.AR_INV_NBR IS NOT NULL THEN AP.AP_PROD_EXT_AMT ELSE 0 END), 
					AP_BILLED_GROSS_AMT = SUM(CASE WHEN AP.AR_INV_NBR IS NOT NULL THEN AP.AP_PROD_EXT_AMT ELSE 0 END) + SUM(CASE WHEN AP.AR_INV_NBR IS NOT NULL THEN AP.EXT_MARKUP_AMT ELSE 0 END)
		FROM dbo.AP_PRODUCTION AP JOIN  dbo.AP_HEADER AH ON AP.AP_ID = AH.AP_ID
		WHERE ISNULL(AP.PO_NUMBER, 0) <> 0 AND 
			ISNULL(AP.DELETE_FLAG, 0) = 0 AND 
			ISNULL(AP.MODIFY_DELETE, 0) = 0 AND 
			ISNULL(AH.MODIFY_FLAG, 0) = 0 		
		GROUP BY 
			AP.PO_NUMBER, 
			AP.PO_LINE_NUMBER 
		HAVING 
			SUM(AP.AP_PROD_EXT_AMT) <> 0
		UNION		
		SELECT AP.PO_NUMBER, AP.PO_LINE_NUMBER, PO_COMPLETE = NULL, 	
					AP_NET_AMT = SUM(AP.AP_GL_AMT), AP_GROSS_AMT = SUM(AP.AP_GL_AMT), AP_MARKUP_AMT = 0,
					AP_BILLED_NET_AMT = 0, 
					AP_BILLED_GROSS_AMT = 0 				
		FROM dbo.AP_GL_DIST AP JOIN  dbo.AP_HEADER AH ON AP.AP_ID = AH.AP_ID
		WHERE ISNULL(AP.PO_NUMBER, 0) <> 0 AND 
			ISNULL(AP.DELETE_FLAG, 0) = 0 AND 
			ISNULL(AP.MODIFY_DELETE, 0) = 0 AND 
			ISNULL(AH.MODIFY_FLAG, 0) = 0 		
		GROUP BY 
			AP.PO_NUMBER, 
			AP.PO_LINE_NUMBER 
		HAVING 
			SUM(AP.AP_GL_AMT) <> 0		
	) B
	ON B.PO_NUMBER = A.PO_NUMBER AND B.PO_LINE_NUMBER = A.LINE_NUMBER 

INSERT INTO @ap
SELECT DISTINCT AP.AP_ID, AP_INV_VCHR, AP.PO_NUMBER, AP.PO_LINE_NUMBER, 'AP_PROD'
FROM dbo.AP_PRODUCTION AP 
			JOIN  dbo.AP_HEADER AH ON AP.AP_ID = AH.AP_ID
			JOIN @poh PO ON AP.PO_NUMBER = PO.PO_NUMBER AND AP.PO_LINE_NUMBER = PO.LINE_NUMBER
	WHERE ISNULL(AP.PO_NUMBER, 0) <> 0 AND 
		ISNULL(AP.DELETE_FLAG, 0) = 0 AND 
		ISNULL(AP.MODIFY_DELETE, 0) = 0 AND 
		ISNULL(AH.MODIFY_FLAG, 0) = 0 		
		
INSERT INTO @ap
SELECT DISTINCT AP.AP_ID, AP_INV_VCHR, AP.PO_NUMBER, AP.PO_LINE_NUMBER, 'GL_DIST'
FROM dbo.AP_GL_DIST AP 
			JOIN  dbo.AP_HEADER AH ON AP.AP_ID = AH.AP_ID
			JOIN @poh PO ON AP.PO_NUMBER = PO.PO_NUMBER AND AP.PO_LINE_NUMBER = PO.LINE_NUMBER
	WHERE ISNULL(AP.PO_NUMBER, 0) <> 0 AND 
		ISNULL(AP.DELETE_FLAG, 0) = 0 AND 
		ISNULL(AP.MODIFY_DELETE, 0) = 0 AND 
		ISNULL(AH.MODIFY_FLAG, 0) = 0 			
		
--SELECT * FROM @ap		

UPDATE  A
SET A.AP_INV_LIST = B.AP_INV_LIST
FROM @poh A
    INNER JOIN
    (
    SELECT  A.PO_NUMBER, A.LINE_NUMBER,
            LTRIM(
            STUFF((SELECT ', ' + B.AP_INV_VCHR
                    FROM @ap B
                    WHERE  B.PO_NUMBER = A.PO_NUMBER AND B.PO_LINE_NUMBER = A.LINE_NUMBER 
                    FOR XML PATH (''))
                , 1, 1, '')
               )  AS AP_INV_LIST
    FROM    @poh AS A
    GROUP   BY A.PO_NUMBER, A.LINE_NUMBER
    ) B ON B.PO_NUMBER = A.PO_NUMBER AND B.LINE_NUMBER = A.LINE_NUMBER 
WHERE   B.AP_INV_LIST IS NOT NULL

UPDATE @poh
SET PO_NET_BALANCE = ISNULL(PO_EXT_AMOUNT, 0) - ISNULL(AP_NET_AMT, 0),
		PO_GROSS_BALANCE = 	ISNULL(PO_EXT_AMOUNT, 0) + ISNULL(EXT_MARKUP_AMT, 0) - ISNULL(AP_GROSS_AMT, 0),
		PO_TOTAL_AMOUNT = PO_EXT_AMOUNT + EXT_MARKUP_AMT

UPDATE @poh
SET VOIDED = 'VOIDED' 
WHERE VOID_FLAG = 1

--SELECT * FROM @poh

if @include_clientpos = 1 AND @include_nonclientpos = 1 
Begin
	SELECT 
		[PO_TYPE] 'POType',
		[PO_NUMBER] 'PONumber',
		[LINE_NUMBER] 'POLineNumber',	
		[PO_DATE] 'PODate',
		[PO_DUE_DATE] 'PODueDate',
		[PO_DESCRIPTION] 'PODescription',	
		[LINE_DESC] 'POLineDescription',	
		[USER_ID] 'UserID',
		[EMP_CODE] 'EmployeeCode',
		COALESCE((RTRIM(EMP_FNAME) + ' '),'') + COALESCE((EMP_MI + '. '),'') + COALESCE(EMP_LNAME,'') 'EmployeeName',
		[VN_CODE] 'VendorCode',	
		[VN_NAME] 'VendorName',
		[VN_OFFICE_CODE] 'VendorOfficeCode',
		[VN_OFFICE_NAME] 'VendorOfficeName',
		[CL_CODE] 'ClientCode',
		[CL_NAME] 'ClientName',
		[DIV_CODE] 'DivisionCode',
		[DIV_NAME] 'DivisionName',
		[PRD_CODE] 'ProductCode',
		[PRD_DESCRIPTION] 'ProductName',
		[JOB_NUMBER] 'JobNumber',
		[JOB_DESC] 'JobDescription',	
		[JOB_COMPONENT_NBR] 'JobComponentNumber',
		[JOB_COMP_DESC] 'JobComponentDescription',		
		[JOB_PROCESS_DESC] 'JobStatus',	
		[FNC_CODE] 'FunctionCode',
		[FNC_DESCRIPTION] 'FunctionDescription',	
		[GLACODE] 'AccountCode',
		[GLADESC] 'AccountDescription',
		COALESCE([PO_QTY],0) 'POQuantity',
		COALESCE([PO_RATE],0) 'PORate',
		COALESCE([PO_EXT_AMOUNT],0) 'PONetAmount',
		COALESCE([EXT_MARKUP_AMT],0) 'POMarkup',			
		COALESCE([PO_TOTAL_AMOUNT],0) 'POTotalAmount',
		COALESCE([AP_NET_AMT],0) 'APNetAmount',
		COALESCE([AP_MARKUP_AMT],0) 'APMarkupAmount',
		COALESCE([AP_GROSS_AMT],0) 'APGrossAmount',
		COALESCE([AP_BILLED_NET_AMT],0) 'BilledAPNet',
		COALESCE([AP_BILLED_GROSS_AMT],0) 'BilledAPGross',	
		COALESCE([PO_NET_BALANCE],0) 'PONetBalance',
		COALESCE([PO_GROSS_BALANCE],0) 'POGrossBalance',
		[AP_INV_LIST] 'APInvoiceNumbers',	
		--CASE WHEN COALESCE(PO_WORK_COMPLETE , 0) = 1 THEN 'Yes' ELSE 'No' END 'POWorkComplete',	
		CASE WHEN COALESCE([PO_COMPLETE], 0) = 0 THEN 'No' ELSE 'Yes' END AS 'POComplete',
		CASE WHEN COALESCE([AP_PO_COMPLETE], 0) = 0 THEN 'No' ELSE 'Yes' END AS 'APPOComplete',
		[PO_STATUS] 'POStatus',
		[VOIDED] 'Voided',
		CASE WHEN COALESCE(PO_WORK_COMPLETE , 0) = 1 THEN 'Yes' ELSE 'No' END 'POWorkComplete'
	
		--[PO_MAIN_INSTRUCT],	[VOID_FLAG],	[VOIDED_BY],	[VOID_DATE],	[PO_REVISION],	[ARCHIVE_FLAG],	[VN_CONT_CODE],	[PO_FOOTER],	[WV_FLAG],
		--[PO_APPROVAL_FLAG],	[PO_PRINTED],	[PO_STATUS],[PO_APPR_RULE_CODE], 	[LOCK_USER],	[USER_MODIFIED],	[MODIFIED_DATE],
		--[DET_DESC],	[LINE_DESC],	[DET_INSTRUCT],	[PO_TAX_PCT],	[PO_COMPLETE_DET],	[PO_COMM_PCT],	[EXT_MARKUP_AMT],	[BA_ID],
		--[JOB_COMP_OPEN],	[JOB_PROCESS_CONTRL],	[AP_NET_AMT],	[AP_GROSS_AMT],	[AP_MARKUP_AMT],	
		--[AP_BILLED_NET_AMT],	[AP_BILLED_GROSS_AMT],		[AP_PO_COMPLETE],
		--[VN_ADDRESS1],	[VN_ADDRESS2],	[VN_ADDRESS3],	[VN_CITY],	[VN_COUNTY],	[VN_STATE],	[VN_COUNTRY],	[VN_ZIP] 
	FROM @poh
	WHERE ([CL_CODE] IN (SELECT * FROM dbo.udf_split_list(@CLIENT_LIST, ',')) OR @CLIENT_LIST IS NULL) AND
		  1 = CASE WHEN @DIVISION_LIST IS NULL THEN 1 WHEN ([CL_CODE] + '|' + [DIV_CODE]) IN (SELECT * FROM dbo.udf_split_list(@DIVISION_LIST, ',')) THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @PRODUCT_LIST IS NULL THEN 1 WHEN ([CL_CODE] + '|' + [DIV_CODE] + '|' + [PRD_CODE]) IN (SELECT * FROM dbo.udf_split_list(@PRODUCT_LIST, ',')) THEN 1 ELSE 0 END AND
		  ([VN_CODE] IN (SELECT * FROM dbo.udf_split_list(@VENDOR_LIST, ',')) OR @VENDOR_LIST IS NULL)
End

if @include_clientpos = 1 AND @include_nonclientpos = 0 
Begin
	SELECT 
		[PO_TYPE] 'POType',
		[PO_NUMBER] 'PONumber',
		[LINE_NUMBER] 'POLineNumber',	
		[PO_DATE] 'PODate',
		[PO_DUE_DATE] 'PODueDate',
		[PO_DESCRIPTION] 'PODescription',	
		[LINE_DESC] 'POLineDescription',	
		[USER_ID] 'UserID',
		[EMP_CODE] 'EmployeeCode',
		COALESCE((RTRIM(EMP_FNAME) + ' '),'') + COALESCE((EMP_MI + '. '),'') + COALESCE(EMP_LNAME,'') 'EmployeeName',
		[VN_CODE] 'VendorCode',	
		[VN_NAME] 'VendorName',
		[VN_OFFICE_CODE] 'VendorOfficeCode',
		[VN_OFFICE_NAME] 'VendorOfficeName',
		[CL_CODE] 'ClientCode',
		[CL_NAME] 'ClientName',
		[DIV_CODE] 'DivisionCode',
		[DIV_NAME] 'DivisionName',
		[PRD_CODE] 'ProductCode',
		[PRD_DESCRIPTION] 'ProductName',
		[JOB_NUMBER] 'JobNumber',
		[JOB_DESC] 'JobDescription',	
		[JOB_COMPONENT_NBR] 'JobComponentNumber',
		[JOB_COMP_DESC] 'JobComponentDescription',		
		[JOB_PROCESS_DESC] 'JobStatus',	
		[FNC_CODE] 'FunctionCode',
		[FNC_DESCRIPTION] 'FunctionDescription',	
		[GLACODE] 'AccountCode',
		[GLADESC] 'AccountDescription',
		COALESCE([PO_QTY],0) 'POQuantity',
		COALESCE([PO_RATE],0) 'PORate',
		COALESCE([PO_EXT_AMOUNT],0) 'PONetAmount',
		COALESCE([EXT_MARKUP_AMT],0) 'POMarkup',			
		COALESCE([PO_TOTAL_AMOUNT],0) 'POTotalAmount',
		COALESCE([AP_NET_AMT],0) 'APNetAmount',
		COALESCE([AP_MARKUP_AMT],0) 'APMarkupAmount',
		COALESCE([AP_GROSS_AMT],0) 'APGrossAmount',
		COALESCE([AP_BILLED_NET_AMT],0) 'BilledAPNet',
		COALESCE([AP_BILLED_GROSS_AMT],0) 'BilledAPGross',	
		COALESCE([PO_NET_BALANCE],0) 'PONetBalance',
		COALESCE([PO_GROSS_BALANCE],0) 'POGrossBalance',
		[AP_INV_LIST] 'APInvoiceNumbers',	
		--CASE WHEN COALESCE(PO_WORK_COMPLETE , 0) = 1 THEN 'Yes' ELSE 'No' END 'POWorkComplete',	
		CASE WHEN COALESCE([PO_COMPLETE], 0) = 0 THEN 'No' ELSE 'Yes' END AS 'POComplete',
		CASE WHEN COALESCE([AP_PO_COMPLETE], 0) = 0 THEN 'No' ELSE 'Yes' END AS 'APPOComplete',
		[PO_STATUS] 'POStatus',
		[VOIDED] 'Voided',
		CASE WHEN COALESCE(PO_WORK_COMPLETE , 0) = 1 THEN 'Yes' ELSE 'No' END 'POWorkComplete'
	
		--[PO_MAIN_INSTRUCT],	[VOID_FLAG],	[VOIDED_BY],	[VOID_DATE],	[PO_REVISION],	[ARCHIVE_FLAG],	[VN_CONT_CODE],	[PO_FOOTER],	[WV_FLAG],
		--[PO_APPROVAL_FLAG],	[PO_PRINTED],	[PO_STATUS],[PO_APPR_RULE_CODE], 	[LOCK_USER],	[USER_MODIFIED],	[MODIFIED_DATE],
		--[DET_DESC],	[LINE_DESC],	[DET_INSTRUCT],	[PO_TAX_PCT],	[PO_COMPLETE_DET],	[PO_COMM_PCT],	[EXT_MARKUP_AMT],	[BA_ID],
		--[JOB_COMP_OPEN],	[JOB_PROCESS_CONTRL],	[AP_NET_AMT],	[AP_GROSS_AMT],	[AP_MARKUP_AMT],	
		--[AP_BILLED_NET_AMT],	[AP_BILLED_GROSS_AMT],		[AP_PO_COMPLETE],
		--[VN_ADDRESS1],	[VN_ADDRESS2],	[VN_ADDRESS3],	[VN_CITY],	[VN_COUNTY],	[VN_STATE],	[VN_COUNTRY],	[VN_ZIP] 
	FROM @poh
	WHERE [PO_TYPE] = 'Client' AND ([CL_CODE] IN (SELECT * FROM dbo.udf_split_list(@CLIENT_LIST, ',')) OR @CLIENT_LIST IS NULL) AND
		  1 = CASE WHEN @DIVISION_LIST IS NULL THEN 1 WHEN ([CL_CODE] + '|' + [DIV_CODE]) IN (SELECT * FROM dbo.udf_split_list(@DIVISION_LIST, ',')) THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @PRODUCT_LIST IS NULL THEN 1 WHEN ([CL_CODE] + '|' + [DIV_CODE] + '|' + [PRD_CODE]) IN (SELECT * FROM dbo.udf_split_list(@PRODUCT_LIST, ',')) THEN 1 ELSE 0 END AND
		  ([VN_CODE] IN (SELECT * FROM dbo.udf_split_list(@VENDOR_LIST, ',')) OR @VENDOR_LIST IS NULL)
End

if @include_clientpos = 0 AND @include_nonclientpos = 1 
Begin
	SELECT 
		[PO_TYPE] 'POType',
		[PO_NUMBER] 'PONumber',
		[LINE_NUMBER] 'POLineNumber',	
		[PO_DATE] 'PODate',
		[PO_DUE_DATE] 'PODueDate',
		[PO_DESCRIPTION] 'PODescription',	
		[LINE_DESC] 'POLineDescription',	
		[USER_ID] 'UserID',
		[EMP_CODE] 'EmployeeCode',
		COALESCE((RTRIM(EMP_FNAME) + ' '),'') + COALESCE((EMP_MI + '. '),'') + COALESCE(EMP_LNAME,'') 'EmployeeName',
		[VN_CODE] 'VendorCode',	
		[VN_NAME] 'VendorName',
		[VN_OFFICE_CODE] 'VendorOfficeCode',
		[VN_OFFICE_NAME] 'VendorOfficeName',
		[CL_CODE] 'ClientCode',
		[CL_NAME] 'ClientName',
		[DIV_CODE] 'DivisionCode',
		[DIV_NAME] 'DivisionName',
		[PRD_CODE] 'ProductCode',
		[PRD_DESCRIPTION] 'ProductName',
		[JOB_NUMBER] 'JobNumber',
		[JOB_DESC] 'JobDescription',	
		[JOB_COMPONENT_NBR] 'JobComponentNumber',
		[JOB_COMP_DESC] 'JobComponentDescription',		
		[JOB_PROCESS_DESC] 'JobStatus',	
		[FNC_CODE] 'FunctionCode',
		[FNC_DESCRIPTION] 'FunctionDescription',	
		[GLACODE] 'AccountCode',
		[GLADESC] 'AccountDescription',
		COALESCE([PO_QTY],0) 'POQuantity',
		COALESCE([PO_RATE],0) 'PORate',
		COALESCE([PO_EXT_AMOUNT],0) 'PONetAmount',
		COALESCE([EXT_MARKUP_AMT],0) 'POMarkup',			
		COALESCE([PO_TOTAL_AMOUNT],0) 'POTotalAmount',
		COALESCE([AP_NET_AMT],0) 'APNetAmount',
		COALESCE([AP_MARKUP_AMT],0) 'APMarkupAmount',
		COALESCE([AP_GROSS_AMT],0) 'APGrossAmount',
		COALESCE([AP_BILLED_NET_AMT],0) 'BilledAPNet',
		COALESCE([AP_BILLED_GROSS_AMT],0) 'BilledAPGross',	
		COALESCE([PO_NET_BALANCE],0) 'PONetBalance',
		COALESCE([PO_GROSS_BALANCE],0) 'POGrossBalance',
		[AP_INV_LIST] 'APInvoiceNumbers',	
		--CASE WHEN COALESCE(PO_WORK_COMPLETE , 0) = 1 THEN 'Yes' ELSE 'No' END 'POWorkComplete',	
		CASE WHEN COALESCE([PO_COMPLETE], 0) = 0 THEN 'No' ELSE 'Yes' END AS 'POComplete',
		CASE WHEN COALESCE([AP_PO_COMPLETE], 0) = 0 THEN 'No' ELSE 'Yes' END AS 'APPOComplete',
		[PO_STATUS] 'POStatus',
		[VOIDED] 'Voided',
		CASE WHEN COALESCE(PO_WORK_COMPLETE , 0) = 1 THEN 'Yes' ELSE 'No' END 'POWorkComplete'
	
		--[PO_MAIN_INSTRUCT],	[VOID_FLAG],	[VOIDED_BY],	[VOID_DATE],	[PO_REVISION],	[ARCHIVE_FLAG],	[VN_CONT_CODE],	[PO_FOOTER],	[WV_FLAG],
		--[PO_APPROVAL_FLAG],	[PO_PRINTED],	[PO_STATUS],[PO_APPR_RULE_CODE], 	[LOCK_USER],	[USER_MODIFIED],	[MODIFIED_DATE],
		--[DET_DESC],	[LINE_DESC],	[DET_INSTRUCT],	[PO_TAX_PCT],	[PO_COMPLETE_DET],	[PO_COMM_PCT],	[EXT_MARKUP_AMT],	[BA_ID],
		--[JOB_COMP_OPEN],	[JOB_PROCESS_CONTRL],	[AP_NET_AMT],	[AP_GROSS_AMT],	[AP_MARKUP_AMT],	
		--[AP_BILLED_NET_AMT],	[AP_BILLED_GROSS_AMT],		[AP_PO_COMPLETE],
		--[VN_ADDRESS1],	[VN_ADDRESS2],	[VN_ADDRESS3],	[VN_CITY],	[VN_COUNTY],	[VN_STATE],	[VN_COUNTRY],	[VN_ZIP] 
	FROM @poh
	WHERE [PO_TYPE] = 'Non Client' AND ([CL_CODE] IN (SELECT * FROM dbo.udf_split_list(@CLIENT_LIST, ',')) OR @CLIENT_LIST IS NULL) AND
		  1 = CASE WHEN @DIVISION_LIST IS NULL THEN 1 WHEN ([CL_CODE] + '|' + [DIV_CODE]) IN (SELECT * FROM dbo.udf_split_list(@DIVISION_LIST, ',')) THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @PRODUCT_LIST IS NULL THEN 1 WHEN ([CL_CODE] + '|' + [DIV_CODE] + '|' + [PRD_CODE]) IN (SELECT * FROM dbo.udf_split_list(@PRODUCT_LIST, ',')) THEN 1 ELSE 0 END AND
		  ([VN_CODE] IN (SELECT * FROM dbo.udf_split_list(@VENDOR_LIST, ',')) OR @VENDOR_LIST IS NULL)
End

if @include_clientpos = 0 AND @include_nonclientpos = 0 
Begin
	SELECT 
		[PO_TYPE] 'POType',
		[PO_NUMBER] 'PONumber',
		[LINE_NUMBER] 'POLineNumber',	
		[PO_DATE] 'PODate',
		[PO_DUE_DATE] 'PODueDate',
		[PO_DESCRIPTION] 'PODescription',	
		[LINE_DESC] 'POLineDescription',	
		[USER_ID] 'UserID',
		[EMP_CODE] 'EmployeeCode',
		COALESCE((RTRIM(EMP_FNAME) + ' '),'') + COALESCE((EMP_MI + '. '),'') + COALESCE(EMP_LNAME,'') 'EmployeeName',
		[VN_CODE] 'VendorCode',	
		[VN_NAME] 'VendorName',
		[VN_OFFICE_CODE] 'VendorOfficeCode',
		[VN_OFFICE_NAME] 'VendorOfficeName',
		[CL_CODE] 'ClientCode',
		[CL_NAME] 'ClientName',
		[DIV_CODE] 'DivisionCode',
		[DIV_NAME] 'DivisionName',
		[PRD_CODE] 'ProductCode',
		[PRD_DESCRIPTION] 'ProductName',
		[JOB_NUMBER] 'JobNumber',
		[JOB_DESC] 'JobDescription',	
		[JOB_COMPONENT_NBR] 'JobComponentNumber',
		[JOB_COMP_DESC] 'JobComponentDescription',		
		[JOB_PROCESS_DESC] 'JobStatus',	
		[FNC_CODE] 'FunctionCode',
		[FNC_DESCRIPTION] 'FunctionDescription',	
		[GLACODE] 'AccountCode',
		[GLADESC] 'AccountDescription',
		COALESCE([PO_QTY],0) 'POQuantity',
		COALESCE([PO_RATE],0) 'PORate',
		COALESCE([PO_EXT_AMOUNT],0) 'PONetAmount',
		COALESCE([EXT_MARKUP_AMT],0) 'POMarkup',			
		COALESCE([PO_TOTAL_AMOUNT],0) 'POTotalAmount',
		COALESCE([AP_NET_AMT],0) 'APNetAmount',
		COALESCE([AP_MARKUP_AMT],0) 'APMarkupAmount',
		COALESCE([AP_GROSS_AMT],0) 'APGrossAmount',
		COALESCE([AP_BILLED_NET_AMT],0) 'BilledAPNet',
		COALESCE([AP_BILLED_GROSS_AMT],0) 'BilledAPGross',	
		COALESCE([PO_NET_BALANCE],0) 'PONetBalance',
		COALESCE([PO_GROSS_BALANCE],0) 'POGrossBalance',
		[AP_INV_LIST] 'APInvoiceNumbers',	
		--CASE WHEN COALESCE(PO_WORK_COMPLETE , 0) = 1 THEN 'Yes' ELSE 'No' END 'POWorkComplete',	
		CASE WHEN COALESCE([PO_COMPLETE], 0) = 0 THEN 'No' ELSE 'Yes' END AS 'POComplete',
		CASE WHEN COALESCE([AP_PO_COMPLETE], 0) = 0 THEN 'No' ELSE 'Yes' END AS 'APPOComplete',
		[PO_STATUS] 'POStatus',
		[VOIDED] 'Voided',
		CASE WHEN COALESCE(PO_WORK_COMPLETE , 0) = 1 THEN 'Yes' ELSE 'No' END 'POWorkComplete'
	
		--[PO_MAIN_INSTRUCT],	[VOID_FLAG],	[VOIDED_BY],	[VOID_DATE],	[PO_REVISION],	[ARCHIVE_FLAG],	[VN_CONT_CODE],	[PO_FOOTER],	[WV_FLAG],
		--[PO_APPROVAL_FLAG],	[PO_PRINTED],	[PO_STATUS],[PO_APPR_RULE_CODE], 	[LOCK_USER],	[USER_MODIFIED],	[MODIFIED_DATE],
		--[DET_DESC],	[LINE_DESC],	[DET_INSTRUCT],	[PO_TAX_PCT],	[PO_COMPLETE_DET],	[PO_COMM_PCT],	[EXT_MARKUP_AMT],	[BA_ID],
		--[JOB_COMP_OPEN],	[JOB_PROCESS_CONTRL],	[AP_NET_AMT],	[AP_GROSS_AMT],	[AP_MARKUP_AMT],	
		--[AP_BILLED_NET_AMT],	[AP_BILLED_GROSS_AMT],		[AP_PO_COMPLETE],
		--[VN_ADDRESS1],	[VN_ADDRESS2],	[VN_ADDRESS3],	[VN_CITY],	[VN_COUNTY],	[VN_STATE],	[VN_COUNTRY],	[VN_ZIP] 
	FROM @poh
	WHERE [PO_TYPE] = '' AND ([CL_CODE] IN (SELECT * FROM dbo.udf_split_list(@CLIENT_LIST, ',')) OR @CLIENT_LIST IS NULL) AND
		  1 = CASE WHEN @DIVISION_LIST IS NULL THEN 1 WHEN ([CL_CODE] + '|' + [DIV_CODE]) IN (SELECT * FROM dbo.udf_split_list(@DIVISION_LIST, ',')) THEN 1 ELSE 0 END AND
		  1 = CASE WHEN @PRODUCT_LIST IS NULL THEN 1 WHEN ([CL_CODE] + '|' + [DIV_CODE] + '|' + [PRD_CODE]) IN (SELECT * FROM dbo.udf_split_list(@PRODUCT_LIST, ',')) THEN 1 ELSE 0 END AND
		  ([VN_CODE] IN (SELECT * FROM dbo.udf_split_list(@VENDOR_LIST, ',')) OR @VENDOR_LIST IS NULL)
End


END

GO

GRANT EXECUTE ON [dbo].[advsp_po_job_ap_detail_dataset] TO PUBLIC AS dbo
GO
