IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[advsp_task_by_employee_report]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[advsp_task_by_employee_report]
GO

CREATE PROCEDURE [dbo].[advsp_task_by_employee_report]
	@SelectedDate as varchar(20),
	@StartDate smalldatetime,
	@EndDate smalldatetime,
	@IncludeClosedJobs bit,
	@ClientCodes varchar(max),
	@AECodes varchar(max),
	@SalesClassCodes varchar(max),
	@JobTypeCodes varchar(max)
AS

/* Based on:  advsp_project_schedule_report */

CREATE TABLE #Jobs (
	JOB_NUMBER int NOT NULL,
	JOB_COMPONENT_NBR smallint NOT NULL,
	IS_OPEN bit DEFAULT(0)
)

IF @SelectedDate = 'JobCreateDate' --J.CREATE_DATE,
	INSERT INTO #Jobs (JOB_NUMBER, JOB_COMPONENT_NBR)
	SELECT JL.JOB_NUMBER, JC.JOB_COMPONENT_NBR 
	FROM dbo.JOB_LOG JL INNER JOIN dbo.JOB_COMPONENT JC ON JL.JOB_NUMBER = JC.JOB_NUMBER 
	WHERE CREATE_DATE BETWEEN @StartDate AND @EndDate
ELSE IF @SelectedDate = 'ComponentDateOpened' --JC.JOB_COMP_DATE,
	INSERT INTO #Jobs (JOB_NUMBER, JOB_COMPONENT_NBR)
	SELECT JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR 
	FROM dbo.JOB_COMPONENT JC
	WHERE JC.JOB_COMP_DATE BETWEEN @StartDate AND @EndDate
ELSE IF @SelectedDate = 'DueDate' --JC.JOB_FIRST_USE_DATE,
	INSERT INTO #Jobs (JOB_NUMBER, JOB_COMPONENT_NBR)
	SELECT JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR 
	FROM dbo.JOB_COMPONENT JC
	WHERE JC.JOB_FIRST_USE_DATE BETWEEN @StartDate AND @EndDate
ELSE IF @SelectedDate = 'StartDate' --JC.[START_DATE],
	INSERT INTO #Jobs (JOB_NUMBER, JOB_COMPONENT_NBR)
	SELECT JC.JOB_NUMBER, JC.JOB_COMPONENT_NBR 
	FROM dbo.JOB_COMPONENT JC
	WHERE JC.[START_DATE] BETWEEN @StartDate AND @EndDate
ELSE IF @SelectedDate = 'CompletedDate' --JOBT.COMPLETED_DATE,
	INSERT INTO #Jobs (JOB_NUMBER, JOB_COMPONENT_NBR)
	SELECT JOB_NUMBER, JOB_COMPONENT_NBR 
	FROM dbo.JOB_TRAFFIC
	WHERE COMPLETED_DATE BETWEEN @StartDate AND @EndDate
ELSE IF @SelectedDate = 'TaskStartDate' --JOBTD.TASK_START_DATE
	INSERT INTO #Jobs (JOB_NUMBER, JOB_COMPONENT_NBR)
	SELECT DISTINCT JOB_NUMBER, JOB_COMPONENT_NBR 
	FROM dbo.JOB_TRAFFIC_DET
	WHERE TASK_START_DATE BETWEEN @StartDate AND @EndDate
ELSE IF @SelectedDate = 'TaskRevisedDueDate' --JOBTD.JOB_REVISED_DATE,
	INSERT INTO #Jobs (JOB_NUMBER, JOB_COMPONENT_NBR)
	SELECT DISTINCT JOB_NUMBER, JOB_COMPONENT_NBR 
	FROM dbo.JOB_TRAFFIC_DET
	WHERE JOB_REVISED_DATE BETWEEN @StartDate AND @EndDate

UPDATE J SET IS_OPEN = 1 
FROM #Jobs J
	INNER JOIN (
				SELECT DISTINCT JOB_NUMBER, JOB_COMPONENT_NBR
				FROM dbo.JOB_COMPONENT
				WHERE JOB_PROCESS_CONTRL NOT IN (6, 12)
				) JobOpen ON J.JOB_NUMBER = JobOpen.JOB_NUMBER AND J.JOB_COMPONENT_NBR = JobOpen.JOB_COMPONENT_NBR

SELECT
	[ID] = NEWID(),
	[JobNumber] = JC.JOB_NUMBER,
	[OfficeCode] = J.OFFICE_CODE,
	[OfficeDescription] = O.OFFICE_NAME,
	[ClientCode] = J.CL_CODE,
	[ClientDescription] = C.CL_NAME,
	[DivisionCode] = J.DIV_CODE,
	[DivisionDescription] = D.DIV_NAME,
	[ProductCode] = J.PRD_CODE,
	[ProductDescription] = P.PRD_DESCRIPTION,
	[CampaignID] = CAMP.CMP_IDENTIFIER,
	[CampaignCode] = J.CMP_CODE, 
	[CampaignName] = CAMP.CMP_NAME,
	[SalesClassCode] = J.SC_CODE,
	[SalesClassDescription] = SC.SC_DESCRIPTION,
	[UserCode] = J.[USER_ID],
	[JobCreateDate] = J.CREATE_DATE,
	[JobComponent] = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), JC.JOB_NUMBER), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), JC.JOB_COMPONENT_NBR), 2),
	[JobDescription] = J.JOB_DESC,
	[JobDateOpened] = J.JOB_DATE_OPENED,
	[RushChargesApproved] = CASE WHEN J.JOB_RUSH_CHARGES = 1 THEN 'Yes' ELSE 'No' END,
	[ApprovedEstimateRequired] = CASE WHEN J.JOB_ESTIMATE_REQ = 1 THEN 'Yes' ELSE 'No' END,
	[Comment] = J.JOB_COMMENTS,
	[ClientReference] = J.JOB_CLI_REF,
	[SalesClassFormatCode] = J.FORMAT_CODE,
	[ComplexityCode] = J.COMPLEX_CODE,
	[ComplexityDescription] = CMPL.COMPLEX_DESC,
	[PromotionCode] = J.PROMO_CODE,
	[LabelFromUDFTable1] = JUDV1.UDV_DESC,
	[LabelFromUDFTable2] = JUDV2.UDV_DESC,
	[LabelFromUDFTable3] = JUDV3.UDV_DESC,
	[LabelFromUDFTable4] = JUDV4.UDV_DESC,
	[LabelFromUDFTable5] = JUDV5.UDV_DESC,
	[JobOpen] = CASE WHEN jobs.IS_OPEN = 1 THEN 'Yes' ELSE 'No' END,
	[ComponentNumber] = JC.JOB_COMPONENT_NBR,
	[JobComponent] = RIGHT(REPLICATE('0', 6) + CONVERT(VARCHAR(20), JC.JOB_NUMBER), 6) + '-' + RIGHT(REPLICATE('0', 2) + CONVERT(VARCHAR(20), JC.JOB_COMPONENT_NBR), 2),
	[AccountExecutiveCode] = JC.EMP_CODE,
	[AccountExecutive] = COALESCE((RTRIM(EMP.EMP_FNAME) + ' '),'') + COALESCE((EMP.EMP_MI + '. '),'') + COALESCE(EMP.EMP_LNAME,''),
	[ComponentDateOpened] = JC.JOB_COMP_DATE,
	[DueDate] = JC.JOB_FIRST_USE_DATE,
	[StartDate] = JC.[START_DATE],
	[JobCycleTime] = DATEDIFF(day, JC.[START_DATE], JC.JOB_FIRST_USE_DATE),
	[AdSize] = JC.JOB_AD_SIZE,
	[DepartmentTeamCode] = JC.DP_TM_CODE,
	[DepartmentTeam] = DT.DP_TM_DESC,
	[CreativeInstructions] = JC.CREATIVE_INSTR,
	[JobProcessControl] = JPC.JOB_PROCESS_DESC,
	[ComponentDescription] = JC.JOB_COMP_DESC,
	[ComponentComments] = JC.JOB_COMP_COMMENTS,
	[ComponentBudget] = JC.JOB_COMP_BUDGET_AM,
	[EstimateNumber] = JC.ESTIMATE_NUMBER,
	[EstimateComponentNumber] = JC.EST_COMPONENT_NBR,
	[DeliveryInstructions] = JC.JOB_DEL_INSTRUCT,
	[JobTypeCode] = JC.JT_CODE,
	[JobTypeDescription] = JT.JT_DESC,
	[AlertGroup] = JC.EMAIL_GR_CODE,
	[AdNumber] = JC.AD_NBR,
	[MarketCode] = JC.MARKET_CODE,
	[MarketDescription] = M.MARKET_DESC,
	[TrafficScheduleRequired] = CASE WHEN JC.TRF_SCHEDULE_REQ = 1 THEN 'Yes' ELSE 'No' END,
	[ClientPO] = JC.JOB_CL_PO_NBR,
	[CompLabelFromUDFTable1] = JCUDV1.UDV_DESC,
	[CompLabelFromUDFTable2] = JCUDV2.UDV_DESC,
	[CompLabelFromUDFTable3] = JCUDV3.UDV_DESC,
	[CompLabelFromUDFTable4] = JCUDV4.UDV_DESC,
	[CompLabelFromUDFTable5] = JCUDV5.UDV_DESC,
	[ClientContactCode] = JC.PRD_CONT_CODE,
	[ClientContactID] = JC.CDP_CONTACT_ID,
	[ClientContact] = CASE WHEN CC.CONT_MI IS NULL OR CC.CONT_MI = '' THEN RTRIM(LTRIM(ISNULL(CC.CONT_FNAME, '') + ' ' + ISNULL(CC.CONT_LNAME, ''))) ELSE CC.CONT_FNAME + ' ' + CC.CONT_MI + '. ' + CC.CONT_LNAME END,
	[AlertAssignmentTemplate] = AA.ALERT_NOTIFY_NAME,
	[StatusCode] = JOBT.TRF_CODE,
	[Status] = T.TRF_DESCRIPTION,
	[GutPercentComplete] = JOBT.PERCENT_COMPLETE,
	[Comments] = JOBT.TRF_COMMENTS,
	[LabelAssign1] = COALESCE((RTRIM(EMPLA1.EMP_FNAME) + ' '),'') + COALESCE((EMPLA1.EMP_MI + '. '),'') + COALESCE(EMPLA1.EMP_LNAME,''),
	[LabelAssign2] = COALESCE((RTRIM(EMPLA2.EMP_FNAME) + ' '),'') + COALESCE((EMPLA2.EMP_MI + '. '),'') + COALESCE(EMPLA2.EMP_LNAME,''),
	[LabelAssign3] = COALESCE((RTRIM(EMPLA3.EMP_FNAME) + ' '),'') + COALESCE((EMPLA3.EMP_MI + '. '),'') + COALESCE(EMPLA3.EMP_LNAME,''),
	[LabelAssign4] = COALESCE((RTRIM(EMPLA4.EMP_FNAME) + ' '),'') + COALESCE((EMPLA4.EMP_MI + '. '),'') + COALESCE(EMPLA4.EMP_LNAME,''),
	[LabelAssign5] = COALESCE((RTRIM(EMPLA5.EMP_FNAME) + ' '),'') + COALESCE((EMPLA5.EMP_MI + '. '),'') + COALESCE(EMPLA5.EMP_LNAME,''),
	[CompletedDate] = JOBT.COMPLETED_DATE,
	[JobEarlyOrLate] = DATEDIFF(day, JC.JOB_FIRST_USE_DATE, JOBT.COMPLETED_DATE),
	[DateDelivered] = JOBT.DATE_DELIVERED,
	[DateShipped] = JOBT.DATE_SHIPPED,
	[ReceivedBy] = JOBT.RECEIVED_BY,
	[Reference] = JOBT.REFERENCE,
	[ManagerCode] = JOBTMGR.MGR_EMP_CODE,
	[Manager] = COALESCE((RTRIM(MEMP.EMP_FNAME) + ' '),'') + COALESCE((MEMP.EMP_MI + '. '),'') + COALESCE(MEMP.EMP_LNAME,''),
	[TaskSequence] = JOBTD.SEQ_NBR,
	[TaskCode] = JOBTD.FNC_CODE,
	[EstimateFunctionCode] = JOBTD.FNC_EST,
	[TaskDescription] = JOBTD.TASK_DESCRIPTION,
	[TaskStartDate] = JOBTD.TASK_START_DATE,
	[TaskOriginalDueDate] = JOBTD.JOB_DUE_DATE,
	[TaskRevisedDueDate] = JOBTD.JOB_REVISED_DATE,
	[DueDateChange] = CASE WHEN JOBTD.JOB_DUE_DATE <> JOBTD.JOB_REVISED_DATE THEN 'Changed' ELSE NULL END,
	[TaskCycleTime] = ABS(DATEDIFF(day, JOBTD.TASK_START_DATE, JOBTD.JOB_REVISED_DATE)),
	[TaskEarlyOrLate] = DATEDIFF(day, JOBTD.JOB_REVISED_DATE, JOBTD.JOB_COMPLETED_DATE),
	[Locked] = CASE WHEN JOBTD.DUE_DATE_LOCK = 1 THEN 'Yes' ELSE 'No' END,
	[TaskCompletedDate] = JOBTD.JOB_COMPLETED_DATE,
	[TaskOrder] = JOBTD.JOB_ORDER,
	[TaskDays] = JOBTD.JOB_DAYS,
	[TaskComments] = JOBTD.FNC_COMMENTS,
	[DueDateComments] = JOBTD.DUE_DATE_COMMENTS,
	[RevDueDateComments] = JOBTD.REV_DATE_COMMENTS,
	[DefaultHoursAllowed] = JOBTD.JOB_HRS,
	[TimeDue] = JOBTD.DUE_TIME,
	[RevisedTimeDue] = JOBTD.REVISED_DUE_TIME,
	[TaskStatus] = ISNULL(JOBTD.TASK_STATUS,'P'),
	[Milestone] = CASE WHEN JOBTD.MILESTONE = 1 THEN 'Yes' ELSE 'No' END,
	[PhaseOrder] = TP.PHASE_ORDER,
	[Phase] = TP.PHASE_DESC,
	[HoursAllowed] = HA.HOURS_ASSIGNED,
	[Employee] = HA.EMP_CODE,
	[Employees] = HA.EMP_NAME,
	--STUFF((SELECT ', ' + E.EMP_LNAME + COALESCE( ' ' + LEFT( E.EMP_FNAME, 1 ) + '.', '' )
	--	  FROM
	--	dbo.JOB_TRAFFIC_DET_EMPS JTDE
	--	INNER JOIN
	--	dbo.EMPLOYEE_CLOAK E ON JTDE.EMP_CODE = E.EMP_CODE
	--	WHERE
	--	JTDE.JOB_NUMBER = JOBTD.JOB_NUMBER AND
	--	JTDE.JOB_COMPONENT_NBR = JOBTD.JOB_COMPONENT_NBR AND
	--	JTDE.SEQ_NBR = JOBTD.SEQ_NBR 
	--	FOR XML PATH('')),1 ,2 ,''),
	[TempCompleteDate] = TD.TEMP_COMP_DATE,
	[ClientType1Code] = CP.CLIENT_TYPE1_ID,
	[ClientType1Description] = CT1.[DESCRIPTION],
	[ClientType2Code] = CP.CLIENT_TYPE2_ID,
	[ClientType2Description] = CT2.[DESCRIPTION],
	[ClientType3Code] = CP.CLIENT_TYPE3_ID,
	[ClientType3Description] = CT3.[DESCRIPTION],
	[IsScheduleTemplate] = CASE WHEN JOBT.IS_TEMPLATE = 1 THEN 'Yes' ELSE 'No' END,
	[GridOrder] = JOBTD.GRID_ORDER
FROM
	[dbo].[JOB_COMPONENT] AS JC INNER JOIN 
	#Jobs jobs ON jobs.JOB_NUMBER = JC.JOB_NUMBER AND jobs.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR AND ( (@IncludeClosedJobs = 0 AND jobs.IS_OPEN = 1) OR (@IncludeClosedJobs = 1)) INNER JOIN
	[dbo].[JOB_LOG] AS J ON J.JOB_NUMBER = JC.JOB_NUMBER INNER JOIN	
	[dbo].[JOB_TRAFFIC] AS JOBT ON JOBT.JOB_NUMBER = JC.JOB_NUMBER AND
								JOBT.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR INNER JOIN
	(SELECT
		JOB_NUMBER,
		JOB_COMPONENT_NBR,
		MGR_EMP_CODE = CASE WHEN AGY_SETTINGS_VALUE = 'TR_TITLE1' THEN JT.ASSIGN_1 
							WHEN AGY_SETTINGS_VALUE = 'TR_TITLE2' THEN JT.ASSIGN_2
							WHEN AGY_SETTINGS_VALUE = 'TR_TITLE3' THEN JT.ASSIGN_3
							WHEN AGY_SETTINGS_VALUE = 'TR_TITLE4' THEN JT.ASSIGN_4
							WHEN AGY_SETTINGS_VALUE = 'TR_TITLE5' THEN JT.ASSIGN_5
							ELSE NULL END
	FROM
		dbo.JOB_TRAFFIC JT
	CROSS JOIN
		dbo.AGY_SETTINGS A
	WHERE
		A.AGY_SETTINGS_CODE = 'TRAFFIC_MGR_COL') JOBTMGR ON JOBT.JOB_NUMBER = JOBTMGR.JOB_NUMBER AND
															JOBT.JOB_COMPONENT_NBR = JOBTMGR.JOB_COMPONENT_NBR  LEFT OUTER JOIN
	[dbo].[OFFICE] AS O ON O.OFFICE_CODE = J.OFFICE_CODE INNER JOIN
	[dbo].[CLIENT] AS C ON C.CL_CODE = J.CL_CODE INNER JOIN
	[dbo].[DIVISION] AS D ON D.CL_CODE = J.CL_CODE AND
								D.DIV_CODE = J.DIV_CODE INNER JOIN
	[dbo].[PRODUCT] AS P ON P.CL_CODE = J.CL_CODE AND
							P.DIV_CODE = J.DIV_CODE AND
							P.PRD_CODE = J.PRD_CODE LEFT OUTER JOIN
	[dbo].[SALES_CLASS] AS SC ON SC.SC_CODE = J.SC_CODE  INNER JOIN
	[dbo].[EMPLOYEE_CLOAK] AS EMP ON EMP.EMP_CODE = JC.EMP_CODE LEFT OUTER JOIN
	[dbo].[JOB_TYPE] AS JT ON JT.JT_CODE = JC.JT_CODE LEFT OUTER JOIN
	[dbo].[DEPT_TEAM] AS DT ON DT.DP_TM_CODE = JC.DP_TM_CODE LEFT OUTER JOIN
	[dbo].[CDP_CONTACT_HDR] AS CC ON CC.CDP_CONTACT_ID = JC.CDP_CONTACT_ID LEFT OUTER JOIN
	[dbo].[JOB_PROC_CONTROLS] AS JPC ON JPC.JOB_PROCESS_CONTRL = JC.JOB_PROCESS_CONTRL LEFT OUTER JOIN
	[dbo].[MARKET] AS M ON M.MARKET_CODE = JC.MARKET_CODE LEFT OUTER JOIN
	[dbo].[ALERT_NOTIFY_HDR] AS AA ON AA.ALRT_NOTIFY_HDR_ID = JC.ALRT_NOTIFY_HDR_ID INNER JOIN
	[dbo].[TRAFFIC] AS T ON T.TRF_CODE = JOBT.TRF_CODE  LEFT OUTER JOIN
	[dbo].[EMPLOYEE_CLOAK] AS MEMP ON MEMP.EMP_CODE = JOBT.MGR_EMP_CODE INNER JOIN
	[dbo].[JOB_TRAFFIC_DET] AS JOBTD ON JOBTD.JOB_NUMBER = JC.JOB_NUMBER AND
										JOBTD.JOB_COMPONENT_NBR = JC.JOB_COMPONENT_NBR LEFT OUTER JOIN
	[dbo].[TRAFFIC_PHASE] AS TP ON TP.TRAFFIC_PHASE_ID = JOBTD.TRAFFIC_PHASE_ID LEFT OUTER JOIN
	(SELECT 
		JOB_NUMBER,  		
		JOB_COMPONENT_NBR,  		
		SEQ_NBR,  		
		EMP_CODE_LIST = [dbo].[fn_task_employees_ds]( JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR, 1 ),
		EMP_LFI_LIST = [dbo].[fn_task_employees_ds]( JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR, 3 )
		FROM
		dbo.JOB_TRAFFIC_DET) JOBTDEMP ON JOBTDEMP.JOB_NUMBER = JOBTD.JOB_NUMBER AND
											JOBTDEMP.JOB_COMPONENT_NBR = JOBTD.JOB_COMPONENT_NBR AND
											JOBTDEMP.SEQ_NBR = JOBTD.SEQ_NBR LEFT OUTER JOIN
	[dbo].[JOB_LOG_UDV1] AS JUDV1 ON JUDV1.UDV_CODE = J.UDV1_CODE LEFT OUTER JOIN
	[dbo].[JOB_LOG_UDV2] AS JUDV2 ON JUDV2.UDV_CODE = J.UDV2_CODE LEFT OUTER JOIN
	[dbo].[JOB_LOG_UDV3] AS JUDV3 ON JUDV3.UDV_CODE = J.UDV3_CODE LEFT OUTER JOIN
	[dbo].[JOB_LOG_UDV4] AS JUDV4 ON JUDV4.UDV_CODE = J.UDV4_CODE LEFT OUTER JOIN
	[dbo].[JOB_LOG_UDV5] AS JUDV5 ON JUDV5.UDV_CODE = J.UDV5_CODE LEFT OUTER JOIN
	[dbo].[JOB_CMP_UDV1] AS JCUDV1 ON JCUDV1.UDV_CODE = JC.UDV1_CODE LEFT OUTER JOIN
	[dbo].[JOB_CMP_UDV2] AS JCUDV2 ON JCUDV2.UDV_CODE = JC.UDV2_CODE LEFT OUTER JOIN
	[dbo].[JOB_CMP_UDV3] AS JCUDV3 ON JCUDV3.UDV_CODE = JC.UDV3_CODE LEFT OUTER JOIN
	[dbo].[JOB_CMP_UDV4] AS JCUDV4 ON JCUDV4.UDV_CODE = JC.UDV4_CODE LEFT OUTER JOIN
	[dbo].[JOB_CMP_UDV5] AS JCUDV5 ON JCUDV5.UDV_CODE = JC.UDV5_CODE  LEFT OUTER JOIN
	[dbo].[EMPLOYEE_CLOAK] AS EMPLA1 ON EMPLA1.EMP_CODE = JOBT.ASSIGN_1 LEFT OUTER JOIN
	[dbo].[EMPLOYEE_CLOAK] AS EMPLA2 ON EMPLA2.EMP_CODE = JOBT.ASSIGN_2 LEFT OUTER JOIN
	[dbo].[EMPLOYEE_CLOAK] AS EMPLA3 ON EMPLA3.EMP_CODE = JOBT.ASSIGN_3 LEFT OUTER JOIN
	[dbo].[EMPLOYEE_CLOAK] AS EMPLA4 ON EMPLA4.EMP_CODE = JOBT.ASSIGN_4 LEFT OUTER JOIN
	[dbo].[EMPLOYEE_CLOAK] AS EMPLA5 ON EMPLA5.EMP_CODE = JOBT.ASSIGN_5 LEFT OUTER JOIN 
	[dbo].[CAMPAIGN] AS CAMP ON J.CMP_IDENTIFIER = CAMP.CMP_IDENTIFIER LEFT OUTER JOIN
	[dbo].[COMPANY_PROFILE] CP ON CP.PRD_CODE = P.PRD_CODE AND CP.DIV_CODE = P.DIV_CODE AND CP.CL_CODE = P.CL_CODE LEFT OUTER JOIN
	[dbo].[CLIENT_TYPE1] CT1 ON CT1.CLIENT_TYPE1_ID = CP.CLIENT_TYPE1_ID LEFT OUTER JOIN
	[dbo].[CLIENT_TYPE2] CT2 ON CT2.CLIENT_TYPE2_ID = CP.CLIENT_TYPE2_ID LEFT OUTER JOIN
	[dbo].[CLIENT_TYPE3] CT3 ON CT3.CLIENT_TYPE3_ID = CP.CLIENT_TYPE3_ID LEFT OUTER JOIN
	[dbo].[COMPLEXITY] AS CMPL ON J.COMPLEX_CODE = CMPL.COMPLEX_CODE LEFT OUTER JOIN 
	(SELECT
		J.EMP_CODE,
		--E.EMP_LNAME + COALESCE( ', ' + LEFT( E.EMP_FNAME, 1 ) + '.', '' ) AS EMP_NAME,
		E.EMP_LNAME + COALESCE( ', ' + E.EMP_FNAME, '' ) AS EMP_NAME,
		JOB_NUMBER,  		
		JOB_COMPONENT_NBR,  		
		SEQ_NBR,  
		HOURS_ASSIGNED = SUM(HOURS_ALLOWED)
		FROM dbo.JOB_TRAFFIC_DET_EMPS J
		INNER JOIN
			dbo.EMPLOYEE_CLOAK E ON J.EMP_CODE = E.EMP_CODE
		GROUP BY J.EMP_CODE, E.EMP_LNAME, E.EMP_FNAME, JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR 
	) HA ON HA.JOB_NUMBER = JOBTD.JOB_NUMBER AND
				HA.JOB_COMPONENT_NBR = JOBTD.JOB_COMPONENT_NBR AND
				HA.SEQ_NBR = JOBTD.SEQ_NBR LEFT OUTER JOIN
	(SELECT
		JOB_NUMBER,  		
		JOB_COMPONENT_NBR,  		
		SEQ_NBR,  
		TEMP_COMP_DATE = MAX(TEMP_COMP_DATE) 
		FROM dbo.JOB_TRAFFIC_DET_EMPS jtde
		WHERE NOT EXISTS(SELECT TEMP_COMP_DATE FROM JOB_TRAFFIC_DET_EMPS WHERE JOB_NUMBER = jtde.JOB_NUMBER AND JOB_COMPONENT_NBR = jtde.JOB_COMPONENT_NBR AND SEQ_NBR = jtde.SEQ_NBR AND TEMP_COMP_DATE IS NULL)
		GROUP BY JOB_NUMBER, 		
					JOB_COMPONENT_NBR,  		
					SEQ_NBR  
	) TD ON TD.JOB_NUMBER = JOBTD.JOB_NUMBER AND
				TD.JOB_COMPONENT_NBR = JOBTD.JOB_COMPONENT_NBR AND
				TD.SEQ_NBR = JOBTD.SEQ_NBR
WHERE
	(@ClientCodes IS NULL OR (@ClientCodes IS NOT NULL AND J.CL_CODE IN (SELECT * FROM dbo.udf_split_list(@ClientCodes, ','))))
AND (@AECodes IS NULL OR (@AECodes IS NOT NULL AND JC.EMP_CODE IN (SELECT * FROM dbo.udf_split_list(@AECodes, ','))))
AND (@SalesClassCodes IS NULL OR (@SalesClassCodes IS NOT NULL AND J.SC_CODE IN (SELECT * FROM dbo.udf_split_list(@SalesClassCodes, ','))))
AND (@JobTypeCodes IS NULL OR (@JobTypeCodes IS NOT NULL AND JC.JT_CODE IN (SELECT * FROM dbo.udf_split_list(@JobTypeCodes, ','))))
AND ((@SelectedDate <> 'TaskStartDate') OR (@SelectedDate = 'TaskStartDate' AND JOBTD.TASK_START_DATE BETWEEN @StartDate AND @EndDate))
AND ((@SelectedDate <> 'TaskRevisedDueDate') OR (@SelectedDate = 'TaskRevisedDueDate' AND JOBTD.JOB_REVISED_DATE BETWEEN @StartDate AND @EndDate))

ORDER BY JOBTD.JOB_NUMBER, JOBTD.JOB_COMPONENT_NBR, ISNULL(GRID_ORDER, JOBTD.SEQ_NBR)

GO

GRANT EXECUTE ON [advsp_task_by_employee_report] TO PUBLIC
GO