IF EXISTS (SELECT * FROM dbo.sysobjects WHERE id = object_id(N'[dbo].[usp_wv_Dashboard_GetData]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
DROP PROCEDURE [dbo].[usp_wv_Dashboard_GetData]
GO

CREATE PROCEDURE [dbo].[usp_wv_Dashboard_GetData]
(
	@Start INT,
	@End INT,
	@UserID varchar(100)
)
AS
BEGIN
	SET NOCOUNT OFF
	
	CREATE TABLE #months(
	RowID int IDENTITY(1, 1), 
	[Month] int,
	Startdate datetime,
	Enddate datetime)

	CREATE TABLE #emps(
	RowID int IDENTITY(1, 1), 
	EmpCode varchar(6),
	DeptCode varchar(4))

	DECLARE 
	@ERR INT, @PPStart int, @PPEnd int, @startdate datetime, @enddate datetime, @StdHours as decimal(9,3), @NumberRecords int, @RowCount int, @EmpDate datetime, @NumberRecords2 int, @RowCount2 int, @EmpCode varchar(6),
		@sd datetime, @ed datetime, @DeptCode varchar(4)

	SELECT @PPStart = PPPERIOD, @startdate = PPSRTDATE 
	FROM POSTPERIOD
	WHERE PPGLMONTH = 1 AND PPGLYEAR  = @Start

	if @startdate IS NULL
	Begin
		SELECT @PPStart = PPPERIOD, @startdate = PPSRTDATE 
		FROM POSTPERIOD
		WHERE PPGLMONTH = 1 AND PPGLYEAR  = @End
	End

	SELECT @PPEnd = PPPERIOD, @enddate = PPENDDATE 
	FROM POSTPERIOD
	WHERE PPGLMONTH = 12 AND PPGLYEAR  = @End

	if @enddate IS NULL
	Begin
		SELECT @PPEnd = MAX(PPPERIOD), @enddate = MAX(PPENDDATE)
		FROM POSTPERIOD
		WHERE PPGLYEAR  = @End
	End

	--SELECT @startdate, @enddate
	
	DELETE FROM DASH_DATA_EMP_TIME
		
	INSERT INTO DASH_DATA_EMP_TIME (REC_TYPE, EMP_CODE,
		DP_TM_CODE,
		PERIOD,
		AR_PERIOD,
		EMP_DATE,
		CLIENT,
		DIVISION,
		PRODUCT,
		JOB_NUMBER,
		JOB_COMPONENT_NBR,
		FNC_CODE,
		CATEGORY,
		DIRECT_TYPE,
		POSTED_HOURS,
		DIRECT_HOURS,
		TOTAL_COST,
		BILLABLE_HOURS,
		DIRECT_NONBILL_HOURS,
		DIRECT_NEW_BUS_HOURS,
		DIRECT_AGENCY_HOURS,
		BILLED_HOURS,
		WIP_HOURS,
		NON_PROD_HOURS,
		DIRECT_AMT,
		BILLABLE_AMT,
		DIRECT_NONBILL_AMT,
		DIRECT_NEW_BUS_AMT,
		DIRECT_AGENCY_AMT,
		MARK_UP_DOWN_AMT,
		MARK_UP_DOWN_HRS,
		BILLED_AMT,
		WIP_AMT,
		[TYPE],
		FEE_TIME)
	EXEC advsp_employee_time_util 1,1,'',1,@PPStart,@PPEnd

	UPDATE DASH_DATA_EMP_TIME SET DATA_UPDATE = GETDATE()

	DELETE FROM W_EMP_STD_HOURS WHERE UPPER(USERID) = UPPER(@UserID)

	INSERT INTO W_EMP_STD_HOURS (USERID, START_DATE, END_DATE)
	VALUES(@UserID, @startdate, @enddate)

	INSERT INTO #months
	SELECT PPGLMONTH, PPSRTDATE, PPENDDATE
	FROM POSTPERIOD
	WHERE PPSRTDATE >= @startdate AND PPENDDATE <= @enddate AND PPGLMONTH <> 99
	--SELECT * FROM #months

	INSERT #emps
	SELECT DISTINCT WS.EMP_CODE, E.DP_TM_CODE
	FROM W_EMP_STD_HOURS_DTL WS 
		LEFT OUTER JOIN EMPLOYEE E ON WS.EMP_CODE = E.EMP_CODE
	WHERE E.EMP_TERM_DATE IS NULL OR E.EMP_TERM_DATE >= @startdate
	--SELECT * FROM #emps

	SELECT @NumberRecords = COUNT(*) FROM #months
	SET @RowCount = 1

	SELECT @NumberRecords2 = COUNT(*) FROM #emps
	SET @RowCount2 = 1

	WHILE @RowCount <= @NumberRecords
	BEGIN
		SELECT @sd = Startdate, @ed = Enddate
		FROM #months
		WHERE RowID = @RowCount

		WHILE @RowCount2 <= @NumberRecords2
		BEGIN
			SELECT @EmpCode = EmpCode, @DeptCode = DeptCode
			FROM #emps
			WHERE RowID = @RowCount2

			SELECT @StdHours = SUM(STD_HRS)
			FROM W_EMP_STD_HOURS_DTL WS
			WHERE UPPER(USERID) = UPPER(@UserID) AND WS.EMP_CODE = @EmpCode AND WS.WORK_DATE >= @sd AND WS.WORK_DATE <= @ed

			INSERT INTO DASH_DATA_EMP_TIME (REC_TYPE, EMP_CODE,
				DP_TM_CODE,
				PERIOD,
				AR_PERIOD,
				EMP_DATE,
				CLIENT,
				DIVISION,
				PRODUCT,
				JOB_NUMBER,
				JOB_COMPONENT_NBR,
				FNC_CODE,
				CATEGORY,
				DIRECT_TYPE,
				POSTED_HOURS,
				DIRECT_HOURS,
				TOTAL_COST,
				BILLABLE_HOURS,
				DIRECT_NONBILL_HOURS,
				DIRECT_NEW_BUS_HOURS,
				DIRECT_AGENCY_HOURS,
				BILLED_HOURS,
				WIP_HOURS,
				NON_PROD_HOURS,
				DIRECT_AMT,
				BILLABLE_AMT,
				DIRECT_NONBILL_AMT,
				DIRECT_NEW_BUS_AMT,
				DIRECT_AGENCY_AMT,
				MARK_UP_DOWN_AMT,
				MARK_UP_DOWN_HRS,
				BILLED_AMT,
				WIP_AMT,
				[TYPE],
				FEE_TIME,
				STD_HOURS)
			VALUES('S',@EmpCode,@DeptCode,NULL,NULL,@sd,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,@StdHours)

		 SET @RowCount2 = @RowCount2 + 1
		END		
	 SET @RowCount2 = 1	
	 SET @RowCount = @RowCount + 1
	END
			
			--UPDATE DASH_DATA_EMP_TIME
			--SET STD_HOURS = (
			--SELECT STD_HRS 
			--FROM W_EMP_STD_HOURS_DTL WS
			--WHERE UPPER(USERID) = UPPER(@UserID) AND WS.EMP_CODE = DASH_DATA_EMP_TIME.EMP_CODE AND WS.WORK_DATE = DASH_DATA_EMP_TIME.EMP_DATE)
	


    DELETE FROM W_EMP_STD_HOURS WHERE UPPER(USERID) = UPPER(@UserID)

	SET @ERR = @@Error

	--RETURN @ERR
END



