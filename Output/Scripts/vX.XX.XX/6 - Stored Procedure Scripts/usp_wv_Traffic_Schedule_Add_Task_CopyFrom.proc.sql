if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[usp_wv_Traffic_Schedule_Add_Task_CopyFrom]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
	drop procedure [dbo].[usp_wv_Traffic_Schedule_Add_Task_CopyFrom]
GO

CREATE PROCEDURE [dbo].[usp_wv_Traffic_Schedule_Add_Task_CopyFrom]
(
	@JOB_NUMBER INT,
	@JOB_COMPONENT_NBR SMALLINT,
	@JOB_ORDER SMALLINT,
	@TRAFFIC_PHASE_ID INT,
	@FNC_CODE VARCHAR(10),
	@TASK_DESCRIPTION VARCHAR(40),
	@MILESTONE SMALLINT ,
	@JOB_DAYS SMALLINT ,
	@JOB_HRS DECIMAL(8,2) ,
	@TASK_START_DATE SMALLDATETIME , 
	@JOB_REVISED_DATE SMALLDATETIME ,
	@DUE_TIME VARCHAR(10) ,
	@JOB_DUE_DATE SMALLDATETIME,
	@DUE_DATE_LOCK SMALLINT ,
	@JOB_COMPLETED_DATE SMALLDATETIME ,
	@FNC_EST VARCHAR(6) ,
	@FNC_COMMENTS TEXT ,
	@DUE_DATE_COMMENTS TEXT ,
	@REV_DATE_COMMENTS TEXT ,
	@EMP_LIST VARCHAR(2000),
	@PRED_LIST VARCHAR(2000),
	@TRF_ROLE VARCHAR(6),
	@ROWID INT = NULL OUTPUT,
	@CONTACT_IDS VARCHAR(2000),
	@TASK_STATUS VARCHAR(1),
	@SEQ_NBR SMALLINT,
	@GRID_ORDER SMALLINT = NULL,
	@user_id varchar(100)
)
AS

/* IS USED IN .Net AT THIS POINT - 
	\Webvantage\Webvantage\App_Code\cSchedule.vb(1917): i = oSQL.ExecuteNonQuery ... 
*/

IF ISNULL(@user_id, '') > '' BEGIN
	SET @user_id = UPPER(@user_id)
END
ELSE BEGIN
	SET @user_id = ''
	--SELECT @user_id = UPPER(dbo.fn_AdvanUser())
END

BEGIN

	SET NOCOUNT OFF

	DECLARE 
	@ERR INT,
	@SEQ_NBR_EXISTS BIT
	
	DECLARE @UserCode VARCHAR(100)

	SELECT @UserCode = @user_id --dbo.fn_AdvanUser()

	SET @SEQ_NBR_EXISTS = 0;

	IF EXISTS (SELECT 1 FROM JOB_TRAFFIC_DET WITH(NOLOCK) WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR AND SEQ_NBR = @SEQ_NBR)
	BEGIN
		SELECT @SEQ_NBR = ISNULL(MAX(SEQ_NBR),-1) + 1 FROM JOB_TRAFFIC_DET WHERE JOB_NUMBER = @JOB_NUMBER AND JOB_COMPONENT_NBR = @JOB_COMPONENT_NBR; 
	END

	IF @SEQ_NBR IS NULL
	BEGIN
		SET @SEQ_NBR = 0;
	END
    
    IF DATALENGTH(@DUE_TIME) > 0
    BEGIN
		SET @DUE_TIME = CAST(@DUE_TIME AS VARCHAR(10));
    END
    
    IF (@TASK_STATUS IS NULL) OR (@TASK_STATUS = '')
    BEGIN
        SET @TASK_STATUS = 'P';
    END

	INSERT INTO [JOB_TRAFFIC_DET]
		(
			[JOB_NUMBER],
			[JOB_COMPONENT_NBR],
			[SEQ_NBR],
			[JOB_ORDER],
			[TRAFFIC_PHASE_ID],
			[TASK_STATUS],
			[FNC_CODE],
			[TASK_DESCRIPTION],
			[MILESTONE],
			[JOB_DAYS],
			[JOB_HRS],
			[TASK_START_DATE],
			[JOB_REVISED_DATE],
			[DUE_TIME],
			[JOB_DUE_DATE],
			[DUE_DATE_LOCK],
			[JOB_COMPLETED_DATE],
			[FNC_EST],
			[FNC_COMMENTS],
			[DUE_DATE_COMMENTS],
			[REV_DATE_COMMENTS],
			[TRF_ROLE],
			[REVISED_DUE_TIME],
			[GRID_ORDER]
		)
		VALUES
		(
			@JOB_NUMBER,
			@JOB_COMPONENT_NBR,
			@SEQ_NBR,
			@JOB_ORDER,
			@TRAFFIC_PHASE_ID,
			@TASK_STATUS,
			@FNC_CODE,
			@TASK_DESCRIPTION,
			@MILESTONE,
			@JOB_DAYS,
			@JOB_HRS,
			@TASK_START_DATE,
			@JOB_REVISED_DATE,
			CAST(@DUE_TIME AS VARCHAR),
			@JOB_DUE_DATE,
			@DUE_DATE_LOCK,
			@JOB_COMPLETED_DATE,
			@FNC_EST,
			@FNC_COMMENTS,
			@DUE_DATE_COMMENTS,
			@REV_DATE_COMMENTS,
			@TRF_ROLE,
			CAST(@DUE_TIME AS VARCHAR),
			@GRID_ORDER
		);

	SET @ERR = @@Error;

	SELECT @ROWID = @SEQ_NBR;

	IF NOT @SEQ_NBR IS NULL
	BEGIN

		EXECUTE dbo.advsp_agile_add_assignment_from_task @JOB_NUMBER, @JOB_COMPONENT_NBR, @SEQ_NBR, @UserCode  /* @NEXT_SEQ_NBR was not defined */

		IF DATALENGTH(@EMP_LIST) > 0
		BEGIN
			EXECUTE usp_wv_Traffic_Schedule_SaveTask_EmpListString @EMP_LIST,@JOB_NUMBER,@JOB_COMPONENT_NBR,@SEQ_NBR, @UserCode;
		END
		IF DATALENGTH(@PRED_LIST) > 0
		BEGIN
			EXECUTE usp_wv_Traffic_Schedule_SaveTask_PredListString @PRED_LIST,@JOB_NUMBER,@JOB_COMPONENT_NBR,@SEQ_NBR;
		END
		IF DATALENGTH(@CONTACT_IDS) > 0
		BEGIN
			EXECUTE usp_wv_Traffic_Schedule_SaveTask_ContactListString @CONTACT_IDS,@JOB_NUMBER,@JOB_COMPONENT_NBR,@SEQ_NBR;
		END
	END

END
GO

GRANT EXECUTE ON [usp_wv_Traffic_Schedule_Add_Task_CopyFrom] TO PUBLIC AS dbo
GO
