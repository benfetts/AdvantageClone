IF EXISTS ( SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[usp_wv_Traffic_Schedule_GetTasks_V2]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_wv_Traffic_Schedule_GetTasks_V2];
END


/****** Object:  StoredProcedure [dbo].[usp_wv_Traffic_Schedule_GetTasks_V2]    Script Date: 5/5/2021 5:25:32 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






 
 
CREATE PROCEDURE [dbo].[usp_wv_Traffic_Schedule_GetTasks_V2]
	@JobNum AS INT,
	@JobCompNum AS INT,
	@Sort VARCHAR(10) = '',
	@USER_ID VARCHAR(100),
	@EMP_CODE AS VARCHAR(6) = '',
	@TASK_CODE AS VARCHAR(10) = '',
	@ROLE_CODE AS VARCHAR(6) = '',
	@IncludeCompletedTasks AS CHAR(1),
	@IncludeOnlyPendingTasks AS CHAR(1),
	@ExcludeProjectedTasks AS CHAR(1),
	@CUT_OFF_DATE AS smalldatetime  = '',
	@PHASE_FILTER AS VARCHAR(50)  = '',
	@GANTT BIT
AS
-- exec usp_wv_Traffic_Schedule_GetTasks_V2 527,1,'','ama','','','', 'Y','N','N',null,'',0
DECLARE
        @RESTRICTIONS SMALLINT,
        @USE_VIEW SMALLINT,
		@SELECT_SQL VARCHAR(8000),
		@FROM_SQL VARCHAR(8000),
		@WHERE_SQL VARCHAR(8000),
		@GROUPBY_SQL VARCHAR(8000),
		@ORDERBY_SQL VARCHAR(8000),
		@CALC_PRED BIT,
		@VAR_SQL VARCHAR(8000)

        SELECT @RESTRICTIONS = ISNULL(COUNT(1),0) FROM SEC_CLIENT WHERE UPPER(USER_ID) = UPPER(@USER_ID)

        IF DATALENGTH(@EMP_CODE) > 0-- OR DATALENGTH(@TASK_CODE) > 0 OR DATALENGTH(@ROLE_CODE) > 0 
            BEGIN
                SET @USE_VIEW = 1
            END
        ELSE
            BEGIN           
	            SET @USE_VIEW = 0
            END

        DECLARE 
        @SEQ_TABLE  TABLE (SEQ_NBR SMALLINT)

		SELECT 
			@CALC_PRED = CONVERT(BIT, CASE WHEN SCHEDULE_CALC = 1 THEN 1 ELSE 0 END) 
		FROM 
			dbo.JOB_TRAFFIC 
		WHERE 
			JOB_NUMBER = @JobNum AND
			JOB_COMPONENT_NBR = @JobCompNum

        IF @USE_VIEW = 1
        BEGIN
            INSERT INTO @SEQ_TABLE(SEQ_NBR)
            SELECT DISTINCT SEQ_NBR AS SEQ_NBR
            FROM         JOB_TRAFFIC_DET_EMPS WITH(NOLOCK)
            WHERE     (JOB_NUMBER = @JobNum) AND (JOB_COMPONENT_NBR = @JobCompNum) AND (EMP_CODE = @EMP_CODE)
        END
        --SELECT * FROM @SEQ_TABLE

/*

Begin Variable SQL

*/

SET @VAR_SQL = '

DECLARE @ParentTasks TABLE (JOB_NUMBER INT, JOB_COMPONENT_NBR SMALLINT, SEQ_NBR SMALLINT, PARENT_TASK_SEQ SMALLINT, IS_REQUIRED BIT);

WITH Parents_CTE (JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR, PARENT_TASK_SEQ)
AS
(
	SELECT 
		JTD.JOB_NUMBER,
		JTD.JOB_COMPONENT_NBR,
		JTD.SEQ_NBR,
		JTD.PARENT_TASK_SEQ
	FROM
		dbo.JOB_TRAFFIC_DET JTD
	WHERE
		JTD.JOB_NUMBER = ' + CAST(@JobNum AS VARCHAR) + ' AND
		JTD.JOB_COMPONENT_NBR = ' + CAST(@JobCompNum AS VARCHAR) + '

	UNION ALL

	SELECT 
		JTD.JOB_NUMBER,
		JTD.JOB_COMPONENT_NBR,
		Parents_CTE.SEQ_NBR,
		JTD.PARENT_TASK_SEQ
	FROM
		dbo.JOB_TRAFFIC_DET JTD 
	INNER JOIN
		Parents_CTE ON JTD.JOB_NUMBER = Parents_CTE.JOB_NUMBER AND
					   JTD.JOB_COMPONENT_NBR = Parents_CTE.JOB_COMPONENT_NBR AND
					   JTD.SEQ_NBR = Parents_CTE.PARENT_TASK_SEQ
					   WHERE JTD.PARENT_TASK_SEQ != JTD.SEQ_NBR

)

INSERT INTO @ParentTasks
	SELECT DISTINCT 
		JOB_NUMBER, JOB_COMPONENT_NBR, SEQ_NBR, PARENT_TASK_SEQ, 0
	FROM 
		Parents_CTE 
	WHERE 
		PARENT_TASK_SEQ IS NOT NULL
'

IF @CALC_PRED = 1
BEGIN

	SET @VAR_SQL = @VAR_SQL + '
		IF DATALENGTH(''' + @EMP_CODE + ''') > 0 OR DATALENGTH(''' + @TASK_CODE + ''') > 0 OR DATALENGTH(''' + @ROLE_CODE + ''') > 0 OR DATALENGTH(''' + @PHASE_FILTER + ''') > 0
		BEGIN
			UPDATE
				PT
			SET
				IS_REQUIRED = 1 
			FROM
				@ParentTasks PT
			INNER JOIN
				dbo.JOB_TRAFFIC_DET JTD ON PT.JOB_NUMBER = JTD.JOB_NUMBER AND
										   PT.JOB_COMPONENT_NBR = JTD.JOB_COMPONENT_NBR AND
										   PT.SEQ_NBR = JTD.SEQ_NBR
			LEFT OUTER JOIN
				dbo.JOB_TRAFFIC_DET_EMPS JTDE ON PT.JOB_NUMBER = JTDE.JOB_NUMBER AND
												 PT.JOB_COMPONENT_NBR = JTDE.JOB_COMPONENT_NBR AND
												 PT.SEQ_NBR = JTDE.SEQ_NBR
			LEFT OUTER JOIN
				dbo.TASK_TRAFFIC_ROLE TTR ON JTD.FNC_CODE = TTR.TRF_CODE
			WHERE
				1 = CASE WHEN DATALENGTH(''' + @EMP_CODE + ''') = 0 THEN 1 WHEN JTDE.EMP_CODE = ''' + @EMP_CODE + ''' THEN 1 ELSE 0 END AND
				1 = CASE WHEN DATALENGTH(''' + @TASK_CODE + ''') = 0 THEN 1 WHEN JTD.FNC_CODE = ''' + @TASK_CODE + ''' THEN 1 ELSE 0 END AND
				1 = CASE WHEN DATALENGTH(''' + @ROLE_CODE + ''') = 0 THEN 1 WHEN TTR.ROLE_CODE = ''' + @ROLE_CODE + ''' THEN 1 ELSE 0 END AND
				1 = CASE WHEN ''' + @PHASE_FILTER + ''' = ''no_filter'' OR DATALENGTH(''' + @PHASE_FILTER + ''') = 0 THEN 1 WHEN ''' + @PHASE_FILTER + ''' = ''is_null'' AND JTD.TRAFFIC_PHASE_ID IS NULL THEN 1 WHEN ISNUMERIC(''' + @PHASE_FILTER + ''') = 1 AND JTD.TRAFFIC_PHASE_ID = CONVERT(SMALLINT, ''' + @PHASE_FILTER + ''') THEN 1 ELSE 0 END

		END'

END

/*

Begin Select SQL 
--Update
HEY!!!  IF YOU MODIFY THE SELECT STATEMENT BELOW, CHECK THE TEMP TABLE IN advsp_agile_get_sprint_details AND MAKE SURE IT MATCHES THIS OUTPUT!!!!
*/

SET @SELECT_SQL = '
SELECT 
	[ID] = JOB_TRAFFIC_DET.ROWID,
	[AlertId] = ALERT.ALERT_ID,
	[Priority] = ALERT.PRIORITY,
	[JobNumber] = JOB_TRAFFIC_DET.JOB_NUMBER, 
	[JobComponentNumber] = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR, 
	[SequenceNumber] = JOB_TRAFFIC_DET.SEQ_NBR, 
	[TaskCode] = JOB_TRAFFIC_DET.FNC_CODE, 
	[TaskDescription] = ISNULL(JOB_TRAFFIC_DET.TASK_DESCRIPTION,''''),
	[TaskStatus] = JOB_TRAFFIC_DET.TASK_STATUS, 
	[EmployeeCode] = CASE JOB_TRAFFIC_DET.EMP_CODE WHEN '' ...'' THEN 
	(SELECT TOP 1 stuff((
	select '','' + u.EMP_CODE
	from JOB_TRAFFIC_DET_EMPS u 
	where JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER and JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR and SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR
	order by u.EMP_CODE
	for xml path('''')
	),1,1,'''') as EMP_CODE
	from JOB_TRAFFIC_DET_EMPS) ELSE JOB_TRAFFIC_DET.EMP_CODE END,
	[EmployeeName] =  CASE JOB_TRAFFIC_DET.EMP_CODE WHEN '' ...'' THEN 
	(SELECT TOP 1 stuff((select CASE WHEN e.EMP_MI IS NULL THEN '', '' + e.EMP_FNAME + '' '' + e.EMP_LNAME ELSE '', '' + e.EMP_FNAME + '' '' + e.EMP_MI + ''. '' + e.EMP_LNAME END
	from JOB_TRAFFIC_DET_EMPS u 
	join EMPLOYEE e ON e.EMP_CODE = u.EMP_CODE
	where JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER  and JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR and SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR
	order by u.EMP_CODE
	for xml path('''')
	),1,1,'''') as EMP_NAME
	from JOB_TRAFFIC_DET_EMPS)
	ELSE 
	(select top 1 CASE WHEN e.EMP_MI IS NULL THEN e.EMP_FNAME + '' '' + e.EMP_LNAME ELSE e.EMP_FNAME + '' '' + e.EMP_MI + ''. '' + e.EMP_LNAME END	from EMPLOYEE e WHERE e.EMP_CODE = JOB_TRAFFIC_DET.EMP_CODE) END,
	[EstimateFunction] = JOB_TRAFFIC_DET.FNC_EST, 
	[TaskStartDate] = HT.TASK_START_DATE,'

    IF @GANTT = 1
    BEGIN
        SET @SELECT_SQL = @SELECT_SQL + '[JobRevisedDate] = CASE ( select AGY_SETTINGS_VALUE from [AGY_SETTINGS] where [AGY_SETTINGS_CODE] = ''TRF_CALC_BY_DAY'')
							WHEN 0 THEN
								DATEADD(minute,59,DATEADD(hour,23,HT.JOB_REVISED_DATE))
							ELSE 
								HT.JOB_REVISED_DATE
							END,'
    END
    ELSE
    BEGIN
        SET @SELECT_SQL = @SELECT_SQL + '[JobRevisedDate] = HT.JOB_REVISED_DATE,'
    END

	SET @SELECT_SQL = @SELECT_SQL + '
	[JobCompletedDate] = HT.JOB_COMPLETED_DATE,
	[JobDueDate] = HT.JOB_DUE_DATE,
	[RevisedDueTime] = JOB_TRAFFIC_DET.REVISED_DUE_TIME, 
	[TemporaryCompleteDate] = CAST(HT.TEMP_COMP_DATE AS DATE),
	[TrafficPhaseID] = ISNULL(JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, 0), 
	[PhaseOrder] = ISNULL(TRAFFIC_PHASE.PHASE_ORDER,0), 
	[PhaseDescription] = ISNULL(TRAFFIC_PHASE.PHASE_DESC,''''), 
	[JobOrder] = JOB_TRAFFIC_DET.JOB_ORDER, 
	[JobDays] = HT.JOB_DAYS, 
	[JobHours] = HT.JOB_HRS, 
	[DueTime] = JOB_TRAFFIC_DET.DUE_TIME, 
	[Milestone] = JOB_TRAFFIC_DET.MILESTONE, 
	[Predecessor] = NULL, --JOB_TRAFFIC_DET_PREDS.PREDECESSOR_SEQ_NBR, 
	[DueDateLock] = ISNULL(JOB_TRAFFIC_DET.DUE_DATE_LOCK, 0), 
	[FunctionComments] = CAST(JOB_TRAFFIC_DET.FNC_COMMENTS AS VARCHAR(4000)), 
	[DueDateComments] = CAST(JOB_TRAFFIC_DET.DUE_DATE_COMMENTS AS VARCHAR(4000)), 
	[RevisionDateComments] = CAST(JOB_TRAFFIC_DET.REV_DATE_COMMENTS AS VARCHAR(4000)), 
	[DispersedHours] = ISNULL(SUM(JOB_TRAFFIC_DET_EMPS.HOURS_ALLOWED), 0), 
	[TrafficRole] = JOB_TRAFFIC_DET.TRF_ROLE, 
	[FunctionDescription] = FUNCTIONS.FNC_DESCRIPTION,
	[ClientContact] = (SELECT TOP 1 
			stuff((
				select '','' +  h.CONT_CODE
				from JOB_TRAFFIC_DET_CNTS u 
					join CDP_CONTACT_HDR h on u.CDP_CONTACT_ID = h.CDP_CONTACT_ID
				where JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER and JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR and SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR
				order by h.CONT_CODE
				for xml path('''')
			),1,1,'''') as CDP_CONTACT_CODES),
	[ClientContactName] = (SELECT TOP 1 
			stuff((
				select '', '' +  h.CONT_FML
				from JOB_TRAFFIC_DET_CNTS u 
					join CDP_CONTACT_HDR h on u.CDP_CONTACT_ID = h.CDP_CONTACT_ID
				where JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER and JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR and SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR
				order by h.CONT_CODE
				for xml path('''')
			),1,1,'''') as CDP_CONTACT_NAMES),
	[HasAssignment] =	CASE 
							WHEN (SELECT 
									COUNT(1) 
								  FROM ALERT WITH(NOLOCK) INNER JOIN 
									   ALERT_RCPT WITH(NOLOCK) ON ALERT.ALERT_ID = ALERT_RCPT.ALERT_ID 
								  WHERE 
									ALERT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND
									ALERT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR AND 
									ALERT.TASK_SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR AND 
									ALERT_RCPT.CURRENT_NOTIFY = 1) > 0 THEN 1 
							WHEN (SELECT 
									COUNT(1) 
								  FROM 
									ALERT WITH(NOLOCK) INNER JOIN 
									ALERT_RCPT_DISMISSED WITH(NOLOCK) ON ALERT.ALERT_ID = ALERT_RCPT_DISMISSED.ALERT_ID 
								  WHERE 
									ALERT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND 
									ALERT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR AND 
									ALERT.TASK_SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR AND 
									ALERT_RCPT_DISMISSED.CURRENT_NOTIFY = 1) > 0 THEN 1 
							ELSE 0 END, 
	[HasAlerts] =	CASE 
						WHEN (SELECT 
								COUNT(1) 
							  FROM 
								ALERT WITH(NOLOCK) 
							  WHERE 
								ALERT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND 
								ALERT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR AND 
								ALERT.TASK_SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR AND 
								ALERT.ALERT_LEVEL = ''PST'' ) > 0 THEN 1 
						ELSE 0 END,
	[POSTED_HOURS] = 0,
	[PostedHours] = (SELECT 
						ISNULL(SUM(ETD.EMP_HOURS),0) 
					  FROM 
						EMP_TIME_DTL ETD INNER JOIN 
						EMP_TIME AS ET ON ETD.ET_ID = ET.ET_ID LEFT OUTER JOIN 
						ALERT AS A ON A.ALERT_ID = ETD.ALERT_ID
					  WHERE  
						ETD.ALERT_ID IS NOT NULL AND 
						A.JOB_NUMBER = ' + CAST(@JobNum AS VARCHAR)+' AND 
						A.JOB_COMPONENT_NBR = '+ CAST(@JobCompNum AS VARCHAR) +' AND 
						A.TASK_SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR),
	[PERC_COMPLETE] = 0,
	[PercentComplete] =	CASE 
							WHEN ISNULL(SUM(JOB_TRAFFIC_DET_EMPS.HOURS_ALLOWED), 0) > 0 THEN ((SELECT 
																								ISNULL(SUM(ETD.EMP_HOURS),0) 
																							  FROM 
																								EMP_TIME_DTL ETD INNER JOIN 
																								EMP_TIME AS ET ON ETD.ET_ID = ET.ET_ID LEFT OUTER JOIN 
																								ALERT AS A ON A.ALERT_ID = ETD.ALERT_ID
																							  WHERE  
																								ETD.ALERT_ID IS NOT NULL AND 
																								A.JOB_NUMBER = ' + CAST(@JobNum AS VARCHAR)+' AND 
																								A.JOB_COMPONENT_NBR = '+ CAST(@JobCompNum AS VARCHAR) +' AND 
																								A.TASK_SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR) / (ISNULL(SUM(JOB_TRAFFIC_DET_EMPS.HOURS_ALLOWED), 0))) * 100 
							ELSE 0 END,
	[PhaseStartDate] = (SELECT 
							MIN(JTD.TASK_START_DATE) 
						  FROM 
							JOB_TRAFFIC_DET JTD 
						  WHERE 
							(JTD.JOB_COMPONENT_NBR = ' + CAST(@JobCompNum AS VARCHAR)+' ) AND 
							(JTD.JOB_NUMBER = '+ CAST(@JobNum AS VARCHAR) +') AND 
							JTD.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID AND 
							JTD.TRAFFIC_PHASE_ID IS NOT NULL 
						  GROUP BY 
							JTD.TRAFFIC_PHASE_ID),
	[PhaseEndDate] = (SELECT 
							MAX(JTD.JOB_REVISED_DATE) 
						 FROM 
							JOB_TRAFFIC_DET JTD 
						 WHERE 
							(JTD.JOB_COMPONENT_NBR = ' + CAST(@JobCompNum AS VARCHAR)+' ) AND 
							(JTD.JOB_NUMBER = '+ CAST(@JobNum AS VARCHAR) +') AND 
							JTD.TRAFFIC_PHASE_ID = JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID AND 
							JTD.TRAFFIC_PHASE_ID IS NOT NULL 
						 GROUP BY 
							JTD.TRAFFIC_PHASE_ID),
	[ParentTaskSequenceNumber] = '

IF @CALC_PRED = 1 
BEGIN
	SET @SELECT_SQL = @SELECT_SQL + 'CONVERT(SMALLINT, JOB_TRAFFIC_DET.PARENT_TASK_SEQ), '
END
ELSE
BEGIN
	SET @SELECT_SQL = @SELECT_SQL + 'NULL, '
END

SET @SELECT_SQL = @SELECT_SQL + '
	[GridOrder] = JOB_TRAFFIC_DET.GRID_ORDER,
	[Level] = HT.[LEVEL],
	[HasDocuments] = CONVERT(BIT, CASE WHEN JOB_TRAFFIC_DET_DOCS.JOB_NUMBER IS NOT NULL OR ASSIGNMENT_DOCS.JOB_NUMBER IS NOT NULL THEN 1 ELSE 0 END),
	[HasChildren] = HT.HAS_CHILDREN,
	[HasPredecessors] = CONVERT(BIT, CASE WHEN JOB_TRAFFIC_DET_PREDS.JOB_NUMBER IS NOT NULL THEN 1 ELSE 0 END) '

/*

Begin From SQL

*/

SET @FROM_SQL = '
FROM 
	dbo.JOB_COMPONENT WITH(NOLOCK) 
INNER JOIN 
	dbo.JOB_TRAFFIC_DET WITH(NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND 
										JOB_COMPONENT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR 
INNER JOIN 
	dbo.JOB_LOG WITH(NOLOCK) ON JOB_COMPONENT.JOB_NUMBER = JOB_LOG.JOB_NUMBER 
LEFT OUTER JOIN 
	dbo.JOB_TRAFFIC_DET_EMPS WITH(NOLOCK) ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_EMPS.JOB_NUMBER AND 
											 JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_EMPS.JOB_COMPONENT_NBR AND 
											 JOB_TRAFFIC_DET.SEQ_NBR = JOB_TRAFFIC_DET_EMPS.SEQ_NBR 
LEFT OUTER JOIN 
	dbo.TRAFFIC_PHASE WITH(NOLOCK) ON JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID = TRAFFIC_PHASE.TRAFFIC_PHASE_ID 
LEFT OUTER JOIN 
	dbo.FUNCTIONS WITH(NOLOCK) ON FUNCTIONS.FNC_CODE = JOB_TRAFFIC_DET.FNC_EST 
INNER JOIN
	dbo.advtf_traffic_schedule_GetHierarchyDates(' + CAST(@JobNum AS VARCHAR) + ', ' + CAST(@JobCompNum AS VARCHAR)+') HT ON HT.JOB_NUMBER = JOB_TRAFFIC_DET.JOB_NUMBER AND
																															 HT.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET.JOB_COMPONENT_NBR AND
																															 HT.SEQ_NBR = JOB_TRAFFIC_DET.SEQ_NBR
LEFT OUTER JOIN
	(SELECT
		JOB_NUMBER,
		JOB_COMPONENT_NBR,
		SEQ_NBR
	 FROM
		dbo.JOB_TRAFFIC_DET_DOCS
	 WHERE
		JOB_NUMBER = ' + CAST(@JobNum AS VARCHAR) + ' AND
		JOB_COMPONENT_NBR = ' + CAST(@JobCompNum AS VARCHAR) + '
	 GROUP BY
		JOB_NUMBER,
		JOB_COMPONENT_NBR,
		SEQ_NBR) JOB_TRAFFIC_DET_DOCS ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_DOCS.JOB_NUMBER AND
										 JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_DOCS.JOB_COMPONENT_NBR AND
										 JOB_TRAFFIC_DET.SEQ_NBR = JOB_TRAFFIC_DET_DOCS.SEQ_NBR
LEFT OUTER JOIN
	(SELECT
		JOB_NUMBER,
		JOB_COMPONENT_NBR,
		TASK_SEQ_NBR
	 FROM
		dbo.ALERT INNER JOIN ALERT_ATTACHMENT ON ALERT_ATTACHMENT.ALERT_ID = ALERT.ALERT_ID
	 WHERE
		JOB_NUMBER = ' + CAST(@JobNum AS VARCHAR) + ' AND
		JOB_COMPONENT_NBR = ' + CAST(@JobCompNum AS VARCHAR) + '
	 GROUP BY
		JOB_NUMBER,
		JOB_COMPONENT_NBR,
		TASK_SEQ_NBR) ASSIGNMENT_DOCS ON JOB_TRAFFIC_DET.JOB_NUMBER = ASSIGNMENT_DOCS.JOB_NUMBER AND
										 JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = ASSIGNMENT_DOCS.JOB_COMPONENT_NBR AND
										 JOB_TRAFFIC_DET.SEQ_NBR = ASSIGNMENT_DOCS.TASK_SEQ_NBR														
LEFT OUTER JOIN
	(SELECT
		JOB_NUMBER,
		JOB_COMPONENT_NBR,
		SEQ_NBR
	 FROM
		dbo.JOB_TRAFFIC_DET_PREDS
	 WHERE
		JOB_NUMBER = ' + CAST(@JobNum AS VARCHAR) + ' AND
		JOB_COMPONENT_NBR = ' + CAST(@JobCompNum AS VARCHAR) + '
	 GROUP BY
		JOB_NUMBER,
		JOB_COMPONENT_NBR,
		SEQ_NBR) JOB_TRAFFIC_DET_PREDS ON JOB_TRAFFIC_DET.JOB_NUMBER = JOB_TRAFFIC_DET_PREDS.JOB_NUMBER AND
										  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = JOB_TRAFFIC_DET_PREDS.JOB_COMPONENT_NBR AND
										  JOB_TRAFFIC_DET.SEQ_NBR = JOB_TRAFFIC_DET_PREDS.SEQ_NBR
LEFT OUTER JOIN
	(SELECT
		[JOB_NUMBER],
		[JOB_COMPONENT_NBR],
		[SEQ_NBR],
		[ORDER] = ISNULL(GRID_ORDER, JOB_ORDER)
	 FROM
		dbo.JOB_TRAFFIC_DET
	 WHERE
		JOB_NUMBER = ' + CAST(@JobNum AS VARCHAR) + ' AND
		JOB_COMPONENT_NBR = ' + CAST(@JobCompNum AS VARCHAR) + ') PARENT_JOB_TRAFFIC_DET ON JOB_TRAFFIC_DET.JOB_NUMBER = PARENT_JOB_TRAFFIC_DET.JOB_NUMBER AND
																							JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = PARENT_JOB_TRAFFIC_DET.JOB_COMPONENT_NBR AND
																							JOB_TRAFFIC_DET.PARENT_TASK_SEQ = PARENT_JOB_TRAFFIC_DET.SEQ_NBR
JOIN ALERT ON JOB_TRAFFIC_DET.JOB_NUMBER = ALERT.JOB_NUMBER AND
			  JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = ALERT.JOB_COMPONENT_NBR AND
			  JOB_TRAFFIC_DET.SEQ_NBR = ALERT.TASK_SEQ_NBR AND
			  ALERT.ALERT_CAT_ID = 71
'
IF DATALENGTH(@ROLE_CODE) > 0 
	BEGIN
		SET @FROM_SQL = @FROM_SQL + 'LEFT OUTER JOIN TASK_TRAFFIC_ROLE  WITH(NOLOCK) ON JOB_TRAFFIC_DET.FNC_CODE = TASK_TRAFFIC_ROLE.TRF_CODE  '
	END
IF @RESTRICTIONS > 0
BEGIN
	SET @FROM_SQL = @FROM_SQL + 'INNER JOIN SEC_CLIENT WITH(NOLOCK) ON JOB_LOG.CL_CODE = SEC_CLIENT.CL_CODE AND JOB_LOG.DIV_CODE = SEC_CLIENT.DIV_CODE AND 
	JOB_LOG.PRD_CODE = SEC_CLIENT.PRD_CODE '
END


/*

Begin Where SQL

*/

SET @WHERE_SQL = ' 
WHERE 
	((JOB_TRAFFIC_DET.JOB_COMPONENT_NBR = ' + CAST(@JobCompNum AS VARCHAR)+' ) AND 
	(JOB_TRAFFIC_DET.JOB_NUMBER = '+ CAST(@JobNum AS VARCHAR) +') AND 
	1=1 '
IF @RESTRICTIONS > 0
BEGIN
	SET @WHERE_SQL = @WHERE_SQL + 'AND 
	(UPPER(SEC_CLIENT.USER_ID) = UPPER('''+@USER_ID+''')) AND 
	(SEC_CLIENT.TIME_ENTRY = 0 OR SEC_CLIENT.TIME_ENTRY IS NULL) '
END
IF DATALENGTH(@TASK_CODE) > 0 
	BEGIN
		SET @WHERE_SQL = @WHERE_SQL + 'AND 
	JOB_TRAFFIC_DET.FNC_CODE = '''+@TASK_CODE+''' '
	END	
IF DATALENGTH(@ROLE_CODE) > 0 
	BEGIN
		SET @WHERE_SQL = @WHERE_SQL + 'AND 
	TASK_TRAFFIC_ROLE.ROLE_CODE  = '''+@ROLE_CODE + ''' '
	END   
IF DATALENGTH(@EMP_CODE) > 0 
	BEGIN
		SET @WHERE_SQL = @WHERE_SQL + 'AND 
	JOB_TRAFFIC_DET_EMPS.EMP_CODE = ''' + @EMP_CODE + ''' '
	END   
IF @IncludeOnlyPendingTasks = 'Y'
	BEGIN
		SELECT @WHERE_SQL = @WHERE_SQL + 'AND 
	HT.TEMP_COMP_DATE IS NOT NULL '
		--OVERRIDE COMPLETED ISSUE 499
		SET @IncludeCompletedTasks = 'N'
	END								

IF @IncludeCompletedTasks = 'N'
	BEGIN
		SELECT @WHERE_SQL = @WHERE_SQL + 'AND 
	HT.JOB_COMPLETED_DATE IS NULL '
	END	
IF @ExcludeProjectedTasks = 'Y'
	BEGIN
		SELECT @WHERE_SQL = @WHERE_SQL + 'AND 
	(JOB_TRAFFIC_DET.TASK_STATUS <> ''P'' OR 
	JOB_TRAFFIC_DET.TASK_STATUS IS NULL) '
	END	  
IF DATALENGTH(@CUT_OFF_DATE) > 0
BEGIN
	SET @WHERE_SQL = @WHERE_SQL + ' AND 
	(NOT (HT.JOB_REVISED_DATE IS NULL)) AND 
	(HT.JOB_REVISED_DATE <= CONVERT(DATETIME, ''' + Cast(@CUT_OFF_DATE as varchar) +   ''', 102)) '
END  
IF @PHASE_FILTER = 'is_null'
BEGIN
		SELECT @WHERE_SQL = @WHERE_SQL + ' AND 
	JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID IS NULL '
END
IF ISNUMERIC(@PHASE_FILTER) = 1
BEGIN
		SELECT @WHERE_SQL = @WHERE_SQL + ' AND 
	JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID = ' + CAST(@PHASE_FILTER AS VARCHAR)
END
IF @GANTT = 1
BEGIN
   SET @WHERE_SQL = @WHERE_SQL + ' AND 
   (HT.TASK_START_DATE IS NOT NULL OR 
    HT.JOB_REVISED_DATE IS NOT NULL)'
END

SET @WHERE_SQL = @WHERE_SQL + ')'

IF @CALC_PRED = 1
BEGIN

	SET @WHERE_SQL = @WHERE_SQL + ' OR ( HT.SEQ_NBR IN (SELECT PARENT_TASK_SEQ FROM @ParentTasks WHERE IS_REQUIRED = 1) )'

END

/*

Begin Group By SQL

*/

SET @GROUPBY_SQL = ' 
GROUP BY 
	JOB_TRAFFIC_DET.ROWID, ALERT.ALERT_ID, ALERT.PRIORITY, JOB_TRAFFIC_DET.JOB_NUMBER, JOB_TRAFFIC_DET.JOB_COMPONENT_NBR, JOB_TRAFFIC_DET.SEQ_NBR, JOB_TRAFFIC_DET.FNC_CODE, JOB_TRAFFIC_DET.TASK_DESCRIPTION,	JOB_TRAFFIC_DET.TASK_STATUS, 
	JOB_TRAFFIC_DET.FNC_EST, 
	HT.TASK_START_DATE, 
	HT.JOB_REVISED_DATE, 
	JOB_TRAFFIC_DET.REVISED_DUE_TIME, 
	JOB_TRAFFIC_DET.EMP_CODE, 
	HT.JOB_COMPLETED_DATE, 
	HT.TEMP_COMP_DATE, 
	CAST(JOB_TRAFFIC_DET.FNC_COMMENTS AS VARCHAR(4000)), 
	JOB_TRAFFIC_DET.TRAFFIC_PHASE_ID, 
	TRAFFIC_PHASE.PHASE_ORDER, 
	TRAFFIC_PHASE.PHASE_DESC, 
	JOB_TRAFFIC_DET.JOB_ORDER, 
	HT.JOB_DAYS, 
	JOB_TRAFFIC_DET.DUE_DATE_LOCK, 
	CAST(JOB_TRAFFIC_DET.DUE_DATE_COMMENTS AS VARCHAR(4000)), 
	CAST(JOB_TRAFFIC_DET.REV_DATE_COMMENTS AS VARCHAR(4000)), 
	HT.JOB_HRS, 
	JOB_TRAFFIC_DET.DUE_TIME, 
	JOB_TRAFFIC_DET.MILESTONE, 
	--JOB_TRAFFIC_DET_PREDS.PREDECESSOR_SEQ_NBR,
	HT.JOB_DUE_DATE,
	JOB_TRAFFIC_DET.PARENT_TASK_SEQ, 
	JOB_TRAFFIC_DET.GRID_ORDER, 
	HT.[LEVEL], 
	JOB_TRAFFIC_DET_DOCS.JOB_NUMBER,
	ASSIGNMENT_DOCS.JOB_NUMBER, 
	HT.HAS_CHILDREN, 
	JOB_TRAFFIC_DET_PREDS.JOB_NUMBER, 
	PARENT_JOB_TRAFFIC_DET.[ORDER],
	HT.ROW_ORDER, '

IF @RESTRICTIONS > 0
BEGIN
	SET @GROUPBY_SQL = @GROUPBY_SQL + '
	SEC_CLIENT.USER_ID, '
END
SET @GROUPBY_SQL = @GROUPBY_SQL + ' 
	JOB_TRAFFIC_DET.TRF_ROLE, 
	FUNCTIONS.FNC_DESCRIPTION '
IF DATALENGTH(@ROLE_CODE) > 0 
	BEGIN
		SET @GROUPBY_SQL = @GROUPBY_SQL + ', 
	TASK_TRAFFIC_ROLE.ROLE_CODE '
	END
	
/*

Begin Order By SQL

*/

IF @CALC_PRED = 1 
BEGIN
	SET @ORDERBY_SQL = '
ORDER BY
	HT.ROW_ORDER ASC
	'
END
ELSE
IF @Sort = 'order' 
BEGIN
	SET @ORDERBY_SQL = '
ORDER BY
	JOB_TRAFFIC_DET.JOB_ORDER ASC,
	ISNULL(JOB_TRAFFIC_DET.GRID_ORDER, JOB_TRAFFIC_DET.SEQ_NBR) ASC
	'
END
ELSE
IF @Sort = 'phase'
BEGIN
	SET @ORDERBY_SQL = '
ORDER BY
	TRAFFIC_PHASE.PHASE_ORDER ASC, 
	TRAFFIC_PHASE.PHASE_DESC ASC, 
	JOB_TRAFFIC_DET.JOB_ORDER ASC, 
	ISNULL(JOB_TRAFFIC_DET.GRID_ORDER, JOB_TRAFFIC_DET.SEQ_NBR) ASC
	'
END
ELSE
IF @Sort = 'startdue'
BEGIN
	SET @ORDERBY_SQL = '
ORDER BY
	HT.TASK_START_DATE, 
	HT.JOB_REVISED_DATE, 
	HT.JOB_DUE_DATE, 
	JOB_TRAFFIC_DET.JOB_ORDER ASC, 
	ISNULL(JOB_TRAFFIC_DET.GRID_ORDER, JOB_TRAFFIC_DET.SEQ_NBR) ASC
	'
END
ELSE
BEGIN
	SET @ORDERBY_SQL = '
ORDER BY
	ISNULL(JOB_TRAFFIC_DET.GRID_ORDER, JOB_TRAFFIC_DET.SEQ_NBR) ASC
	'
END

PRINT @VAR_SQL
PRINT @SELECT_SQL
PRINT @FROM_SQL
PRINT @WHERE_SQL
PRINT @GROUPBY_SQL
PRINT @ORDERBY_SQL
EXEC (@VAR_SQL + @SELECT_SQL + @FROM_SQL + @WHERE_SQL + @GROUPBY_SQL + @ORDERBY_SQL)

/*=========== QUERY ===========*/







GO


