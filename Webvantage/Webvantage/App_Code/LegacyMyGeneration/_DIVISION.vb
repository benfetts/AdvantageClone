
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  **
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class SqlClientEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'MustInherit' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can Override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  Public Class YourObject
'    Inherits _YourObject
'
'  End Class
'
'===============================================================================

' Generated by MyGeneration Version # (1.1.5.1)

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _DIVISION
	Inherits SqlClientEntity

		Public Sub New() 
			Me.QuerySource = "DIVISION"
			Me.MappingName = "DIVISION"
		End Sub

	'=================================================================
	'  Public Overrides Sub AddNew()
	'=================================================================
	'
	'=================================================================
	Public Overrides Sub AddNew()
		MyBase.AddNew()
				
	End Sub
	
	Public Overrides Sub FlushData()
		Me._whereClause = nothing
		Me._aggregateClause = nothing		
		MyBase.FlushData()
	End Sub
	
		
	'=================================================================
	'  	Public Function LoadAll() As Boolean
	'=================================================================
	'  Loads all of the records in the database, and sets the currentRow to the first row
	'=================================================================
	Public Function LoadAll() As Boolean
	
		Dim parameters As ListDictionary = Nothing
		
		
    	Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_DIVISIONLoadAll]", parameters)
		
	End Function

	'=================================================================
	' Public Overridable Function LoadByPrimaryKey()  As Boolean
	'=================================================================
	'  Loads a single row of via the primary key
	'=================================================================
	Public Overridable Function LoadByPrimaryKey(ByVal CL_CODE As String, ByVal DIV_CODE As String) As Boolean

		Dim parameters As ListDictionary = New ListDictionary()
		parameters.Add(_DIVISION.Parameters.CL_CODE, CL_CODE)

parameters.Add(_DIVISION.Parameters.DIV_CODE, DIV_CODE)

		
		Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_DIVISIONLoadByPrimaryKey]", parameters)

	End Function

	#Region "Parameters"
	Protected class Parameters 
		
		Public Shared ReadOnly Property CL_CODE As SqlParameter
			Get
				Return New SqlParameter("@CL_CODE", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_CODE As SqlParameter
			Get
				Return New SqlParameter("@DIV_CODE", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_NAME As SqlParameter
			Get
				Return New SqlParameter("@DIV_NAME", SqlDbType.VarChar, 40)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_ATTENTION As SqlParameter
			Get
				Return New SqlParameter("@DIV_ATTENTION", SqlDbType.VarChar, 40)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_BADDRESS1 As SqlParameter
			Get
				Return New SqlParameter("@DIV_BADDRESS1", SqlDbType.VarChar, 40)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_BADDRESS2 As SqlParameter
			Get
				Return New SqlParameter("@DIV_BADDRESS2", SqlDbType.VarChar, 40)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_BCITY As SqlParameter
			Get
				Return New SqlParameter("@DIV_BCITY", SqlDbType.VarChar, 20)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_BCOUNTY As SqlParameter
			Get
				Return New SqlParameter("@DIV_BCOUNTY", SqlDbType.VarChar, 20)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_BSTATE As SqlParameter
			Get
				Return New SqlParameter("@DIV_BSTATE", SqlDbType.VarChar, 10)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_BCOUNTRY As SqlParameter
			Get
				Return New SqlParameter("@DIV_BCOUNTRY", SqlDbType.VarChar, 20)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_BZIP As SqlParameter
			Get
				Return New SqlParameter("@DIV_BZIP", SqlDbType.VarChar, 10)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_SADDRESS1 As SqlParameter
			Get
				Return New SqlParameter("@DIV_SADDRESS1", SqlDbType.VarChar, 40)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_SADDRESS2 As SqlParameter
			Get
				Return New SqlParameter("@DIV_SADDRESS2", SqlDbType.VarChar, 40)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_SCITY As SqlParameter
			Get
				Return New SqlParameter("@DIV_SCITY", SqlDbType.VarChar, 20)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_SCOUNTY As SqlParameter
			Get
				Return New SqlParameter("@DIV_SCOUNTY", SqlDbType.VarChar, 20)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_SSTATE As SqlParameter
			Get
				Return New SqlParameter("@DIV_SSTATE", SqlDbType.VarChar, 10)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_SCOUNTRY As SqlParameter
			Get
				Return New SqlParameter("@DIV_SCOUNTRY", SqlDbType.VarChar, 20)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_SZIP As SqlParameter
			Get
				Return New SqlParameter("@DIV_SZIP", SqlDbType.VarChar, 10)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_ALPHA_SORT As SqlParameter
			Get
				Return New SqlParameter("@DIV_ALPHA_SORT", SqlDbType.VarChar, 20)
			End Get
		End Property
		
		Public Shared ReadOnly Property ACTIVE_FLAG As SqlParameter
			Get
				Return New SqlParameter("@ACTIVE_FLAG", SqlDbType.SmallInt, 0)
			End Get
		End Property
		
	End Class
	#End Region	

	#Region "ColumnNames"
	Public class ColumnNames
		
        Public Const CL_CODE As String = "CL_CODE"
        Public Const DIV_CODE As String = "DIV_CODE"
        Public Const DIV_NAME As String = "DIV_NAME"
        Public Const DIV_ATTENTION As String = "DIV_ATTENTION"
        Public Const DIV_BADDRESS1 As String = "DIV_BADDRESS1"
        Public Const DIV_BADDRESS2 As String = "DIV_BADDRESS2"
        Public Const DIV_BCITY As String = "DIV_BCITY"
        Public Const DIV_BCOUNTY As String = "DIV_BCOUNTY"
        Public Const DIV_BSTATE As String = "DIV_BSTATE"
        Public Const DIV_BCOUNTRY As String = "DIV_BCOUNTRY"
        Public Const DIV_BZIP As String = "DIV_BZIP"
        Public Const DIV_SADDRESS1 As String = "DIV_SADDRESS1"
        Public Const DIV_SADDRESS2 As String = "DIV_SADDRESS2"
        Public Const DIV_SCITY As String = "DIV_SCITY"
        Public Const DIV_SCOUNTY As String = "DIV_SCOUNTY"
        Public Const DIV_SSTATE As String = "DIV_SSTATE"
        Public Const DIV_SCOUNTRY As String = "DIV_SCOUNTRY"
        Public Const DIV_SZIP As String = "DIV_SZIP"
        Public Const DIV_ALPHA_SORT As String = "DIV_ALPHA_SORT"
        Public Const ACTIVE_FLAG As String = "ACTIVE_FLAG"

		Shared Public Function ToPropertyName(ByVal columnName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(CL_CODE) = _DIVISION.PropertyNames.CL_CODE
				ht(DIV_CODE) = _DIVISION.PropertyNames.DIV_CODE
				ht(DIV_NAME) = _DIVISION.PropertyNames.DIV_NAME
				ht(DIV_ATTENTION) = _DIVISION.PropertyNames.DIV_ATTENTION
				ht(DIV_BADDRESS1) = _DIVISION.PropertyNames.DIV_BADDRESS1
				ht(DIV_BADDRESS2) = _DIVISION.PropertyNames.DIV_BADDRESS2
				ht(DIV_BCITY) = _DIVISION.PropertyNames.DIV_BCITY
				ht(DIV_BCOUNTY) = _DIVISION.PropertyNames.DIV_BCOUNTY
				ht(DIV_BSTATE) = _DIVISION.PropertyNames.DIV_BSTATE
				ht(DIV_BCOUNTRY) = _DIVISION.PropertyNames.DIV_BCOUNTRY
				ht(DIV_BZIP) = _DIVISION.PropertyNames.DIV_BZIP
				ht(DIV_SADDRESS1) = _DIVISION.PropertyNames.DIV_SADDRESS1
				ht(DIV_SADDRESS2) = _DIVISION.PropertyNames.DIV_SADDRESS2
				ht(DIV_SCITY) = _DIVISION.PropertyNames.DIV_SCITY
				ht(DIV_SCOUNTY) = _DIVISION.PropertyNames.DIV_SCOUNTY
				ht(DIV_SSTATE) = _DIVISION.PropertyNames.DIV_SSTATE
				ht(DIV_SCOUNTRY) = _DIVISION.PropertyNames.DIV_SCOUNTRY
				ht(DIV_SZIP) = _DIVISION.PropertyNames.DIV_SZIP
				ht(DIV_ALPHA_SORT) = _DIVISION.PropertyNames.DIV_ALPHA_SORT
				ht(ACTIVE_FLAG) = _DIVISION.PropertyNames.ACTIVE_FLAG

			End If
			
			Return CType(ht(columnName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing		 
	End Class
	#End Region	
	
	#Region "PropertyNames"
	Public class PropertyNames
		
        Public Const CL_CODE As String = "CL_CODE"
        Public Const DIV_CODE As String = "DIV_CODE"
        Public Const DIV_NAME As String = "DIV_NAME"
        Public Const DIV_ATTENTION As String = "DIV_ATTENTION"
        Public Const DIV_BADDRESS1 As String = "DIV_BADDRESS1"
        Public Const DIV_BADDRESS2 As String = "DIV_BADDRESS2"
        Public Const DIV_BCITY As String = "DIV_BCITY"
        Public Const DIV_BCOUNTY As String = "DIV_BCOUNTY"
        Public Const DIV_BSTATE As String = "DIV_BSTATE"
        Public Const DIV_BCOUNTRY As String = "DIV_BCOUNTRY"
        Public Const DIV_BZIP As String = "DIV_BZIP"
        Public Const DIV_SADDRESS1 As String = "DIV_SADDRESS1"
        Public Const DIV_SADDRESS2 As String = "DIV_SADDRESS2"
        Public Const DIV_SCITY As String = "DIV_SCITY"
        Public Const DIV_SCOUNTY As String = "DIV_SCOUNTY"
        Public Const DIV_SSTATE As String = "DIV_SSTATE"
        Public Const DIV_SCOUNTRY As String = "DIV_SCOUNTRY"
        Public Const DIV_SZIP As String = "DIV_SZIP"
        Public Const DIV_ALPHA_SORT As String = "DIV_ALPHA_SORT"
        Public Const ACTIVE_FLAG As String = "ACTIVE_FLAG"

		Shared Public Function ToColumnName(ByVal propertyName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(CL_CODE) = _DIVISION.ColumnNames.CL_CODE
				ht(DIV_CODE) = _DIVISION.ColumnNames.DIV_CODE
				ht(DIV_NAME) = _DIVISION.ColumnNames.DIV_NAME
				ht(DIV_ATTENTION) = _DIVISION.ColumnNames.DIV_ATTENTION
				ht(DIV_BADDRESS1) = _DIVISION.ColumnNames.DIV_BADDRESS1
				ht(DIV_BADDRESS2) = _DIVISION.ColumnNames.DIV_BADDRESS2
				ht(DIV_BCITY) = _DIVISION.ColumnNames.DIV_BCITY
				ht(DIV_BCOUNTY) = _DIVISION.ColumnNames.DIV_BCOUNTY
				ht(DIV_BSTATE) = _DIVISION.ColumnNames.DIV_BSTATE
				ht(DIV_BCOUNTRY) = _DIVISION.ColumnNames.DIV_BCOUNTRY
				ht(DIV_BZIP) = _DIVISION.ColumnNames.DIV_BZIP
				ht(DIV_SADDRESS1) = _DIVISION.ColumnNames.DIV_SADDRESS1
				ht(DIV_SADDRESS2) = _DIVISION.ColumnNames.DIV_SADDRESS2
				ht(DIV_SCITY) = _DIVISION.ColumnNames.DIV_SCITY
				ht(DIV_SCOUNTY) = _DIVISION.ColumnNames.DIV_SCOUNTY
				ht(DIV_SSTATE) = _DIVISION.ColumnNames.DIV_SSTATE
				ht(DIV_SCOUNTRY) = _DIVISION.ColumnNames.DIV_SCOUNTRY
				ht(DIV_SZIP) = _DIVISION.ColumnNames.DIV_SZIP
				ht(DIV_ALPHA_SORT) = _DIVISION.ColumnNames.DIV_ALPHA_SORT
				ht(ACTIVE_FLAG) = _DIVISION.ColumnNames.ACTIVE_FLAG

			End If
			
			Return CType(ht(propertyName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing
		
	End Class
	#End Region	
	
	#Region "StringPropertyNames"
	Public class StringPropertyNames
		
        Public Const CL_CODE As String = "s_CL_CODE"
        Public Const DIV_CODE As String = "s_DIV_CODE"
        Public Const DIV_NAME As String = "s_DIV_NAME"
        Public Const DIV_ATTENTION As String = "s_DIV_ATTENTION"
        Public Const DIV_BADDRESS1 As String = "s_DIV_BADDRESS1"
        Public Const DIV_BADDRESS2 As String = "s_DIV_BADDRESS2"
        Public Const DIV_BCITY As String = "s_DIV_BCITY"
        Public Const DIV_BCOUNTY As String = "s_DIV_BCOUNTY"
        Public Const DIV_BSTATE As String = "s_DIV_BSTATE"
        Public Const DIV_BCOUNTRY As String = "s_DIV_BCOUNTRY"
        Public Const DIV_BZIP As String = "s_DIV_BZIP"
        Public Const DIV_SADDRESS1 As String = "s_DIV_SADDRESS1"
        Public Const DIV_SADDRESS2 As String = "s_DIV_SADDRESS2"
        Public Const DIV_SCITY As String = "s_DIV_SCITY"
        Public Const DIV_SCOUNTY As String = "s_DIV_SCOUNTY"
        Public Const DIV_SSTATE As String = "s_DIV_SSTATE"
        Public Const DIV_SCOUNTRY As String = "s_DIV_SCOUNTRY"
        Public Const DIV_SZIP As String = "s_DIV_SZIP"
        Public Const DIV_ALPHA_SORT As String = "s_DIV_ALPHA_SORT"
        Public Const ACTIVE_FLAG As String = "s_ACTIVE_FLAG"

	End Class
	#End Region		
	
	#Region "Properties" 
		Public Overridable Property CL_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.CL_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.CL_CODE, Value)
			End Set
		End Property

		Public Overridable Property DIV_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_CODE, Value)
			End Set
		End Property

		Public Overridable Property DIV_NAME As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_NAME)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_NAME, Value)
			End Set
		End Property

		Public Overridable Property DIV_ATTENTION As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_ATTENTION)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_ATTENTION, Value)
			End Set
		End Property

		Public Overridable Property DIV_BADDRESS1 As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_BADDRESS1)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_BADDRESS1, Value)
			End Set
		End Property

		Public Overridable Property DIV_BADDRESS2 As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_BADDRESS2)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_BADDRESS2, Value)
			End Set
		End Property

		Public Overridable Property DIV_BCITY As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_BCITY)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_BCITY, Value)
			End Set
		End Property

		Public Overridable Property DIV_BCOUNTY As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_BCOUNTY)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_BCOUNTY, Value)
			End Set
		End Property

		Public Overridable Property DIV_BSTATE As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_BSTATE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_BSTATE, Value)
			End Set
		End Property

		Public Overridable Property DIV_BCOUNTRY As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_BCOUNTRY)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_BCOUNTRY, Value)
			End Set
		End Property

		Public Overridable Property DIV_BZIP As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_BZIP)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_BZIP, Value)
			End Set
		End Property

		Public Overridable Property DIV_SADDRESS1 As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_SADDRESS1)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_SADDRESS1, Value)
			End Set
		End Property

		Public Overridable Property DIV_SADDRESS2 As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_SADDRESS2)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_SADDRESS2, Value)
			End Set
		End Property

		Public Overridable Property DIV_SCITY As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_SCITY)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_SCITY, Value)
			End Set
		End Property

		Public Overridable Property DIV_SCOUNTY As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_SCOUNTY)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_SCOUNTY, Value)
			End Set
		End Property

		Public Overridable Property DIV_SSTATE As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_SSTATE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_SSTATE, Value)
			End Set
		End Property

		Public Overridable Property DIV_SCOUNTRY As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_SCOUNTRY)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_SCOUNTRY, Value)
			End Set
		End Property

		Public Overridable Property DIV_SZIP As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_SZIP)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_SZIP, Value)
			End Set
		End Property

		Public Overridable Property DIV_ALPHA_SORT As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_ALPHA_SORT)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_ALPHA_SORT, Value)
			End Set
		End Property

		Public Overridable Property ACTIVE_FLAG As Short
			Get
				Return MyBase.GetShort(ColumnNames.ACTIVE_FLAG)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.ACTIVE_FLAG, Value)
			End Set
		End Property


	#End Region  
	
	#Region "String Properties" 

		Public Overridable Property s_CL_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.CL_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.CL_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.CL_CODE)
				Else
					Me.CL_CODE = MyBase.SetStringAsString(ColumnNames.CL_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_CODE)
				Else
					Me.DIV_CODE = MyBase.SetStringAsString(ColumnNames.DIV_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_NAME As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_NAME) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_NAME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_NAME)
				Else
					Me.DIV_NAME = MyBase.SetStringAsString(ColumnNames.DIV_NAME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_ATTENTION As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_ATTENTION) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_ATTENTION)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_ATTENTION)
				Else
					Me.DIV_ATTENTION = MyBase.SetStringAsString(ColumnNames.DIV_ATTENTION, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_BADDRESS1 As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_BADDRESS1) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_BADDRESS1)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_BADDRESS1)
				Else
					Me.DIV_BADDRESS1 = MyBase.SetStringAsString(ColumnNames.DIV_BADDRESS1, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_BADDRESS2 As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_BADDRESS2) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_BADDRESS2)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_BADDRESS2)
				Else
					Me.DIV_BADDRESS2 = MyBase.SetStringAsString(ColumnNames.DIV_BADDRESS2, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_BCITY As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_BCITY) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_BCITY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_BCITY)
				Else
					Me.DIV_BCITY = MyBase.SetStringAsString(ColumnNames.DIV_BCITY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_BCOUNTY As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_BCOUNTY) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_BCOUNTY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_BCOUNTY)
				Else
					Me.DIV_BCOUNTY = MyBase.SetStringAsString(ColumnNames.DIV_BCOUNTY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_BSTATE As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_BSTATE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_BSTATE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_BSTATE)
				Else
					Me.DIV_BSTATE = MyBase.SetStringAsString(ColumnNames.DIV_BSTATE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_BCOUNTRY As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_BCOUNTRY) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_BCOUNTRY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_BCOUNTRY)
				Else
					Me.DIV_BCOUNTRY = MyBase.SetStringAsString(ColumnNames.DIV_BCOUNTRY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_BZIP As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_BZIP) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_BZIP)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_BZIP)
				Else
					Me.DIV_BZIP = MyBase.SetStringAsString(ColumnNames.DIV_BZIP, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_SADDRESS1 As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_SADDRESS1) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_SADDRESS1)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_SADDRESS1)
				Else
					Me.DIV_SADDRESS1 = MyBase.SetStringAsString(ColumnNames.DIV_SADDRESS1, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_SADDRESS2 As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_SADDRESS2) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_SADDRESS2)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_SADDRESS2)
				Else
					Me.DIV_SADDRESS2 = MyBase.SetStringAsString(ColumnNames.DIV_SADDRESS2, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_SCITY As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_SCITY) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_SCITY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_SCITY)
				Else
					Me.DIV_SCITY = MyBase.SetStringAsString(ColumnNames.DIV_SCITY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_SCOUNTY As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_SCOUNTY) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_SCOUNTY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_SCOUNTY)
				Else
					Me.DIV_SCOUNTY = MyBase.SetStringAsString(ColumnNames.DIV_SCOUNTY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_SSTATE As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_SSTATE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_SSTATE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_SSTATE)
				Else
					Me.DIV_SSTATE = MyBase.SetStringAsString(ColumnNames.DIV_SSTATE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_SCOUNTRY As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_SCOUNTRY) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_SCOUNTRY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_SCOUNTRY)
				Else
					Me.DIV_SCOUNTRY = MyBase.SetStringAsString(ColumnNames.DIV_SCOUNTRY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_SZIP As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_SZIP) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_SZIP)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_SZIP)
				Else
					Me.DIV_SZIP = MyBase.SetStringAsString(ColumnNames.DIV_SZIP, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_ALPHA_SORT As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_ALPHA_SORT) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_ALPHA_SORT)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_ALPHA_SORT)
				Else
					Me.DIV_ALPHA_SORT = MyBase.SetStringAsString(ColumnNames.DIV_ALPHA_SORT, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_ACTIVE_FLAG As String
			Get
				If Me.IsColumnNull(ColumnNames.ACTIVE_FLAG) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.ACTIVE_FLAG)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ACTIVE_FLAG)
				Else
					Me.ACTIVE_FLAG = MyBase.SetShortAsString(ColumnNames.ACTIVE_FLAG, Value)
				End If
			End Set
		End Property


	#End Region  	

	#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffWhereParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffWhereParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "TearOff's"
		Public class TearOffWhereParameter

			Public Sub New(ByVal clause As WhereClause)
				Me._clause = clause
			End Sub
		
	
			Public ReadOnly Property CL_CODE() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.CL_CODE, Parameters.CL_CODE)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_CODE() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_CODE, Parameters.DIV_CODE)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_NAME() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_NAME, Parameters.DIV_NAME)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_ATTENTION() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_ATTENTION, Parameters.DIV_ATTENTION)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_BADDRESS1() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_BADDRESS1, Parameters.DIV_BADDRESS1)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_BADDRESS2() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_BADDRESS2, Parameters.DIV_BADDRESS2)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_BCITY() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_BCITY, Parameters.DIV_BCITY)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_BCOUNTY() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_BCOUNTY, Parameters.DIV_BCOUNTY)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_BSTATE() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_BSTATE, Parameters.DIV_BSTATE)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_BCOUNTRY() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_BCOUNTRY, Parameters.DIV_BCOUNTRY)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_BZIP() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_BZIP, Parameters.DIV_BZIP)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_SADDRESS1() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_SADDRESS1, Parameters.DIV_SADDRESS1)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_SADDRESS2() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_SADDRESS2, Parameters.DIV_SADDRESS2)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_SCITY() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_SCITY, Parameters.DIV_SCITY)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_SCOUNTY() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_SCOUNTY, Parameters.DIV_SCOUNTY)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_SSTATE() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_SSTATE, Parameters.DIV_SSTATE)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_SCOUNTRY() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_SCOUNTRY, Parameters.DIV_SCOUNTRY)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_SZIP() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_SZIP, Parameters.DIV_SZIP)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DIV_ALPHA_SORT() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_ALPHA_SORT, Parameters.DIV_ALPHA_SORT)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ACTIVE_FLAG() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ACTIVE_FLAG, Parameters.ACTIVE_FLAG)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property


			Private _clause as WhereClause
		End Class
		#End Region	

		Public ReadOnly Property CL_CODE() As WhereParameter 
			Get
				If _CL_CODE_W Is Nothing Then
					_CL_CODE_W = TearOff.CL_CODE
				End If
				Return _CL_CODE_W
			End Get
		End Property

		Public ReadOnly Property DIV_CODE() As WhereParameter 
			Get
				If _DIV_CODE_W Is Nothing Then
					_DIV_CODE_W = TearOff.DIV_CODE
				End If
				Return _DIV_CODE_W
			End Get
		End Property

		Public ReadOnly Property DIV_NAME() As WhereParameter 
			Get
				If _DIV_NAME_W Is Nothing Then
					_DIV_NAME_W = TearOff.DIV_NAME
				End If
				Return _DIV_NAME_W
			End Get
		End Property

		Public ReadOnly Property DIV_ATTENTION() As WhereParameter 
			Get
				If _DIV_ATTENTION_W Is Nothing Then
					_DIV_ATTENTION_W = TearOff.DIV_ATTENTION
				End If
				Return _DIV_ATTENTION_W
			End Get
		End Property

		Public ReadOnly Property DIV_BADDRESS1() As WhereParameter 
			Get
				If _DIV_BADDRESS1_W Is Nothing Then
					_DIV_BADDRESS1_W = TearOff.DIV_BADDRESS1
				End If
				Return _DIV_BADDRESS1_W
			End Get
		End Property

		Public ReadOnly Property DIV_BADDRESS2() As WhereParameter 
			Get
				If _DIV_BADDRESS2_W Is Nothing Then
					_DIV_BADDRESS2_W = TearOff.DIV_BADDRESS2
				End If
				Return _DIV_BADDRESS2_W
			End Get
		End Property

		Public ReadOnly Property DIV_BCITY() As WhereParameter 
			Get
				If _DIV_BCITY_W Is Nothing Then
					_DIV_BCITY_W = TearOff.DIV_BCITY
				End If
				Return _DIV_BCITY_W
			End Get
		End Property

		Public ReadOnly Property DIV_BCOUNTY() As WhereParameter 
			Get
				If _DIV_BCOUNTY_W Is Nothing Then
					_DIV_BCOUNTY_W = TearOff.DIV_BCOUNTY
				End If
				Return _DIV_BCOUNTY_W
			End Get
		End Property

		Public ReadOnly Property DIV_BSTATE() As WhereParameter 
			Get
				If _DIV_BSTATE_W Is Nothing Then
					_DIV_BSTATE_W = TearOff.DIV_BSTATE
				End If
				Return _DIV_BSTATE_W
			End Get
		End Property

		Public ReadOnly Property DIV_BCOUNTRY() As WhereParameter 
			Get
				If _DIV_BCOUNTRY_W Is Nothing Then
					_DIV_BCOUNTRY_W = TearOff.DIV_BCOUNTRY
				End If
				Return _DIV_BCOUNTRY_W
			End Get
		End Property

		Public ReadOnly Property DIV_BZIP() As WhereParameter 
			Get
				If _DIV_BZIP_W Is Nothing Then
					_DIV_BZIP_W = TearOff.DIV_BZIP
				End If
				Return _DIV_BZIP_W
			End Get
		End Property

		Public ReadOnly Property DIV_SADDRESS1() As WhereParameter 
			Get
				If _DIV_SADDRESS1_W Is Nothing Then
					_DIV_SADDRESS1_W = TearOff.DIV_SADDRESS1
				End If
				Return _DIV_SADDRESS1_W
			End Get
		End Property

		Public ReadOnly Property DIV_SADDRESS2() As WhereParameter 
			Get
				If _DIV_SADDRESS2_W Is Nothing Then
					_DIV_SADDRESS2_W = TearOff.DIV_SADDRESS2
				End If
				Return _DIV_SADDRESS2_W
			End Get
		End Property

		Public ReadOnly Property DIV_SCITY() As WhereParameter 
			Get
				If _DIV_SCITY_W Is Nothing Then
					_DIV_SCITY_W = TearOff.DIV_SCITY
				End If
				Return _DIV_SCITY_W
			End Get
		End Property

		Public ReadOnly Property DIV_SCOUNTY() As WhereParameter 
			Get
				If _DIV_SCOUNTY_W Is Nothing Then
					_DIV_SCOUNTY_W = TearOff.DIV_SCOUNTY
				End If
				Return _DIV_SCOUNTY_W
			End Get
		End Property

		Public ReadOnly Property DIV_SSTATE() As WhereParameter 
			Get
				If _DIV_SSTATE_W Is Nothing Then
					_DIV_SSTATE_W = TearOff.DIV_SSTATE
				End If
				Return _DIV_SSTATE_W
			End Get
		End Property

		Public ReadOnly Property DIV_SCOUNTRY() As WhereParameter 
			Get
				If _DIV_SCOUNTRY_W Is Nothing Then
					_DIV_SCOUNTRY_W = TearOff.DIV_SCOUNTRY
				End If
				Return _DIV_SCOUNTRY_W
			End Get
		End Property

		Public ReadOnly Property DIV_SZIP() As WhereParameter 
			Get
				If _DIV_SZIP_W Is Nothing Then
					_DIV_SZIP_W = TearOff.DIV_SZIP
				End If
				Return _DIV_SZIP_W
			End Get
		End Property

		Public ReadOnly Property DIV_ALPHA_SORT() As WhereParameter 
			Get
				If _DIV_ALPHA_SORT_W Is Nothing Then
					_DIV_ALPHA_SORT_W = TearOff.DIV_ALPHA_SORT
				End If
				Return _DIV_ALPHA_SORT_W
			End Get
		End Property

		Public ReadOnly Property ACTIVE_FLAG() As WhereParameter 
			Get
				If _ACTIVE_FLAG_W Is Nothing Then
					_ACTIVE_FLAG_W = TearOff.ACTIVE_FLAG
				End If
				Return _ACTIVE_FLAG_W
			End Get
		End Property

		Private _CL_CODE_W As WhereParameter = Nothing
		Private _DIV_CODE_W As WhereParameter = Nothing
		Private _DIV_NAME_W As WhereParameter = Nothing
		Private _DIV_ATTENTION_W As WhereParameter = Nothing
		Private _DIV_BADDRESS1_W As WhereParameter = Nothing
		Private _DIV_BADDRESS2_W As WhereParameter = Nothing
		Private _DIV_BCITY_W As WhereParameter = Nothing
		Private _DIV_BCOUNTY_W As WhereParameter = Nothing
		Private _DIV_BSTATE_W As WhereParameter = Nothing
		Private _DIV_BCOUNTRY_W As WhereParameter = Nothing
		Private _DIV_BZIP_W As WhereParameter = Nothing
		Private _DIV_SADDRESS1_W As WhereParameter = Nothing
		Private _DIV_SADDRESS2_W As WhereParameter = Nothing
		Private _DIV_SCITY_W As WhereParameter = Nothing
		Private _DIV_SCOUNTY_W As WhereParameter = Nothing
		Private _DIV_SSTATE_W As WhereParameter = Nothing
		Private _DIV_SCOUNTRY_W As WhereParameter = Nothing
		Private _DIV_SZIP_W As WhereParameter = Nothing
		Private _DIV_ALPHA_SORT_W As WhereParameter = Nothing
		Private _ACTIVE_FLAG_W As WhereParameter = Nothing

			Public Sub WhereClauseReset()

			_CL_CODE_W = Nothing
			_DIV_CODE_W = Nothing
			_DIV_NAME_W = Nothing
			_DIV_ATTENTION_W = Nothing
			_DIV_BADDRESS1_W = Nothing
			_DIV_BADDRESS2_W = Nothing
			_DIV_BCITY_W = Nothing
			_DIV_BCOUNTY_W = Nothing
			_DIV_BSTATE_W = Nothing
			_DIV_BCOUNTRY_W = Nothing
			_DIV_BZIP_W = Nothing
			_DIV_SADDRESS1_W = Nothing
			_DIV_SADDRESS2_W = Nothing
			_DIV_SCITY_W = Nothing
			_DIV_SCOUNTY_W = Nothing
			_DIV_SSTATE_W = Nothing
			_DIV_SCOUNTRY_W = Nothing
			_DIV_SZIP_W = Nothing
			_DIV_ALPHA_SORT_W = Nothing
			_ACTIVE_FLAG_W = Nothing
				Me._entity.Query.FlushWhereParameters()

			End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffWhereParameter
    End Class	

	Public ReadOnly Property Where() As WhereClause
		Get
			If _whereClause Is Nothing Then
				_whereClause = New WhereClause(Me)
			End If
	
			Return _whereClause
		End Get
	End Property
	
	Private _whereClause As WhereClause = Nothing	
#End Region	

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffAggregateParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffAggregateParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "AggregateParameter TearOff's"
		Public class TearOffAggregateParameter

			Public Sub New(ByVal clause As AggregateClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property CL_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CL_CODE, Parameters.CL_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_CODE, Parameters.DIV_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_NAME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_NAME, Parameters.DIV_NAME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_ATTENTION() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_ATTENTION, Parameters.DIV_ATTENTION)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_BADDRESS1() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_BADDRESS1, Parameters.DIV_BADDRESS1)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_BADDRESS2() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_BADDRESS2, Parameters.DIV_BADDRESS2)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_BCITY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_BCITY, Parameters.DIV_BCITY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_BCOUNTY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_BCOUNTY, Parameters.DIV_BCOUNTY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_BSTATE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_BSTATE, Parameters.DIV_BSTATE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_BCOUNTRY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_BCOUNTRY, Parameters.DIV_BCOUNTRY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_BZIP() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_BZIP, Parameters.DIV_BZIP)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_SADDRESS1() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_SADDRESS1, Parameters.DIV_SADDRESS1)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_SADDRESS2() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_SADDRESS2, Parameters.DIV_SADDRESS2)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_SCITY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_SCITY, Parameters.DIV_SCITY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_SCOUNTY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_SCOUNTY, Parameters.DIV_SCOUNTY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_SSTATE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_SSTATE, Parameters.DIV_SSTATE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_SCOUNTRY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_SCOUNTRY, Parameters.DIV_SCOUNTRY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_SZIP() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_SZIP, Parameters.DIV_SZIP)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_ALPHA_SORT() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_ALPHA_SORT, Parameters.DIV_ALPHA_SORT)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ACTIVE_FLAG() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ACTIVE_FLAG, Parameters.ACTIVE_FLAG)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property


			Private _clause as AggregateClause
		End Class
		#End Region	

		Public ReadOnly Property CL_CODE() As AggregateParameter 
			Get
				If _CL_CODE_W Is Nothing Then
					_CL_CODE_W = TearOff.CL_CODE
				End If
				Return _CL_CODE_W
			End Get
		End Property

		Public ReadOnly Property DIV_CODE() As AggregateParameter 
			Get
				If _DIV_CODE_W Is Nothing Then
					_DIV_CODE_W = TearOff.DIV_CODE
				End If
				Return _DIV_CODE_W
			End Get
		End Property

		Public ReadOnly Property DIV_NAME() As AggregateParameter 
			Get
				If _DIV_NAME_W Is Nothing Then
					_DIV_NAME_W = TearOff.DIV_NAME
				End If
				Return _DIV_NAME_W
			End Get
		End Property

		Public ReadOnly Property DIV_ATTENTION() As AggregateParameter 
			Get
				If _DIV_ATTENTION_W Is Nothing Then
					_DIV_ATTENTION_W = TearOff.DIV_ATTENTION
				End If
				Return _DIV_ATTENTION_W
			End Get
		End Property

		Public ReadOnly Property DIV_BADDRESS1() As AggregateParameter 
			Get
				If _DIV_BADDRESS1_W Is Nothing Then
					_DIV_BADDRESS1_W = TearOff.DIV_BADDRESS1
				End If
				Return _DIV_BADDRESS1_W
			End Get
		End Property

		Public ReadOnly Property DIV_BADDRESS2() As AggregateParameter 
			Get
				If _DIV_BADDRESS2_W Is Nothing Then
					_DIV_BADDRESS2_W = TearOff.DIV_BADDRESS2
				End If
				Return _DIV_BADDRESS2_W
			End Get
		End Property

		Public ReadOnly Property DIV_BCITY() As AggregateParameter 
			Get
				If _DIV_BCITY_W Is Nothing Then
					_DIV_BCITY_W = TearOff.DIV_BCITY
				End If
				Return _DIV_BCITY_W
			End Get
		End Property

		Public ReadOnly Property DIV_BCOUNTY() As AggregateParameter 
			Get
				If _DIV_BCOUNTY_W Is Nothing Then
					_DIV_BCOUNTY_W = TearOff.DIV_BCOUNTY
				End If
				Return _DIV_BCOUNTY_W
			End Get
		End Property

		Public ReadOnly Property DIV_BSTATE() As AggregateParameter 
			Get
				If _DIV_BSTATE_W Is Nothing Then
					_DIV_BSTATE_W = TearOff.DIV_BSTATE
				End If
				Return _DIV_BSTATE_W
			End Get
		End Property

		Public ReadOnly Property DIV_BCOUNTRY() As AggregateParameter 
			Get
				If _DIV_BCOUNTRY_W Is Nothing Then
					_DIV_BCOUNTRY_W = TearOff.DIV_BCOUNTRY
				End If
				Return _DIV_BCOUNTRY_W
			End Get
		End Property

		Public ReadOnly Property DIV_BZIP() As AggregateParameter 
			Get
				If _DIV_BZIP_W Is Nothing Then
					_DIV_BZIP_W = TearOff.DIV_BZIP
				End If
				Return _DIV_BZIP_W
			End Get
		End Property

		Public ReadOnly Property DIV_SADDRESS1() As AggregateParameter 
			Get
				If _DIV_SADDRESS1_W Is Nothing Then
					_DIV_SADDRESS1_W = TearOff.DIV_SADDRESS1
				End If
				Return _DIV_SADDRESS1_W
			End Get
		End Property

		Public ReadOnly Property DIV_SADDRESS2() As AggregateParameter 
			Get
				If _DIV_SADDRESS2_W Is Nothing Then
					_DIV_SADDRESS2_W = TearOff.DIV_SADDRESS2
				End If
				Return _DIV_SADDRESS2_W
			End Get
		End Property

		Public ReadOnly Property DIV_SCITY() As AggregateParameter 
			Get
				If _DIV_SCITY_W Is Nothing Then
					_DIV_SCITY_W = TearOff.DIV_SCITY
				End If
				Return _DIV_SCITY_W
			End Get
		End Property

		Public ReadOnly Property DIV_SCOUNTY() As AggregateParameter 
			Get
				If _DIV_SCOUNTY_W Is Nothing Then
					_DIV_SCOUNTY_W = TearOff.DIV_SCOUNTY
				End If
				Return _DIV_SCOUNTY_W
			End Get
		End Property

		Public ReadOnly Property DIV_SSTATE() As AggregateParameter 
			Get
				If _DIV_SSTATE_W Is Nothing Then
					_DIV_SSTATE_W = TearOff.DIV_SSTATE
				End If
				Return _DIV_SSTATE_W
			End Get
		End Property

		Public ReadOnly Property DIV_SCOUNTRY() As AggregateParameter 
			Get
				If _DIV_SCOUNTRY_W Is Nothing Then
					_DIV_SCOUNTRY_W = TearOff.DIV_SCOUNTRY
				End If
				Return _DIV_SCOUNTRY_W
			End Get
		End Property

		Public ReadOnly Property DIV_SZIP() As AggregateParameter 
			Get
				If _DIV_SZIP_W Is Nothing Then
					_DIV_SZIP_W = TearOff.DIV_SZIP
				End If
				Return _DIV_SZIP_W
			End Get
		End Property

		Public ReadOnly Property DIV_ALPHA_SORT() As AggregateParameter 
			Get
				If _DIV_ALPHA_SORT_W Is Nothing Then
					_DIV_ALPHA_SORT_W = TearOff.DIV_ALPHA_SORT
				End If
				Return _DIV_ALPHA_SORT_W
			End Get
		End Property

		Public ReadOnly Property ACTIVE_FLAG() As AggregateParameter 
			Get
				If _ACTIVE_FLAG_W Is Nothing Then
					_ACTIVE_FLAG_W = TearOff.ACTIVE_FLAG
				End If
				Return _ACTIVE_FLAG_W
			End Get
		End Property

		Private _CL_CODE_W As AggregateParameter = Nothing
		Private _DIV_CODE_W As AggregateParameter = Nothing
		Private _DIV_NAME_W As AggregateParameter = Nothing
		Private _DIV_ATTENTION_W As AggregateParameter = Nothing
		Private _DIV_BADDRESS1_W As AggregateParameter = Nothing
		Private _DIV_BADDRESS2_W As AggregateParameter = Nothing
		Private _DIV_BCITY_W As AggregateParameter = Nothing
		Private _DIV_BCOUNTY_W As AggregateParameter = Nothing
		Private _DIV_BSTATE_W As AggregateParameter = Nothing
		Private _DIV_BCOUNTRY_W As AggregateParameter = Nothing
		Private _DIV_BZIP_W As AggregateParameter = Nothing
		Private _DIV_SADDRESS1_W As AggregateParameter = Nothing
		Private _DIV_SADDRESS2_W As AggregateParameter = Nothing
		Private _DIV_SCITY_W As AggregateParameter = Nothing
		Private _DIV_SCOUNTY_W As AggregateParameter = Nothing
		Private _DIV_SSTATE_W As AggregateParameter = Nothing
		Private _DIV_SCOUNTRY_W As AggregateParameter = Nothing
		Private _DIV_SZIP_W As AggregateParameter = Nothing
		Private _DIV_ALPHA_SORT_W As AggregateParameter = Nothing
		Private _ACTIVE_FLAG_W As AggregateParameter = Nothing

		Public Sub AggregateClauseReset()

		_CL_CODE_W = Nothing
		_DIV_CODE_W = Nothing
		_DIV_NAME_W = Nothing
		_DIV_ATTENTION_W = Nothing
		_DIV_BADDRESS1_W = Nothing
		_DIV_BADDRESS2_W = Nothing
		_DIV_BCITY_W = Nothing
		_DIV_BCOUNTY_W = Nothing
		_DIV_BSTATE_W = Nothing
		_DIV_BCOUNTRY_W = Nothing
		_DIV_BZIP_W = Nothing
		_DIV_SADDRESS1_W = Nothing
		_DIV_SADDRESS2_W = Nothing
		_DIV_SCITY_W = Nothing
		_DIV_SCOUNTY_W = Nothing
		_DIV_SSTATE_W = Nothing
		_DIV_SCOUNTRY_W = Nothing
		_DIV_SZIP_W = Nothing
		_DIV_ALPHA_SORT_W = Nothing
		_ACTIVE_FLAG_W = Nothing
			Me._entity.Query.FlushAggregateParameters()

		End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffAggregateParameter
    End Class	

	Public ReadOnly Property Aggregate() As AggregateClause
		Get
			If _aggregateClause Is Nothing Then
				_aggregateClause = New AggregateClause(Me)
			End If
	
			Return _aggregateClause
		End Get
	End Property
	
	Private _aggregateClause As AggregateClause = Nothing	
#End Region	

	Protected Overrides Function GetInsertCommand() As IDbCommand
	
		Dim cmd As SqlCommand = New SqlCommand
		cmd.CommandType = CommandType.StoredProcedure
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_DIVISIONInsert]" 
	    
		CreateParameters(cmd)
		    
		Return cmd 

  	End Function
	
	Protected Overrides Function GetUpdateCommand() As IDbCommand
	
		Dim cmd As SqlCommand = New SqlCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_DIVISIONUpdate]" 
		
		CreateParameters(cmd) 
		    
		Return cmd
	
	End Function	
	
	Protected Overrides Function GetDeleteCommand() As IDbCommand
	
		Dim cmd As SqlCommand = New SqlCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_DIVISIONDelete]" 
		
		Dim p As SqlParameter
		p = cmd.Parameters.Add(Parameters.CL_CODE)
		p.SourceColumn = ColumnNames.CL_CODE
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_CODE)
		p.SourceColumn = ColumnNames.DIV_CODE
		p.SourceVersion = DataRowVersion.Current

  
		Return cmd
	
	End Function	
	
	Private Sub CreateParameters(ByVal cmd As SqlCommand)
	
		Dim p As SqlParameter
		p = cmd.Parameters.Add(Parameters.CL_CODE)
		p.SourceColumn = ColumnNames.CL_CODE
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_CODE)
		p.SourceColumn = ColumnNames.DIV_CODE
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_NAME)
		p.SourceColumn = ColumnNames.DIV_NAME
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_ATTENTION)
		p.SourceColumn = ColumnNames.DIV_ATTENTION
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_BADDRESS1)
		p.SourceColumn = ColumnNames.DIV_BADDRESS1
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_BADDRESS2)
		p.SourceColumn = ColumnNames.DIV_BADDRESS2
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_BCITY)
		p.SourceColumn = ColumnNames.DIV_BCITY
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_BCOUNTY)
		p.SourceColumn = ColumnNames.DIV_BCOUNTY
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_BSTATE)
		p.SourceColumn = ColumnNames.DIV_BSTATE
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_BCOUNTRY)
		p.SourceColumn = ColumnNames.DIV_BCOUNTRY
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_BZIP)
		p.SourceColumn = ColumnNames.DIV_BZIP
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_SADDRESS1)
		p.SourceColumn = ColumnNames.DIV_SADDRESS1
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_SADDRESS2)
		p.SourceColumn = ColumnNames.DIV_SADDRESS2
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_SCITY)
		p.SourceColumn = ColumnNames.DIV_SCITY
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_SCOUNTY)
		p.SourceColumn = ColumnNames.DIV_SCOUNTY
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_SSTATE)
		p.SourceColumn = ColumnNames.DIV_SSTATE
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_SCOUNTRY)
		p.SourceColumn = ColumnNames.DIV_SCOUNTRY
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_SZIP)
		p.SourceColumn = ColumnNames.DIV_SZIP
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DIV_ALPHA_SORT)
		p.SourceColumn = ColumnNames.DIV_ALPHA_SORT
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.ACTIVE_FLAG)
		p.SourceColumn = ColumnNames.ACTIVE_FLAG
		p.SourceVersion = DataRowVersion.Current


	End Sub	

End Class

