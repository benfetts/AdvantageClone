
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  **
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class SqlClientEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'MustInherit' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can Override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  Public Class YourObject
'    Inherits _YourObject
'
'  End Class
'
'===============================================================================

' Generated by MyGeneration Version # (1.2.0.7)

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _JOB_TRAFFIC
	Inherits SqlClientEntity

		Public Sub New() 
			Me.QuerySource = "JOB_TRAFFIC"
			Me.MappingName = "JOB_TRAFFIC"
		End Sub

	'=================================================================
	'  Public Overrides Sub AddNew()
	'=================================================================
	'
	'=================================================================
	Public Overrides Sub AddNew()
		MyBase.AddNew()
				
	End Sub
	
	Public Overrides Sub FlushData()
		Me._whereClause = nothing
		Me._aggregateClause = nothing		
		MyBase.FlushData()
	End Sub
	
		
	'=================================================================
	'  	Public Function LoadAll() As Boolean
	'=================================================================
	'  Loads all of the records in the database, and sets the currentRow to the first row
	'=================================================================
	Public Function LoadAll() As Boolean
	
		Dim parameters As ListDictionary = Nothing
		
		
    	Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_JOB_TRAFFICLoadAll]", parameters)
		
	End Function

	'=================================================================
	' Public Overridable Function LoadByPrimaryKey()  As Boolean
	'=================================================================
	'  Loads a single row of via the primary key
	'=================================================================
	Public Overridable Function LoadByPrimaryKey(ByVal JOB_COMPONENT_NBR As Short, ByVal JOB_NUMBER As Integer) As Boolean

		Dim parameters As ListDictionary = New ListDictionary()
		parameters.Add(_JOB_TRAFFIC.Parameters.JOB_COMPONENT_NBR, JOB_COMPONENT_NBR)

parameters.Add(_JOB_TRAFFIC.Parameters.JOB_NUMBER, JOB_NUMBER)

		
		Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_JOB_TRAFFICLoadByPrimaryKey]", parameters)

	End Function

	#Region "Parameters"
	Protected class Parameters 
		
		Public Shared ReadOnly Property JOB_NUMBER As SqlParameter
			Get
				Return New SqlParameter("@JOB_NUMBER", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property JOB_COMPONENT_NBR As SqlParameter
			Get
				Return New SqlParameter("@JOB_COMPONENT_NBR", SqlDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property TRF_CODE As SqlParameter
			Get
				Return New SqlParameter("@TRF_CODE", SqlDbType.VarChar, 10)
			End Get
		End Property
		
		Public Shared ReadOnly Property TRF_PRESET_CODE As SqlParameter
			Get
				Return New SqlParameter("@TRF_PRESET_CODE", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property TRF_COMMENTS As SqlParameter
			Get
				Return New SqlParameter("@TRF_COMMENTS", SqlDbType.Text, 2147483647)
			End Get
		End Property
		
		Public Shared ReadOnly Property ASSIGN_1 As SqlParameter
			Get
				Return New SqlParameter("@ASSIGN_1", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property ASSIGN_2 As SqlParameter
			Get
				Return New SqlParameter("@ASSIGN_2", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property ASSIGN_3 As SqlParameter
			Get
				Return New SqlParameter("@ASSIGN_3", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property ASSIGN_4 As SqlParameter
			Get
				Return New SqlParameter("@ASSIGN_4", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property ASSIGN_5 As SqlParameter
			Get
				Return New SqlParameter("@ASSIGN_5", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property COMPLETED_DATE As SqlParameter
			Get
				Return New SqlParameter("@COMPLETED_DATE", SqlDbType.SmallDateTime, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property DATE_DELIVERED As SqlParameter
			Get
				Return New SqlParameter("@DATE_DELIVERED", SqlDbType.SmallDateTime, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property DATE_SHIPPED As SqlParameter
			Get
				Return New SqlParameter("@DATE_SHIPPED", SqlDbType.SmallDateTime, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property RECEIVED_BY As SqlParameter
			Get
				Return New SqlParameter("@RECEIVED_BY", SqlDbType.VarChar, 40)
			End Get
		End Property
		
		Public Shared ReadOnly Property REFERENCE As SqlParameter
			Get
				Return New SqlParameter("@REFERENCE", SqlDbType.VarChar, 150)
			End Get
		End Property
		
		Public Shared ReadOnly Property ROWID As SqlParameter
			Get
				Return New SqlParameter("@ROWID", SqlDbType.Int, 0)
			End Get
		End Property
		
	End Class
	#End Region	

	#Region "ColumnNames"
	Public class ColumnNames
		
        Public Const JOB_NUMBER As String = "JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "JOB_COMPONENT_NBR"
        Public Const TRF_CODE As String = "TRF_CODE"
        Public Const TRF_PRESET_CODE As String = "TRF_PRESET_CODE"
        Public Const TRF_COMMENTS As String = "TRF_COMMENTS"
        Public Const ASSIGN_1 As String = "ASSIGN_1"
        Public Const ASSIGN_2 As String = "ASSIGN_2"
        Public Const ASSIGN_3 As String = "ASSIGN_3"
        Public Const ASSIGN_4 As String = "ASSIGN_4"
        Public Const ASSIGN_5 As String = "ASSIGN_5"
        Public Const COMPLETED_DATE As String = "COMPLETED_DATE"
        Public Const DATE_DELIVERED As String = "DATE_DELIVERED"
        Public Const DATE_SHIPPED As String = "DATE_SHIPPED"
        Public Const RECEIVED_BY As String = "RECEIVED_BY"
        Public Const REFERENCE As String = "REFERENCE"
        Public Const ROWID As String = "ROWID"

		Shared Public Function ToPropertyName(ByVal columnName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(JOB_NUMBER) = _JOB_TRAFFIC.PropertyNames.JOB_NUMBER
				ht(JOB_COMPONENT_NBR) = _JOB_TRAFFIC.PropertyNames.JOB_COMPONENT_NBR
				ht(TRF_CODE) = _JOB_TRAFFIC.PropertyNames.TRF_CODE
				ht(TRF_PRESET_CODE) = _JOB_TRAFFIC.PropertyNames.TRF_PRESET_CODE
				ht(TRF_COMMENTS) = _JOB_TRAFFIC.PropertyNames.TRF_COMMENTS
				ht(ASSIGN_1) = _JOB_TRAFFIC.PropertyNames.ASSIGN_1
				ht(ASSIGN_2) = _JOB_TRAFFIC.PropertyNames.ASSIGN_2
				ht(ASSIGN_3) = _JOB_TRAFFIC.PropertyNames.ASSIGN_3
				ht(ASSIGN_4) = _JOB_TRAFFIC.PropertyNames.ASSIGN_4
				ht(ASSIGN_5) = _JOB_TRAFFIC.PropertyNames.ASSIGN_5
				ht(COMPLETED_DATE) = _JOB_TRAFFIC.PropertyNames.COMPLETED_DATE
				ht(DATE_DELIVERED) = _JOB_TRAFFIC.PropertyNames.DATE_DELIVERED
				ht(DATE_SHIPPED) = _JOB_TRAFFIC.PropertyNames.DATE_SHIPPED
				ht(RECEIVED_BY) = _JOB_TRAFFIC.PropertyNames.RECEIVED_BY
				ht(REFERENCE) = _JOB_TRAFFIC.PropertyNames.REFERENCE
				ht(ROWID) = _JOB_TRAFFIC.PropertyNames.ROWID

			End If
			
			Return CType(ht(columnName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing		 
	End Class
	#End Region	
	
	#Region "PropertyNames"
	Public class PropertyNames
		
        Public Const JOB_NUMBER As String = "JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "JOB_COMPONENT_NBR"
        Public Const TRF_CODE As String = "TRF_CODE"
        Public Const TRF_PRESET_CODE As String = "TRF_PRESET_CODE"
        Public Const TRF_COMMENTS As String = "TRF_COMMENTS"
        Public Const ASSIGN_1 As String = "ASSIGN_1"
        Public Const ASSIGN_2 As String = "ASSIGN_2"
        Public Const ASSIGN_3 As String = "ASSIGN_3"
        Public Const ASSIGN_4 As String = "ASSIGN_4"
        Public Const ASSIGN_5 As String = "ASSIGN_5"
        Public Const COMPLETED_DATE As String = "COMPLETED_DATE"
        Public Const DATE_DELIVERED As String = "DATE_DELIVERED"
        Public Const DATE_SHIPPED As String = "DATE_SHIPPED"
        Public Const RECEIVED_BY As String = "RECEIVED_BY"
        Public Const REFERENCE As String = "REFERENCE"
        Public Const ROWID As String = "ROWID"

		Shared Public Function ToColumnName(ByVal propertyName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(JOB_NUMBER) = _JOB_TRAFFIC.ColumnNames.JOB_NUMBER
				ht(JOB_COMPONENT_NBR) = _JOB_TRAFFIC.ColumnNames.JOB_COMPONENT_NBR
				ht(TRF_CODE) = _JOB_TRAFFIC.ColumnNames.TRF_CODE
				ht(TRF_PRESET_CODE) = _JOB_TRAFFIC.ColumnNames.TRF_PRESET_CODE
				ht(TRF_COMMENTS) = _JOB_TRAFFIC.ColumnNames.TRF_COMMENTS
				ht(ASSIGN_1) = _JOB_TRAFFIC.ColumnNames.ASSIGN_1
				ht(ASSIGN_2) = _JOB_TRAFFIC.ColumnNames.ASSIGN_2
				ht(ASSIGN_3) = _JOB_TRAFFIC.ColumnNames.ASSIGN_3
				ht(ASSIGN_4) = _JOB_TRAFFIC.ColumnNames.ASSIGN_4
				ht(ASSIGN_5) = _JOB_TRAFFIC.ColumnNames.ASSIGN_5
				ht(COMPLETED_DATE) = _JOB_TRAFFIC.ColumnNames.COMPLETED_DATE
				ht(DATE_DELIVERED) = _JOB_TRAFFIC.ColumnNames.DATE_DELIVERED
				ht(DATE_SHIPPED) = _JOB_TRAFFIC.ColumnNames.DATE_SHIPPED
				ht(RECEIVED_BY) = _JOB_TRAFFIC.ColumnNames.RECEIVED_BY
				ht(REFERENCE) = _JOB_TRAFFIC.ColumnNames.REFERENCE
				ht(ROWID) = _JOB_TRAFFIC.ColumnNames.ROWID

			End If
			
			Return CType(ht(propertyName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing
		
	End Class
	#End Region	
	
	#Region "StringPropertyNames"
	Public class StringPropertyNames
		
        Public Const JOB_NUMBER As String = "s_JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "s_JOB_COMPONENT_NBR"
        Public Const TRF_CODE As String = "s_TRF_CODE"
        Public Const TRF_PRESET_CODE As String = "s_TRF_PRESET_CODE"
        Public Const TRF_COMMENTS As String = "s_TRF_COMMENTS"
        Public Const ASSIGN_1 As String = "s_ASSIGN_1"
        Public Const ASSIGN_2 As String = "s_ASSIGN_2"
        Public Const ASSIGN_3 As String = "s_ASSIGN_3"
        Public Const ASSIGN_4 As String = "s_ASSIGN_4"
        Public Const ASSIGN_5 As String = "s_ASSIGN_5"
        Public Const COMPLETED_DATE As String = "s_COMPLETED_DATE"
        Public Const DATE_DELIVERED As String = "s_DATE_DELIVERED"
        Public Const DATE_SHIPPED As String = "s_DATE_SHIPPED"
        Public Const RECEIVED_BY As String = "s_RECEIVED_BY"
        Public Const REFERENCE As String = "s_REFERENCE"
        Public Const ROWID As String = "s_ROWID"

	End Class
	#End Region		
	
	#Region "Properties" 
		Public Overridable Property JOB_NUMBER As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.JOB_NUMBER)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.JOB_NUMBER, Value)
			End Set
		End Property

		Public Overridable Property JOB_COMPONENT_NBR As Short
			Get
				Return MyBase.GetShort(ColumnNames.JOB_COMPONENT_NBR)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.JOB_COMPONENT_NBR, Value)
			End Set
		End Property

		Public Overridable Property TRF_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.TRF_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.TRF_CODE, Value)
			End Set
		End Property

		Public Overridable Property TRF_PRESET_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.TRF_PRESET_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.TRF_PRESET_CODE, Value)
			End Set
		End Property

		Public Overridable Property TRF_COMMENTS As String
			Get
				Return MyBase.GetString(ColumnNames.TRF_COMMENTS)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.TRF_COMMENTS, Value)
			End Set
		End Property

		Public Overridable Property ASSIGN_1 As String
			Get
				Return MyBase.GetString(ColumnNames.ASSIGN_1)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.ASSIGN_1, Value)
			End Set
		End Property

		Public Overridable Property ASSIGN_2 As String
			Get
				Return MyBase.GetString(ColumnNames.ASSIGN_2)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.ASSIGN_2, Value)
			End Set
		End Property

		Public Overridable Property ASSIGN_3 As String
			Get
				Return MyBase.GetString(ColumnNames.ASSIGN_3)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.ASSIGN_3, Value)
			End Set
		End Property

		Public Overridable Property ASSIGN_4 As String
			Get
				Return MyBase.GetString(ColumnNames.ASSIGN_4)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.ASSIGN_4, Value)
			End Set
		End Property

		Public Overridable Property ASSIGN_5 As String
			Get
				Return MyBase.GetString(ColumnNames.ASSIGN_5)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.ASSIGN_5, Value)
			End Set
		End Property

		Public Overridable Property COMPLETED_DATE As DateTime
			Get
				Return MyBase.GetDateTime(ColumnNames.COMPLETED_DATE)
			End Get
			Set(ByVal Value As DateTime)
				MyBase.SetDateTime(ColumnNames.COMPLETED_DATE, Value)
			End Set
		End Property

		Public Overridable Property DATE_DELIVERED As DateTime
			Get
				Return MyBase.GetDateTime(ColumnNames.DATE_DELIVERED)
			End Get
			Set(ByVal Value As DateTime)
				MyBase.SetDateTime(ColumnNames.DATE_DELIVERED, Value)
			End Set
		End Property

		Public Overridable Property DATE_SHIPPED As DateTime
			Get
				Return MyBase.GetDateTime(ColumnNames.DATE_SHIPPED)
			End Get
			Set(ByVal Value As DateTime)
				MyBase.SetDateTime(ColumnNames.DATE_SHIPPED, Value)
			End Set
		End Property

		Public Overridable Property RECEIVED_BY As String
			Get
				Return MyBase.GetString(ColumnNames.RECEIVED_BY)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.RECEIVED_BY, Value)
			End Set
		End Property

		Public Overridable Property REFERENCE As String
			Get
				Return MyBase.GetString(ColumnNames.REFERENCE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.REFERENCE, Value)
			End Set
		End Property

		Public Overridable Property ROWID As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.ROWID)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.ROWID, Value)
			End Set
		End Property


	#End Region  
	
	#Region "String Properties" 

		Public Overridable Property s_JOB_NUMBER As String
			Get
				If Me.IsColumnNull(ColumnNames.JOB_NUMBER) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.JOB_NUMBER)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.JOB_NUMBER)
				Else
					Me.JOB_NUMBER = MyBase.SetIntegerAsString(ColumnNames.JOB_NUMBER, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_JOB_COMPONENT_NBR As String
			Get
				If Me.IsColumnNull(ColumnNames.JOB_COMPONENT_NBR) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.JOB_COMPONENT_NBR)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.JOB_COMPONENT_NBR)
				Else
					Me.JOB_COMPONENT_NBR = MyBase.SetShortAsString(ColumnNames.JOB_COMPONENT_NBR, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_TRF_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.TRF_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.TRF_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.TRF_CODE)
				Else
					Me.TRF_CODE = MyBase.SetStringAsString(ColumnNames.TRF_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_TRF_PRESET_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.TRF_PRESET_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.TRF_PRESET_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.TRF_PRESET_CODE)
				Else
					Me.TRF_PRESET_CODE = MyBase.SetStringAsString(ColumnNames.TRF_PRESET_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_TRF_COMMENTS As String
			Get
				If Me.IsColumnNull(ColumnNames.TRF_COMMENTS) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.TRF_COMMENTS)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.TRF_COMMENTS)
				Else
					Me.TRF_COMMENTS = MyBase.SetStringAsString(ColumnNames.TRF_COMMENTS, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_ASSIGN_1 As String
			Get
				If Me.IsColumnNull(ColumnNames.ASSIGN_1) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.ASSIGN_1)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ASSIGN_1)
				Else
					Me.ASSIGN_1 = MyBase.SetStringAsString(ColumnNames.ASSIGN_1, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_ASSIGN_2 As String
			Get
				If Me.IsColumnNull(ColumnNames.ASSIGN_2) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.ASSIGN_2)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ASSIGN_2)
				Else
					Me.ASSIGN_2 = MyBase.SetStringAsString(ColumnNames.ASSIGN_2, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_ASSIGN_3 As String
			Get
				If Me.IsColumnNull(ColumnNames.ASSIGN_3) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.ASSIGN_3)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ASSIGN_3)
				Else
					Me.ASSIGN_3 = MyBase.SetStringAsString(ColumnNames.ASSIGN_3, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_ASSIGN_4 As String
			Get
				If Me.IsColumnNull(ColumnNames.ASSIGN_4) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.ASSIGN_4)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ASSIGN_4)
				Else
					Me.ASSIGN_4 = MyBase.SetStringAsString(ColumnNames.ASSIGN_4, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_ASSIGN_5 As String
			Get
				If Me.IsColumnNull(ColumnNames.ASSIGN_5) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.ASSIGN_5)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ASSIGN_5)
				Else
					Me.ASSIGN_5 = MyBase.SetStringAsString(ColumnNames.ASSIGN_5, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_COMPLETED_DATE As String
			Get
				If Me.IsColumnNull(ColumnNames.COMPLETED_DATE) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.COMPLETED_DATE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.COMPLETED_DATE)
				Else
					Me.COMPLETED_DATE = MyBase.SetDateTimeAsString(ColumnNames.COMPLETED_DATE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DATE_DELIVERED As String
			Get
				If Me.IsColumnNull(ColumnNames.DATE_DELIVERED) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.DATE_DELIVERED)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DATE_DELIVERED)
				Else
					Me.DATE_DELIVERED = MyBase.SetDateTimeAsString(ColumnNames.DATE_DELIVERED, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DATE_SHIPPED As String
			Get
				If Me.IsColumnNull(ColumnNames.DATE_SHIPPED) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.DATE_SHIPPED)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DATE_SHIPPED)
				Else
					Me.DATE_SHIPPED = MyBase.SetDateTimeAsString(ColumnNames.DATE_SHIPPED, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_RECEIVED_BY As String
			Get
				If Me.IsColumnNull(ColumnNames.RECEIVED_BY) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.RECEIVED_BY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.RECEIVED_BY)
				Else
					Me.RECEIVED_BY = MyBase.SetStringAsString(ColumnNames.RECEIVED_BY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_REFERENCE As String
			Get
				If Me.IsColumnNull(ColumnNames.REFERENCE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.REFERENCE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.REFERENCE)
				Else
					Me.REFERENCE = MyBase.SetStringAsString(ColumnNames.REFERENCE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_ROWID As String
			Get
				If Me.IsColumnNull(ColumnNames.ROWID) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.ROWID)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ROWID)
				Else
					Me.ROWID = MyBase.SetIntegerAsString(ColumnNames.ROWID, Value)
				End If
			End Set
		End Property


	#End Region  	

	#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffWhereParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffWhereParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "TearOff's"
		Public class TearOffWhereParameter

			Public Sub New(ByVal clause As WhereClause)
				Me._clause = clause
			End Sub
		
	
			Public ReadOnly Property JOB_NUMBER() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_NUMBER, Parameters.JOB_NUMBER)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property JOB_COMPONENT_NBR() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_COMPONENT_NBR, Parameters.JOB_COMPONENT_NBR)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property TRF_CODE() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.TRF_CODE, Parameters.TRF_CODE)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property TRF_PRESET_CODE() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.TRF_PRESET_CODE, Parameters.TRF_PRESET_CODE)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property TRF_COMMENTS() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.TRF_COMMENTS, Parameters.TRF_COMMENTS)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ASSIGN_1() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ASSIGN_1, Parameters.ASSIGN_1)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ASSIGN_2() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ASSIGN_2, Parameters.ASSIGN_2)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ASSIGN_3() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ASSIGN_3, Parameters.ASSIGN_3)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ASSIGN_4() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ASSIGN_4, Parameters.ASSIGN_4)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ASSIGN_5() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ASSIGN_5, Parameters.ASSIGN_5)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property COMPLETED_DATE() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.COMPLETED_DATE, Parameters.COMPLETED_DATE)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DATE_DELIVERED() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DATE_DELIVERED, Parameters.DATE_DELIVERED)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property DATE_SHIPPED() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.DATE_SHIPPED, Parameters.DATE_SHIPPED)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property RECEIVED_BY() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.RECEIVED_BY, Parameters.RECEIVED_BY)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property REFERENCE() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.REFERENCE, Parameters.REFERENCE)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property ROWID() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.ROWID, Parameters.ROWID)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property


			Private _clause as WhereClause
		End Class
		#End Region	

		Public ReadOnly Property JOB_NUMBER() As WhereParameter 
			Get
				If _JOB_NUMBER_W Is Nothing Then
					_JOB_NUMBER_W = TearOff.JOB_NUMBER
				End If
				Return _JOB_NUMBER_W
			End Get
		End Property

		Public ReadOnly Property JOB_COMPONENT_NBR() As WhereParameter 
			Get
				If _JOB_COMPONENT_NBR_W Is Nothing Then
					_JOB_COMPONENT_NBR_W = TearOff.JOB_COMPONENT_NBR
				End If
				Return _JOB_COMPONENT_NBR_W
			End Get
		End Property

		Public ReadOnly Property TRF_CODE() As WhereParameter 
			Get
				If _TRF_CODE_W Is Nothing Then
					_TRF_CODE_W = TearOff.TRF_CODE
				End If
				Return _TRF_CODE_W
			End Get
		End Property

		Public ReadOnly Property TRF_PRESET_CODE() As WhereParameter 
			Get
				If _TRF_PRESET_CODE_W Is Nothing Then
					_TRF_PRESET_CODE_W = TearOff.TRF_PRESET_CODE
				End If
				Return _TRF_PRESET_CODE_W
			End Get
		End Property

		Public ReadOnly Property TRF_COMMENTS() As WhereParameter 
			Get
				If _TRF_COMMENTS_W Is Nothing Then
					_TRF_COMMENTS_W = TearOff.TRF_COMMENTS
				End If
				Return _TRF_COMMENTS_W
			End Get
		End Property

		Public ReadOnly Property ASSIGN_1() As WhereParameter 
			Get
				If _ASSIGN_1_W Is Nothing Then
					_ASSIGN_1_W = TearOff.ASSIGN_1
				End If
				Return _ASSIGN_1_W
			End Get
		End Property

		Public ReadOnly Property ASSIGN_2() As WhereParameter 
			Get
				If _ASSIGN_2_W Is Nothing Then
					_ASSIGN_2_W = TearOff.ASSIGN_2
				End If
				Return _ASSIGN_2_W
			End Get
		End Property

		Public ReadOnly Property ASSIGN_3() As WhereParameter 
			Get
				If _ASSIGN_3_W Is Nothing Then
					_ASSIGN_3_W = TearOff.ASSIGN_3
				End If
				Return _ASSIGN_3_W
			End Get
		End Property

		Public ReadOnly Property ASSIGN_4() As WhereParameter 
			Get
				If _ASSIGN_4_W Is Nothing Then
					_ASSIGN_4_W = TearOff.ASSIGN_4
				End If
				Return _ASSIGN_4_W
			End Get
		End Property

		Public ReadOnly Property ASSIGN_5() As WhereParameter 
			Get
				If _ASSIGN_5_W Is Nothing Then
					_ASSIGN_5_W = TearOff.ASSIGN_5
				End If
				Return _ASSIGN_5_W
			End Get
		End Property

		Public ReadOnly Property COMPLETED_DATE() As WhereParameter 
			Get
				If _COMPLETED_DATE_W Is Nothing Then
					_COMPLETED_DATE_W = TearOff.COMPLETED_DATE
				End If
				Return _COMPLETED_DATE_W
			End Get
		End Property

		Public ReadOnly Property DATE_DELIVERED() As WhereParameter 
			Get
				If _DATE_DELIVERED_W Is Nothing Then
					_DATE_DELIVERED_W = TearOff.DATE_DELIVERED
				End If
				Return _DATE_DELIVERED_W
			End Get
		End Property

		Public ReadOnly Property DATE_SHIPPED() As WhereParameter 
			Get
				If _DATE_SHIPPED_W Is Nothing Then
					_DATE_SHIPPED_W = TearOff.DATE_SHIPPED
				End If
				Return _DATE_SHIPPED_W
			End Get
		End Property

		Public ReadOnly Property RECEIVED_BY() As WhereParameter 
			Get
				If _RECEIVED_BY_W Is Nothing Then
					_RECEIVED_BY_W = TearOff.RECEIVED_BY
				End If
				Return _RECEIVED_BY_W
			End Get
		End Property

		Public ReadOnly Property REFERENCE() As WhereParameter 
			Get
				If _REFERENCE_W Is Nothing Then
					_REFERENCE_W = TearOff.REFERENCE
				End If
				Return _REFERENCE_W
			End Get
		End Property

		Public ReadOnly Property ROWID() As WhereParameter 
			Get
				If _ROWID_W Is Nothing Then
					_ROWID_W = TearOff.ROWID
				End If
				Return _ROWID_W
			End Get
		End Property

		Private _JOB_NUMBER_W As WhereParameter = Nothing
		Private _JOB_COMPONENT_NBR_W As WhereParameter = Nothing
		Private _TRF_CODE_W As WhereParameter = Nothing
		Private _TRF_PRESET_CODE_W As WhereParameter = Nothing
		Private _TRF_COMMENTS_W As WhereParameter = Nothing
		Private _ASSIGN_1_W As WhereParameter = Nothing
		Private _ASSIGN_2_W As WhereParameter = Nothing
		Private _ASSIGN_3_W As WhereParameter = Nothing
		Private _ASSIGN_4_W As WhereParameter = Nothing
		Private _ASSIGN_5_W As WhereParameter = Nothing
		Private _COMPLETED_DATE_W As WhereParameter = Nothing
		Private _DATE_DELIVERED_W As WhereParameter = Nothing
		Private _DATE_SHIPPED_W As WhereParameter = Nothing
		Private _RECEIVED_BY_W As WhereParameter = Nothing
		Private _REFERENCE_W As WhereParameter = Nothing
		Private _ROWID_W As WhereParameter = Nothing

			Public Sub WhereClauseReset()

			_JOB_NUMBER_W = Nothing
			_JOB_COMPONENT_NBR_W = Nothing
			_TRF_CODE_W = Nothing
			_TRF_PRESET_CODE_W = Nothing
			_TRF_COMMENTS_W = Nothing
			_ASSIGN_1_W = Nothing
			_ASSIGN_2_W = Nothing
			_ASSIGN_3_W = Nothing
			_ASSIGN_4_W = Nothing
			_ASSIGN_5_W = Nothing
			_COMPLETED_DATE_W = Nothing
			_DATE_DELIVERED_W = Nothing
			_DATE_SHIPPED_W = Nothing
			_RECEIVED_BY_W = Nothing
			_REFERENCE_W = Nothing
			_ROWID_W = Nothing
				Me._entity.Query.FlushWhereParameters()

			End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffWhereParameter
    End Class	

	Public ReadOnly Property Where() As WhereClause
		Get
			If _whereClause Is Nothing Then
				_whereClause = New WhereClause(Me)
			End If
	
			Return _whereClause
		End Get
	End Property
	
	Private _whereClause As WhereClause = Nothing	
#End Region	

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffAggregateParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffAggregateParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "AggregateParameter TearOff's"
		Public class TearOffAggregateParameter

			Public Sub New(ByVal clause As AggregateClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property JOB_NUMBER() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_NUMBER, Parameters.JOB_NUMBER)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_COMPONENT_NBR() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_COMPONENT_NBR, Parameters.JOB_COMPONENT_NBR)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property TRF_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TRF_CODE, Parameters.TRF_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property TRF_PRESET_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TRF_PRESET_CODE, Parameters.TRF_PRESET_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property TRF_COMMENTS() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TRF_COMMENTS, Parameters.TRF_COMMENTS)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ASSIGN_1() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ASSIGN_1, Parameters.ASSIGN_1)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ASSIGN_2() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ASSIGN_2, Parameters.ASSIGN_2)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ASSIGN_3() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ASSIGN_3, Parameters.ASSIGN_3)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ASSIGN_4() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ASSIGN_4, Parameters.ASSIGN_4)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ASSIGN_5() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ASSIGN_5, Parameters.ASSIGN_5)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property COMPLETED_DATE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.COMPLETED_DATE, Parameters.COMPLETED_DATE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DATE_DELIVERED() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DATE_DELIVERED, Parameters.DATE_DELIVERED)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DATE_SHIPPED() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DATE_SHIPPED, Parameters.DATE_SHIPPED)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property RECEIVED_BY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.RECEIVED_BY, Parameters.RECEIVED_BY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property REFERENCE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.REFERENCE, Parameters.REFERENCE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ROWID() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ROWID, Parameters.ROWID)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property


			Private _clause as AggregateClause
		End Class
		#End Region	

		Public ReadOnly Property JOB_NUMBER() As AggregateParameter 
			Get
				If _JOB_NUMBER_W Is Nothing Then
					_JOB_NUMBER_W = TearOff.JOB_NUMBER
				End If
				Return _JOB_NUMBER_W
			End Get
		End Property

		Public ReadOnly Property JOB_COMPONENT_NBR() As AggregateParameter 
			Get
				If _JOB_COMPONENT_NBR_W Is Nothing Then
					_JOB_COMPONENT_NBR_W = TearOff.JOB_COMPONENT_NBR
				End If
				Return _JOB_COMPONENT_NBR_W
			End Get
		End Property

		Public ReadOnly Property TRF_CODE() As AggregateParameter 
			Get
				If _TRF_CODE_W Is Nothing Then
					_TRF_CODE_W = TearOff.TRF_CODE
				End If
				Return _TRF_CODE_W
			End Get
		End Property

		Public ReadOnly Property TRF_PRESET_CODE() As AggregateParameter 
			Get
				If _TRF_PRESET_CODE_W Is Nothing Then
					_TRF_PRESET_CODE_W = TearOff.TRF_PRESET_CODE
				End If
				Return _TRF_PRESET_CODE_W
			End Get
		End Property

		Public ReadOnly Property TRF_COMMENTS() As AggregateParameter 
			Get
				If _TRF_COMMENTS_W Is Nothing Then
					_TRF_COMMENTS_W = TearOff.TRF_COMMENTS
				End If
				Return _TRF_COMMENTS_W
			End Get
		End Property

		Public ReadOnly Property ASSIGN_1() As AggregateParameter 
			Get
				If _ASSIGN_1_W Is Nothing Then
					_ASSIGN_1_W = TearOff.ASSIGN_1
				End If
				Return _ASSIGN_1_W
			End Get
		End Property

		Public ReadOnly Property ASSIGN_2() As AggregateParameter 
			Get
				If _ASSIGN_2_W Is Nothing Then
					_ASSIGN_2_W = TearOff.ASSIGN_2
				End If
				Return _ASSIGN_2_W
			End Get
		End Property

		Public ReadOnly Property ASSIGN_3() As AggregateParameter 
			Get
				If _ASSIGN_3_W Is Nothing Then
					_ASSIGN_3_W = TearOff.ASSIGN_3
				End If
				Return _ASSIGN_3_W
			End Get
		End Property

		Public ReadOnly Property ASSIGN_4() As AggregateParameter 
			Get
				If _ASSIGN_4_W Is Nothing Then
					_ASSIGN_4_W = TearOff.ASSIGN_4
				End If
				Return _ASSIGN_4_W
			End Get
		End Property

		Public ReadOnly Property ASSIGN_5() As AggregateParameter 
			Get
				If _ASSIGN_5_W Is Nothing Then
					_ASSIGN_5_W = TearOff.ASSIGN_5
				End If
				Return _ASSIGN_5_W
			End Get
		End Property

		Public ReadOnly Property COMPLETED_DATE() As AggregateParameter 
			Get
				If _COMPLETED_DATE_W Is Nothing Then
					_COMPLETED_DATE_W = TearOff.COMPLETED_DATE
				End If
				Return _COMPLETED_DATE_W
			End Get
		End Property

		Public ReadOnly Property DATE_DELIVERED() As AggregateParameter 
			Get
				If _DATE_DELIVERED_W Is Nothing Then
					_DATE_DELIVERED_W = TearOff.DATE_DELIVERED
				End If
				Return _DATE_DELIVERED_W
			End Get
		End Property

		Public ReadOnly Property DATE_SHIPPED() As AggregateParameter 
			Get
				If _DATE_SHIPPED_W Is Nothing Then
					_DATE_SHIPPED_W = TearOff.DATE_SHIPPED
				End If
				Return _DATE_SHIPPED_W
			End Get
		End Property

		Public ReadOnly Property RECEIVED_BY() As AggregateParameter 
			Get
				If _RECEIVED_BY_W Is Nothing Then
					_RECEIVED_BY_W = TearOff.RECEIVED_BY
				End If
				Return _RECEIVED_BY_W
			End Get
		End Property

		Public ReadOnly Property REFERENCE() As AggregateParameter 
			Get
				If _REFERENCE_W Is Nothing Then
					_REFERENCE_W = TearOff.REFERENCE
				End If
				Return _REFERENCE_W
			End Get
		End Property

		Public ReadOnly Property ROWID() As AggregateParameter 
			Get
				If _ROWID_W Is Nothing Then
					_ROWID_W = TearOff.ROWID
				End If
				Return _ROWID_W
			End Get
		End Property

		Private _JOB_NUMBER_W As AggregateParameter = Nothing
		Private _JOB_COMPONENT_NBR_W As AggregateParameter = Nothing
		Private _TRF_CODE_W As AggregateParameter = Nothing
		Private _TRF_PRESET_CODE_W As AggregateParameter = Nothing
		Private _TRF_COMMENTS_W As AggregateParameter = Nothing
		Private _ASSIGN_1_W As AggregateParameter = Nothing
		Private _ASSIGN_2_W As AggregateParameter = Nothing
		Private _ASSIGN_3_W As AggregateParameter = Nothing
		Private _ASSIGN_4_W As AggregateParameter = Nothing
		Private _ASSIGN_5_W As AggregateParameter = Nothing
		Private _COMPLETED_DATE_W As AggregateParameter = Nothing
		Private _DATE_DELIVERED_W As AggregateParameter = Nothing
		Private _DATE_SHIPPED_W As AggregateParameter = Nothing
		Private _RECEIVED_BY_W As AggregateParameter = Nothing
		Private _REFERENCE_W As AggregateParameter = Nothing
		Private _ROWID_W As AggregateParameter = Nothing

		Public Sub AggregateClauseReset()

		_JOB_NUMBER_W = Nothing
		_JOB_COMPONENT_NBR_W = Nothing
		_TRF_CODE_W = Nothing
		_TRF_PRESET_CODE_W = Nothing
		_TRF_COMMENTS_W = Nothing
		_ASSIGN_1_W = Nothing
		_ASSIGN_2_W = Nothing
		_ASSIGN_3_W = Nothing
		_ASSIGN_4_W = Nothing
		_ASSIGN_5_W = Nothing
		_COMPLETED_DATE_W = Nothing
		_DATE_DELIVERED_W = Nothing
		_DATE_SHIPPED_W = Nothing
		_RECEIVED_BY_W = Nothing
		_REFERENCE_W = Nothing
		_ROWID_W = Nothing
			Me._entity.Query.FlushAggregateParameters()

		End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffAggregateParameter
    End Class	

	Public ReadOnly Property Aggregate() As AggregateClause
		Get
			If _aggregateClause Is Nothing Then
				_aggregateClause = New AggregateClause(Me)
			End If
	
			Return _aggregateClause
		End Get
	End Property
	
	Private _aggregateClause As AggregateClause = Nothing	
#End Region	

	Protected Overrides Function GetInsertCommand() As IDbCommand
	
		Dim cmd As SqlCommand = New SqlCommand
		cmd.CommandType = CommandType.StoredProcedure
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_JOB_TRAFFICInsert]" 
	    
		CreateParameters(cmd)
		
		Dim p As SqlParameter
		p = cmd.Parameters(Parameters.ROWID.ParameterName)
		p.Direction = ParameterDirection.Output
    
		Return cmd 

  	End Function
	
	Protected Overrides Function GetUpdateCommand() As IDbCommand
	
		Dim cmd As SqlCommand = New SqlCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_JOB_TRAFFICUpdate]" 
		
		CreateParameters(cmd) 
		    
		Return cmd
	
	End Function	
	
	Protected Overrides Function GetDeleteCommand() As IDbCommand
	
		Dim cmd As SqlCommand = New SqlCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_JOB_TRAFFICDelete]" 
		
		Dim p As SqlParameter
		p = cmd.Parameters.Add(Parameters.JOB_COMPONENT_NBR)
		p.SourceColumn = ColumnNames.JOB_COMPONENT_NBR
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.JOB_NUMBER)
		p.SourceColumn = ColumnNames.JOB_NUMBER
		p.SourceVersion = DataRowVersion.Current

  
		Return cmd
	
	End Function	
	
	Private Sub CreateParameters(ByVal cmd As SqlCommand)
	
		Dim p As SqlParameter
		p = cmd.Parameters.Add(Parameters.JOB_NUMBER)
		p.SourceColumn = ColumnNames.JOB_NUMBER
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.JOB_COMPONENT_NBR)
		p.SourceColumn = ColumnNames.JOB_COMPONENT_NBR
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.TRF_CODE)
		p.SourceColumn = ColumnNames.TRF_CODE
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.TRF_PRESET_CODE)
		p.SourceColumn = ColumnNames.TRF_PRESET_CODE
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.TRF_COMMENTS)
		p.SourceColumn = ColumnNames.TRF_COMMENTS
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.ASSIGN_1)
		p.SourceColumn = ColumnNames.ASSIGN_1
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.ASSIGN_2)
		p.SourceColumn = ColumnNames.ASSIGN_2
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.ASSIGN_3)
		p.SourceColumn = ColumnNames.ASSIGN_3
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.ASSIGN_4)
		p.SourceColumn = ColumnNames.ASSIGN_4
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.ASSIGN_5)
		p.SourceColumn = ColumnNames.ASSIGN_5
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.COMPLETED_DATE)
		p.SourceColumn = ColumnNames.COMPLETED_DATE
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DATE_DELIVERED)
		p.SourceColumn = ColumnNames.DATE_DELIVERED
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.DATE_SHIPPED)
		p.SourceColumn = ColumnNames.DATE_SHIPPED
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.RECEIVED_BY)
		p.SourceColumn = ColumnNames.RECEIVED_BY
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.REFERENCE)
		p.SourceColumn = ColumnNames.REFERENCE
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.ROWID)
		p.SourceColumn = ColumnNames.ROWID
		p.SourceVersion = DataRowVersion.Current


	End Sub	

End Class

