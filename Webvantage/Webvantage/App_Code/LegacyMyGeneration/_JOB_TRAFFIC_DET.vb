
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  **
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class SqlClientEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'MustInherit' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can Override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  Public Class YourObject
'    Inherits _YourObject
'
'  End Class
'
'===============================================================================

' Generated by MyGeneration Version # (1.2.0.2)

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _JOB_TRAFFIC_DET
    Inherits SqlClientEntity

    Public Sub New()
        Me.QuerySource = "JOB_TRAFFIC_DET"
        Me.MappingName = "JOB_TRAFFIC_DET"
    End Sub

    '=================================================================
    '  Public Overrides Sub AddNew()
    '=================================================================
    '
    '=================================================================
    Public Overrides Sub AddNew()
        MyBase.AddNew()

    End Sub

    Public Overrides Sub FlushData()
        Me._whereClause = Nothing
        Me._aggregateClause = Nothing
        MyBase.FlushData()
    End Sub


    '=================================================================
    '  	Public Function LoadAll() As Boolean
    '=================================================================
    '  Loads all of the records in the database, and sets the currentRow to the first row
    '=================================================================
    Public Function LoadAll() As Boolean

        Dim parameters As ListDictionary = Nothing


        Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_JOB_TRAFFIC_DETLoadAll]", parameters)

    End Function

    '=================================================================
    ' Public Overridable Function LoadByPrimaryKey()  As Boolean
    '=================================================================
    '  Loads a single row of via the primary key
    '=================================================================
    Public Overridable Function LoadByPrimaryKey(ByVal JOB_COMPONENT_NBR As Short, ByVal JOB_NUMBER As Integer, ByVal SEQ_NBR As Short) As Boolean

        Dim parameters As ListDictionary = New ListDictionary()
        parameters.Add(_JOB_TRAFFIC_DET.Parameters.JOB_COMPONENT_NBR, JOB_COMPONENT_NBR)

        parameters.Add(_JOB_TRAFFIC_DET.Parameters.JOB_NUMBER, JOB_NUMBER)

        parameters.Add(_JOB_TRAFFIC_DET.Parameters.SEQ_NBR, SEQ_NBR)


        Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_JOB_TRAFFIC_DETLoadByPrimaryKey]", parameters)

    End Function

#Region "Parameters"
    Protected Class Parameters

        Public Shared ReadOnly Property JOB_NUMBER() As SqlParameter
            Get
                Return New SqlParameter("@JOB_NUMBER", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property JOB_COMPONENT_NBR() As SqlParameter
            Get
                Return New SqlParameter("@JOB_COMPONENT_NBR", SqlDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property SEQ_NBR() As SqlParameter
            Get
                Return New SqlParameter("@SEQ_NBR", SqlDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property FNC_CODE() As SqlParameter
            Get
                Return New SqlParameter("@FNC_CODE", SqlDbType.VarChar, 10)
            End Get
        End Property

        Public Shared ReadOnly Property FNC_EST() As SqlParameter
            Get
                Return New SqlParameter("@FNC_EST", SqlDbType.VarChar, 6)
            End Get
        End Property

        Public Shared ReadOnly Property TASK_DESCRIPTION() As SqlParameter
            Get
                Return New SqlParameter("@TASK_DESCRIPTION", SqlDbType.VarChar, 40)
            End Get
        End Property

        Public Shared ReadOnly Property TASK_START_DATE() As SqlParameter
            Get
                Return New SqlParameter("@TASK_START_DATE", SqlDbType.SmallDateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property JOB_DUE_DATE() As SqlParameter
            Get
                Return New SqlParameter("@JOB_DUE_DATE", SqlDbType.SmallDateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property JOB_REVISED_DATE() As SqlParameter
            Get
                Return New SqlParameter("@JOB_REVISED_DATE", SqlDbType.SmallDateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property DUE_DATE_LOCK() As SqlParameter
            Get
                Return New SqlParameter("@DUE_DATE_LOCK", SqlDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property JOB_COMPLETED_DATE() As SqlParameter
            Get
                Return New SqlParameter("@JOB_COMPLETED_DATE", SqlDbType.SmallDateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property JOB_ORDER() As SqlParameter
            Get
                Return New SqlParameter("@JOB_ORDER", SqlDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property JOB_DAYS() As SqlParameter
            Get
                Return New SqlParameter("@JOB_DAYS", SqlDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property PARENT_TASK() As SqlParameter
            Get
                Return New SqlParameter("@PARENT_TASK", SqlDbType.VarChar, 10)
            End Get
        End Property

        Public Shared ReadOnly Property FNC_COMMENTS() As SqlParameter
            Get
                Return New SqlParameter("@FNC_COMMENTS", SqlDbType.Text, 2147483647)
            End Get
        End Property

        Public Shared ReadOnly Property DUE_DATE_COMMENTS() As SqlParameter
            Get
                Return New SqlParameter("@DUE_DATE_COMMENTS", SqlDbType.Text, 2147483647)
            End Get
        End Property

        Public Shared ReadOnly Property REV_DATE_COMMENTS() As SqlParameter
            Get
                Return New SqlParameter("@REV_DATE_COMMENTS", SqlDbType.Text, 2147483647)
            End Get
        End Property

        Public Shared ReadOnly Property JOB_HRS() As SqlParameter
            Get
                Return New SqlParameter("@JOB_HRS", SqlDbType.Decimal, 0)
            End Get
        End Property

        Public Shared ReadOnly Property DUE_TIME() As SqlParameter
            Get
                Return New SqlParameter("@DUE_TIME", SqlDbType.VarChar, 10)
            End Get
        End Property

        Public Shared ReadOnly Property REVISED_DUE_TIME() As SqlParameter
            Get
                Return New SqlParameter("@REVISED_DUE_TIME", SqlDbType.VarChar, 10)
            End Get
        End Property

        Public Shared ReadOnly Property TASK_STATUS() As SqlParameter
            Get
                Return New SqlParameter("@TASK_STATUS", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property MILESTONE() As SqlParameter
            Get
                Return New SqlParameter("@MILESTONE", SqlDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property TRAFFIC_PHASE_ID() As SqlParameter
            Get
                Return New SqlParameter("@TRAFFIC_PHASE_ID", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property ROWID() As SqlParameter
            Get
                Return New SqlParameter("@ROWID", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property TEMP_COMP_DATE() As SqlParameter
            Get
                Return New SqlParameter("@TEMP_COMP_DATE", SqlDbType.SmallDateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property TEMP_SEQ() As SqlParameter
            Get
                Return New SqlParameter("@TEMP_SEQ", SqlDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property COMPLETED_COMMENTS() As SqlParameter
            Get
                Return New SqlParameter("@COMPLETED_COMMENTS", SqlDbType.Text, 2147483647)
            End Get
        End Property

        Public Shared ReadOnly Property TRF_ROLE() As SqlParameter
            Get
                Return New SqlParameter("@TRF_ROLE", SqlDbType.VarChar, 6)
            End Get
        End Property

        

    End Class
#End Region

#Region "ColumnNames"
    Public Class ColumnNames

        Public Const JOB_NUMBER As String = "JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "JOB_COMPONENT_NBR"
        Public Const SEQ_NBR As String = "SEQ_NBR"
        Public Const FNC_CODE As String = "FNC_CODE"
        Public Const FNC_EST As String = "FNC_EST"
        Public Const TASK_DESCRIPTION As String = "TASK_DESCRIPTION"
        Public Const TASK_START_DATE As String = "TASK_START_DATE"
        Public Const JOB_DUE_DATE As String = "JOB_DUE_DATE"
        Public Const JOB_REVISED_DATE As String = "JOB_REVISED_DATE"
        Public Const DUE_DATE_LOCK As String = "DUE_DATE_LOCK"
        Public Const JOB_COMPLETED_DATE As String = "JOB_COMPLETED_DATE"
        Public Const JOB_ORDER As String = "JOB_ORDER"
        Public Const JOB_DAYS As String = "JOB_DAYS"
        Public Const PARENT_TASK As String = "PARENT_TASK"
        Public Const FNC_COMMENTS As String = "FNC_COMMENTS"
        Public Const DUE_DATE_COMMENTS As String = "DUE_DATE_COMMENTS"
        Public Const REV_DATE_COMMENTS As String = "REV_DATE_COMMENTS"
        Public Const JOB_HRS As String = "JOB_HRS"
        Public Const DUE_TIME As String = "DUE_TIME"
        Public Const REVISED_DUE_TIME As String = "REVISED_DUE_TIME"
        Public Const TASK_STATUS As String = "TASK_STATUS"
        Public Const MILESTONE As String = "MILESTONE"
        Public Const TRAFFIC_PHASE_ID As String = "TRAFFIC_PHASE_ID"
        Public Const ROWID As String = "ROWID"
        Public Const TEMP_COMP_DATE As String = "TEMP_COMP_DATE"
        Public Const TEMP_SEQ As String = "TEMP_SEQ"
        Public Const COMPLETED_COMMENTS As String = "COMPLETED_COMMENTS"
        Public Const TRF_ROLE As String = "TRF_ROLE"

        Public Shared Function ToPropertyName(ByVal columnName As String) As String

            If ht Is Nothing Then

                ht = New Hashtable

                ht(JOB_NUMBER) = _JOB_TRAFFIC_DET.PropertyNames.JOB_NUMBER
                ht(JOB_COMPONENT_NBR) = _JOB_TRAFFIC_DET.PropertyNames.JOB_COMPONENT_NBR
                ht(SEQ_NBR) = _JOB_TRAFFIC_DET.PropertyNames.SEQ_NBR
                ht(FNC_CODE) = _JOB_TRAFFIC_DET.PropertyNames.FNC_CODE
                ht(FNC_EST) = _JOB_TRAFFIC_DET.PropertyNames.FNC_EST
                ht(TASK_DESCRIPTION) = _JOB_TRAFFIC_DET.PropertyNames.TASK_DESCRIPTION
                ht(TASK_START_DATE) = _JOB_TRAFFIC_DET.PropertyNames.TASK_START_DATE
                ht(JOB_DUE_DATE) = _JOB_TRAFFIC_DET.PropertyNames.JOB_DUE_DATE
                ht(JOB_REVISED_DATE) = _JOB_TRAFFIC_DET.PropertyNames.JOB_REVISED_DATE
                ht(DUE_DATE_LOCK) = _JOB_TRAFFIC_DET.PropertyNames.DUE_DATE_LOCK
                ht(JOB_COMPLETED_DATE) = _JOB_TRAFFIC_DET.PropertyNames.JOB_COMPLETED_DATE
                ht(JOB_ORDER) = _JOB_TRAFFIC_DET.PropertyNames.JOB_ORDER
                ht(JOB_DAYS) = _JOB_TRAFFIC_DET.PropertyNames.JOB_DAYS
                ht(PARENT_TASK) = _JOB_TRAFFIC_DET.PropertyNames.PARENT_TASK
                ht(FNC_COMMENTS) = _JOB_TRAFFIC_DET.PropertyNames.FNC_COMMENTS
                ht(DUE_DATE_COMMENTS) = _JOB_TRAFFIC_DET.PropertyNames.DUE_DATE_COMMENTS
                ht(REV_DATE_COMMENTS) = _JOB_TRAFFIC_DET.PropertyNames.REV_DATE_COMMENTS
                ht(JOB_HRS) = _JOB_TRAFFIC_DET.PropertyNames.JOB_HRS
                ht(DUE_TIME) = _JOB_TRAFFIC_DET.PropertyNames.DUE_TIME
                ht(REVISED_DUE_TIME) = _JOB_TRAFFIC_DET.PropertyNames.REVISED_DUE_TIME
                ht(TASK_STATUS) = _JOB_TRAFFIC_DET.PropertyNames.TASK_STATUS
                ht(MILESTONE) = _JOB_TRAFFIC_DET.PropertyNames.MILESTONE
                ht(TRAFFIC_PHASE_ID) = _JOB_TRAFFIC_DET.PropertyNames.TRAFFIC_PHASE_ID
                ht(ROWID) = _JOB_TRAFFIC_DET.PropertyNames.ROWID
                ht(TEMP_COMP_DATE) = _JOB_TRAFFIC_DET.PropertyNames.TEMP_COMP_DATE
                ht(TEMP_SEQ) = _JOB_TRAFFIC_DET.PropertyNames.TEMP_SEQ
                ht(COMPLETED_COMMENTS) = _JOB_TRAFFIC_DET.PropertyNames.COMPLETED_COMMENTS
                ht(TRF_ROLE) = _JOB_TRAFFIC_DET.PropertyNames.TRF_ROLE

            End If

            Return CType(ht(columnName), String)

        End Function

        Private Shared ht As Hashtable = Nothing
    End Class
#End Region

#Region "PropertyNames"
    Public Class PropertyNames

        Public Const JOB_NUMBER As String = "JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "JOB_COMPONENT_NBR"
        Public Const SEQ_NBR As String = "SEQ_NBR"
        Public Const FNC_CODE As String = "FNC_CODE"
        Public Const FNC_EST As String = "FNC_EST"
        Public Const TASK_DESCRIPTION As String = "TASK_DESCRIPTION"
        Public Const TASK_START_DATE As String = "TASK_START_DATE"
        Public Const JOB_DUE_DATE As String = "JOB_DUE_DATE"
        Public Const JOB_REVISED_DATE As String = "JOB_REVISED_DATE"
        Public Const DUE_DATE_LOCK As String = "DUE_DATE_LOCK"
        Public Const JOB_COMPLETED_DATE As String = "JOB_COMPLETED_DATE"
        Public Const JOB_ORDER As String = "JOB_ORDER"
        Public Const JOB_DAYS As String = "JOB_DAYS"
        Public Const PARENT_TASK As String = "PARENT_TASK"
        Public Const FNC_COMMENTS As String = "FNC_COMMENTS"
        Public Const DUE_DATE_COMMENTS As String = "DUE_DATE_COMMENTS"
        Public Const REV_DATE_COMMENTS As String = "REV_DATE_COMMENTS"
        Public Const JOB_HRS As String = "JOB_HRS"
        Public Const DUE_TIME As String = "DUE_TIME"
        Public Const REVISED_DUE_TIME As String = "REVISED_DUE_TIME"
        Public Const TASK_STATUS As String = "TASK_STATUS"
        Public Const MILESTONE As String = "MILESTONE"
        Public Const TRAFFIC_PHASE_ID As String = "TRAFFIC_PHASE_ID"
        Public Const ROWID As String = "ROWID"
        Public Const TEMP_COMP_DATE As String = "TEMP_COMP_DATE"
        Public Const TEMP_SEQ As String = "TEMP_SEQ"
        Public Const COMPLETED_COMMENTS As String = "COMPLETED_COMMENTS"
        Public Const TRF_ROLE As String = "TRF_ROLE"

        Public Shared Function ToColumnName(ByVal propertyName As String) As String

            If ht Is Nothing Then

                ht = New Hashtable

                ht(JOB_NUMBER) = _JOB_TRAFFIC_DET.ColumnNames.JOB_NUMBER
                ht(JOB_COMPONENT_NBR) = _JOB_TRAFFIC_DET.ColumnNames.JOB_COMPONENT_NBR
                ht(SEQ_NBR) = _JOB_TRAFFIC_DET.ColumnNames.SEQ_NBR
                ht(FNC_CODE) = _JOB_TRAFFIC_DET.ColumnNames.FNC_CODE
                ht(FNC_EST) = _JOB_TRAFFIC_DET.ColumnNames.FNC_EST
                ht(TASK_DESCRIPTION) = _JOB_TRAFFIC_DET.ColumnNames.TASK_DESCRIPTION
                ht(TASK_START_DATE) = _JOB_TRAFFIC_DET.ColumnNames.TASK_START_DATE
                ht(JOB_DUE_DATE) = _JOB_TRAFFIC_DET.ColumnNames.JOB_DUE_DATE
                ht(JOB_REVISED_DATE) = _JOB_TRAFFIC_DET.ColumnNames.JOB_REVISED_DATE
                ht(DUE_DATE_LOCK) = _JOB_TRAFFIC_DET.ColumnNames.DUE_DATE_LOCK
                ht(JOB_COMPLETED_DATE) = _JOB_TRAFFIC_DET.ColumnNames.JOB_COMPLETED_DATE
                ht(JOB_ORDER) = _JOB_TRAFFIC_DET.ColumnNames.JOB_ORDER
                ht(JOB_DAYS) = _JOB_TRAFFIC_DET.ColumnNames.JOB_DAYS
                ht(PARENT_TASK) = _JOB_TRAFFIC_DET.ColumnNames.PARENT_TASK
                ht(FNC_COMMENTS) = _JOB_TRAFFIC_DET.ColumnNames.FNC_COMMENTS
                ht(DUE_DATE_COMMENTS) = _JOB_TRAFFIC_DET.ColumnNames.DUE_DATE_COMMENTS
                ht(REV_DATE_COMMENTS) = _JOB_TRAFFIC_DET.ColumnNames.REV_DATE_COMMENTS
                ht(JOB_HRS) = _JOB_TRAFFIC_DET.ColumnNames.JOB_HRS
                ht(DUE_TIME) = _JOB_TRAFFIC_DET.ColumnNames.DUE_TIME
                ht(REVISED_DUE_TIME) = _JOB_TRAFFIC_DET.ColumnNames.REVISED_DUE_TIME
                ht(TASK_STATUS) = _JOB_TRAFFIC_DET.ColumnNames.TASK_STATUS
                ht(MILESTONE) = _JOB_TRAFFIC_DET.ColumnNames.MILESTONE
                ht(TRAFFIC_PHASE_ID) = _JOB_TRAFFIC_DET.ColumnNames.TRAFFIC_PHASE_ID
                ht(ROWID) = _JOB_TRAFFIC_DET.ColumnNames.ROWID
                ht(TEMP_COMP_DATE) = _JOB_TRAFFIC_DET.ColumnNames.TEMP_COMP_DATE
                ht(TEMP_SEQ) = _JOB_TRAFFIC_DET.ColumnNames.TEMP_SEQ
                ht(COMPLETED_COMMENTS) = _JOB_TRAFFIC_DET.ColumnNames.COMPLETED_COMMENTS
                ht(TRF_ROLE) = _JOB_TRAFFIC_DET.ColumnNames.TRF_ROLE

            End If

            Return CType(ht(propertyName), String)

        End Function

        Private Shared ht As Hashtable = Nothing

    End Class
#End Region

#Region "StringPropertyNames"
    Public Class StringPropertyNames

        Public Const JOB_NUMBER As String = "s_JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "s_JOB_COMPONENT_NBR"
        Public Const SEQ_NBR As String = "s_SEQ_NBR"
        Public Const FNC_CODE As String = "s_FNC_CODE"
        Public Const FNC_EST As String = "s_FNC_EST"
        Public Const TASK_DESCRIPTION As String = "s_TASK_DESCRIPTION"
        Public Const TASK_START_DATE As String = "s_TASK_START_DATE"
        Public Const JOB_DUE_DATE As String = "s_JOB_DUE_DATE"
        Public Const JOB_REVISED_DATE As String = "s_JOB_REVISED_DATE"
        Public Const DUE_DATE_LOCK As String = "s_DUE_DATE_LOCK"
        Public Const JOB_COMPLETED_DATE As String = "s_JOB_COMPLETED_DATE"
        Public Const JOB_ORDER As String = "s_JOB_ORDER"
        Public Const JOB_DAYS As String = "s_JOB_DAYS"
        Public Const PARENT_TASK As String = "s_PARENT_TASK"
        Public Const FNC_COMMENTS As String = "s_FNC_COMMENTS"
        Public Const DUE_DATE_COMMENTS As String = "s_DUE_DATE_COMMENTS"
        Public Const REV_DATE_COMMENTS As String = "s_REV_DATE_COMMENTS"
        Public Const JOB_HRS As String = "s_JOB_HRS"
        Public Const DUE_TIME As String = "s_DUE_TIME"
        Public Const REVISED_DUE_TIME As String = "s_REVISED_DUE_TIME"
        Public Const TASK_STATUS As String = "s_TASK_STATUS"
        Public Const MILESTONE As String = "s_MILESTONE"
        Public Const TRAFFIC_PHASE_ID As String = "s_TRAFFIC_PHASE_ID"
        Public Const ROWID As String = "s_ROWID"
        Public Const TEMP_COMP_DATE As String = "s_TEMP_COMP_DATE"
        Public Const TEMP_SEQ As String = "s_TEMP_SEQ"
        Public Const COMPLETED_COMMENTS As String = "s_COMPLETED_COMMENTS"
        Public Const TRF_ROLE As String = "s_TRF_ROLE"

    End Class
#End Region

#Region "Properties"
    Public Overridable Property JOB_NUMBER() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.JOB_NUMBER)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.JOB_NUMBER, Value)
        End Set
    End Property

    Public Overridable Property JOB_COMPONENT_NBR() As Short
        Get
            Return MyBase.GetShort(ColumnNames.JOB_COMPONENT_NBR)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.JOB_COMPONENT_NBR, Value)
        End Set
    End Property

    Public Overridable Property SEQ_NBR() As Short
        Get
            Return MyBase.GetShort(ColumnNames.SEQ_NBR)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.SEQ_NBR, Value)
        End Set
    End Property

    Public Overridable Property FNC_CODE() As String
        Get
            Return MyBase.GetString(ColumnNames.FNC_CODE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.FNC_CODE, Value)
        End Set
    End Property

    Public Overridable Property FNC_EST() As String
        Get
            Return MyBase.GetString(ColumnNames.FNC_EST)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.FNC_EST, Value)
        End Set
    End Property

    Public Overridable Property TASK_DESCRIPTION() As String
        Get
            Return MyBase.GetString(ColumnNames.TASK_DESCRIPTION)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.TASK_DESCRIPTION, Value)
        End Set
    End Property

    Public Overridable Property TASK_START_DATE() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.TASK_START_DATE)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.TASK_START_DATE, Value)
        End Set
    End Property

    Public Overridable Property JOB_DUE_DATE() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.JOB_DUE_DATE)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.JOB_DUE_DATE, Value)
        End Set
    End Property

    Public Overridable Property JOB_REVISED_DATE() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.JOB_REVISED_DATE)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.JOB_REVISED_DATE, Value)
        End Set
    End Property

    Public Overridable Property DUE_DATE_LOCK() As Short
        Get
            Return MyBase.GetShort(ColumnNames.DUE_DATE_LOCK)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.DUE_DATE_LOCK, Value)
        End Set
    End Property

    Public Overridable Property JOB_COMPLETED_DATE() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.JOB_COMPLETED_DATE)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.JOB_COMPLETED_DATE, Value)
        End Set
    End Property

    Public Overridable Property JOB_ORDER() As Short
        Get
            Return MyBase.GetShort(ColumnNames.JOB_ORDER)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.JOB_ORDER, Value)
        End Set
    End Property

    Public Overridable Property JOB_DAYS() As Short
        Get
            Return MyBase.GetShort(ColumnNames.JOB_DAYS)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.JOB_DAYS, Value)
        End Set
    End Property

    Public Overridable Property PARENT_TASK() As String
        Get
            Return MyBase.GetString(ColumnNames.PARENT_TASK)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.PARENT_TASK, Value)
        End Set
    End Property

    Public Overridable Property FNC_COMMENTS() As String
        Get
            Return MyBase.GetString(ColumnNames.FNC_COMMENTS)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.FNC_COMMENTS, Value)
        End Set
    End Property

    Public Overridable Property DUE_DATE_COMMENTS() As String
        Get
            Return MyBase.GetString(ColumnNames.DUE_DATE_COMMENTS)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.DUE_DATE_COMMENTS, Value)
        End Set
    End Property

    Public Overridable Property REV_DATE_COMMENTS() As String
        Get
            Return MyBase.GetString(ColumnNames.REV_DATE_COMMENTS)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.REV_DATE_COMMENTS, Value)
        End Set
    End Property

    Public Overridable Property JOB_HRS() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.JOB_HRS)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.JOB_HRS, Value)
        End Set
    End Property

    Public Overridable Property DUE_TIME() As String
        Get
            Return MyBase.GetString(ColumnNames.DUE_TIME)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.DUE_TIME, Value)
        End Set
    End Property

    Public Overridable Property REVISED_DUE_TIME() As String
        Get
            Return MyBase.GetString(ColumnNames.REVISED_DUE_TIME)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.REVISED_DUE_TIME, Value)
        End Set
    End Property

    Public Overridable Property TASK_STATUS() As String
        Get
            Return MyBase.GetString(ColumnNames.TASK_STATUS)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.TASK_STATUS, Value)
        End Set
    End Property

    Public Overridable Property MILESTONE() As Short
        Get
            Return MyBase.GetShort(ColumnNames.MILESTONE)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.MILESTONE, Value)
        End Set
    End Property

    Public Overridable Property TRAFFIC_PHASE_ID() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.TRAFFIC_PHASE_ID)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.TRAFFIC_PHASE_ID, Value)
        End Set
    End Property

    Public Overridable Property ROWID() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.ROWID)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.ROWID, Value)
        End Set
    End Property

    Public Overridable Property TEMP_COMP_DATE() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.TEMP_COMP_DATE)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.TEMP_COMP_DATE, Value)
        End Set
    End Property

    Public Overridable Property TEMP_SEQ() As Short
        Get
            Return MyBase.GetShort(ColumnNames.TEMP_SEQ)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.TEMP_SEQ, Value)
        End Set
    End Property

    Public Overridable Property COMPLETED_COMMENTS() As String
        Get
            Return MyBase.GetString(ColumnNames.COMPLETED_COMMENTS)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.COMPLETED_COMMENTS, Value)
        End Set
    End Property

    Public Overridable Property TRF_ROLE() As String
        Get
            Return MyBase.GetString(ColumnNames.TRF_ROLE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.TRF_ROLE, Value)
        End Set
    End Property

    


#End Region

#Region "String Properties"

    Public Overridable Property s_JOB_NUMBER() As String
        Get
            If Me.IsColumnNull(ColumnNames.JOB_NUMBER) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.JOB_NUMBER)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JOB_NUMBER)
            Else
                Me.JOB_NUMBER = MyBase.SetIntegerAsString(ColumnNames.JOB_NUMBER, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JOB_COMPONENT_NBR() As String
        Get
            If Me.IsColumnNull(ColumnNames.JOB_COMPONENT_NBR) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.JOB_COMPONENT_NBR)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JOB_COMPONENT_NBR)
            Else
                Me.JOB_COMPONENT_NBR = MyBase.SetShortAsString(ColumnNames.JOB_COMPONENT_NBR, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_SEQ_NBR() As String
        Get
            If Me.IsColumnNull(ColumnNames.SEQ_NBR) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.SEQ_NBR)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.SEQ_NBR)
            Else
                Me.SEQ_NBR = MyBase.SetShortAsString(ColumnNames.SEQ_NBR, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_FNC_CODE() As String
        Get
            If Me.IsColumnNull(ColumnNames.FNC_CODE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.FNC_CODE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.FNC_CODE)
            Else
                Me.FNC_CODE = MyBase.SetStringAsString(ColumnNames.FNC_CODE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_FNC_EST() As String
        Get
            If Me.IsColumnNull(ColumnNames.FNC_EST) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.FNC_EST)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.FNC_EST)
            Else
                Me.FNC_EST = MyBase.SetStringAsString(ColumnNames.FNC_EST, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TASK_DESCRIPTION() As String
        Get
            If Me.IsColumnNull(ColumnNames.TASK_DESCRIPTION) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.TASK_DESCRIPTION)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.TASK_DESCRIPTION)
            Else
                Me.TASK_DESCRIPTION = MyBase.SetStringAsString(ColumnNames.TASK_DESCRIPTION, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TASK_START_DATE() As String
        Get
            If Me.IsColumnNull(ColumnNames.TASK_START_DATE) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.TASK_START_DATE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.TASK_START_DATE)
            Else
                Me.TASK_START_DATE = MyBase.SetDateTimeAsString(ColumnNames.TASK_START_DATE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JOB_DUE_DATE() As String
        Get
            If Me.IsColumnNull(ColumnNames.JOB_DUE_DATE) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.JOB_DUE_DATE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JOB_DUE_DATE)
            Else
                Me.JOB_DUE_DATE = MyBase.SetDateTimeAsString(ColumnNames.JOB_DUE_DATE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JOB_REVISED_DATE() As String
        Get
            If Me.IsColumnNull(ColumnNames.JOB_REVISED_DATE) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.JOB_REVISED_DATE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JOB_REVISED_DATE)
            Else
                Me.JOB_REVISED_DATE = MyBase.SetDateTimeAsString(ColumnNames.JOB_REVISED_DATE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_DUE_DATE_LOCK() As String
        Get
            If Me.IsColumnNull(ColumnNames.DUE_DATE_LOCK) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.DUE_DATE_LOCK)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.DUE_DATE_LOCK)
            Else
                Me.DUE_DATE_LOCK = MyBase.SetShortAsString(ColumnNames.DUE_DATE_LOCK, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JOB_COMPLETED_DATE() As String
        Get
            If Me.IsColumnNull(ColumnNames.JOB_COMPLETED_DATE) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.JOB_COMPLETED_DATE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JOB_COMPLETED_DATE)
            Else
                Me.JOB_COMPLETED_DATE = MyBase.SetDateTimeAsString(ColumnNames.JOB_COMPLETED_DATE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JOB_ORDER() As String
        Get
            If Me.IsColumnNull(ColumnNames.JOB_ORDER) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.JOB_ORDER)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JOB_ORDER)
            Else
                Me.JOB_ORDER = MyBase.SetShortAsString(ColumnNames.JOB_ORDER, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JOB_DAYS() As String
        Get
            If Me.IsColumnNull(ColumnNames.JOB_DAYS) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.JOB_DAYS)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JOB_DAYS)
            Else
                Me.JOB_DAYS = MyBase.SetShortAsString(ColumnNames.JOB_DAYS, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_PARENT_TASK() As String
        Get
            If Me.IsColumnNull(ColumnNames.PARENT_TASK) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.PARENT_TASK)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.PARENT_TASK)
            Else
                Me.PARENT_TASK = MyBase.SetStringAsString(ColumnNames.PARENT_TASK, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_FNC_COMMENTS() As String
        Get
            If Me.IsColumnNull(ColumnNames.FNC_COMMENTS) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.FNC_COMMENTS)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.FNC_COMMENTS)
            Else
                Me.FNC_COMMENTS = MyBase.SetStringAsString(ColumnNames.FNC_COMMENTS, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_DUE_DATE_COMMENTS() As String
        Get
            If Me.IsColumnNull(ColumnNames.DUE_DATE_COMMENTS) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.DUE_DATE_COMMENTS)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.DUE_DATE_COMMENTS)
            Else
                Me.DUE_DATE_COMMENTS = MyBase.SetStringAsString(ColumnNames.DUE_DATE_COMMENTS, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_REV_DATE_COMMENTS() As String
        Get
            If Me.IsColumnNull(ColumnNames.REV_DATE_COMMENTS) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.REV_DATE_COMMENTS)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.REV_DATE_COMMENTS)
            Else
                Me.REV_DATE_COMMENTS = MyBase.SetStringAsString(ColumnNames.REV_DATE_COMMENTS, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JOB_HRS() As String
        Get
            If Me.IsColumnNull(ColumnNames.JOB_HRS) Then
                Return String.Empty
            Else
                Return MyBase.GetDecimalAsString(ColumnNames.JOB_HRS)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JOB_HRS)
            Else
                Me.JOB_HRS = MyBase.SetDecimalAsString(ColumnNames.JOB_HRS, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_DUE_TIME() As String
        Get
            If Me.IsColumnNull(ColumnNames.DUE_TIME) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.DUE_TIME)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.DUE_TIME)
            Else
                Me.DUE_TIME = MyBase.SetStringAsString(ColumnNames.DUE_TIME, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_REVISED_DUE_TIME() As String
        Get
            If Me.IsColumnNull(ColumnNames.REVISED_DUE_TIME) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.REVISED_DUE_TIME)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.REVISED_DUE_TIME)
            Else
                Me.REVISED_DUE_TIME = MyBase.SetStringAsString(ColumnNames.REVISED_DUE_TIME, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TASK_STATUS() As String
        Get
            If Me.IsColumnNull(ColumnNames.TASK_STATUS) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.TASK_STATUS)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.TASK_STATUS)
            Else
                Me.TASK_STATUS = MyBase.SetStringAsString(ColumnNames.TASK_STATUS, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_MILESTONE() As String
        Get
            If Me.IsColumnNull(ColumnNames.MILESTONE) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.MILESTONE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.MILESTONE)
            Else
                Me.MILESTONE = MyBase.SetShortAsString(ColumnNames.MILESTONE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TRAFFIC_PHASE_ID() As String
        Get
            If Me.IsColumnNull(ColumnNames.TRAFFIC_PHASE_ID) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.TRAFFIC_PHASE_ID)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.TRAFFIC_PHASE_ID)
            Else
                Me.TRAFFIC_PHASE_ID = MyBase.SetIntegerAsString(ColumnNames.TRAFFIC_PHASE_ID, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ROWID() As String
        Get
            If Me.IsColumnNull(ColumnNames.ROWID) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.ROWID)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.ROWID)
            Else
                Me.ROWID = MyBase.SetIntegerAsString(ColumnNames.ROWID, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TEMP_COMP_DATE() As String
        Get
            If Me.IsColumnNull(ColumnNames.TEMP_COMP_DATE) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.TEMP_COMP_DATE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.TEMP_COMP_DATE)
            Else
                Me.TEMP_COMP_DATE = MyBase.SetDateTimeAsString(ColumnNames.TEMP_COMP_DATE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TEMP_SEQ() As String
        Get
            If Me.IsColumnNull(ColumnNames.TEMP_SEQ) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.TEMP_SEQ)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.TEMP_SEQ)
            Else
                Me.TEMP_SEQ = MyBase.SetShortAsString(ColumnNames.TEMP_SEQ, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_COMPLETED_COMMENTS() As String
        Get
            If Me.IsColumnNull(ColumnNames.COMPLETED_COMMENTS) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.COMPLETED_COMMENTS)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.COMPLETED_COMMENTS)
            Else
                Me.COMPLETED_COMMENTS = MyBase.SetStringAsString(ColumnNames.COMPLETED_COMMENTS, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TRF_ROLE() As String
        Get
            If Me.IsColumnNull(ColumnNames.TRF_ROLE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.TRF_ROLE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.TRF_ROLE)
            Else
                Me.TRF_ROLE = MyBase.SetStringAsString(ColumnNames.TRF_ROLE, Value)
            End If
        End Set
    End Property

    


#End Region

#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub

        Public ReadOnly Property TearOff() As TearOffWhereParameter
            Get
                If _tearOff Is Nothing Then
                    _tearOff = New TearOffWhereParameter(Me)
                End If

                Return _tearOff
            End Get
        End Property

#Region "TearOff's"
        Public Class TearOffWhereParameter

            Public Sub New(ByVal clause As WhereClause)
                Me._clause = clause
            End Sub


            Public ReadOnly Property JOB_NUMBER() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_NUMBER, Parameters.JOB_NUMBER)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_COMPONENT_NBR() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_COMPONENT_NBR, Parameters.JOB_COMPONENT_NBR)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property SEQ_NBR() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.SEQ_NBR, Parameters.SEQ_NBR)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FNC_CODE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.FNC_CODE, Parameters.FNC_CODE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FNC_EST() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.FNC_EST, Parameters.FNC_EST)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TASK_DESCRIPTION() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TASK_DESCRIPTION, Parameters.TASK_DESCRIPTION)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TASK_START_DATE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TASK_START_DATE, Parameters.TASK_START_DATE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_DUE_DATE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_DUE_DATE, Parameters.JOB_DUE_DATE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_REVISED_DATE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_REVISED_DATE, Parameters.JOB_REVISED_DATE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DUE_DATE_LOCK() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.DUE_DATE_LOCK, Parameters.DUE_DATE_LOCK)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_COMPLETED_DATE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_COMPLETED_DATE, Parameters.JOB_COMPLETED_DATE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_ORDER() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_ORDER, Parameters.JOB_ORDER)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_DAYS() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_DAYS, Parameters.JOB_DAYS)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PARENT_TASK() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.PARENT_TASK, Parameters.PARENT_TASK)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FNC_COMMENTS() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.FNC_COMMENTS, Parameters.FNC_COMMENTS)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DUE_DATE_COMMENTS() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.DUE_DATE_COMMENTS, Parameters.DUE_DATE_COMMENTS)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property REV_DATE_COMMENTS() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.REV_DATE_COMMENTS, Parameters.REV_DATE_COMMENTS)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_HRS() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_HRS, Parameters.JOB_HRS)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DUE_TIME() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.DUE_TIME, Parameters.DUE_TIME)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property REVISED_DUE_TIME() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.REVISED_DUE_TIME, Parameters.REVISED_DUE_TIME)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TASK_STATUS() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TASK_STATUS, Parameters.TASK_STATUS)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property MILESTONE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.MILESTONE, Parameters.MILESTONE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TRAFFIC_PHASE_ID() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TRAFFIC_PHASE_ID, Parameters.TRAFFIC_PHASE_ID)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ROWID() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ROWID, Parameters.ROWID)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TEMP_COMP_DATE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TEMP_COMP_DATE, Parameters.TEMP_COMP_DATE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TEMP_SEQ() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TEMP_SEQ, Parameters.TEMP_SEQ)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property COMPLETED_COMMENTS() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.COMPLETED_COMMENTS, Parameters.COMPLETED_COMMENTS)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TRF_ROLE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TRF_ROLE, Parameters.TRF_ROLE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            


            Private _clause As WhereClause
        End Class
#End Region

        Public ReadOnly Property JOB_NUMBER() As WhereParameter
            Get
                If _JOB_NUMBER_W Is Nothing Then
                    _JOB_NUMBER_W = TearOff.JOB_NUMBER
                End If
                Return _JOB_NUMBER_W
            End Get
        End Property

        Public ReadOnly Property JOB_COMPONENT_NBR() As WhereParameter
            Get
                If _JOB_COMPONENT_NBR_W Is Nothing Then
                    _JOB_COMPONENT_NBR_W = TearOff.JOB_COMPONENT_NBR
                End If
                Return _JOB_COMPONENT_NBR_W
            End Get
        End Property

        Public ReadOnly Property SEQ_NBR() As WhereParameter
            Get
                If _SEQ_NBR_W Is Nothing Then
                    _SEQ_NBR_W = TearOff.SEQ_NBR
                End If
                Return _SEQ_NBR_W
            End Get
        End Property

        Public ReadOnly Property FNC_CODE() As WhereParameter
            Get
                If _FNC_CODE_W Is Nothing Then
                    _FNC_CODE_W = TearOff.FNC_CODE
                End If
                Return _FNC_CODE_W
            End Get
        End Property

        Public ReadOnly Property FNC_EST() As WhereParameter
            Get
                If _FNC_EST_W Is Nothing Then
                    _FNC_EST_W = TearOff.FNC_EST
                End If
                Return _FNC_EST_W
            End Get
        End Property

        Public ReadOnly Property TASK_DESCRIPTION() As WhereParameter
            Get
                If _TASK_DESCRIPTION_W Is Nothing Then
                    _TASK_DESCRIPTION_W = TearOff.TASK_DESCRIPTION
                End If
                Return _TASK_DESCRIPTION_W
            End Get
        End Property

        Public ReadOnly Property TASK_START_DATE() As WhereParameter
            Get
                If _TASK_START_DATE_W Is Nothing Then
                    _TASK_START_DATE_W = TearOff.TASK_START_DATE
                End If
                Return _TASK_START_DATE_W
            End Get
        End Property

        Public ReadOnly Property JOB_DUE_DATE() As WhereParameter
            Get
                If _JOB_DUE_DATE_W Is Nothing Then
                    _JOB_DUE_DATE_W = TearOff.JOB_DUE_DATE
                End If
                Return _JOB_DUE_DATE_W
            End Get
        End Property

        Public ReadOnly Property JOB_REVISED_DATE() As WhereParameter
            Get
                If _JOB_REVISED_DATE_W Is Nothing Then
                    _JOB_REVISED_DATE_W = TearOff.JOB_REVISED_DATE
                End If
                Return _JOB_REVISED_DATE_W
            End Get
        End Property

        Public ReadOnly Property DUE_DATE_LOCK() As WhereParameter
            Get
                If _DUE_DATE_LOCK_W Is Nothing Then
                    _DUE_DATE_LOCK_W = TearOff.DUE_DATE_LOCK
                End If
                Return _DUE_DATE_LOCK_W
            End Get
        End Property

        Public ReadOnly Property JOB_COMPLETED_DATE() As WhereParameter
            Get
                If _JOB_COMPLETED_DATE_W Is Nothing Then
                    _JOB_COMPLETED_DATE_W = TearOff.JOB_COMPLETED_DATE
                End If
                Return _JOB_COMPLETED_DATE_W
            End Get
        End Property

        Public ReadOnly Property JOB_ORDER() As WhereParameter
            Get
                If _JOB_ORDER_W Is Nothing Then
                    _JOB_ORDER_W = TearOff.JOB_ORDER
                End If
                Return _JOB_ORDER_W
            End Get
        End Property

        Public ReadOnly Property JOB_DAYS() As WhereParameter
            Get
                If _JOB_DAYS_W Is Nothing Then
                    _JOB_DAYS_W = TearOff.JOB_DAYS
                End If
                Return _JOB_DAYS_W
            End Get
        End Property

        Public ReadOnly Property PARENT_TASK() As WhereParameter
            Get
                If _PARENT_TASK_W Is Nothing Then
                    _PARENT_TASK_W = TearOff.PARENT_TASK
                End If
                Return _PARENT_TASK_W
            End Get
        End Property

        Public ReadOnly Property FNC_COMMENTS() As WhereParameter
            Get
                If _FNC_COMMENTS_W Is Nothing Then
                    _FNC_COMMENTS_W = TearOff.FNC_COMMENTS
                End If
                Return _FNC_COMMENTS_W
            End Get
        End Property

        Public ReadOnly Property DUE_DATE_COMMENTS() As WhereParameter
            Get
                If _DUE_DATE_COMMENTS_W Is Nothing Then
                    _DUE_DATE_COMMENTS_W = TearOff.DUE_DATE_COMMENTS
                End If
                Return _DUE_DATE_COMMENTS_W
            End Get
        End Property

        Public ReadOnly Property REV_DATE_COMMENTS() As WhereParameter
            Get
                If _REV_DATE_COMMENTS_W Is Nothing Then
                    _REV_DATE_COMMENTS_W = TearOff.REV_DATE_COMMENTS
                End If
                Return _REV_DATE_COMMENTS_W
            End Get
        End Property

        Public ReadOnly Property JOB_HRS() As WhereParameter
            Get
                If _JOB_HRS_W Is Nothing Then
                    _JOB_HRS_W = TearOff.JOB_HRS
                End If
                Return _JOB_HRS_W
            End Get
        End Property

        Public ReadOnly Property DUE_TIME() As WhereParameter
            Get
                If _DUE_TIME_W Is Nothing Then
                    _DUE_TIME_W = TearOff.DUE_TIME
                End If
                Return _DUE_TIME_W
            End Get
        End Property

        Public ReadOnly Property REVISED_DUE_TIME() As WhereParameter
            Get
                If _REVISED_DUE_TIME_W Is Nothing Then
                    _REVISED_DUE_TIME_W = TearOff.REVISED_DUE_TIME
                End If
                Return _REVISED_DUE_TIME_W
            End Get
        End Property

        Public ReadOnly Property TASK_STATUS() As WhereParameter
            Get
                If _TASK_STATUS_W Is Nothing Then
                    _TASK_STATUS_W = TearOff.TASK_STATUS
                End If
                Return _TASK_STATUS_W
            End Get
        End Property

        Public ReadOnly Property MILESTONE() As WhereParameter
            Get
                If _MILESTONE_W Is Nothing Then
                    _MILESTONE_W = TearOff.MILESTONE
                End If
                Return _MILESTONE_W
            End Get
        End Property

        Public ReadOnly Property TRAFFIC_PHASE_ID() As WhereParameter
            Get
                If _TRAFFIC_PHASE_ID_W Is Nothing Then
                    _TRAFFIC_PHASE_ID_W = TearOff.TRAFFIC_PHASE_ID
                End If
                Return _TRAFFIC_PHASE_ID_W
            End Get
        End Property

        Public ReadOnly Property ROWID() As WhereParameter
            Get
                If _ROWID_W Is Nothing Then
                    _ROWID_W = TearOff.ROWID
                End If
                Return _ROWID_W
            End Get
        End Property

        Public ReadOnly Property TEMP_COMP_DATE() As WhereParameter
            Get
                If _TEMP_COMP_DATE_W Is Nothing Then
                    _TEMP_COMP_DATE_W = TearOff.TEMP_COMP_DATE
                End If
                Return _TEMP_COMP_DATE_W
            End Get
        End Property

        Public ReadOnly Property TEMP_SEQ() As WhereParameter
            Get
                If _TEMP_SEQ_W Is Nothing Then
                    _TEMP_SEQ_W = TearOff.TEMP_SEQ
                End If
                Return _TEMP_SEQ_W
            End Get
        End Property

        Public ReadOnly Property COMPLETED_COMMENTS() As WhereParameter
            Get
                If _COMPLETED_COMMENTS_W Is Nothing Then
                    _COMPLETED_COMMENTS_W = TearOff.COMPLETED_COMMENTS
                End If
                Return _COMPLETED_COMMENTS_W
            End Get
        End Property

        Public ReadOnly Property TRF_ROLE() As WhereParameter
            Get
                If _TRF_ROLE_W Is Nothing Then
                    _TRF_ROLE_W = TearOff.TRF_ROLE
                End If
                Return _TRF_ROLE_W
            End Get
        End Property

        

        Private _JOB_NUMBER_W As WhereParameter = Nothing
        Private _JOB_COMPONENT_NBR_W As WhereParameter = Nothing
        Private _SEQ_NBR_W As WhereParameter = Nothing
        Private _FNC_CODE_W As WhereParameter = Nothing
        Private _FNC_EST_W As WhereParameter = Nothing
        Private _TASK_DESCRIPTION_W As WhereParameter = Nothing
        Private _TASK_START_DATE_W As WhereParameter = Nothing
        Private _JOB_DUE_DATE_W As WhereParameter = Nothing
        Private _JOB_REVISED_DATE_W As WhereParameter = Nothing
        Private _DUE_DATE_LOCK_W As WhereParameter = Nothing
        Private _JOB_COMPLETED_DATE_W As WhereParameter = Nothing
        Private _JOB_ORDER_W As WhereParameter = Nothing
        Private _JOB_DAYS_W As WhereParameter = Nothing
        Private _PARENT_TASK_W As WhereParameter = Nothing
        Private _FNC_COMMENTS_W As WhereParameter = Nothing
        Private _DUE_DATE_COMMENTS_W As WhereParameter = Nothing
        Private _REV_DATE_COMMENTS_W As WhereParameter = Nothing
        Private _JOB_HRS_W As WhereParameter = Nothing
        Private _DUE_TIME_W As WhereParameter = Nothing
        Private _REVISED_DUE_TIME_W As WhereParameter = Nothing
        Private _TASK_STATUS_W As WhereParameter = Nothing
        Private _MILESTONE_W As WhereParameter = Nothing
        Private _TRAFFIC_PHASE_ID_W As WhereParameter = Nothing
        Private _ROWID_W As WhereParameter = Nothing
        Private _TEMP_COMP_DATE_W As WhereParameter = Nothing
        Private _TEMP_SEQ_W As WhereParameter = Nothing
        Private _COMPLETED_COMMENTS_W As WhereParameter = Nothing
        Private _TRF_ROLE_W As WhereParameter = Nothing

        Public Sub WhereClauseReset()

            _JOB_NUMBER_W = Nothing
            _JOB_COMPONENT_NBR_W = Nothing
            _SEQ_NBR_W = Nothing
            _FNC_CODE_W = Nothing
            _FNC_EST_W = Nothing
            _TASK_DESCRIPTION_W = Nothing
            _TASK_START_DATE_W = Nothing
            _JOB_DUE_DATE_W = Nothing
            _JOB_REVISED_DATE_W = Nothing
            _DUE_DATE_LOCK_W = Nothing
            _JOB_COMPLETED_DATE_W = Nothing
            _JOB_ORDER_W = Nothing
            _JOB_DAYS_W = Nothing
            _PARENT_TASK_W = Nothing
            _FNC_COMMENTS_W = Nothing
            _DUE_DATE_COMMENTS_W = Nothing
            _REV_DATE_COMMENTS_W = Nothing
            _JOB_HRS_W = Nothing
            _DUE_TIME_W = Nothing
            _REVISED_DUE_TIME_W = Nothing
            _TASK_STATUS_W = Nothing
            _MILESTONE_W = Nothing
            _TRAFFIC_PHASE_ID_W = Nothing
            _ROWID_W = Nothing
            _TEMP_COMP_DATE_W = Nothing
            _TEMP_SEQ_W = Nothing
            _COMPLETED_COMMENTS_W = Nothing
            _TRF_ROLE_W = Nothing
            Me._entity.Query.FlushWhereParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffWhereParameter
    End Class

    Public ReadOnly Property Where() As WhereClause
        Get
            If _whereClause Is Nothing Then
                _whereClause = New WhereClause(Me)
            End If

            Return _whereClause
        End Get
    End Property

    Private _whereClause As WhereClause = Nothing
#End Region

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub

        Public ReadOnly Property TearOff() As TearOffAggregateParameter
            Get
                If _tearOff Is Nothing Then
                    _tearOff = New TearOffAggregateParameter(Me)
                End If

                Return _tearOff
            End Get
        End Property

#Region "AggregateParameter TearOff's"
        Public Class TearOffAggregateParameter

            Public Sub New(ByVal clause As AggregateClause)
                Me._clause = clause
            End Sub


            Public ReadOnly Property JOB_NUMBER() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_NUMBER, Parameters.JOB_NUMBER)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_COMPONENT_NBR() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_COMPONENT_NBR, Parameters.JOB_COMPONENT_NBR)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property SEQ_NBR() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.SEQ_NBR, Parameters.SEQ_NBR)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FNC_CODE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FNC_CODE, Parameters.FNC_CODE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FNC_EST() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FNC_EST, Parameters.FNC_EST)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TASK_DESCRIPTION() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TASK_DESCRIPTION, Parameters.TASK_DESCRIPTION)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TASK_START_DATE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TASK_START_DATE, Parameters.TASK_START_DATE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_DUE_DATE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_DUE_DATE, Parameters.JOB_DUE_DATE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_REVISED_DATE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_REVISED_DATE, Parameters.JOB_REVISED_DATE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DUE_DATE_LOCK() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DUE_DATE_LOCK, Parameters.DUE_DATE_LOCK)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_COMPLETED_DATE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_COMPLETED_DATE, Parameters.JOB_COMPLETED_DATE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_ORDER() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_ORDER, Parameters.JOB_ORDER)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_DAYS() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_DAYS, Parameters.JOB_DAYS)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PARENT_TASK() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PARENT_TASK, Parameters.PARENT_TASK)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FNC_COMMENTS() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FNC_COMMENTS, Parameters.FNC_COMMENTS)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DUE_DATE_COMMENTS() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DUE_DATE_COMMENTS, Parameters.DUE_DATE_COMMENTS)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property REV_DATE_COMMENTS() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.REV_DATE_COMMENTS, Parameters.REV_DATE_COMMENTS)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_HRS() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_HRS, Parameters.JOB_HRS)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DUE_TIME() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DUE_TIME, Parameters.DUE_TIME)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property REVISED_DUE_TIME() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.REVISED_DUE_TIME, Parameters.REVISED_DUE_TIME)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TASK_STATUS() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TASK_STATUS, Parameters.TASK_STATUS)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property MILESTONE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.MILESTONE, Parameters.MILESTONE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TRAFFIC_PHASE_ID() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TRAFFIC_PHASE_ID, Parameters.TRAFFIC_PHASE_ID)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ROWID() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ROWID, Parameters.ROWID)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TEMP_COMP_DATE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TEMP_COMP_DATE, Parameters.TEMP_COMP_DATE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TEMP_SEQ() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TEMP_SEQ, Parameters.TEMP_SEQ)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property COMPLETED_COMMENTS() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.COMPLETED_COMMENTS, Parameters.COMPLETED_COMMENTS)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TRF_ROLE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TRF_ROLE, Parameters.TRF_ROLE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            


            Private _clause As AggregateClause
        End Class
#End Region

        Public ReadOnly Property JOB_NUMBER() As AggregateParameter
            Get
                If _JOB_NUMBER_W Is Nothing Then
                    _JOB_NUMBER_W = TearOff.JOB_NUMBER
                End If
                Return _JOB_NUMBER_W
            End Get
        End Property

        Public ReadOnly Property JOB_COMPONENT_NBR() As AggregateParameter
            Get
                If _JOB_COMPONENT_NBR_W Is Nothing Then
                    _JOB_COMPONENT_NBR_W = TearOff.JOB_COMPONENT_NBR
                End If
                Return _JOB_COMPONENT_NBR_W
            End Get
        End Property

        Public ReadOnly Property SEQ_NBR() As AggregateParameter
            Get
                If _SEQ_NBR_W Is Nothing Then
                    _SEQ_NBR_W = TearOff.SEQ_NBR
                End If
                Return _SEQ_NBR_W
            End Get
        End Property

        Public ReadOnly Property FNC_CODE() As AggregateParameter
            Get
                If _FNC_CODE_W Is Nothing Then
                    _FNC_CODE_W = TearOff.FNC_CODE
                End If
                Return _FNC_CODE_W
            End Get
        End Property

        Public ReadOnly Property FNC_EST() As AggregateParameter
            Get
                If _FNC_EST_W Is Nothing Then
                    _FNC_EST_W = TearOff.FNC_EST
                End If
                Return _FNC_EST_W
            End Get
        End Property

        Public ReadOnly Property TASK_DESCRIPTION() As AggregateParameter
            Get
                If _TASK_DESCRIPTION_W Is Nothing Then
                    _TASK_DESCRIPTION_W = TearOff.TASK_DESCRIPTION
                End If
                Return _TASK_DESCRIPTION_W
            End Get
        End Property

        Public ReadOnly Property TASK_START_DATE() As AggregateParameter
            Get
                If _TASK_START_DATE_W Is Nothing Then
                    _TASK_START_DATE_W = TearOff.TASK_START_DATE
                End If
                Return _TASK_START_DATE_W
            End Get
        End Property

        Public ReadOnly Property JOB_DUE_DATE() As AggregateParameter
            Get
                If _JOB_DUE_DATE_W Is Nothing Then
                    _JOB_DUE_DATE_W = TearOff.JOB_DUE_DATE
                End If
                Return _JOB_DUE_DATE_W
            End Get
        End Property

        Public ReadOnly Property JOB_REVISED_DATE() As AggregateParameter
            Get
                If _JOB_REVISED_DATE_W Is Nothing Then
                    _JOB_REVISED_DATE_W = TearOff.JOB_REVISED_DATE
                End If
                Return _JOB_REVISED_DATE_W
            End Get
        End Property

        Public ReadOnly Property DUE_DATE_LOCK() As AggregateParameter
            Get
                If _DUE_DATE_LOCK_W Is Nothing Then
                    _DUE_DATE_LOCK_W = TearOff.DUE_DATE_LOCK
                End If
                Return _DUE_DATE_LOCK_W
            End Get
        End Property

        Public ReadOnly Property JOB_COMPLETED_DATE() As AggregateParameter
            Get
                If _JOB_COMPLETED_DATE_W Is Nothing Then
                    _JOB_COMPLETED_DATE_W = TearOff.JOB_COMPLETED_DATE
                End If
                Return _JOB_COMPLETED_DATE_W
            End Get
        End Property

        Public ReadOnly Property JOB_ORDER() As AggregateParameter
            Get
                If _JOB_ORDER_W Is Nothing Then
                    _JOB_ORDER_W = TearOff.JOB_ORDER
                End If
                Return _JOB_ORDER_W
            End Get
        End Property

        Public ReadOnly Property JOB_DAYS() As AggregateParameter
            Get
                If _JOB_DAYS_W Is Nothing Then
                    _JOB_DAYS_W = TearOff.JOB_DAYS
                End If
                Return _JOB_DAYS_W
            End Get
        End Property

        Public ReadOnly Property PARENT_TASK() As AggregateParameter
            Get
                If _PARENT_TASK_W Is Nothing Then
                    _PARENT_TASK_W = TearOff.PARENT_TASK
                End If
                Return _PARENT_TASK_W
            End Get
        End Property

        Public ReadOnly Property FNC_COMMENTS() As AggregateParameter
            Get
                If _FNC_COMMENTS_W Is Nothing Then
                    _FNC_COMMENTS_W = TearOff.FNC_COMMENTS
                End If
                Return _FNC_COMMENTS_W
            End Get
        End Property

        Public ReadOnly Property DUE_DATE_COMMENTS() As AggregateParameter
            Get
                If _DUE_DATE_COMMENTS_W Is Nothing Then
                    _DUE_DATE_COMMENTS_W = TearOff.DUE_DATE_COMMENTS
                End If
                Return _DUE_DATE_COMMENTS_W
            End Get
        End Property

        Public ReadOnly Property REV_DATE_COMMENTS() As AggregateParameter
            Get
                If _REV_DATE_COMMENTS_W Is Nothing Then
                    _REV_DATE_COMMENTS_W = TearOff.REV_DATE_COMMENTS
                End If
                Return _REV_DATE_COMMENTS_W
            End Get
        End Property

        Public ReadOnly Property JOB_HRS() As AggregateParameter
            Get
                If _JOB_HRS_W Is Nothing Then
                    _JOB_HRS_W = TearOff.JOB_HRS
                End If
                Return _JOB_HRS_W
            End Get
        End Property

        Public ReadOnly Property DUE_TIME() As AggregateParameter
            Get
                If _DUE_TIME_W Is Nothing Then
                    _DUE_TIME_W = TearOff.DUE_TIME
                End If
                Return _DUE_TIME_W
            End Get
        End Property

        Public ReadOnly Property REVISED_DUE_TIME() As AggregateParameter
            Get
                If _REVISED_DUE_TIME_W Is Nothing Then
                    _REVISED_DUE_TIME_W = TearOff.REVISED_DUE_TIME
                End If
                Return _REVISED_DUE_TIME_W
            End Get
        End Property

        Public ReadOnly Property TASK_STATUS() As AggregateParameter
            Get
                If _TASK_STATUS_W Is Nothing Then
                    _TASK_STATUS_W = TearOff.TASK_STATUS
                End If
                Return _TASK_STATUS_W
            End Get
        End Property

        Public ReadOnly Property MILESTONE() As AggregateParameter
            Get
                If _MILESTONE_W Is Nothing Then
                    _MILESTONE_W = TearOff.MILESTONE
                End If
                Return _MILESTONE_W
            End Get
        End Property

        Public ReadOnly Property TRAFFIC_PHASE_ID() As AggregateParameter
            Get
                If _TRAFFIC_PHASE_ID_W Is Nothing Then
                    _TRAFFIC_PHASE_ID_W = TearOff.TRAFFIC_PHASE_ID
                End If
                Return _TRAFFIC_PHASE_ID_W
            End Get
        End Property

        Public ReadOnly Property ROWID() As AggregateParameter
            Get
                If _ROWID_W Is Nothing Then
                    _ROWID_W = TearOff.ROWID
                End If
                Return _ROWID_W
            End Get
        End Property

        Public ReadOnly Property TEMP_COMP_DATE() As AggregateParameter
            Get
                If _TEMP_COMP_DATE_W Is Nothing Then
                    _TEMP_COMP_DATE_W = TearOff.TEMP_COMP_DATE
                End If
                Return _TEMP_COMP_DATE_W
            End Get
        End Property

        Public ReadOnly Property TEMP_SEQ() As AggregateParameter
            Get
                If _TEMP_SEQ_W Is Nothing Then
                    _TEMP_SEQ_W = TearOff.TEMP_SEQ
                End If
                Return _TEMP_SEQ_W
            End Get
        End Property

        Public ReadOnly Property COMPLETED_COMMENTS() As AggregateParameter
            Get
                If _COMPLETED_COMMENTS_W Is Nothing Then
                    _COMPLETED_COMMENTS_W = TearOff.COMPLETED_COMMENTS
                End If
                Return _COMPLETED_COMMENTS_W
            End Get
        End Property

        Public ReadOnly Property TRF_ROLE() As AggregateParameter
            Get
                If _TRF_ROLE_W Is Nothing Then
                    _TRF_ROLE_W = TearOff.TRF_ROLE
                End If
                Return _TRF_ROLE_W
            End Get
        End Property

        

        Private _JOB_NUMBER_W As AggregateParameter = Nothing
        Private _JOB_COMPONENT_NBR_W As AggregateParameter = Nothing
        Private _SEQ_NBR_W As AggregateParameter = Nothing
        Private _FNC_CODE_W As AggregateParameter = Nothing
        Private _FNC_EST_W As AggregateParameter = Nothing
        Private _TASK_DESCRIPTION_W As AggregateParameter = Nothing
        Private _TASK_START_DATE_W As AggregateParameter = Nothing
        Private _JOB_DUE_DATE_W As AggregateParameter = Nothing
        Private _JOB_REVISED_DATE_W As AggregateParameter = Nothing
        Private _DUE_DATE_LOCK_W As AggregateParameter = Nothing
        Private _JOB_COMPLETED_DATE_W As AggregateParameter = Nothing
        Private _JOB_ORDER_W As AggregateParameter = Nothing
        Private _JOB_DAYS_W As AggregateParameter = Nothing
        Private _PARENT_TASK_W As AggregateParameter = Nothing
        Private _FNC_COMMENTS_W As AggregateParameter = Nothing
        Private _DUE_DATE_COMMENTS_W As AggregateParameter = Nothing
        Private _REV_DATE_COMMENTS_W As AggregateParameter = Nothing
        Private _JOB_HRS_W As AggregateParameter = Nothing
        Private _DUE_TIME_W As AggregateParameter = Nothing
        Private _REVISED_DUE_TIME_W As AggregateParameter = Nothing
        Private _TASK_STATUS_W As AggregateParameter = Nothing
        Private _MILESTONE_W As AggregateParameter = Nothing
        Private _TRAFFIC_PHASE_ID_W As AggregateParameter = Nothing
        Private _ROWID_W As AggregateParameter = Nothing
        Private _TEMP_COMP_DATE_W As AggregateParameter = Nothing
        Private _TEMP_SEQ_W As AggregateParameter = Nothing
        Private _COMPLETED_COMMENTS_W As AggregateParameter = Nothing
        Private _TRF_ROLE_W As AggregateParameter = Nothing

        Public Sub AggregateClauseReset()

            _JOB_NUMBER_W = Nothing
            _JOB_COMPONENT_NBR_W = Nothing
            _SEQ_NBR_W = Nothing
            _FNC_CODE_W = Nothing
            _FNC_EST_W = Nothing
            _TASK_DESCRIPTION_W = Nothing
            _TASK_START_DATE_W = Nothing
            _JOB_DUE_DATE_W = Nothing
            _JOB_REVISED_DATE_W = Nothing
            _DUE_DATE_LOCK_W = Nothing
            _JOB_COMPLETED_DATE_W = Nothing
            _JOB_ORDER_W = Nothing
            _JOB_DAYS_W = Nothing
            _PARENT_TASK_W = Nothing
            _FNC_COMMENTS_W = Nothing
            _DUE_DATE_COMMENTS_W = Nothing
            _REV_DATE_COMMENTS_W = Nothing
            _JOB_HRS_W = Nothing
            _DUE_TIME_W = Nothing
            _REVISED_DUE_TIME_W = Nothing
            _TASK_STATUS_W = Nothing
            _MILESTONE_W = Nothing
            _TRAFFIC_PHASE_ID_W = Nothing
            _ROWID_W = Nothing
            _TEMP_COMP_DATE_W = Nothing
            _TEMP_SEQ_W = Nothing
            _COMPLETED_COMMENTS_W = Nothing
            _TRF_ROLE_W = Nothing
            Me._entity.Query.FlushAggregateParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffAggregateParameter
    End Class

    Public ReadOnly Property Aggregate() As AggregateClause
        Get
            If _aggregateClause Is Nothing Then
                _aggregateClause = New AggregateClause(Me)
            End If

            Return _aggregateClause
        End Get
    End Property

    Private _aggregateClause As AggregateClause = Nothing
#End Region

    Protected Overrides Function GetInsertCommand() As IDbCommand

        Dim cmd As SqlCommand = New SqlCommand
        cmd.CommandType = CommandType.StoredProcedure
        cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_JOB_TRAFFIC_DETInsert]"

        CreateParameters(cmd)

        Dim p As SqlParameter
        p = cmd.Parameters(Parameters.ROWID.ParameterName)
        p.Direction = ParameterDirection.Output

        Return cmd

    End Function

    Protected Overrides Function GetUpdateCommand() As IDbCommand

        Dim cmd As SqlCommand = New SqlCommand
        cmd.CommandType = CommandType.StoredProcedure
        cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_JOB_TRAFFIC_DETUpdate]"

        CreateParameters(cmd)


        Return cmd

    End Function

    Protected Overrides Function GetDeleteCommand() As IDbCommand

        Dim cmd As SqlCommand = New SqlCommand
        cmd.CommandType = CommandType.StoredProcedure
        cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_JOB_TRAFFIC_DETDelete]"

        Dim p As SqlParameter
        p = cmd.Parameters.Add(Parameters.JOB_COMPONENT_NBR)
        p.SourceColumn = ColumnNames.JOB_COMPONENT_NBR
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.JOB_NUMBER)
        p.SourceColumn = ColumnNames.JOB_NUMBER
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.SEQ_NBR)
        p.SourceColumn = ColumnNames.SEQ_NBR
        p.SourceVersion = DataRowVersion.Current


        Return cmd

    End Function

    Private Sub CreateParameters(ByVal cmd As SqlCommand)

        Dim p As SqlParameter
        p = cmd.Parameters.Add(Parameters.JOB_NUMBER)
        p.SourceColumn = ColumnNames.JOB_NUMBER
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.JOB_COMPONENT_NBR)
        p.SourceColumn = ColumnNames.JOB_COMPONENT_NBR
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.SEQ_NBR)
        p.SourceColumn = ColumnNames.SEQ_NBR
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.FNC_CODE)
        p.SourceColumn = ColumnNames.FNC_CODE
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.FNC_EST)
        p.SourceColumn = ColumnNames.FNC_EST
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.TASK_DESCRIPTION)
        p.SourceColumn = ColumnNames.TASK_DESCRIPTION
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.TASK_START_DATE)
        p.SourceColumn = ColumnNames.TASK_START_DATE
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.JOB_DUE_DATE)
        p.SourceColumn = ColumnNames.JOB_DUE_DATE
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.JOB_REVISED_DATE)
        p.SourceColumn = ColumnNames.JOB_REVISED_DATE
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.DUE_DATE_LOCK)
        p.SourceColumn = ColumnNames.DUE_DATE_LOCK
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.JOB_COMPLETED_DATE)
        p.SourceColumn = ColumnNames.JOB_COMPLETED_DATE
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.JOB_ORDER)
        p.SourceColumn = ColumnNames.JOB_ORDER
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.JOB_DAYS)
        p.SourceColumn = ColumnNames.JOB_DAYS
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.PARENT_TASK)
        p.SourceColumn = ColumnNames.PARENT_TASK
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.FNC_COMMENTS)
        p.SourceColumn = ColumnNames.FNC_COMMENTS
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.DUE_DATE_COMMENTS)
        p.SourceColumn = ColumnNames.DUE_DATE_COMMENTS
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.REV_DATE_COMMENTS)
        p.SourceColumn = ColumnNames.REV_DATE_COMMENTS
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.JOB_HRS)
        p.SourceColumn = ColumnNames.JOB_HRS
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.DUE_TIME)
        p.SourceColumn = ColumnNames.DUE_TIME
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.REVISED_DUE_TIME)
        p.SourceColumn = ColumnNames.REVISED_DUE_TIME
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.TASK_STATUS)
        p.SourceColumn = ColumnNames.TASK_STATUS
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.MILESTONE)
        p.SourceColumn = ColumnNames.MILESTONE
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.TRAFFIC_PHASE_ID)
        p.SourceColumn = ColumnNames.TRAFFIC_PHASE_ID
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.ROWID)
        p.SourceColumn = ColumnNames.ROWID
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.TEMP_COMP_DATE)
        p.SourceColumn = ColumnNames.TEMP_COMP_DATE
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.TEMP_SEQ)
        p.SourceColumn = ColumnNames.TEMP_SEQ
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.COMPLETED_COMMENTS)
        p.SourceColumn = ColumnNames.COMPLETED_COMMENTS
        p.SourceVersion = DataRowVersion.Current

        p = cmd.Parameters.Add(Parameters.TRF_ROLE)
        p.SourceColumn = ColumnNames.TRF_ROLE
        p.SourceVersion = DataRowVersion.Current

        


    End Sub

End Class

