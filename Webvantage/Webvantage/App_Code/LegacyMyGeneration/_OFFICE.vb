
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_BusinessEntity.vbgen
' 
'  ** IMPORTANT  **
'  How to Generate your stored procedures:
' 
'  SQL        = SQL_StoredProcs.vbgen
'  ACCESS     = Access_StoredProcs.vbgen
'  ORACLE     = Oracle_StoredProcs.vbgen
'  FIREBIRD   = FirebirdStoredProcs.vbgen
'  POSTGRESQL = PostgreSQL_StoredProcs.vbgen
'
'  The supporting base class SqlClientEntity is in the Architecture directory in "dOOdads".
'  
'  This object is 'MustInherit' which means you need to inherit from it to be able
'  to instantiate it.  This is very easilly done. You can Override properties and
'  methods in your derived class, this allows you to regenerate this class at any
'  time and not worry about overwriting custom code. 
'
'  NEVER EDIT THIS FILE.
'
'  Public Class YourObject
'    Inherits _YourObject
'
'  End Class
'
'===============================================================================

' Generated by MyGeneration Version # (1.1.5.1)

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _OFFICE
	Inherits SqlClientEntity

		Public Sub New() 
			Me.QuerySource = "OFFICE"
			Me.MappingName = "OFFICE"
		End Sub

	'=================================================================
	'  Public Overrides Sub AddNew()
	'=================================================================
	'
	'=================================================================
	Public Overrides Sub AddNew()
		MyBase.AddNew()
				
	End Sub
	
	Public Overrides Sub FlushData()
		Me._whereClause = nothing
		Me._aggregateClause = nothing		
		MyBase.FlushData()
	End Sub
	
		
	'=================================================================
	'  	Public Function LoadAll() As Boolean
	'=================================================================
	'  Loads all of the records in the database, and sets the currentRow to the first row
	'=================================================================
	Public Function LoadAll() As Boolean
	
		Dim parameters As ListDictionary = Nothing
		
		
    	Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_OFFICELoadAll]", parameters)
		
	End Function

	'=================================================================
	' Public Overridable Function LoadByPrimaryKey()  As Boolean
	'=================================================================
	'  Loads a single row of via the primary key
	'=================================================================
	Public Overridable Function LoadByPrimaryKey(ByVal OFFICE_CODE As String) As Boolean

		Dim parameters As ListDictionary = New ListDictionary()
		parameters.Add(_OFFICE.Parameters.OFFICE_CODE, OFFICE_CODE)

		
		Return MyBase.LoadFromSql("[" + Me.SchemaStoredProcedure + "proc_OFFICELoadByPrimaryKey]", parameters)

	End Function

	#Region "Parameters"
	Protected class Parameters 
		
		Public Shared ReadOnly Property OFFICE_CODE As SqlParameter
			Get
				Return New SqlParameter("@OFFICE_CODE", SqlDbType.VarChar, 4)
			End Get
		End Property
		
		Public Shared ReadOnly Property OFFICE_NAME As SqlParameter
			Get
				Return New SqlParameter("@OFFICE_NAME", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property GLACODE_AR As SqlParameter
			Get
				Return New SqlParameter("@GLACODE_AR", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property GLACODE_AP As SqlParameter
			Get
				Return New SqlParameter("@GLACODE_AP", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property GLACODE_AP_DISC As SqlParameter
			Get
				Return New SqlParameter("@GLACODE_AP_DISC", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property PGLACODE_SALES As SqlParameter
			Get
				Return New SqlParameter("@PGLACODE_SALES", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property PGLACODE_COS As SqlParameter
			Get
				Return New SqlParameter("@PGLACODE_COS", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property PGLACODE_WIP As SqlParameter
			Get
				Return New SqlParameter("@PGLACODE_WIP", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property PGLACODE_DEF_SALES As SqlParameter
			Get
				Return New SqlParameter("@PGLACODE_DEF_SALES", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property PGLACODE_DEF_COS As SqlParameter
			Get
				Return New SqlParameter("@PGLACODE_DEF_COS", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property PGLACODE_ACC_COS As SqlParameter
			Get
				Return New SqlParameter("@PGLACODE_ACC_COS", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property PGLACODE_ACC_AP As SqlParameter
			Get
				Return New SqlParameter("@PGLACODE_ACC_AP", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property PGLACODE_ACC_TAX As SqlParameter
			Get
				Return New SqlParameter("@PGLACODE_ACC_TAX", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property MGLACODE_ACC_AP As SqlParameter
			Get
				Return New SqlParameter("@MGLACODE_ACC_AP", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property MGLACODE_ACC_COS As SqlParameter
			Get
				Return New SqlParameter("@MGLACODE_ACC_COS", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property MGLACODE_COS As SqlParameter
			Get
				Return New SqlParameter("@MGLACODE_COS", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property MGLACODE_DEF_COS As SqlParameter
			Get
				Return New SqlParameter("@MGLACODE_DEF_COS", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property MGLACODE_DEF_SALES As SqlParameter
			Get
				Return New SqlParameter("@MGLACODE_DEF_SALES", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property MGLACODE_SALES As SqlParameter
			Get
				Return New SqlParameter("@MGLACODE_SALES", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property MGLACODE_WIP As SqlParameter
			Get
				Return New SqlParameter("@MGLACODE_WIP", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property MGLACODE_ACC_TAX As SqlParameter
			Get
				Return New SqlParameter("@MGLACODE_ACC_TAX", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property GLACODE_SUSPENSE As SqlParameter
			Get
				Return New SqlParameter("@GLACODE_SUSPENSE", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property GLACODE_STATE As SqlParameter
			Get
				Return New SqlParameter("@GLACODE_STATE", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property GLACODE_COUNTY As SqlParameter
			Get
				Return New SqlParameter("@GLACODE_COUNTY", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property GLACODE_CITY As SqlParameter
			Get
				Return New SqlParameter("@GLACODE_CITY", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property PRD_AB_INCOME As SqlParameter
			Get
				Return New SqlParameter("@PRD_AB_INCOME", SqlDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property MED_AB_INCOME As SqlParameter
			Get
				Return New SqlParameter("@MED_AB_INCOME", SqlDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property GLACODE_VOL_DISC As SqlParameter
			Get
				Return New SqlParameter("@GLACODE_VOL_DISC", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property GLACODE_AP_WH As SqlParameter
			Get
				Return New SqlParameter("@GLACODE_AP_WH", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property INACTIVE_FLAG As SqlParameter
			Get
				Return New SqlParameter("@INACTIVE_FLAG", SqlDbType.SmallInt, 0)
			End Get
		End Property
		
	End Class
	#End Region	

	#Region "ColumnNames"
	Public class ColumnNames
		
        Public Const OFFICE_CODE As String = "OFFICE_CODE"
        Public Const OFFICE_NAME As String = "OFFICE_NAME"
        Public Const GLACODE_AR As String = "GLACODE_AR"
        Public Const GLACODE_AP As String = "GLACODE_AP"
        Public Const GLACODE_AP_DISC As String = "GLACODE_AP_DISC"
        Public Const PGLACODE_SALES As String = "PGLACODE_SALES"
        Public Const PGLACODE_COS As String = "PGLACODE_COS"
        Public Const PGLACODE_WIP As String = "PGLACODE_WIP"
        Public Const PGLACODE_DEF_SALES As String = "PGLACODE_DEF_SALES"
        Public Const PGLACODE_DEF_COS As String = "PGLACODE_DEF_COS"
        Public Const PGLACODE_ACC_COS As String = "PGLACODE_ACC_COS"
        Public Const PGLACODE_ACC_AP As String = "PGLACODE_ACC_AP"
        Public Const PGLACODE_ACC_TAX As String = "PGLACODE_ACC_TAX"
        Public Const MGLACODE_ACC_AP As String = "MGLACODE_ACC_AP"
        Public Const MGLACODE_ACC_COS As String = "MGLACODE_ACC_COS"
        Public Const MGLACODE_COS As String = "MGLACODE_COS"
        Public Const MGLACODE_DEF_COS As String = "MGLACODE_DEF_COS"
        Public Const MGLACODE_DEF_SALES As String = "MGLACODE_DEF_SALES"
        Public Const MGLACODE_SALES As String = "MGLACODE_SALES"
        Public Const MGLACODE_WIP As String = "MGLACODE_WIP"
        Public Const MGLACODE_ACC_TAX As String = "MGLACODE_ACC_TAX"
        Public Const GLACODE_SUSPENSE As String = "GLACODE_SUSPENSE"
        Public Const GLACODE_STATE As String = "GLACODE_STATE"
        Public Const GLACODE_COUNTY As String = "GLACODE_COUNTY"
        Public Const GLACODE_CITY As String = "GLACODE_CITY"
        Public Const PRD_AB_INCOME As String = "PRD_AB_INCOME"
        Public Const MED_AB_INCOME As String = "MED_AB_INCOME"
        Public Const GLACODE_VOL_DISC As String = "GLACODE_VOL_DISC"
        Public Const GLACODE_AP_WH As String = "GLACODE_AP_WH"
        Public Const INACTIVE_FLAG As String = "INACTIVE_FLAG"

		Shared Public Function ToPropertyName(ByVal columnName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(OFFICE_CODE) = _OFFICE.PropertyNames.OFFICE_CODE
				ht(OFFICE_NAME) = _OFFICE.PropertyNames.OFFICE_NAME
				ht(GLACODE_AR) = _OFFICE.PropertyNames.GLACODE_AR
				ht(GLACODE_AP) = _OFFICE.PropertyNames.GLACODE_AP
				ht(GLACODE_AP_DISC) = _OFFICE.PropertyNames.GLACODE_AP_DISC
				ht(PGLACODE_SALES) = _OFFICE.PropertyNames.PGLACODE_SALES
				ht(PGLACODE_COS) = _OFFICE.PropertyNames.PGLACODE_COS
				ht(PGLACODE_WIP) = _OFFICE.PropertyNames.PGLACODE_WIP
				ht(PGLACODE_DEF_SALES) = _OFFICE.PropertyNames.PGLACODE_DEF_SALES
				ht(PGLACODE_DEF_COS) = _OFFICE.PropertyNames.PGLACODE_DEF_COS
				ht(PGLACODE_ACC_COS) = _OFFICE.PropertyNames.PGLACODE_ACC_COS
				ht(PGLACODE_ACC_AP) = _OFFICE.PropertyNames.PGLACODE_ACC_AP
				ht(PGLACODE_ACC_TAX) = _OFFICE.PropertyNames.PGLACODE_ACC_TAX
				ht(MGLACODE_ACC_AP) = _OFFICE.PropertyNames.MGLACODE_ACC_AP
				ht(MGLACODE_ACC_COS) = _OFFICE.PropertyNames.MGLACODE_ACC_COS
				ht(MGLACODE_COS) = _OFFICE.PropertyNames.MGLACODE_COS
				ht(MGLACODE_DEF_COS) = _OFFICE.PropertyNames.MGLACODE_DEF_COS
				ht(MGLACODE_DEF_SALES) = _OFFICE.PropertyNames.MGLACODE_DEF_SALES
				ht(MGLACODE_SALES) = _OFFICE.PropertyNames.MGLACODE_SALES
				ht(MGLACODE_WIP) = _OFFICE.PropertyNames.MGLACODE_WIP
				ht(MGLACODE_ACC_TAX) = _OFFICE.PropertyNames.MGLACODE_ACC_TAX
				ht(GLACODE_SUSPENSE) = _OFFICE.PropertyNames.GLACODE_SUSPENSE
				ht(GLACODE_STATE) = _OFFICE.PropertyNames.GLACODE_STATE
				ht(GLACODE_COUNTY) = _OFFICE.PropertyNames.GLACODE_COUNTY
				ht(GLACODE_CITY) = _OFFICE.PropertyNames.GLACODE_CITY
				ht(PRD_AB_INCOME) = _OFFICE.PropertyNames.PRD_AB_INCOME
				ht(MED_AB_INCOME) = _OFFICE.PropertyNames.MED_AB_INCOME
				ht(GLACODE_VOL_DISC) = _OFFICE.PropertyNames.GLACODE_VOL_DISC
				ht(GLACODE_AP_WH) = _OFFICE.PropertyNames.GLACODE_AP_WH
				ht(INACTIVE_FLAG) = _OFFICE.PropertyNames.INACTIVE_FLAG

			End If
			
			Return CType(ht(columnName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing		 
	End Class
	#End Region	
	
	#Region "PropertyNames"
	Public class PropertyNames
		
        Public Const OFFICE_CODE As String = "OFFICE_CODE"
        Public Const OFFICE_NAME As String = "OFFICE_NAME"
        Public Const GLACODE_AR As String = "GLACODE_AR"
        Public Const GLACODE_AP As String = "GLACODE_AP"
        Public Const GLACODE_AP_DISC As String = "GLACODE_AP_DISC"
        Public Const PGLACODE_SALES As String = "PGLACODE_SALES"
        Public Const PGLACODE_COS As String = "PGLACODE_COS"
        Public Const PGLACODE_WIP As String = "PGLACODE_WIP"
        Public Const PGLACODE_DEF_SALES As String = "PGLACODE_DEF_SALES"
        Public Const PGLACODE_DEF_COS As String = "PGLACODE_DEF_COS"
        Public Const PGLACODE_ACC_COS As String = "PGLACODE_ACC_COS"
        Public Const PGLACODE_ACC_AP As String = "PGLACODE_ACC_AP"
        Public Const PGLACODE_ACC_TAX As String = "PGLACODE_ACC_TAX"
        Public Const MGLACODE_ACC_AP As String = "MGLACODE_ACC_AP"
        Public Const MGLACODE_ACC_COS As String = "MGLACODE_ACC_COS"
        Public Const MGLACODE_COS As String = "MGLACODE_COS"
        Public Const MGLACODE_DEF_COS As String = "MGLACODE_DEF_COS"
        Public Const MGLACODE_DEF_SALES As String = "MGLACODE_DEF_SALES"
        Public Const MGLACODE_SALES As String = "MGLACODE_SALES"
        Public Const MGLACODE_WIP As String = "MGLACODE_WIP"
        Public Const MGLACODE_ACC_TAX As String = "MGLACODE_ACC_TAX"
        Public Const GLACODE_SUSPENSE As String = "GLACODE_SUSPENSE"
        Public Const GLACODE_STATE As String = "GLACODE_STATE"
        Public Const GLACODE_COUNTY As String = "GLACODE_COUNTY"
        Public Const GLACODE_CITY As String = "GLACODE_CITY"
        Public Const PRD_AB_INCOME As String = "PRD_AB_INCOME"
        Public Const MED_AB_INCOME As String = "MED_AB_INCOME"
        Public Const GLACODE_VOL_DISC As String = "GLACODE_VOL_DISC"
        Public Const GLACODE_AP_WH As String = "GLACODE_AP_WH"
        Public Const INACTIVE_FLAG As String = "INACTIVE_FLAG"

		Shared Public Function ToColumnName(ByVal propertyName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(OFFICE_CODE) = _OFFICE.ColumnNames.OFFICE_CODE
				ht(OFFICE_NAME) = _OFFICE.ColumnNames.OFFICE_NAME
				ht(GLACODE_AR) = _OFFICE.ColumnNames.GLACODE_AR
				ht(GLACODE_AP) = _OFFICE.ColumnNames.GLACODE_AP
				ht(GLACODE_AP_DISC) = _OFFICE.ColumnNames.GLACODE_AP_DISC
				ht(PGLACODE_SALES) = _OFFICE.ColumnNames.PGLACODE_SALES
				ht(PGLACODE_COS) = _OFFICE.ColumnNames.PGLACODE_COS
				ht(PGLACODE_WIP) = _OFFICE.ColumnNames.PGLACODE_WIP
				ht(PGLACODE_DEF_SALES) = _OFFICE.ColumnNames.PGLACODE_DEF_SALES
				ht(PGLACODE_DEF_COS) = _OFFICE.ColumnNames.PGLACODE_DEF_COS
				ht(PGLACODE_ACC_COS) = _OFFICE.ColumnNames.PGLACODE_ACC_COS
				ht(PGLACODE_ACC_AP) = _OFFICE.ColumnNames.PGLACODE_ACC_AP
				ht(PGLACODE_ACC_TAX) = _OFFICE.ColumnNames.PGLACODE_ACC_TAX
				ht(MGLACODE_ACC_AP) = _OFFICE.ColumnNames.MGLACODE_ACC_AP
				ht(MGLACODE_ACC_COS) = _OFFICE.ColumnNames.MGLACODE_ACC_COS
				ht(MGLACODE_COS) = _OFFICE.ColumnNames.MGLACODE_COS
				ht(MGLACODE_DEF_COS) = _OFFICE.ColumnNames.MGLACODE_DEF_COS
				ht(MGLACODE_DEF_SALES) = _OFFICE.ColumnNames.MGLACODE_DEF_SALES
				ht(MGLACODE_SALES) = _OFFICE.ColumnNames.MGLACODE_SALES
				ht(MGLACODE_WIP) = _OFFICE.ColumnNames.MGLACODE_WIP
				ht(MGLACODE_ACC_TAX) = _OFFICE.ColumnNames.MGLACODE_ACC_TAX
				ht(GLACODE_SUSPENSE) = _OFFICE.ColumnNames.GLACODE_SUSPENSE
				ht(GLACODE_STATE) = _OFFICE.ColumnNames.GLACODE_STATE
				ht(GLACODE_COUNTY) = _OFFICE.ColumnNames.GLACODE_COUNTY
				ht(GLACODE_CITY) = _OFFICE.ColumnNames.GLACODE_CITY
				ht(PRD_AB_INCOME) = _OFFICE.ColumnNames.PRD_AB_INCOME
				ht(MED_AB_INCOME) = _OFFICE.ColumnNames.MED_AB_INCOME
				ht(GLACODE_VOL_DISC) = _OFFICE.ColumnNames.GLACODE_VOL_DISC
				ht(GLACODE_AP_WH) = _OFFICE.ColumnNames.GLACODE_AP_WH
				ht(INACTIVE_FLAG) = _OFFICE.ColumnNames.INACTIVE_FLAG

			End If
			
			Return CType(ht(propertyName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing
		
	End Class
	#End Region	
	
	#Region "StringPropertyNames"
	Public class StringPropertyNames
		
        Public Const OFFICE_CODE As String = "s_OFFICE_CODE"
        Public Const OFFICE_NAME As String = "s_OFFICE_NAME"
        Public Const GLACODE_AR As String = "s_GLACODE_AR"
        Public Const GLACODE_AP As String = "s_GLACODE_AP"
        Public Const GLACODE_AP_DISC As String = "s_GLACODE_AP_DISC"
        Public Const PGLACODE_SALES As String = "s_PGLACODE_SALES"
        Public Const PGLACODE_COS As String = "s_PGLACODE_COS"
        Public Const PGLACODE_WIP As String = "s_PGLACODE_WIP"
        Public Const PGLACODE_DEF_SALES As String = "s_PGLACODE_DEF_SALES"
        Public Const PGLACODE_DEF_COS As String = "s_PGLACODE_DEF_COS"
        Public Const PGLACODE_ACC_COS As String = "s_PGLACODE_ACC_COS"
        Public Const PGLACODE_ACC_AP As String = "s_PGLACODE_ACC_AP"
        Public Const PGLACODE_ACC_TAX As String = "s_PGLACODE_ACC_TAX"
        Public Const MGLACODE_ACC_AP As String = "s_MGLACODE_ACC_AP"
        Public Const MGLACODE_ACC_COS As String = "s_MGLACODE_ACC_COS"
        Public Const MGLACODE_COS As String = "s_MGLACODE_COS"
        Public Const MGLACODE_DEF_COS As String = "s_MGLACODE_DEF_COS"
        Public Const MGLACODE_DEF_SALES As String = "s_MGLACODE_DEF_SALES"
        Public Const MGLACODE_SALES As String = "s_MGLACODE_SALES"
        Public Const MGLACODE_WIP As String = "s_MGLACODE_WIP"
        Public Const MGLACODE_ACC_TAX As String = "s_MGLACODE_ACC_TAX"
        Public Const GLACODE_SUSPENSE As String = "s_GLACODE_SUSPENSE"
        Public Const GLACODE_STATE As String = "s_GLACODE_STATE"
        Public Const GLACODE_COUNTY As String = "s_GLACODE_COUNTY"
        Public Const GLACODE_CITY As String = "s_GLACODE_CITY"
        Public Const PRD_AB_INCOME As String = "s_PRD_AB_INCOME"
        Public Const MED_AB_INCOME As String = "s_MED_AB_INCOME"
        Public Const GLACODE_VOL_DISC As String = "s_GLACODE_VOL_DISC"
        Public Const GLACODE_AP_WH As String = "s_GLACODE_AP_WH"
        Public Const INACTIVE_FLAG As String = "s_INACTIVE_FLAG"

	End Class
	#End Region		
	
	#Region "Properties" 
		Public Overridable Property OFFICE_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.OFFICE_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.OFFICE_CODE, Value)
			End Set
		End Property

		Public Overridable Property OFFICE_NAME As String
			Get
				Return MyBase.GetString(ColumnNames.OFFICE_NAME)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.OFFICE_NAME, Value)
			End Set
		End Property

		Public Overridable Property GLACODE_AR As String
			Get
				Return MyBase.GetString(ColumnNames.GLACODE_AR)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.GLACODE_AR, Value)
			End Set
		End Property

		Public Overridable Property GLACODE_AP As String
			Get
				Return MyBase.GetString(ColumnNames.GLACODE_AP)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.GLACODE_AP, Value)
			End Set
		End Property

		Public Overridable Property GLACODE_AP_DISC As String
			Get
				Return MyBase.GetString(ColumnNames.GLACODE_AP_DISC)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.GLACODE_AP_DISC, Value)
			End Set
		End Property

		Public Overridable Property PGLACODE_SALES As String
			Get
				Return MyBase.GetString(ColumnNames.PGLACODE_SALES)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.PGLACODE_SALES, Value)
			End Set
		End Property

		Public Overridable Property PGLACODE_COS As String
			Get
				Return MyBase.GetString(ColumnNames.PGLACODE_COS)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.PGLACODE_COS, Value)
			End Set
		End Property

		Public Overridable Property PGLACODE_WIP As String
			Get
				Return MyBase.GetString(ColumnNames.PGLACODE_WIP)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.PGLACODE_WIP, Value)
			End Set
		End Property

		Public Overridable Property PGLACODE_DEF_SALES As String
			Get
				Return MyBase.GetString(ColumnNames.PGLACODE_DEF_SALES)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.PGLACODE_DEF_SALES, Value)
			End Set
		End Property

		Public Overridable Property PGLACODE_DEF_COS As String
			Get
				Return MyBase.GetString(ColumnNames.PGLACODE_DEF_COS)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.PGLACODE_DEF_COS, Value)
			End Set
		End Property

		Public Overridable Property PGLACODE_ACC_COS As String
			Get
				Return MyBase.GetString(ColumnNames.PGLACODE_ACC_COS)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.PGLACODE_ACC_COS, Value)
			End Set
		End Property

		Public Overridable Property PGLACODE_ACC_AP As String
			Get
				Return MyBase.GetString(ColumnNames.PGLACODE_ACC_AP)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.PGLACODE_ACC_AP, Value)
			End Set
		End Property

		Public Overridable Property PGLACODE_ACC_TAX As String
			Get
				Return MyBase.GetString(ColumnNames.PGLACODE_ACC_TAX)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.PGLACODE_ACC_TAX, Value)
			End Set
		End Property

		Public Overridable Property MGLACODE_ACC_AP As String
			Get
				Return MyBase.GetString(ColumnNames.MGLACODE_ACC_AP)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.MGLACODE_ACC_AP, Value)
			End Set
		End Property

		Public Overridable Property MGLACODE_ACC_COS As String
			Get
				Return MyBase.GetString(ColumnNames.MGLACODE_ACC_COS)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.MGLACODE_ACC_COS, Value)
			End Set
		End Property

		Public Overridable Property MGLACODE_COS As String
			Get
				Return MyBase.GetString(ColumnNames.MGLACODE_COS)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.MGLACODE_COS, Value)
			End Set
		End Property

		Public Overridable Property MGLACODE_DEF_COS As String
			Get
				Return MyBase.GetString(ColumnNames.MGLACODE_DEF_COS)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.MGLACODE_DEF_COS, Value)
			End Set
		End Property

		Public Overridable Property MGLACODE_DEF_SALES As String
			Get
				Return MyBase.GetString(ColumnNames.MGLACODE_DEF_SALES)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.MGLACODE_DEF_SALES, Value)
			End Set
		End Property

		Public Overridable Property MGLACODE_SALES As String
			Get
				Return MyBase.GetString(ColumnNames.MGLACODE_SALES)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.MGLACODE_SALES, Value)
			End Set
		End Property

		Public Overridable Property MGLACODE_WIP As String
			Get
				Return MyBase.GetString(ColumnNames.MGLACODE_WIP)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.MGLACODE_WIP, Value)
			End Set
		End Property

		Public Overridable Property MGLACODE_ACC_TAX As String
			Get
				Return MyBase.GetString(ColumnNames.MGLACODE_ACC_TAX)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.MGLACODE_ACC_TAX, Value)
			End Set
		End Property

		Public Overridable Property GLACODE_SUSPENSE As String
			Get
				Return MyBase.GetString(ColumnNames.GLACODE_SUSPENSE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.GLACODE_SUSPENSE, Value)
			End Set
		End Property

		Public Overridable Property GLACODE_STATE As String
			Get
				Return MyBase.GetString(ColumnNames.GLACODE_STATE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.GLACODE_STATE, Value)
			End Set
		End Property

		Public Overridable Property GLACODE_COUNTY As String
			Get
				Return MyBase.GetString(ColumnNames.GLACODE_COUNTY)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.GLACODE_COUNTY, Value)
			End Set
		End Property

		Public Overridable Property GLACODE_CITY As String
			Get
				Return MyBase.GetString(ColumnNames.GLACODE_CITY)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.GLACODE_CITY, Value)
			End Set
		End Property

		Public Overridable Property PRD_AB_INCOME As Short
			Get
				Return MyBase.GetShort(ColumnNames.PRD_AB_INCOME)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.PRD_AB_INCOME, Value)
			End Set
		End Property

		Public Overridable Property MED_AB_INCOME As Short
			Get
				Return MyBase.GetShort(ColumnNames.MED_AB_INCOME)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.MED_AB_INCOME, Value)
			End Set
		End Property

		Public Overridable Property GLACODE_VOL_DISC As String
			Get
				Return MyBase.GetString(ColumnNames.GLACODE_VOL_DISC)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.GLACODE_VOL_DISC, Value)
			End Set
		End Property

		Public Overridable Property GLACODE_AP_WH As String
			Get
				Return MyBase.GetString(ColumnNames.GLACODE_AP_WH)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.GLACODE_AP_WH, Value)
			End Set
		End Property

		Public Overridable Property INACTIVE_FLAG As Short
			Get
				Return MyBase.GetShort(ColumnNames.INACTIVE_FLAG)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.INACTIVE_FLAG, Value)
			End Set
		End Property


	#End Region  
	
	#Region "String Properties" 

		Public Overridable Property s_OFFICE_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.OFFICE_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.OFFICE_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.OFFICE_CODE)
				Else
					Me.OFFICE_CODE = MyBase.SetStringAsString(ColumnNames.OFFICE_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_OFFICE_NAME As String
			Get
				If Me.IsColumnNull(ColumnNames.OFFICE_NAME) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.OFFICE_NAME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.OFFICE_NAME)
				Else
					Me.OFFICE_NAME = MyBase.SetStringAsString(ColumnNames.OFFICE_NAME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_GLACODE_AR As String
			Get
				If Me.IsColumnNull(ColumnNames.GLACODE_AR) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.GLACODE_AR)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.GLACODE_AR)
				Else
					Me.GLACODE_AR = MyBase.SetStringAsString(ColumnNames.GLACODE_AR, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_GLACODE_AP As String
			Get
				If Me.IsColumnNull(ColumnNames.GLACODE_AP) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.GLACODE_AP)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.GLACODE_AP)
				Else
					Me.GLACODE_AP = MyBase.SetStringAsString(ColumnNames.GLACODE_AP, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_GLACODE_AP_DISC As String
			Get
				If Me.IsColumnNull(ColumnNames.GLACODE_AP_DISC) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.GLACODE_AP_DISC)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.GLACODE_AP_DISC)
				Else
					Me.GLACODE_AP_DISC = MyBase.SetStringAsString(ColumnNames.GLACODE_AP_DISC, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PGLACODE_SALES As String
			Get
				If Me.IsColumnNull(ColumnNames.PGLACODE_SALES) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.PGLACODE_SALES)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PGLACODE_SALES)
				Else
					Me.PGLACODE_SALES = MyBase.SetStringAsString(ColumnNames.PGLACODE_SALES, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PGLACODE_COS As String
			Get
				If Me.IsColumnNull(ColumnNames.PGLACODE_COS) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.PGLACODE_COS)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PGLACODE_COS)
				Else
					Me.PGLACODE_COS = MyBase.SetStringAsString(ColumnNames.PGLACODE_COS, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PGLACODE_WIP As String
			Get
				If Me.IsColumnNull(ColumnNames.PGLACODE_WIP) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.PGLACODE_WIP)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PGLACODE_WIP)
				Else
					Me.PGLACODE_WIP = MyBase.SetStringAsString(ColumnNames.PGLACODE_WIP, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PGLACODE_DEF_SALES As String
			Get
				If Me.IsColumnNull(ColumnNames.PGLACODE_DEF_SALES) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.PGLACODE_DEF_SALES)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PGLACODE_DEF_SALES)
				Else
					Me.PGLACODE_DEF_SALES = MyBase.SetStringAsString(ColumnNames.PGLACODE_DEF_SALES, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PGLACODE_DEF_COS As String
			Get
				If Me.IsColumnNull(ColumnNames.PGLACODE_DEF_COS) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.PGLACODE_DEF_COS)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PGLACODE_DEF_COS)
				Else
					Me.PGLACODE_DEF_COS = MyBase.SetStringAsString(ColumnNames.PGLACODE_DEF_COS, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PGLACODE_ACC_COS As String
			Get
				If Me.IsColumnNull(ColumnNames.PGLACODE_ACC_COS) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.PGLACODE_ACC_COS)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PGLACODE_ACC_COS)
				Else
					Me.PGLACODE_ACC_COS = MyBase.SetStringAsString(ColumnNames.PGLACODE_ACC_COS, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PGLACODE_ACC_AP As String
			Get
				If Me.IsColumnNull(ColumnNames.PGLACODE_ACC_AP) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.PGLACODE_ACC_AP)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PGLACODE_ACC_AP)
				Else
					Me.PGLACODE_ACC_AP = MyBase.SetStringAsString(ColumnNames.PGLACODE_ACC_AP, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PGLACODE_ACC_TAX As String
			Get
				If Me.IsColumnNull(ColumnNames.PGLACODE_ACC_TAX) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.PGLACODE_ACC_TAX)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PGLACODE_ACC_TAX)
				Else
					Me.PGLACODE_ACC_TAX = MyBase.SetStringAsString(ColumnNames.PGLACODE_ACC_TAX, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_MGLACODE_ACC_AP As String
			Get
				If Me.IsColumnNull(ColumnNames.MGLACODE_ACC_AP) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.MGLACODE_ACC_AP)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.MGLACODE_ACC_AP)
				Else
					Me.MGLACODE_ACC_AP = MyBase.SetStringAsString(ColumnNames.MGLACODE_ACC_AP, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_MGLACODE_ACC_COS As String
			Get
				If Me.IsColumnNull(ColumnNames.MGLACODE_ACC_COS) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.MGLACODE_ACC_COS)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.MGLACODE_ACC_COS)
				Else
					Me.MGLACODE_ACC_COS = MyBase.SetStringAsString(ColumnNames.MGLACODE_ACC_COS, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_MGLACODE_COS As String
			Get
				If Me.IsColumnNull(ColumnNames.MGLACODE_COS) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.MGLACODE_COS)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.MGLACODE_COS)
				Else
					Me.MGLACODE_COS = MyBase.SetStringAsString(ColumnNames.MGLACODE_COS, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_MGLACODE_DEF_COS As String
			Get
				If Me.IsColumnNull(ColumnNames.MGLACODE_DEF_COS) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.MGLACODE_DEF_COS)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.MGLACODE_DEF_COS)
				Else
					Me.MGLACODE_DEF_COS = MyBase.SetStringAsString(ColumnNames.MGLACODE_DEF_COS, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_MGLACODE_DEF_SALES As String
			Get
				If Me.IsColumnNull(ColumnNames.MGLACODE_DEF_SALES) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.MGLACODE_DEF_SALES)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.MGLACODE_DEF_SALES)
				Else
					Me.MGLACODE_DEF_SALES = MyBase.SetStringAsString(ColumnNames.MGLACODE_DEF_SALES, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_MGLACODE_SALES As String
			Get
				If Me.IsColumnNull(ColumnNames.MGLACODE_SALES) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.MGLACODE_SALES)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.MGLACODE_SALES)
				Else
					Me.MGLACODE_SALES = MyBase.SetStringAsString(ColumnNames.MGLACODE_SALES, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_MGLACODE_WIP As String
			Get
				If Me.IsColumnNull(ColumnNames.MGLACODE_WIP) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.MGLACODE_WIP)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.MGLACODE_WIP)
				Else
					Me.MGLACODE_WIP = MyBase.SetStringAsString(ColumnNames.MGLACODE_WIP, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_MGLACODE_ACC_TAX As String
			Get
				If Me.IsColumnNull(ColumnNames.MGLACODE_ACC_TAX) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.MGLACODE_ACC_TAX)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.MGLACODE_ACC_TAX)
				Else
					Me.MGLACODE_ACC_TAX = MyBase.SetStringAsString(ColumnNames.MGLACODE_ACC_TAX, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_GLACODE_SUSPENSE As String
			Get
				If Me.IsColumnNull(ColumnNames.GLACODE_SUSPENSE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.GLACODE_SUSPENSE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.GLACODE_SUSPENSE)
				Else
					Me.GLACODE_SUSPENSE = MyBase.SetStringAsString(ColumnNames.GLACODE_SUSPENSE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_GLACODE_STATE As String
			Get
				If Me.IsColumnNull(ColumnNames.GLACODE_STATE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.GLACODE_STATE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.GLACODE_STATE)
				Else
					Me.GLACODE_STATE = MyBase.SetStringAsString(ColumnNames.GLACODE_STATE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_GLACODE_COUNTY As String
			Get
				If Me.IsColumnNull(ColumnNames.GLACODE_COUNTY) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.GLACODE_COUNTY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.GLACODE_COUNTY)
				Else
					Me.GLACODE_COUNTY = MyBase.SetStringAsString(ColumnNames.GLACODE_COUNTY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_GLACODE_CITY As String
			Get
				If Me.IsColumnNull(ColumnNames.GLACODE_CITY) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.GLACODE_CITY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.GLACODE_CITY)
				Else
					Me.GLACODE_CITY = MyBase.SetStringAsString(ColumnNames.GLACODE_CITY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PRD_AB_INCOME As String
			Get
				If Me.IsColumnNull(ColumnNames.PRD_AB_INCOME) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.PRD_AB_INCOME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PRD_AB_INCOME)
				Else
					Me.PRD_AB_INCOME = MyBase.SetShortAsString(ColumnNames.PRD_AB_INCOME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_MED_AB_INCOME As String
			Get
				If Me.IsColumnNull(ColumnNames.MED_AB_INCOME) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.MED_AB_INCOME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.MED_AB_INCOME)
				Else
					Me.MED_AB_INCOME = MyBase.SetShortAsString(ColumnNames.MED_AB_INCOME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_GLACODE_VOL_DISC As String
			Get
				If Me.IsColumnNull(ColumnNames.GLACODE_VOL_DISC) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.GLACODE_VOL_DISC)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.GLACODE_VOL_DISC)
				Else
					Me.GLACODE_VOL_DISC = MyBase.SetStringAsString(ColumnNames.GLACODE_VOL_DISC, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_GLACODE_AP_WH As String
			Get
				If Me.IsColumnNull(ColumnNames.GLACODE_AP_WH) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.GLACODE_AP_WH)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.GLACODE_AP_WH)
				Else
					Me.GLACODE_AP_WH = MyBase.SetStringAsString(ColumnNames.GLACODE_AP_WH, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_INACTIVE_FLAG As String
			Get
				If Me.IsColumnNull(ColumnNames.INACTIVE_FLAG) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.INACTIVE_FLAG)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.INACTIVE_FLAG)
				Else
					Me.INACTIVE_FLAG = MyBase.SetShortAsString(ColumnNames.INACTIVE_FLAG, Value)
				End If
			End Set
		End Property


	#End Region  	

	#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffWhereParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffWhereParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "TearOff's"
		Public class TearOffWhereParameter

			Public Sub New(ByVal clause As WhereClause)
				Me._clause = clause
			End Sub
		
	
			Public ReadOnly Property OFFICE_CODE() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.OFFICE_CODE, Parameters.OFFICE_CODE)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property OFFICE_NAME() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.OFFICE_NAME, Parameters.OFFICE_NAME)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property GLACODE_AR() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.GLACODE_AR, Parameters.GLACODE_AR)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property GLACODE_AP() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.GLACODE_AP, Parameters.GLACODE_AP)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property GLACODE_AP_DISC() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.GLACODE_AP_DISC, Parameters.GLACODE_AP_DISC)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property PGLACODE_SALES() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.PGLACODE_SALES, Parameters.PGLACODE_SALES)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property PGLACODE_COS() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.PGLACODE_COS, Parameters.PGLACODE_COS)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property PGLACODE_WIP() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.PGLACODE_WIP, Parameters.PGLACODE_WIP)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property PGLACODE_DEF_SALES() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.PGLACODE_DEF_SALES, Parameters.PGLACODE_DEF_SALES)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property PGLACODE_DEF_COS() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.PGLACODE_DEF_COS, Parameters.PGLACODE_DEF_COS)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property PGLACODE_ACC_COS() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.PGLACODE_ACC_COS, Parameters.PGLACODE_ACC_COS)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property PGLACODE_ACC_AP() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.PGLACODE_ACC_AP, Parameters.PGLACODE_ACC_AP)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property PGLACODE_ACC_TAX() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.PGLACODE_ACC_TAX, Parameters.PGLACODE_ACC_TAX)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property MGLACODE_ACC_AP() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.MGLACODE_ACC_AP, Parameters.MGLACODE_ACC_AP)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property MGLACODE_ACC_COS() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.MGLACODE_ACC_COS, Parameters.MGLACODE_ACC_COS)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property MGLACODE_COS() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.MGLACODE_COS, Parameters.MGLACODE_COS)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property MGLACODE_DEF_COS() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.MGLACODE_DEF_COS, Parameters.MGLACODE_DEF_COS)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property MGLACODE_DEF_SALES() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.MGLACODE_DEF_SALES, Parameters.MGLACODE_DEF_SALES)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property MGLACODE_SALES() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.MGLACODE_SALES, Parameters.MGLACODE_SALES)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property MGLACODE_WIP() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.MGLACODE_WIP, Parameters.MGLACODE_WIP)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property MGLACODE_ACC_TAX() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.MGLACODE_ACC_TAX, Parameters.MGLACODE_ACC_TAX)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property GLACODE_SUSPENSE() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.GLACODE_SUSPENSE, Parameters.GLACODE_SUSPENSE)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property GLACODE_STATE() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.GLACODE_STATE, Parameters.GLACODE_STATE)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property GLACODE_COUNTY() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.GLACODE_COUNTY, Parameters.GLACODE_COUNTY)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property GLACODE_CITY() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.GLACODE_CITY, Parameters.GLACODE_CITY)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property PRD_AB_INCOME() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.PRD_AB_INCOME, Parameters.PRD_AB_INCOME)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property MED_AB_INCOME() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.MED_AB_INCOME, Parameters.MED_AB_INCOME)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property GLACODE_VOL_DISC() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.GLACODE_VOL_DISC, Parameters.GLACODE_VOL_DISC)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property GLACODE_AP_WH() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.GLACODE_AP_WH, Parameters.GLACODE_AP_WH)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property

			Public ReadOnly Property INACTIVE_FLAG() As WhereParameter
				Get
					Dim where As WhereParameter = New WhereParameter(ColumnNames.INACTIVE_FLAG, Parameters.INACTIVE_FLAG)
					Me._clause._entity.Query.AddWhereParemeter(where)
					Return where
				End Get
			End Property


			Private _clause as WhereClause
		End Class
		#End Region	

		Public ReadOnly Property OFFICE_CODE() As WhereParameter 
			Get
				If _OFFICE_CODE_W Is Nothing Then
					_OFFICE_CODE_W = TearOff.OFFICE_CODE
				End If
				Return _OFFICE_CODE_W
			End Get
		End Property

		Public ReadOnly Property OFFICE_NAME() As WhereParameter 
			Get
				If _OFFICE_NAME_W Is Nothing Then
					_OFFICE_NAME_W = TearOff.OFFICE_NAME
				End If
				Return _OFFICE_NAME_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_AR() As WhereParameter 
			Get
				If _GLACODE_AR_W Is Nothing Then
					_GLACODE_AR_W = TearOff.GLACODE_AR
				End If
				Return _GLACODE_AR_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_AP() As WhereParameter 
			Get
				If _GLACODE_AP_W Is Nothing Then
					_GLACODE_AP_W = TearOff.GLACODE_AP
				End If
				Return _GLACODE_AP_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_AP_DISC() As WhereParameter 
			Get
				If _GLACODE_AP_DISC_W Is Nothing Then
					_GLACODE_AP_DISC_W = TearOff.GLACODE_AP_DISC
				End If
				Return _GLACODE_AP_DISC_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_SALES() As WhereParameter 
			Get
				If _PGLACODE_SALES_W Is Nothing Then
					_PGLACODE_SALES_W = TearOff.PGLACODE_SALES
				End If
				Return _PGLACODE_SALES_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_COS() As WhereParameter 
			Get
				If _PGLACODE_COS_W Is Nothing Then
					_PGLACODE_COS_W = TearOff.PGLACODE_COS
				End If
				Return _PGLACODE_COS_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_WIP() As WhereParameter 
			Get
				If _PGLACODE_WIP_W Is Nothing Then
					_PGLACODE_WIP_W = TearOff.PGLACODE_WIP
				End If
				Return _PGLACODE_WIP_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_DEF_SALES() As WhereParameter 
			Get
				If _PGLACODE_DEF_SALES_W Is Nothing Then
					_PGLACODE_DEF_SALES_W = TearOff.PGLACODE_DEF_SALES
				End If
				Return _PGLACODE_DEF_SALES_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_DEF_COS() As WhereParameter 
			Get
				If _PGLACODE_DEF_COS_W Is Nothing Then
					_PGLACODE_DEF_COS_W = TearOff.PGLACODE_DEF_COS
				End If
				Return _PGLACODE_DEF_COS_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_ACC_COS() As WhereParameter 
			Get
				If _PGLACODE_ACC_COS_W Is Nothing Then
					_PGLACODE_ACC_COS_W = TearOff.PGLACODE_ACC_COS
				End If
				Return _PGLACODE_ACC_COS_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_ACC_AP() As WhereParameter 
			Get
				If _PGLACODE_ACC_AP_W Is Nothing Then
					_PGLACODE_ACC_AP_W = TearOff.PGLACODE_ACC_AP
				End If
				Return _PGLACODE_ACC_AP_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_ACC_TAX() As WhereParameter 
			Get
				If _PGLACODE_ACC_TAX_W Is Nothing Then
					_PGLACODE_ACC_TAX_W = TearOff.PGLACODE_ACC_TAX
				End If
				Return _PGLACODE_ACC_TAX_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_ACC_AP() As WhereParameter 
			Get
				If _MGLACODE_ACC_AP_W Is Nothing Then
					_MGLACODE_ACC_AP_W = TearOff.MGLACODE_ACC_AP
				End If
				Return _MGLACODE_ACC_AP_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_ACC_COS() As WhereParameter 
			Get
				If _MGLACODE_ACC_COS_W Is Nothing Then
					_MGLACODE_ACC_COS_W = TearOff.MGLACODE_ACC_COS
				End If
				Return _MGLACODE_ACC_COS_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_COS() As WhereParameter 
			Get
				If _MGLACODE_COS_W Is Nothing Then
					_MGLACODE_COS_W = TearOff.MGLACODE_COS
				End If
				Return _MGLACODE_COS_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_DEF_COS() As WhereParameter 
			Get
				If _MGLACODE_DEF_COS_W Is Nothing Then
					_MGLACODE_DEF_COS_W = TearOff.MGLACODE_DEF_COS
				End If
				Return _MGLACODE_DEF_COS_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_DEF_SALES() As WhereParameter 
			Get
				If _MGLACODE_DEF_SALES_W Is Nothing Then
					_MGLACODE_DEF_SALES_W = TearOff.MGLACODE_DEF_SALES
				End If
				Return _MGLACODE_DEF_SALES_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_SALES() As WhereParameter 
			Get
				If _MGLACODE_SALES_W Is Nothing Then
					_MGLACODE_SALES_W = TearOff.MGLACODE_SALES
				End If
				Return _MGLACODE_SALES_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_WIP() As WhereParameter 
			Get
				If _MGLACODE_WIP_W Is Nothing Then
					_MGLACODE_WIP_W = TearOff.MGLACODE_WIP
				End If
				Return _MGLACODE_WIP_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_ACC_TAX() As WhereParameter 
			Get
				If _MGLACODE_ACC_TAX_W Is Nothing Then
					_MGLACODE_ACC_TAX_W = TearOff.MGLACODE_ACC_TAX
				End If
				Return _MGLACODE_ACC_TAX_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_SUSPENSE() As WhereParameter 
			Get
				If _GLACODE_SUSPENSE_W Is Nothing Then
					_GLACODE_SUSPENSE_W = TearOff.GLACODE_SUSPENSE
				End If
				Return _GLACODE_SUSPENSE_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_STATE() As WhereParameter 
			Get
				If _GLACODE_STATE_W Is Nothing Then
					_GLACODE_STATE_W = TearOff.GLACODE_STATE
				End If
				Return _GLACODE_STATE_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_COUNTY() As WhereParameter 
			Get
				If _GLACODE_COUNTY_W Is Nothing Then
					_GLACODE_COUNTY_W = TearOff.GLACODE_COUNTY
				End If
				Return _GLACODE_COUNTY_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_CITY() As WhereParameter 
			Get
				If _GLACODE_CITY_W Is Nothing Then
					_GLACODE_CITY_W = TearOff.GLACODE_CITY
				End If
				Return _GLACODE_CITY_W
			End Get
		End Property

		Public ReadOnly Property PRD_AB_INCOME() As WhereParameter 
			Get
				If _PRD_AB_INCOME_W Is Nothing Then
					_PRD_AB_INCOME_W = TearOff.PRD_AB_INCOME
				End If
				Return _PRD_AB_INCOME_W
			End Get
		End Property

		Public ReadOnly Property MED_AB_INCOME() As WhereParameter 
			Get
				If _MED_AB_INCOME_W Is Nothing Then
					_MED_AB_INCOME_W = TearOff.MED_AB_INCOME
				End If
				Return _MED_AB_INCOME_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_VOL_DISC() As WhereParameter 
			Get
				If _GLACODE_VOL_DISC_W Is Nothing Then
					_GLACODE_VOL_DISC_W = TearOff.GLACODE_VOL_DISC
				End If
				Return _GLACODE_VOL_DISC_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_AP_WH() As WhereParameter 
			Get
				If _GLACODE_AP_WH_W Is Nothing Then
					_GLACODE_AP_WH_W = TearOff.GLACODE_AP_WH
				End If
				Return _GLACODE_AP_WH_W
			End Get
		End Property

		Public ReadOnly Property INACTIVE_FLAG() As WhereParameter 
			Get
				If _INACTIVE_FLAG_W Is Nothing Then
					_INACTIVE_FLAG_W = TearOff.INACTIVE_FLAG
				End If
				Return _INACTIVE_FLAG_W
			End Get
		End Property

		Private _OFFICE_CODE_W As WhereParameter = Nothing
		Private _OFFICE_NAME_W As WhereParameter = Nothing
		Private _GLACODE_AR_W As WhereParameter = Nothing
		Private _GLACODE_AP_W As WhereParameter = Nothing
		Private _GLACODE_AP_DISC_W As WhereParameter = Nothing
		Private _PGLACODE_SALES_W As WhereParameter = Nothing
		Private _PGLACODE_COS_W As WhereParameter = Nothing
		Private _PGLACODE_WIP_W As WhereParameter = Nothing
		Private _PGLACODE_DEF_SALES_W As WhereParameter = Nothing
		Private _PGLACODE_DEF_COS_W As WhereParameter = Nothing
		Private _PGLACODE_ACC_COS_W As WhereParameter = Nothing
		Private _PGLACODE_ACC_AP_W As WhereParameter = Nothing
		Private _PGLACODE_ACC_TAX_W As WhereParameter = Nothing
		Private _MGLACODE_ACC_AP_W As WhereParameter = Nothing
		Private _MGLACODE_ACC_COS_W As WhereParameter = Nothing
		Private _MGLACODE_COS_W As WhereParameter = Nothing
		Private _MGLACODE_DEF_COS_W As WhereParameter = Nothing
		Private _MGLACODE_DEF_SALES_W As WhereParameter = Nothing
		Private _MGLACODE_SALES_W As WhereParameter = Nothing
		Private _MGLACODE_WIP_W As WhereParameter = Nothing
		Private _MGLACODE_ACC_TAX_W As WhereParameter = Nothing
		Private _GLACODE_SUSPENSE_W As WhereParameter = Nothing
		Private _GLACODE_STATE_W As WhereParameter = Nothing
		Private _GLACODE_COUNTY_W As WhereParameter = Nothing
		Private _GLACODE_CITY_W As WhereParameter = Nothing
		Private _PRD_AB_INCOME_W As WhereParameter = Nothing
		Private _MED_AB_INCOME_W As WhereParameter = Nothing
		Private _GLACODE_VOL_DISC_W As WhereParameter = Nothing
		Private _GLACODE_AP_WH_W As WhereParameter = Nothing
		Private _INACTIVE_FLAG_W As WhereParameter = Nothing

			Public Sub WhereClauseReset()

			_OFFICE_CODE_W = Nothing
			_OFFICE_NAME_W = Nothing
			_GLACODE_AR_W = Nothing
			_GLACODE_AP_W = Nothing
			_GLACODE_AP_DISC_W = Nothing
			_PGLACODE_SALES_W = Nothing
			_PGLACODE_COS_W = Nothing
			_PGLACODE_WIP_W = Nothing
			_PGLACODE_DEF_SALES_W = Nothing
			_PGLACODE_DEF_COS_W = Nothing
			_PGLACODE_ACC_COS_W = Nothing
			_PGLACODE_ACC_AP_W = Nothing
			_PGLACODE_ACC_TAX_W = Nothing
			_MGLACODE_ACC_AP_W = Nothing
			_MGLACODE_ACC_COS_W = Nothing
			_MGLACODE_COS_W = Nothing
			_MGLACODE_DEF_COS_W = Nothing
			_MGLACODE_DEF_SALES_W = Nothing
			_MGLACODE_SALES_W = Nothing
			_MGLACODE_WIP_W = Nothing
			_MGLACODE_ACC_TAX_W = Nothing
			_GLACODE_SUSPENSE_W = Nothing
			_GLACODE_STATE_W = Nothing
			_GLACODE_COUNTY_W = Nothing
			_GLACODE_CITY_W = Nothing
			_PRD_AB_INCOME_W = Nothing
			_MED_AB_INCOME_W = Nothing
			_GLACODE_VOL_DISC_W = Nothing
			_GLACODE_AP_WH_W = Nothing
			_INACTIVE_FLAG_W = Nothing
				Me._entity.Query.FlushWhereParameters()

			End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffWhereParameter
    End Class	

	Public ReadOnly Property Where() As WhereClause
		Get
			If _whereClause Is Nothing Then
				_whereClause = New WhereClause(Me)
			End If
	
			Return _whereClause
		End Get
	End Property
	
	Private _whereClause As WhereClause = Nothing	
#End Region	

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffAggregateParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffAggregateParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "AggregateParameter TearOff's"
		Public class TearOffAggregateParameter

			Public Sub New(ByVal clause As AggregateClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property OFFICE_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.OFFICE_CODE, Parameters.OFFICE_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property OFFICE_NAME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.OFFICE_NAME, Parameters.OFFICE_NAME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property GLACODE_AR() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GLACODE_AR, Parameters.GLACODE_AR)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property GLACODE_AP() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GLACODE_AP, Parameters.GLACODE_AP)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property GLACODE_AP_DISC() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GLACODE_AP_DISC, Parameters.GLACODE_AP_DISC)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PGLACODE_SALES() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PGLACODE_SALES, Parameters.PGLACODE_SALES)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PGLACODE_COS() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PGLACODE_COS, Parameters.PGLACODE_COS)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PGLACODE_WIP() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PGLACODE_WIP, Parameters.PGLACODE_WIP)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PGLACODE_DEF_SALES() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PGLACODE_DEF_SALES, Parameters.PGLACODE_DEF_SALES)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PGLACODE_DEF_COS() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PGLACODE_DEF_COS, Parameters.PGLACODE_DEF_COS)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PGLACODE_ACC_COS() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PGLACODE_ACC_COS, Parameters.PGLACODE_ACC_COS)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PGLACODE_ACC_AP() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PGLACODE_ACC_AP, Parameters.PGLACODE_ACC_AP)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PGLACODE_ACC_TAX() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PGLACODE_ACC_TAX, Parameters.PGLACODE_ACC_TAX)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property MGLACODE_ACC_AP() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.MGLACODE_ACC_AP, Parameters.MGLACODE_ACC_AP)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property MGLACODE_ACC_COS() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.MGLACODE_ACC_COS, Parameters.MGLACODE_ACC_COS)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property MGLACODE_COS() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.MGLACODE_COS, Parameters.MGLACODE_COS)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property MGLACODE_DEF_COS() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.MGLACODE_DEF_COS, Parameters.MGLACODE_DEF_COS)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property MGLACODE_DEF_SALES() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.MGLACODE_DEF_SALES, Parameters.MGLACODE_DEF_SALES)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property MGLACODE_SALES() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.MGLACODE_SALES, Parameters.MGLACODE_SALES)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property MGLACODE_WIP() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.MGLACODE_WIP, Parameters.MGLACODE_WIP)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property MGLACODE_ACC_TAX() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.MGLACODE_ACC_TAX, Parameters.MGLACODE_ACC_TAX)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property GLACODE_SUSPENSE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GLACODE_SUSPENSE, Parameters.GLACODE_SUSPENSE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property GLACODE_STATE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GLACODE_STATE, Parameters.GLACODE_STATE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property GLACODE_COUNTY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GLACODE_COUNTY, Parameters.GLACODE_COUNTY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property GLACODE_CITY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GLACODE_CITY, Parameters.GLACODE_CITY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PRD_AB_INCOME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PRD_AB_INCOME, Parameters.PRD_AB_INCOME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property MED_AB_INCOME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.MED_AB_INCOME, Parameters.MED_AB_INCOME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property GLACODE_VOL_DISC() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GLACODE_VOL_DISC, Parameters.GLACODE_VOL_DISC)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property GLACODE_AP_WH() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GLACODE_AP_WH, Parameters.GLACODE_AP_WH)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property INACTIVE_FLAG() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.INACTIVE_FLAG, Parameters.INACTIVE_FLAG)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property


			Private _clause as AggregateClause
		End Class
		#End Region	

		Public ReadOnly Property OFFICE_CODE() As AggregateParameter 
			Get
				If _OFFICE_CODE_W Is Nothing Then
					_OFFICE_CODE_W = TearOff.OFFICE_CODE
				End If
				Return _OFFICE_CODE_W
			End Get
		End Property

		Public ReadOnly Property OFFICE_NAME() As AggregateParameter 
			Get
				If _OFFICE_NAME_W Is Nothing Then
					_OFFICE_NAME_W = TearOff.OFFICE_NAME
				End If
				Return _OFFICE_NAME_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_AR() As AggregateParameter 
			Get
				If _GLACODE_AR_W Is Nothing Then
					_GLACODE_AR_W = TearOff.GLACODE_AR
				End If
				Return _GLACODE_AR_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_AP() As AggregateParameter 
			Get
				If _GLACODE_AP_W Is Nothing Then
					_GLACODE_AP_W = TearOff.GLACODE_AP
				End If
				Return _GLACODE_AP_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_AP_DISC() As AggregateParameter 
			Get
				If _GLACODE_AP_DISC_W Is Nothing Then
					_GLACODE_AP_DISC_W = TearOff.GLACODE_AP_DISC
				End If
				Return _GLACODE_AP_DISC_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_SALES() As AggregateParameter 
			Get
				If _PGLACODE_SALES_W Is Nothing Then
					_PGLACODE_SALES_W = TearOff.PGLACODE_SALES
				End If
				Return _PGLACODE_SALES_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_COS() As AggregateParameter 
			Get
				If _PGLACODE_COS_W Is Nothing Then
					_PGLACODE_COS_W = TearOff.PGLACODE_COS
				End If
				Return _PGLACODE_COS_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_WIP() As AggregateParameter 
			Get
				If _PGLACODE_WIP_W Is Nothing Then
					_PGLACODE_WIP_W = TearOff.PGLACODE_WIP
				End If
				Return _PGLACODE_WIP_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_DEF_SALES() As AggregateParameter 
			Get
				If _PGLACODE_DEF_SALES_W Is Nothing Then
					_PGLACODE_DEF_SALES_W = TearOff.PGLACODE_DEF_SALES
				End If
				Return _PGLACODE_DEF_SALES_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_DEF_COS() As AggregateParameter 
			Get
				If _PGLACODE_DEF_COS_W Is Nothing Then
					_PGLACODE_DEF_COS_W = TearOff.PGLACODE_DEF_COS
				End If
				Return _PGLACODE_DEF_COS_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_ACC_COS() As AggregateParameter 
			Get
				If _PGLACODE_ACC_COS_W Is Nothing Then
					_PGLACODE_ACC_COS_W = TearOff.PGLACODE_ACC_COS
				End If
				Return _PGLACODE_ACC_COS_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_ACC_AP() As AggregateParameter 
			Get
				If _PGLACODE_ACC_AP_W Is Nothing Then
					_PGLACODE_ACC_AP_W = TearOff.PGLACODE_ACC_AP
				End If
				Return _PGLACODE_ACC_AP_W
			End Get
		End Property

		Public ReadOnly Property PGLACODE_ACC_TAX() As AggregateParameter 
			Get
				If _PGLACODE_ACC_TAX_W Is Nothing Then
					_PGLACODE_ACC_TAX_W = TearOff.PGLACODE_ACC_TAX
				End If
				Return _PGLACODE_ACC_TAX_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_ACC_AP() As AggregateParameter 
			Get
				If _MGLACODE_ACC_AP_W Is Nothing Then
					_MGLACODE_ACC_AP_W = TearOff.MGLACODE_ACC_AP
				End If
				Return _MGLACODE_ACC_AP_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_ACC_COS() As AggregateParameter 
			Get
				If _MGLACODE_ACC_COS_W Is Nothing Then
					_MGLACODE_ACC_COS_W = TearOff.MGLACODE_ACC_COS
				End If
				Return _MGLACODE_ACC_COS_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_COS() As AggregateParameter 
			Get
				If _MGLACODE_COS_W Is Nothing Then
					_MGLACODE_COS_W = TearOff.MGLACODE_COS
				End If
				Return _MGLACODE_COS_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_DEF_COS() As AggregateParameter 
			Get
				If _MGLACODE_DEF_COS_W Is Nothing Then
					_MGLACODE_DEF_COS_W = TearOff.MGLACODE_DEF_COS
				End If
				Return _MGLACODE_DEF_COS_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_DEF_SALES() As AggregateParameter 
			Get
				If _MGLACODE_DEF_SALES_W Is Nothing Then
					_MGLACODE_DEF_SALES_W = TearOff.MGLACODE_DEF_SALES
				End If
				Return _MGLACODE_DEF_SALES_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_SALES() As AggregateParameter 
			Get
				If _MGLACODE_SALES_W Is Nothing Then
					_MGLACODE_SALES_W = TearOff.MGLACODE_SALES
				End If
				Return _MGLACODE_SALES_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_WIP() As AggregateParameter 
			Get
				If _MGLACODE_WIP_W Is Nothing Then
					_MGLACODE_WIP_W = TearOff.MGLACODE_WIP
				End If
				Return _MGLACODE_WIP_W
			End Get
		End Property

		Public ReadOnly Property MGLACODE_ACC_TAX() As AggregateParameter 
			Get
				If _MGLACODE_ACC_TAX_W Is Nothing Then
					_MGLACODE_ACC_TAX_W = TearOff.MGLACODE_ACC_TAX
				End If
				Return _MGLACODE_ACC_TAX_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_SUSPENSE() As AggregateParameter 
			Get
				If _GLACODE_SUSPENSE_W Is Nothing Then
					_GLACODE_SUSPENSE_W = TearOff.GLACODE_SUSPENSE
				End If
				Return _GLACODE_SUSPENSE_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_STATE() As AggregateParameter 
			Get
				If _GLACODE_STATE_W Is Nothing Then
					_GLACODE_STATE_W = TearOff.GLACODE_STATE
				End If
				Return _GLACODE_STATE_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_COUNTY() As AggregateParameter 
			Get
				If _GLACODE_COUNTY_W Is Nothing Then
					_GLACODE_COUNTY_W = TearOff.GLACODE_COUNTY
				End If
				Return _GLACODE_COUNTY_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_CITY() As AggregateParameter 
			Get
				If _GLACODE_CITY_W Is Nothing Then
					_GLACODE_CITY_W = TearOff.GLACODE_CITY
				End If
				Return _GLACODE_CITY_W
			End Get
		End Property

		Public ReadOnly Property PRD_AB_INCOME() As AggregateParameter 
			Get
				If _PRD_AB_INCOME_W Is Nothing Then
					_PRD_AB_INCOME_W = TearOff.PRD_AB_INCOME
				End If
				Return _PRD_AB_INCOME_W
			End Get
		End Property

		Public ReadOnly Property MED_AB_INCOME() As AggregateParameter 
			Get
				If _MED_AB_INCOME_W Is Nothing Then
					_MED_AB_INCOME_W = TearOff.MED_AB_INCOME
				End If
				Return _MED_AB_INCOME_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_VOL_DISC() As AggregateParameter 
			Get
				If _GLACODE_VOL_DISC_W Is Nothing Then
					_GLACODE_VOL_DISC_W = TearOff.GLACODE_VOL_DISC
				End If
				Return _GLACODE_VOL_DISC_W
			End Get
		End Property

		Public ReadOnly Property GLACODE_AP_WH() As AggregateParameter 
			Get
				If _GLACODE_AP_WH_W Is Nothing Then
					_GLACODE_AP_WH_W = TearOff.GLACODE_AP_WH
				End If
				Return _GLACODE_AP_WH_W
			End Get
		End Property

		Public ReadOnly Property INACTIVE_FLAG() As AggregateParameter 
			Get
				If _INACTIVE_FLAG_W Is Nothing Then
					_INACTIVE_FLAG_W = TearOff.INACTIVE_FLAG
				End If
				Return _INACTIVE_FLAG_W
			End Get
		End Property

		Private _OFFICE_CODE_W As AggregateParameter = Nothing
		Private _OFFICE_NAME_W As AggregateParameter = Nothing
		Private _GLACODE_AR_W As AggregateParameter = Nothing
		Private _GLACODE_AP_W As AggregateParameter = Nothing
		Private _GLACODE_AP_DISC_W As AggregateParameter = Nothing
		Private _PGLACODE_SALES_W As AggregateParameter = Nothing
		Private _PGLACODE_COS_W As AggregateParameter = Nothing
		Private _PGLACODE_WIP_W As AggregateParameter = Nothing
		Private _PGLACODE_DEF_SALES_W As AggregateParameter = Nothing
		Private _PGLACODE_DEF_COS_W As AggregateParameter = Nothing
		Private _PGLACODE_ACC_COS_W As AggregateParameter = Nothing
		Private _PGLACODE_ACC_AP_W As AggregateParameter = Nothing
		Private _PGLACODE_ACC_TAX_W As AggregateParameter = Nothing
		Private _MGLACODE_ACC_AP_W As AggregateParameter = Nothing
		Private _MGLACODE_ACC_COS_W As AggregateParameter = Nothing
		Private _MGLACODE_COS_W As AggregateParameter = Nothing
		Private _MGLACODE_DEF_COS_W As AggregateParameter = Nothing
		Private _MGLACODE_DEF_SALES_W As AggregateParameter = Nothing
		Private _MGLACODE_SALES_W As AggregateParameter = Nothing
		Private _MGLACODE_WIP_W As AggregateParameter = Nothing
		Private _MGLACODE_ACC_TAX_W As AggregateParameter = Nothing
		Private _GLACODE_SUSPENSE_W As AggregateParameter = Nothing
		Private _GLACODE_STATE_W As AggregateParameter = Nothing
		Private _GLACODE_COUNTY_W As AggregateParameter = Nothing
		Private _GLACODE_CITY_W As AggregateParameter = Nothing
		Private _PRD_AB_INCOME_W As AggregateParameter = Nothing
		Private _MED_AB_INCOME_W As AggregateParameter = Nothing
		Private _GLACODE_VOL_DISC_W As AggregateParameter = Nothing
		Private _GLACODE_AP_WH_W As AggregateParameter = Nothing
		Private _INACTIVE_FLAG_W As AggregateParameter = Nothing

		Public Sub AggregateClauseReset()

		_OFFICE_CODE_W = Nothing
		_OFFICE_NAME_W = Nothing
		_GLACODE_AR_W = Nothing
		_GLACODE_AP_W = Nothing
		_GLACODE_AP_DISC_W = Nothing
		_PGLACODE_SALES_W = Nothing
		_PGLACODE_COS_W = Nothing
		_PGLACODE_WIP_W = Nothing
		_PGLACODE_DEF_SALES_W = Nothing
		_PGLACODE_DEF_COS_W = Nothing
		_PGLACODE_ACC_COS_W = Nothing
		_PGLACODE_ACC_AP_W = Nothing
		_PGLACODE_ACC_TAX_W = Nothing
		_MGLACODE_ACC_AP_W = Nothing
		_MGLACODE_ACC_COS_W = Nothing
		_MGLACODE_COS_W = Nothing
		_MGLACODE_DEF_COS_W = Nothing
		_MGLACODE_DEF_SALES_W = Nothing
		_MGLACODE_SALES_W = Nothing
		_MGLACODE_WIP_W = Nothing
		_MGLACODE_ACC_TAX_W = Nothing
		_GLACODE_SUSPENSE_W = Nothing
		_GLACODE_STATE_W = Nothing
		_GLACODE_COUNTY_W = Nothing
		_GLACODE_CITY_W = Nothing
		_PRD_AB_INCOME_W = Nothing
		_MED_AB_INCOME_W = Nothing
		_GLACODE_VOL_DISC_W = Nothing
		_GLACODE_AP_WH_W = Nothing
		_INACTIVE_FLAG_W = Nothing
			Me._entity.Query.FlushAggregateParameters()

		End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffAggregateParameter
    End Class	

	Public ReadOnly Property Aggregate() As AggregateClause
		Get
			If _aggregateClause Is Nothing Then
				_aggregateClause = New AggregateClause(Me)
			End If
	
			Return _aggregateClause
		End Get
	End Property
	
	Private _aggregateClause As AggregateClause = Nothing	
#End Region	

	Protected Overrides Function GetInsertCommand() As IDbCommand
	
		Dim cmd As SqlCommand = New SqlCommand
		cmd.CommandType = CommandType.StoredProcedure
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_OFFICEInsert]" 
	    
		CreateParameters(cmd)
		    
		Return cmd 

  	End Function
	
	Protected Overrides Function GetUpdateCommand() As IDbCommand
	
		Dim cmd As SqlCommand = New SqlCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_OFFICEUpdate]" 
		
		CreateParameters(cmd) 
		    
		Return cmd
	
	End Function	
	
	Protected Overrides Function GetDeleteCommand() As IDbCommand
	
		Dim cmd As SqlCommand = New SqlCommand
		cmd.CommandType = CommandType.StoredProcedure    
		cmd.CommandText = "[" + Me.SchemaStoredProcedure + "proc_OFFICEDelete]" 
		
		Dim p As SqlParameter
		p = cmd.Parameters.Add(Parameters.OFFICE_CODE)
		p.SourceColumn = ColumnNames.OFFICE_CODE
		p.SourceVersion = DataRowVersion.Current

  
		Return cmd
	
	End Function	
	
	Private Sub CreateParameters(ByVal cmd As SqlCommand)
	
		Dim p As SqlParameter
		p = cmd.Parameters.Add(Parameters.OFFICE_CODE)
		p.SourceColumn = ColumnNames.OFFICE_CODE
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.OFFICE_NAME)
		p.SourceColumn = ColumnNames.OFFICE_NAME
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.GLACODE_AR)
		p.SourceColumn = ColumnNames.GLACODE_AR
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.GLACODE_AP)
		p.SourceColumn = ColumnNames.GLACODE_AP
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.GLACODE_AP_DISC)
		p.SourceColumn = ColumnNames.GLACODE_AP_DISC
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.PGLACODE_SALES)
		p.SourceColumn = ColumnNames.PGLACODE_SALES
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.PGLACODE_COS)
		p.SourceColumn = ColumnNames.PGLACODE_COS
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.PGLACODE_WIP)
		p.SourceColumn = ColumnNames.PGLACODE_WIP
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.PGLACODE_DEF_SALES)
		p.SourceColumn = ColumnNames.PGLACODE_DEF_SALES
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.PGLACODE_DEF_COS)
		p.SourceColumn = ColumnNames.PGLACODE_DEF_COS
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.PGLACODE_ACC_COS)
		p.SourceColumn = ColumnNames.PGLACODE_ACC_COS
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.PGLACODE_ACC_AP)
		p.SourceColumn = ColumnNames.PGLACODE_ACC_AP
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.PGLACODE_ACC_TAX)
		p.SourceColumn = ColumnNames.PGLACODE_ACC_TAX
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.MGLACODE_ACC_AP)
		p.SourceColumn = ColumnNames.MGLACODE_ACC_AP
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.MGLACODE_ACC_COS)
		p.SourceColumn = ColumnNames.MGLACODE_ACC_COS
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.MGLACODE_COS)
		p.SourceColumn = ColumnNames.MGLACODE_COS
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.MGLACODE_DEF_COS)
		p.SourceColumn = ColumnNames.MGLACODE_DEF_COS
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.MGLACODE_DEF_SALES)
		p.SourceColumn = ColumnNames.MGLACODE_DEF_SALES
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.MGLACODE_SALES)
		p.SourceColumn = ColumnNames.MGLACODE_SALES
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.MGLACODE_WIP)
		p.SourceColumn = ColumnNames.MGLACODE_WIP
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.MGLACODE_ACC_TAX)
		p.SourceColumn = ColumnNames.MGLACODE_ACC_TAX
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.GLACODE_SUSPENSE)
		p.SourceColumn = ColumnNames.GLACODE_SUSPENSE
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.GLACODE_STATE)
		p.SourceColumn = ColumnNames.GLACODE_STATE
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.GLACODE_COUNTY)
		p.SourceColumn = ColumnNames.GLACODE_COUNTY
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.GLACODE_CITY)
		p.SourceColumn = ColumnNames.GLACODE_CITY
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.PRD_AB_INCOME)
		p.SourceColumn = ColumnNames.PRD_AB_INCOME
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.MED_AB_INCOME)
		p.SourceColumn = ColumnNames.MED_AB_INCOME
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.GLACODE_VOL_DISC)
		p.SourceColumn = ColumnNames.GLACODE_VOL_DISC
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.GLACODE_AP_WH)
		p.SourceColumn = ColumnNames.GLACODE_AP_WH
		p.SourceVersion = DataRowVersion.Current

		p = cmd.Parameters.Add(Parameters.INACTIVE_FLAG)
		p.SourceColumn = ColumnNames.INACTIVE_FLAG
		p.SourceVersion = DataRowVersion.Current


	End Sub	

End Class

