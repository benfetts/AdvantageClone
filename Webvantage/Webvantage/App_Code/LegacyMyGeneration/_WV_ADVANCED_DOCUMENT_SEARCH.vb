
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================

' Generated by MyGeneration Version # (1.2.0.2)

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _WV_ADVANCED_DOCUMENT_SEARCH
	Inherits  SqlClientEntity
	
		Public Sub New() 
			Me.QuerySource = "WV_ADVANCED_DOCUMENT_SEARCH"
			Me.MappingName = "WV_ADVANCED_DOCUMENT_SEARCH"
		End Sub

	'=================================================================
	'  	Public Function LoadAll() As Boolean
	'=================================================================
	'  Loads all of the records in the database, and sets the currentRow to the first row
	'=================================================================
	Public Function LoadAll() As Boolean
    	Return MyBase.Query.Load()
	End Function
	
	Public Overrides Sub FlushData()
		Me._whereClause = nothing
		Me._aggregateClause = nothing		
		MyBase.FlushData()
	End Sub	

	#Region "Parameters"
	Protected class Parameters 
		
		Public Shared ReadOnly Property DOCUMENT_ID As SqlParameter
			Get
				Return New SqlParameter("DOCUMENT_ID", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property FILENAME As SqlParameter
			Get
				Return New SqlParameter("FILENAME", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property DESCRIPTION As SqlParameter
			Get
				Return New SqlParameter("DESCRIPTION", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property KEYWORDS As SqlParameter
			Get
				Return New SqlParameter("KEYWORDS", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property FILE_SIZE As SqlParameter
			Get
				Return New SqlParameter("FILE_SIZE", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property UPLOADED_DATE As SqlParameter
			Get
				Return New SqlParameter("UPLOADED_DATE", SqlDbType.DateTime, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property MIME_TYPE As SqlParameter
			Get
				Return New SqlParameter("MIME_TYPE", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property USER_CODE As SqlParameter
			Get
				Return New SqlParameter("USER_CODE", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property CMP_CODE As SqlParameter
			Get
				Return New SqlParameter("CMP_CODE", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property OFFICE_CODE As SqlParameter
			Get
				Return New SqlParameter("OFFICE_CODE", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property CL_CODE As SqlParameter
			Get
				Return New SqlParameter("CL_CODE", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_CODE As SqlParameter
			Get
				Return New SqlParameter("DIV_CODE", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property PRD_CODE As SqlParameter
			Get
				Return New SqlParameter("PRD_CODE", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property JOB_NUMBER As SqlParameter
			Get
				Return New SqlParameter("JOB_NUMBER", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property JOB_COMPONENT_NBR As SqlParameter
			Get
				Return New SqlParameter("JOB_COMPONENT_NBR", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property LEVEL As SqlParameter
			Get
				Return New SqlParameter("LEVEL", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property OFFICE_NAME As SqlParameter
			Get
				Return New SqlParameter("OFFICE_NAME", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property CAMPAIGN_NAME As SqlParameter
			Get
				Return New SqlParameter("CAMPAIGN_NAME", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property CLIENT_NAME As SqlParameter
			Get
				Return New SqlParameter("CLIENT_NAME", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIVISION_NAME As SqlParameter
			Get
				Return New SqlParameter("DIVISION_NAME", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property PRODUCT_DESCRIPTION As SqlParameter
			Get
				Return New SqlParameter("PRODUCT_DESCRIPTION", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property JOB_DESCRIPTION As SqlParameter
			Get
				Return New SqlParameter("JOB_DESCRIPTION", SqlDbType.VarChar, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property JOB_COMP_DESCRIPTION As SqlParameter
			Get
				Return New SqlParameter("JOB_COMP_DESCRIPTION", SqlDbType.VarChar, 1)
			End Get
		End Property
		
	End Class
	#End Region	

	#Region "ColumnNames"
	Public class ColumnNames
		
        Public Const DOCUMENT_ID As String = "DOCUMENT_ID"
        Public Const FILENAME As String = "FILENAME"
        Public Const DESCRIPTION As String = "DESCRIPTION"
        Public Const KEYWORDS As String = "KEYWORDS"
        Public Const FILE_SIZE As String = "FILE_SIZE"
        Public Const UPLOADED_DATE As String = "UPLOADED_DATE"
        Public Const MIME_TYPE As String = "MIME_TYPE"
        Public Const USER_CODE As String = "USER_CODE"
        Public Const CMP_CODE As String = "CMP_CODE"
        Public Const OFFICE_CODE As String = "OFFICE_CODE"
        Public Const CL_CODE As String = "CL_CODE"
        Public Const DIV_CODE As String = "DIV_CODE"
        Public Const PRD_CODE As String = "PRD_CODE"
        Public Const JOB_NUMBER As String = "JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "JOB_COMPONENT_NBR"
        Public Const LEVEL As String = "LEVEL"
        Public Const OFFICE_NAME As String = "OFFICE_NAME"
        Public Const CAMPAIGN_NAME As String = "CAMPAIGN_NAME"
        Public Const CLIENT_NAME As String = "CLIENT_NAME"
        Public Const DIVISION_NAME As String = "DIVISION_NAME"
        Public Const PRODUCT_DESCRIPTION As String = "PRODUCT_DESCRIPTION"
        Public Const JOB_DESCRIPTION As String = "JOB_DESCRIPTION"
        Public Const JOB_COMP_DESCRIPTION As String = "JOB_COMP_DESCRIPTION"

		Shared Public Function ToPropertyName(ByVal columnName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(DOCUMENT_ID) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.DOCUMENT_ID
				ht(FILENAME) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.FILENAME
				ht(DESCRIPTION) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.DESCRIPTION
				ht(KEYWORDS) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.KEYWORDS
				ht(FILE_SIZE) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.FILE_SIZE
				ht(UPLOADED_DATE) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.UPLOADED_DATE
				ht(MIME_TYPE) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.MIME_TYPE
				ht(USER_CODE) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.USER_CODE
				ht(CMP_CODE) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.CMP_CODE
				ht(OFFICE_CODE) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.OFFICE_CODE
				ht(CL_CODE) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.CL_CODE
				ht(DIV_CODE) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.DIV_CODE
				ht(PRD_CODE) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.PRD_CODE
				ht(JOB_NUMBER) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.JOB_NUMBER
				ht(JOB_COMPONENT_NBR) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.JOB_COMPONENT_NBR
				ht(LEVEL) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.LEVEL
				ht(OFFICE_NAME) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.OFFICE_NAME
				ht(CAMPAIGN_NAME) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.CAMPAIGN_NAME
				ht(CLIENT_NAME) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.CLIENT_NAME
				ht(DIVISION_NAME) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.DIVISION_NAME
				ht(PRODUCT_DESCRIPTION) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.PRODUCT_DESCRIPTION
				ht(JOB_DESCRIPTION) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.JOB_DESCRIPTION
				ht(JOB_COMP_DESCRIPTION) = _WV_ADVANCED_DOCUMENT_SEARCH.PropertyNames.JOB_COMP_DESCRIPTION

			End If
			
			Return CType(ht(columnName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing		 
	End Class
	#End Region	
	
	#Region "PropertyNames"
	Public class PropertyNames
		
        Public Const DOCUMENT_ID As String = "DOCUMENT_ID"
        Public Const FILENAME As String = "FILENAME"
        Public Const DESCRIPTION As String = "DESCRIPTION"
        Public Const KEYWORDS As String = "KEYWORDS"
        Public Const FILE_SIZE As String = "FILE_SIZE"
        Public Const UPLOADED_DATE As String = "UPLOADED_DATE"
        Public Const MIME_TYPE As String = "MIME_TYPE"
        Public Const USER_CODE As String = "USER_CODE"
        Public Const CMP_CODE As String = "CMP_CODE"
        Public Const OFFICE_CODE As String = "OFFICE_CODE"
        Public Const CL_CODE As String = "CL_CODE"
        Public Const DIV_CODE As String = "DIV_CODE"
        Public Const PRD_CODE As String = "PRD_CODE"
        Public Const JOB_NUMBER As String = "JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "JOB_COMPONENT_NBR"
        Public Const LEVEL As String = "LEVEL"
        Public Const OFFICE_NAME As String = "OFFICE_NAME"
        Public Const CAMPAIGN_NAME As String = "CAMPAIGN_NAME"
        Public Const CLIENT_NAME As String = "CLIENT_NAME"
        Public Const DIVISION_NAME As String = "DIVISION_NAME"
        Public Const PRODUCT_DESCRIPTION As String = "PRODUCT_DESCRIPTION"
        Public Const JOB_DESCRIPTION As String = "JOB_DESCRIPTION"
        Public Const JOB_COMP_DESCRIPTION As String = "JOB_COMP_DESCRIPTION"

		Shared Public Function ToColumnName(ByVal propertyName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(DOCUMENT_ID) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.DOCUMENT_ID
				ht(FILENAME) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.FILENAME
				ht(DESCRIPTION) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.DESCRIPTION
				ht(KEYWORDS) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.KEYWORDS
				ht(FILE_SIZE) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.FILE_SIZE
				ht(UPLOADED_DATE) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.UPLOADED_DATE
				ht(MIME_TYPE) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.MIME_TYPE
				ht(USER_CODE) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.USER_CODE
				ht(CMP_CODE) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.CMP_CODE
				ht(OFFICE_CODE) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.OFFICE_CODE
				ht(CL_CODE) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.CL_CODE
				ht(DIV_CODE) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.DIV_CODE
				ht(PRD_CODE) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.PRD_CODE
				ht(JOB_NUMBER) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.JOB_NUMBER
				ht(JOB_COMPONENT_NBR) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.JOB_COMPONENT_NBR
				ht(LEVEL) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.LEVEL
				ht(OFFICE_NAME) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.OFFICE_NAME
				ht(CAMPAIGN_NAME) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.CAMPAIGN_NAME
				ht(CLIENT_NAME) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.CLIENT_NAME
				ht(DIVISION_NAME) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.DIVISION_NAME
				ht(PRODUCT_DESCRIPTION) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.PRODUCT_DESCRIPTION
				ht(JOB_DESCRIPTION) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.JOB_DESCRIPTION
				ht(JOB_COMP_DESCRIPTION) = _WV_ADVANCED_DOCUMENT_SEARCH.ColumnNames.JOB_COMP_DESCRIPTION

			End If
			
			Return CType(ht(propertyName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing
		
	End Class
	#End Region	
	
	#Region "StringPropertyNames"
	Public class StringPropertyNames
		
        Public Const DOCUMENT_ID As String = "s_DOCUMENT_ID"
        Public Const FILENAME As String = "s_FILENAME"
        Public Const DESCRIPTION As String = "s_DESCRIPTION"
        Public Const KEYWORDS As String = "s_KEYWORDS"
        Public Const FILE_SIZE As String = "s_FILE_SIZE"
        Public Const UPLOADED_DATE As String = "s_UPLOADED_DATE"
        Public Const MIME_TYPE As String = "s_MIME_TYPE"
        Public Const USER_CODE As String = "s_USER_CODE"
        Public Const CMP_CODE As String = "s_CMP_CODE"
        Public Const OFFICE_CODE As String = "s_OFFICE_CODE"
        Public Const CL_CODE As String = "s_CL_CODE"
        Public Const DIV_CODE As String = "s_DIV_CODE"
        Public Const PRD_CODE As String = "s_PRD_CODE"
        Public Const JOB_NUMBER As String = "s_JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "s_JOB_COMPONENT_NBR"
        Public Const LEVEL As String = "s_LEVEL"
        Public Const OFFICE_NAME As String = "s_OFFICE_NAME"
        Public Const CAMPAIGN_NAME As String = "s_CAMPAIGN_NAME"
        Public Const CLIENT_NAME As String = "s_CLIENT_NAME"
        Public Const DIVISION_NAME As String = "s_DIVISION_NAME"
        Public Const PRODUCT_DESCRIPTION As String = "s_PRODUCT_DESCRIPTION"
        Public Const JOB_DESCRIPTION As String = "s_JOB_DESCRIPTION"
        Public Const JOB_COMP_DESCRIPTION As String = "s_JOB_COMP_DESCRIPTION"

	End Class
	#End Region		
	
	#Region "Properties" 
		Public Overridable Property DOCUMENT_ID As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.DOCUMENT_ID)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.DOCUMENT_ID, Value)
			End Set
		End Property

		Public Overridable Property FILENAME As String
			Get
				Return MyBase.GetString(ColumnNames.FILENAME)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.FILENAME, Value)
			End Set
		End Property

		Public Overridable Property DESCRIPTION As String
			Get
				Return MyBase.GetString(ColumnNames.DESCRIPTION)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DESCRIPTION, Value)
			End Set
		End Property

		Public Overridable Property KEYWORDS As String
			Get
				Return MyBase.GetString(ColumnNames.KEYWORDS)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.KEYWORDS, Value)
			End Set
		End Property

		Public Overridable Property FILE_SIZE As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.FILE_SIZE)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.FILE_SIZE, Value)
			End Set
		End Property

		Public Overridable Property UPLOADED_DATE As DateTime
			Get
				Return MyBase.GetDateTime(ColumnNames.UPLOADED_DATE)
			End Get
			Set(ByVal Value As DateTime)
				MyBase.SetDateTime(ColumnNames.UPLOADED_DATE, Value)
			End Set
		End Property

		Public Overridable Property MIME_TYPE As String
			Get
				Return MyBase.GetString(ColumnNames.MIME_TYPE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.MIME_TYPE, Value)
			End Set
		End Property

		Public Overridable Property USER_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.USER_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.USER_CODE, Value)
			End Set
		End Property

		Public Overridable Property CMP_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.CMP_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.CMP_CODE, Value)
			End Set
		End Property

		Public Overridable Property OFFICE_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.OFFICE_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.OFFICE_CODE, Value)
			End Set
		End Property

		Public Overridable Property CL_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.CL_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.CL_CODE, Value)
			End Set
		End Property

		Public Overridable Property DIV_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_CODE, Value)
			End Set
		End Property

		Public Overridable Property PRD_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.PRD_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.PRD_CODE, Value)
			End Set
		End Property

		Public Overridable Property JOB_NUMBER As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.JOB_NUMBER)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.JOB_NUMBER, Value)
			End Set
		End Property

		Public Overridable Property JOB_COMPONENT_NBR As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.JOB_COMPONENT_NBR)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.JOB_COMPONENT_NBR, Value)
			End Set
		End Property

		Public Overridable Property LEVEL As String
			Get
				Return MyBase.GetString(ColumnNames.LEVEL)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.LEVEL, Value)
			End Set
		End Property

		Public Overridable Property OFFICE_NAME As String
			Get
				Return MyBase.GetString(ColumnNames.OFFICE_NAME)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.OFFICE_NAME, Value)
			End Set
		End Property

		Public Overridable Property CAMPAIGN_NAME As String
			Get
				Return MyBase.GetString(ColumnNames.CAMPAIGN_NAME)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.CAMPAIGN_NAME, Value)
			End Set
		End Property

		Public Overridable Property CLIENT_NAME As String
			Get
				Return MyBase.GetString(ColumnNames.CLIENT_NAME)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.CLIENT_NAME, Value)
			End Set
		End Property

		Public Overridable Property DIVISION_NAME As String
			Get
				Return MyBase.GetString(ColumnNames.DIVISION_NAME)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIVISION_NAME, Value)
			End Set
		End Property

		Public Overridable Property PRODUCT_DESCRIPTION As String
			Get
				Return MyBase.GetString(ColumnNames.PRODUCT_DESCRIPTION)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.PRODUCT_DESCRIPTION, Value)
			End Set
		End Property

		Public Overridable Property JOB_DESCRIPTION As String
			Get
				Return MyBase.GetString(ColumnNames.JOB_DESCRIPTION)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.JOB_DESCRIPTION, Value)
			End Set
		End Property

		Public Overridable Property JOB_COMP_DESCRIPTION As String
			Get
				Return MyBase.GetString(ColumnNames.JOB_COMP_DESCRIPTION)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.JOB_COMP_DESCRIPTION, Value)
			End Set
		End Property


	#End Region  
	
	#Region "String Properties" 

		Public Overridable Property s_DOCUMENT_ID As String
			Get
				If Me.IsColumnNull(ColumnNames.DOCUMENT_ID) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.DOCUMENT_ID)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DOCUMENT_ID)
				Else
					Me.DOCUMENT_ID = MyBase.SetIntegerAsString(ColumnNames.DOCUMENT_ID, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_FILENAME As String
			Get
				If Me.IsColumnNull(ColumnNames.FILENAME) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.FILENAME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.FILENAME)
				Else
					Me.FILENAME = MyBase.SetStringAsString(ColumnNames.FILENAME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DESCRIPTION As String
			Get
				If Me.IsColumnNull(ColumnNames.DESCRIPTION) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DESCRIPTION)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DESCRIPTION)
				Else
					Me.DESCRIPTION = MyBase.SetStringAsString(ColumnNames.DESCRIPTION, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_KEYWORDS As String
			Get
				If Me.IsColumnNull(ColumnNames.KEYWORDS) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.KEYWORDS)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.KEYWORDS)
				Else
					Me.KEYWORDS = MyBase.SetStringAsString(ColumnNames.KEYWORDS, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_FILE_SIZE As String
			Get
				If Me.IsColumnNull(ColumnNames.FILE_SIZE) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.FILE_SIZE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.FILE_SIZE)
				Else
					Me.FILE_SIZE = MyBase.SetIntegerAsString(ColumnNames.FILE_SIZE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_UPLOADED_DATE As String
			Get
				If Me.IsColumnNull(ColumnNames.UPLOADED_DATE) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.UPLOADED_DATE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.UPLOADED_DATE)
				Else
					Me.UPLOADED_DATE = MyBase.SetDateTimeAsString(ColumnNames.UPLOADED_DATE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_MIME_TYPE As String
			Get
				If Me.IsColumnNull(ColumnNames.MIME_TYPE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.MIME_TYPE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.MIME_TYPE)
				Else
					Me.MIME_TYPE = MyBase.SetStringAsString(ColumnNames.MIME_TYPE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_USER_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.USER_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.USER_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.USER_CODE)
				Else
					Me.USER_CODE = MyBase.SetStringAsString(ColumnNames.USER_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_CMP_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.CMP_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.CMP_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.CMP_CODE)
				Else
					Me.CMP_CODE = MyBase.SetStringAsString(ColumnNames.CMP_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_OFFICE_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.OFFICE_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.OFFICE_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.OFFICE_CODE)
				Else
					Me.OFFICE_CODE = MyBase.SetStringAsString(ColumnNames.OFFICE_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_CL_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.CL_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.CL_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.CL_CODE)
				Else
					Me.CL_CODE = MyBase.SetStringAsString(ColumnNames.CL_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_CODE)
				Else
					Me.DIV_CODE = MyBase.SetStringAsString(ColumnNames.DIV_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PRD_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.PRD_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.PRD_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PRD_CODE)
				Else
					Me.PRD_CODE = MyBase.SetStringAsString(ColumnNames.PRD_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_JOB_NUMBER As String
			Get
				If Me.IsColumnNull(ColumnNames.JOB_NUMBER) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.JOB_NUMBER)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.JOB_NUMBER)
				Else
					Me.JOB_NUMBER = MyBase.SetIntegerAsString(ColumnNames.JOB_NUMBER, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_JOB_COMPONENT_NBR As String
			Get
				If Me.IsColumnNull(ColumnNames.JOB_COMPONENT_NBR) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.JOB_COMPONENT_NBR)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.JOB_COMPONENT_NBR)
				Else
					Me.JOB_COMPONENT_NBR = MyBase.SetIntegerAsString(ColumnNames.JOB_COMPONENT_NBR, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_LEVEL As String
			Get
				If Me.IsColumnNull(ColumnNames.LEVEL) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.LEVEL)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.LEVEL)
				Else
					Me.LEVEL = MyBase.SetStringAsString(ColumnNames.LEVEL, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_OFFICE_NAME As String
			Get
				If Me.IsColumnNull(ColumnNames.OFFICE_NAME) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.OFFICE_NAME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.OFFICE_NAME)
				Else
					Me.OFFICE_NAME = MyBase.SetStringAsString(ColumnNames.OFFICE_NAME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_CAMPAIGN_NAME As String
			Get
				If Me.IsColumnNull(ColumnNames.CAMPAIGN_NAME) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.CAMPAIGN_NAME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.CAMPAIGN_NAME)
				Else
					Me.CAMPAIGN_NAME = MyBase.SetStringAsString(ColumnNames.CAMPAIGN_NAME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_CLIENT_NAME As String
			Get
				If Me.IsColumnNull(ColumnNames.CLIENT_NAME) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.CLIENT_NAME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.CLIENT_NAME)
				Else
					Me.CLIENT_NAME = MyBase.SetStringAsString(ColumnNames.CLIENT_NAME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIVISION_NAME As String
			Get
				If Me.IsColumnNull(ColumnNames.DIVISION_NAME) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIVISION_NAME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIVISION_NAME)
				Else
					Me.DIVISION_NAME = MyBase.SetStringAsString(ColumnNames.DIVISION_NAME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PRODUCT_DESCRIPTION As String
			Get
				If Me.IsColumnNull(ColumnNames.PRODUCT_DESCRIPTION) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.PRODUCT_DESCRIPTION)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PRODUCT_DESCRIPTION)
				Else
					Me.PRODUCT_DESCRIPTION = MyBase.SetStringAsString(ColumnNames.PRODUCT_DESCRIPTION, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_JOB_DESCRIPTION As String
			Get
				If Me.IsColumnNull(ColumnNames.JOB_DESCRIPTION) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.JOB_DESCRIPTION)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.JOB_DESCRIPTION)
				Else
					Me.JOB_DESCRIPTION = MyBase.SetStringAsString(ColumnNames.JOB_DESCRIPTION, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_JOB_COMP_DESCRIPTION As String
			Get
				If Me.IsColumnNull(ColumnNames.JOB_COMP_DESCRIPTION) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.JOB_COMP_DESCRIPTION)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.JOB_COMP_DESCRIPTION)
				Else
					Me.JOB_COMP_DESCRIPTION = MyBase.SetStringAsString(ColumnNames.JOB_COMP_DESCRIPTION, Value)
				End If
			End Set
		End Property


	#End Region 

	#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffWhereParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffWhereParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "TearOff's"
		Public class TearOffWhereParameter

			Public Sub New(ByVal clause As WhereClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property DOCUMENT_ID() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.DOCUMENT_ID, Parameters.DOCUMENT_ID)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property FILENAME() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.FILENAME, Parameters.FILENAME)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DESCRIPTION() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.DESCRIPTION, Parameters.DESCRIPTION)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property KEYWORDS() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.KEYWORDS, Parameters.KEYWORDS)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property FILE_SIZE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.FILE_SIZE, Parameters.FILE_SIZE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property UPLOADED_DATE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.UPLOADED_DATE, Parameters.UPLOADED_DATE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property MIME_TYPE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.MIME_TYPE, Parameters.MIME_TYPE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property USER_CODE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.USER_CODE, Parameters.USER_CODE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CMP_CODE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.CMP_CODE, Parameters.CMP_CODE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property OFFICE_CODE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.OFFICE_CODE, Parameters.OFFICE_CODE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CL_CODE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.CL_CODE, Parameters.CL_CODE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_CODE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_CODE, Parameters.DIV_CODE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PRD_CODE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.PRD_CODE, Parameters.PRD_CODE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_NUMBER() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_NUMBER, Parameters.JOB_NUMBER)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_COMPONENT_NBR() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_COMPONENT_NBR, Parameters.JOB_COMPONENT_NBR)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property LEVEL() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.LEVEL, Parameters.LEVEL)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property OFFICE_NAME() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.OFFICE_NAME, Parameters.OFFICE_NAME)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CAMPAIGN_NAME() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.CAMPAIGN_NAME, Parameters.CAMPAIGN_NAME)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CLIENT_NAME() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.CLIENT_NAME, Parameters.CLIENT_NAME)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIVISION_NAME() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.DIVISION_NAME, Parameters.DIVISION_NAME)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PRODUCT_DESCRIPTION() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.PRODUCT_DESCRIPTION, Parameters.PRODUCT_DESCRIPTION)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_DESCRIPTION() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_DESCRIPTION, Parameters.JOB_DESCRIPTION)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_COMP_DESCRIPTION() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_COMP_DESCRIPTION, Parameters.JOB_COMP_DESCRIPTION)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property


		Private _clause as WhereClause
	End Class
	#End Region	

		Public ReadOnly Property DOCUMENT_ID() As WhereParameter 
			Get
				If _DOCUMENT_ID_W Is Nothing Then
					_DOCUMENT_ID_W = TearOff.DOCUMENT_ID
				End If
				Return _DOCUMENT_ID_W
			End Get
		End Property

		Public ReadOnly Property FILENAME() As WhereParameter 
			Get
				If _FILENAME_W Is Nothing Then
					_FILENAME_W = TearOff.FILENAME
				End If
				Return _FILENAME_W
			End Get
		End Property

		Public ReadOnly Property DESCRIPTION() As WhereParameter 
			Get
				If _DESCRIPTION_W Is Nothing Then
					_DESCRIPTION_W = TearOff.DESCRIPTION
				End If
				Return _DESCRIPTION_W
			End Get
		End Property

		Public ReadOnly Property KEYWORDS() As WhereParameter 
			Get
				If _KEYWORDS_W Is Nothing Then
					_KEYWORDS_W = TearOff.KEYWORDS
				End If
				Return _KEYWORDS_W
			End Get
		End Property

		Public ReadOnly Property FILE_SIZE() As WhereParameter 
			Get
				If _FILE_SIZE_W Is Nothing Then
					_FILE_SIZE_W = TearOff.FILE_SIZE
				End If
				Return _FILE_SIZE_W
			End Get
		End Property

		Public ReadOnly Property UPLOADED_DATE() As WhereParameter 
			Get
				If _UPLOADED_DATE_W Is Nothing Then
					_UPLOADED_DATE_W = TearOff.UPLOADED_DATE
				End If
				Return _UPLOADED_DATE_W
			End Get
		End Property

		Public ReadOnly Property MIME_TYPE() As WhereParameter 
			Get
				If _MIME_TYPE_W Is Nothing Then
					_MIME_TYPE_W = TearOff.MIME_TYPE
				End If
				Return _MIME_TYPE_W
			End Get
		End Property

		Public ReadOnly Property USER_CODE() As WhereParameter 
			Get
				If _USER_CODE_W Is Nothing Then
					_USER_CODE_W = TearOff.USER_CODE
				End If
				Return _USER_CODE_W
			End Get
		End Property

		Public ReadOnly Property CMP_CODE() As WhereParameter 
			Get
				If _CMP_CODE_W Is Nothing Then
					_CMP_CODE_W = TearOff.CMP_CODE
				End If
				Return _CMP_CODE_W
			End Get
		End Property

		Public ReadOnly Property OFFICE_CODE() As WhereParameter 
			Get
				If _OFFICE_CODE_W Is Nothing Then
					_OFFICE_CODE_W = TearOff.OFFICE_CODE
				End If
				Return _OFFICE_CODE_W
			End Get
		End Property

		Public ReadOnly Property CL_CODE() As WhereParameter 
			Get
				If _CL_CODE_W Is Nothing Then
					_CL_CODE_W = TearOff.CL_CODE
				End If
				Return _CL_CODE_W
			End Get
		End Property

		Public ReadOnly Property DIV_CODE() As WhereParameter 
			Get
				If _DIV_CODE_W Is Nothing Then
					_DIV_CODE_W = TearOff.DIV_CODE
				End If
				Return _DIV_CODE_W
			End Get
		End Property

		Public ReadOnly Property PRD_CODE() As WhereParameter 
			Get
				If _PRD_CODE_W Is Nothing Then
					_PRD_CODE_W = TearOff.PRD_CODE
				End If
				Return _PRD_CODE_W
			End Get
		End Property

		Public ReadOnly Property JOB_NUMBER() As WhereParameter 
			Get
				If _JOB_NUMBER_W Is Nothing Then
					_JOB_NUMBER_W = TearOff.JOB_NUMBER
				End If
				Return _JOB_NUMBER_W
			End Get
		End Property

		Public ReadOnly Property JOB_COMPONENT_NBR() As WhereParameter 
			Get
				If _JOB_COMPONENT_NBR_W Is Nothing Then
					_JOB_COMPONENT_NBR_W = TearOff.JOB_COMPONENT_NBR
				End If
				Return _JOB_COMPONENT_NBR_W
			End Get
		End Property

		Public ReadOnly Property LEVEL() As WhereParameter 
			Get
				If _LEVEL_W Is Nothing Then
					_LEVEL_W = TearOff.LEVEL
				End If
				Return _LEVEL_W
			End Get
		End Property

		Public ReadOnly Property OFFICE_NAME() As WhereParameter 
			Get
				If _OFFICE_NAME_W Is Nothing Then
					_OFFICE_NAME_W = TearOff.OFFICE_NAME
				End If
				Return _OFFICE_NAME_W
			End Get
		End Property

		Public ReadOnly Property CAMPAIGN_NAME() As WhereParameter 
			Get
				If _CAMPAIGN_NAME_W Is Nothing Then
					_CAMPAIGN_NAME_W = TearOff.CAMPAIGN_NAME
				End If
				Return _CAMPAIGN_NAME_W
			End Get
		End Property

		Public ReadOnly Property CLIENT_NAME() As WhereParameter 
			Get
				If _CLIENT_NAME_W Is Nothing Then
					_CLIENT_NAME_W = TearOff.CLIENT_NAME
				End If
				Return _CLIENT_NAME_W
			End Get
		End Property

		Public ReadOnly Property DIVISION_NAME() As WhereParameter 
			Get
				If _DIVISION_NAME_W Is Nothing Then
					_DIVISION_NAME_W = TearOff.DIVISION_NAME
				End If
				Return _DIVISION_NAME_W
			End Get
		End Property

		Public ReadOnly Property PRODUCT_DESCRIPTION() As WhereParameter 
			Get
				If _PRODUCT_DESCRIPTION_W Is Nothing Then
					_PRODUCT_DESCRIPTION_W = TearOff.PRODUCT_DESCRIPTION
				End If
				Return _PRODUCT_DESCRIPTION_W
			End Get
		End Property

		Public ReadOnly Property JOB_DESCRIPTION() As WhereParameter 
			Get
				If _JOB_DESCRIPTION_W Is Nothing Then
					_JOB_DESCRIPTION_W = TearOff.JOB_DESCRIPTION
				End If
				Return _JOB_DESCRIPTION_W
			End Get
		End Property

		Public ReadOnly Property JOB_COMP_DESCRIPTION() As WhereParameter 
			Get
				If _JOB_COMP_DESCRIPTION_W Is Nothing Then
					_JOB_COMP_DESCRIPTION_W = TearOff.JOB_COMP_DESCRIPTION
				End If
				Return _JOB_COMP_DESCRIPTION_W
			End Get
		End Property

		Private _DOCUMENT_ID_W As WhereParameter = Nothing
		Private _FILENAME_W As WhereParameter = Nothing
		Private _DESCRIPTION_W As WhereParameter = Nothing
		Private _KEYWORDS_W As WhereParameter = Nothing
		Private _FILE_SIZE_W As WhereParameter = Nothing
		Private _UPLOADED_DATE_W As WhereParameter = Nothing
		Private _MIME_TYPE_W As WhereParameter = Nothing
		Private _USER_CODE_W As WhereParameter = Nothing
		Private _CMP_CODE_W As WhereParameter = Nothing
		Private _OFFICE_CODE_W As WhereParameter = Nothing
		Private _CL_CODE_W As WhereParameter = Nothing
		Private _DIV_CODE_W As WhereParameter = Nothing
		Private _PRD_CODE_W As WhereParameter = Nothing
		Private _JOB_NUMBER_W As WhereParameter = Nothing
		Private _JOB_COMPONENT_NBR_W As WhereParameter = Nothing
		Private _LEVEL_W As WhereParameter = Nothing
		Private _OFFICE_NAME_W As WhereParameter = Nothing
		Private _CAMPAIGN_NAME_W As WhereParameter = Nothing
		Private _CLIENT_NAME_W As WhereParameter = Nothing
		Private _DIVISION_NAME_W As WhereParameter = Nothing
		Private _PRODUCT_DESCRIPTION_W As WhereParameter = Nothing
		Private _JOB_DESCRIPTION_W As WhereParameter = Nothing
		Private _JOB_COMP_DESCRIPTION_W As WhereParameter = Nothing

		Public Sub WhereClauseReset()

		_DOCUMENT_ID_W = Nothing
		_FILENAME_W = Nothing
		_DESCRIPTION_W = Nothing
		_KEYWORDS_W = Nothing
		_FILE_SIZE_W = Nothing
		_UPLOADED_DATE_W = Nothing
		_MIME_TYPE_W = Nothing
		_USER_CODE_W = Nothing
		_CMP_CODE_W = Nothing
		_OFFICE_CODE_W = Nothing
		_CL_CODE_W = Nothing
		_DIV_CODE_W = Nothing
		_PRD_CODE_W = Nothing
		_JOB_NUMBER_W = Nothing
		_JOB_COMPONENT_NBR_W = Nothing
		_LEVEL_W = Nothing
		_OFFICE_NAME_W = Nothing
		_CAMPAIGN_NAME_W = Nothing
		_CLIENT_NAME_W = Nothing
		_DIVISION_NAME_W = Nothing
		_PRODUCT_DESCRIPTION_W = Nothing
		_JOB_DESCRIPTION_W = Nothing
		_JOB_COMP_DESCRIPTION_W = Nothing
			Me._entity.Query.FlushWhereParameters()

		End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffWhereParameter
    End Class	

	Public ReadOnly Property Where() As WhereClause
		Get
			If _whereClause Is Nothing Then
				_whereClause = New WhereClause(Me)
			End If
	
			Return _whereClause
		End Get
	End Property
	
	Private _whereClause As WhereClause = Nothing	
#End Region	

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffAggregateParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffAggregateParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "AggregateParameter TearOff's"
		Public class TearOffAggregateParameter

			Public Sub New(ByVal clause As AggregateClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property DOCUMENT_ID() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DOCUMENT_ID, Parameters.DOCUMENT_ID)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property FILENAME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FILENAME, Parameters.FILENAME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DESCRIPTION() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DESCRIPTION, Parameters.DESCRIPTION)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property KEYWORDS() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.KEYWORDS, Parameters.KEYWORDS)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property FILE_SIZE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FILE_SIZE, Parameters.FILE_SIZE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property UPLOADED_DATE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.UPLOADED_DATE, Parameters.UPLOADED_DATE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property MIME_TYPE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.MIME_TYPE, Parameters.MIME_TYPE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property USER_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.USER_CODE, Parameters.USER_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CMP_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CMP_CODE, Parameters.CMP_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property OFFICE_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.OFFICE_CODE, Parameters.OFFICE_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CL_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CL_CODE, Parameters.CL_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_CODE, Parameters.DIV_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PRD_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PRD_CODE, Parameters.PRD_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_NUMBER() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_NUMBER, Parameters.JOB_NUMBER)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_COMPONENT_NBR() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_COMPONENT_NBR, Parameters.JOB_COMPONENT_NBR)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property LEVEL() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.LEVEL, Parameters.LEVEL)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property OFFICE_NAME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.OFFICE_NAME, Parameters.OFFICE_NAME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CAMPAIGN_NAME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CAMPAIGN_NAME, Parameters.CAMPAIGN_NAME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CLIENT_NAME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CLIENT_NAME, Parameters.CLIENT_NAME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIVISION_NAME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIVISION_NAME, Parameters.DIVISION_NAME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PRODUCT_DESCRIPTION() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PRODUCT_DESCRIPTION, Parameters.PRODUCT_DESCRIPTION)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_DESCRIPTION() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_DESCRIPTION, Parameters.JOB_DESCRIPTION)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_COMP_DESCRIPTION() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_COMP_DESCRIPTION, Parameters.JOB_COMP_DESCRIPTION)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property


			Private _clause as AggregateClause
		End Class
		#End Region	

		Public ReadOnly Property DOCUMENT_ID() As AggregateParameter 
			Get
				If _DOCUMENT_ID_W Is Nothing Then
					_DOCUMENT_ID_W = TearOff.DOCUMENT_ID
				End If
				Return _DOCUMENT_ID_W
			End Get
		End Property

		Public ReadOnly Property FILENAME() As AggregateParameter 
			Get
				If _FILENAME_W Is Nothing Then
					_FILENAME_W = TearOff.FILENAME
				End If
				Return _FILENAME_W
			End Get
		End Property

		Public ReadOnly Property DESCRIPTION() As AggregateParameter 
			Get
				If _DESCRIPTION_W Is Nothing Then
					_DESCRIPTION_W = TearOff.DESCRIPTION
				End If
				Return _DESCRIPTION_W
			End Get
		End Property

		Public ReadOnly Property KEYWORDS() As AggregateParameter 
			Get
				If _KEYWORDS_W Is Nothing Then
					_KEYWORDS_W = TearOff.KEYWORDS
				End If
				Return _KEYWORDS_W
			End Get
		End Property

		Public ReadOnly Property FILE_SIZE() As AggregateParameter 
			Get
				If _FILE_SIZE_W Is Nothing Then
					_FILE_SIZE_W = TearOff.FILE_SIZE
				End If
				Return _FILE_SIZE_W
			End Get
		End Property

		Public ReadOnly Property UPLOADED_DATE() As AggregateParameter 
			Get
				If _UPLOADED_DATE_W Is Nothing Then
					_UPLOADED_DATE_W = TearOff.UPLOADED_DATE
				End If
				Return _UPLOADED_DATE_W
			End Get
		End Property

		Public ReadOnly Property MIME_TYPE() As AggregateParameter 
			Get
				If _MIME_TYPE_W Is Nothing Then
					_MIME_TYPE_W = TearOff.MIME_TYPE
				End If
				Return _MIME_TYPE_W
			End Get
		End Property

		Public ReadOnly Property USER_CODE() As AggregateParameter 
			Get
				If _USER_CODE_W Is Nothing Then
					_USER_CODE_W = TearOff.USER_CODE
				End If
				Return _USER_CODE_W
			End Get
		End Property

		Public ReadOnly Property CMP_CODE() As AggregateParameter 
			Get
				If _CMP_CODE_W Is Nothing Then
					_CMP_CODE_W = TearOff.CMP_CODE
				End If
				Return _CMP_CODE_W
			End Get
		End Property

		Public ReadOnly Property OFFICE_CODE() As AggregateParameter 
			Get
				If _OFFICE_CODE_W Is Nothing Then
					_OFFICE_CODE_W = TearOff.OFFICE_CODE
				End If
				Return _OFFICE_CODE_W
			End Get
		End Property

		Public ReadOnly Property CL_CODE() As AggregateParameter 
			Get
				If _CL_CODE_W Is Nothing Then
					_CL_CODE_W = TearOff.CL_CODE
				End If
				Return _CL_CODE_W
			End Get
		End Property

		Public ReadOnly Property DIV_CODE() As AggregateParameter 
			Get
				If _DIV_CODE_W Is Nothing Then
					_DIV_CODE_W = TearOff.DIV_CODE
				End If
				Return _DIV_CODE_W
			End Get
		End Property

		Public ReadOnly Property PRD_CODE() As AggregateParameter 
			Get
				If _PRD_CODE_W Is Nothing Then
					_PRD_CODE_W = TearOff.PRD_CODE
				End If
				Return _PRD_CODE_W
			End Get
		End Property

		Public ReadOnly Property JOB_NUMBER() As AggregateParameter 
			Get
				If _JOB_NUMBER_W Is Nothing Then
					_JOB_NUMBER_W = TearOff.JOB_NUMBER
				End If
				Return _JOB_NUMBER_W
			End Get
		End Property

		Public ReadOnly Property JOB_COMPONENT_NBR() As AggregateParameter 
			Get
				If _JOB_COMPONENT_NBR_W Is Nothing Then
					_JOB_COMPONENT_NBR_W = TearOff.JOB_COMPONENT_NBR
				End If
				Return _JOB_COMPONENT_NBR_W
			End Get
		End Property

		Public ReadOnly Property LEVEL() As AggregateParameter 
			Get
				If _LEVEL_W Is Nothing Then
					_LEVEL_W = TearOff.LEVEL
				End If
				Return _LEVEL_W
			End Get
		End Property

		Public ReadOnly Property OFFICE_NAME() As AggregateParameter 
			Get
				If _OFFICE_NAME_W Is Nothing Then
					_OFFICE_NAME_W = TearOff.OFFICE_NAME
				End If
				Return _OFFICE_NAME_W
			End Get
		End Property

		Public ReadOnly Property CAMPAIGN_NAME() As AggregateParameter 
			Get
				If _CAMPAIGN_NAME_W Is Nothing Then
					_CAMPAIGN_NAME_W = TearOff.CAMPAIGN_NAME
				End If
				Return _CAMPAIGN_NAME_W
			End Get
		End Property

		Public ReadOnly Property CLIENT_NAME() As AggregateParameter 
			Get
				If _CLIENT_NAME_W Is Nothing Then
					_CLIENT_NAME_W = TearOff.CLIENT_NAME
				End If
				Return _CLIENT_NAME_W
			End Get
		End Property

		Public ReadOnly Property DIVISION_NAME() As AggregateParameter 
			Get
				If _DIVISION_NAME_W Is Nothing Then
					_DIVISION_NAME_W = TearOff.DIVISION_NAME
				End If
				Return _DIVISION_NAME_W
			End Get
		End Property

		Public ReadOnly Property PRODUCT_DESCRIPTION() As AggregateParameter 
			Get
				If _PRODUCT_DESCRIPTION_W Is Nothing Then
					_PRODUCT_DESCRIPTION_W = TearOff.PRODUCT_DESCRIPTION
				End If
				Return _PRODUCT_DESCRIPTION_W
			End Get
		End Property

		Public ReadOnly Property JOB_DESCRIPTION() As AggregateParameter 
			Get
				If _JOB_DESCRIPTION_W Is Nothing Then
					_JOB_DESCRIPTION_W = TearOff.JOB_DESCRIPTION
				End If
				Return _JOB_DESCRIPTION_W
			End Get
		End Property

		Public ReadOnly Property JOB_COMP_DESCRIPTION() As AggregateParameter 
			Get
				If _JOB_COMP_DESCRIPTION_W Is Nothing Then
					_JOB_COMP_DESCRIPTION_W = TearOff.JOB_COMP_DESCRIPTION
				End If
				Return _JOB_COMP_DESCRIPTION_W
			End Get
		End Property

		Private _DOCUMENT_ID_W As AggregateParameter = Nothing
		Private _FILENAME_W As AggregateParameter = Nothing
		Private _DESCRIPTION_W As AggregateParameter = Nothing
		Private _KEYWORDS_W As AggregateParameter = Nothing
		Private _FILE_SIZE_W As AggregateParameter = Nothing
		Private _UPLOADED_DATE_W As AggregateParameter = Nothing
		Private _MIME_TYPE_W As AggregateParameter = Nothing
		Private _USER_CODE_W As AggregateParameter = Nothing
		Private _CMP_CODE_W As AggregateParameter = Nothing
		Private _OFFICE_CODE_W As AggregateParameter = Nothing
		Private _CL_CODE_W As AggregateParameter = Nothing
		Private _DIV_CODE_W As AggregateParameter = Nothing
		Private _PRD_CODE_W As AggregateParameter = Nothing
		Private _JOB_NUMBER_W As AggregateParameter = Nothing
		Private _JOB_COMPONENT_NBR_W As AggregateParameter = Nothing
		Private _LEVEL_W As AggregateParameter = Nothing
		Private _OFFICE_NAME_W As AggregateParameter = Nothing
		Private _CAMPAIGN_NAME_W As AggregateParameter = Nothing
		Private _CLIENT_NAME_W As AggregateParameter = Nothing
		Private _DIVISION_NAME_W As AggregateParameter = Nothing
		Private _PRODUCT_DESCRIPTION_W As AggregateParameter = Nothing
		Private _JOB_DESCRIPTION_W As AggregateParameter = Nothing
		Private _JOB_COMP_DESCRIPTION_W As AggregateParameter = Nothing

		Public Sub AggregateClauseReset()

		_DOCUMENT_ID_W = Nothing
		_FILENAME_W = Nothing
		_DESCRIPTION_W = Nothing
		_KEYWORDS_W = Nothing
		_FILE_SIZE_W = Nothing
		_UPLOADED_DATE_W = Nothing
		_MIME_TYPE_W = Nothing
		_USER_CODE_W = Nothing
		_CMP_CODE_W = Nothing
		_OFFICE_CODE_W = Nothing
		_CL_CODE_W = Nothing
		_DIV_CODE_W = Nothing
		_PRD_CODE_W = Nothing
		_JOB_NUMBER_W = Nothing
		_JOB_COMPONENT_NBR_W = Nothing
		_LEVEL_W = Nothing
		_OFFICE_NAME_W = Nothing
		_CAMPAIGN_NAME_W = Nothing
		_CLIENT_NAME_W = Nothing
		_DIVISION_NAME_W = Nothing
		_PRODUCT_DESCRIPTION_W = Nothing
		_JOB_DESCRIPTION_W = Nothing
		_JOB_COMP_DESCRIPTION_W = Nothing
			Me._entity.Query.FlushAggregateParameters()

		End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffAggregateParameter
    End Class	

	Public ReadOnly Property Aggregate() As AggregateClause
		Get
			If _aggregateClause Is Nothing Then
				_aggregateClause = New AggregateClause(Me)
			End If
	
			Return _aggregateClause
		End Get
	End Property
	
	Private _aggregateClause As AggregateClause = Nothing	
#End Region	

	Protected Overrides Function GetInsertCommand() As IDbCommand
		Return Nothing
	End Function
	
	Protected Overrides Function GetUpdateCommand() As IDbCommand
		Return Nothing
	End Function
	
	Protected Overrides Function GetDeleteCommand() As IDbCommand
		Return Nothing
	End Function
	
End Class

