
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================

' Generated by MyGeneration Version # (1.2.0.2)

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _WV_MYALERTSLISTJJ
	Inherits  SqlClientEntity
	
		Public Sub New() 
			Me.QuerySource = "WV_MYALERTSLISTJJ"
			Me.MappingName = "WV_MYALERTSLISTJJ"
		End Sub

	'=================================================================
	'  	Public Function LoadAll() As Boolean
	'=================================================================
	'  Loads all of the records in the database, and sets the currentRow to the first row
	'=================================================================
	Public Function LoadAll() As Boolean
    	Return MyBase.Query.Load()
	End Function
	
	Public Overrides Sub FlushData()
		Me._whereClause = nothing
		Me._aggregateClause = nothing		
		MyBase.FlushData()
	End Sub	

	#Region "Parameters"
	Protected class Parameters 
		
		Public Shared ReadOnly Property ALERT_ID As SqlParameter
			Get
				Return New SqlParameter("ALERT_ID", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property SUBJECT As SqlParameter
			Get
				Return New SqlParameter("SUBJECT", SqlDbType.VarChar, 254)
			End Get
		End Property
		
		Public Shared ReadOnly Property GENERATED As SqlParameter
			Get
				Return New SqlParameter("GENERATED", SqlDbType.SmallDateTime, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property USER_NAME As SqlParameter
			Get
				Return New SqlParameter("USER_NAME", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property PRIORITY As SqlParameter
			Get
				Return New SqlParameter("PRIORITY", SqlDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property TYPE As SqlParameter
			Get
				Return New SqlParameter("TYPE", SqlDbType.VarChar, 40)
			End Get
		End Property
		
		Public Shared ReadOnly Property CATEGORY As SqlParameter
			Get
				Return New SqlParameter("CATEGORY", SqlDbType.VarChar, 40)
			End Get
		End Property
		
		Public Shared ReadOnly Property ALERT_TYPE_ID As SqlParameter
			Get
				Return New SqlParameter("ALERT_TYPE_ID", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property ALERT_CAT_ID As SqlParameter
			Get
				Return New SqlParameter("ALERT_CAT_ID", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property ATTACHMENTCOUNT As SqlParameter
			Get
				Return New SqlParameter("ATTACHMENTCOUNT", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property ALERT_LEVEL As SqlParameter
			Get
				Return New SqlParameter("ALERT_LEVEL", SqlDbType.VarChar, 50)
			End Get
		End Property
		
		Public Shared ReadOnly Property OFFICE_CODE As SqlParameter
			Get
				Return New SqlParameter("OFFICE_CODE", SqlDbType.VarChar, 4)
			End Get
		End Property
		
		Public Shared ReadOnly Property CL_CODE As SqlParameter
			Get
				Return New SqlParameter("CL_CODE", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_CODE As SqlParameter
			Get
				Return New SqlParameter("DIV_CODE", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property PRD_CODE As SqlParameter
			Get
				Return New SqlParameter("PRD_CODE", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property CMP_CODE As SqlParameter
			Get
				Return New SqlParameter("CMP_CODE", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property JOB_NUMBER As SqlParameter
			Get
				Return New SqlParameter("JOB_NUMBER", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property JOB_COMPONENT_NBR As SqlParameter
			Get
				Return New SqlParameter("JOB_COMPONENT_NBR", SqlDbType.SmallInt, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property SENDER_EMP_CODE As SqlParameter
			Get
				Return New SqlParameter("SENDER_EMP_CODE", SqlDbType.VarChar, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property CL_NAME As SqlParameter
			Get
				Return New SqlParameter("CL_NAME", SqlDbType.VarChar, 40)
			End Get
		End Property
		
		Public Shared ReadOnly Property DIV_NAME As SqlParameter
			Get
				Return New SqlParameter("DIV_NAME", SqlDbType.VarChar, 40)
			End Get
		End Property
		
		Public Shared ReadOnly Property PRD_DESCRIPTION As SqlParameter
			Get
				Return New SqlParameter("PRD_DESCRIPTION", SqlDbType.VarChar, 40)
			End Get
		End Property
		
		Public Shared ReadOnly Property CMP_NAME As SqlParameter
			Get
                Return New SqlParameter("CMP_NAME", SqlDbType.VarChar, 128)
            End Get
		End Property
		
		Public Shared ReadOnly Property BODY As SqlParameter
			Get
				Return New SqlParameter("BODY", SqlDbType.Text, 2147483647)
			End Get
		End Property
		
		Public Shared ReadOnly Property LOWER_SUBJECT As SqlParameter
			Get
				Return New SqlParameter("LOWER_SUBJECT", SqlDbType.VarChar, 254)
			End Get
		End Property
		
		Public Shared ReadOnly Property LOWER_BODY As SqlParameter
			Get
				Return New SqlParameter("LOWER_BODY", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property OFFICE_NAME As SqlParameter
			Get
				Return New SqlParameter("OFFICE_NAME", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property JOB_DESC As SqlParameter
			Get
				Return New SqlParameter("JOB_DESC", SqlDbType.VarChar, 60)
			End Get
		End Property
		
		Public Shared ReadOnly Property JOB_COMP_DESC As SqlParameter
			Get
				Return New SqlParameter("JOB_COMP_DESC", SqlDbType.VarChar, 60)
			End Get
		End Property
		
		Public Shared ReadOnly Property ALERT_USER As SqlParameter
			Get
				Return New SqlParameter("ALERT_USER", SqlDbType.VarChar, 100)
			End Get
		End Property
		
		Public Shared ReadOnly Property CP_ALERT As SqlParameter
			Get
				Return New SqlParameter("CP_ALERT", SqlDbType.SmallInt, 0)
			End Get
        End Property

        Public Shared ReadOnly Property DUE_DATE() As SqlParameter
            Get
                Return New SqlParameter("DUE_DATE", SqlDbType.SmallDateTime, 0)
            End Get
        End Property
		
        Public Shared ReadOnly Property TIME_DUE() As SqlParameter
            Get
                Return New SqlParameter("TIME_DUE", SqlDbType.SmallDateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property ALERT_STATE_ID() As SqlParameter
            Get
                Return New SqlParameter("ALERT_STATE_ID", SqlDbType.Int, 0)
            End Get
        End Property

    End Class
	#End Region	

	#Region "ColumnNames"
	Public class ColumnNames
		
        Public Const ALERT_ID As String = "ALERT_ID"
        Public Const SUBJECT As String = "SUBJECT"
        Public Const GENERATED As String = "GENERATED"
        Public Const USER_NAME As String = "USER_NAME"
        Public Const PRIORITY As String = "PRIORITY"
        Public Const TYPE As String = "TYPE"
        Public Const CATEGORY As String = "CATEGORY"
        Public Const ALERT_TYPE_ID As String = "ALERT_TYPE_ID"
        Public Const ALERT_CAT_ID As String = "ALERT_CAT_ID"
        Public Const ATTACHMENTCOUNT As String = "ATTACHMENTCOUNT"
        Public Const ALERT_LEVEL As String = "ALERT_LEVEL"
        Public Const OFFICE_CODE As String = "OFFICE_CODE"
        Public Const CL_CODE As String = "CL_CODE"
        Public Const DIV_CODE As String = "DIV_CODE"
        Public Const PRD_CODE As String = "PRD_CODE"
        Public Const CMP_CODE As String = "CMP_CODE"
        Public Const JOB_NUMBER As String = "JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "JOB_COMPONENT_NBR"
        Public Const SENDER_EMP_CODE As String = "SENDER_EMP_CODE"
        Public Const CL_NAME As String = "CL_NAME"
        Public Const DIV_NAME As String = "DIV_NAME"
        Public Const PRD_DESCRIPTION As String = "PRD_DESCRIPTION"
        Public Const CMP_NAME As String = "CMP_NAME"
        Public Const BODY As String = "BODY"
        Public Const LOWER_SUBJECT As String = "LOWER_SUBJECT"
        Public Const LOWER_BODY As String = "LOWER_BODY"
        Public Const OFFICE_NAME As String = "OFFICE_NAME"
        Public Const JOB_DESC As String = "JOB_DESC"
        Public Const JOB_COMP_DESC As String = "JOB_COMP_DESC"
        Public Const ALERT_USER As String = "ALERT_USER"
        Public Const CP_ALERT As String = "CP_ALERT"
        Public Const DUE_DATE As String = "DUE_DATE"
        Public Const TIME_DUE As String = "TIME_DUE"
        Public Const ALERT_STATE_ID As String = "ALERT_STATE_ID"

		Shared Public Function ToPropertyName(ByVal columnName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(ALERT_ID) = _WV_MYALERTSLISTJJ.PropertyNames.ALERT_ID
				ht(SUBJECT) = _WV_MYALERTSLISTJJ.PropertyNames.SUBJECT
				ht(GENERATED) = _WV_MYALERTSLISTJJ.PropertyNames.GENERATED
				ht(USER_NAME) = _WV_MYALERTSLISTJJ.PropertyNames.USER_NAME
				ht(PRIORITY) = _WV_MYALERTSLISTJJ.PropertyNames.PRIORITY
				ht(TYPE) = _WV_MYALERTSLISTJJ.PropertyNames.TYPE
				ht(CATEGORY) = _WV_MYALERTSLISTJJ.PropertyNames.CATEGORY
				ht(ALERT_TYPE_ID) = _WV_MYALERTSLISTJJ.PropertyNames.ALERT_TYPE_ID
				ht(ALERT_CAT_ID) = _WV_MYALERTSLISTJJ.PropertyNames.ALERT_CAT_ID
				ht(ATTACHMENTCOUNT) = _WV_MYALERTSLISTJJ.PropertyNames.ATTACHMENTCOUNT
				ht(ALERT_LEVEL) = _WV_MYALERTSLISTJJ.PropertyNames.ALERT_LEVEL
				ht(OFFICE_CODE) = _WV_MYALERTSLISTJJ.PropertyNames.OFFICE_CODE
				ht(CL_CODE) = _WV_MYALERTSLISTJJ.PropertyNames.CL_CODE
				ht(DIV_CODE) = _WV_MYALERTSLISTJJ.PropertyNames.DIV_CODE
				ht(PRD_CODE) = _WV_MYALERTSLISTJJ.PropertyNames.PRD_CODE
				ht(CMP_CODE) = _WV_MYALERTSLISTJJ.PropertyNames.CMP_CODE
				ht(JOB_NUMBER) = _WV_MYALERTSLISTJJ.PropertyNames.JOB_NUMBER
				ht(JOB_COMPONENT_NBR) = _WV_MYALERTSLISTJJ.PropertyNames.JOB_COMPONENT_NBR
				ht(SENDER_EMP_CODE) = _WV_MYALERTSLISTJJ.PropertyNames.SENDER_EMP_CODE
				ht(CL_NAME) = _WV_MYALERTSLISTJJ.PropertyNames.CL_NAME
				ht(DIV_NAME) = _WV_MYALERTSLISTJJ.PropertyNames.DIV_NAME
				ht(PRD_DESCRIPTION) = _WV_MYALERTSLISTJJ.PropertyNames.PRD_DESCRIPTION
				ht(CMP_NAME) = _WV_MYALERTSLISTJJ.PropertyNames.CMP_NAME
				ht(BODY) = _WV_MYALERTSLISTJJ.PropertyNames.BODY
				ht(LOWER_SUBJECT) = _WV_MYALERTSLISTJJ.PropertyNames.LOWER_SUBJECT
				ht(LOWER_BODY) = _WV_MYALERTSLISTJJ.PropertyNames.LOWER_BODY
				ht(OFFICE_NAME) = _WV_MYALERTSLISTJJ.PropertyNames.OFFICE_NAME
				ht(JOB_DESC) = _WV_MYALERTSLISTJJ.PropertyNames.JOB_DESC
				ht(JOB_COMP_DESC) = _WV_MYALERTSLISTJJ.PropertyNames.JOB_COMP_DESC
				ht(ALERT_USER) = _WV_MYALERTSLISTJJ.PropertyNames.ALERT_USER
				ht(CP_ALERT) = _WV_MYALERTSLISTJJ.PropertyNames.CP_ALERT
                ht(DUE_DATE) = _WV_MYALERTSLISTJJ.PropertyNames.DUE_DATE
                ht(TIME_DUE) = _WV_MYALERTSLISTJJ.PropertyNames.TIME_DUE
                ht(ALERT_STATE_ID) = _WV_MYALERTSLISTJJ.PropertyNames.ALERT_STATE_ID

			End If
			
			Return CType(ht(columnName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing		 
	End Class
	#End Region	
	
	#Region "PropertyNames"
	Public class PropertyNames
		
        Public Const ALERT_ID As String = "ALERT_ID"
        Public Const SUBJECT As String = "SUBJECT"
        Public Const GENERATED As String = "GENERATED"
        Public Const USER_NAME As String = "USER_NAME"
        Public Const PRIORITY As String = "PRIORITY"
        Public Const TYPE As String = "TYPE"
        Public Const CATEGORY As String = "CATEGORY"
        Public Const ALERT_TYPE_ID As String = "ALERT_TYPE_ID"
        Public Const ALERT_CAT_ID As String = "ALERT_CAT_ID"
        Public Const ATTACHMENTCOUNT As String = "ATTACHMENTCOUNT"
        Public Const ALERT_LEVEL As String = "ALERT_LEVEL"
        Public Const OFFICE_CODE As String = "OFFICE_CODE"
        Public Const CL_CODE As String = "CL_CODE"
        Public Const DIV_CODE As String = "DIV_CODE"
        Public Const PRD_CODE As String = "PRD_CODE"
        Public Const CMP_CODE As String = "CMP_CODE"
        Public Const JOB_NUMBER As String = "JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "JOB_COMPONENT_NBR"
        Public Const SENDER_EMP_CODE As String = "SENDER_EMP_CODE"
        Public Const CL_NAME As String = "CL_NAME"
        Public Const DIV_NAME As String = "DIV_NAME"
        Public Const PRD_DESCRIPTION As String = "PRD_DESCRIPTION"
        Public Const CMP_NAME As String = "CMP_NAME"
        Public Const BODY As String = "BODY"
        Public Const LOWER_SUBJECT As String = "LOWER_SUBJECT"
        Public Const LOWER_BODY As String = "LOWER_BODY"
        Public Const OFFICE_NAME As String = "OFFICE_NAME"
        Public Const JOB_DESC As String = "JOB_DESC"
        Public Const JOB_COMP_DESC As String = "JOB_COMP_DESC"
        Public Const ALERT_USER As String = "ALERT_USER"
        Public Const CP_ALERT As String = "CP_ALERT"
        Public Const DUE_DATE As String = "DUE_DATE"
        Public Const TIME_DUE As String = "TIME_DUE"
        Public Const ALERT_STATE_ID As String = "ALERT_STATE_ID"

        Public Shared Function ToColumnName(ByVal propertyName As String) As String

            If ht Is Nothing Then

                ht = New Hashtable

                ht(ALERT_ID) = _WV_MYALERTSLISTJJ.ColumnNames.ALERT_ID
                ht(SUBJECT) = _WV_MYALERTSLISTJJ.ColumnNames.SUBJECT
                ht(GENERATED) = _WV_MYALERTSLISTJJ.ColumnNames.GENERATED
                ht(USER_NAME) = _WV_MYALERTSLISTJJ.ColumnNames.USER_NAME
                ht(PRIORITY) = _WV_MYALERTSLISTJJ.ColumnNames.PRIORITY
                ht(TYPE) = _WV_MYALERTSLISTJJ.ColumnNames.TYPE
                ht(CATEGORY) = _WV_MYALERTSLISTJJ.ColumnNames.CATEGORY
                ht(ALERT_TYPE_ID) = _WV_MYALERTSLISTJJ.ColumnNames.ALERT_TYPE_ID
                ht(ALERT_CAT_ID) = _WV_MYALERTSLISTJJ.ColumnNames.ALERT_CAT_ID
                ht(ATTACHMENTCOUNT) = _WV_MYALERTSLISTJJ.ColumnNames.ATTACHMENTCOUNT
                ht(ALERT_LEVEL) = _WV_MYALERTSLISTJJ.ColumnNames.ALERT_LEVEL
                ht(OFFICE_CODE) = _WV_MYALERTSLISTJJ.ColumnNames.OFFICE_CODE
                ht(CL_CODE) = _WV_MYALERTSLISTJJ.ColumnNames.CL_CODE
                ht(DIV_CODE) = _WV_MYALERTSLISTJJ.ColumnNames.DIV_CODE
                ht(PRD_CODE) = _WV_MYALERTSLISTJJ.ColumnNames.PRD_CODE
                ht(CMP_CODE) = _WV_MYALERTSLISTJJ.ColumnNames.CMP_CODE
                ht(JOB_NUMBER) = _WV_MYALERTSLISTJJ.ColumnNames.JOB_NUMBER
                ht(JOB_COMPONENT_NBR) = _WV_MYALERTSLISTJJ.ColumnNames.JOB_COMPONENT_NBR
                ht(SENDER_EMP_CODE) = _WV_MYALERTSLISTJJ.ColumnNames.SENDER_EMP_CODE
                ht(CL_NAME) = _WV_MYALERTSLISTJJ.ColumnNames.CL_NAME
                ht(DIV_NAME) = _WV_MYALERTSLISTJJ.ColumnNames.DIV_NAME
                ht(PRD_DESCRIPTION) = _WV_MYALERTSLISTJJ.ColumnNames.PRD_DESCRIPTION
                ht(CMP_NAME) = _WV_MYALERTSLISTJJ.ColumnNames.CMP_NAME
                ht(BODY) = _WV_MYALERTSLISTJJ.ColumnNames.BODY
                ht(LOWER_SUBJECT) = _WV_MYALERTSLISTJJ.ColumnNames.LOWER_SUBJECT
                ht(LOWER_BODY) = _WV_MYALERTSLISTJJ.ColumnNames.LOWER_BODY
                ht(OFFICE_NAME) = _WV_MYALERTSLISTJJ.ColumnNames.OFFICE_NAME
                ht(JOB_DESC) = _WV_MYALERTSLISTJJ.ColumnNames.JOB_DESC
                ht(JOB_COMP_DESC) = _WV_MYALERTSLISTJJ.ColumnNames.JOB_COMP_DESC
                ht(ALERT_USER) = _WV_MYALERTSLISTJJ.ColumnNames.ALERT_USER
                ht(CP_ALERT) = _WV_MYALERTSLISTJJ.ColumnNames.CP_ALERT
                ht(DUE_DATE) = _WV_MYALERTSLISTJJ.ColumnNames.DUE_DATE
                ht(TIME_DUE) = _WV_MYALERTSLISTJJ.ColumnNames.TIME_DUE
                ht(ALERT_STATE_ID) = _WV_MYALERTSLISTJJ.ColumnNames.ALERT_STATE_ID

            End If

            Return CType(ht(propertyName), String)

        End Function

        Private Shared ht As Hashtable = Nothing

    End Class
	#End Region	
	
	#Region "StringPropertyNames"
	Public class StringPropertyNames
		
        Public Const ALERT_ID As String = "s_ALERT_ID"
        Public Const SUBJECT As String = "s_SUBJECT"
        Public Const GENERATED As String = "s_GENERATED"
        Public Const USER_NAME As String = "s_USER_NAME"
        Public Const PRIORITY As String = "s_PRIORITY"
        Public Const TYPE As String = "s_TYPE"
        Public Const CATEGORY As String = "s_CATEGORY"
        Public Const ALERT_TYPE_ID As String = "s_ALERT_TYPE_ID"
        Public Const ALERT_CAT_ID As String = "s_ALERT_CAT_ID"
        Public Const ATTACHMENTCOUNT As String = "s_ATTACHMENTCOUNT"
        Public Const ALERT_LEVEL As String = "s_ALERT_LEVEL"
        Public Const OFFICE_CODE As String = "s_OFFICE_CODE"
        Public Const CL_CODE As String = "s_CL_CODE"
        Public Const DIV_CODE As String = "s_DIV_CODE"
        Public Const PRD_CODE As String = "s_PRD_CODE"
        Public Const CMP_CODE As String = "s_CMP_CODE"
        Public Const JOB_NUMBER As String = "s_JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "s_JOB_COMPONENT_NBR"
        Public Const SENDER_EMP_CODE As String = "s_SENDER_EMP_CODE"
        Public Const CL_NAME As String = "s_CL_NAME"
        Public Const DIV_NAME As String = "s_DIV_NAME"
        Public Const PRD_DESCRIPTION As String = "s_PRD_DESCRIPTION"
        Public Const CMP_NAME As String = "s_CMP_NAME"
        Public Const BODY As String = "s_BODY"
        Public Const LOWER_SUBJECT As String = "s_LOWER_SUBJECT"
        Public Const LOWER_BODY As String = "s_LOWER_BODY"
        Public Const OFFICE_NAME As String = "s_OFFICE_NAME"
        Public Const JOB_DESC As String = "s_JOB_DESC"
        Public Const JOB_COMP_DESC As String = "s_JOB_COMP_DESC"
        Public Const ALERT_USER As String = "s_ALERT_USER"
        Public Const CP_ALERT As String = "s_CP_ALERT"
        Public Const DUE_DATE As String = "s_DUE_DATE"
        Public Const TIME_DUE As String = "s_TIME_DUE"
        Public Const ALERT_STATE_ID As String = "s_ALERT_STATE_ID"

    End Class
	#End Region		
	
	#Region "Properties" 
		Public Overridable Property ALERT_ID As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.ALERT_ID)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.ALERT_ID, Value)
			End Set
		End Property

		Public Overridable Property SUBJECT As String
			Get
				Return MyBase.GetString(ColumnNames.SUBJECT)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.SUBJECT, Value)
			End Set
		End Property

		Public Overridable Property GENERATED As DateTime
			Get
				Return MyBase.GetDateTime(ColumnNames.GENERATED)
			End Get
			Set(ByVal Value As DateTime)
				MyBase.SetDateTime(ColumnNames.GENERATED, Value)
			End Set
		End Property

		Public Overridable Property USER_NAME As String
			Get
				Return MyBase.GetString(ColumnNames.USER_NAME)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.USER_NAME, Value)
			End Set
		End Property

		Public Overridable Property PRIORITY As Short
			Get
				Return MyBase.GetShort(ColumnNames.PRIORITY)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.PRIORITY, Value)
			End Set
		End Property

		Public Overridable Property TYPE As String
			Get
				Return MyBase.GetString(ColumnNames.TYPE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.TYPE, Value)
			End Set
		End Property

		Public Overridable Property CATEGORY As String
			Get
				Return MyBase.GetString(ColumnNames.CATEGORY)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.CATEGORY, Value)
			End Set
		End Property

		Public Overridable Property ALERT_TYPE_ID As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.ALERT_TYPE_ID)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.ALERT_TYPE_ID, Value)
			End Set
		End Property

		Public Overridable Property ALERT_CAT_ID As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.ALERT_CAT_ID)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.ALERT_CAT_ID, Value)
			End Set
		End Property

		Public Overridable Property ATTACHMENTCOUNT As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.ATTACHMENTCOUNT)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.ATTACHMENTCOUNT, Value)
			End Set
		End Property

		Public Overridable Property ALERT_LEVEL As String
			Get
				Return MyBase.GetString(ColumnNames.ALERT_LEVEL)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.ALERT_LEVEL, Value)
			End Set
		End Property

		Public Overridable Property OFFICE_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.OFFICE_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.OFFICE_CODE, Value)
			End Set
		End Property

		Public Overridable Property CL_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.CL_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.CL_CODE, Value)
			End Set
		End Property

		Public Overridable Property DIV_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_CODE, Value)
			End Set
		End Property

		Public Overridable Property PRD_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.PRD_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.PRD_CODE, Value)
			End Set
		End Property

		Public Overridable Property CMP_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.CMP_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.CMP_CODE, Value)
			End Set
		End Property

		Public Overridable Property JOB_NUMBER As Integer
			Get
				Return MyBase.GetInteger(ColumnNames.JOB_NUMBER)
			End Get
			Set(ByVal Value As Integer)
				MyBase.SetInteger(ColumnNames.JOB_NUMBER, Value)
			End Set
		End Property

		Public Overridable Property JOB_COMPONENT_NBR As Short
			Get
				Return MyBase.GetShort(ColumnNames.JOB_COMPONENT_NBR)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.JOB_COMPONENT_NBR, Value)
			End Set
		End Property

		Public Overridable Property SENDER_EMP_CODE As String
			Get
				Return MyBase.GetString(ColumnNames.SENDER_EMP_CODE)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.SENDER_EMP_CODE, Value)
			End Set
		End Property

		Public Overridable Property CL_NAME As String
			Get
				Return MyBase.GetString(ColumnNames.CL_NAME)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.CL_NAME, Value)
			End Set
		End Property

		Public Overridable Property DIV_NAME As String
			Get
				Return MyBase.GetString(ColumnNames.DIV_NAME)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.DIV_NAME, Value)
			End Set
		End Property

		Public Overridable Property PRD_DESCRIPTION As String
			Get
				Return MyBase.GetString(ColumnNames.PRD_DESCRIPTION)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.PRD_DESCRIPTION, Value)
			End Set
		End Property

		Public Overridable Property CMP_NAME As String
			Get
				Return MyBase.GetString(ColumnNames.CMP_NAME)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.CMP_NAME, Value)
			End Set
		End Property

		Public Overridable Property BODY As String
			Get
				Return MyBase.GetString(ColumnNames.BODY)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.BODY, Value)
			End Set
		End Property

		Public Overridable Property LOWER_SUBJECT As String
			Get
				Return MyBase.GetString(ColumnNames.LOWER_SUBJECT)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.LOWER_SUBJECT, Value)
			End Set
		End Property

		Public Overridable Property LOWER_BODY As String
			Get
				Return MyBase.GetString(ColumnNames.LOWER_BODY)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.LOWER_BODY, Value)
			End Set
		End Property

		Public Overridable Property OFFICE_NAME As String
			Get
				Return MyBase.GetString(ColumnNames.OFFICE_NAME)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.OFFICE_NAME, Value)
			End Set
		End Property

		Public Overridable Property JOB_DESC As String
			Get
				Return MyBase.GetString(ColumnNames.JOB_DESC)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.JOB_DESC, Value)
			End Set
		End Property

		Public Overridable Property JOB_COMP_DESC As String
			Get
				Return MyBase.GetString(ColumnNames.JOB_COMP_DESC)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.JOB_COMP_DESC, Value)
			End Set
		End Property

		Public Overridable Property ALERT_USER As String
			Get
				Return MyBase.GetString(ColumnNames.ALERT_USER)
			End Get
			Set(ByVal Value As String)
				MyBase.SetString(ColumnNames.ALERT_USER, Value)
			End Set
		End Property

		Public Overridable Property CP_ALERT As Short
			Get
				Return MyBase.GetShort(ColumnNames.CP_ALERT)
			End Get
			Set(ByVal Value As Short)
				MyBase.SetShort(ColumnNames.CP_ALERT, Value)
			End Set
		End Property

    Public Overridable Property DUE_DATE() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.DUE_DATE)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.DUE_DATE, Value)
        End Set
    End Property

    Public Overridable Property TIME_DUE() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.TIME_DUE)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.TIME_DUE, Value)
        End Set
    End Property

    Public Overridable Property ALERT_STATE_ID() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.ALERT_STATE_ID)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.ALERT_STATE_ID, Value)
        End Set
    End Property



#End Region
	
	#Region "String Properties" 

		Public Overridable Property s_ALERT_ID As String
			Get
				If Me.IsColumnNull(ColumnNames.ALERT_ID) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.ALERT_ID)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ALERT_ID)
				Else
					Me.ALERT_ID = MyBase.SetIntegerAsString(ColumnNames.ALERT_ID, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_SUBJECT As String
			Get
				If Me.IsColumnNull(ColumnNames.SUBJECT) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.SUBJECT)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.SUBJECT)
				Else
					Me.SUBJECT = MyBase.SetStringAsString(ColumnNames.SUBJECT, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_GENERATED As String
			Get
				If Me.IsColumnNull(ColumnNames.GENERATED) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.GENERATED)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.GENERATED)
				Else
					Me.GENERATED = MyBase.SetDateTimeAsString(ColumnNames.GENERATED, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_USER_NAME As String
			Get
				If Me.IsColumnNull(ColumnNames.USER_NAME) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.USER_NAME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.USER_NAME)
				Else
					Me.USER_NAME = MyBase.SetStringAsString(ColumnNames.USER_NAME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PRIORITY As String
			Get
				If Me.IsColumnNull(ColumnNames.PRIORITY) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.PRIORITY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PRIORITY)
				Else
					Me.PRIORITY = MyBase.SetShortAsString(ColumnNames.PRIORITY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_TYPE As String
			Get
				If Me.IsColumnNull(ColumnNames.TYPE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.TYPE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.TYPE)
				Else
					Me.TYPE = MyBase.SetStringAsString(ColumnNames.TYPE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_CATEGORY As String
			Get
				If Me.IsColumnNull(ColumnNames.CATEGORY) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.CATEGORY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.CATEGORY)
				Else
					Me.CATEGORY = MyBase.SetStringAsString(ColumnNames.CATEGORY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_ALERT_TYPE_ID As String
			Get
				If Me.IsColumnNull(ColumnNames.ALERT_TYPE_ID) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.ALERT_TYPE_ID)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ALERT_TYPE_ID)
				Else
					Me.ALERT_TYPE_ID = MyBase.SetIntegerAsString(ColumnNames.ALERT_TYPE_ID, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_ALERT_CAT_ID As String
			Get
				If Me.IsColumnNull(ColumnNames.ALERT_CAT_ID) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.ALERT_CAT_ID)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ALERT_CAT_ID)
				Else
					Me.ALERT_CAT_ID = MyBase.SetIntegerAsString(ColumnNames.ALERT_CAT_ID, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_ATTACHMENTCOUNT As String
			Get
				If Me.IsColumnNull(ColumnNames.ATTACHMENTCOUNT) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.ATTACHMENTCOUNT)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ATTACHMENTCOUNT)
				Else
					Me.ATTACHMENTCOUNT = MyBase.SetIntegerAsString(ColumnNames.ATTACHMENTCOUNT, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_ALERT_LEVEL As String
			Get
				If Me.IsColumnNull(ColumnNames.ALERT_LEVEL) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.ALERT_LEVEL)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ALERT_LEVEL)
				Else
					Me.ALERT_LEVEL = MyBase.SetStringAsString(ColumnNames.ALERT_LEVEL, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_OFFICE_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.OFFICE_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.OFFICE_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.OFFICE_CODE)
				Else
					Me.OFFICE_CODE = MyBase.SetStringAsString(ColumnNames.OFFICE_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_CL_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.CL_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.CL_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.CL_CODE)
				Else
					Me.CL_CODE = MyBase.SetStringAsString(ColumnNames.CL_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_CODE)
				Else
					Me.DIV_CODE = MyBase.SetStringAsString(ColumnNames.DIV_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PRD_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.PRD_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.PRD_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PRD_CODE)
				Else
					Me.PRD_CODE = MyBase.SetStringAsString(ColumnNames.PRD_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_CMP_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.CMP_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.CMP_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.CMP_CODE)
				Else
					Me.CMP_CODE = MyBase.SetStringAsString(ColumnNames.CMP_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_JOB_NUMBER As String
			Get
				If Me.IsColumnNull(ColumnNames.JOB_NUMBER) Then
					Return String.Empty
				Else
					Return MyBase.GetIntegerAsString(ColumnNames.JOB_NUMBER)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.JOB_NUMBER)
				Else
					Me.JOB_NUMBER = MyBase.SetIntegerAsString(ColumnNames.JOB_NUMBER, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_JOB_COMPONENT_NBR As String
			Get
				If Me.IsColumnNull(ColumnNames.JOB_COMPONENT_NBR) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.JOB_COMPONENT_NBR)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.JOB_COMPONENT_NBR)
				Else
					Me.JOB_COMPONENT_NBR = MyBase.SetShortAsString(ColumnNames.JOB_COMPONENT_NBR, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_SENDER_EMP_CODE As String
			Get
				If Me.IsColumnNull(ColumnNames.SENDER_EMP_CODE) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.SENDER_EMP_CODE)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.SENDER_EMP_CODE)
				Else
					Me.SENDER_EMP_CODE = MyBase.SetStringAsString(ColumnNames.SENDER_EMP_CODE, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_CL_NAME As String
			Get
				If Me.IsColumnNull(ColumnNames.CL_NAME) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.CL_NAME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.CL_NAME)
				Else
					Me.CL_NAME = MyBase.SetStringAsString(ColumnNames.CL_NAME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_DIV_NAME As String
			Get
				If Me.IsColumnNull(ColumnNames.DIV_NAME) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.DIV_NAME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.DIV_NAME)
				Else
					Me.DIV_NAME = MyBase.SetStringAsString(ColumnNames.DIV_NAME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_PRD_DESCRIPTION As String
			Get
				If Me.IsColumnNull(ColumnNames.PRD_DESCRIPTION) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.PRD_DESCRIPTION)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.PRD_DESCRIPTION)
				Else
					Me.PRD_DESCRIPTION = MyBase.SetStringAsString(ColumnNames.PRD_DESCRIPTION, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_CMP_NAME As String
			Get
				If Me.IsColumnNull(ColumnNames.CMP_NAME) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.CMP_NAME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.CMP_NAME)
				Else
					Me.CMP_NAME = MyBase.SetStringAsString(ColumnNames.CMP_NAME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_BODY As String
			Get
				If Me.IsColumnNull(ColumnNames.BODY) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.BODY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.BODY)
				Else
					Me.BODY = MyBase.SetStringAsString(ColumnNames.BODY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_LOWER_SUBJECT As String
			Get
				If Me.IsColumnNull(ColumnNames.LOWER_SUBJECT) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.LOWER_SUBJECT)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.LOWER_SUBJECT)
				Else
					Me.LOWER_SUBJECT = MyBase.SetStringAsString(ColumnNames.LOWER_SUBJECT, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_LOWER_BODY As String
			Get
				If Me.IsColumnNull(ColumnNames.LOWER_BODY) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.LOWER_BODY)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.LOWER_BODY)
				Else
					Me.LOWER_BODY = MyBase.SetStringAsString(ColumnNames.LOWER_BODY, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_OFFICE_NAME As String
			Get
				If Me.IsColumnNull(ColumnNames.OFFICE_NAME) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.OFFICE_NAME)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.OFFICE_NAME)
				Else
					Me.OFFICE_NAME = MyBase.SetStringAsString(ColumnNames.OFFICE_NAME, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_JOB_DESC As String
			Get
				If Me.IsColumnNull(ColumnNames.JOB_DESC) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.JOB_DESC)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.JOB_DESC)
				Else
					Me.JOB_DESC = MyBase.SetStringAsString(ColumnNames.JOB_DESC, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_JOB_COMP_DESC As String
			Get
				If Me.IsColumnNull(ColumnNames.JOB_COMP_DESC) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.JOB_COMP_DESC)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.JOB_COMP_DESC)
				Else
					Me.JOB_COMP_DESC = MyBase.SetStringAsString(ColumnNames.JOB_COMP_DESC, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_ALERT_USER As String
			Get
				If Me.IsColumnNull(ColumnNames.ALERT_USER) Then
					Return String.Empty
				Else
					Return MyBase.GetStringAsString(ColumnNames.ALERT_USER)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.ALERT_USER)
				Else
					Me.ALERT_USER = MyBase.SetStringAsString(ColumnNames.ALERT_USER, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_CP_ALERT As String
			Get
				If Me.IsColumnNull(ColumnNames.CP_ALERT) Then
					Return String.Empty
				Else
					Return MyBase.GetShortAsString(ColumnNames.CP_ALERT)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.CP_ALERT)
				Else
					Me.CP_ALERT = MyBase.SetShortAsString(ColumnNames.CP_ALERT, Value)
				End If
			End Set
    End Property

    Public Overridable Property s_DUE_DATE() As String
        Get
            If Me.IsColumnNull(ColumnNames.DUE_DATE) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.DUE_DATE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.DUE_DATE)
            Else
                Me.DUE_DATE = MyBase.SetDateTimeAsString(ColumnNames.DUE_DATE, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_TIME_DUE() As String
        Get
            If Me.IsColumnNull(ColumnNames.TIME_DUE) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.TIME_DUE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.TIME_DUE)
            Else
                Me.DUE_DATE = MyBase.SetDateTimeAsString(ColumnNames.TIME_DUE, Value)
            End If
        End Set
    End Property
    Public Overridable Property s_ALERT_STATE_IDD() As String
        Get
            If Me.IsColumnNull(ColumnNames.ALERT_STATE_ID) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.ALERT_STATE_ID)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.ALERT_STATE_ID)
            Else
                Me.ALERT_STATE_ID = MyBase.SetIntegerAsString(ColumnNames.ALERT_STATE_ID, Value)
            End If
        End Set
    End Property


	#End Region 

	#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffWhereParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffWhereParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "TearOff's"
		Public class TearOffWhereParameter

			Public Sub New(ByVal clause As WhereClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property ALERT_ID() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_ID, Parameters.ALERT_ID)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property SUBJECT() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.SUBJECT, Parameters.SUBJECT)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property GENERATED() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.GENERATED, Parameters.GENERATED)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property USER_NAME() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.USER_NAME, Parameters.USER_NAME)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PRIORITY() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.PRIORITY, Parameters.PRIORITY)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property TYPE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.TYPE, Parameters.TYPE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CATEGORY() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.CATEGORY, Parameters.CATEGORY)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ALERT_TYPE_ID() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_TYPE_ID, Parameters.ALERT_TYPE_ID)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ALERT_CAT_ID() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_CAT_ID, Parameters.ALERT_CAT_ID)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ATTACHMENTCOUNT() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.ATTACHMENTCOUNT, Parameters.ATTACHMENTCOUNT)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ALERT_LEVEL() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_LEVEL, Parameters.ALERT_LEVEL)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property OFFICE_CODE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.OFFICE_CODE, Parameters.OFFICE_CODE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CL_CODE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.CL_CODE, Parameters.CL_CODE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_CODE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_CODE, Parameters.DIV_CODE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PRD_CODE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.PRD_CODE, Parameters.PRD_CODE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CMP_CODE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.CMP_CODE, Parameters.CMP_CODE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_NUMBER() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_NUMBER, Parameters.JOB_NUMBER)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_COMPONENT_NBR() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_COMPONENT_NBR, Parameters.JOB_COMPONENT_NBR)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property SENDER_EMP_CODE() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.SENDER_EMP_CODE, Parameters.SENDER_EMP_CODE)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CL_NAME() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.CL_NAME, Parameters.CL_NAME)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_NAME() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_NAME, Parameters.DIV_NAME)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PRD_DESCRIPTION() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.PRD_DESCRIPTION, Parameters.PRD_DESCRIPTION)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CMP_NAME() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.CMP_NAME, Parameters.CMP_NAME)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property BODY() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.BODY, Parameters.BODY)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property LOWER_SUBJECT() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.LOWER_SUBJECT, Parameters.LOWER_SUBJECT)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property LOWER_BODY() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.LOWER_BODY, Parameters.LOWER_BODY)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property OFFICE_NAME() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.OFFICE_NAME, Parameters.OFFICE_NAME)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_DESC() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_DESC, Parameters.JOB_DESC)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_COMP_DESC() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_COMP_DESC, Parameters.JOB_COMP_DESC)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ALERT_USER() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_USER, Parameters.ALERT_USER)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CP_ALERT() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.CP_ALERT, Parameters.CP_ALERT)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
            End Property

            Public ReadOnly Property DUE_DATE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.DUE_DATE, Parameters.DUE_DATE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TIME_DUE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TIME_DUE, Parameters.TIME_DUE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_STATE_ID() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_STATE_ID, Parameters.ALERT_STATE_ID)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Private _clause As WhereClause
	End Class
	#End Region	

		Public ReadOnly Property ALERT_ID() As WhereParameter 
			Get
				If _ALERT_ID_W Is Nothing Then
					_ALERT_ID_W = TearOff.ALERT_ID
				End If
				Return _ALERT_ID_W
			End Get
		End Property

		Public ReadOnly Property SUBJECT() As WhereParameter 
			Get
				If _SUBJECT_W Is Nothing Then
					_SUBJECT_W = TearOff.SUBJECT
				End If
				Return _SUBJECT_W
			End Get
		End Property

		Public ReadOnly Property GENERATED() As WhereParameter 
			Get
				If _GENERATED_W Is Nothing Then
					_GENERATED_W = TearOff.GENERATED
				End If
				Return _GENERATED_W
			End Get
		End Property

		Public ReadOnly Property USER_NAME() As WhereParameter 
			Get
				If _USER_NAME_W Is Nothing Then
					_USER_NAME_W = TearOff.USER_NAME
				End If
				Return _USER_NAME_W
			End Get
		End Property

		Public ReadOnly Property PRIORITY() As WhereParameter 
			Get
				If _PRIORITY_W Is Nothing Then
					_PRIORITY_W = TearOff.PRIORITY
				End If
				Return _PRIORITY_W
			End Get
		End Property

		Public ReadOnly Property TYPE() As WhereParameter 
			Get
				If _TYPE_W Is Nothing Then
					_TYPE_W = TearOff.TYPE
				End If
				Return _TYPE_W
			End Get
		End Property

		Public ReadOnly Property CATEGORY() As WhereParameter 
			Get
				If _CATEGORY_W Is Nothing Then
					_CATEGORY_W = TearOff.CATEGORY
				End If
				Return _CATEGORY_W
			End Get
		End Property

		Public ReadOnly Property ALERT_TYPE_ID() As WhereParameter 
			Get
				If _ALERT_TYPE_ID_W Is Nothing Then
					_ALERT_TYPE_ID_W = TearOff.ALERT_TYPE_ID
				End If
				Return _ALERT_TYPE_ID_W
			End Get
		End Property

		Public ReadOnly Property ALERT_CAT_ID() As WhereParameter 
			Get
				If _ALERT_CAT_ID_W Is Nothing Then
					_ALERT_CAT_ID_W = TearOff.ALERT_CAT_ID
				End If
				Return _ALERT_CAT_ID_W
			End Get
		End Property

		Public ReadOnly Property ATTACHMENTCOUNT() As WhereParameter 
			Get
				If _ATTACHMENTCOUNT_W Is Nothing Then
					_ATTACHMENTCOUNT_W = TearOff.ATTACHMENTCOUNT
				End If
				Return _ATTACHMENTCOUNT_W
			End Get
		End Property

		Public ReadOnly Property ALERT_LEVEL() As WhereParameter 
			Get
				If _ALERT_LEVEL_W Is Nothing Then
					_ALERT_LEVEL_W = TearOff.ALERT_LEVEL
				End If
				Return _ALERT_LEVEL_W
			End Get
		End Property

		Public ReadOnly Property OFFICE_CODE() As WhereParameter 
			Get
				If _OFFICE_CODE_W Is Nothing Then
					_OFFICE_CODE_W = TearOff.OFFICE_CODE
				End If
				Return _OFFICE_CODE_W
			End Get
		End Property

		Public ReadOnly Property CL_CODE() As WhereParameter 
			Get
				If _CL_CODE_W Is Nothing Then
					_CL_CODE_W = TearOff.CL_CODE
				End If
				Return _CL_CODE_W
			End Get
		End Property

		Public ReadOnly Property DIV_CODE() As WhereParameter 
			Get
				If _DIV_CODE_W Is Nothing Then
					_DIV_CODE_W = TearOff.DIV_CODE
				End If
				Return _DIV_CODE_W
			End Get
		End Property

		Public ReadOnly Property PRD_CODE() As WhereParameter 
			Get
				If _PRD_CODE_W Is Nothing Then
					_PRD_CODE_W = TearOff.PRD_CODE
				End If
				Return _PRD_CODE_W
			End Get
		End Property

		Public ReadOnly Property CMP_CODE() As WhereParameter 
			Get
				If _CMP_CODE_W Is Nothing Then
					_CMP_CODE_W = TearOff.CMP_CODE
				End If
				Return _CMP_CODE_W
			End Get
		End Property

		Public ReadOnly Property JOB_NUMBER() As WhereParameter 
			Get
				If _JOB_NUMBER_W Is Nothing Then
					_JOB_NUMBER_W = TearOff.JOB_NUMBER
				End If
				Return _JOB_NUMBER_W
			End Get
		End Property

		Public ReadOnly Property JOB_COMPONENT_NBR() As WhereParameter 
			Get
				If _JOB_COMPONENT_NBR_W Is Nothing Then
					_JOB_COMPONENT_NBR_W = TearOff.JOB_COMPONENT_NBR
				End If
				Return _JOB_COMPONENT_NBR_W
			End Get
		End Property

		Public ReadOnly Property SENDER_EMP_CODE() As WhereParameter 
			Get
				If _SENDER_EMP_CODE_W Is Nothing Then
					_SENDER_EMP_CODE_W = TearOff.SENDER_EMP_CODE
				End If
				Return _SENDER_EMP_CODE_W
			End Get
		End Property

		Public ReadOnly Property CL_NAME() As WhereParameter 
			Get
				If _CL_NAME_W Is Nothing Then
					_CL_NAME_W = TearOff.CL_NAME
				End If
				Return _CL_NAME_W
			End Get
		End Property

		Public ReadOnly Property DIV_NAME() As WhereParameter 
			Get
				If _DIV_NAME_W Is Nothing Then
					_DIV_NAME_W = TearOff.DIV_NAME
				End If
				Return _DIV_NAME_W
			End Get
		End Property

		Public ReadOnly Property PRD_DESCRIPTION() As WhereParameter 
			Get
				If _PRD_DESCRIPTION_W Is Nothing Then
					_PRD_DESCRIPTION_W = TearOff.PRD_DESCRIPTION
				End If
				Return _PRD_DESCRIPTION_W
			End Get
		End Property

		Public ReadOnly Property CMP_NAME() As WhereParameter 
			Get
				If _CMP_NAME_W Is Nothing Then
					_CMP_NAME_W = TearOff.CMP_NAME
				End If
				Return _CMP_NAME_W
			End Get
		End Property

		Public ReadOnly Property BODY() As WhereParameter 
			Get
				If _BODY_W Is Nothing Then
					_BODY_W = TearOff.BODY
				End If
				Return _BODY_W
			End Get
		End Property

		Public ReadOnly Property LOWER_SUBJECT() As WhereParameter 
			Get
				If _LOWER_SUBJECT_W Is Nothing Then
					_LOWER_SUBJECT_W = TearOff.LOWER_SUBJECT
				End If
				Return _LOWER_SUBJECT_W
			End Get
		End Property

		Public ReadOnly Property LOWER_BODY() As WhereParameter 
			Get
				If _LOWER_BODY_W Is Nothing Then
					_LOWER_BODY_W = TearOff.LOWER_BODY
				End If
				Return _LOWER_BODY_W
			End Get
		End Property

		Public ReadOnly Property OFFICE_NAME() As WhereParameter 
			Get
				If _OFFICE_NAME_W Is Nothing Then
					_OFFICE_NAME_W = TearOff.OFFICE_NAME
				End If
				Return _OFFICE_NAME_W
			End Get
		End Property

		Public ReadOnly Property JOB_DESC() As WhereParameter 
			Get
				If _JOB_DESC_W Is Nothing Then
					_JOB_DESC_W = TearOff.JOB_DESC
				End If
				Return _JOB_DESC_W
			End Get
		End Property

		Public ReadOnly Property JOB_COMP_DESC() As WhereParameter 
			Get
				If _JOB_COMP_DESC_W Is Nothing Then
					_JOB_COMP_DESC_W = TearOff.JOB_COMP_DESC
				End If
				Return _JOB_COMP_DESC_W
			End Get
		End Property

		Public ReadOnly Property ALERT_USER() As WhereParameter 
			Get
				If _ALERT_USER_W Is Nothing Then
					_ALERT_USER_W = TearOff.ALERT_USER
				End If
				Return _ALERT_USER_W
			End Get
		End Property

		Public ReadOnly Property CP_ALERT() As WhereParameter 
			Get
				If _CP_ALERT_W Is Nothing Then
					_CP_ALERT_W = TearOff.CP_ALERT
				End If
				Return _CP_ALERT_W
			End Get
        End Property

        Public ReadOnly Property DUE_DATE() As WhereParameter
            Get
                If _DUE_DATE_W Is Nothing Then
                    _DUE_DATE_W = TearOff.DUE_DATE
                End If
                Return _DUE_DATE_W
            End Get
        End Property

        Public ReadOnly Property TIME_DUE() As WhereParameter
            Get
                If _TIME_DUE_W Is Nothing Then
                    _TIME_DUE_W = TearOff.TIME_DUE
                End If
                Return _TIME_DUE_W
            End Get
        End Property
        Public ReadOnly Property ALERT_STATE_ID() As WhereParameter
            Get
                If _ALERT_STATE_ID_W Is Nothing Then
                    _ALERT_STATE_ID_W = TearOff.ALERT_STATE_ID
                End If
                Return _ALERT_STATE_ID_W
            End Get
        End Property



		Private _ALERT_ID_W As WhereParameter = Nothing
		Private _SUBJECT_W As WhereParameter = Nothing
		Private _GENERATED_W As WhereParameter = Nothing
		Private _USER_NAME_W As WhereParameter = Nothing
		Private _PRIORITY_W As WhereParameter = Nothing
		Private _TYPE_W As WhereParameter = Nothing
		Private _CATEGORY_W As WhereParameter = Nothing
		Private _ALERT_TYPE_ID_W As WhereParameter = Nothing
		Private _ALERT_CAT_ID_W As WhereParameter = Nothing
		Private _ATTACHMENTCOUNT_W As WhereParameter = Nothing
		Private _ALERT_LEVEL_W As WhereParameter = Nothing
		Private _OFFICE_CODE_W As WhereParameter = Nothing
		Private _CL_CODE_W As WhereParameter = Nothing
		Private _DIV_CODE_W As WhereParameter = Nothing
		Private _PRD_CODE_W As WhereParameter = Nothing
		Private _CMP_CODE_W As WhereParameter = Nothing
		Private _JOB_NUMBER_W As WhereParameter = Nothing
		Private _JOB_COMPONENT_NBR_W As WhereParameter = Nothing
		Private _SENDER_EMP_CODE_W As WhereParameter = Nothing
		Private _CL_NAME_W As WhereParameter = Nothing
		Private _DIV_NAME_W As WhereParameter = Nothing
		Private _PRD_DESCRIPTION_W As WhereParameter = Nothing
		Private _CMP_NAME_W As WhereParameter = Nothing
		Private _BODY_W As WhereParameter = Nothing
		Private _LOWER_SUBJECT_W As WhereParameter = Nothing
		Private _LOWER_BODY_W As WhereParameter = Nothing
		Private _OFFICE_NAME_W As WhereParameter = Nothing
		Private _JOB_DESC_W As WhereParameter = Nothing
		Private _JOB_COMP_DESC_W As WhereParameter = Nothing
		Private _ALERT_USER_W As WhereParameter = Nothing
        Private _CP_ALERT_W As WhereParameter = Nothing
        Private _DUE_DATE_W As WhereParameter = Nothing
        Private _TIME_DUE_W As WhereParameter = Nothing
        Private _ALERT_STATE_ID_W As WhereParameter = Nothing

		Public Sub WhereClauseReset()

            _ALERT_ID_W = Nothing
            _SUBJECT_W = Nothing
            _GENERATED_W = Nothing
            _USER_NAME_W = Nothing
            _PRIORITY_W = Nothing
            _TYPE_W = Nothing
            _CATEGORY_W = Nothing
            _ALERT_TYPE_ID_W = Nothing
            _ALERT_CAT_ID_W = Nothing
            _ATTACHMENTCOUNT_W = Nothing
            _ALERT_LEVEL_W = Nothing
            _OFFICE_CODE_W = Nothing
            _CL_CODE_W = Nothing
            _DIV_CODE_W = Nothing
            _PRD_CODE_W = Nothing
            _CMP_CODE_W = Nothing
            _JOB_NUMBER_W = Nothing
            _JOB_COMPONENT_NBR_W = Nothing
            _SENDER_EMP_CODE_W = Nothing
            _CL_NAME_W = Nothing
            _DIV_NAME_W = Nothing
            _PRD_DESCRIPTION_W = Nothing
            _CMP_NAME_W = Nothing
            _BODY_W = Nothing
            _LOWER_SUBJECT_W = Nothing
            _LOWER_BODY_W = Nothing
            _OFFICE_NAME_W = Nothing
            _JOB_DESC_W = Nothing
            _JOB_COMP_DESC_W = Nothing
            _ALERT_USER_W = Nothing
            _CP_ALERT_W = Nothing
            _DUE_DATE_W = Nothing
            _TIME_DUE_W = Nothing
            _ALERT_STATE_ID_W = Nothing

            Me._entity.Query.FlushWhereParameters()

		End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffWhereParameter
    End Class	

	Public ReadOnly Property Where() As WhereClause
		Get
			If _whereClause Is Nothing Then
				_whereClause = New WhereClause(Me)
			End If
	
			Return _whereClause
		End Get
	End Property
	
	Private _whereClause As WhereClause = Nothing	
#End Region	

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffAggregateParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffAggregateParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "AggregateParameter TearOff's"
		Public class TearOffAggregateParameter

			Public Sub New(ByVal clause As AggregateClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property ALERT_ID() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_ID, Parameters.ALERT_ID)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property SUBJECT() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.SUBJECT, Parameters.SUBJECT)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property GENERATED() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GENERATED, Parameters.GENERATED)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property USER_NAME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.USER_NAME, Parameters.USER_NAME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PRIORITY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PRIORITY, Parameters.PRIORITY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property TYPE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TYPE, Parameters.TYPE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CATEGORY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CATEGORY, Parameters.CATEGORY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ALERT_TYPE_ID() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_TYPE_ID, Parameters.ALERT_TYPE_ID)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ALERT_CAT_ID() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_CAT_ID, Parameters.ALERT_CAT_ID)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ATTACHMENTCOUNT() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ATTACHMENTCOUNT, Parameters.ATTACHMENTCOUNT)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ALERT_LEVEL() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_LEVEL, Parameters.ALERT_LEVEL)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property OFFICE_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.OFFICE_CODE, Parameters.OFFICE_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CL_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CL_CODE, Parameters.CL_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_CODE, Parameters.DIV_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PRD_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PRD_CODE, Parameters.PRD_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CMP_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CMP_CODE, Parameters.CMP_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_NUMBER() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_NUMBER, Parameters.JOB_NUMBER)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_COMPONENT_NBR() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_COMPONENT_NBR, Parameters.JOB_COMPONENT_NBR)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property SENDER_EMP_CODE() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.SENDER_EMP_CODE, Parameters.SENDER_EMP_CODE)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CL_NAME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CL_NAME, Parameters.CL_NAME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property DIV_NAME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_NAME, Parameters.DIV_NAME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property PRD_DESCRIPTION() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PRD_DESCRIPTION, Parameters.PRD_DESCRIPTION)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CMP_NAME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CMP_NAME, Parameters.CMP_NAME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property BODY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.BODY, Parameters.BODY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property LOWER_SUBJECT() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.LOWER_SUBJECT, Parameters.LOWER_SUBJECT)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property LOWER_BODY() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.LOWER_BODY, Parameters.LOWER_BODY)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property OFFICE_NAME() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.OFFICE_NAME, Parameters.OFFICE_NAME)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_DESC() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_DESC, Parameters.JOB_DESC)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property JOB_COMP_DESC() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_COMP_DESC, Parameters.JOB_COMP_DESC)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property ALERT_USER() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_USER, Parameters.ALERT_USER)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property CP_ALERT() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CP_ALERT, Parameters.CP_ALERT)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
            End Property

            Public ReadOnly Property DUE_DATE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DUE_DATE, Parameters.DUE_DATE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TIME_DUE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TIME_DUE, Parameters.TIME_DUE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_STATE_ID() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_STATE_ID, Parameters.ALERT_STATE_ID)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property


            Private _clause As AggregateClause
		End Class
		#End Region	

		Public ReadOnly Property ALERT_ID() As AggregateParameter 
			Get
				If _ALERT_ID_W Is Nothing Then
					_ALERT_ID_W = TearOff.ALERT_ID
				End If
				Return _ALERT_ID_W
			End Get
		End Property

		Public ReadOnly Property SUBJECT() As AggregateParameter 
			Get
				If _SUBJECT_W Is Nothing Then
					_SUBJECT_W = TearOff.SUBJECT
				End If
				Return _SUBJECT_W
			End Get
		End Property

		Public ReadOnly Property GENERATED() As AggregateParameter 
			Get
				If _GENERATED_W Is Nothing Then
					_GENERATED_W = TearOff.GENERATED
				End If
				Return _GENERATED_W
			End Get
		End Property

		Public ReadOnly Property USER_NAME() As AggregateParameter 
			Get
				If _USER_NAME_W Is Nothing Then
					_USER_NAME_W = TearOff.USER_NAME
				End If
				Return _USER_NAME_W
			End Get
		End Property

		Public ReadOnly Property PRIORITY() As AggregateParameter 
			Get
				If _PRIORITY_W Is Nothing Then
					_PRIORITY_W = TearOff.PRIORITY
				End If
				Return _PRIORITY_W
			End Get
		End Property

		Public ReadOnly Property TYPE() As AggregateParameter 
			Get
				If _TYPE_W Is Nothing Then
					_TYPE_W = TearOff.TYPE
				End If
				Return _TYPE_W
			End Get
		End Property

		Public ReadOnly Property CATEGORY() As AggregateParameter 
			Get
				If _CATEGORY_W Is Nothing Then
					_CATEGORY_W = TearOff.CATEGORY
				End If
				Return _CATEGORY_W
			End Get
		End Property

		Public ReadOnly Property ALERT_TYPE_ID() As AggregateParameter 
			Get
				If _ALERT_TYPE_ID_W Is Nothing Then
					_ALERT_TYPE_ID_W = TearOff.ALERT_TYPE_ID
				End If
				Return _ALERT_TYPE_ID_W
			End Get
		End Property

		Public ReadOnly Property ALERT_CAT_ID() As AggregateParameter 
			Get
				If _ALERT_CAT_ID_W Is Nothing Then
					_ALERT_CAT_ID_W = TearOff.ALERT_CAT_ID
				End If
				Return _ALERT_CAT_ID_W
			End Get
		End Property

		Public ReadOnly Property ATTACHMENTCOUNT() As AggregateParameter 
			Get
				If _ATTACHMENTCOUNT_W Is Nothing Then
					_ATTACHMENTCOUNT_W = TearOff.ATTACHMENTCOUNT
				End If
				Return _ATTACHMENTCOUNT_W
			End Get
		End Property

		Public ReadOnly Property ALERT_LEVEL() As AggregateParameter 
			Get
				If _ALERT_LEVEL_W Is Nothing Then
					_ALERT_LEVEL_W = TearOff.ALERT_LEVEL
				End If
				Return _ALERT_LEVEL_W
			End Get
		End Property

		Public ReadOnly Property OFFICE_CODE() As AggregateParameter 
			Get
				If _OFFICE_CODE_W Is Nothing Then
					_OFFICE_CODE_W = TearOff.OFFICE_CODE
				End If
				Return _OFFICE_CODE_W
			End Get
		End Property

		Public ReadOnly Property CL_CODE() As AggregateParameter 
			Get
				If _CL_CODE_W Is Nothing Then
					_CL_CODE_W = TearOff.CL_CODE
				End If
				Return _CL_CODE_W
			End Get
		End Property

		Public ReadOnly Property DIV_CODE() As AggregateParameter 
			Get
				If _DIV_CODE_W Is Nothing Then
					_DIV_CODE_W = TearOff.DIV_CODE
				End If
				Return _DIV_CODE_W
			End Get
		End Property

		Public ReadOnly Property PRD_CODE() As AggregateParameter 
			Get
				If _PRD_CODE_W Is Nothing Then
					_PRD_CODE_W = TearOff.PRD_CODE
				End If
				Return _PRD_CODE_W
			End Get
		End Property

		Public ReadOnly Property CMP_CODE() As AggregateParameter 
			Get
				If _CMP_CODE_W Is Nothing Then
					_CMP_CODE_W = TearOff.CMP_CODE
				End If
				Return _CMP_CODE_W
			End Get
		End Property

		Public ReadOnly Property JOB_NUMBER() As AggregateParameter 
			Get
				If _JOB_NUMBER_W Is Nothing Then
					_JOB_NUMBER_W = TearOff.JOB_NUMBER
				End If
				Return _JOB_NUMBER_W
			End Get
		End Property

		Public ReadOnly Property JOB_COMPONENT_NBR() As AggregateParameter 
			Get
				If _JOB_COMPONENT_NBR_W Is Nothing Then
					_JOB_COMPONENT_NBR_W = TearOff.JOB_COMPONENT_NBR
				End If
				Return _JOB_COMPONENT_NBR_W
			End Get
		End Property

		Public ReadOnly Property SENDER_EMP_CODE() As AggregateParameter 
			Get
				If _SENDER_EMP_CODE_W Is Nothing Then
					_SENDER_EMP_CODE_W = TearOff.SENDER_EMP_CODE
				End If
				Return _SENDER_EMP_CODE_W
			End Get
		End Property

		Public ReadOnly Property CL_NAME() As AggregateParameter 
			Get
				If _CL_NAME_W Is Nothing Then
					_CL_NAME_W = TearOff.CL_NAME
				End If
				Return _CL_NAME_W
			End Get
		End Property

		Public ReadOnly Property DIV_NAME() As AggregateParameter 
			Get
				If _DIV_NAME_W Is Nothing Then
					_DIV_NAME_W = TearOff.DIV_NAME
				End If
				Return _DIV_NAME_W
			End Get
		End Property

		Public ReadOnly Property PRD_DESCRIPTION() As AggregateParameter 
			Get
				If _PRD_DESCRIPTION_W Is Nothing Then
					_PRD_DESCRIPTION_W = TearOff.PRD_DESCRIPTION
				End If
				Return _PRD_DESCRIPTION_W
			End Get
		End Property

		Public ReadOnly Property CMP_NAME() As AggregateParameter 
			Get
				If _CMP_NAME_W Is Nothing Then
					_CMP_NAME_W = TearOff.CMP_NAME
				End If
				Return _CMP_NAME_W
			End Get
		End Property

		Public ReadOnly Property BODY() As AggregateParameter 
			Get
				If _BODY_W Is Nothing Then
					_BODY_W = TearOff.BODY
				End If
				Return _BODY_W
			End Get
		End Property

		Public ReadOnly Property LOWER_SUBJECT() As AggregateParameter 
			Get
				If _LOWER_SUBJECT_W Is Nothing Then
					_LOWER_SUBJECT_W = TearOff.LOWER_SUBJECT
				End If
				Return _LOWER_SUBJECT_W
			End Get
		End Property

		Public ReadOnly Property LOWER_BODY() As AggregateParameter 
			Get
				If _LOWER_BODY_W Is Nothing Then
					_LOWER_BODY_W = TearOff.LOWER_BODY
				End If
				Return _LOWER_BODY_W
			End Get
		End Property

		Public ReadOnly Property OFFICE_NAME() As AggregateParameter 
			Get
				If _OFFICE_NAME_W Is Nothing Then
					_OFFICE_NAME_W = TearOff.OFFICE_NAME
				End If
				Return _OFFICE_NAME_W
			End Get
		End Property

		Public ReadOnly Property JOB_DESC() As AggregateParameter 
			Get
				If _JOB_DESC_W Is Nothing Then
					_JOB_DESC_W = TearOff.JOB_DESC
				End If
				Return _JOB_DESC_W
			End Get
		End Property

		Public ReadOnly Property JOB_COMP_DESC() As AggregateParameter 
			Get
				If _JOB_COMP_DESC_W Is Nothing Then
					_JOB_COMP_DESC_W = TearOff.JOB_COMP_DESC
				End If
				Return _JOB_COMP_DESC_W
			End Get
		End Property

		Public ReadOnly Property ALERT_USER() As AggregateParameter 
			Get
				If _ALERT_USER_W Is Nothing Then
					_ALERT_USER_W = TearOff.ALERT_USER
				End If
				Return _ALERT_USER_W
			End Get
		End Property

		Public ReadOnly Property CP_ALERT() As AggregateParameter 
			Get
				If _CP_ALERT_W Is Nothing Then
					_CP_ALERT_W = TearOff.CP_ALERT
				End If
				Return _CP_ALERT_W
			End Get
        End Property

        Public ReadOnly Property DUE_DATE() As AggregateParameter
            Get
                If _DUE_DATE_W Is Nothing Then
                    _DUE_DATE_W = TearOff.DUE_DATE
                End If
                Return _DUE_DATE_W
            End Get
        End Property

        Public ReadOnly Property TIME_DUE() As AggregateParameter
            Get
                If _TIME_DUE_W Is Nothing Then
                    _TIME_DUE_W = TearOff.TIME_DUE
                End If
                Return _TIME_DUE_W
            End Get
        End Property

        Public ReadOnly Property ALERT_STATE_ID() As AggregateParameter
            Get
                If _ALERT_STATE_ID_W Is Nothing Then
                    _ALERT_STATE_ID_W = TearOff.ALERT_STATE_ID
                End If
                Return _ALERT_STATE_ID_W
            End Get
        End Property


        Private _ALERT_ID_W As AggregateParameter = Nothing
		Private _SUBJECT_W As AggregateParameter = Nothing
		Private _GENERATED_W As AggregateParameter = Nothing
		Private _USER_NAME_W As AggregateParameter = Nothing
		Private _PRIORITY_W As AggregateParameter = Nothing
		Private _TYPE_W As AggregateParameter = Nothing
		Private _CATEGORY_W As AggregateParameter = Nothing
		Private _ALERT_TYPE_ID_W As AggregateParameter = Nothing
		Private _ALERT_CAT_ID_W As AggregateParameter = Nothing
		Private _ATTACHMENTCOUNT_W As AggregateParameter = Nothing
		Private _ALERT_LEVEL_W As AggregateParameter = Nothing
		Private _OFFICE_CODE_W As AggregateParameter = Nothing
		Private _CL_CODE_W As AggregateParameter = Nothing
		Private _DIV_CODE_W As AggregateParameter = Nothing
		Private _PRD_CODE_W As AggregateParameter = Nothing
		Private _CMP_CODE_W As AggregateParameter = Nothing
		Private _JOB_NUMBER_W As AggregateParameter = Nothing
		Private _JOB_COMPONENT_NBR_W As AggregateParameter = Nothing
		Private _SENDER_EMP_CODE_W As AggregateParameter = Nothing
		Private _CL_NAME_W As AggregateParameter = Nothing
		Private _DIV_NAME_W As AggregateParameter = Nothing
		Private _PRD_DESCRIPTION_W As AggregateParameter = Nothing
		Private _CMP_NAME_W As AggregateParameter = Nothing
		Private _BODY_W As AggregateParameter = Nothing
		Private _LOWER_SUBJECT_W As AggregateParameter = Nothing
		Private _LOWER_BODY_W As AggregateParameter = Nothing
		Private _OFFICE_NAME_W As AggregateParameter = Nothing
		Private _JOB_DESC_W As AggregateParameter = Nothing
		Private _JOB_COMP_DESC_W As AggregateParameter = Nothing
		Private _ALERT_USER_W As AggregateParameter = Nothing
        Private _CP_ALERT_W As AggregateParameter = Nothing
        Private _DUE_DATE_W As AggregateParameter = Nothing
        Private _TIME_DUE_W As AggregateParameter = Nothing
        Private _ALERT_STATE_ID_W As AggregateParameter = Nothing

		Public Sub AggregateClauseReset()

            _ALERT_ID_W = Nothing
            _SUBJECT_W = Nothing
            _GENERATED_W = Nothing
            _USER_NAME_W = Nothing
            _PRIORITY_W = Nothing
            _TYPE_W = Nothing
            _CATEGORY_W = Nothing
            _ALERT_TYPE_ID_W = Nothing
            _ALERT_CAT_ID_W = Nothing
            _ATTACHMENTCOUNT_W = Nothing
            _ALERT_LEVEL_W = Nothing
            _OFFICE_CODE_W = Nothing
            _CL_CODE_W = Nothing
            _DIV_CODE_W = Nothing
            _PRD_CODE_W = Nothing
            _CMP_CODE_W = Nothing
            _JOB_NUMBER_W = Nothing
            _JOB_COMPONENT_NBR_W = Nothing
            _SENDER_EMP_CODE_W = Nothing
            _CL_NAME_W = Nothing
            _DIV_NAME_W = Nothing
            _PRD_DESCRIPTION_W = Nothing
            _CMP_NAME_W = Nothing
            _BODY_W = Nothing
            _LOWER_SUBJECT_W = Nothing
            _LOWER_BODY_W = Nothing
            _OFFICE_NAME_W = Nothing
            _JOB_DESC_W = Nothing
            _JOB_COMP_DESC_W = Nothing
            _ALERT_USER_W = Nothing
            _CP_ALERT_W = Nothing
            _DUE_DATE_W = Nothing
            _TIME_DUE_W = Nothing
            _ALERT_STATE_ID_W = Nothing
            Me._entity.Query.FlushAggregateParameters()

		End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffAggregateParameter
    End Class	

	Public ReadOnly Property Aggregate() As AggregateClause
		Get
			If _aggregateClause Is Nothing Then
				_aggregateClause = New AggregateClause(Me)
			End If
	
			Return _aggregateClause
		End Get
	End Property
	
	Private _aggregateClause As AggregateClause = Nothing	
#End Region	

	Protected Overrides Function GetInsertCommand() As IDbCommand
		Return Nothing
	End Function
	
	Protected Overrides Function GetUpdateCommand() As IDbCommand
		Return Nothing
	End Function
	
	Protected Overrides Function GetDeleteCommand() As IDbCommand
		Return Nothing
	End Function
	
End Class

