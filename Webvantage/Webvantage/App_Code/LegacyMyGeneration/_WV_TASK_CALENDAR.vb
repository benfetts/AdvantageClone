
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================

' Generated by MyGeneration Version # (1.2.0.2)

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _WV_TASK_CALENDAR
    Inherits SqlClientEntity

    Public Sub New()
        Me.QuerySource = "WV_TASK_CALENDAR"
        Me.MappingName = "WV_TASK_CALENDAR"
    End Sub

    '=================================================================
    '  	Public Function LoadAll() As Boolean
    '=================================================================
    '  Loads all of the records in the database, and sets the currentRow to the first row
    '=================================================================
    Public Function LoadAll() As Boolean
        Return MyBase.Query.Load()
    End Function

    Public Overrides Sub FlushData()
        Me._whereClause = Nothing
        Me._aggregateClause = Nothing
        MyBase.FlushData()
    End Sub

#Region "Parameters"
    Protected Class Parameters

        Public Shared ReadOnly Property CCode() As SqlParameter
            Get
                Return New SqlParameter("CCode", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property DCode() As SqlParameter
            Get
                Return New SqlParameter("DCode", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property PCode() As SqlParameter
            Get
                Return New SqlParameter("PCode", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property JobNum() As SqlParameter
            Get
                Return New SqlParameter("JobNum", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property JobDesc() As SqlParameter
            Get
                Return New SqlParameter("JobDesc", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property CompNum() As SqlParameter
            Get
                Return New SqlParameter("CompNum", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property CompDesc() As SqlParameter
            Get
                Return New SqlParameter("CompDesc", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property ThisDay() As SqlParameter
            Get
                Return New SqlParameter("ThisDay", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property Task() As SqlParameter
            Get
                Return New SqlParameter("Task", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property TempCompDate() As SqlParameter
            Get
                Return New SqlParameter("TempCompDate", SqlDbType.DateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property TASK_STATUS() As SqlParameter
            Get
                Return New SqlParameter("TASK_STATUS", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property ThisDayStart() As SqlParameter
            Get
                Return New SqlParameter("ThisDayStart", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property SEQ_NBR() As SqlParameter
            Get
                Return New SqlParameter("SEQ_NBR", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property CL_NAME() As SqlParameter
            Get
                Return New SqlParameter("CL_NAME", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property DIV_NAME() As SqlParameter
            Get
                Return New SqlParameter("DIV_NAME", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property PRD_DESCRIPTION() As SqlParameter
            Get
                Return New SqlParameter("PRD_DESCRIPTION", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property TRF_CODE() As SqlParameter
            Get
                Return New SqlParameter("TRF_CODE", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property RevisedDate() As SqlParameter
            Get
                Return New SqlParameter("RevisedDate", SqlDbType.DateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property StartDate() As SqlParameter
            Get
                Return New SqlParameter("StartDate", SqlDbType.DateTime, 0)
            End Get
        End Property


        Public Shared ReadOnly Property empcodedispl() As SqlParameter
            Get
                Return New SqlParameter("empcodedispl", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property empdescdispl() As SqlParameter
            Get
                Return New SqlParameter("empdescdispl", SqlDbType.VarChar, 1)
            End Get
        End Property

        Public Shared ReadOnly Property manager() As SqlParameter
            Get
                Return New SqlParameter("manager", SqlDbType.VarChar, 1)
            End Get
        End Property

    End Class
#End Region

#Region "ColumnNames"
    Public Class ColumnNames

        Public Const CCode As String = "CCode"
        Public Const DCode As String = "DCode"
        Public Const PCode As String = "PCode"
        Public Const JobNum As String = "JobNum"
        Public Const JobDesc As String = "JobDesc"
        Public Const CompNum As String = "CompNum"
        Public Const CompDesc As String = "CompDesc"
        Public Const ThisDay As String = "ThisDay"
        Public Const Task As String = "Task"
        Public Const TempCompDate As String = "TempCompDate"
        Public Const TASK_STATUS As String = "TASK_STATUS"
        Public Const ThisDayStart As String = "ThisDayStart"
        Public Const SEQ_NBR As String = "SEQ_NBR"
        Public Const CL_NAME As String = "CL_NAME"
        Public Const DIV_NAME As String = "DIV_NAME"
        Public Const PRD_DESCRIPTION As String = "PRD_DESCRIPTION"
        Public Const TRF_CODE As String = "TRF_CODE"
        Public Const RevisedDate As String = "RevisedDate"
        Public Const StartDate As String = "StartDate"
        Public Const empcodedispl As String = "empcodedispl"
        Public Const empdescdispl As String = "empdescdispl"
        Public Const manager As String = "manager"

        Public Shared Function ToPropertyName(ByVal columnName As String) As String

            If ht Is Nothing Then

                ht = New Hashtable

                ht(CCode) = _WV_TASK_CALENDAR.PropertyNames.CCode
                ht(DCode) = _WV_TASK_CALENDAR.PropertyNames.DCode
                ht(PCode) = _WV_TASK_CALENDAR.PropertyNames.PCode
                ht(JobNum) = _WV_TASK_CALENDAR.PropertyNames.JobNum
                ht(JobDesc) = _WV_TASK_CALENDAR.PropertyNames.JobDesc
                ht(CompNum) = _WV_TASK_CALENDAR.PropertyNames.CompNum
                ht(CompDesc) = _WV_TASK_CALENDAR.PropertyNames.CompDesc
                ht(ThisDay) = _WV_TASK_CALENDAR.PropertyNames.ThisDay
                ht(Task) = _WV_TASK_CALENDAR.PropertyNames.Task
                ht(TempCompDate) = _WV_TASK_CALENDAR.PropertyNames.TempCompDate
                ht(TASK_STATUS) = _WV_TASK_CALENDAR.PropertyNames.TASK_STATUS
                ht(ThisDayStart) = _WV_TASK_CALENDAR.PropertyNames.ThisDayStart
                ht(SEQ_NBR) = _WV_TASK_CALENDAR.PropertyNames.SEQ_NBR
                ht(CL_NAME) = _WV_TASK_CALENDAR.PropertyNames.CL_NAME
                ht(DIV_NAME) = _WV_TASK_CALENDAR.PropertyNames.DIV_NAME
                ht(PRD_DESCRIPTION) = _WV_TASK_CALENDAR.PropertyNames.PRD_DESCRIPTION
                ht(TRF_CODE) = _WV_TASK_CALENDAR.PropertyNames.TRF_CODE
                ht(RevisedDate) = _WV_TASK_CALENDAR.PropertyNames.RevisedDate
                ht(StartDate) = _WV_TASK_CALENDAR.PropertyNames.StartDate
                ht(empcodedispl) = _WV_TASK_CALENDAR.PropertyNames.empcodedispl
                ht(empdescdispl) = _WV_TASK_CALENDAR.PropertyNames.empdescdispl
                ht(manager) = _WV_TASK_CALENDAR.PropertyNames.manager

            End If

            Return CType(ht(columnName), String)

        End Function

        Private Shared ht As Hashtable = Nothing
    End Class
#End Region

#Region "PropertyNames"
    Public Class PropertyNames

        Public Const CCode As String = "CCode"
        Public Const DCode As String = "DCode"
        Public Const PCode As String = "PCode"
        Public Const JobNum As String = "JobNum"
        Public Const JobDesc As String = "JobDesc"
        Public Const CompNum As String = "CompNum"
        Public Const CompDesc As String = "CompDesc"
        Public Const ThisDay As String = "ThisDay"
        Public Const Task As String = "Task"
        Public Const TempCompDate As String = "TempCompDate"
        Public Const TASK_STATUS As String = "TASK_STATUS"
        Public Const ThisDayStart As String = "ThisDayStart"
        Public Const SEQ_NBR As String = "SEQ_NBR"
        Public Const CL_NAME As String = "CL_NAME"
        Public Const DIV_NAME As String = "DIV_NAME"
        Public Const PRD_DESCRIPTION As String = "PRD_DESCRIPTION"
        Public Const TRF_CODE As String = "TRF_CODE"
        Public Const RevisedDate As String = "RevisedDate"
        Public Const StartDate As String = "StartDate"
        Public Const empcodedispl As String = "empcodedispl"
        Public Const empdescdispl As String = "empdescdispl"
        Public Const manager As String = "manager"


        Public Shared Function ToColumnName(ByVal propertyName As String) As String

            If ht Is Nothing Then

                ht = New Hashtable

                ht(CCode) = _WV_TASK_CALENDAR.ColumnNames.CCode
                ht(DCode) = _WV_TASK_CALENDAR.ColumnNames.DCode
                ht(PCode) = _WV_TASK_CALENDAR.ColumnNames.PCode
                ht(JobNum) = _WV_TASK_CALENDAR.ColumnNames.JobNum
                ht(JobDesc) = _WV_TASK_CALENDAR.ColumnNames.JobDesc
                ht(CompNum) = _WV_TASK_CALENDAR.ColumnNames.CompNum
                ht(CompDesc) = _WV_TASK_CALENDAR.ColumnNames.CompDesc
                ht(ThisDay) = _WV_TASK_CALENDAR.ColumnNames.ThisDay
                ht(Task) = _WV_TASK_CALENDAR.ColumnNames.Task
                ht(TempCompDate) = _WV_TASK_CALENDAR.ColumnNames.TempCompDate
                ht(TASK_STATUS) = _WV_TASK_CALENDAR.ColumnNames.TASK_STATUS
                ht(ThisDayStart) = _WV_TASK_CALENDAR.ColumnNames.ThisDayStart
                ht(SEQ_NBR) = _WV_TASK_CALENDAR.ColumnNames.SEQ_NBR
                ht(CL_NAME) = _WV_TASK_CALENDAR.ColumnNames.CL_NAME
                ht(DIV_NAME) = _WV_TASK_CALENDAR.ColumnNames.DIV_NAME
                ht(PRD_DESCRIPTION) = _WV_TASK_CALENDAR.ColumnNames.PRD_DESCRIPTION
                ht(TRF_CODE) = _WV_TASK_CALENDAR.ColumnNames.TRF_CODE
                ht(RevisedDate) = _WV_TASK_CALENDAR.ColumnNames.RevisedDate
                ht(StartDate) = _WV_TASK_CALENDAR.ColumnNames.StartDate
                ht(empcodedispl) = _WV_TASK_CALENDAR.ColumnNames.empcodedispl
                ht(empdescdispl) = _WV_TASK_CALENDAR.ColumnNames.empdescdispl
                ht(manager) = _WV_TASK_CALENDAR.ColumnNames.manager

            End If

            Return CType(ht(propertyName), String)

        End Function

        Private Shared ht As Hashtable = Nothing

    End Class
#End Region

#Region "StringPropertyNames"
    Public Class StringPropertyNames

        Public Const CCode As String = "s_CCode"
        Public Const DCode As String = "s_DCode"
        Public Const PCode As String = "s_PCode"
        Public Const JobNum As String = "s_JobNum"
        Public Const JobDesc As String = "s_JobDesc"
        Public Const CompNum As String = "s_CompNum"
        Public Const CompDesc As String = "s_CompDesc"
        Public Const ThisDay As String = "s_ThisDay"
        Public Const Task As String = "s_Task"
        Public Const TempCompDate As String = "s_TempCompDate"
        Public Const TASK_STATUS As String = "s_TASK_STATUS"
        Public Const ThisDayStart As String = "s_ThisDayStart"
        Public Const SEQ_NBR As String = "s_SEQ_NBR"
        Public Const CL_NAME As String = "s_CL_NAME"
        Public Const DIV_NAME As String = "s_DIV_NAME"
        Public Const PRD_DESCRIPTION As String = "s_PRD_DESCRIPTION"
        Public Const TRF_CODE As String = "s_TRF_CODE"
        Public Const RevisedDate As String = "s_RevisedDate"
        Public Const StartDate As String = "s_StartDate"
        Public Const empcodedispl As String = "s_empcodedispl"
        Public Const empdescdispl As String = "s_empdescdispl"
        Public Const manager As String = "s_manager"

    End Class
#End Region

#Region "Properties"
    Public Overridable Property CCode() As String
        Get
            Return MyBase.GetString(ColumnNames.CCode)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.CCode, Value)
        End Set
    End Property

    Public Overridable Property DCode() As String
        Get
            Return MyBase.GetString(ColumnNames.DCode)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.DCode, Value)
        End Set
    End Property

    Public Overridable Property PCode() As String
        Get
            Return MyBase.GetString(ColumnNames.PCode)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.PCode, Value)
        End Set
    End Property

    Public Overridable Property JobNum() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.JobNum)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.JobNum, Value)
        End Set
    End Property

    Public Overridable Property JobDesc() As String
        Get
            Return MyBase.GetString(ColumnNames.JobDesc)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.JobDesc, Value)
        End Set
    End Property

    Public Overridable Property CompNum() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.CompNum)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.CompNum, Value)
        End Set
    End Property

    Public Overridable Property CompDesc() As String
        Get
            Return MyBase.GetString(ColumnNames.CompDesc)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.CompDesc, Value)
        End Set
    End Property

    Public Overridable Property ThisDay() As String
        Get
            Return MyBase.GetString(ColumnNames.ThisDay)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.ThisDay, Value)
        End Set
    End Property

    Public Overridable Property Task() As String
        Get
            Return MyBase.GetString(ColumnNames.Task)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Task, Value)
        End Set
    End Property

    Public Overridable Property TempCompDate() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.TempCompDate)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.TempCompDate, Value)
        End Set
    End Property

    Public Overridable Property TASK_STATUS() As String
        Get
            Return MyBase.GetString(ColumnNames.TASK_STATUS)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.TASK_STATUS, Value)
        End Set
    End Property

    Public Overridable Property ThisDayStart() As String
        Get
            Return MyBase.GetString(ColumnNames.ThisDayStart)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.ThisDayStart, Value)
        End Set
    End Property

    Public Overridable Property SEQ_NBR() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.SEQ_NBR)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.SEQ_NBR, Value)
        End Set
    End Property

    Public Overridable Property CL_NAME() As String
        Get
            Return MyBase.GetString(ColumnNames.CL_NAME)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.CL_NAME, Value)
        End Set
    End Property

    Public Overridable Property DIV_NAME() As String
        Get
            Return MyBase.GetString(ColumnNames.DIV_NAME)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.DIV_NAME, Value)
        End Set
    End Property

    Public Overridable Property PRD_DESCRIPTION() As String
        Get
            Return MyBase.GetString(ColumnNames.PRD_DESCRIPTION)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.PRD_DESCRIPTION, Value)
        End Set
    End Property

    Public Overridable Property TRF_CODE() As String
        Get
            Return MyBase.GetString(ColumnNames.TRF_CODE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.TRF_CODE, Value)
        End Set
    End Property

    Public Overridable Property RevisedDate() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.RevisedDate)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.RevisedDate, Value)
        End Set
    End Property

    Public Overridable Property StartDate() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.StartDate)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.StartDate, Value)
        End Set
    End Property

    Public Overridable Property empcodedispl() As String
        Get
            Return MyBase.GetString(ColumnNames.empcodedispl)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.empcodedispl, Value)
        End Set
    End Property

    Public Overridable Property empdescdispl() As String
        Get
            Return MyBase.GetString(ColumnNames.empdescdispl)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.empdescdispl, Value)
        End Set
    End Property

    Public Overridable Property manager() As String
        Get
            Return MyBase.GetString(ColumnNames.manager)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.manager, Value)
        End Set
    End Property


#End Region

#Region "String Properties"

    Public Overridable Property s_CCode() As String
        Get
            If Me.IsColumnNull(ColumnNames.CCode) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.CCode)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.CCode)
            Else
                Me.CCode = MyBase.SetStringAsString(ColumnNames.CCode, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_DCode() As String
        Get
            If Me.IsColumnNull(ColumnNames.DCode) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.DCode)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.DCode)
            Else
                Me.DCode = MyBase.SetStringAsString(ColumnNames.DCode, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_PCode() As String
        Get
            If Me.IsColumnNull(ColumnNames.PCode) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.PCode)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.PCode)
            Else
                Me.PCode = MyBase.SetStringAsString(ColumnNames.PCode, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JobNum() As String
        Get
            If Me.IsColumnNull(ColumnNames.JobNum) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.JobNum)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JobNum)
            Else
                Me.JobNum = MyBase.SetIntegerAsString(ColumnNames.JobNum, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JobDesc() As String
        Get
            If Me.IsColumnNull(ColumnNames.JobDesc) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.JobDesc)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JobDesc)
            Else
                Me.JobDesc = MyBase.SetStringAsString(ColumnNames.JobDesc, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_CompNum() As String
        Get
            If Me.IsColumnNull(ColumnNames.CompNum) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.CompNum)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.CompNum)
            Else
                Me.CompNum = MyBase.SetIntegerAsString(ColumnNames.CompNum, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_CompDesc() As String
        Get
            If Me.IsColumnNull(ColumnNames.CompDesc) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.CompDesc)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.CompDesc)
            Else
                Me.CompDesc = MyBase.SetStringAsString(ColumnNames.CompDesc, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ThisDay() As String
        Get
            If Me.IsColumnNull(ColumnNames.ThisDay) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.ThisDay)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.ThisDay)
            Else
                Me.ThisDay = MyBase.SetStringAsString(ColumnNames.ThisDay, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Task() As String
        Get
            If Me.IsColumnNull(ColumnNames.Task) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.Task)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.Task)
            Else
                Me.Task = MyBase.SetStringAsString(ColumnNames.Task, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TempCompDate() As String
        Get
            If Me.IsColumnNull(ColumnNames.TempCompDate) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.TempCompDate)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.TempCompDate)
            Else
                Me.TempCompDate = MyBase.SetDateTimeAsString(ColumnNames.TempCompDate, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TASK_STATUS() As String
        Get
            If Me.IsColumnNull(ColumnNames.TASK_STATUS) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.TASK_STATUS)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.TASK_STATUS)
            Else
                Me.TASK_STATUS = MyBase.SetStringAsString(ColumnNames.TASK_STATUS, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ThisDayStart() As String
        Get
            If Me.IsColumnNull(ColumnNames.ThisDayStart) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.ThisDayStart)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.ThisDayStart)
            Else
                Me.ThisDayStart = MyBase.SetStringAsString(ColumnNames.ThisDayStart, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_SEQ_NBR() As String
        Get
            If Me.IsColumnNull(ColumnNames.SEQ_NBR) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.SEQ_NBR)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.SEQ_NBR)
            Else
                Me.SEQ_NBR = MyBase.SetIntegerAsString(ColumnNames.SEQ_NBR, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_CL_NAME() As String
        Get
            If Me.IsColumnNull(ColumnNames.CL_NAME) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.CL_NAME)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.CL_NAME)
            Else
                Me.CL_NAME = MyBase.SetStringAsString(ColumnNames.CL_NAME, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_DIV_NAME() As String
        Get
            If Me.IsColumnNull(ColumnNames.DIV_NAME) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.DIV_NAME)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.DIV_NAME)
            Else
                Me.DIV_NAME = MyBase.SetStringAsString(ColumnNames.DIV_NAME, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_PRD_DESCRIPTION() As String
        Get
            If Me.IsColumnNull(ColumnNames.PRD_DESCRIPTION) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.PRD_DESCRIPTION)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.PRD_DESCRIPTION)
            Else
                Me.PRD_DESCRIPTION = MyBase.SetStringAsString(ColumnNames.PRD_DESCRIPTION, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TRF_CODE() As String
        Get
            If Me.IsColumnNull(ColumnNames.TRF_CODE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.TRF_CODE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.TRF_CODE)
            Else
                Me.TRF_CODE = MyBase.SetStringAsString(ColumnNames.TRF_CODE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_RevisedDate() As String
        Get
            If Me.IsColumnNull(ColumnNames.RevisedDate) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.RevisedDate)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.RevisedDate)
            Else
                Me.RevisedDate = MyBase.SetDateTimeAsString(ColumnNames.RevisedDate, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_StartDate() As String
        Get
            If Me.IsColumnNull(ColumnNames.StartDate) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.StartDate)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.StartDate)
            Else
                Me.StartDate = MyBase.SetDateTimeAsString(ColumnNames.StartDate, Value)
            End If
        End Set
    End Property


    Public Overridable Property s_empcodedispl() As String
        Get
            If Me.IsColumnNull(ColumnNames.empcodedispl) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.empcodedispl)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.empcodedispl)
            Else
                Me.empcodedispl = MyBase.SetStringAsString(ColumnNames.empcodedispl, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_empdescdispl() As String
        Get
            If Me.IsColumnNull(ColumnNames.empdescdispl) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.empdescdispl)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.empdescdispl)
            Else
                Me.empdescdispl = MyBase.SetStringAsString(ColumnNames.empdescdispl, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_manager() As String
        Get
            If Me.IsColumnNull(ColumnNames.manager) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.manager)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.manager)
            Else
                Me.manager = MyBase.SetStringAsString(ColumnNames.manager, Value)
            End If
        End Set
    End Property

#End Region

#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub

        Public ReadOnly Property TearOff() As TearOffWhereParameter
            Get
                If _tearOff Is Nothing Then
                    _tearOff = New TearOffWhereParameter(Me)
                End If

                Return _tearOff
            End Get
        End Property

#Region "TearOff's"
        Public Class TearOffWhereParameter

            Public Sub New(ByVal clause As WhereClause)
                Me._clause = clause
            End Sub


            Public ReadOnly Property CCode() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CCode, Parameters.CCode)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DCode() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.DCode, Parameters.DCode)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PCode() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.PCode, Parameters.PCode)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JobNum() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JobNum, Parameters.JobNum)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JobDesc() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JobDesc, Parameters.JobDesc)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CompNum() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CompNum, Parameters.CompNum)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CompDesc() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CompDesc, Parameters.CompDesc)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ThisDay() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ThisDay, Parameters.ThisDay)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Task() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.Task, Parameters.Task)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TempCompDate() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TempCompDate, Parameters.TempCompDate)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TASK_STATUS() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TASK_STATUS, Parameters.TASK_STATUS)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ThisDayStart() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ThisDayStart, Parameters.ThisDayStart)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property SEQ_NBR() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.SEQ_NBR, Parameters.SEQ_NBR)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CL_NAME() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CL_NAME, Parameters.CL_NAME)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DIV_NAME() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_NAME, Parameters.DIV_NAME)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PRD_DESCRIPTION() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.PRD_DESCRIPTION, Parameters.PRD_DESCRIPTION)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TRF_CODE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TRF_CODE, Parameters.TRF_CODE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property RevisedDate() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.RevisedDate, Parameters.RevisedDate)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property StartDate() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.StartDate, Parameters.StartDate)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property manager() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.manager, Parameters.manager)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property


            Private _clause As WhereClause
        End Class
#End Region

        Public ReadOnly Property CCode() As WhereParameter
            Get
                If _CCode_W Is Nothing Then
                    _CCode_W = TearOff.CCode
                End If
                Return _CCode_W
            End Get
        End Property

        Public ReadOnly Property DCode() As WhereParameter
            Get
                If _DCode_W Is Nothing Then
                    _DCode_W = TearOff.DCode
                End If
                Return _DCode_W
            End Get
        End Property

        Public ReadOnly Property PCode() As WhereParameter
            Get
                If _PCode_W Is Nothing Then
                    _PCode_W = TearOff.PCode
                End If
                Return _PCode_W
            End Get
        End Property

        Public ReadOnly Property JobNum() As WhereParameter
            Get
                If _JobNum_W Is Nothing Then
                    _JobNum_W = TearOff.JobNum
                End If
                Return _JobNum_W
            End Get
        End Property

        Public ReadOnly Property JobDesc() As WhereParameter
            Get
                If _JobDesc_W Is Nothing Then
                    _JobDesc_W = TearOff.JobDesc
                End If
                Return _JobDesc_W
            End Get
        End Property

        Public ReadOnly Property CompNum() As WhereParameter
            Get
                If _CompNum_W Is Nothing Then
                    _CompNum_W = TearOff.CompNum
                End If
                Return _CompNum_W
            End Get
        End Property

        Public ReadOnly Property CompDesc() As WhereParameter
            Get
                If _CompDesc_W Is Nothing Then
                    _CompDesc_W = TearOff.CompDesc
                End If
                Return _CompDesc_W
            End Get
        End Property

        Public ReadOnly Property ThisDay() As WhereParameter
            Get
                If _ThisDay_W Is Nothing Then
                    _ThisDay_W = TearOff.ThisDay
                End If
                Return _ThisDay_W
            End Get
        End Property

        Public ReadOnly Property Task() As WhereParameter
            Get
                If _Task_W Is Nothing Then
                    _Task_W = TearOff.Task
                End If
                Return _Task_W
            End Get
        End Property

        Public ReadOnly Property TempCompDate() As WhereParameter
            Get
                If _TempCompDate_W Is Nothing Then
                    _TempCompDate_W = TearOff.TempCompDate
                End If
                Return _TempCompDate_W
            End Get
        End Property

        Public ReadOnly Property TASK_STATUS() As WhereParameter
            Get
                If _TASK_STATUS_W Is Nothing Then
                    _TASK_STATUS_W = TearOff.TASK_STATUS
                End If
                Return _TASK_STATUS_W
            End Get
        End Property

        Public ReadOnly Property ThisDayStart() As WhereParameter
            Get
                If _ThisDayStart_W Is Nothing Then
                    _ThisDayStart_W = TearOff.ThisDayStart
                End If
                Return _ThisDayStart_W
            End Get
        End Property

        Public ReadOnly Property SEQ_NBR() As WhereParameter
            Get
                If _SEQ_NBR_W Is Nothing Then
                    _SEQ_NBR_W = TearOff.SEQ_NBR
                End If
                Return _SEQ_NBR_W
            End Get
        End Property

        Public ReadOnly Property CL_NAME() As WhereParameter
            Get
                If _CL_NAME_W Is Nothing Then
                    _CL_NAME_W = TearOff.CL_NAME
                End If
                Return _CL_NAME_W
            End Get
        End Property

        Public ReadOnly Property DIV_NAME() As WhereParameter
            Get
                If _DIV_NAME_W Is Nothing Then
                    _DIV_NAME_W = TearOff.DIV_NAME
                End If
                Return _DIV_NAME_W
            End Get
        End Property

        Public ReadOnly Property PRD_DESCRIPTION() As WhereParameter
            Get
                If _PRD_DESCRIPTION_W Is Nothing Then
                    _PRD_DESCRIPTION_W = TearOff.PRD_DESCRIPTION
                End If
                Return _PRD_DESCRIPTION_W
            End Get
        End Property

        Public ReadOnly Property TRF_CODE() As WhereParameter
            Get
                If _TRF_CODE_W Is Nothing Then
                    _TRF_CODE_W = TearOff.TRF_CODE
                End If
                Return _TRF_CODE_W
            End Get
        End Property

        Public ReadOnly Property RevisedDate() As WhereParameter
            Get
                If _RevisedDate_W Is Nothing Then
                    _RevisedDate_W = TearOff.RevisedDate
                End If
                Return _RevisedDate_W
            End Get
        End Property

        Public ReadOnly Property StartDate() As WhereParameter
            Get
                If _StartDate_W Is Nothing Then
                    _StartDate_W = TearOff.StartDate
                End If
                Return _StartDate_W
            End Get
        End Property

        Public ReadOnly Property manager() As WhereParameter
            Get
                If _manager_W Is Nothing Then
                    _manager_W = TearOff.manager
                End If
                Return _manager_W
            End Get
        End Property

        Private _CCode_W As WhereParameter = Nothing
        Private _DCode_W As WhereParameter = Nothing
        Private _PCode_W As WhereParameter = Nothing
        Private _JobNum_W As WhereParameter = Nothing
        Private _JobDesc_W As WhereParameter = Nothing
        Private _CompNum_W As WhereParameter = Nothing
        Private _CompDesc_W As WhereParameter = Nothing
        Private _ThisDay_W As WhereParameter = Nothing
        Private _Task_W As WhereParameter = Nothing
        Private _TempCompDate_W As WhereParameter = Nothing
        Private _TASK_STATUS_W As WhereParameter = Nothing
        Private _ThisDayStart_W As WhereParameter = Nothing
        Private _SEQ_NBR_W As WhereParameter = Nothing
        Private _CL_NAME_W As WhereParameter = Nothing
        Private _DIV_NAME_W As WhereParameter = Nothing
        Private _PRD_DESCRIPTION_W As WhereParameter = Nothing
        Private _TRF_CODE_W As WhereParameter = Nothing
        Private _RevisedDate_W As WhereParameter = Nothing
        Private _StartDate_W As WhereParameter = Nothing
        Private _manager_W As WhereParameter = Nothing

        Public Sub WhereClauseReset()

            _CCode_W = Nothing
            _DCode_W = Nothing
            _PCode_W = Nothing
            _JobNum_W = Nothing
            _JobDesc_W = Nothing
            _CompNum_W = Nothing
            _CompDesc_W = Nothing
            _ThisDay_W = Nothing
            _Task_W = Nothing
            _TempCompDate_W = Nothing
            _TASK_STATUS_W = Nothing
            _ThisDayStart_W = Nothing
            _SEQ_NBR_W = Nothing
            _CL_NAME_W = Nothing
            _DIV_NAME_W = Nothing
            _PRD_DESCRIPTION_W = Nothing
            _TRF_CODE_W = Nothing
            _RevisedDate_W = Nothing
            _StartDate_W = Nothing
            _manager_W = Nothing
            Me._entity.Query.FlushWhereParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffWhereParameter
    End Class

    Public ReadOnly Property Where() As WhereClause
        Get
            If _whereClause Is Nothing Then
                _whereClause = New WhereClause(Me)
            End If

            Return _whereClause
        End Get
    End Property

    Private _whereClause As WhereClause = Nothing
#End Region

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub

        Public ReadOnly Property TearOff() As TearOffAggregateParameter
            Get
                If _tearOff Is Nothing Then
                    _tearOff = New TearOffAggregateParameter(Me)
                End If

                Return _tearOff
            End Get
        End Property

#Region "AggregateParameter TearOff's"
        Public Class TearOffAggregateParameter

            Public Sub New(ByVal clause As AggregateClause)
                Me._clause = clause
            End Sub


            Public ReadOnly Property CCode() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CCode, Parameters.CCode)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DCode() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DCode, Parameters.DCode)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PCode() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PCode, Parameters.PCode)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JobNum() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JobNum, Parameters.JobNum)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JobDesc() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JobDesc, Parameters.JobDesc)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CompNum() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CompNum, Parameters.CompNum)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CompDesc() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CompDesc, Parameters.CompDesc)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ThisDay() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ThisDay, Parameters.ThisDay)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Task() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Task, Parameters.Task)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TempCompDate() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TempCompDate, Parameters.TempCompDate)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TASK_STATUS() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TASK_STATUS, Parameters.TASK_STATUS)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ThisDayStart() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ThisDayStart, Parameters.ThisDayStart)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property SEQ_NBR() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.SEQ_NBR, Parameters.SEQ_NBR)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CL_NAME() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CL_NAME, Parameters.CL_NAME)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DIV_NAME() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_NAME, Parameters.DIV_NAME)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PRD_DESCRIPTION() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PRD_DESCRIPTION, Parameters.PRD_DESCRIPTION)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TRF_CODE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TRF_CODE, Parameters.TRF_CODE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property RevisedDate() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.RevisedDate, Parameters.RevisedDate)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property StartDate() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.StartDate, Parameters.StartDate)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property empcodedispl() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.empcodedispl, Parameters.empcodedispl)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property empdescdispl() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.empdescdispl, Parameters.empdescdispl)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property manager() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.manager, Parameters.manager)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property


            Private _clause As AggregateClause
        End Class
#End Region

        Public ReadOnly Property CCode() As AggregateParameter
            Get
                If _CCode_W Is Nothing Then
                    _CCode_W = TearOff.CCode
                End If
                Return _CCode_W
            End Get
        End Property

        Public ReadOnly Property DCode() As AggregateParameter
            Get
                If _DCode_W Is Nothing Then
                    _DCode_W = TearOff.DCode
                End If
                Return _DCode_W
            End Get
        End Property

        Public ReadOnly Property PCode() As AggregateParameter
            Get
                If _PCode_W Is Nothing Then
                    _PCode_W = TearOff.PCode
                End If
                Return _PCode_W
            End Get
        End Property

        Public ReadOnly Property JobNum() As AggregateParameter
            Get
                If _JobNum_W Is Nothing Then
                    _JobNum_W = TearOff.JobNum
                End If
                Return _JobNum_W
            End Get
        End Property

        Public ReadOnly Property JobDesc() As AggregateParameter
            Get
                If _JobDesc_W Is Nothing Then
                    _JobDesc_W = TearOff.JobDesc
                End If
                Return _JobDesc_W
            End Get
        End Property

        Public ReadOnly Property CompNum() As AggregateParameter
            Get
                If _CompNum_W Is Nothing Then
                    _CompNum_W = TearOff.CompNum
                End If
                Return _CompNum_W
            End Get
        End Property

        Public ReadOnly Property CompDesc() As AggregateParameter
            Get
                If _CompDesc_W Is Nothing Then
                    _CompDesc_W = TearOff.CompDesc
                End If
                Return _CompDesc_W
            End Get
        End Property

        Public ReadOnly Property ThisDay() As AggregateParameter
            Get
                If _ThisDay_W Is Nothing Then
                    _ThisDay_W = TearOff.ThisDay
                End If
                Return _ThisDay_W
            End Get
        End Property

        Public ReadOnly Property Task() As AggregateParameter
            Get
                If _Task_W Is Nothing Then
                    _Task_W = TearOff.Task
                End If
                Return _Task_W
            End Get
        End Property

        Public ReadOnly Property TempCompDate() As AggregateParameter
            Get
                If _TempCompDate_W Is Nothing Then
                    _TempCompDate_W = TearOff.TempCompDate
                End If
                Return _TempCompDate_W
            End Get
        End Property

        Public ReadOnly Property TASK_STATUS() As AggregateParameter
            Get
                If _TASK_STATUS_W Is Nothing Then
                    _TASK_STATUS_W = TearOff.TASK_STATUS
                End If
                Return _TASK_STATUS_W
            End Get
        End Property

        Public ReadOnly Property ThisDayStart() As AggregateParameter
            Get
                If _ThisDayStart_W Is Nothing Then
                    _ThisDayStart_W = TearOff.ThisDayStart
                End If
                Return _ThisDayStart_W
            End Get
        End Property

        Public ReadOnly Property SEQ_NBR() As AggregateParameter
            Get
                If _SEQ_NBR_W Is Nothing Then
                    _SEQ_NBR_W = TearOff.SEQ_NBR
                End If
                Return _SEQ_NBR_W
            End Get
        End Property

        Public ReadOnly Property CL_NAME() As AggregateParameter
            Get
                If _CL_NAME_W Is Nothing Then
                    _CL_NAME_W = TearOff.CL_NAME
                End If
                Return _CL_NAME_W
            End Get
        End Property

        Public ReadOnly Property DIV_NAME() As AggregateParameter
            Get
                If _DIV_NAME_W Is Nothing Then
                    _DIV_NAME_W = TearOff.DIV_NAME
                End If
                Return _DIV_NAME_W
            End Get
        End Property

        Public ReadOnly Property PRD_DESCRIPTION() As AggregateParameter
            Get
                If _PRD_DESCRIPTION_W Is Nothing Then
                    _PRD_DESCRIPTION_W = TearOff.PRD_DESCRIPTION
                End If
                Return _PRD_DESCRIPTION_W
            End Get
        End Property

        Public ReadOnly Property TRF_CODE() As AggregateParameter
            Get
                If _TRF_CODE_W Is Nothing Then
                    _TRF_CODE_W = TearOff.TRF_CODE
                End If
                Return _TRF_CODE_W
            End Get
        End Property

        Public ReadOnly Property RevisedDate() As AggregateParameter
            Get
                If _RevisedDate_W Is Nothing Then
                    _RevisedDate_W = TearOff.RevisedDate
                End If
                Return _RevisedDate_W
            End Get
        End Property

        Public ReadOnly Property StartDate() As AggregateParameter
            Get
                If _StartDate_W Is Nothing Then
                    _StartDate_W = TearOff.StartDate
                End If
                Return _StartDate_W
            End Get
        End Property

        Public ReadOnly Property empcodedispl() As AggregateParameter
            Get
                If _empcodedispl_W Is Nothing Then
                    _empcodedispl_W = TearOff.empcodedispl
                End If
                Return _empcodedispl_W
            End Get
        End Property

        Public ReadOnly Property empdescdispl() As AggregateParameter
            Get
                If _empdescdispl_W Is Nothing Then
                    _empdescdispl_W = TearOff.empdescdispl
                End If
                Return _empdescdispl_W
            End Get
        End Property

        Public ReadOnly Property manager() As AggregateParameter
            Get
                If _manager_W Is Nothing Then
                    _manager_W = TearOff.manager
                End If
                Return _manager_W
            End Get
        End Property

        Private _CCode_W As AggregateParameter = Nothing
        Private _DCode_W As AggregateParameter = Nothing
        Private _PCode_W As AggregateParameter = Nothing
        Private _JobNum_W As AggregateParameter = Nothing
        Private _JobDesc_W As AggregateParameter = Nothing
        Private _CompNum_W As AggregateParameter = Nothing
        Private _CompDesc_W As AggregateParameter = Nothing
        Private _ThisDay_W As AggregateParameter = Nothing
        Private _Task_W As AggregateParameter = Nothing
        Private _TempCompDate_W As AggregateParameter = Nothing
        Private _TASK_STATUS_W As AggregateParameter = Nothing
        Private _ThisDayStart_W As AggregateParameter = Nothing
        Private _SEQ_NBR_W As AggregateParameter = Nothing
        Private _CL_NAME_W As AggregateParameter = Nothing
        Private _DIV_NAME_W As AggregateParameter = Nothing
        Private _PRD_DESCRIPTION_W As AggregateParameter = Nothing
        Private _TRF_CODE_W As AggregateParameter = Nothing
        Private _RevisedDate_W As AggregateParameter = Nothing
        Private _StartDate_W As AggregateParameter = Nothing
        Private _empcodedispl_W As AggregateParameter = Nothing
        Private _empdescdispl_W As AggregateParameter = Nothing
        Private _manager_W As AggregateParameter = Nothing

        Public Sub AggregateClauseReset()

            _CCode_W = Nothing
            _DCode_W = Nothing
            _PCode_W = Nothing
            _JobNum_W = Nothing
            _JobDesc_W = Nothing
            _CompNum_W = Nothing
            _CompDesc_W = Nothing
            _ThisDay_W = Nothing
            _Task_W = Nothing
            _TempCompDate_W = Nothing
            _TASK_STATUS_W = Nothing
            _ThisDayStart_W = Nothing
            _SEQ_NBR_W = Nothing
            _CL_NAME_W = Nothing
            _DIV_NAME_W = Nothing
            _PRD_DESCRIPTION_W = Nothing
            _TRF_CODE_W = Nothing
            _RevisedDate_W = Nothing
            _StartDate_W = Nothing
            _empcodedispl_W = Nothing
            _empdescdispl_W = Nothing
            _manager_W = Nothing
            Me._entity.Query.FlushAggregateParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffAggregateParameter
    End Class

    Public ReadOnly Property Aggregate() As AggregateClause
        Get
            If _aggregateClause Is Nothing Then
                _aggregateClause = New AggregateClause(Me)
            End If

            Return _aggregateClause
        End Get
    End Property

    Private _aggregateClause As AggregateClause = Nothing
#End Region

    Protected Overrides Function GetInsertCommand() As IDbCommand
        Return Nothing
    End Function

    Protected Overrides Function GetUpdateCommand() As IDbCommand
        Return Nothing
    End Function

    Protected Overrides Function GetDeleteCommand() As IDbCommand
        Return Nothing
    End Function

End Class

