
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================

' Generated by MyGeneration Version # (1.2.0.2)

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public MustInherit Class _WV_MYALERTSLIST
    Inherits SqlClientEntity

    Public Sub New()
        Me.QuerySource = "WV_MYALERTSLIST"
        Me.MappingName = "WV_MYALERTSLIST"
    End Sub

    '=================================================================
    '  	Public Function LoadAll() As Boolean
    '=================================================================
    '  Loads all of the records in the database, and sets the currentRow to the first row
    '=================================================================
    Public Function LoadAll() As Boolean
        Return MyBase.Query.Load()
    End Function

    Public Overrides Sub FlushData()
        Me._whereClause = Nothing
        Me._aggregateClause = Nothing
        MyBase.FlushData()
    End Sub

#Region "Parameters"
    Protected Class Parameters

        Public Shared ReadOnly Property ALERT_ID() As SqlParameter
            Get
                Return New SqlParameter("ALERT_ID", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property ID() As SqlParameter
            Get
                Return New SqlParameter("ID", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property SUBJECT() As SqlParameter
            Get
                Return New SqlParameter("SUBJECT", SqlDbType.VarChar, 254)
            End Get
        End Property

        Public Shared ReadOnly Property GENERATED() As SqlParameter
            Get
                Return New SqlParameter("GENERATED", SqlDbType.SmallDateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property PROCESSED() As SqlParameter
            Get
                Return New SqlParameter("PROCESSED", SqlDbType.SmallDateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property USER_NAME() As SqlParameter
            Get
                Return New SqlParameter("USER_NAME", SqlDbType.VarChar, 30)
            End Get
        End Property

        Public Shared ReadOnly Property EMP_CODE() As SqlParameter
            Get
                Return New SqlParameter("EMP_CODE", SqlDbType.VarChar, 6)
            End Get
        End Property

        Public Shared ReadOnly Property PRIORITY() As SqlParameter
            Get
                Return New SqlParameter("PRIORITY", SqlDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property TYPE() As SqlParameter
            Get
                Return New SqlParameter("TYPE", SqlDbType.VarChar, 40)
            End Get
        End Property

        Public Shared ReadOnly Property CATEGORY() As SqlParameter
            Get
                Return New SqlParameter("CATEGORY", SqlDbType.VarChar, 40)
            End Get
        End Property

        Public Shared ReadOnly Property ALERT_TYPE_ID() As SqlParameter
            Get
                Return New SqlParameter("ALERT_TYPE_ID", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property ALERT_CAT_ID() As SqlParameter
            Get
                Return New SqlParameter("ALERT_CAT_ID", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property ATTACHMENTCOUNT() As SqlParameter
            Get
                Return New SqlParameter("ATTACHMENTCOUNT", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property ALERT_LEVEL() As SqlParameter
            Get
                Return New SqlParameter("ALERT_LEVEL", SqlDbType.VarChar, 50)
            End Get
        End Property

        Public Shared ReadOnly Property OFFICE_CODE() As SqlParameter
            Get
                Return New SqlParameter("OFFICE_CODE", SqlDbType.VarChar, 4)
            End Get
        End Property

        Public Shared ReadOnly Property CL_CODE() As SqlParameter
            Get
                Return New SqlParameter("CL_CODE", SqlDbType.VarChar, 6)
            End Get
        End Property

        Public Shared ReadOnly Property DIV_CODE() As SqlParameter
            Get
                Return New SqlParameter("DIV_CODE", SqlDbType.VarChar, 6)
            End Get
        End Property

        Public Shared ReadOnly Property PRD_CODE() As SqlParameter
            Get
                Return New SqlParameter("PRD_CODE", SqlDbType.VarChar, 6)
            End Get
        End Property

        Public Shared ReadOnly Property CMP_CODE() As SqlParameter
            Get
                Return New SqlParameter("CMP_CODE", SqlDbType.VarChar, 6)
            End Get
        End Property

        Public Shared ReadOnly Property JOB_NUMBER() As SqlParameter
            Get
                Return New SqlParameter("JOB_NUMBER", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property JOB_COMPONENT_NBR() As SqlParameter
            Get
                Return New SqlParameter("JOB_COMPONENT_NBR", SqlDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property SENDER_EMP_CODE() As SqlParameter
            Get
                Return New SqlParameter("SENDER_EMP_CODE", SqlDbType.VarChar, 6)
            End Get
        End Property

        Public Shared ReadOnly Property DISMISSED_DATE() As SqlParameter
            Get
                Return New SqlParameter("DISMISSED_DATE", SqlDbType.Char, 10)
            End Get
        End Property

        Public Shared ReadOnly Property CL_NAME() As SqlParameter
            Get
                Return New SqlParameter("CL_NAME", SqlDbType.VarChar, 40)
            End Get
        End Property

        Public Shared ReadOnly Property DIV_NAME() As SqlParameter
            Get
                Return New SqlParameter("DIV_NAME", SqlDbType.VarChar, 40)
            End Get
        End Property

        Public Shared ReadOnly Property PRD_DESCRIPTION() As SqlParameter
            Get
                Return New SqlParameter("PRD_DESCRIPTION", SqlDbType.VarChar, 40)
            End Get
        End Property

        Public Shared ReadOnly Property CMP_NAME() As SqlParameter
            Get
                Return New SqlParameter("CMP_NAME", SqlDbType.VarChar, 128)
            End Get
        End Property

        Public Shared ReadOnly Property BODY() As SqlParameter
            Get
                Return New SqlParameter("BODY", SqlDbType.Text, 2147483647)
            End Get
        End Property

        Public Shared ReadOnly Property LOWER_SUBJECT() As SqlParameter
            Get
                Return New SqlParameter("LOWER_SUBJECT", SqlDbType.VarChar, 254)
            End Get
        End Property

        Public Shared ReadOnly Property LOWER_BODY() As SqlParameter
            Get
                Return New SqlParameter("LOWER_BODY", SqlDbType.VarChar, 30)
            End Get
        End Property

        Public Shared ReadOnly Property OFFICE_NAME() As SqlParameter
            Get
                Return New SqlParameter("OFFICE_NAME", SqlDbType.VarChar, 30)
            End Get
        End Property

        Public Shared ReadOnly Property JOB_DESC() As SqlParameter
            Get
                Return New SqlParameter("JOB_DESC", SqlDbType.VarChar, 60)
            End Get
        End Property

        Public Shared ReadOnly Property JOB_COMP_DESC() As SqlParameter
            Get
                Return New SqlParameter("JOB_COMP_DESC", SqlDbType.VarChar, 60)
            End Get
        End Property

        Public Shared ReadOnly Property ALERT_USER() As SqlParameter
            Get
                Return New SqlParameter("ALERT_USER", SqlDbType.VarChar, 100)
            End Get
        End Property

        Public Shared ReadOnly Property CP_ALERT() As SqlParameter
            Get
                Return New SqlParameter("CP_ALERT", SqlDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property NEW_ALERT() As SqlParameter
            Get
                Return New SqlParameter("NEW_ALERT", SqlDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property READ_ALERT() As SqlParameter
            Get
                Return New SqlParameter("READ_ALERT", SqlDbType.SmallInt, 0)
            End Get
        End Property

        Public Shared ReadOnly Property VN_CODE() As SqlParameter
            Get
                Return New SqlParameter("VN_CODE", SqlDbType.VarChar, 6)
            End Get
        End Property

        Public Shared ReadOnly Property VN_NAME() As SqlParameter
            Get
                Return New SqlParameter("VN_NAME", SqlDbType.VarChar, 40)
            End Get
        End Property

        Public Shared ReadOnly Property DUE_DATE() As SqlParameter
            Get
                Return New SqlParameter("DUE_DATE", SqlDbType.SmallDateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property TIME_DUE() As SqlParameter
            Get
                Return New SqlParameter("TIME_DUE", SqlDbType.VarChar, 10)
            End Get
        End Property

        Public Shared ReadOnly Property ALERT_STATE_ID() As SqlParameter
            Get
                Return New SqlParameter("ALERT_STATE_ID", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property ALERT_STATE_NAME() As SqlParameter
            Get
                Return New SqlParameter("ALERT_STATE_NAME", SqlDbType.VarChar, 100)
            End Get
        End Property

        Public Shared ReadOnly Property CURRENT_NOTIFY_EMP_CODE() As SqlParameter
            Get
                Return New SqlParameter("CURRENT_NOTIFY_EMP_CODE", SqlDbType.VarChar, 6)
            End Get
        End Property

        Public Shared ReadOnly Property CURRENT_NOTIFY_EMP_FML() As SqlParameter
            Get
                Return New SqlParameter("CURRENT_NOTIFY_EMP_FML", SqlDbType.VarChar, 30)
            End Get
        End Property


        Public Shared ReadOnly Property GRP_OFFICE() As SqlParameter
            Get
                Return New SqlParameter("GRP_OFFICE", SqlDbType.VarChar, 2000)
            End Get
        End Property
        Public Shared ReadOnly Property GRP_CLIENT() As SqlParameter
            Get
                Return New SqlParameter("GRP_CLIENT", SqlDbType.VarChar, 2000)
            End Get
        End Property
        Public Shared ReadOnly Property GRP_DIVISION() As SqlParameter
            Get
                Return New SqlParameter("GRP_DIVISION", SqlDbType.VarChar, 2000)
            End Get
        End Property
        Public Shared ReadOnly Property GRP_PRODUCT() As SqlParameter
            Get
                Return New SqlParameter("GRP_PRODUCT", SqlDbType.VarChar, 2000)
            End Get
        End Property
        Public Shared ReadOnly Property GRP_JOB() As SqlParameter
            Get
                Return New SqlParameter("GRP_JOB", SqlDbType.VarChar, 2000)
            End Get
        End Property
        Public Shared ReadOnly Property GRP_COMPONENT() As SqlParameter
            Get
                Return New SqlParameter("GRP_COMPONENT", SqlDbType.VarChar, 2000)
            End Get
        End Property

        Public Shared ReadOnly Property ESTIMATE_NUMBER() As SqlParameter
            Get
                Return New SqlParameter("@ESTIMATE_NUMBER", SqlDbType.Int, 0)
            End Get
        End Property
        Public Shared ReadOnly Property EST_COMPONENT_NBR() As SqlParameter
            Get
                Return New SqlParameter("@EST_COMPONENT_NBR", SqlDbType.SmallInt, 0)
            End Get
        End Property
        Public Shared ReadOnly Property TASK_FNC_CODE() As SqlParameter
            Get
                Return New SqlParameter("@TASK_FNC_CODE", SqlDbType.VarChar, 10)
            End Get
        End Property
        Public Shared ReadOnly Property TASK_FNC_DESC() As SqlParameter
            Get
                Return New SqlParameter("@TASK_FNC_DESC", SqlDbType.VarChar, 40)
            End Get
        End Property

        Public Shared ReadOnly Property GRP_ESTIMATE() As SqlParameter
            Get
                Return New SqlParameter("@GRP_ESTIMATE", SqlDbType.VarChar, 2000)
            End Get
        End Property
        Public Shared ReadOnly Property GRP_ESTIMATE_COMPONENT() As SqlParameter
            Get
                Return New SqlParameter("@GRP_ESTIMATE_COMPONENT", SqlDbType.VarChar, 2000)
            End Get
        End Property
        Public Shared ReadOnly Property GRP_TASK() As SqlParameter
            Get
                Return New SqlParameter("@GRP_TASK", SqlDbType.VarChar, 2000)
            End Get
        End Property

        Public Shared ReadOnly Property CMP_IDENTIFIER() As SqlParameter
            Get
                Return New SqlParameter("@CMP_IDENTIFIER", SqlDbType.Int, 0)
            End Get
        End Property
        Public Shared ReadOnly Property GRP_CAMPAIGN() As SqlParameter
            Get
                Return New SqlParameter("@GRP_CAMPAIGN", SqlDbType.VarChar, 2000)
            End Get
        End Property

        Public Shared ReadOnly Property VER() As SqlParameter
            Get
                Return New SqlParameter("@VER", SqlDbType.VarChar, 10)
            End Get
        End Property
        Public Shared ReadOnly Property BUILD() As SqlParameter
            Get
                Return New SqlParameter("@BUILD", SqlDbType.VarChar, 10)
            End Get
        End Property

        Public Shared ReadOnly Property ALERT_SEQ_NBR() As SqlParameter
            Get
                Return New SqlParameter("@ALERT_SEQ_NBR", SqlDbType.Int, 0)
            End Get
        End Property

        Public Shared ReadOnly Property GRP_PRIORITY() As SqlParameter
            Get
                Return New SqlParameter("@GRP_PRIORITY", SqlDbType.VarChar, 2000)
            End Get
        End Property

        Public Shared ReadOnly Property GRP_DUE_DATE() As SqlParameter
            Get
                Return New SqlParameter("@GRP_DUE_DATE", SqlDbType.VarChar, 2000)
            End Get
        End Property

        Public Shared ReadOnly Property GRP_DUE_DATE_DISPLAY() As SqlParameter
            Get
                Return New SqlParameter("@GRP_DUE_DATE_DISPLAY", SqlDbType.VarChar, 2000)
            End Get
        End Property
        Public Shared ReadOnly Property SENT() As SqlParameter
            Get
                Return New SqlParameter("SENT", SqlDbType.SmallDateTime, 0)
            End Get
        End Property
        Public Shared ReadOnly Property ALERT_NOTIFY_NAME() As SqlParameter
            Get
                Return New SqlParameter("ALERT_NOTIFY_NAME", SqlDbType.VarChar, 100)
            End Get
        End Property


    End Class

#End Region

#Region "ColumnNames"
    Public Class ColumnNames

        Public Const ALERT_ID As String = "ALERT_ID"
        Public Const ID As String = "ID"
        Public Const SUBJECT As String = "SUBJECT"
        Public Const GENERATED As String = "GENERATED"
        Public Const PROCESSED As String = "PROCESSED"
        Public Const USER_NAME As String = "USER_NAME"
        Public Const EMP_CODE As String = "EMP_CODE"
        Public Const PRIORITY As String = "PRIORITY"
        Public Const TYPE As String = "TYPE"
        Public Const CATEGORY As String = "CATEGORY"
        Public Const ALERT_TYPE_ID As String = "ALERT_TYPE_ID"
        Public Const ALERT_CAT_ID As String = "ALERT_CAT_ID"
        Public Const ATTACHMENTCOUNT As String = "ATTACHMENTCOUNT"
        Public Const ALERT_LEVEL As String = "ALERT_LEVEL"
        Public Const OFFICE_CODE As String = "OFFICE_CODE"
        Public Const CL_CODE As String = "CL_CODE"
        Public Const DIV_CODE As String = "DIV_CODE"
        Public Const PRD_CODE As String = "PRD_CODE"
        Public Const CMP_CODE As String = "CMP_CODE"
        Public Const JOB_NUMBER As String = "JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "JOB_COMPONENT_NBR"
        Public Const SENDER_EMP_CODE As String = "SENDER_EMP_CODE"
        Public Const DISMISSED_DATE As String = "DISMISSED_DATE"
        Public Const CL_NAME As String = "CL_NAME"
        Public Const DIV_NAME As String = "DIV_NAME"
        Public Const PRD_DESCRIPTION As String = "PRD_DESCRIPTION"
        Public Const CMP_NAME As String = "CMP_NAME"
        Public Const BODY As String = "BODY"
        Public Const LOWER_SUBJECT As String = "LOWER_SUBJECT"
        Public Const LOWER_BODY As String = "LOWER_BODY"
        Public Const OFFICE_NAME As String = "OFFICE_NAME"
        Public Const JOB_DESC As String = "JOB_DESC"
        Public Const JOB_COMP_DESC As String = "JOB_COMP_DESC"
        Public Const ALERT_USER As String = "ALERT_USER"
        Public Const CP_ALERT As String = "CP_ALERT"
        Public Const NEW_ALERT As String = "NEW_ALERT"
        Public Const READ_ALERT As String = "READ_ALERT"
        Public Const VN_CODE As String = "VN_CODE"
        Public Const VN_NAME As String = "VN_NAME"
        Public Const DUE_DATE As String = "DUE_DATE"
        Public Const TIME_DUE As String = "TIME_DUE"
        Public Const ALERT_STATE_ID As String = "ALERT_STATE_ID"
        Public Const ALERT_STATE_NAME As String = "ALERT_STATE_NAME"

        Public Const CURRENT_NOTIFY_EMP_CODE As String = "CURRENT_NOTIFY_EMP_CODE"
        Public Const CURRENT_NOTIFY_EMP_FML As String = "CURRENT_NOTIFY_EMP_FML"

        Public Const GRP_OFFICE As String = "GRP_OFFICE"
        Public Const GRP_CLIENT As String = "GRP_CLIENT"
        Public Const GRP_DIVISION As String = "GRP_DIVISION"
        Public Const GRP_PRODUCT As String = "GRP_PRODUCT"
        Public Const GRP_JOB As String = "GRP_JOB"
        Public Const GRP_COMPONENT As String = "GRP_COMPONENT"

        Public Const ESTIMATE_NUMBER As String = "ESTIMATE_NUMBER"
        Public Const EST_COMPONENT_NBR As String = "EST_COMPONENT_NBR"
        Public Const TASK_FNC_CODE As String = "TASK_FNC_CODE"
        Public Const TASK_FNC_DESC As String = "TASK_FNC_DESC"

        Public Const GRP_ESTIMATE As String = "GRP_ESTIMATE"
        Public Const GRP_ESTIMATE_COMPONENT As String = "GRP_ESTIMATE_COMPONENT"
        Public Const GRP_TASK As String = "GRP_TASK"

        Public Const CMP_IDENTIFIER As String = "CMP_IDENTIFIER"
        Public Const GRP_CAMPAIGN As String = "GRP_CAMPAIGN"

        Public Const VER As String = "VER"
        Public Const BUILD As String = "BUILD"
        Public Const ALERT_SEQ_NBR As String = "ALERT_SEQ_NBR"
        Public Const SENT As String = "SENT"

        Public Const GRP_PRIORITY As String = "GRP_PRIORITY"
        Public Const GRP_DUE_DATE As String = "GRP_DUE_DATE"
        Public Const GRP_DUE_DATE_DISPLAY As String = "GRP_DUE_DATE_DISPLAY"
        Public Const ALERT_NOTIFY_NAME As String = "ALERT_NOTIFY_NAME"


        Public Shared Function ToPropertyName(ByVal columnName As String) As String

            If ht Is Nothing Then

                ht = New Hashtable

                ht(ALERT_ID) = _WV_MYALERTSLIST.PropertyNames.ALERT_ID
                ht(ID) = _WV_MYALERTSLIST.PropertyNames.ID
                ht(SUBJECT) = _WV_MYALERTSLIST.PropertyNames.SUBJECT
                ht(GENERATED) = _WV_MYALERTSLIST.PropertyNames.GENERATED
                ht(PROCESSED) = _WV_MYALERTSLIST.PropertyNames.PROCESSED
                ht(USER_NAME) = _WV_MYALERTSLIST.PropertyNames.USER_NAME
                ht(EMP_CODE) = _WV_MYALERTSLIST.PropertyNames.EMP_CODE
                ht(PRIORITY) = _WV_MYALERTSLIST.PropertyNames.PRIORITY
                ht(TYPE) = _WV_MYALERTSLIST.PropertyNames.TYPE
                ht(CATEGORY) = _WV_MYALERTSLIST.PropertyNames.CATEGORY
                ht(ALERT_TYPE_ID) = _WV_MYALERTSLIST.PropertyNames.ALERT_TYPE_ID
                ht(ALERT_CAT_ID) = _WV_MYALERTSLIST.PropertyNames.ALERT_CAT_ID
                ht(ATTACHMENTCOUNT) = _WV_MYALERTSLIST.PropertyNames.ATTACHMENTCOUNT
                ht(ALERT_LEVEL) = _WV_MYALERTSLIST.PropertyNames.ALERT_LEVEL
                ht(OFFICE_CODE) = _WV_MYALERTSLIST.PropertyNames.OFFICE_CODE
                ht(CL_CODE) = _WV_MYALERTSLIST.PropertyNames.CL_CODE
                ht(DIV_CODE) = _WV_MYALERTSLIST.PropertyNames.DIV_CODE
                ht(PRD_CODE) = _WV_MYALERTSLIST.PropertyNames.PRD_CODE
                ht(CMP_CODE) = _WV_MYALERTSLIST.PropertyNames.CMP_CODE
                ht(JOB_NUMBER) = _WV_MYALERTSLIST.PropertyNames.JOB_NUMBER
                ht(JOB_COMPONENT_NBR) = _WV_MYALERTSLIST.PropertyNames.JOB_COMPONENT_NBR
                ht(SENDER_EMP_CODE) = _WV_MYALERTSLIST.PropertyNames.SENDER_EMP_CODE
                ht(DISMISSED_DATE) = _WV_MYALERTSLIST.PropertyNames.DISMISSED_DATE
                ht(CL_NAME) = _WV_MYALERTSLIST.PropertyNames.CL_NAME
                ht(DIV_NAME) = _WV_MYALERTSLIST.PropertyNames.DIV_NAME
                ht(PRD_DESCRIPTION) = _WV_MYALERTSLIST.PropertyNames.PRD_DESCRIPTION
                ht(CMP_NAME) = _WV_MYALERTSLIST.PropertyNames.CMP_NAME
                ht(BODY) = _WV_MYALERTSLIST.PropertyNames.BODY
                ht(LOWER_SUBJECT) = _WV_MYALERTSLIST.PropertyNames.LOWER_SUBJECT
                ht(LOWER_BODY) = _WV_MYALERTSLIST.PropertyNames.LOWER_BODY
                ht(OFFICE_NAME) = _WV_MYALERTSLIST.PropertyNames.OFFICE_NAME
                ht(JOB_DESC) = _WV_MYALERTSLIST.PropertyNames.JOB_DESC
                ht(JOB_COMP_DESC) = _WV_MYALERTSLIST.PropertyNames.JOB_COMP_DESC
                ht(ALERT_USER) = _WV_MYALERTSLIST.PropertyNames.ALERT_USER
                ht(CP_ALERT) = _WV_MYALERTSLIST.PropertyNames.CP_ALERT
                ht(NEW_ALERT) = _WV_MYALERTSLIST.PropertyNames.NEW_ALERT
                ht(READ_ALERT) = _WV_MYALERTSLIST.PropertyNames.READ_ALERT
                ht(VN_CODE) = _WV_MYALERTSLIST.PropertyNames.VN_CODE
                ht(VN_NAME) = _WV_MYALERTSLIST.PropertyNames.VN_NAME
                ht(DUE_DATE) = _WV_MYALERTSLIST.PropertyNames.DUE_DATE
                ht(TIME_DUE) = _WV_MYALERTSLIST.PropertyNames.TIME_DUE
                ht(ALERT_STATE_ID) = _WV_MYALERTSLIST.PropertyNames.ALERT_STATE_ID
                ht(ALERT_STATE_NAME) = _WV_MYALERTSLIST.PropertyNames.ALERT_STATE_NAME

                ht(CURRENT_NOTIFY_EMP_CODE) = _WV_MYALERTSLIST.PropertyNames.CURRENT_NOTIFY_EMP_CODE
                ht(CURRENT_NOTIFY_EMP_FML) = _WV_MYALERTSLIST.PropertyNames.CURRENT_NOTIFY_EMP_FML

                ht(GRP_OFFICE) = _WV_MYALERTSLIST.PropertyNames.GRP_OFFICE
                ht(GRP_CLIENT) = _WV_MYALERTSLIST.PropertyNames.GRP_CLIENT
                ht(GRP_DIVISION) = _WV_MYALERTSLIST.PropertyNames.GRP_DIVISION
                ht(GRP_PRODUCT) = _WV_MYALERTSLIST.PropertyNames.GRP_PRODUCT
                ht(GRP_JOB) = _WV_MYALERTSLIST.PropertyNames.GRP_JOB
                ht(GRP_COMPONENT) = _WV_MYALERTSLIST.PropertyNames.GRP_COMPONENT

                ht(ESTIMATE_NUMBER) = _WV_MYALERTSLIST.PropertyNames.ESTIMATE_NUMBER
                ht(EST_COMPONENT_NBR) = _WV_MYALERTSLIST.PropertyNames.EST_COMPONENT_NBR
                ht(TASK_FNC_CODE) = _WV_MYALERTSLIST.PropertyNames.TASK_FNC_CODE
                ht(TASK_FNC_DESC) = _WV_MYALERTSLIST.PropertyNames.TASK_FNC_DESC

                ht(GRP_ESTIMATE) = _WV_MYALERTSLIST.PropertyNames.GRP_ESTIMATE
                ht(GRP_ESTIMATE_COMPONENT) = _WV_MYALERTSLIST.PropertyNames.GRP_ESTIMATE_COMPONENT
                ht(GRP_TASK) = _WV_MYALERTSLIST.PropertyNames.GRP_TASK

                ht(CMP_IDENTIFIER) = _WV_MYALERTSLIST.PropertyNames.CMP_IDENTIFIER
                ht(GRP_CAMPAIGN) = _WV_MYALERTSLIST.PropertyNames.GRP_CAMPAIGN

                ht(VER) = _WV_MYALERTSLIST.PropertyNames.VER
                ht(BUILD) = _WV_MYALERTSLIST.PropertyNames.BUILD
                ht(ALERT_SEQ_NBR) = _WV_MYALERTSLIST.PropertyNames.ALERT_SEQ_NBR
                ht(GRP_PRIORITY) = _WV_MYALERTSLIST.PropertyNames.GRP_PRIORITY

                ht(GRP_DUE_DATE) = _WV_MYALERTSLIST.PropertyNames.GRP_DUE_DATE

                ht(GRP_DUE_DATE_DISPLAY) = _WV_MYALERTSLIST.PropertyNames.GRP_DUE_DATE_DISPLAY

                ht(SENT) = _WV_MYALERTSLIST.PropertyNames.SENT
                ht(ALERT_NOTIFY_NAME) = _WV_MYALERTSLIST.PropertyNames.ALERT_NOTIFY_NAME
            End If

            Return CType(ht(columnName), String)

        End Function

        Private Shared ht As Hashtable = Nothing
    End Class
#End Region

#Region "PropertyNames"
    Public Class PropertyNames

        Public Const ALERT_ID As String = "ALERT_ID"
        Public Const ID As String = "ID"
        Public Const SUBJECT As String = "SUBJECT"
        Public Const GENERATED As String = "GENERATED"
        Public Const PROCESSED As String = "PROCESSED"
        Public Const USER_NAME As String = "USER_NAME"
        Public Const EMP_CODE As String = "EMP_CODE"
        Public Const PRIORITY As String = "PRIORITY"
        Public Const TYPE As String = "TYPE"
        Public Const CATEGORY As String = "CATEGORY"
        Public Const ALERT_TYPE_ID As String = "ALERT_TYPE_ID"
        Public Const ALERT_CAT_ID As String = "ALERT_CAT_ID"
        Public Const ATTACHMENTCOUNT As String = "ATTACHMENTCOUNT"
        Public Const ALERT_LEVEL As String = "ALERT_LEVEL"
        Public Const OFFICE_CODE As String = "OFFICE_CODE"
        Public Const CL_CODE As String = "CL_CODE"
        Public Const DIV_CODE As String = "DIV_CODE"
        Public Const PRD_CODE As String = "PRD_CODE"
        Public Const CMP_CODE As String = "CMP_CODE"
        Public Const JOB_NUMBER As String = "JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "JOB_COMPONENT_NBR"
        Public Const SENDER_EMP_CODE As String = "SENDER_EMP_CODE"
        Public Const DISMISSED_DATE As String = "DISMISSED_DATE"
        Public Const CL_NAME As String = "CL_NAME"
        Public Const DIV_NAME As String = "DIV_NAME"
        Public Const PRD_DESCRIPTION As String = "PRD_DESCRIPTION"
        Public Const CMP_NAME As String = "CMP_NAME"
        Public Const BODY As String = "BODY"
        Public Const LOWER_SUBJECT As String = "LOWER_SUBJECT"
        Public Const LOWER_BODY As String = "LOWER_BODY"
        Public Const OFFICE_NAME As String = "OFFICE_NAME"
        Public Const JOB_DESC As String = "JOB_DESC"
        Public Const JOB_COMP_DESC As String = "JOB_COMP_DESC"
        Public Const ALERT_USER As String = "ALERT_USER"
        Public Const CP_ALERT As String = "CP_ALERT"
        Public Const NEW_ALERT As String = "NEW_ALERT"
        Public Const READ_ALERT As String = "READ_ALERT"
        Public Const VN_CODE As String = "VN_CODE"
        Public Const VN_NAME As String = "VN_NAME"
        Public Const DUE_DATE As String = "DUE_DATE"
        Public Const TIME_DUE As String = "TIME_DUE"
        Public Const ALERT_STATE_ID As String = "ALERT_STATE_ID"
        Public Const ALERT_STATE_NAME As String = "ALERT_STATE_NAME"

        Public Const CURRENT_NOTIFY_EMP_CODE As String = "CURRENT_NOTIFY_EMP_CODE"
        Public Const CURRENT_NOTIFY_EMP_FML As String = "CURRENT_NOTIFY_EMP_FML"

        Public Const GRP_OFFICE As String = "GRP_OFFICE"
        Public Const GRP_CLIENT As String = "GRP_CLIENT"
        Public Const GRP_DIVISION As String = "GRP_DIVISION"
        Public Const GRP_PRODUCT As String = "GRP_PRODUCT"
        Public Const GRP_JOB As String = "GRP_JOB"
        Public Const GRP_COMPONENT As String = "GRP_COMPONENT"

        Public Const ESTIMATE_NUMBER As String = "ESTIMATE_NUMBER"
        Public Const EST_COMPONENT_NBR As String = "EST_COMPONENT_NBR"
        Public Const TASK_FNC_CODE As String = "TASK_FNC_CODE"
        Public Const TASK_FNC_DESC As String = "TASK_FNC_DESC"

        Public Const GRP_ESTIMATE As String = "GRP_ESTIMATE"
        Public Const GRP_ESTIMATE_COMPONENT As String = "GRP_ESTIMATE_COMPONENT"
        Public Const GRP_TASK As String = "GRP_TASK"

        Public Const CMP_IDENTIFIER As String = "CMP_IDENTIFIER"
        Public Const GRP_CAMPAIGN As String = "GRP_CAMPAIGN"

        Public Const VER As String = "VER"
        Public Const BUILD As String = "BUILD"
        Public Const ALERT_SEQ_NBR As String = "ALERT_SEQ_NBR"
        Public Const GRP_PRIORITY As String = "GRP_PRIORITY"

        Public Const GRP_DUE_DATE As String = "GRP_DUE_DATE"
        Public Const GRP_DUE_DATE_DISPLAY As String = "GRP_DUE_DATE_DISPLAY"
        Public Const SENT As String = "SENT"
        Public Const ALERT_NOTIFY_NAME As String = "ALERT_NOTIFY_NAME"

        Public Shared Function ToColumnName(ByVal propertyName As String) As String

            If ht Is Nothing Then

                ht = New Hashtable

                ht(ALERT_ID) = _WV_MYALERTSLIST.ColumnNames.ALERT_ID
                ht(ID) = _WV_MYALERTSLIST.ColumnNames.ID
                ht(SUBJECT) = _WV_MYALERTSLIST.ColumnNames.SUBJECT
                ht(GENERATED) = _WV_MYALERTSLIST.ColumnNames.GENERATED
                ht(PROCESSED) = _WV_MYALERTSLIST.ColumnNames.PROCESSED
                ht(USER_NAME) = _WV_MYALERTSLIST.ColumnNames.USER_NAME
                ht(EMP_CODE) = _WV_MYALERTSLIST.ColumnNames.EMP_CODE
                ht(PRIORITY) = _WV_MYALERTSLIST.ColumnNames.PRIORITY
                ht(TYPE) = _WV_MYALERTSLIST.ColumnNames.TYPE
                ht(CATEGORY) = _WV_MYALERTSLIST.ColumnNames.CATEGORY
                ht(ALERT_TYPE_ID) = _WV_MYALERTSLIST.ColumnNames.ALERT_TYPE_ID
                ht(ALERT_CAT_ID) = _WV_MYALERTSLIST.ColumnNames.ALERT_CAT_ID
                ht(ATTACHMENTCOUNT) = _WV_MYALERTSLIST.ColumnNames.ATTACHMENTCOUNT
                ht(ALERT_LEVEL) = _WV_MYALERTSLIST.ColumnNames.ALERT_LEVEL
                ht(OFFICE_CODE) = _WV_MYALERTSLIST.ColumnNames.OFFICE_CODE
                ht(CL_CODE) = _WV_MYALERTSLIST.ColumnNames.CL_CODE
                ht(DIV_CODE) = _WV_MYALERTSLIST.ColumnNames.DIV_CODE
                ht(PRD_CODE) = _WV_MYALERTSLIST.ColumnNames.PRD_CODE
                ht(CMP_CODE) = _WV_MYALERTSLIST.ColumnNames.CMP_CODE
                ht(JOB_NUMBER) = _WV_MYALERTSLIST.ColumnNames.JOB_NUMBER
                ht(JOB_COMPONENT_NBR) = _WV_MYALERTSLIST.ColumnNames.JOB_COMPONENT_NBR
                ht(SENDER_EMP_CODE) = _WV_MYALERTSLIST.ColumnNames.SENDER_EMP_CODE
                ht(DISMISSED_DATE) = _WV_MYALERTSLIST.ColumnNames.DISMISSED_DATE
                ht(CL_NAME) = _WV_MYALERTSLIST.ColumnNames.CL_NAME
                ht(DIV_NAME) = _WV_MYALERTSLIST.ColumnNames.DIV_NAME
                ht(PRD_DESCRIPTION) = _WV_MYALERTSLIST.ColumnNames.PRD_DESCRIPTION
                ht(CMP_NAME) = _WV_MYALERTSLIST.ColumnNames.CMP_NAME
                ht(BODY) = _WV_MYALERTSLIST.ColumnNames.BODY
                ht(LOWER_SUBJECT) = _WV_MYALERTSLIST.ColumnNames.LOWER_SUBJECT
                ht(LOWER_BODY) = _WV_MYALERTSLIST.ColumnNames.LOWER_BODY
                ht(OFFICE_NAME) = _WV_MYALERTSLIST.ColumnNames.OFFICE_NAME
                ht(JOB_DESC) = _WV_MYALERTSLIST.ColumnNames.JOB_DESC
                ht(JOB_COMP_DESC) = _WV_MYALERTSLIST.ColumnNames.JOB_COMP_DESC
                ht(ALERT_USER) = _WV_MYALERTSLIST.ColumnNames.ALERT_USER
                ht(CP_ALERT) = _WV_MYALERTSLIST.ColumnNames.CP_ALERT
                ht(NEW_ALERT) = _WV_MYALERTSLIST.ColumnNames.NEW_ALERT
                ht(READ_ALERT) = _WV_MYALERTSLIST.ColumnNames.READ_ALERT
                ht(VN_CODE) = _WV_MYALERTSLIST.ColumnNames.VN_CODE
                ht(VN_NAME) = _WV_MYALERTSLIST.ColumnNames.VN_NAME
                ht(DUE_DATE) = _WV_MYALERTSLIST.ColumnNames.DUE_DATE
                ht(TIME_DUE) = _WV_MYALERTSLIST.ColumnNames.TIME_DUE

                ht(ALERT_STATE_ID) = _WV_MYALERTSLIST.ColumnNames.ALERT_STATE_ID
                ht(ALERT_STATE_NAME) = _WV_MYALERTSLIST.ColumnNames.ALERT_STATE_NAME

                ht(CURRENT_NOTIFY_EMP_CODE) = _WV_MYALERTSLIST.ColumnNames.CURRENT_NOTIFY_EMP_CODE
                ht(CURRENT_NOTIFY_EMP_FML) = _WV_MYALERTSLIST.ColumnNames.CURRENT_NOTIFY_EMP_FML

                ht(GRP_OFFICE) = _WV_MYALERTSLIST.ColumnNames.GRP_OFFICE
                ht(GRP_CLIENT) = _WV_MYALERTSLIST.ColumnNames.GRP_CLIENT
                ht(GRP_DIVISION) = _WV_MYALERTSLIST.ColumnNames.GRP_DIVISION
                ht(GRP_PRODUCT) = _WV_MYALERTSLIST.ColumnNames.GRP_PRODUCT
                ht(GRP_JOB) = _WV_MYALERTSLIST.ColumnNames.GRP_JOB
                ht(GRP_COMPONENT) = _WV_MYALERTSLIST.ColumnNames.GRP_COMPONENT

                ht(ESTIMATE_NUMBER) = _WV_MYALERTSLIST.ColumnNames.ESTIMATE_NUMBER
                ht(EST_COMPONENT_NBR) = _WV_MYALERTSLIST.ColumnNames.EST_COMPONENT_NBR
                ht(TASK_FNC_CODE) = _WV_MYALERTSLIST.ColumnNames.TASK_FNC_CODE
                ht(TASK_FNC_DESC) = _WV_MYALERTSLIST.ColumnNames.TASK_FNC_DESC

                ht(GRP_ESTIMATE) = _WV_MYALERTSLIST.ColumnNames.GRP_ESTIMATE
                ht(GRP_ESTIMATE_COMPONENT) = _WV_MYALERTSLIST.ColumnNames.GRP_ESTIMATE_COMPONENT
                ht(GRP_TASK) = _WV_MYALERTSLIST.ColumnNames.GRP_TASK

                ht(CMP_IDENTIFIER) = _WV_MYALERTSLIST.ColumnNames.CMP_IDENTIFIER
                ht(GRP_CAMPAIGN) = _WV_MYALERTSLIST.ColumnNames.GRP_CAMPAIGN

                ht(VER) = _WV_MYALERTSLIST.ColumnNames.VER
                ht(BUILD) = _WV_MYALERTSLIST.ColumnNames.BUILD
                ht(ALERT_SEQ_NBR) = _WV_MYALERTSLIST.ColumnNames.ALERT_SEQ_NBR
                ht(GRP_PRIORITY) = _WV_MYALERTSLIST.ColumnNames.GRP_PRIORITY

                ht(GRP_DUE_DATE) = _WV_MYALERTSLIST.ColumnNames.GRP_DUE_DATE

                ht(GRP_DUE_DATE_DISPLAY) = _WV_MYALERTSLIST.ColumnNames.GRP_DUE_DATE_DISPLAY
                ht(SENT) = _WV_MYALERTSLIST.ColumnNames.SENT
                ht(ALERT_NOTIFY_NAME) = _WV_MYALERTSLIST.ColumnNames.ALERT_NOTIFY_NAME
            End If

            Return CType(ht(propertyName), String)

        End Function

        Private Shared ht As Hashtable = Nothing

    End Class
#End Region

#Region "StringPropertyNames"
    Public Class StringPropertyNames

        Public Const ALERT_ID As String = "s_ALERT_ID"
        Public Const ID As String = "s_ID"
        Public Const SUBJECT As String = "s_SUBJECT"
        Public Const GENERATED As String = "s_GENERATED"
        Public Const PROCESSED As String = "s_PROCESSED"
        Public Const USER_NAME As String = "s_USER_NAME"
        Public Const EMP_CODE As String = "s_EMP_CODE"
        Public Const PRIORITY As String = "s_PRIORITY"
        Public Const TYPE As String = "s_TYPE"
        Public Const CATEGORY As String = "s_CATEGORY"
        Public Const ALERT_TYPE_ID As String = "s_ALERT_TYPE_ID"
        Public Const ALERT_CAT_ID As String = "s_ALERT_CAT_ID"
        Public Const ATTACHMENTCOUNT As String = "s_ATTACHMENTCOUNT"
        Public Const ALERT_LEVEL As String = "s_ALERT_LEVEL"
        Public Const OFFICE_CODE As String = "s_OFFICE_CODE"
        Public Const CL_CODE As String = "s_CL_CODE"
        Public Const DIV_CODE As String = "s_DIV_CODE"
        Public Const PRD_CODE As String = "s_PRD_CODE"
        Public Const CMP_CODE As String = "s_CMP_CODE"
        Public Const JOB_NUMBER As String = "s_JOB_NUMBER"
        Public Const JOB_COMPONENT_NBR As String = "s_JOB_COMPONENT_NBR"
        Public Const SENDER_EMP_CODE As String = "s_SENDER_EMP_CODE"
        Public Const DISMISSED_DATE As String = "s_DISMISSED_DATE"
        Public Const CL_NAME As String = "s_CL_NAME"
        Public Const DIV_NAME As String = "s_DIV_NAME"
        Public Const PRD_DESCRIPTION As String = "s_PRD_DESCRIPTION"
        Public Const CMP_NAME As String = "s_CMP_NAME"
        Public Const BODY As String = "s_BODY"
        Public Const LOWER_SUBJECT As String = "s_LOWER_SUBJECT"
        Public Const LOWER_BODY As String = "s_LOWER_BODY"
        Public Const OFFICE_NAME As String = "s_OFFICE_NAME"
        Public Const JOB_DESC As String = "s_JOB_DESC"
        Public Const JOB_COMP_DESC As String = "s_JOB_COMP_DESC"
        Public Const ALERT_USER As String = "s_ALERT_USER"
        Public Const CP_ALERT As String = "s_CP_ALERT"
        Public Const NEW_ALERT As String = "s_NEW_ALERT"
        Public Const READ_ALERT As String = "s_READ_ALERT"
        Public Const VN_CODE As String = "s_VN_CODE"
        Public Const VN_NAME As String = "s_VN_NAME"
        Public Const DUE_DATE As String = "s_DUE_DATE"
        Public Const TIME_DUE As String = "s_TIME_DUE"
        Public Const ALERT_STATE_ID As String = "s_ALERT_STATE_ID"
        Public Const ALERT_STATE_NAME As String = "s_ALERT_STATE_NAME"

        Public Const CURRENT_NOTIFY_EMP_CODE As String = "s_CURRENT_NOTIFY_EMP_CODE"
        Public Const CURRENT_NOTIFY_EMP_FML As String = "s_CURRENT_NOTIFY_EMP_FML"

        Public Const GRP_OFFICE As String = "s_GRP_OFFICE"
        Public Const GRP_CLIENT As String = "s_GRP_CLIENT"
        Public Const GRP_DIVISION As String = "s_GRP_DIVISION"
        Public Const GRP_PRODUCT As String = "s_GRP_PRODUCT"
        Public Const GRP_JOB As String = "s_GRP_JOB"
        Public Const GRP_COMPONENT As String = "s_GRP_COMPONENT"

        Public Const ESTIMATE_NUMBER As String = "s_ESTIMATE_NUMBER"
        Public Const EST_COMPONENT_NBR As String = "s_EST_COMPONENT_NBR"
        Public Const TASK_FNC_CODE As String = "s_TASK_FNC_CODE"
        Public Const TASK_FNC_DESC As String = "s_TASK_FNC_DESC"

        Public Const GRP_ESTIMATE As String = "s_GRP_ESTIMATE"
        Public Const GRP_ESTIMATE_COMPONENT As String = "s_GRP_ESTIMATE_COMPONENT"
        Public Const GRP_TASK As String = "s_GRP_TASK"

        Public Const CMP_IDENTIFIER As String = "s_CMP_IDENTIFIER"
        Public Const GRP_CAMPAIGN As String = "s_GRP_CAMPAIGN"

        Public Const VER As String = "s_VER"
        Public Const BUILD As String = "s_BUILD"
        Public Const ALERT_SEQ_NBR As String = "s_ALERT_SEQ_NBR"

        Public Const GRP_PRIORITY As String = "s_GRP_PRIORITY"
        Public Const GRP_DUE_DATE As String = "s_GRP_DUE_DATE"

        Public Const GRP_DUE_DATE_DISPLAY As String = "s_GRP_DUE_DATE_DISPLAY"

        Public Const SENT As String = "s_SENT"
        Public Const ALERT_NOTIFY_NAME As String = "s_ALERT_NOTIFY_NAME"
    End Class
#End Region

#Region "Properties"
    Public Overridable Property ALERT_ID() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.ALERT_ID)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.ALERT_ID, Value)
        End Set
    End Property

    Public Overridable Property ID() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.ID)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.ID, Value)
        End Set
    End Property

    Public Overridable Property SUBJECT() As String
        Get
            Return MyBase.GetString(ColumnNames.SUBJECT)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.SUBJECT, Value)
        End Set
    End Property

    Public Overridable Property GENERATED() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.GENERATED)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.GENERATED, Value)
        End Set
    End Property

    Public Overridable Property PROCESSED() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.PROCESSED)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.PROCESSED, Value)
        End Set
    End Property

    Public Overridable Property USER_NAME() As String
        Get
            Return MyBase.GetString(ColumnNames.USER_NAME)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.USER_NAME, Value)
        End Set
    End Property

    Public Overridable Property EMP_CODE() As String
        Get
            Return MyBase.GetString(ColumnNames.EMP_CODE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.EMP_CODE, Value)
        End Set
    End Property

    Public Overridable Property PRIORITY() As Short
        Get
            Return MyBase.GetShort(ColumnNames.PRIORITY)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.PRIORITY, Value)
        End Set
    End Property

    Public Overridable Property TYPE() As String
        Get
            Return MyBase.GetString(ColumnNames.TYPE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.TYPE, Value)
        End Set
    End Property

    Public Overridable Property CATEGORY() As String
        Get
            Return MyBase.GetString(ColumnNames.CATEGORY)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.CATEGORY, Value)
        End Set
    End Property

    Public Overridable Property ALERT_TYPE_ID() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.ALERT_TYPE_ID)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.ALERT_TYPE_ID, Value)
        End Set
    End Property

    Public Overridable Property ALERT_CAT_ID() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.ALERT_CAT_ID)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.ALERT_CAT_ID, Value)
        End Set
    End Property

    Public Overridable Property ATTACHMENTCOUNT() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.ATTACHMENTCOUNT)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.ATTACHMENTCOUNT, Value)
        End Set
    End Property

    Public Overridable Property ALERT_LEVEL() As String
        Get
            Return MyBase.GetString(ColumnNames.ALERT_LEVEL)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.ALERT_LEVEL, Value)
        End Set
    End Property

    Public Overridable Property OFFICE_CODE() As String
        Get
            Return MyBase.GetString(ColumnNames.OFFICE_CODE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.OFFICE_CODE, Value)
        End Set
    End Property

    Public Overridable Property CL_CODE() As String
        Get
            Return MyBase.GetString(ColumnNames.CL_CODE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.CL_CODE, Value)
        End Set
    End Property

    Public Overridable Property DIV_CODE() As String
        Get
            Return MyBase.GetString(ColumnNames.DIV_CODE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.DIV_CODE, Value)
        End Set
    End Property

    Public Overridable Property PRD_CODE() As String
        Get
            Return MyBase.GetString(ColumnNames.PRD_CODE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.PRD_CODE, Value)
        End Set
    End Property

    Public Overridable Property CMP_CODE() As String
        Get
            Return MyBase.GetString(ColumnNames.CMP_CODE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.CMP_CODE, Value)
        End Set
    End Property

    Public Overridable Property JOB_NUMBER() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.JOB_NUMBER)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.JOB_NUMBER, Value)
        End Set
    End Property

    Public Overridable Property JOB_COMPONENT_NBR() As Short
        Get
            Return MyBase.GetShort(ColumnNames.JOB_COMPONENT_NBR)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.JOB_COMPONENT_NBR, Value)
        End Set
    End Property

    Public Overridable Property SENDER_EMP_CODE() As String
        Get
            Return MyBase.GetString(ColumnNames.SENDER_EMP_CODE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.SENDER_EMP_CODE, Value)
        End Set
    End Property

    Public Overridable Property DISMISSED_DATE() As String
        Get
            Return MyBase.GetString(ColumnNames.DISMISSED_DATE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.DISMISSED_DATE, Value)
        End Set
    End Property

    Public Overridable Property CL_NAME() As String
        Get
            Return MyBase.GetString(ColumnNames.CL_NAME)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.CL_NAME, Value)
        End Set
    End Property

    Public Overridable Property DIV_NAME() As String
        Get
            Return MyBase.GetString(ColumnNames.DIV_NAME)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.DIV_NAME, Value)
        End Set
    End Property

    Public Overridable Property PRD_DESCRIPTION() As String
        Get
            Return MyBase.GetString(ColumnNames.PRD_DESCRIPTION)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.PRD_DESCRIPTION, Value)
        End Set
    End Property

    Public Overridable Property CMP_NAME() As String
        Get
            Return MyBase.GetString(ColumnNames.CMP_NAME)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.CMP_NAME, Value)
        End Set
    End Property

    Public Overridable Property BODY() As String
        Get
            Return MyBase.GetString(ColumnNames.BODY)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.BODY, Value)
        End Set
    End Property

    Public Overridable Property LOWER_SUBJECT() As String
        Get
            Return MyBase.GetString(ColumnNames.LOWER_SUBJECT)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.LOWER_SUBJECT, Value)
        End Set
    End Property

    Public Overridable Property LOWER_BODY() As String
        Get
            Return MyBase.GetString(ColumnNames.LOWER_BODY)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.LOWER_BODY, Value)
        End Set
    End Property

    Public Overridable Property OFFICE_NAME() As String
        Get
            Return MyBase.GetString(ColumnNames.OFFICE_NAME)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.OFFICE_NAME, Value)
        End Set
    End Property

    Public Overridable Property JOB_DESC() As String
        Get
            Return MyBase.GetString(ColumnNames.JOB_DESC)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.JOB_DESC, Value)
        End Set
    End Property

    Public Overridable Property JOB_COMP_DESC() As String
        Get
            Return MyBase.GetString(ColumnNames.JOB_COMP_DESC)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.JOB_COMP_DESC, Value)
        End Set
    End Property

    Public Overridable Property ALERT_USER() As String
        Get
            Return MyBase.GetString(ColumnNames.ALERT_USER)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.ALERT_USER, Value)
        End Set
    End Property

    Public Overridable Property CP_ALERT() As Short
        Get
            Return MyBase.GetShort(ColumnNames.CP_ALERT)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.CP_ALERT, Value)
        End Set
    End Property

    Public Overridable Property NEW_ALERT() As Short
        Get
            Return MyBase.GetShort(ColumnNames.NEW_ALERT)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.NEW_ALERT, Value)
        End Set
    End Property

    Public Overridable Property READ_ALERT() As Short
        Get
            Return MyBase.GetShort(ColumnNames.READ_ALERT)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.READ_ALERT, Value)
        End Set
    End Property

    Public Overridable Property VN_CODE() As String
        Get
            Return MyBase.GetString(ColumnNames.VN_CODE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.VN_CODE, Value)
        End Set
    End Property

    Public Overridable Property VN_NAME() As String
        Get
            Return MyBase.GetString(ColumnNames.VN_NAME)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.VN_NAME, Value)
        End Set
    End Property

    Public Overridable Property DUE_DATE() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.DUE_DATE)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.DUE_DATE, Value)
        End Set
    End Property

    Public Overridable Property TIME_DUE() As String
        Get
            Return MyBase.GetString(ColumnNames.TIME_DUE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.TIME_DUE, Value)
        End Set
    End Property

    Public Overridable Property ALERT_STATE_ID() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.ALERT_STATE_ID)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.ALERT_STATE_ID, Value)
        End Set
    End Property

    Public Overridable Property ALERT_STATE_NAME() As String
        Get
            Return MyBase.GetString(ColumnNames.ALERT_STATE_NAME)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.ALERT_STATE_NAME, Value)
        End Set
    End Property


    Public Overridable Property CURRENT_NOTIFY_EMP_CODE() As String
        Get
            Return MyBase.GetString(ColumnNames.CURRENT_NOTIFY_EMP_CODE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.CURRENT_NOTIFY_EMP_CODE, Value)
        End Set
    End Property

    Public Overridable Property CURRENT_NOTIFY_EMP_FML() As String
        Get
            Return MyBase.GetString(ColumnNames.CURRENT_NOTIFY_EMP_FML)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.CURRENT_NOTIFY_EMP_FML, Value)
        End Set
    End Property

    'GROUPING
    Public Overridable Property GRP_OFFICE() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_OFFICE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_OFFICE, Value)
        End Set
    End Property
    Public Overridable Property GRP_CLIENT() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_CLIENT)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_CLIENT, Value)
        End Set
    End Property
    Public Overridable Property GRP_DIVISION() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_DIVISION)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_DIVISION, Value)
        End Set
    End Property
    Public Overridable Property GRP_PRODUCT() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_PRODUCT)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_PRODUCT, Value)
        End Set
    End Property
    Public Overridable Property GRP_JOB() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_JOB)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_JOB, Value)
        End Set
    End Property
    Public Overridable Property GRP_COMPONENT() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_COMPONENT)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_COMPONENT, Value)
        End Set
    End Property



    Public Overridable Property ESTIMATE_NUMBER() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.ESTIMATE_NUMBER)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.ESTIMATE_NUMBER, Value)
        End Set
    End Property

    Public Overridable Property EST_COMPONENT_NBR() As Short
        Get
            Return MyBase.GetShort(ColumnNames.EST_COMPONENT_NBR)
        End Get
        Set(ByVal Value As Short)
            MyBase.SetShort(ColumnNames.EST_COMPONENT_NBR, Value)
        End Set
    End Property

    Public Overridable Property TASK_FNC_CODE() As String
        Get
            Return MyBase.GetString(ColumnNames.TASK_FNC_CODE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.TASK_FNC_CODE, Value)
        End Set
    End Property

    Public Overridable Property TASK_FNC_DESC() As String
        Get
            Return MyBase.GetString(ColumnNames.TASK_FNC_DESC)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.TASK_FNC_DESC, Value)
        End Set
    End Property


    Public Overridable Property GRP_ESTIMATE() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_ESTIMATE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_ESTIMATE, Value)
        End Set
    End Property
    Public Overridable Property GRP_ESTIMATE_COMPONENT() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_ESTIMATE_COMPONENT)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_ESTIMATE_COMPONENT, Value)
        End Set
    End Property
    Public Overridable Property GRP_TASK() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_TASK)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_TASK, Value)
        End Set
    End Property

    Public Overridable Property CMP_IDENTIFIER() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.CMP_IDENTIFIER)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.CMP_IDENTIFIER, Value)
        End Set
    End Property

    Public Overridable Property GRP_CAMPAIGN() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_CAMPAIGN)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_CAMPAIGN, Value)
        End Set
    End Property


    Public Overridable Property VER() As String
        Get
            Return MyBase.GetString(ColumnNames.VER)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.VER, Value)
        End Set
    End Property
    Public Overridable Property BUILD() As String
        Get
            Return MyBase.GetString(ColumnNames.BUILD)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.BUILD, Value)
        End Set
    End Property

    Public Overridable Property ALERT_SEQ_NBR() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.ALERT_SEQ_NBR)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.ALERT_SEQ_NBR, Value)
        End Set
    End Property


    Public Overridable Property GRP_PRIORITY() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_PRIORITY)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_PRIORITY, Value)
        End Set
    End Property

    Public Overridable Property GRP_DUE_DATE() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_DUE_DATE)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_DUE_DATE, Value)
        End Set
    End Property

    Public Overridable Property GRP_DUE_DATE_DISPLAY() As String
        Get
            Return MyBase.GetString(ColumnNames.GRP_DUE_DATE_DISPLAY)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.GRP_DUE_DATE_DISPLAY, Value)
        End Set
    End Property

    Public Overridable Property SENT() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.SENT)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.SENT, Value)
        End Set
    End Property

    Public Overridable Property ALERT_NOTIFY_NAME() As String
        Get
            Return MyBase.GetString(ColumnNames.ALERT_NOTIFY_NAME)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.ALERT_NOTIFY_NAME, Value)
        End Set
    End Property


#End Region

#Region "String Properties"

    Public Overridable Property s_ALERT_ID() As String
        Get
            If Me.IsColumnNull(ColumnNames.ALERT_ID) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.ALERT_ID)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.ALERT_ID)
            Else
                Me.ALERT_ID = MyBase.SetIntegerAsString(ColumnNames.ALERT_ID, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ID() As String
        Get
            If Me.IsColumnNull(ColumnNames.ID) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.ID)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.ID)
            Else
                Me.ID = MyBase.SetIntegerAsString(ColumnNames.ID, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_SUBJECT() As String
        Get
            If Me.IsColumnNull(ColumnNames.SUBJECT) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.SUBJECT)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.SUBJECT)
            Else
                Me.SUBJECT = MyBase.SetStringAsString(ColumnNames.SUBJECT, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_GENERATED() As String
        Get
            If Me.IsColumnNull(ColumnNames.GENERATED) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.GENERATED)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.GENERATED)
            Else
                Me.GENERATED = MyBase.SetDateTimeAsString(ColumnNames.GENERATED, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_PROCESSED() As String
        Get
            If Me.IsColumnNull(ColumnNames.PROCESSED) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.PROCESSED)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.PROCESSED)
            Else
                Me.PROCESSED = MyBase.SetDateTimeAsString(ColumnNames.PROCESSED, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_USER_NAME() As String
        Get
            If Me.IsColumnNull(ColumnNames.USER_NAME) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.USER_NAME)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.USER_NAME)
            Else
                Me.USER_NAME = MyBase.SetStringAsString(ColumnNames.USER_NAME, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_EMP_CODE() As String
        Get
            If Me.IsColumnNull(ColumnNames.EMP_CODE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.EMP_CODE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.EMP_CODE)
            Else
                Me.EMP_CODE = MyBase.SetStringAsString(ColumnNames.EMP_CODE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_PRIORITY() As String
        Get
            If Me.IsColumnNull(ColumnNames.PRIORITY) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.PRIORITY)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.PRIORITY)
            Else
                Me.PRIORITY = MyBase.SetShortAsString(ColumnNames.PRIORITY, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TYPE() As String
        Get
            If Me.IsColumnNull(ColumnNames.TYPE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.TYPE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.TYPE)
            Else
                Me.TYPE = MyBase.SetStringAsString(ColumnNames.TYPE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_CATEGORY() As String
        Get
            If Me.IsColumnNull(ColumnNames.CATEGORY) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.CATEGORY)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.CATEGORY)
            Else
                Me.CATEGORY = MyBase.SetStringAsString(ColumnNames.CATEGORY, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ALERT_TYPE_ID() As String
        Get
            If Me.IsColumnNull(ColumnNames.ALERT_TYPE_ID) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.ALERT_TYPE_ID)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.ALERT_TYPE_ID)
            Else
                Me.ALERT_TYPE_ID = MyBase.SetIntegerAsString(ColumnNames.ALERT_TYPE_ID, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ALERT_CAT_ID() As String
        Get
            If Me.IsColumnNull(ColumnNames.ALERT_CAT_ID) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.ALERT_CAT_ID)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.ALERT_CAT_ID)
            Else
                Me.ALERT_CAT_ID = MyBase.SetIntegerAsString(ColumnNames.ALERT_CAT_ID, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ATTACHMENTCOUNT() As String
        Get
            If Me.IsColumnNull(ColumnNames.ATTACHMENTCOUNT) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.ATTACHMENTCOUNT)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.ATTACHMENTCOUNT)
            Else
                Me.ATTACHMENTCOUNT = MyBase.SetIntegerAsString(ColumnNames.ATTACHMENTCOUNT, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ALERT_LEVEL() As String
        Get
            If Me.IsColumnNull(ColumnNames.ALERT_LEVEL) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.ALERT_LEVEL)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.ALERT_LEVEL)
            Else
                Me.ALERT_LEVEL = MyBase.SetStringAsString(ColumnNames.ALERT_LEVEL, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_OFFICE_CODE() As String
        Get
            If Me.IsColumnNull(ColumnNames.OFFICE_CODE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.OFFICE_CODE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.OFFICE_CODE)
            Else
                Me.OFFICE_CODE = MyBase.SetStringAsString(ColumnNames.OFFICE_CODE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_CL_CODE() As String
        Get
            If Me.IsColumnNull(ColumnNames.CL_CODE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.CL_CODE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.CL_CODE)
            Else
                Me.CL_CODE = MyBase.SetStringAsString(ColumnNames.CL_CODE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_DIV_CODE() As String
        Get
            If Me.IsColumnNull(ColumnNames.DIV_CODE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.DIV_CODE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.DIV_CODE)
            Else
                Me.DIV_CODE = MyBase.SetStringAsString(ColumnNames.DIV_CODE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_PRD_CODE() As String
        Get
            If Me.IsColumnNull(ColumnNames.PRD_CODE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.PRD_CODE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.PRD_CODE)
            Else
                Me.PRD_CODE = MyBase.SetStringAsString(ColumnNames.PRD_CODE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_CMP_CODE() As String
        Get
            If Me.IsColumnNull(ColumnNames.CMP_CODE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.CMP_CODE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.CMP_CODE)
            Else
                Me.CMP_CODE = MyBase.SetStringAsString(ColumnNames.CMP_CODE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JOB_NUMBER() As String
        Get
            If Me.IsColumnNull(ColumnNames.JOB_NUMBER) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.JOB_NUMBER)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JOB_NUMBER)
            Else
                Me.JOB_NUMBER = MyBase.SetIntegerAsString(ColumnNames.JOB_NUMBER, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JOB_COMPONENT_NBR() As String
        Get
            If Me.IsColumnNull(ColumnNames.JOB_COMPONENT_NBR) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.JOB_COMPONENT_NBR)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JOB_COMPONENT_NBR)
            Else
                Me.JOB_COMPONENT_NBR = MyBase.SetShortAsString(ColumnNames.JOB_COMPONENT_NBR, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_SENDER_EMP_CODE() As String
        Get
            If Me.IsColumnNull(ColumnNames.SENDER_EMP_CODE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.SENDER_EMP_CODE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.SENDER_EMP_CODE)
            Else
                Me.SENDER_EMP_CODE = MyBase.SetStringAsString(ColumnNames.SENDER_EMP_CODE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_DISMISSED_DATE() As String
        Get
            If Me.IsColumnNull(ColumnNames.DISMISSED_DATE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.DISMISSED_DATE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.DISMISSED_DATE)
            Else
                Me.DISMISSED_DATE = MyBase.SetStringAsString(ColumnNames.DISMISSED_DATE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_CL_NAME() As String
        Get
            If Me.IsColumnNull(ColumnNames.CL_NAME) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.CL_NAME)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.CL_NAME)
            Else
                Me.CL_NAME = MyBase.SetStringAsString(ColumnNames.CL_NAME, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_DIV_NAME() As String
        Get
            If Me.IsColumnNull(ColumnNames.DIV_NAME) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.DIV_NAME)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.DIV_NAME)
            Else
                Me.DIV_NAME = MyBase.SetStringAsString(ColumnNames.DIV_NAME, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_PRD_DESCRIPTION() As String
        Get
            If Me.IsColumnNull(ColumnNames.PRD_DESCRIPTION) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.PRD_DESCRIPTION)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.PRD_DESCRIPTION)
            Else
                Me.PRD_DESCRIPTION = MyBase.SetStringAsString(ColumnNames.PRD_DESCRIPTION, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_CMP_NAME() As String
        Get
            If Me.IsColumnNull(ColumnNames.CMP_NAME) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.CMP_NAME)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.CMP_NAME)
            Else
                Me.CMP_NAME = MyBase.SetStringAsString(ColumnNames.CMP_NAME, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_BODY() As String
        Get
            If Me.IsColumnNull(ColumnNames.BODY) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.BODY)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.BODY)
            Else
                Me.BODY = MyBase.SetStringAsString(ColumnNames.BODY, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_LOWER_SUBJECT() As String
        Get
            If Me.IsColumnNull(ColumnNames.LOWER_SUBJECT) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.LOWER_SUBJECT)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.LOWER_SUBJECT)
            Else
                Me.LOWER_SUBJECT = MyBase.SetStringAsString(ColumnNames.LOWER_SUBJECT, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_LOWER_BODY() As String
        Get
            If Me.IsColumnNull(ColumnNames.LOWER_BODY) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.LOWER_BODY)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.LOWER_BODY)
            Else
                Me.LOWER_BODY = MyBase.SetStringAsString(ColumnNames.LOWER_BODY, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_OFFICE_NAME() As String
        Get
            If Me.IsColumnNull(ColumnNames.OFFICE_NAME) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.OFFICE_NAME)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.OFFICE_NAME)
            Else
                Me.OFFICE_NAME = MyBase.SetStringAsString(ColumnNames.OFFICE_NAME, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JOB_DESC() As String
        Get
            If Me.IsColumnNull(ColumnNames.JOB_DESC) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.JOB_DESC)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JOB_DESC)
            Else
                Me.JOB_DESC = MyBase.SetStringAsString(ColumnNames.JOB_DESC, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_JOB_COMP_DESC() As String
        Get
            If Me.IsColumnNull(ColumnNames.JOB_COMP_DESC) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.JOB_COMP_DESC)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.JOB_COMP_DESC)
            Else
                Me.JOB_COMP_DESC = MyBase.SetStringAsString(ColumnNames.JOB_COMP_DESC, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ALERT_USER() As String
        Get
            If Me.IsColumnNull(ColumnNames.ALERT_USER) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.ALERT_USER)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.ALERT_USER)
            Else
                Me.ALERT_USER = MyBase.SetStringAsString(ColumnNames.ALERT_USER, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_CP_ALERT() As String
        Get
            If Me.IsColumnNull(ColumnNames.CP_ALERT) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.CP_ALERT)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.CP_ALERT)
            Else
                Me.CP_ALERT = MyBase.SetShortAsString(ColumnNames.CP_ALERT, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_NEW_ALERT() As String
        Get
            If Me.IsColumnNull(ColumnNames.NEW_ALERT) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.NEW_ALERT)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.NEW_ALERT)
            Else
                Me.NEW_ALERT = MyBase.SetShortAsString(ColumnNames.NEW_ALERT, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_READ_ALERT() As String
        Get
            If Me.IsColumnNull(ColumnNames.READ_ALERT) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.READ_ALERT)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.READ_ALERT)
            Else
                Me.READ_ALERT = MyBase.SetShortAsString(ColumnNames.READ_ALERT, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_VN_CODE() As String
        Get
            If Me.IsColumnNull(ColumnNames.VN_CODE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.VN_CODE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.VN_CODE)
            Else
                Me.VN_CODE = MyBase.SetStringAsString(ColumnNames.VN_CODE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_VN_NAME() As String
        Get
            If Me.IsColumnNull(ColumnNames.VN_NAME) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.VN_NAME)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = value Then
                Me.SetColumnNull(ColumnNames.VN_NAME)
            Else
                Me.VN_NAME = MyBase.SetStringAsString(ColumnNames.VN_NAME, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_DUE_DATE() As String
        Get
            If Me.IsColumnNull(ColumnNames.DUE_DATE) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.DUE_DATE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.DUE_DATE)
            Else
                Me.DUE_DATE = MyBase.SetDateTimeAsString(ColumnNames.DUE_DATE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TIME_DUE() As String
        Get
            If Me.IsColumnNull(ColumnNames.TIME_DUE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.TIME_DUE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.TIME_DUE)
            Else
                Me.DUE_DATE = MyBase.SetStringAsString(ColumnNames.TIME_DUE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ALERT_STATE_ID() As String
        Get
            If Me.IsColumnNull(ColumnNames.ALERT_STATE_ID) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.ALERT_STATE_ID)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.ALERT_STATE_ID)
            Else
                Me.ALERT_STATE_ID = MyBase.SetIntegerAsString(ColumnNames.ALERT_STATE_ID, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ALERT_STATE_NAME() As String
        Get
            If Me.IsColumnNull(ColumnNames.ALERT_STATE_NAME) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.ALERT_STATE_NAME)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.ALERT_STATE_NAME)
            Else
                Me.ALERT_STATE_NAME = MyBase.SetStringAsString(ColumnNames.ALERT_STATE_NAME, Value)
            End If
        End Set
    End Property



    Public Overridable Property s_CURRENT_NOTIFY_EMP_CODE() As String
        Get
            If Me.IsColumnNull(ColumnNames.CURRENT_NOTIFY_EMP_CODE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.CURRENT_NOTIFY_EMP_CODE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.CURRENT_NOTIFY_EMP_CODE)
            Else
                Me.CURRENT_NOTIFY_EMP_CODE = MyBase.SetStringAsString(ColumnNames.CURRENT_NOTIFY_EMP_CODE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_CURRENT_NOTIFY_EMP_FML() As String
        Get
            If Me.IsColumnNull(ColumnNames.CURRENT_NOTIFY_EMP_FML) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.CURRENT_NOTIFY_EMP_FML)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.CURRENT_NOTIFY_EMP_FML)
            Else
                Me.CURRENT_NOTIFY_EMP_FML = MyBase.SetStringAsString(ColumnNames.CURRENT_NOTIFY_EMP_FML, Value)
            End If
        End Set
    End Property

    'GROUPING
    Public Overridable Property s_GRP_OFFICE() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_OFFICE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_OFFICE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_OFFICE)
            Else
                Me.GRP_OFFICE = MyBase.SetStringAsString(ColumnNames.GRP_OFFICE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_GRP_CLIENT() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_CLIENT) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_CLIENT)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_CLIENT)
            Else
                Me.GRP_CLIENT = MyBase.SetStringAsString(ColumnNames.GRP_CLIENT, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_GRP_DIVISION() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_DIVISION) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_DIVISION)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_DIVISION)
            Else
                Me.GRP_DIVISION = MyBase.SetStringAsString(ColumnNames.GRP_DIVISION, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_GRP_PRODUCT() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_PRODUCT) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_PRODUCT)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_PRODUCT)
            Else
                Me.GRP_PRODUCT = MyBase.SetStringAsString(ColumnNames.GRP_PRODUCT, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_GRP_JOB() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_JOB) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_JOB)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_JOB)
            Else
                Me.GRP_JOB = MyBase.SetStringAsString(ColumnNames.GRP_JOB, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_GRP_COMPONENT() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_COMPONENT) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_COMPONENT)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_COMPONENT)
            Else
                Me.GRP_COMPONENT = MyBase.SetStringAsString(ColumnNames.GRP_COMPONENT, Value)
            End If
        End Set
    End Property




    Public Overridable Property s_ESTIMATE_NUMBER() As String
        Get
            If Me.IsColumnNull(ColumnNames.ESTIMATE_NUMBER) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.ESTIMATE_NUMBER)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.ESTIMATE_NUMBER)
            Else
                Me.ESTIMATE_NUMBER = MyBase.SetIntegerAsString(ColumnNames.ESTIMATE_NUMBER, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_EST_COMPONENT_NBR() As String
        Get
            If Me.IsColumnNull(ColumnNames.EST_COMPONENT_NBR) Then
                Return String.Empty
            Else
                Return MyBase.GetShortAsString(ColumnNames.EST_COMPONENT_NBR)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.EST_COMPONENT_NBR)
            Else
                Me.EST_COMPONENT_NBR = MyBase.SetShortAsString(ColumnNames.EST_COMPONENT_NBR, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TASK_FNC_CODE() As String
        Get
            If Me.IsColumnNull(ColumnNames.TASK_FNC_CODE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.TASK_FNC_CODE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.TASK_FNC_CODE)
            Else
                Me.TASK_FNC_CODE = MyBase.SetStringAsString(ColumnNames.TASK_FNC_CODE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_TASK_FNC_DESC() As String
        Get
            If Me.IsColumnNull(ColumnNames.TASK_FNC_DESC) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.TASK_FNC_DESC)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.TASK_FNC_DESC)
            Else
                Me.TASK_FNC_DESC = MyBase.SetStringAsString(ColumnNames.TASK_FNC_DESC, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_GRP_ESTIMATE() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_ESTIMATE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_ESTIMATE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_ESTIMATE)
            Else
                Me.GRP_ESTIMATE = MyBase.SetStringAsString(ColumnNames.GRP_ESTIMATE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_GRP_ESTIMATE_COMPONENT() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_ESTIMATE_COMPONENT) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_ESTIMATE_COMPONENT)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_ESTIMATE_COMPONENT)
            Else
                Me.GRP_ESTIMATE_COMPONENT = MyBase.SetStringAsString(ColumnNames.GRP_ESTIMATE_COMPONENT, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_GRP_TASK() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_TASK) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_TASK)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_TASK)
            Else
                Me.GRP_TASK = MyBase.SetStringAsString(ColumnNames.GRP_TASK, Value)
            End If
        End Set
    End Property


    Public Overridable Property s_CMP_IDENTIFIER() As String
        Get
            If Me.IsColumnNull(ColumnNames.CMP_IDENTIFIER) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.CMP_IDENTIFIER)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.CMP_IDENTIFIER)
            Else
                Me.CMP_IDENTIFIER = MyBase.SetIntegerAsString(ColumnNames.CMP_IDENTIFIER, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_GRP_CAMPAIGN() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_CAMPAIGN) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_CAMPAIGN)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_CAMPAIGN)
            Else
                Me.GRP_CAMPAIGN = MyBase.SetStringAsString(ColumnNames.GRP_CAMPAIGN, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_VER() As String
        Get
            If Me.IsColumnNull(ColumnNames.VER) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.VER)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.VER)
            Else
                Me.VER = MyBase.SetStringAsString(ColumnNames.VER, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_BUILD() As String
        Get
            If Me.IsColumnNull(ColumnNames.BUILD) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.BUILD)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.BUILD)
            Else
                Me.BUILD = MyBase.SetStringAsString(ColumnNames.BUILD, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ALERT_SEQ_NBR() As String
        Get
            If Me.IsColumnNull(ColumnNames.ALERT_SEQ_NBR) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.ALERT_SEQ_NBR)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.ALERT_SEQ_NBR)
            Else
                Me.ALERT_SEQ_NBR = MyBase.SetIntegerAsString(ColumnNames.ALERT_SEQ_NBR, Value)
            End If
        End Set
    End Property


    Public Overridable Property s_GRP_PRIORITY() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_PRIORITY) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_PRIORITY)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_PRIORITY)
            Else
                Me.GRP_PRIORITY = MyBase.SetStringAsString(ColumnNames.GRP_PRIORITY, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_GRP_DUE_DATE() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_DUE_DATE) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_DUE_DATE)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_DUE_DATE)
            Else
                Me.GRP_DUE_DATE = MyBase.SetStringAsString(ColumnNames.GRP_DUE_DATE, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_GRP_DUE_DATE_DISPLAY() As String
        Get
            If Me.IsColumnNull(ColumnNames.GRP_DUE_DATE_DISPLAY) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.GRP_DUE_DATE_DISPLAY)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.GRP_DUE_DATE_DISPLAY)
            Else
                Me.GRP_DUE_DATE_DISPLAY = MyBase.SetStringAsString(ColumnNames.GRP_DUE_DATE_DISPLAY, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_SENT() As String
        Get
            If Me.IsColumnNull(ColumnNames.SENT) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.SENT)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.SENT)
            Else
                Me.SENT = MyBase.SetDateTimeAsString(ColumnNames.SENT, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ALERT_NOTIFY_NAME() As String
        Get
            If Me.IsColumnNull(ColumnNames.ALERT_NOTIFY_NAME) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.ALERT_NOTIFY_NAME)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.ALERT_NOTIFY_NAME)
            Else
                Me.ALERT_NOTIFY_NAME = MyBase.SetStringAsString(ColumnNames.ALERT_NOTIFY_NAME, Value)
            End If
        End Set
    End Property



#End Region
    '  NEED TO ADD GROUPING PROPERTIES????
#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub

        Public ReadOnly Property TearOff() As TearOffWhereParameter
            Get
                If _tearOff Is Nothing Then
                    _tearOff = New TearOffWhereParameter(Me)
                End If

                Return _tearOff
            End Get
        End Property

#Region "TearOff's"
        Public Class TearOffWhereParameter

            Public Sub New(ByVal clause As WhereClause)
                Me._clause = clause
            End Sub


            Public ReadOnly Property ALERT_ID() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_ID, Parameters.ALERT_ID)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ID() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ID, Parameters.ID)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property SUBJECT() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.SUBJECT, Parameters.SUBJECT)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property GENERATED() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.GENERATED, Parameters.GENERATED)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PROCESSED() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.PROCESSED, Parameters.PROCESSED)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property USER_NAME() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.USER_NAME, Parameters.USER_NAME)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property EMP_CODE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.EMP_CODE, Parameters.EMP_CODE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PRIORITY() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.PRIORITY, Parameters.PRIORITY)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TYPE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TYPE, Parameters.TYPE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CATEGORY() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CATEGORY, Parameters.CATEGORY)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_TYPE_ID() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_TYPE_ID, Parameters.ALERT_TYPE_ID)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_CAT_ID() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_CAT_ID, Parameters.ALERT_CAT_ID)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ATTACHMENTCOUNT() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ATTACHMENTCOUNT, Parameters.ATTACHMENTCOUNT)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_LEVEL() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_LEVEL, Parameters.ALERT_LEVEL)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property OFFICE_CODE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.OFFICE_CODE, Parameters.OFFICE_CODE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CL_CODE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CL_CODE, Parameters.CL_CODE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DIV_CODE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_CODE, Parameters.DIV_CODE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PRD_CODE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.PRD_CODE, Parameters.PRD_CODE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CMP_CODE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CMP_CODE, Parameters.CMP_CODE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_NUMBER() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_NUMBER, Parameters.JOB_NUMBER)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_COMPONENT_NBR() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_COMPONENT_NBR, Parameters.JOB_COMPONENT_NBR)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property SENDER_EMP_CODE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.SENDER_EMP_CODE, Parameters.SENDER_EMP_CODE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DISMISSED_DATE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.DISMISSED_DATE, Parameters.DISMISSED_DATE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CL_NAME() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CL_NAME, Parameters.CL_NAME)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DIV_NAME() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.DIV_NAME, Parameters.DIV_NAME)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PRD_DESCRIPTION() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.PRD_DESCRIPTION, Parameters.PRD_DESCRIPTION)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CMP_NAME() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CMP_NAME, Parameters.CMP_NAME)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property BODY() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.BODY, Parameters.BODY)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property LOWER_SUBJECT() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.LOWER_SUBJECT, Parameters.LOWER_SUBJECT)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property LOWER_BODY() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.LOWER_BODY, Parameters.LOWER_BODY)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property OFFICE_NAME() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.OFFICE_NAME, Parameters.OFFICE_NAME)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_DESC() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_DESC, Parameters.JOB_DESC)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_COMP_DESC() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.JOB_COMP_DESC, Parameters.JOB_COMP_DESC)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_USER() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_USER, Parameters.ALERT_USER)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CP_ALERT() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CP_ALERT, Parameters.CP_ALERT)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property NEW_ALERT() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.NEW_ALERT, Parameters.NEW_ALERT)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property READ_ALERT() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.READ_ALERT, Parameters.READ_ALERT)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property VN_CODE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.VN_CODE, Parameters.VN_CODE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property VN_NAME() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.VN_NAME, Parameters.VN_NAME)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DUE_DATE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.DUE_DATE, Parameters.DUE_DATE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TIME_DUE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TIME_DUE, Parameters.TIME_DUE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_STATE_ID() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_STATE_ID, Parameters.ALERT_STATE_ID)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_STATE_NAME() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_STATE_NAME, Parameters.ALERT_STATE_NAME)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property




            Public ReadOnly Property CURRENT_NOTIFY_EMP_CODE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CURRENT_NOTIFY_EMP_CODE, Parameters.CURRENT_NOTIFY_EMP_CODE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CURRENT_NOTIFY_EMP_FML() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CURRENT_NOTIFY_EMP_FML, Parameters.CURRENT_NOTIFY_EMP_FML)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property



            Public ReadOnly Property ESTIMATE_NUMBER() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ESTIMATE_NUMBER, Parameters.ESTIMATE_NUMBER)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property EST_COMPONENT_NBR() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.EST_COMPONENT_NBR, Parameters.EST_COMPONENT_NBR)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TASK_FNC_CODE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TASK_FNC_CODE, Parameters.TASK_FNC_CODE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TASK_FNC_DESC() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.TASK_FNC_DESC, Parameters.TASK_FNC_DESC)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CMP_IDENTIFIER() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.CMP_IDENTIFIER, Parameters.CMP_IDENTIFIER)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property GRP_CAMPAIGN() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.GRP_CAMPAIGN, Parameters.GRP_CAMPAIGN)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property


            Public ReadOnly Property GRP_PRIORITY() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.GRP_PRIORITY, Parameters.GRP_PRIORITY)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property GRP_DUE_DATE() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.GRP_DUE_DATE, Parameters.GRP_DUE_DATE)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property GRP_DUE_DATE_DISPLAY() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.GRP_DUE_DATE_DISPLAY, Parameters.GRP_DUE_DATE_DISPLAY)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property VER() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.VER, Parameters.VER)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property BUILD() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.BUILD, Parameters.BUILD)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property


            Public ReadOnly Property ALERT_SEQ_NBR() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_SEQ_NBR, Parameters.ALERT_SEQ_NBR)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property SENT() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.SENT, Parameters.SENT)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_NOTIFY_NAME() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ALERT_NOTIFY_NAME, Parameters.ALERT_NOTIFY_NAME)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property


            Private _clause As WhereClause
        End Class
#End Region

        Public ReadOnly Property ALERT_ID() As WhereParameter
            Get
                If _ALERT_ID_W Is Nothing Then
                    _ALERT_ID_W = TearOff.ALERT_ID
                End If
                Return _ALERT_ID_W
            End Get
        End Property

        Public ReadOnly Property ID() As WhereParameter
            Get
                If _ID_W Is Nothing Then
                    _ID_W = TearOff.ID
                End If
                Return _ID_W
            End Get
        End Property

        Public ReadOnly Property SUBJECT() As WhereParameter
            Get
                If _SUBJECT_W Is Nothing Then
                    _SUBJECT_W = TearOff.SUBJECT
                End If
                Return _SUBJECT_W
            End Get
        End Property

        Public ReadOnly Property GENERATED() As WhereParameter
            Get
                If _GENERATED_W Is Nothing Then
                    _GENERATED_W = TearOff.GENERATED
                End If
                Return _GENERATED_W
            End Get
        End Property

        Public ReadOnly Property PROCESSED() As WhereParameter
            Get
                If _PROCESSED_W Is Nothing Then
                    _PROCESSED_W = TearOff.PROCESSED
                End If
                Return _PROCESSED_W
            End Get
        End Property

        Public ReadOnly Property USER_NAME() As WhereParameter
            Get
                If _USER_NAME_W Is Nothing Then
                    _USER_NAME_W = TearOff.USER_NAME
                End If
                Return _USER_NAME_W
            End Get
        End Property

        Public ReadOnly Property EMP_CODE() As WhereParameter
            Get
                If _EMP_CODE_W Is Nothing Then
                    _EMP_CODE_W = TearOff.EMP_CODE
                End If
                Return _EMP_CODE_W
            End Get
        End Property

        Public ReadOnly Property PRIORITY() As WhereParameter
            Get
                If _PRIORITY_W Is Nothing Then
                    _PRIORITY_W = TearOff.PRIORITY
                End If
                Return _PRIORITY_W
            End Get
        End Property

        Public ReadOnly Property TYPE() As WhereParameter
            Get
                If _TYPE_W Is Nothing Then
                    _TYPE_W = TearOff.TYPE
                End If
                Return _TYPE_W
            End Get
        End Property

        Public ReadOnly Property CATEGORY() As WhereParameter
            Get
                If _CATEGORY_W Is Nothing Then
                    _CATEGORY_W = TearOff.CATEGORY
                End If
                Return _CATEGORY_W
            End Get
        End Property

        Public ReadOnly Property ALERT_TYPE_ID() As WhereParameter
            Get
                If _ALERT_TYPE_ID_W Is Nothing Then
                    _ALERT_TYPE_ID_W = TearOff.ALERT_TYPE_ID
                End If
                Return _ALERT_TYPE_ID_W
            End Get
        End Property

        Public ReadOnly Property ALERT_CAT_ID() As WhereParameter
            Get
                If _ALERT_CAT_ID_W Is Nothing Then
                    _ALERT_CAT_ID_W = TearOff.ALERT_CAT_ID
                End If
                Return _ALERT_CAT_ID_W
            End Get
        End Property

        Public ReadOnly Property ATTACHMENTCOUNT() As WhereParameter
            Get
                If _ATTACHMENTCOUNT_W Is Nothing Then
                    _ATTACHMENTCOUNT_W = TearOff.ATTACHMENTCOUNT
                End If
                Return _ATTACHMENTCOUNT_W
            End Get
        End Property

        Public ReadOnly Property ALERT_LEVEL() As WhereParameter
            Get
                If _ALERT_LEVEL_W Is Nothing Then
                    _ALERT_LEVEL_W = TearOff.ALERT_LEVEL
                End If
                Return _ALERT_LEVEL_W
            End Get
        End Property

        Public ReadOnly Property OFFICE_CODE() As WhereParameter
            Get
                If _OFFICE_CODE_W Is Nothing Then
                    _OFFICE_CODE_W = TearOff.OFFICE_CODE
                End If
                Return _OFFICE_CODE_W
            End Get
        End Property

        Public ReadOnly Property CL_CODE() As WhereParameter
            Get
                If _CL_CODE_W Is Nothing Then
                    _CL_CODE_W = TearOff.CL_CODE
                End If
                Return _CL_CODE_W
            End Get
        End Property

        Public ReadOnly Property DIV_CODE() As WhereParameter
            Get
                If _DIV_CODE_W Is Nothing Then
                    _DIV_CODE_W = TearOff.DIV_CODE
                End If
                Return _DIV_CODE_W
            End Get
        End Property

        Public ReadOnly Property PRD_CODE() As WhereParameter
            Get
                If _PRD_CODE_W Is Nothing Then
                    _PRD_CODE_W = TearOff.PRD_CODE
                End If
                Return _PRD_CODE_W
            End Get
        End Property

        Public ReadOnly Property CMP_CODE() As WhereParameter
            Get
                If _CMP_CODE_W Is Nothing Then
                    _CMP_CODE_W = TearOff.CMP_CODE
                End If
                Return _CMP_CODE_W
            End Get
        End Property

        Public ReadOnly Property JOB_NUMBER() As WhereParameter
            Get
                If _JOB_NUMBER_W Is Nothing Then
                    _JOB_NUMBER_W = TearOff.JOB_NUMBER
                End If
                Return _JOB_NUMBER_W
            End Get
        End Property

        Public ReadOnly Property JOB_COMPONENT_NBR() As WhereParameter
            Get
                If _JOB_COMPONENT_NBR_W Is Nothing Then
                    _JOB_COMPONENT_NBR_W = TearOff.JOB_COMPONENT_NBR
                End If
                Return _JOB_COMPONENT_NBR_W
            End Get
        End Property

        Public ReadOnly Property SENDER_EMP_CODE() As WhereParameter
            Get
                If _SENDER_EMP_CODE_W Is Nothing Then
                    _SENDER_EMP_CODE_W = TearOff.SENDER_EMP_CODE
                End If
                Return _SENDER_EMP_CODE_W
            End Get
        End Property

        Public ReadOnly Property DISMISSED_DATE() As WhereParameter
            Get
                If _DISMISSED_DATE_W Is Nothing Then
                    _DISMISSED_DATE_W = TearOff.DISMISSED_DATE
                End If
                Return _DISMISSED_DATE_W
            End Get
        End Property

        Public ReadOnly Property CL_NAME() As WhereParameter
            Get
                If _CL_NAME_W Is Nothing Then
                    _CL_NAME_W = TearOff.CL_NAME
                End If
                Return _CL_NAME_W
            End Get
        End Property

        Public ReadOnly Property DIV_NAME() As WhereParameter
            Get
                If _DIV_NAME_W Is Nothing Then
                    _DIV_NAME_W = TearOff.DIV_NAME
                End If
                Return _DIV_NAME_W
            End Get
        End Property

        Public ReadOnly Property PRD_DESCRIPTION() As WhereParameter
            Get
                If _PRD_DESCRIPTION_W Is Nothing Then
                    _PRD_DESCRIPTION_W = TearOff.PRD_DESCRIPTION
                End If
                Return _PRD_DESCRIPTION_W
            End Get
        End Property

        Public ReadOnly Property CMP_NAME() As WhereParameter
            Get
                If _CMP_NAME_W Is Nothing Then
                    _CMP_NAME_W = TearOff.CMP_NAME
                End If
                Return _CMP_NAME_W
            End Get
        End Property

        Public ReadOnly Property BODY() As WhereParameter
            Get
                If _BODY_W Is Nothing Then
                    _BODY_W = TearOff.BODY
                End If
                Return _BODY_W
            End Get
        End Property

        Public ReadOnly Property LOWER_SUBJECT() As WhereParameter
            Get
                If _LOWER_SUBJECT_W Is Nothing Then
                    _LOWER_SUBJECT_W = TearOff.LOWER_SUBJECT
                End If
                Return _LOWER_SUBJECT_W
            End Get
        End Property

        Public ReadOnly Property LOWER_BODY() As WhereParameter
            Get
                If _LOWER_BODY_W Is Nothing Then
                    _LOWER_BODY_W = TearOff.LOWER_BODY
                End If
                Return _LOWER_BODY_W
            End Get
        End Property

        Public ReadOnly Property OFFICE_NAME() As WhereParameter
            Get
                If _OFFICE_NAME_W Is Nothing Then
                    _OFFICE_NAME_W = TearOff.OFFICE_NAME
                End If
                Return _OFFICE_NAME_W
            End Get
        End Property

        Public ReadOnly Property JOB_DESC() As WhereParameter
            Get
                If _JOB_DESC_W Is Nothing Then
                    _JOB_DESC_W = TearOff.JOB_DESC
                End If
                Return _JOB_DESC_W
            End Get
        End Property

        Public ReadOnly Property JOB_COMP_DESC() As WhereParameter
            Get
                If _JOB_COMP_DESC_W Is Nothing Then
                    _JOB_COMP_DESC_W = TearOff.JOB_COMP_DESC
                End If
                Return _JOB_COMP_DESC_W
            End Get
        End Property

        Public ReadOnly Property ALERT_USER() As WhereParameter
            Get
                If _ALERT_USER_W Is Nothing Then
                    _ALERT_USER_W = TearOff.ALERT_USER
                End If
                Return _ALERT_USER_W
            End Get
        End Property

        Public ReadOnly Property CP_ALERT() As WhereParameter
            Get
                If _CP_ALERT_W Is Nothing Then
                    _CP_ALERT_W = TearOff.CP_ALERT
                End If
                Return _CP_ALERT_W
            End Get
        End Property

        Public ReadOnly Property NEW_ALERT() As WhereParameter
            Get
                If _NEW_ALERT_W Is Nothing Then
                    _NEW_ALERT_W = TearOff.NEW_ALERT
                End If
                Return _NEW_ALERT_W
            End Get
        End Property

        Public ReadOnly Property READ_ALERT() As WhereParameter
            Get
                If _READ_ALERT_W Is Nothing Then
                    _READ_ALERT_W = TearOff.READ_ALERT
                End If
                Return _READ_ALERT_W
            End Get
        End Property

        Public ReadOnly Property VN_CODE() As WhereParameter
            Get
                If _VN_CODE_W Is Nothing Then
                    _VN_CODE_W = TearOff.VN_CODE
                End If
                Return _VN_CODE_W
            End Get
        End Property

        Public ReadOnly Property VN_NAME() As WhereParameter
            Get
                If _VN_NAME_W Is Nothing Then
                    _VN_NAME_W = TearOff.VN_NAME
                End If
                Return _VN_NAME_W
            End Get
        End Property

        Public ReadOnly Property DUE_DATE() As WhereParameter
            Get
                If _DUE_DATE_W Is Nothing Then
                    _DUE_DATE_W = TearOff.DUE_DATE
                End If
                Return _DUE_DATE_W
            End Get
        End Property

        Public ReadOnly Property TIME_DUE() As WhereParameter
            Get
                If _TIME_DUE_W Is Nothing Then
                    _TIME_DUE_W = TearOff.TIME_DUE
                End If
                Return _TIME_DUE_W
            End Get
        End Property

        Public ReadOnly Property ALERT_STATE_ID() As WhereParameter
            Get
                If _ALERT_STATE_ID_W Is Nothing Then
                    _ALERT_STATE_ID_W = TearOff.ALERT_STATE_ID
                End If
                Return _ALERT_STATE_ID_W
            End Get
        End Property

        Public ReadOnly Property ALERT_STATE_NAME() As WhereParameter
            Get
                If _ALERT_STATE_NAME_W Is Nothing Then
                    _ALERT_STATE_NAME_W = TearOff.USER_NAME
                End If
                Return _ALERT_STATE_NAME_W
            End Get
        End Property



        Public ReadOnly Property CURRENT_NOTIFY_EMP_CODE() As WhereParameter
            Get
                If _CURRENT_NOTIFY_EMP_CODE_W Is Nothing Then
                    _CURRENT_NOTIFY_EMP_CODE_W = TearOff.CURRENT_NOTIFY_EMP_CODE
                End If
                Return _CURRENT_NOTIFY_EMP_CODE_W
            End Get
        End Property

        Public ReadOnly Property CURRENT_NOTIFY_EMP_FML() As WhereParameter
            Get
                If _CURRENT_NOTIFY_EMP_FML_W Is Nothing Then
                    _CURRENT_NOTIFY_EMP_FML_W = TearOff.CURRENT_NOTIFY_EMP_FML
                End If
                Return _CURRENT_NOTIFY_EMP_FML_W
            End Get
        End Property




        Public ReadOnly Property ESTIMATE_NUMBER() As WhereParameter
            Get
                If _ESTIMATE_NUMBER_W Is Nothing Then
                    _ESTIMATE_NUMBER_W = TearOff.ESTIMATE_NUMBER
                End If
                Return _ESTIMATE_NUMBER_W
            End Get
        End Property

        Public ReadOnly Property EST_COMPONENT_NBR() As WhereParameter
            Get
                If _EST_COMPONENT_NBR_W Is Nothing Then
                    _EST_COMPONENT_NBR_W = TearOff.EST_COMPONENT_NBR
                End If
                Return _EST_COMPONENT_NBR_W
            End Get
        End Property

        Public ReadOnly Property TASK_FNC_CODE() As WhereParameter
            Get
                If _TASK_FNC_CODE_W Is Nothing Then
                    _TASK_FNC_CODE_W = TearOff.TASK_FNC_CODE
                End If
                Return _TASK_FNC_CODE_W
            End Get
        End Property

        Public ReadOnly Property TASK_FNC_DESC() As WhereParameter
            Get
                If _TASK_FNC_DESC_W Is Nothing Then
                    _TASK_FNC_DESC_W = TearOff.TASK_FNC_DESC
                End If
                Return _TASK_FNC_DESC_W
            End Get
        End Property

        Public ReadOnly Property CMP_IDENTIFIER() As WhereParameter
            Get
                If _CMP_IDENTIFIER_W Is Nothing Then
                    _CMP_IDENTIFIER_W = TearOff.CMP_IDENTIFIER
                End If
                Return _CMP_IDENTIFIER_W
            End Get
        End Property

        Public ReadOnly Property GRP_CAMPAIGN() As WhereParameter
            Get
                If _GRP_CAMPAIGN_W Is Nothing Then
                    _GRP_CAMPAIGN_W = TearOff.GRP_CAMPAIGN
                End If
                Return _GRP_CAMPAIGN_W
            End Get
        End Property


        Public ReadOnly Property GRP_DUE_DATE() As WhereParameter
            Get
                If _GRP_DUE_DATE_W Is Nothing Then
                    _GRP_DUE_DATE_W = TearOff.GRP_DUE_DATE
                End If
                Return _GRP_DUE_DATE_W
            End Get
        End Property
        Public ReadOnly Property GRP_DUE_DATE_DISPLAY() As WhereParameter
            Get
                If _GRP_DUE_DATE_DISPLAY_W Is Nothing Then
                    _GRP_DUE_DATE_DISPLAY_W = TearOff.GRP_DUE_DATE_DISPLAY
                End If
                Return _GRP_DUE_DATE_DISPLAY_W
            End Get
        End Property
        Public ReadOnly Property GRP_PRIORITY() As WhereParameter
            Get
                If _GRP_PRIORITY_W Is Nothing Then
                    _GRP_PRIORITY_W = TearOff.GRP_PRIORITY
                End If
                Return _GRP_PRIORITY_W
            End Get
        End Property

        Public ReadOnly Property VER() As WhereParameter
            Get
                If _VER_W Is Nothing Then
                    _VER_W = TearOff.VER
                End If
                Return _VER_W
            End Get
        End Property

        Public ReadOnly Property BUILD() As WhereParameter
            Get
                If _BUILD_W Is Nothing Then
                    _BUILD_W = TearOff.BUILD
                End If
                Return _BUILD_W
            End Get
        End Property

        Public ReadOnly Property ALERT_SEQ_NBR() As WhereParameter
            Get
                If _ALERT_SEQ_NBR_W Is Nothing Then
                    _ALERT_SEQ_NBR_W = TearOff.ALERT_SEQ_NBR
                End If
                Return _ALERT_SEQ_NBR_W
            End Get
        End Property

        Public ReadOnly Property SENT() As WhereParameter
            Get
                If _SENT_W Is Nothing Then
                    _SENT_W = TearOff.SENT
                End If
                Return _SENT_W
            End Get
        End Property

        Public ReadOnly Property ALERT_NOTIFY_NAME() As WhereParameter
            Get
                If _ALERT_NOTIFY_NAME_W Is Nothing Then
                    _ALERT_NOTIFY_NAME_W = TearOff.ALERT_NOTIFY_NAME
                End If
                Return _ALERT_NOTIFY_NAME_W
            End Get
        End Property


        Private _SENT_W As WhereParameter = Nothing
        Private _ALERT_ID_W As WhereParameter = Nothing
        Private _ID_W As WhereParameter = Nothing
        Private _SUBJECT_W As WhereParameter = Nothing
        Private _GENERATED_W As WhereParameter = Nothing
        Private _PROCESSED_W As WhereParameter = Nothing
        Private _USER_NAME_W As WhereParameter = Nothing
        Private _EMP_CODE_W As WhereParameter = Nothing
        Private _PRIORITY_W As WhereParameter = Nothing
        Private _TYPE_W As WhereParameter = Nothing
        Private _CATEGORY_W As WhereParameter = Nothing
        Private _ALERT_TYPE_ID_W As WhereParameter = Nothing
        Private _ALERT_CAT_ID_W As WhereParameter = Nothing
        Private _ATTACHMENTCOUNT_W As WhereParameter = Nothing
        Private _ALERT_LEVEL_W As WhereParameter = Nothing
        Private _OFFICE_CODE_W As WhereParameter = Nothing
        Private _CL_CODE_W As WhereParameter = Nothing
        Private _DIV_CODE_W As WhereParameter = Nothing
        Private _PRD_CODE_W As WhereParameter = Nothing
        Private _CMP_CODE_W As WhereParameter = Nothing
        Private _JOB_NUMBER_W As WhereParameter = Nothing
        Private _JOB_COMPONENT_NBR_W As WhereParameter = Nothing
        Private _SENDER_EMP_CODE_W As WhereParameter = Nothing
        Private _DISMISSED_DATE_W As WhereParameter = Nothing
        Private _CL_NAME_W As WhereParameter = Nothing
        Private _DIV_NAME_W As WhereParameter = Nothing
        Private _PRD_DESCRIPTION_W As WhereParameter = Nothing
        Private _CMP_NAME_W As WhereParameter = Nothing
        Private _BODY_W As WhereParameter = Nothing
        Private _LOWER_SUBJECT_W As WhereParameter = Nothing
        Private _LOWER_BODY_W As WhereParameter = Nothing
        Private _OFFICE_NAME_W As WhereParameter = Nothing
        Private _JOB_DESC_W As WhereParameter = Nothing
        Private _JOB_COMP_DESC_W As WhereParameter = Nothing
        Private _ALERT_USER_W As WhereParameter = Nothing
        Private _CP_ALERT_W As WhereParameter = Nothing
        Private _NEW_ALERT_W As WhereParameter = Nothing
        Private _READ_ALERT_W As WhereParameter = Nothing
        Private _VN_CODE_W As WhereParameter = Nothing
        Private _VN_NAME_W As WhereParameter = Nothing
        Private _DUE_DATE_W As WhereParameter = Nothing
        Private _TIME_DUE_W As WhereParameter = Nothing
        Private _ALERT_STATE_ID_W As WhereParameter = Nothing
        Private _ALERT_STATE_NAME_W As WhereParameter = Nothing

        Private _CURRENT_NOTIFY_EMP_CODE_W As WhereParameter = Nothing
        Private _CURRENT_NOTIFY_EMP_FML_W As WhereParameter = Nothing

        Private _ESTIMATE_NUMBER_W As WhereParameter = Nothing
        Private _EST_COMPONENT_NBR_W As WhereParameter = Nothing
        Private _TASK_FNC_CODE_W As WhereParameter = Nothing
        Private _TASK_FNC_DESC_W As WhereParameter = Nothing

        Private _CMP_IDENTIFIER_W As WhereParameter = Nothing
        Private _GRP_CAMPAIGN_W As WhereParameter = Nothing

        Private _VER_W As WhereParameter = Nothing
        Private _BUILD_W As WhereParameter = Nothing
        Private _ALERT_SEQ_NBR_W As WhereParameter = Nothing

        Private _GRP_DUE_DATE_W As WhereParameter = Nothing
        Private _GRP_PRIORITY_W As WhereParameter = Nothing
        Private _GRP_DUE_DATE_DISPLAY_W As WhereParameter = Nothing
        Private _ALERT_NOTIFY_NAME_W As WhereParameter = Nothing
        Public Sub WhereClauseReset()

            _ALERT_ID_W = Nothing
            _ID_W = Nothing
            _SUBJECT_W = Nothing
            _GENERATED_W = Nothing
            _PROCESSED_W = Nothing
            _USER_NAME_W = Nothing
            _EMP_CODE_W = Nothing
            _PRIORITY_W = Nothing
            _TYPE_W = Nothing
            _CATEGORY_W = Nothing
            _ALERT_TYPE_ID_W = Nothing
            _ALERT_CAT_ID_W = Nothing
            _ATTACHMENTCOUNT_W = Nothing
            _ALERT_LEVEL_W = Nothing
            _OFFICE_CODE_W = Nothing
            _CL_CODE_W = Nothing
            _DIV_CODE_W = Nothing
            _PRD_CODE_W = Nothing
            _CMP_CODE_W = Nothing
            _JOB_NUMBER_W = Nothing
            _JOB_COMPONENT_NBR_W = Nothing
            _SENDER_EMP_CODE_W = Nothing
            _DISMISSED_DATE_W = Nothing
            _CL_NAME_W = Nothing
            _DIV_NAME_W = Nothing
            _PRD_DESCRIPTION_W = Nothing
            _CMP_NAME_W = Nothing
            _BODY_W = Nothing
            _LOWER_SUBJECT_W = Nothing
            _LOWER_BODY_W = Nothing
            _OFFICE_NAME_W = Nothing
            _JOB_DESC_W = Nothing
            _JOB_COMP_DESC_W = Nothing
            _ALERT_USER_W = Nothing
            _CP_ALERT_W = Nothing
            _NEW_ALERT_W = Nothing
            _READ_ALERT_W = Nothing
            _VN_CODE_W = Nothing
            _VN_NAME_W = Nothing
            _DUE_DATE_W = Nothing
            _TIME_DUE_W = Nothing
            _ALERT_STATE_ID_W = Nothing
            _ALERT_STATE_NAME_W = Nothing

            _CURRENT_NOTIFY_EMP_CODE_W = Nothing
            _CURRENT_NOTIFY_EMP_FML_W = Nothing

            _ESTIMATE_NUMBER_W = Nothing
            _EST_COMPONENT_NBR_W = Nothing
            _TASK_FNC_CODE_W = Nothing
            _TASK_FNC_DESC_W = Nothing

            _CMP_IDENTIFIER_W = Nothing
            _GRP_CAMPAIGN_W = Nothing

            _VER_W = Nothing
            _BUILD_W = Nothing
            _ALERT_SEQ_NBR_W = Nothing
            _GRP_PRIORITY_W = Nothing

            _GRP_DUE_DATE_W = Nothing

            _GRP_DUE_DATE_DISPLAY_W = Nothing
            _SENT_W = Nothing
            _ALERT_NOTIFY_NAME_W = Nothing
            Me._entity.Query.FlushWhereParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffWhereParameter
    End Class

    Public ReadOnly Property Where() As WhereClause
        Get
            If _whereClause Is Nothing Then
                _whereClause = New WhereClause(Me)
            End If

            Return _whereClause
        End Get
    End Property

    Private _whereClause As WhereClause = Nothing
#End Region

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub

        Public ReadOnly Property TearOff() As TearOffAggregateParameter
            Get
                If _tearOff Is Nothing Then
                    _tearOff = New TearOffAggregateParameter(Me)
                End If

                Return _tearOff
            End Get
        End Property

#Region "AggregateParameter TearOff's"
        Public Class TearOffAggregateParameter

            Public Sub New(ByVal clause As AggregateClause)
                Me._clause = clause
            End Sub


            Public ReadOnly Property ALERT_ID() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_ID, Parameters.ALERT_ID)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ID() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ID, Parameters.ID)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property SUBJECT() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.SUBJECT, Parameters.SUBJECT)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property GENERATED() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GENERATED, Parameters.GENERATED)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PROCESSED() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PROCESSED, Parameters.PROCESSED)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property USER_NAME() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.USER_NAME, Parameters.USER_NAME)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property EMP_CODE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.EMP_CODE, Parameters.EMP_CODE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PRIORITY() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PRIORITY, Parameters.PRIORITY)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TYPE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TYPE, Parameters.TYPE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CATEGORY() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CATEGORY, Parameters.CATEGORY)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_TYPE_ID() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_TYPE_ID, Parameters.ALERT_TYPE_ID)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_CAT_ID() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_CAT_ID, Parameters.ALERT_CAT_ID)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ATTACHMENTCOUNT() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ATTACHMENTCOUNT, Parameters.ATTACHMENTCOUNT)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_LEVEL() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_LEVEL, Parameters.ALERT_LEVEL)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property OFFICE_CODE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.OFFICE_CODE, Parameters.OFFICE_CODE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CL_CODE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CL_CODE, Parameters.CL_CODE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DIV_CODE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_CODE, Parameters.DIV_CODE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PRD_CODE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PRD_CODE, Parameters.PRD_CODE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CMP_CODE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CMP_CODE, Parameters.CMP_CODE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_NUMBER() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_NUMBER, Parameters.JOB_NUMBER)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_COMPONENT_NBR() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_COMPONENT_NBR, Parameters.JOB_COMPONENT_NBR)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property SENDER_EMP_CODE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.SENDER_EMP_CODE, Parameters.SENDER_EMP_CODE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DISMISSED_DATE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DISMISSED_DATE, Parameters.DISMISSED_DATE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CL_NAME() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CL_NAME, Parameters.CL_NAME)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DIV_NAME() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DIV_NAME, Parameters.DIV_NAME)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property PRD_DESCRIPTION() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.PRD_DESCRIPTION, Parameters.PRD_DESCRIPTION)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CMP_NAME() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CMP_NAME, Parameters.CMP_NAME)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property BODY() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.BODY, Parameters.BODY)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property LOWER_SUBJECT() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.LOWER_SUBJECT, Parameters.LOWER_SUBJECT)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property LOWER_BODY() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.LOWER_BODY, Parameters.LOWER_BODY)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property OFFICE_NAME() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.OFFICE_NAME, Parameters.OFFICE_NAME)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_DESC() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_DESC, Parameters.JOB_DESC)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property JOB_COMP_DESC() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.JOB_COMP_DESC, Parameters.JOB_COMP_DESC)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_USER() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_USER, Parameters.ALERT_USER)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CP_ALERT() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CP_ALERT, Parameters.CP_ALERT)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property NEW_ALERT() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.NEW_ALERT, Parameters.NEW_ALERT)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property READ_ALERT() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.READ_ALERT, Parameters.READ_ALERT)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property VN_CODE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.VN_CODE, Parameters.VN_CODE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property VN_NAME() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.VN_NAME, Parameters.VN_NAME)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property DUE_DATE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.DUE_DATE, Parameters.DUE_DATE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TIME_DUE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TIME_DUE, Parameters.TIME_DUE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_STATE_ID() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_STATE_ID, Parameters.ALERT_STATE_ID)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_STATE_NAME() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_STATE_NAME, Parameters.ALERT_STATE_NAME)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property




            Public ReadOnly Property CURRENT_NOTIFY_EMP_CODE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CURRENT_NOTIFY_EMP_CODE, Parameters.CURRENT_NOTIFY_EMP_CODE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CURRENT_NOTIFY_EMP_FML() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CURRENT_NOTIFY_EMP_FML, Parameters.CURRENT_NOTIFY_EMP_FML)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property


            Public ReadOnly Property ESTIMATE_NUMBER() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ESTIMATE_NUMBER, Parameters.ESTIMATE_NUMBER)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property EST_COMPONENT_NBR() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.EST_COMPONENT_NBR, Parameters.EST_COMPONENT_NBR)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TASK_FNC_CODE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TASK_FNC_CODE, Parameters.TASK_FNC_CODE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property TASK_FNC_DESC() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.TASK_FNC_DESC, Parameters.TASK_FNC_DESC)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property CMP_IDENTIFIER() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.CMP_IDENTIFIER, Parameters.CMP_IDENTIFIER)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property GRP_CAMPAIGN() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GRP_CAMPAIGN, Parameters.GRP_CAMPAIGN)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property GRP_PRIORITY() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GRP_PRIORITY, Parameters.GRP_PRIORITY)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property GRP_DUE_DATE() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GRP_DUE_DATE, Parameters.GRP_DUE_DATE)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property GRP_DUE_DATE_DISPLAY() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.GRP_DUE_DATE_DISPLAY, Parameters.GRP_DUE_DATE_DISPLAY)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property
            Public ReadOnly Property VER() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.VER, Parameters.VER)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property BUILD() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.BUILD, Parameters.BUILD)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_SEQ_NBR() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_SEQ_NBR, Parameters.ALERT_SEQ_NBR)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property SENT() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.SENT, Parameters.SENT)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ALERT_NOTIFY_NAME() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ALERT_NOTIFY_NAME, Parameters.ALERT_NOTIFY_NAME)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Private _clause As AggregateClause
        End Class
#End Region

        Public ReadOnly Property ALERT_ID() As AggregateParameter
            Get
                If _ALERT_ID_W Is Nothing Then
                    _ALERT_ID_W = TearOff.ALERT_ID
                End If
                Return _ALERT_ID_W
            End Get
        End Property

        Public ReadOnly Property ID() As AggregateParameter
            Get
                If _ID_W Is Nothing Then
                    _ID_W = TearOff.ID
                End If
                Return _ID_W
            End Get
        End Property

        Public ReadOnly Property SUBJECT() As AggregateParameter
            Get
                If _SUBJECT_W Is Nothing Then
                    _SUBJECT_W = TearOff.SUBJECT
                End If
                Return _SUBJECT_W
            End Get
        End Property

        Public ReadOnly Property GENERATED() As AggregateParameter
            Get
                If _GENERATED_W Is Nothing Then
                    _GENERATED_W = TearOff.GENERATED
                End If
                Return _GENERATED_W
            End Get
        End Property

        Public ReadOnly Property PROCESSED() As AggregateParameter
            Get
                If _PROCESSED_W Is Nothing Then
                    _PROCESSED_W = TearOff.PROCESSED
                End If
                Return _PROCESSED_W
            End Get
        End Property

        Public ReadOnly Property USER_NAME() As AggregateParameter
            Get
                If _USER_NAME_W Is Nothing Then
                    _USER_NAME_W = TearOff.USER_NAME
                End If
                Return _USER_NAME_W
            End Get
        End Property

        Public ReadOnly Property EMP_CODE() As AggregateParameter
            Get
                If _EMP_CODE_W Is Nothing Then
                    _EMP_CODE_W = TearOff.EMP_CODE
                End If
                Return _EMP_CODE_W
            End Get
        End Property

        Public ReadOnly Property PRIORITY() As AggregateParameter
            Get
                If _PRIORITY_W Is Nothing Then
                    _PRIORITY_W = TearOff.PRIORITY
                End If
                Return _PRIORITY_W
            End Get
        End Property

        Public ReadOnly Property TYPE() As AggregateParameter
            Get
                If _TYPE_W Is Nothing Then
                    _TYPE_W = TearOff.TYPE
                End If
                Return _TYPE_W
            End Get
        End Property

        Public ReadOnly Property CATEGORY() As AggregateParameter
            Get
                If _CATEGORY_W Is Nothing Then
                    _CATEGORY_W = TearOff.CATEGORY
                End If
                Return _CATEGORY_W
            End Get
        End Property

        Public ReadOnly Property ALERT_TYPE_ID() As AggregateParameter
            Get
                If _ALERT_TYPE_ID_W Is Nothing Then
                    _ALERT_TYPE_ID_W = TearOff.ALERT_TYPE_ID
                End If
                Return _ALERT_TYPE_ID_W
            End Get
        End Property

        Public ReadOnly Property ALERT_CAT_ID() As AggregateParameter
            Get
                If _ALERT_CAT_ID_W Is Nothing Then
                    _ALERT_CAT_ID_W = TearOff.ALERT_CAT_ID
                End If
                Return _ALERT_CAT_ID_W
            End Get
        End Property

        Public ReadOnly Property ATTACHMENTCOUNT() As AggregateParameter
            Get
                If _ATTACHMENTCOUNT_W Is Nothing Then
                    _ATTACHMENTCOUNT_W = TearOff.ATTACHMENTCOUNT
                End If
                Return _ATTACHMENTCOUNT_W
            End Get
        End Property

        Public ReadOnly Property ALERT_LEVEL() As AggregateParameter
            Get
                If _ALERT_LEVEL_W Is Nothing Then
                    _ALERT_LEVEL_W = TearOff.ALERT_LEVEL
                End If
                Return _ALERT_LEVEL_W
            End Get
        End Property

        Public ReadOnly Property OFFICE_CODE() As AggregateParameter
            Get
                If _OFFICE_CODE_W Is Nothing Then
                    _OFFICE_CODE_W = TearOff.OFFICE_CODE
                End If
                Return _OFFICE_CODE_W
            End Get
        End Property

        Public ReadOnly Property CL_CODE() As AggregateParameter
            Get
                If _CL_CODE_W Is Nothing Then
                    _CL_CODE_W = TearOff.CL_CODE
                End If
                Return _CL_CODE_W
            End Get
        End Property

        Public ReadOnly Property DIV_CODE() As AggregateParameter
            Get
                If _DIV_CODE_W Is Nothing Then
                    _DIV_CODE_W = TearOff.DIV_CODE
                End If
                Return _DIV_CODE_W
            End Get
        End Property

        Public ReadOnly Property PRD_CODE() As AggregateParameter
            Get
                If _PRD_CODE_W Is Nothing Then
                    _PRD_CODE_W = TearOff.PRD_CODE
                End If
                Return _PRD_CODE_W
            End Get
        End Property

        Public ReadOnly Property CMP_CODE() As AggregateParameter
            Get
                If _CMP_CODE_W Is Nothing Then
                    _CMP_CODE_W = TearOff.CMP_CODE
                End If
                Return _CMP_CODE_W
            End Get
        End Property

        Public ReadOnly Property JOB_NUMBER() As AggregateParameter
            Get
                If _JOB_NUMBER_W Is Nothing Then
                    _JOB_NUMBER_W = TearOff.JOB_NUMBER
                End If
                Return _JOB_NUMBER_W
            End Get
        End Property

        Public ReadOnly Property JOB_COMPONENT_NBR() As AggregateParameter
            Get
                If _JOB_COMPONENT_NBR_W Is Nothing Then
                    _JOB_COMPONENT_NBR_W = TearOff.JOB_COMPONENT_NBR
                End If
                Return _JOB_COMPONENT_NBR_W
            End Get
        End Property

        Public ReadOnly Property SENDER_EMP_CODE() As AggregateParameter
            Get
                If _SENDER_EMP_CODE_W Is Nothing Then
                    _SENDER_EMP_CODE_W = TearOff.SENDER_EMP_CODE
                End If
                Return _SENDER_EMP_CODE_W
            End Get
        End Property

        Public ReadOnly Property DISMISSED_DATE() As AggregateParameter
            Get
                If _DISMISSED_DATE_W Is Nothing Then
                    _DISMISSED_DATE_W = TearOff.DISMISSED_DATE
                End If
                Return _DISMISSED_DATE_W
            End Get
        End Property

        Public ReadOnly Property CL_NAME() As AggregateParameter
            Get
                If _CL_NAME_W Is Nothing Then
                    _CL_NAME_W = TearOff.CL_NAME
                End If
                Return _CL_NAME_W
            End Get
        End Property

        Public ReadOnly Property DIV_NAME() As AggregateParameter
            Get
                If _DIV_NAME_W Is Nothing Then
                    _DIV_NAME_W = TearOff.DIV_NAME
                End If
                Return _DIV_NAME_W
            End Get
        End Property

        Public ReadOnly Property PRD_DESCRIPTION() As AggregateParameter
            Get
                If _PRD_DESCRIPTION_W Is Nothing Then
                    _PRD_DESCRIPTION_W = TearOff.PRD_DESCRIPTION
                End If
                Return _PRD_DESCRIPTION_W
            End Get
        End Property

        Public ReadOnly Property CMP_NAME() As AggregateParameter
            Get
                If _CMP_NAME_W Is Nothing Then
                    _CMP_NAME_W = TearOff.CMP_NAME
                End If
                Return _CMP_NAME_W
            End Get
        End Property

        Public ReadOnly Property BODY() As AggregateParameter
            Get
                If _BODY_W Is Nothing Then
                    _BODY_W = TearOff.BODY
                End If
                Return _BODY_W
            End Get
        End Property

        Public ReadOnly Property LOWER_SUBJECT() As AggregateParameter
            Get
                If _LOWER_SUBJECT_W Is Nothing Then
                    _LOWER_SUBJECT_W = TearOff.LOWER_SUBJECT
                End If
                Return _LOWER_SUBJECT_W
            End Get
        End Property

        Public ReadOnly Property LOWER_BODY() As AggregateParameter
            Get
                If _LOWER_BODY_W Is Nothing Then
                    _LOWER_BODY_W = TearOff.LOWER_BODY
                End If
                Return _LOWER_BODY_W
            End Get
        End Property

        Public ReadOnly Property OFFICE_NAME() As AggregateParameter
            Get
                If _OFFICE_NAME_W Is Nothing Then
                    _OFFICE_NAME_W = TearOff.OFFICE_NAME
                End If
                Return _OFFICE_NAME_W
            End Get
        End Property

        Public ReadOnly Property JOB_DESC() As AggregateParameter
            Get
                If _JOB_DESC_W Is Nothing Then
                    _JOB_DESC_W = TearOff.JOB_DESC
                End If
                Return _JOB_DESC_W
            End Get
        End Property

        Public ReadOnly Property JOB_COMP_DESC() As AggregateParameter
            Get
                If _JOB_COMP_DESC_W Is Nothing Then
                    _JOB_COMP_DESC_W = TearOff.JOB_COMP_DESC
                End If
                Return _JOB_COMP_DESC_W
            End Get
        End Property

        Public ReadOnly Property ALERT_USER() As AggregateParameter
            Get
                If _ALERT_USER_W Is Nothing Then
                    _ALERT_USER_W = TearOff.ALERT_USER
                End If
                Return _ALERT_USER_W
            End Get
        End Property

        Public ReadOnly Property CP_ALERT() As AggregateParameter
            Get
                If _CP_ALERT_W Is Nothing Then
                    _CP_ALERT_W = TearOff.CP_ALERT
                End If
                Return _CP_ALERT_W
            End Get
        End Property

        Public ReadOnly Property NEW_ALERT() As AggregateParameter
            Get
                If _NEW_ALERT_W Is Nothing Then
                    _NEW_ALERT_W = TearOff.NEW_ALERT
                End If
                Return _NEW_ALERT_W
            End Get
        End Property

        Public ReadOnly Property READ_ALERT() As AggregateParameter
            Get
                If _READ_ALERT_W Is Nothing Then
                    _READ_ALERT_W = TearOff.READ_ALERT
                End If
                Return _READ_ALERT_W
            End Get
        End Property

        Public ReadOnly Property VN_CODE() As AggregateParameter
            Get
                If _VN_CODE_W Is Nothing Then
                    _VN_CODE_W = TearOff.VN_CODE
                End If
                Return _VN_CODE_W
            End Get
        End Property

        Public ReadOnly Property VN_NAME() As AggregateParameter
            Get
                If _VN_NAME_W Is Nothing Then
                    _VN_NAME_W = TearOff.VN_NAME
                End If
                Return _VN_NAME_W
            End Get
        End Property

        Public ReadOnly Property DUE_DATE() As AggregateParameter
            Get
                If _DUE_DATE_W Is Nothing Then
                    _DUE_DATE_W = TearOff.DUE_DATE
                End If
                Return _DUE_DATE_W
            End Get
        End Property

        Public ReadOnly Property TIME_DUE() As AggregateParameter
            Get
                If _TIME_DUE_W Is Nothing Then
                    _TIME_DUE_W = TearOff.TIME_DUE
                End If
                Return _TIME_DUE_W
            End Get
        End Property

        Public ReadOnly Property ALERT_STATE_ID() As AggregateParameter
            Get
                If _ALERT_STATE_ID_W Is Nothing Then
                    _ALERT_STATE_ID_W = TearOff.ALERT_STATE_ID
                End If
                Return _ALERT_STATE_ID_W
            End Get
        End Property

        Public ReadOnly Property ALERT_STATE_NAME() As AggregateParameter
            Get
                If _ALERT_STATE_NAME_W Is Nothing Then
                    _ALERT_STATE_NAME_W = TearOff.ALERT_STATE_NAME
                End If
                Return _ALERT_STATE_NAME_W
            End Get
        End Property


        Public ReadOnly Property CURRENT_NOTIFY_EMP_CODE() As AggregateParameter
            Get
                If _CURRENT_NOTIFY_EMP_CODE_W Is Nothing Then
                    _CURRENT_NOTIFY_EMP_CODE_W = TearOff.CURRENT_NOTIFY_EMP_CODE
                End If
                Return _CURRENT_NOTIFY_EMP_CODE_W
            End Get
        End Property

        Public ReadOnly Property CURRENT_NOTIFY_EMP_FML() As AggregateParameter
            Get
                If _CURRENT_NOTIFY_EMP_FML_W Is Nothing Then
                    _CURRENT_NOTIFY_EMP_FML_W = TearOff.CURRENT_NOTIFY_EMP_FML
                End If
                Return _CURRENT_NOTIFY_EMP_FML_W
            End Get
        End Property



        Public ReadOnly Property ESTIMATE_NUMBER() As AggregateParameter
            Get
                If _ESTIMATE_NUMBER_W Is Nothing Then
                    _ESTIMATE_NUMBER_W = TearOff.ESTIMATE_NUMBER
                End If
                Return _ESTIMATE_NUMBER_W
            End Get
        End Property

        Public ReadOnly Property EST_COMPONENT_NBR() As AggregateParameter
            Get
                If _EST_COMPONENT_NBR_W Is Nothing Then
                    _EST_COMPONENT_NBR_W = TearOff.EST_COMPONENT_NBR
                End If
                Return _EST_COMPONENT_NBR_W
            End Get
        End Property

        Public ReadOnly Property TASK_FNC_CODE() As AggregateParameter
            Get
                If _TASK_FNC_CODE_W Is Nothing Then
                    _TASK_FNC_CODE_W = TearOff.TASK_FNC_CODE
                End If
                Return _TASK_FNC_CODE_W
            End Get
        End Property

        Public ReadOnly Property TASK_FNC_DESC() As AggregateParameter
            Get
                If _TASK_FNC_DESC_W Is Nothing Then
                    _TASK_FNC_DESC_W = TearOff.TASK_FNC_DESC
                End If
                Return _TASK_FNC_DESC_W
            End Get
        End Property

        Public ReadOnly Property CMP_IDENTIFIER() As AggregateParameter
            Get
                If _CMP_IDENTIFIER_W Is Nothing Then
                    _CMP_IDENTIFIER_W = TearOff.CMP_IDENTIFIER
                End If
                Return _CMP_IDENTIFIER_W
            End Get
        End Property

        Public ReadOnly Property GRP_CAMPAIGN() As AggregateParameter
            Get
                If _GRP_CAMPAIGN_W Is Nothing Then
                    _GRP_CAMPAIGN_W = TearOff.GRP_CAMPAIGN
                End If
                Return _GRP_CAMPAIGN_W
            End Get
        End Property
        Public ReadOnly Property GRP_PRIORITY() As AggregateParameter
            Get
                If _GRP_PRIORITY_W Is Nothing Then
                    _GRP_PRIORITY_W = TearOff.GRP_PRIORITY
                End If
                Return _GRP_PRIORITY_W
            End Get
        End Property

        Public ReadOnly Property GRP_DUE_DATE() As AggregateParameter
            Get
                If _GRP_DUE_DATE_W Is Nothing Then
                    _GRP_DUE_DATE_W = TearOff.GRP_DUE_DATE
                End If
                Return _GRP_DUE_DATE_W
            End Get
        End Property

        Public ReadOnly Property GRP_DUE_DATE_DISPLAY() As AggregateParameter
            Get
                If _GRP_DUE_DATE_DISPLAY_W Is Nothing Then
                    _GRP_DUE_DATE_DISPLAY_W = TearOff.GRP_DUE_DATE_DISPLAY
                End If
                Return _GRP_DUE_DATE_DISPLAY_W
            End Get
        End Property
        Public ReadOnly Property VER() As AggregateParameter
            Get
                If _VER_W Is Nothing Then
                    _VER_W = TearOff.VER
                End If
                Return _VER_W
            End Get
        End Property

        Public ReadOnly Property BUILD() As AggregateParameter
            Get
                If _BUILD_W Is Nothing Then
                    _BUILD_W = TearOff.BUILD
                End If
                Return _BUILD_W
            End Get
        End Property

        Public ReadOnly Property ALERT_SEQ_NBR() As AggregateParameter
            Get
                If _ALERT_SEQ_NBR_W Is Nothing Then
                    _ALERT_SEQ_NBR_W = TearOff.ALERT_SEQ_NBR
                End If
                Return _ALERT_SEQ_NBR_W
            End Get
        End Property

        Public ReadOnly Property SENT() As AggregateParameter
            Get
                If _SENT_W Is Nothing Then
                    _SENT_W = TearOff.SENT
                End If
                Return _SENT_W
            End Get
        End Property

        Public ReadOnly Property ALERT_NOTIFY_NAME() As AggregateParameter
            Get
                If _ALERT_NOTIFY_NAME_W Is Nothing Then
                    _ALERT_NOTIFY_NAME_W = TearOff.SENT
                End If
                Return _ALERT_NOTIFY_NAME_W
            End Get
        End Property


        Private _SENT_W As AggregateParameter = Nothing
        Private _ALERT_ID_W As AggregateParameter = Nothing
        Private _ID_W As AggregateParameter = Nothing
        Private _SUBJECT_W As AggregateParameter = Nothing
        Private _GENERATED_W As AggregateParameter = Nothing
        Private _PROCESSED_W As AggregateParameter = Nothing
        Private _USER_NAME_W As AggregateParameter = Nothing
        Private _EMP_CODE_W As AggregateParameter = Nothing
        Private _PRIORITY_W As AggregateParameter = Nothing
        Private _TYPE_W As AggregateParameter = Nothing
        Private _CATEGORY_W As AggregateParameter = Nothing
        Private _ALERT_TYPE_ID_W As AggregateParameter = Nothing
        Private _ALERT_CAT_ID_W As AggregateParameter = Nothing
        Private _ATTACHMENTCOUNT_W As AggregateParameter = Nothing
        Private _ALERT_LEVEL_W As AggregateParameter = Nothing
        Private _OFFICE_CODE_W As AggregateParameter = Nothing
        Private _CL_CODE_W As AggregateParameter = Nothing
        Private _DIV_CODE_W As AggregateParameter = Nothing
        Private _PRD_CODE_W As AggregateParameter = Nothing
        Private _CMP_CODE_W As AggregateParameter = Nothing
        Private _JOB_NUMBER_W As AggregateParameter = Nothing
        Private _JOB_COMPONENT_NBR_W As AggregateParameter = Nothing
        Private _SENDER_EMP_CODE_W As AggregateParameter = Nothing
        Private _DISMISSED_DATE_W As AggregateParameter = Nothing
        Private _CL_NAME_W As AggregateParameter = Nothing
        Private _DIV_NAME_W As AggregateParameter = Nothing
        Private _PRD_DESCRIPTION_W As AggregateParameter = Nothing
        Private _CMP_NAME_W As AggregateParameter = Nothing
        Private _BODY_W As AggregateParameter = Nothing
        Private _LOWER_SUBJECT_W As AggregateParameter = Nothing
        Private _LOWER_BODY_W As AggregateParameter = Nothing
        Private _OFFICE_NAME_W As AggregateParameter = Nothing
        Private _JOB_DESC_W As AggregateParameter = Nothing
        Private _JOB_COMP_DESC_W As AggregateParameter = Nothing
        Private _ALERT_USER_W As AggregateParameter = Nothing
        Private _CP_ALERT_W As AggregateParameter = Nothing
        Private _NEW_ALERT_W As AggregateParameter = Nothing
        Private _READ_ALERT_W As AggregateParameter = Nothing
        Private _VN_CODE_W As AggregateParameter = Nothing
        Private _VN_NAME_W As AggregateParameter = Nothing
        Private _DUE_DATE_W As AggregateParameter = Nothing
        Private _TIME_DUE_W As AggregateParameter = Nothing
        Private _ALERT_STATE_ID_W As AggregateParameter = Nothing
        Private _ALERT_STATE_NAME_W As AggregateParameter = Nothing

        Private _CURRENT_NOTIFY_EMP_CODE_W As AggregateParameter = Nothing
        Private _CURRENT_NOTIFY_EMP_FML_W As AggregateParameter = Nothing

        Private _ESTIMATE_NUMBER_W As AggregateParameter = Nothing
        Private _EST_COMPONENT_NBR_W As AggregateParameter = Nothing
        Private _TASK_FNC_CODE_W As AggregateParameter = Nothing
        Private _TASK_FNC_DESC_W As AggregateParameter = Nothing

        Private _CMP_IDENTIFIER_W As AggregateParameter = Nothing
        Private _GRP_CAMPAIGN_W As AggregateParameter = Nothing

        Private _VER_W As AggregateParameter = Nothing
        Private _BUILD_W As AggregateParameter = Nothing
        Private _ALERT_SEQ_NBR_W As AggregateParameter = Nothing

        Private _GRP_PRIORITY_W As AggregateParameter = Nothing
        Private _GRP_DUE_DATE_W As AggregateParameter = Nothing
        Private _GRP_DUE_DATE_DISPLAY_W As AggregateParameter = Nothing
        Private _ALERT_NOTIFY_NAME_W As AggregateParameter = Nothing

        Public Sub AggregateClauseReset()

            _ALERT_ID_W = Nothing
            _ID_W = Nothing
            _SUBJECT_W = Nothing
            _GENERATED_W = Nothing
            _PROCESSED_W = Nothing
            _USER_NAME_W = Nothing
            _EMP_CODE_W = Nothing
            _PRIORITY_W = Nothing
            _TYPE_W = Nothing
            _CATEGORY_W = Nothing
            _ALERT_TYPE_ID_W = Nothing
            _ALERT_CAT_ID_W = Nothing
            _ATTACHMENTCOUNT_W = Nothing
            _ALERT_LEVEL_W = Nothing
            _OFFICE_CODE_W = Nothing
            _CL_CODE_W = Nothing
            _DIV_CODE_W = Nothing
            _PRD_CODE_W = Nothing
            _CMP_CODE_W = Nothing
            _JOB_NUMBER_W = Nothing
            _JOB_COMPONENT_NBR_W = Nothing
            _SENDER_EMP_CODE_W = Nothing
            _DISMISSED_DATE_W = Nothing
            _CL_NAME_W = Nothing
            _DIV_NAME_W = Nothing
            _PRD_DESCRIPTION_W = Nothing
            _CMP_NAME_W = Nothing
            _BODY_W = Nothing
            _LOWER_SUBJECT_W = Nothing
            _LOWER_BODY_W = Nothing
            _OFFICE_NAME_W = Nothing
            _JOB_DESC_W = Nothing
            _JOB_COMP_DESC_W = Nothing
            _ALERT_USER_W = Nothing
            _CP_ALERT_W = Nothing
            _NEW_ALERT_W = Nothing
            _READ_ALERT_W = Nothing
            _VN_CODE_W = Nothing
            _VN_NAME_W = Nothing
            _DUE_DATE_W = Nothing
            _TIME_DUE_W = Nothing
            _ALERT_STATE_ID_W = Nothing
            _ALERT_STATE_NAME_W = Nothing

            _CURRENT_NOTIFY_EMP_CODE_W = Nothing
            _CURRENT_NOTIFY_EMP_FML_W = Nothing

            _ESTIMATE_NUMBER_W = Nothing
            _EST_COMPONENT_NBR_W = Nothing
            _TASK_FNC_CODE_W = Nothing
            _TASK_FNC_DESC_W = Nothing

            _CMP_IDENTIFIER_W = Nothing
            _GRP_CAMPAIGN_W = Nothing

            _VER_W = Nothing
            _BUILD_W = Nothing
            _ALERT_SEQ_NBR_W = Nothing

            _GRP_PRIORITY_W = Nothing
            _GRP_DUE_DATE_W = Nothing
            _GRP_DUE_DATE_DISPLAY_W = Nothing
            _SENT_W = Nothing
            _ALERT_NOTIFY_NAME_W = Nothing
            Me._entity.Query.FlushAggregateParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffAggregateParameter
    End Class

    Public ReadOnly Property Aggregate() As AggregateClause
        Get
            If _aggregateClause Is Nothing Then
                _aggregateClause = New AggregateClause(Me)
            End If

            Return _aggregateClause
        End Get
    End Property

    Private _aggregateClause As AggregateClause = Nothing
#End Region

    Protected Overrides Function GetInsertCommand() As IDbCommand
        Return Nothing
    End Function

    Protected Overrides Function GetUpdateCommand() As IDbCommand
        Return Nothing
    End Function

    Protected Overrides Function GetDeleteCommand() As IDbCommand
        Return Nothing
    End Function

End Class

