Imports Telerik.Web.UI
Imports InfoSoftGlobal
Imports System.Data.SqlClient
Public Class DashboardProjectPrint
    Inherits Webvantage.BaseChildPage
    'Store viewstate in session instead of on the page...
    'This doesn't work on the base page
    Dim _pers As PageStatePersister
    Protected Overrides ReadOnly Property PageStatePersister() As PageStatePersister
        Get
            If _pers Is Nothing Then
                _pers = New SessionPageStatePersister(Me)
            End If
            Return _pers
        End Get
    End Property

    Protected WithEvents lblTitle As System.Web.UI.WebControls.Label
    Protected WithEvents lblDate As System.Web.UI.WebControls.Label
    Protected WithEvents lblClient As System.Web.UI.WebControls.Label

#Region " Web Form Designer Generated Code "

    'This call is required by the Web Form Designer.
    <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()

    End Sub
    ''Protected WithEvents chartCliAging As Infragistics.WebUI.UltraWebChart.UltraChart
    ''Protected WithEvents UltraChart1 As Infragistics.WebUI.UltraWebChart.UltraChart
    'NOTE: The following placeholder declaration is required by the Web Form Designer.
    'Do not delete or move it.
    Private designerPlaceholderDeclaration As System.Object
    Protected WithEvents Label1 As System.Web.UI.WebControls.Label
    Protected WithEvents LabelWeek As System.Web.UI.WebControls.Label
    Protected WithEvents LabelYear As System.Web.UI.WebControls.Label
    Protected WithEvents LabelMonth As System.Web.UI.WebControls.Label
    Protected WithEvents LabelHours As System.Web.UI.WebControls.Label
    Protected WithEvents LabelDollars As System.Web.UI.WebControls.Label
    Protected WithEvents LabelByLevel As System.Web.UI.WebControls.Label
    Protected WithEvents PanelDashProjectComp As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashProjectGraph As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashProjectList As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashProjectDetail As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashClientDetail As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashProjectCompDetail As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashProjectYear As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashProjectMonth As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashClientTime As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashClientTimeCompDetail As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashClientYear As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashClientMonth As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashClientWeek As System.Web.UI.WebControls.Panel
    Protected WithEvents PanelDashData As System.Web.UI.WebControls.Panel
    Protected WithEvents RadGridProjects As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridComps As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridYear As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridMonth As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridCompsClient As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridYearClient As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridMonthClient As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridCompDetail As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridWrapper As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridWrapperClient As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridHours As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridDashComps As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridDashYear As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridDashMonth As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridDashClientYear As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridDashClientMonth As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridData As Telerik.Web.UI.RadGrid
    Protected WithEvents RadGridDataClient As Telerik.Web.UI.RadGrid
    Protected WithEvents PlaceHolderGraph As System.Web.UI.WebControls.PlaceHolder
    Protected WithEvents PlaceHolderGraphMonth As System.Web.UI.WebControls.PlaceHolder
    Protected WithEvents PlaceHolderClientMonth As System.Web.UI.WebControls.PlaceHolder
    Protected WithEvents PlaceHolderClientWeek As System.Web.UI.WebControls.PlaceHolder
    Protected WithEvents PlaceHolderClientYear As System.Web.UI.WebControls.PlaceHolder
    Protected WithEvents PlaceHolderYear As System.Web.UI.WebControls.PlaceHolder
    Protected WithEvents PlaceHolderSummary As System.Web.UI.WebControls.PlaceHolder

    Private Sub Page_Init(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Init
        'CODEGEN: This method call is required by the Web Form Designer
        'Do not modify it using the code editor.
        InitializeComponent()
        Me.AllowFloat = True
    End Sub

#End Region

#Region " Variables and Properties "

    Public OfficeCode As String = ""
    Public DeptCode As String = ""
    Public EmpCode As String = ""
    Public month As String = ""
    Public year As String = ""
    Public client As String = ""
    Public division As String = ""
    Public product As String = ""
    Public include As Integer = 0
    Public period As Integer = 0
    Public yearValue As String = ""
    Public cols As Integer
    Public cancel As String = ""
    Public cancelDesc As String = ""
    Public project As String = ""
    Public type As String = ""
    Public dash As String = ""
    Public ae As String = ""
    Public sc As String = ""
    Public jt As String = ""
    Public level As String = ""
    Public week As String = ""
    Public datatype As String = ""
    Public iscancel As Boolean = False

    Private Function BlankDT() As DataTable
        Dim dt As New DataTable
        Return dt
    End Function

#End Region

    Private Sub Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        Try
            Dim otask As cTasks = New cTasks(Session("ConnString"))
            Dim taskVar As String
            If Request.QueryString("db") = "client" Then
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardClient", "OfficeCode")
                If taskVar <> "" Then
                    OfficeCode = taskVar
                End If
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardClient", "DeptCode")
                If taskVar <> "" Then
                    DeptCode = taskVar
                End If
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardClient", "AECode")
                If taskVar <> "" Then
                    ae = taskVar
                End If
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardClient", "ClientCode")
                If taskVar <> "" Then
                    client = taskVar
                End If
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardClient", "SCCode")
                If taskVar <> "" Then
                    sc = taskVar
                End If
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardClient", "JobType")
                If taskVar <> "" Then
                    jt = taskVar
                End If
            Else
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardProject", "OfficeCode")
                If taskVar <> "" Then
                    OfficeCode = taskVar
                End If
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardProject", "DeptCode")
                If taskVar <> "" Then
                    DeptCode = taskVar
                End If
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardProject", "AECode")
                If taskVar <> "" Then
                    ae = taskVar
                End If
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardProject", "ClientCode")
                If taskVar <> "" Then
                    client = taskVar
                End If
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardProject", "SCCode")
                If taskVar <> "" Then
                    sc = taskVar
                End If
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardProject", "JobType")
                If taskVar <> "" Then
                    jt = taskVar
                End If
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardProject", "CancelCode")
                If taskVar <> "" Then
                    cancel = taskVar
                End If
                taskVar = otask.getAppVars(Session("UserCode"), "DashboardProject", "IsCancelled")
                If taskVar <> "" Then
                    iscancel = taskVar
                End If
            End If
            

            If Not Session("ConnString") Is Nothing Then
                If Request.QueryString("From") = "dashprojcomp" Then
                    If Request.QueryString("printall") = "1" Then
                        'Week Graph
                        Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln") & " by Week"
                        LoadDataGraph()
                        Me.PanelDashProjectGraph.Visible = True
                        'Week Detail
                        Me.PanelDashProjectDetail.Visible = True
                        RadGridWrapper.DataSource = New String() {" "}
                        level = Request.QueryString("level")
                        dash = Request.QueryString("dash")
                        If Request.QueryString("eopt") = "True" Then
                            If level = "dept" Then
                                Me.buildRG()
                                Me.buildRGMonth()
                                Me.buildRGYear()
                            End If
                            If level = "SC" Then
                                Me.buildRGSalesClass()
                                Me.buildRGMonthSalesClass()
                                Me.buildRGYearSalesClass()
                            End If
                            If level = "C" Then
                                Me.buildRGClient()
                                Me.buildRGMonthClient()
                                Me.buildRGYearClient()
                            End If
                            If level = "CD" Then
                                Me.buildRGCD()
                                Me.buildRGMonthCD()
                                Me.buildRGYearCD()
                            End If
                            If level = "CDP" Then
                                Me.buildRGCDP()
                                Me.buildRGMonthCDP()
                                Me.buildRGYearCDP()
                            End If
                            If level = "AE" Then
                                Me.buildRGAccountExecutive()
                                Me.buildRGMonthAccountExecutive()
                                Me.buildRGYearAccountExecutive()
                            End If
                            If level = "JT" Then
                                Me.buildRGJobType()
                                Me.buildRGMonthJobType()
                                Me.buildRGYearJobType()
                            End If
                        Else
                            If level = "dept" Then
                                Me.buildRG()
                                Me.buildRGMonthExport()
                                Me.buildRGYearExport()
                            End If
                            If level = "SC" Then
                                Me.buildRGSalesClass()
                                Me.buildRGMonthSalesClassExport()
                                Me.buildRGYearSalesClassExport()
                            End If
                            If level = "C" Then
                                Me.buildRGClient()
                                Me.buildRGMonthClientExport()
                                Me.buildRGYearClientExport()
                            End If
                            If level = "CD" Then
                                Me.buildRGCD()
                                Me.buildRGMonthCDExport()
                                Me.buildRGYearCDExport()
                            End If
                            If level = "CDP" Then
                                Me.buildRGCDP()
                                Me.buildRGMonthCDPExport()
                                Me.buildRGYearCDPExport()
                            End If
                            If level = "AE" Then
                                Me.buildRGAccountExecutive()
                                Me.buildRGMonthAccountExecutiveExport()
                                Me.buildRGYearAccountExecutiveExport()
                            End If
                            If level = "JT" Then
                                Me.buildRGJobType()
                                Me.buildRGMonthJobTypeExport()
                                Me.buildRGYearJobTypeExport()
                            End If
                        End If
                        If dash = "M" Then
                            Me.RadGridYear.Visible = False
                            Me.RadGridComps.Visible = False
                            Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln") & " by Month"
                        End If
                        If dash = "W" Then
                            'Me.RadGridMonth.Visible = False
                            'Me.RadGridYear.Visible = False
                            Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln") & " by Week"
                        End If
                        If dash = "Y" Then
                            Me.RadGridMonth.Visible = False
                            Me.RadGridComps.Visible = False
                            Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln") & " by Year"
                        End If
                        'Summary Graph
                        LoadDataProjectComp()
                        If level = "C" Then
                            Me.buildRGClientDashComp()
                        End If
                        If level = "CD" Then
                            Me.buildRGDivisionDashComp()
                        End If
                        If level = "CDP" Then
                            Me.buildRGProductDashComp()
                        End If
                        If level = "dept" Then
                            Me.buildRGDashComp()
                        End If
                        If level = "SC" Then
                            Me.buildRGSalesClassDashComp()
                        End If
                        If level = "AE" Then
                            Me.buildRGAccountExecutiveDashComp()
                        End If
                        If level = "JT" Then
                            Me.buildRGJobTypeDashComp()
                        End If
                        Me.PanelDashProjectComp.Visible = True
                        Me.LabelByLevel.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln")
                        Me.RadGridDashComps.Visible = False
                        'Summary Detail
                        Me.PanelDashProjectCompDetail.Visible = True
                        If Request.QueryString("eopt") = "True" Then
                            If level = "C" Then
                                Me.buildRGClientDetail()
                            End If
                            If level = "CD" Then
                                Me.buildRGDivisionDetail()
                            End If
                            If level = "CDP" Then
                                Me.buildRGProductDetail()
                            End If
                            If level = "dept" Then
                                Me.buildRGDetail()
                            End If
                            If level = "SC" Then
                                Me.buildRGSalesClassDetail()
                            End If
                            If level = "AE" Then
                                Me.buildRGAccountExecutiveDetail()
                            End If
                            If level = "JT" Then
                                Me.buildRGJobTypeDetail()
                            End If
                        Else
                            If level = "C" Then
                                Me.buildRGClientDetailExport()
                            End If
                            If level = "CD" Then
                                Me.buildRGDivisionDetailExport()
                            End If
                            If level = "CDP" Then
                                Me.buildRGProductDetailExport()
                            End If
                            If level = "dept" Then
                                Me.buildRGDetailExport()
                            End If
                            If level = "SC" Then
                                Me.buildRGSalesClassDetailExport()
                            End If
                            If level = "AE" Then
                                Me.buildRGAccountExecutiveDetailExport()
                            End If
                            If level = "JT" Then
                                Me.buildRGJobTypeDetailExport()
                            End If
                        End If
                    Else
                        Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln")
                        LoadDataProjectComp()
                        If level = "C" Then
                            Me.buildRGClientDashComp()
                        End If
                        If level = "CD" Then
                            Me.buildRGDivisionDashComp()
                        End If
                        If level = "CDP" Then
                            Me.buildRGProductDashComp()
                        End If
                        If level = "dept" Then
                            Me.buildRGDashComp()
                        End If
                        If level = "SC" Then
                            Me.buildRGSalesClassDashComp()
                        End If
                        If level = "AE" Then
                            Me.buildRGAccountExecutiveDashComp()
                        End If
                        If level = "JT" Then
                            Me.buildRGJobTypeDashComp()
                        End If
                        Me.PanelDashProjectComp.Visible = True
                    End If
                End If
                If Request.QueryString("From") = "dashprojyear" Then
                    Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln") & " by Year"
                    LoadDataDashYear()
                    Me.PanelDashProjectYear.Visible = True
                End If
                If Request.QueryString("From") = "dashprojgraph" Then
                    Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln") & " by Week"
                    LoadDataGraph()
                    Me.PanelDashProjectGraph.Visible = True
                End If
                If Request.QueryString("From") = "dashprojmonth" Then
                    Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln") & " by Month"
                    LoadDataDashMonth()
                    Me.PanelDashProjectMonth.Visible = True
                End If
                If Request.QueryString("From") = "dashprojlist" Then
                    Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln")
                    Me.PanelDashProjectList.Visible = True
                End If
                If Request.QueryString("From") = "dashprojdetail" Then
                    Me.lblTitle.Text = ""
                    Me.PanelDashProjectDetail.Visible = True
                    RadGridWrapper.DataSource = New String() {" "}
                    level = Request.QueryString("level")
                    dash = Request.QueryString("dash")
                    If Request.QueryString("eopt") = "True" Then
                        If level = "dept" Then
                            Me.buildRG()
                            Me.buildRGMonth()
                            Me.buildRGYear()
                        End If
                        If level = "SC" Then
                            Me.buildRGSalesClass()
                            Me.buildRGMonthSalesClass()
                            Me.buildRGYearSalesClass()
                        End If
                        If level = "C" Then
                            Me.buildRGClient()
                            Me.buildRGMonthClient()
                            Me.buildRGYearClient()
                        End If
                        If level = "CD" Then
                            Me.buildRGCD()
                            Me.buildRGMonthCD()
                            Me.buildRGYearCD()
                        End If
                        If level = "CDP" Then
                            Me.buildRGCDP()
                            Me.buildRGMonthCDP()
                            Me.buildRGYearCDP()
                        End If
                        If level = "AE" Then
                            Me.buildRGAccountExecutive()
                            Me.buildRGMonthAccountExecutive()
                            Me.buildRGYearAccountExecutive()
                        End If
                        If level = "JT" Then
                            Me.buildRGJobType()
                            Me.buildRGMonthJobType()
                            Me.buildRGYearJobType()
                        End If
                    Else
                        If level = "dept" Then
                            Me.buildRG()
                            Me.buildRGMonthExport()
                            Me.buildRGYearExport()
                        End If
                        If level = "SC" Then
                            Me.buildRGSalesClass()
                            Me.buildRGMonthSalesClassExport()
                            Me.buildRGYearSalesClassExport()
                        End If
                        If level = "C" Then
                            Me.buildRGClient()
                            Me.buildRGMonthClientExport()
                            Me.buildRGYearClientExport()
                        End If
                        If level = "CD" Then
                            Me.buildRGCD()
                            Me.buildRGMonthCDExport()
                            Me.buildRGYearCDExport()
                        End If
                        If level = "CDP" Then
                            Me.buildRGCDP()
                            Me.buildRGMonthCDPExport()
                            Me.buildRGYearCDPExport()
                        End If
                        If level = "AE" Then
                            Me.buildRGAccountExecutive()
                            Me.buildRGMonthAccountExecutiveExport()
                            Me.buildRGYearAccountExecutiveExport()
                        End If
                        If level = "JT" Then
                            Me.buildRGJobType()
                            Me.buildRGMonthJobTypeExport()
                            Me.buildRGYearJobTypeExport()
                        End If
                    End If
                    
                    If dash = "M" Then
                        Me.RadGridYear.Visible = False
                        Me.RadGridComps.Visible = False
                        Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln") & " by Month"
                    End If
                    If dash = "W" Then
                        'Me.RadGridMonth.Visible = False
                        'Me.RadGridYear.Visible = False
                        Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln") & " by Week"
                    End If
                    If dash = "Y" Then
                        Me.RadGridMonth.Visible = False
                        Me.RadGridComps.Visible = False
                        Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln") & " by Year"
                    End If
                End If
                If Request.QueryString("From") = "dashprojcompdetail" Then
                    Me.lblTitle.Text = "Projects " & Request.QueryString("project") & " by " & Request.QueryString("ln")
                    Me.PanelDashProjectCompDetail.Visible = True
                    level = Request.QueryString("level")
                    If Request.QueryString("eopt") = "True" Then
                        If level = "C" Then
                            Me.buildRGClientDetail()
                        End If
                        If level = "CD" Then
                            Me.buildRGDivisionDetail()
                        End If
                        If level = "CDP" Then
                            Me.buildRGProductDetail()
                        End If
                        If level = "dept" Then
                            Me.buildRGDetail()
                        End If
                        If level = "SC" Then
                            Me.buildRGSalesClassDetail()
                        End If
                        If level = "AE" Then
                            Me.buildRGAccountExecutiveDetail()
                        End If
                        If level = "JT" Then
                            Me.buildRGJobTypeDetail()
                        End If
                    Else
                        If level = "C" Then
                            Me.buildRGClientDetailExport()
                        End If
                        If level = "CD" Then
                            Me.buildRGDivisionDetailExport()
                        End If
                        If level = "CDP" Then
                            Me.buildRGProductDetailExport()
                        End If
                        If level = "dept" Then
                            Me.buildRGDetailExport()
                        End If
                        If level = "SC" Then
                            Me.buildRGSalesClassDetailExport()
                        End If
                        If level = "AE" Then
                            Me.buildRGAccountExecutiveDetailExport()
                        End If
                        If level = "JT" Then
                            Me.buildRGJobTypeDetailExport()
                        End If
                    End If
                End If
                If Request.QueryString("From") = "dashclienttime" Then
                    If Request.QueryString("printall") = "1" Then
                        Me.lblTitle.Text = ""
                        level = Request.QueryString("level")
                        LoadDataClientTime()
                        Me.PanelDashClientTime.Visible = True
                        Me.LabelHours.Text = "Hours By " & Request.QueryString("ln")
                        Me.LabelDollars.Text = "Dollars By " & Request.QueryString("ln")
                        'Client detail Hours
                        Me.PanelDashClientDetail.Visible = True
                        RadGridWrapperClient.DataSource = New String() {" "}
                        level = Request.QueryString("level")
                        dash = Request.QueryString("dash")
                        datatype = Request.QueryString("datatype")
                        If Request.QueryString("eopt") = "True" Then
                            If level = "dept" Then
                                Me.buildRGDetailClient()
                                Me.buildRGMonthDetailClient()
                                Me.buildRGYearDetailClient()
                            End If
                            If level = "SC" Then
                                Me.buildRGSalesClassDetailClient()
                                Me.buildRGMonthSalesClassDetailClient()
                                Me.buildRGYearSalesClassDetailClient()
                            End If
                            If level = "C" Then
                                Me.buildRGClientDetailClient()
                                Me.buildRGMonthClientDetailClient()
                                Me.buildRGYearClientDetailClient()
                            End If
                            If level = "CD" Then
                                Me.buildRGCDDetailClient()
                                Me.buildRGMonthCDDetailClient()
                                Me.buildRGYearCDDetailClient()
                            End If
                            If level = "CDP" Then
                                Me.buildRGCDPDetailClient()
                                Me.buildRGMonthCDPDetailClient()
                                Me.buildRGYearCDPDetailClient()
                            End If
                            If level = "AE" Then
                                Me.buildRGAccountExecutiveDetailClient()
                                Me.buildRGMonthAccountExecutiveDetailClient()
                                Me.buildRGYearAccountExecutiveDetailClient()
                            End If
                            If level = "JT" Then
                                Me.buildRGJobTypeDetailClient()
                                Me.buildRGMonthJobTypeDetailClient()
                                Me.buildRGYearJobTypeDetailClient()
                            End If
                        Else
                            If level = "dept" Then
                                Me.buildRGDetailClient()
                                Me.buildRGMonthDetailClient()
                                Me.buildRGYearDetailClientExport()
                            End If
                            If level = "SC" Then
                                Me.buildRGSalesClassDetailClient()
                                Me.buildRGMonthSalesClassDetailClient()
                                Me.buildRGYearSalesClassDetailClientExport()
                            End If
                            If level = "C" Then
                                Me.buildRGClientDetailClient()
                                Me.buildRGMonthClientDetailClient()
                                Me.buildRGYearClientDetailClientExport()
                            End If
                            If level = "CD" Then
                                Me.buildRGCDDetailClient()
                                Me.buildRGMonthCDDetailClient()
                                Me.buildRGYearCDDetailClientExport()
                            End If
                            If level = "CDP" Then
                                Me.buildRGCDPDetailClient()
                                Me.buildRGMonthCDPDetailClient()
                                Me.buildRGYearCDPDetailClientExport()
                            End If
                            If level = "AE" Then
                                Me.buildRGAccountExecutiveDetailClient()
                                Me.buildRGMonthAccountExecutiveDetailClient()
                                Me.buildRGYearAccountExecutiveDetailClientExport()
                            End If
                            If level = "JT" Then
                                Me.buildRGJobTypeDetailClient()
                                Me.buildRGMonthJobTypeDetailClient()
                                Me.buildRGYearJobTypeDetailClientExport()
                            End If
                        End If

                        If dash = "M" Then
                            Me.RadGridYearClient.Visible = False
                            Me.RadGridCompsClient.Visible = False
                            If datatype = "Hours" Then
                                Me.lblTitle.Text = "Hours by " & Request.QueryString("ln") & " by Month"
                            End If
                            If datatype = "Dollars" Then
                                Me.lblTitle.Text = "Dollars by " & Request.QueryString("ln") & " by Month"
                            End If
                        End If
                        If dash = "W" Then
                            If datatype = "Hours" Then
                                Me.lblTitle.Text = "Hours by " & Request.QueryString("ln") & " by Week"
                            End If
                            If datatype = "Dollars" Then
                                Me.lblTitle.Text = "Dollars by " & Request.QueryString("ln") & " by Week"
                            End If
                        End If
                        If dash = "Y" Then
                            Me.RadGridMonthClient.Visible = False
                            Me.RadGridCompsClient.Visible = False
                            If datatype = "Hours" Then
                                Me.lblTitle.Text = "Hours by " & Request.QueryString("ln") & " by Year"
                            End If
                            If datatype = "Dollars" Then
                                Me.lblTitle.Text = "Dollars by " & Request.QueryString("ln") & " by Year"
                            End If
                        End If
                        'Client time Dollars
                        datatype = "Dollars"
                        If Request.QueryString("eopt") = "True" Then
                            If level = "dept" Then
                                Me.buildRGDetailClient()
                                Me.buildRGMonthDetailClient()
                                Me.buildRGYearDetailClient()
                            End If
                            If level = "SC" Then
                                Me.buildRGSalesClassDetailClient()
                                Me.buildRGMonthSalesClassDetailClient()
                                Me.buildRGYearSalesClassDetailClient()
                            End If
                            If level = "C" Then
                                Me.buildRGClientDetailClient()
                                Me.buildRGMonthClientDetailClient()
                                Me.buildRGYearClientDetailClient()
                            End If
                            If level = "CD" Then
                                Me.buildRGCDDetailClient()
                                Me.buildRGMonthCDDetailClient()
                                Me.buildRGYearCDDetailClient()
                            End If
                            If level = "CDP" Then
                                Me.buildRGCDPDetailClient()
                                Me.buildRGMonthCDPDetailClient()
                                Me.buildRGYearCDPDetailClient()
                            End If
                            If level = "AE" Then
                                Me.buildRGAccountExecutiveDetailClient()
                                Me.buildRGMonthAccountExecutiveDetailClient()
                                Me.buildRGYearAccountExecutiveDetailClient()
                            End If
                            If level = "JT" Then
                                Me.buildRGJobTypeDetailClient()
                                Me.buildRGMonthJobTypeDetailClient()
                                Me.buildRGYearJobTypeDetailClient()
                            End If
                        Else
                            If level = "dept" Then
                                Me.buildRGDetailClient()
                                Me.buildRGMonthDetailClient()
                                Me.buildRGYearDetailClientExport()
                            End If
                            If level = "SC" Then
                                Me.buildRGSalesClassDetailClient()
                                Me.buildRGMonthSalesClassDetailClient()
                                Me.buildRGYearSalesClassDetailClientExport()
                            End If
                            If level = "C" Then
                                Me.buildRGClientDetailClient()
                                Me.buildRGMonthClientDetailClient()
                                Me.buildRGYearClientDetailClientExport()
                            End If
                            If level = "CD" Then
                                Me.buildRGCDDetailClient()
                                Me.buildRGMonthCDDetailClient()
                                Me.buildRGYearCDDetailClientExport()
                            End If
                            If level = "CDP" Then
                                Me.buildRGCDPDetailClient()
                                Me.buildRGMonthCDPDetailClient()
                                Me.buildRGYearCDPDetailClientExport()
                            End If
                            If level = "AE" Then
                                Me.buildRGAccountExecutiveDetailClient()
                                Me.buildRGMonthAccountExecutiveDetailClient()
                                Me.buildRGYearAccountExecutiveDetailClientExport()
                            End If
                            If level = "JT" Then
                                Me.buildRGJobTypeDetailClient()
                                Me.buildRGMonthJobTypeDetailClient()
                                Me.buildRGYearJobTypeDetailClientExport()
                            End If
                        End If

                        If dash = "M" Then
                            Me.RadGridYearClient.Visible = False
                            Me.RadGridCompsClient.Visible = False
                            If datatype = "Hours" Then
                                Me.lblTitle.Text = "Hours by " & Request.QueryString("ln") & " by Month"
                            End If
                            If datatype = "Dollars" Then
                                Me.lblTitle.Text = "Dollars by " & Request.QueryString("ln") & " by Month"
                            End If
                        End If
                        If dash = "W" Then
                            If datatype = "Hours" Then
                                Me.lblTitle.Text = "Hours by " & Request.QueryString("ln") & " by Week"
                            End If
                            If datatype = "Dollars" Then
                                Me.lblTitle.Text = "Dollars by " & Request.QueryString("ln") & " by Week"
                            End If
                        End If
                        If dash = "Y" Then
                            Me.RadGridMonthClient.Visible = False
                            Me.RadGridCompsClient.Visible = False
                            If datatype = "Hours" Then
                                Me.lblTitle.Text = "Hours by " & Request.QueryString("ln") & " by Year"
                            End If
                            If datatype = "Dollars" Then
                                Me.lblTitle.Text = "Dollars by " & Request.QueryString("ln") & " by Year"
                            End If
                        End If
                    Else
                        Me.lblTitle.Text = ""
                        level = Request.QueryString("level")
                        LoadDataClientTime()
                        Me.PanelDashClientTime.Visible = True
                        Me.LabelHours.Text = "Hours By " & Request.QueryString("ln")
                        Me.LabelDollars.Text = "Dollars By " & Request.QueryString("ln")
                    End If
                End If
                If Request.QueryString("From") = "dashclienttimecompdetail" Then
                    Me.lblTitle.Text = ""
                    Me.PanelDashClientTimeCompDetail.Visible = True
                    level = Request.QueryString("level")
                    If level = "C" Then
                        Me.buildRGClientCT()
                    End If
                    If level = "CD" Then
                        Me.buildRGDivisionCT()
                    End If
                    If level = "CDP" Then
                        Me.buildRGProductCT()
                    End If
                    If level = "dept" Then
                        Me.buildRGCT()
                    End If
                    If level = "SC" Then
                        Me.buildRGSalesClassCT()
                    End If
                    If level = "AE" Then
                        Me.buildRGAccountExecutiveCT()
                    End If
                    If level = "JT" Then
                        Me.buildRGJobTypeCT()
                    End If
                End If
                If Request.QueryString("From") = "dashclientyear" Then
                    datatype = Request.QueryString("datatype")
                    If datatype = "Hours" Then
                        Me.lblTitle.Text = "Hours by " & Request.QueryString("ln") & " by Month"
                    End If
                    If datatype = "Dollars" Then
                        Me.lblTitle.Text = "Dollars by " & Request.QueryString("ln") & " by Month"
                    End If
                    LoadDataDashClientYear()
                    Me.PanelDashClientYear.Visible = True
                End If
                If Request.QueryString("From") = "dashclientmonth" Then
                    datatype = Request.QueryString("datatype")
                    If datatype = "Hours" Then
                        Me.lblTitle.Text = "Hours by " & Request.QueryString("ln") & " by Month"
                    End If
                    If datatype = "Dollars" Then
                        Me.lblTitle.Text = "Dollars by " & Request.QueryString("ln") & " by Month"
                    End If
                    LoadDashDataClientMonth()
                    Me.PanelDashClientMonth.Visible = True
                End If
                If Request.QueryString("From") = "dashclientweek" Then
                    datatype = Request.QueryString("datatype")
                    If datatype = "Hours" Then
                        Me.lblTitle.Text = "Hours by " & Request.QueryString("ln") & " by Week"
                    End If
                    If datatype = "Dollars" Then
                        Me.lblTitle.Text = "Dollars by " & Request.QueryString("ln") & " by Week"
                    End If
                    LoadDataDashClientWeek(datatype)
                    Me.PanelDashClientWeek.Visible = True
                End If
                If Request.QueryString("From") = "dashclientdetail" Then
                    Me.lblTitle.Text = ""
                    Me.PanelDashClientDetail.Visible = True
                    RadGridWrapperClient.DataSource = New String() {" "}
                    level = Request.QueryString("level")
                    dash = Request.QueryString("dash")
                    datatype = Request.QueryString("datatype")
                    If Request.QueryString("eopt") = "True" Then
                        If level = "dept" Then
                            Me.buildRGDetailClient()
                            Me.buildRGMonthDetailClient()
                            Me.buildRGYearDetailClient()
                        End If
                        If level = "SC" Then
                            Me.buildRGSalesClassDetailClient()
                            Me.buildRGMonthSalesClassDetailClient()
                            Me.buildRGYearSalesClassDetailClient()
                        End If
                        If level = "C" Then
                            Me.buildRGClientDetailClient()
                            Me.buildRGMonthClientDetailClient()
                            Me.buildRGYearClientDetailClient()
                        End If
                        If level = "CD" Then
                            Me.buildRGCDDetailClient()
                            Me.buildRGMonthCDDetailClient()
                            Me.buildRGYearCDDetailClient()
                        End If
                        If level = "CDP" Then
                            Me.buildRGCDPDetailClient()
                            Me.buildRGMonthCDPDetailClient()
                            Me.buildRGYearCDPDetailClient()
                        End If
                        If level = "AE" Then
                            Me.buildRGAccountExecutiveDetailClient()
                            Me.buildRGMonthAccountExecutiveDetailClient()
                            Me.buildRGYearAccountExecutiveDetailClient()
                        End If
                        If level = "JT" Then
                            Me.buildRGJobTypeDetailClient()
                            Me.buildRGMonthJobTypeDetailClient()
                            Me.buildRGYearJobTypeDetailClient()
                        End If
                    Else
                        If level = "dept" Then
                            Me.buildRGDetailClient()
                            Me.buildRGMonthDetailClient()
                            Me.buildRGYearDetailClientExport()
                        End If
                        If level = "SC" Then
                            Me.buildRGSalesClassDetailClient()
                            Me.buildRGMonthSalesClassDetailClient()
                            Me.buildRGYearSalesClassDetailClientExport()
                        End If
                        If level = "C" Then
                            Me.buildRGClientDetailClient()
                            Me.buildRGMonthClientDetailClient()
                            Me.buildRGYearClientDetailClientExport()
                        End If
                        If level = "CD" Then
                            Me.buildRGCDDetailClient()
                            Me.buildRGMonthCDDetailClient()
                            Me.buildRGYearCDDetailClientExport()
                        End If
                        If level = "CDP" Then
                            Me.buildRGCDPDetailClient()
                            Me.buildRGMonthCDPDetailClient()
                            Me.buildRGYearCDPDetailClientExport()
                        End If
                        If level = "AE" Then
                            Me.buildRGAccountExecutiveDetailClient()
                            Me.buildRGMonthAccountExecutiveDetailClient()
                            Me.buildRGYearAccountExecutiveDetailClientExport()
                        End If
                        If level = "JT" Then
                            Me.buildRGJobTypeDetailClient()
                            Me.buildRGMonthJobTypeDetailClient()
                            Me.buildRGYearJobTypeDetailClientExport()
                        End If
                    End If
                    
                    If dash = "M" Then
                        Me.RadGridYearClient.Visible = False
                        Me.RadGridCompsClient.Visible = False
                        If datatype = "Hours" Then
                            Me.lblTitle.Text = "Hours by " & Request.QueryString("ln") & " by Month"
                        End If
                        If datatype = "Dollars" Then
                            Me.lblTitle.Text = "Dollars by " & Request.QueryString("ln") & " by Month"
                        End If
                    End If
                    If dash = "W" Then
                        If datatype = "Hours" Then
                            Me.lblTitle.Text = "Hours by " & Request.QueryString("ln") & " by Week"
                        End If
                        If datatype = "Dollars" Then
                            Me.lblTitle.Text = "Dollars by " & Request.QueryString("ln") & " by Week"
                        End If
                    End If
                    If dash = "Y" Then
                        Me.RadGridMonthClient.Visible = False
                        Me.RadGridCompsClient.Visible = False
                        If datatype = "Hours" Then
                            Me.lblTitle.Text = "Hours by " & Request.QueryString("ln") & " by Year"
                        End If
                        If datatype = "Dollars" Then
                            Me.lblTitle.Text = "Dollars by " & Request.QueryString("ln") & " by Year"
                        End If
                    End If
                End If
                If Request.QueryString("From") = "dashdata" Then
                    Me.PanelDashData.Visible = True
                End If
            Else
                'Page.RegisterStartupScript("CloseMe", CloseScript)
            End If
        Catch ex As Exception
            Throw (ex)
        End Try
    End Sub

#Region "Dashboard Print"

    Private Sub LoadGraph()
        Dim ds As New System.Data.DataSet
        Dim dt As New System.Data.DataTable

        Try
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            ds = dash.GetOfficeData(Me.OfficeCode, month, year, Session("UserCode"))
            Session("ds_DASH_Offices") = ds
            ds = dash.GetDeptData(Me.OfficeCode, month, year, Me.DeptCode, Session("UserCode"))
            Session("ds_DASH_Departments") = ds
            ds = dash.GetEmpData(Me.DeptCode)
            Session("ds_DASH_Employees") = ds
        Catch ex As Exception
            Me.ShowMessage(ex.Message.ToString())
        End Try
    End Sub

    Public Function WriteXML() As String
        Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
        Return dash.getFCXMLData_MultiColumn3D_Departments(Session("ds_DASH_Departments"))
    End Function

    Public Function WriteXMLEmp() As String
        Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
        Return dash.getFCXMLData_MultiColumn3D_Departments(Session("ds_DASH_Employees"))
    End Function

    Public Function WriteXMLOffice() As String
        Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
        Return dash.getFCXMLData_MultiColumn3D_Departments(Session("ds_DASH_Offices"))
    End Function

#End Region

#Region "Dashboard Project Comp"

    Public Function WriteXMLPie() As String
        Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
        Return dash.getFCXMLData_PieProjects(Session("ds_DASH_Comps_Pie"), "", "", "", True)
    End Function

    Public Function WriteXMLPieSelection() As String
        Dim das As New cDashboard(Session("ConnString"), Session("UserCode"))
        dash = Request.QueryString("dash")
        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")

        If level = "C" Then
            Return das.getFCXMLData_PieByLevel(Session("ds_DASH_Comps_Pie_ByLevel"), "CL_NAME", project, "", True, week, month, year, type, dash)
        End If
        If level = "CD" Then
            Return das.getFCXMLData_PieByLevel(Session("ds_DASH_Comps_Pie_ByLevel"), "DIV_NAME", project, "", True, week, month, year, type, dash)
        End If
        If level = "CDP" Then
            Return das.getFCXMLData_PieByLevel(Session("ds_DASH_Comps_Pie_ByLevel"), "PRD_DESCRIPTION", project, "", True, week, month, year, type, dash)
        End If
        If level = "AE" Then
            Return das.getFCXMLData_PieByLevel(Session("ds_DASH_Comps_Pie_ByLevel"), "ACCT_NAME", project, "", True, week, month, year, type, dash)
        End If
        If level = "dept" Then
            Return das.getFCXMLData_PieByLevel(Session("ds_DASH_Comps_Pie_ByLevel"), "DP_TM_DESC", project, "", True, week, month, year, type, dash)
        End If
        If level = "SC" Then
            Return das.getFCXMLData_PieByLevel(Session("ds_DASH_Comps_Pie_ByLevel"), "SC_DESCRIPTION", project, "", True, week, month, year, type, dash)
        End If
        If level = "JT" Then
            Return das.getFCXMLData_PieByLevel(Session("ds_DASH_Comps_Pie_ByLevel"), "JT_DESC", project, "", True, week, month, year, type, dash)
        End If

    End Function

    Private Sub LoadDataProjectComp(Optional ByVal type As String = "Month")
        Dim oDTO As cDesktopObjects = New cDesktopObjects(Session("ConnString"))
        Dim ds As New System.Data.DataSet
        Dim dt As New System.Data.DataTable
        Dim dtWeek As DataView
        Dim count As Integer = 0
        Dim literal As Literal
        Dim xml As String

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        count = Request.QueryString("count")
        level = Request.QueryString("level")
        'Me.PlaceHolderSummary.Controls.Clear()
        
        Try
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            If type = "Month" Then
                ds = dash.GetProjects("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, "", cancel, iscancel, Session("UserCode"), "Month", count)
            Else
                ds = dash.GetProjects("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, "", cancel, iscancel, Session("UserCode"), "YeartoDate", count)
            End If
            Session("ds_DASH_Comps") = ds
            Session("ds_DASH_Comps_Pie") = ds
            If type = "Month" Then
                ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), "Month", project, count)
            Else
                ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), "YeartoDate", project, count)
            End If
            Session("ds_DASH_Comps_Pie_ByLevel") = ds
            'xml = Me.WriteXMLPieSelection
            'If xml <> "<chart></chart>" Then
            '    literal = New Literal
            '    literal.ID = "literal" & level
            '    literal.Text = FusionCharts.RenderChartHTML("Flash/Pie3D.swf", "", xml, "chart" & level, "600", "500", False, True)
            '    Me.PlaceHolderSummary.Controls.Add(literal)
            'End If
        Catch ex As Exception
            Me.ShowMessage(ex.Message.ToString())
        End Try

        CreatePieChart_Selection()

    End Sub
    Private Sub CreatePieChart_Selection()

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing

        dash = Request.QueryString("dash")
        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")

        Dashboard = New Webvantage.cDashboard(_Session.ConnectionString, _Session.UserCode)

        Select Case level

            Case "C"

                Dashboard.GetPieChart_ByLevel(RadHtmlChartPieSelection, Session("ds_DASH_Comps_Pie_ByLevel"), "CL_NAME", project, "", week, month, year, type, dash)

            Case "CD"

                Dashboard.GetPieChart_ByLevel(RadHtmlChartPieSelection, Session("ds_DASH_Comps_Pie_ByLevel"), "DIV_NAME", project, "", week, month, year, type, dash)

            Case "CDP"

                Dashboard.GetPieChart_ByLevel(RadHtmlChartPieSelection, Session("ds_DASH_Comps_Pie_ByLevel"), "PRD_DESCRIPTION", project, "", week, month, year, type, dash)

            Case "AE"

                Dashboard.GetPieChart_ByLevel(RadHtmlChartPieSelection, Session("ds_DASH_Comps_Pie_ByLevel"), "ACCT_NAME", project, "", week, month, year, type, dash)

            Case "dept"

                Dashboard.GetPieChart_ByLevel(RadHtmlChartPieSelection, Session("ds_DASH_Comps_Pie_ByLevel"), "DP_TM_DESC", project, "", week, month, year, type, dash)

            Case "SC"

                Dashboard.GetPieChart_ByLevel(RadHtmlChartPieSelection, Session("ds_DASH_Comps_Pie_ByLevel"), "SC_DESCRIPTION", project, "", week, month, year, type, dash)

            Case "JT"

                Dashboard.GetPieChart_ByLevel(RadHtmlChartPieSelection, Session("ds_DASH_Comps_Pie_ByLevel"), "JT_DESC", project, "", week, month, year, type, dash)

        End Select

    End Sub

    Private Sub RadGridDashComps_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridDashComps.ItemDataBound
        Try
            Dim countyear As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetProjectsByLevel("", month, year, week, "", "", "", "", "", "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, countyear)
            Dim total As Integer
            Dim count As Integer
            Dim fourweektotal As Integer
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then


            ElseIf e.Item.ItemType = GridItemType.Footer Then
                If level = "dept" Then
                    e.Item.Cells(2).Text = "Totals:"
                    For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                        If project = "Created" Then
                            total += ds.Tables(0).Rows(j)("Created")
                        End If
                        If project = "Completed" Then
                            total += ds.Tables(0).Rows(j)("Completed")
                        End If
                        If project = "Due" Then
                            total += ds.Tables(0).Rows(j)("Due")
                        End If
                        If project = "Pending" Then
                            total += ds.Tables(0).Rows(j)("Pending")
                        End If
                        If project = "Cancelled" Then
                            total += ds.Tables(0).Rows(j)("Cancelled")
                        End If
                    Next
                    e.Item.Cells(3).Text = total
                End If
                If level = "SC" Then
                    e.Item.Cells(2).Text = "Totals:"
                    For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                        If project = "Created" Then
                            total += ds.Tables(0).Rows(j)("Created")
                        End If
                        If project = "Completed" Then
                            total += ds.Tables(0).Rows(j)("Completed")
                        End If
                        If project = "Due" Then
                            total += ds.Tables(0).Rows(j)("Due")
                        End If
                        If project = "Pending" Then
                            total += ds.Tables(0).Rows(j)("Pending")
                        End If
                        If project = "Cancelled" Then
                            total += ds.Tables(0).Rows(j)("Cancelled")
                        End If
                    Next
                    e.Item.Cells(3).Text = total
                End If
                If level = "C" Then
                    e.Item.Cells(2).Text = "Totals:"
                    For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                        If project = "Created" Then
                            total += ds.Tables(0).Rows(j)("Created")
                        End If
                        If project = "Completed" Then
                            total += ds.Tables(0).Rows(j)("Completed")
                        End If
                        If project = "Due" Then
                            total += ds.Tables(0).Rows(j)("Due")
                        End If
                        If project = "Pending" Then
                            total += ds.Tables(0).Rows(j)("Pending")
                        End If
                        If project = "Cancelled" Then
                            total += ds.Tables(0).Rows(j)("Cancelled")
                        End If
                    Next
                    e.Item.Cells(3).Text = total
                End If
                If level = "CD" Then
                    e.Item.Cells(2).Text = "Totals:"
                    For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                        If project = "Created" Then
                            total += ds.Tables(0).Rows(j)("Created")
                        End If
                        If project = "Completed" Then
                            total += ds.Tables(0).Rows(j)("Completed")
                        End If
                        If project = "Due" Then
                            total += ds.Tables(0).Rows(j)("Due")
                        End If
                        If project = "Pending" Then
                            total += ds.Tables(0).Rows(j)("Pending")
                        End If
                        If project = "Cancelled" Then
                            total += ds.Tables(0).Rows(j)("Cancelled")
                        End If
                    Next
                    e.Item.Cells(4).Text = total
                End If
                If level = "CDP" Then
                    e.Item.Cells(2).Text = "Totals:"
                    For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                        If project = "Created" Then
                            total += ds.Tables(0).Rows(j)("Created")
                        End If
                        If project = "Completed" Then
                            total += ds.Tables(0).Rows(j)("Completed")
                        End If
                        If project = "Due" Then
                            total += ds.Tables(0).Rows(j)("Due")
                        End If
                        If project = "Pending" Then
                            total += ds.Tables(0).Rows(j)("Pending")
                        End If
                        If project = "Cancelled" Then
                            total += ds.Tables(0).Rows(j)("Cancelled")
                        End If
                    Next
                    e.Item.Cells(5).Text = total
                End If
                If level = "AE" Then
                    e.Item.Cells(2).Text = "Totals:"
                    For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                        If project = "Created" Then
                            total += ds.Tables(0).Rows(j)("Created")
                        End If
                        If project = "Completed" Then
                            total += ds.Tables(0).Rows(j)("Completed")
                        End If
                        If project = "Due" Then
                            total += ds.Tables(0).Rows(j)("Due")
                        End If
                        If project = "Pending" Then
                            total += ds.Tables(0).Rows(j)("Pending")
                        End If
                        If project = "Cancelled" Then
                            total += ds.Tables(0).Rows(j)("Cancelled")
                        End If
                    Next
                    e.Item.Cells(3).Text = total
                End If
                If level = "JT" Then
                    e.Item.Cells(2).Text = "Totals:"
                    For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                        If project = "Created" Then
                            total += ds.Tables(0).Rows(j)("Created")
                        End If
                        If project = "Completed" Then
                            total += ds.Tables(0).Rows(j)("Completed")
                        End If
                        If project = "Due" Then
                            total += ds.Tables(0).Rows(j)("Due")
                        End If
                        If project = "Pending" Then
                            total += ds.Tables(0).Rows(j)("Pending")
                        End If
                        If project = "Cancelled" Then
                            total += ds.Tables(0).Rows(j)("Cancelled")
                        End If
                    Next
                    e.Item.Cells(3).Text = total
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub RadGridDashComps_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGridDashComps.NeedDataSource
        Try
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            level = Request.QueryString("level")
            If level = "C" Then
                Me.RadGridDashComps.DataSource = Me.BuildClientDTDashComp
            End If
            If level = "CD" Then
                Me.RadGridDashComps.DataSource = Me.BuildDivisionDTDashComp
            End If
            If level = "CDP" Then
                Me.RadGridDashComps.DataSource = Me.BuildProductDTDashComp
            End If
            If level = "AE" Then
                Me.RadGridDashComps.DataSource = Me.BuildAccountExecutiveDTDashComp()
            End If
            If level = "dept" Then
                Me.RadGridDashComps.DataSource = Me.BuildDeptDTDashComp()
            End If
            If level = "SC" Then
                Me.RadGridDashComps.DataSource = Me.BuildSalesClassDTDashComp()
            End If
            If level = "JT" Then
                Me.RadGridDashComps.DataSource = Me.BuildJobTypeDTDashComp()
            End If

        Catch ex As Exception

        End Try
    End Sub

    Private Function buildRGClientDashComp()
        Try
            Me.RadGridDashComps.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildClientDTDashComp()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim total As Integer = 0
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clcodecol As DataColumn = New DataColumn("CODE")
            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            dtComps.Columns.Add(clcodecol)
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CODE") = ds.Tables(0).Rows(u)("CL_CODE")
                newrow.Item("CL_NAME") = ds.Tables(0).Rows(u)("CL_NAME")
                If project = "Created" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Created")
                End If
                If project = "Completed" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Completed")
                End If
                If project = "Due" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Due")
                End If
                If project = "Pending" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Pending")
                End If
                If project = "Cancelled" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Cancelled")
                End If
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGDivisionDashComp()
        Try
            Me.RadGridDashComps.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildDivisionDTDashComp()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim total As Integer = 0
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clcodecol As DataColumn = New DataColumn("CODE")
            dtComps.Columns.Add(clcodecol)
            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            dtComps.Columns.Add(clientcol)
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            dtComps.Columns.Add(division)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CODE") = ds.Tables(0).Rows(u)("CL_CODE")
                newrow.Item("CL_NAME") = ds.Tables(0).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(0).Rows(u)("DIV_NAME")
                If project = "Created" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Created")
                End If
                If project = "Completed" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Completed")
                End If
                If project = "Due" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Due")
                End If
                If project = "Pending" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Pending")
                End If
                If project = "Cancelled" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Cancelled")
                End If
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGProductDashComp()
        Try
            Me.RadGridDashComps.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildProductDTDashComp()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim total As Integer = 0
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clcodecol As DataColumn = New DataColumn("CODE")
            dtComps.Columns.Add(clcodecol)
            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            dtComps.Columns.Add(clientcol)
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            dtComps.Columns.Add(division)
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(product)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CODE") = ds.Tables(0).Rows(u)("CL_CODE")
                newrow.Item("CL_NAME") = ds.Tables(0).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(0).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(0).Rows(u)("PRD_DESCRIPTION")
                If project = "Created" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Created")
                End If
                If project = "Completed" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Completed")
                End If
                If project = "Due" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Due")
                End If
                If project = "Pending" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Pending")
                End If
                If project = "Cancelled" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Cancelled")
                End If
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGDashComp()
        Try
            Me.RadGridDashComps.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DP_TM_DESC"
            boundColumn.HeaderText = "Department"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildDeptDTDashComp()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim deptcol As DataColumn = New DataColumn("CODE")
            Dim dcol As DataColumn = New DataColumn("DP_TM_DESC")
            dtComps.Columns.Add(deptcol)
            dtComps.Columns.Add(dcol)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CODE") = ds.Tables(0).Rows(u)("DP_TM_CODE")
                newrow.Item("DP_TM_DESC") = ds.Tables(0).Rows(u)("DP_TM_DESC")
                If project = "Created" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Created")
                End If
                If project = "Completed" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Completed")
                End If
                If project = "Due" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Due")
                End If
                If project = "Pending" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Pending")
                End If
                If project = "Cancelled" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Cancelled")
                End If
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGAccountExecutiveDashComp()
        Try
            Me.RadGridDashComps.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "ACCT_NAME"
            boundColumn.HeaderText = "Account Executive"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildAccountExecutiveDTDashComp()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim deptcol As DataColumn = New DataColumn("CODE")
            Dim dcol As DataColumn = New DataColumn("ACCT_NAME")
            dtComps.Columns.Add(deptcol)
            dtComps.Columns.Add(dcol)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CODE") = ds.Tables(0).Rows(u)("ACCT_EXEC")
                newrow.Item("ACCT_NAME") = ds.Tables(0).Rows(u)("ACCT_NAME")
                If project = "Created" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Created")
                End If
                If project = "Completed" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Completed")
                End If
                If project = "Due" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Due")
                End If
                If project = "Pending" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Pending")
                End If
                If project = "Cancelled" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Cancelled")
                End If
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGSalesClassDashComp()
        Try
            Me.RadGridDashComps.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "SC_DESCRIPTION"
            boundColumn.HeaderText = "Sales Class"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildSalesClassDTDashComp()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim deptcol As DataColumn = New DataColumn("CODE")
            Dim dcol As DataColumn = New DataColumn("SC_DESCRIPTION")
            dtComps.Columns.Add(deptcol)
            dtComps.Columns.Add(dcol)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CODE") = ds.Tables(0).Rows(u)("SC_CODE")
                newrow.Item("SC_DESCRIPTION") = ds.Tables(0).Rows(u)("SC_DESCRIPTION")
                If project = "Created" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Created")
                End If
                If project = "Completed" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Completed")
                End If
                If project = "Due" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Due")
                End If
                If project = "Pending" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Pending")
                End If
                If project = "Cancelled" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Cancelled")
                End If
                dtComps.Rows.Add(newrow)
            Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGJobTypeDashComp()
        Try
            Me.RadGridDashComps.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "JT_DESC"
            boundColumn.HeaderText = "Job Type"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridDashComps.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildJobTypeDTDashComp()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetProjectsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim deptcol As DataColumn = New DataColumn("CODE")
            Dim dcol As DataColumn = New DataColumn("JT_DESC")
            dtComps.Columns.Add(deptcol)
            dtComps.Columns.Add(dcol)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CODE") = ds.Tables(0).Rows(u)("JOB_TYPE")
                newrow.Item("JT_DESC") = ds.Tables(0).Rows(u)("JT_DESC")
                If project = "Created" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Created")
                End If
                If project = "Completed" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Completed")
                End If
                If project = "Due" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Due")
                End If
                If project = "Pending" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Pending")
                End If
                If project = "Cancelled" Then
                    newrow.Item("COMPS") = ds.Tables(0).Rows(u)("Cancelled")
                End If
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

#End Region

#Region "Dashboard Project Year"

    Private Function CreateChart_DashboardProjectYear(Optional ByVal code As String = "", Optional ByVal code2 As String = "", Optional ByVal code3 As String = "", Optional ByVal name As String = "") As Telerik.Web.UI.RadHtmlChart

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        level = Request.QueryString("level")

        Dashboard = New cDashboard(_Session.ConnectionString, _Session.UserCode)

        Select Case level

            Case "C"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsByClient"), Session("DB_Client_Caption"), "month", project, level, week, month, year, code, type, "year", name)

            Case "CD"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsByCD"), Session("DB_CD_Caption"), "month", project, level, week, month, year, code, type, "year", name)

            Case "CDP"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsByCDP"), Session("DB_CDP_Caption"), "month", project, level, week, month, year, code, type, "year", name)

            Case "dept"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsByDept"), Session("DB_Dept_Caption"), "month", project, level, week, month, year, code, type, "year", name)

            Case "SC"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsBySalesClass"), Session("DB_SalesClass_Caption"), "month", project, level, week, month, year, code, type, "year", name)

            Case "AE"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsByAccountExecutive"), Session("DB_AccountExecutive_Caption"), "month", project, level, week, month, year, code, type, "year", name)

            Case "JT"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsByJobType"), Session("DB_JobType_Caption"), "month", project, level, week, month, year, code, type, "year", name)

        End Select

        If RadHtmlChart IsNot Nothing Then

            RadHtmlChart.Height = System.Web.UI.WebControls.Unit.Pixel(300)
            RadHtmlChart.Width = System.Web.UI.WebControls.Unit.Pixel(1100)

        End If

        Return RadHtmlChart

    End Function
    Private Sub CreateCharts_DashboardProjectYear_Department(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim DataSet As System.Data.DataSet = Nothing
        Dim DepartmentList As String() = Nothing

        If DeptCode <> "" Then

            DepartmentList = DeptCode.Split(",")

            For Each Department In DepartmentList

                DataTable = BuildYearDTDashYear(Department.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByDept") = DataTable
                Session("DB_Dept_Caption") = DataTable.Columns(1).ColumnName

                RadHtmlChart = CreateChart_DashboardProjectYear(Department.Replace("&", "").Replace("@", ""), "", "", Department)

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & Department.ToString.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetDepts("", Session("UserCode"))

            If DataSet.Tables(0).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(0).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildYearDTDashYear(DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByDept") = DataTable
                    Session("DB_Dept_Caption") = DataRow("DP_TM_DESC")

                    RadHtmlChart = CreateChart_DashboardProjectYear(DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", ""), "", "", DataRow("DP_TM_DESC"))

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectYear_SalesClass(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim SalesClassList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If sc <> "" Then

            SalesClassList = sc.Split(",")

            For Each SalesClass In SalesClassList

                DataTable = BuildYearDTSalesClassDashYear(SalesClass.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsBySalesClass") = DataTable
                Session("DB_SalesClass_Caption") = DataTable.Columns(1).ColumnName

                RadHtmlChart = CreateChart_DashboardProjectYear(SalesClass.Replace("&", "").Replace("@", ""), "", "", SalesClass)

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & SalesClass.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetSalesClass()

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildYearDTSalesClassDashYear(SqlDataReader("code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsBySalesClass") = DataTable
                    SalesClassList = SqlDataReader("description").ToString.Split("-")
                    Session("DB_SalesClass_Caption") = SalesClassList(1).Trim

                    RadHtmlChart = CreateChart_DashboardProjectYear(SqlDataReader("code").ToString.Replace("&", "").Replace("@", ""), "", "", SalesClassList(1).Trim)

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectYear_Client(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim ClientList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildYearDTClientDashYear(ClientCode.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByClient") = DataTable
                Session("DB_Client_Caption") = DataTable.Columns(1).ColumnName.Replace("'", "")

                RadHtmlChart = CreateChart_DashboardProjectYear(ClientCode.Replace("&", "").Replace("@", ""), "", "", ClientCode.Replace("'", ""))

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetClientList(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildYearDTClientDashYear(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByClient") = DataTable
                    ClientList = SqlDataReader("Description").ToString.Split("-")
                    Session("DB_Client_Caption") = ClientList(1).Trim.Replace("'", "")

                    RadHtmlChart = CreateChart_DashboardProjectYear(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""), "", "", ClientList(1).Trim.Replace("'", ""))

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectYear_Division(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim ClientList As String() = Nothing
        Dim DescriptionList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildYearDTCDDashYear(ClientCode.Replace("&", "").Replace("@", ""), "")
                Session("ds_DASH_CompsByCD") = DataTable
                Session("DB_CD_Caption") = DataTable.Columns(1).ColumnName.Replace("'", "")

                RadHtmlChart = CreateChart_DashboardProjectYear(ClientCode.Replace("&", "").Replace("@", ""), "", "", ClientCode.Replace("'", ""))

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetDivisionsAll(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    ClientList = SqlDataReader("Code").ToString.Split(":")
                    DataTable = BuildYearDTCDDashYear(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByCD") = DataTable
                    DescriptionList = SqlDataReader("Description").ToString.Split("-")
                    Session("DB_CD_Caption") = SqlDataReader("Description").Replace("'", "")

                    RadHtmlChart = CreateChart_DashboardProjectYear(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""), "", DescriptionList(1).Trim.Replace("'", ""))

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectYear_Product(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim ClientList As String() = Nothing
        Dim DescriptionList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildYearDTCDPDashYear(ClientCode.Replace("&", "").Replace("@", ""), "", "")
                Session("ds_DASH_CompsByCDP") = DataTable
                Session("DB_CDP_Caption") = DataTable.Columns(1).ColumnName.Replace("'", "")

                RadHtmlChart = CreateChart_DashboardProjectYear(ClientCode.Replace("&", "").Replace("@", ""), "", "", ClientCode.Replace("'", ""))

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetProductsAll(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    ClientList = SqlDataReader("Code").ToString.Split(":")
                    DataTable = BuildYearDTCDPDashYear(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""), ClientList(2).ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByCDP") = DataTable
                    DescriptionList = SqlDataReader("Description").ToString.Split("-")
                    Session("DB_CDP_Caption") = SqlDataReader("Description").Replace("'", "")

                    RadHtmlChart = CreateChart_DashboardProjectYear(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""), ClientList(2).ToString.Replace("&", "").Replace("@", ""), DescriptionList(1).Trim.Replace("'", ""))

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectYear_AccountExecutive(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim AEList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If ae <> "" Then

            AEList = ae.Split(",")

            For Each AcctExec In AEList

                If AcctExec <> "" Then

                    If AcctExec.Length = 1 Then

                        AcctExec = AcctExec & ","

                    End If

                    DataTable = BuildYearDTAccountExecutiveDashYear(AcctExec.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByAccountExecutive") = DataTable
                    Session("DB_AccountExecutive_Caption") = DataTable.Columns(1).ColumnName

                    RadHtmlChart = CreateChart_DashboardProjectYear(AcctExec.Replace("&", "").Replace("@", ""), "", "", AcctExec)

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & AcctExec.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                    End If

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetAccountExecutive("", "", "", Session("UserCodE"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildYearDTAccountExecutiveDashYear(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByAccountExecutive") = DataTable
                    Dim str() As String = SqlDataReader("Description").ToString.Split("-")
                    Session("DB_AccountExecutive_Caption") = str(1).Trim

                    RadHtmlChart = CreateChart_DashboardProjectYear(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""), "", "", str(1).Trim)

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectYear_JobType(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim JobNameDataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim JobTypeList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If jt <> "" Then

            JobTypeList = jt.Split(",")

            For Each JobType In JobTypeList

                DataTable = BuildYearDTJobTypeDashYear(JobType.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByJobType") = DataTable
                Session("DB_JobType_Caption") = DataTable.Columns(1).ColumnName

                RadHtmlChart = CreateChart_DashboardProjectYear(JobType.Replace("&", "").Replace("@", ""), "", "", JobType)

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & JobType.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            JobNameDataTable = DropDowns.ddJobName()

            If JobNameDataTable.Rows.Count > 0 Then

                For Each DataRow In JobNameDataTable.Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildYearDTJobTypeDashYear(DataRow("code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByJobType") = DataTable
                    Session("DB_JobType_Caption") = DataRow("description").ToString

                    RadHtmlChart = CreateChart_DashboardProjectYear(DataRow("code").ToString.Replace("&", "").Replace("@", ""), "", "", Str(1).Trim)

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderYear.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub LoadDataDashYear(Optional ByVal type As String = "Month")

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing

        Session("ds_DASH_NonDirect") = ""
        Session("ds_DASH_NonDirect") = Nothing

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        level = Request.QueryString("level")

        Me.PlaceHolderYear.Controls.Clear()

        Try

            Select Case level

                Case "dept"

                    CreateCharts_DashboardProjectYear_Department(Dashboard)

                Case "SC"

                    CreateCharts_DashboardProjectYear_SalesClass(Dashboard)

                Case "C"

                    CreateCharts_DashboardProjectYear_Client(Dashboard)

                Case "CD"

                    CreateCharts_DashboardProjectYear_Division(Dashboard)

                Case "CDP"

                    CreateCharts_DashboardProjectYear_Product(Dashboard)

                Case "AE"

                    CreateCharts_DashboardProjectYear_AccountExecutive(Dashboard)

                Case "JT"

                    CreateCharts_DashboardProjectYear_JobType(Dashboard)

            End Select

        Catch ex As Exception
            Me.ShowMessage(ex.Message.ToString())
        End Try

    End Sub

    Private Function BuildYearDTDashYear(ByVal dept As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
         
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, dept, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTSalesClassDashYear(ByVal sccode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sccode, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTClientDashYear(ByVal clientcode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTCDDashYear(ByVal clientcode As String, ByVal divisioncode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTCDPDashYear(ByVal clientcode As String, ByVal divisioncode As String, ByVal productcode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode, productcode)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() & "/" & dt.Rows(w)("PRD_DESCRIPTION").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTAccountExecutiveDashYear(ByVal aecode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, aecode, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTJobTypeDashYear(ByVal jtcode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jtcode, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGYearDashYear()
        Try
            Me.RadGridDashYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearSalesClassDashYear()
        Try
            Me.RadGridDashYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearClientDashYear()
        Try
            Me.RadGridDashYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearCDDashYear()
        Try
            Me.RadGridDashYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearCDPDashYear()
        Try
            Me.RadGridDashYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearAccountExecutiveDashYear()
        Try
            Me.RadGridDashYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearJobTypeDashYear()
        Try
            Me.RadGridDashYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

#End Region

#Region "Dashboard Project Month"

    Private Function BuildMonthDTDashMonth(ByVal dept As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, dept, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Month Opened") = ds.Tables(0).Rows(j)("MONTH_OPENED")
                newrow.Item("MS") = ds.Tables(0).Rows(j)("MONTH_START")
                newrow.Item("ME") = ds.Tables(0).Rows(j)("MONTH_END")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTSalesClassDashMonth(ByVal sccode As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sccode, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Month Opened") = ds.Tables(0).Rows(j)("MONTH_OPENED")
                newrow.Item("MS") = ds.Tables(0).Rows(j)("MONTH_START")
                newrow.Item("ME") = ds.Tables(0).Rows(j)("MONTH_END")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTClientDashMonth(ByVal clientcode As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Month Opened") = ds.Tables(0).Rows(j)("MONTH_OPENED")
                newrow.Item("MS") = ds.Tables(0).Rows(j)("MONTH_START")
                newrow.Item("ME") = ds.Tables(0).Rows(j)("MONTH_END")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTCDDashMonth(ByVal clientcode As String, ByVal divisioncode As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Month Opened") = ds.Tables(0).Rows(j)("MONTH_OPENED")
                newrow.Item("MS") = ds.Tables(0).Rows(j)("MONTH_START")
                newrow.Item("ME") = ds.Tables(0).Rows(j)("MONTH_END")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTCDPDashMonth(ByVal clientcode As String, ByVal divisioncode As String, ByVal productcode As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode, productcode)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Month Opened") = ds.Tables(0).Rows(j)("MONTH_OPENED")
                newrow.Item("MS") = ds.Tables(0).Rows(j)("MONTH_START")
                newrow.Item("ME") = ds.Tables(0).Rows(j)("MONTH_END")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() & "/" & dt.Rows(w)("PRD_DESCRIPTION").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTAccountExecutiveDashMonth(ByVal aecode As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, aecode, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Month Opened") = ds.Tables(0).Rows(j)("MONTH_OPENED")
                newrow.Item("MS") = ds.Tables(0).Rows(j)("MONTH_START")
                newrow.Item("ME") = ds.Tables(0).Rows(j)("MONTH_END")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTJobTypeDashMonth(ByVal jtcode As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jtcode, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Month Opened") = ds.Tables(0).Rows(j)("MONTH_OPENED")
                newrow.Item("MS") = ds.Tables(0).Rows(j)("MONTH_START")
                newrow.Item("ME") = ds.Tables(0).Rows(j)("MONTH_END")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function CreateChart_DashboardProjectMonth(Optional ByVal code As String = "", Optional ByVal code2 As String = "", Optional ByVal code3 As String = "", Optional ByVal name As String = "") As Telerik.Web.UI.RadHtmlChart

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        level = Request.QueryString("level")

        Dashboard = New Webvantage.cDashboard(_Session.ConnectionString, _Session.UserCode)

        Select Case level

            Case "C"

                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsByClient"), Session("DB_Client_Caption"), "month", project, level, week, month, year, code, type, "month", name)

            Case "CD"

                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsByCD"), Session("DB_CD_Caption"), "month", project, level, week, month, year, code, type, "month", name)

            Case "CDP"

                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsByCDP"), Session("DB_CDP_Caption"), "month", project, level, week, month, year, code, type, "month", name)

            Case "dept"

                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsByDept"), Session("DB_Dept_Caption"), "month", project, level, week, month, year, code, type, "month", name)

            Case "SC"

                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsBySalesClass"), Session("DB_SalesClass_Caption"), "month", project, level, week, month, year, code, type, "month", name)

            Case "AE"

                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsByAccountExecutive"), Session("DB_AccountExecutive_Caption"), "month", project, level, week, month, year, code, type, "month", name)

            Case "JT"

                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("ds_DASH_CompsByJobType"), Session("DB_JobType_Caption"), "month", project, level, week, month, year, code, type, "month", name)

        End Select

        If RadHtmlChart IsNot Nothing Then

            RadHtmlChart.Height = System.Web.UI.WebControls.Unit.Pixel(300)
            RadHtmlChart.Width = System.Web.UI.WebControls.Unit.Pixel(1100)

        End If

        CreateChart_DashboardProjectMonth = RadHtmlChart

    End Function
    Private Sub CreateCharts_DashboardProjectMonth_Department(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim DepartmentList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim DataSet As System.Data.DataSet = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing

        If DeptCode <> "" Then

            DepartmentList = DeptCode.Split(",")

            For Each Department In DepartmentList

                DataTable = BuildMonthDTDashMonth(Department.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByDept") = DataTable
                Session("DB_Dept_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_DashboardProjectMonth(Department.Replace("&", "").Replace("@", ""), "", "", Department)

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & Department.ToString.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetDepts("", Session("UserCode"))

            If DataSet.Tables(0).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(0).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildMonthDTDashMonth(DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByDept") = DataTable
                    Session("DB_Dept_Caption") = DataRow("DP_TM_DESC")

                    RadHtmlChart = CreateChart_DashboardProjectMonth(DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", ""), "", "", DataRow("DP_TM_DESC"))

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectMonth_SalesClass(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim SalesClassList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If sc <> "" Then

            SalesClassList = sc.Split(",")

            For Each SalesClass In SalesClassList

                DataTable = BuildMonthDTSalesClassDashMonth(SalesClass.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsBySalesClass") = DataTable
                Session("DB_SalesClass_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_DashboardProjectMonth(SalesClass.Replace("&", "").Replace("@", ""), "", "", SalesClass)

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & SalesClass.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetSalesClass()

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildMonthDTSalesClassDashMonth(SqlDataReader("code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsBySalesClass") = DataTable
                    SalesClassList = SqlDataReader("description").ToString.Split("-")

                    Session("DB_SalesClass_Caption") = SalesClassList(1).Trim

                    RadHtmlChart = CreateChart_DashboardProjectMonth(SqlDataReader("code").ToString.Replace("&", "").Replace("@", ""), "", "", SalesClassList(1).Trim)

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectMonth_Client(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildMonthDTClientDashMonth(ClientCode.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByClient") = DataTable
                Session("DB_Client_Caption") = DataTable.Columns(3).ColumnName.Replace("'", "")

                RadHtmlChart = CreateChart_DashboardProjectMonth(ClientCode.Replace("&", "").Replace("@", ""), "", "", ClientCode.Replace("'", ""))

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetClientList(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildMonthDTClientDashMonth(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByClient") = DataTable

                    ClientList = SqlDataReader("Description").ToString.Split("-")

                    Session("DB_Client_Caption") = ClientList(1).Trim.Replace("'", "")

                    RadHtmlChart = CreateChart_DashboardProjectMonth(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""), "", "", ClientList(1).Trim.Replace("'", ""))

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectMonth_Division(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim ClientList As String() = Nothing
        Dim DescriptionList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildMonthDTCDDashMonth(ClientCode.Replace("&", "").Replace("@", ""), "")
                Session("ds_DASH_CompsByCD") = DataTable
                Session("DB_CD_Caption") = DataTable.Columns(3).ColumnName.Replace("'", "")

                RadHtmlChart = CreateChart_DashboardProjectMonth(ClientCode.Replace("&", "").Replace("@", ""), "", "", ClientCode.Replace("'", ""))

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetDivisionsAll(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    ClientList = SqlDataReader("Code").ToString.Split(":")

                    DataTable = BuildMonthDTCDDashMonth(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByCD") = DataTable

                    DescriptionList = SqlDataReader("Description").ToString.Split("-")

                    Session("DB_CD_Caption") = SqlDataReader("Description").Replace("'", "")

                    RadHtmlChart = CreateChart_DashboardProjectMonth(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""), "", DescriptionList(1).Trim.Replace("'", ""))

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectMonth_Product(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim ClientList As String() = Nothing
        Dim DescriptionList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClienCode In ClientList

                DataTable = BuildMonthDTCDPDashMonth(ClienCode.Replace("&", "").Replace("@", ""), "", "")
                Session("ds_DASH_CompsByCDP") = DataTable
                Session("DB_CDP_Caption") = DataTable.Columns(3).ColumnName.Replace("'", "")

                RadHtmlChart = CreateChart_DashboardProjectMonth(ClienCode.Replace("&", "").Replace("@", ""), "", "", ClienCode.Replace("'", ""))

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClienCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetProductsAll(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    ClientList = SqlDataReader("Code").ToString.Split(":")

                    DataTable = BuildMonthDTCDPDashMonth(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""), ClientList(2).ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByCDP") = DataTable

                    DescriptionList = SqlDataReader("Description").ToString.Split("-")

                    Session("DB_CDP_Caption") = SqlDataReader("Description").Replace("'", "")

                    RadHtmlChart = CreateChart_DashboardProjectMonth(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""), ClientList(2).ToString.Replace("&", "").Replace("@", ""), DescriptionList(1).Trim.Replace("'", ""))

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectMonth_AccountExecutive(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim AEList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If ae <> "" Then

            AEList = ae.Split(",")

            For Each AcctExec In AEList

                If AcctExec <> "" Then

                    If AcctExec.Length = 1 Then

                        AcctExec = AcctExec & ","

                    End If

                    DataTable = BuildMonthDTAccountExecutiveDashMonth(AcctExec.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByAccountExecutive") = DataTable
                    Session("DB_AccountExecutive_Caption") = DataTable.Columns(3).ColumnName

                    RadHtmlChart = CreateChart_DashboardProjectMonth(AcctExec.Replace("&", "").Replace("@", ""), "", "", AcctExec)

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & AcctExec.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                    End If

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetAccountExecutive("", "", "", Session("UserCodE"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildMonthDTAccountExecutiveDashMonth(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByAccountExecutive") = DataTable

                    AEList = SqlDataReader("Description").ToString.Split("-")

                    Session("DB_AccountExecutive_Caption") = AEList(1).Trim

                    RadHtmlChart = CreateChart_DashboardProjectMonth(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""), "", "", AEList(1).Trim)

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectMonth_JobType(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim JobTypeList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing
        Dim JobNameDataTable As System.Data.DataTable = Nothing

        If jt <> "" Then

            JobTypeList = jt.Split(",")

            For Each JobType In JobTypeList

                DataTable = BuildMonthDTJobTypeDashMonth(JobType.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByJobType") = DataTable
                Session("DB_JobType_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_DashboardProjectMonth(JobType.Replace("&", "").Replace("@", ""), "", "", JobType)

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & JobType.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            JobNameDataTable = DropDowns.ddJobName()

            If JobNameDataTable.Rows.Count > 0 Then

                For Each DataRow In JobNameDataTable.Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildMonthDTJobTypeDashMonth(DataRow("code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByJobType") = DataTable
                    Session("DB_JobType_Caption") = DataRow("description").ToString

                    RadHtmlChart = CreateChart_DashboardProjectMonth(DataRow("code").ToString.Replace("&", "").Replace("@", ""), "", "", Str(1).Trim)

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderGraphMonth.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub LoadDataDashMonth()

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing

        Session("ds_DASH_NonDirect") = ""
        Session("ds_DASH_NonDirect") = Nothing

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        level = Request.QueryString("level")

        Try

            Me.PlaceHolderGraphMonth.Controls.Clear()

            Dashboard = New Webvantage.cDashboard(_Session.ConnectionString, _Session.UserCode)

            Select Case level

                Case "dept"

                    CreateCharts_DashboardProjectMonth_Department(Dashboard)

                Case "SC"

                    CreateCharts_DashboardProjectMonth_SalesClass(Dashboard)

                Case "C"

                    CreateCharts_DashboardProjectMonth_Client(Dashboard)

                Case "CD"

                    CreateCharts_DashboardProjectMonth_Division(Dashboard)

                Case "CDP"

                    CreateCharts_DashboardProjectMonth_Product(Dashboard)

                Case "AE"

                    CreateCharts_DashboardProjectMonth_AccountExecutive(Dashboard)

                Case "JT"

                    CreateCharts_DashboardProjectMonth_JobType(Dashboard)

            End Select

        Catch ex As Exception
            Me.ShowMessage(ex.Message.ToString())
        End Try

    End Sub

#End Region

#Region "Dashboard Project Graph"

    Private Function BuildWeekDT(ByVal dept As String)
        Try
            Dim count As Integer = 0
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, dept, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            Dim we As DataColumn = New DataColumn("WE")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)
            dtComps.Columns.Add(we)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                newrow.Item("WE") = ds.Tables(0).Rows(j)("WEEK_END")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 2 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", "", ds.Tables(1).Rows(i)("DP_TM_CODE"), "", "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("DP_TM_DESC").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function BuildWeekDTSalesClass(ByVal sccode As String)
        Try
            Dim count As Integer = 0
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sccode, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            Dim we As DataColumn = New DataColumn("WE")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)
            dtComps.Columns.Add(we)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                newrow.Item("WE") = ds.Tables(0).Rows(j)("WEEK_END")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 2 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", "", "", ds.Tables(1).Rows(i)("SC_CODE"), "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("SC_DESCRIPTION").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function BuildWeekDTClient(ByVal clientcode As String)
        Try
            Dim count As Integer = 0
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            Dim we As DataColumn = New DataColumn("WE")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)
            dtComps.Columns.Add(we)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                newrow.Item("WE") = ds.Tables(0).Rows(j)("WEEK_END")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", ds.Tables(1).Rows(i)("CL_CODE"), "", "", "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("CL_NAME").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function BuildWeekDTCD(ByVal clientcode As String, ByVal divisioncode As String)
        Try
            Dim count As Integer = 0

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode)

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            Dim we As DataColumn = New DataColumn("WE")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)
            dtComps.Columns.Add(we)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString(), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                newrow.Item("WE") = ds.Tables(0).Rows(j)("WEEK_END")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", ds.Tables(1).Rows(i)("CL_CODE"), "", "", "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("CL_NAME").ToString() & "/" & dt.Rows(j)("DIV_NAME").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function BuildWeekDTCDP(ByVal clientcode As String, ByVal divisioncode As String, ByVal productcode As String)
        Try
            Dim count As Integer = 0

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode, productcode)

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            Dim we As DataColumn = New DataColumn("WE")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)
            dtComps.Columns.Add(we)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString(), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString() & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                newrow.Item("WE") = ds.Tables(0).Rows(j)("WEEK_END")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() & "/" & dt.Rows(w)("PRD_DESCRIPTION").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", ds.Tables(1).Rows(i)("CL_CODE"), "", "", "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("CL_NAME").ToString() & "/" & dt.Rows(j)("DIV_NAME").ToString() & "/" & dt.Rows(j)("PRD_DESCRIPTION") Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function BuildWeekDTAccountExecutive(ByVal aecode As String)
        Try
            Dim count As Integer = 0
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
           

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, aecode, client, DeptCode, sc, ae, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            Dim we As DataColumn = New DataColumn("WE")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)
            dtComps.Columns.Add(we)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                newrow.Item("WE") = ds.Tables(0).Rows(j)("WEEK_END")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", ds.Tables(1).Rows(i)("ACCT_EXEC"), "", "", "", "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("ACCT_NAME").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function BuildWeekDTJobType(ByVal jtcode As String)
        Try
            Dim count As Integer = 0
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
           

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jtcode, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            Dim we As DataColumn = New DataColumn("WE")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)
            dtComps.Columns.Add(we)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                newrow.Item("WE") = ds.Tables(0).Rows(j)("WEEK_END")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", "", "", "", ds.Tables(1).Rows(i)("JOB_TYPE"), 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("JT_DESC").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function CreateChart_DashboardProjectGraph(Optional ByVal code As String = "", Optional ByVal code2 As String = "", Optional ByVal code3 As String = "", Optional ByVal name As String = "") As Telerik.Web.UI.RadHtmlChart

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        level = Request.QueryString("level")

        Dashboard = New Webvantage.cDashboard(_Session.ConnectionString, _Session.UserCode)

        Select Case level

            Case "C"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("DataSet_DASH_CompsByClient"), Session("DB_Client_Caption"), "", project, level, week, month, year, code, type, "week", name)

            Case "CD"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("DataSet_DASH_CompsByCD"), Session("DB_CD_Caption"), "", project, level, week, month, year, code, type, "week", name)

            Case "CDP"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("DataSet_DASH_CompsByCDP"), Session("DB_CDP_Caption"), "", project, level, week, month, year, code, type, "week", name)

            Case "dept"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("DataSet_DASH_CompsByDept"), Session("DB_Dept_Caption"), "", project, level, week, month, year, code, type, "week", name)

            Case "SC"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("DataSet_DASH_CompsBySalesClass"), Session("DB_SalesClass_Caption"), "", project, level, week, month, year, code, type, "week", name)

            Case "AE"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("DataSet_DASH_CompsByAccountExecutive"), Session("DB_AccountExecutive_Caption"), "", project, level, week, month, year, code, type, "week", name)

            Case "JT"
                RadHtmlChart = Dashboard.GetColumnChart_Comps(Session("DataSet_DASH_CompsByJobType"), Session("DB_JobType_Caption"), "", project, level, week, month, year, code, type, "week", name)

        End Select

        If RadHtmlChart IsNot Nothing Then

            RadHtmlChart.Height = System.Web.UI.WebControls.Unit.Pixel(300)
            RadHtmlChart.Width = System.Web.UI.WebControls.Unit.Pixel(1100)

        End If

        Return RadHtmlChart

    End Function
    Private Sub CreateCharts_DashboardProjectGraph_Department(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim DataSet As System.Data.DataSet = Nothing
        Dim DepartmentList As String() = Nothing

        If DeptCode <> "" Then

            DepartmentList = DeptCode.Split(",")

            For Each Department In DepartmentList

                DataTable = BuildWeekDT(Department.Replace("&", "").Replace("@", ""))
                Session("DataSet_DASH_CompsByDept") = DataTable
                Session("DB_Dept_Caption") = DataTable.Columns(4).ColumnName

                RadHtmlChart = CreateChart_DashboardProjectGraph(Department.Replace("&", "").Replace("@", ""), "", "", Department)

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & Department.ToString.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetDepts("", Session("UserCode"))

            If DataSet.Tables(0).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(0).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDT(DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", ""))
                    Session("DataSet_DASH_CompsByDept") = DataTable
                    Session("DB_Dept_Caption") = DataRow("DP_TM_DESC")

                    RadHtmlChart = CreateChart_DashboardProjectGraph(DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", ""), "", "", DataRow("DP_TM_DESC"))

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectGraph_SalesClass(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim SalesClassList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If sc <> "" Then

            SalesClassList = sc.Split(",")

            For Each SalesClass In SalesClassList

                DataTable = BuildWeekDTSalesClass(SalesClass.Replace("&", "").Replace("@", ""))
                Session("DataSet_DASH_CompsBySalesClass") = DataTable
                Session("DB_SalesClass_Caption") = DataTable.Columns(4).ColumnName

                RadHtmlChart = CreateChart_DashboardProjectGraph(SalesClass.Replace("&", "").Replace("@", ""), "", "", SalesClass)

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & SalesClass.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetSalesClass()

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildWeekDTSalesClass(SqlDataReader("code").ToString.Replace("&", "").Replace("@", ""))
                    Session("DataSet_DASH_CompsBySalesClass") = DataTable
                    SalesClassList = SqlDataReader("description").ToString.Split("-")
                    Session("DB_SalesClass_Caption") = SalesClassList(1).Trim

                    RadHtmlChart = CreateChart_DashboardProjectGraph(SqlDataReader("code").ToString.Replace("&", "").Replace("@", ""), "", "", SalesClassList(1).Trim)

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)
                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectGraph_Client(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim ClientList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildWeekDTClient(ClientCode.Replace("&", "").Replace("@", ""))
                Session("DataSet_DASH_CompsByClient") = DataTable
                Session("DB_Client_Caption") = DataTable.Columns(4).ColumnName

                RadHtmlChart = CreateChart_DashboardProjectGraph(ClientCode.Replace("&", "").Replace("@", ""), "", "", ClientCode.Replace("'", ""))

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetClientList(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildWeekDTClient(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""))
                    Session("DataSet_DASH_CompsByClient") = DataTable
                    ClientList = SqlDataReader("Description").ToString.Split("-")
                    Session("DB_Client_Caption") = ClientList(1).Trim

                    RadHtmlChart = CreateChart_DashboardProjectGraph(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""), "", "", ClientList(1).Trim.Replace("'", ""))

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectGraph_Division(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim ClientList As String() = Nothing
        Dim DescriptionList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildWeekDTCD(ClientCode.Replace("&", "").Replace("@", ""), "")
                Session("DataSet_DASH_CompsByCD") = DataTable
                Session("DB_CD_Caption") = DataTable.Columns(4).ColumnName

                RadHtmlChart = CreateChart_DashboardProjectGraph(ClientCode.Replace("&", "").Replace("@", ""), "", "", ClientCode.Replace("'", ""))

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetDivisionsAll(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    ClientList = SqlDataReader("Code").ToString.Split(":")
                    DataTable = BuildWeekDTCD(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""))
                    Session("DataSet_DASH_CompsByCD") = DataTable
                    DescriptionList = SqlDataReader("Description").ToString.Split("-")
                    Session("DB_CD_Caption") = SqlDataReader("Description")

                    RadHtmlChart = CreateChart_DashboardProjectGraph(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""), "", DescriptionList(1).Trim.Replace("'", ""))

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectGraph_Product(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim ClientList As String() = Nothing
        Dim DescriptionList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildWeekDTCDP(ClientCode.Replace("&", "").Replace("@", ""), "", "")
                Session("DataSet_DASH_CompsByCDP") = DataTable
                Session("DB_CDP_Caption") = DataTable.Columns(4).ColumnName

                RadHtmlChart = CreateChart_DashboardProjectGraph(ClientCode.Replace("&", "").Replace("@", ""), "", "", ClientCode.Replace("'", ""))

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetProductsAll(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    ClientList = SqlDataReader("Code").ToString.Split(":")
                    DataTable = BuildWeekDTCDP(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""), ClientList(2).ToString.Replace("&", "").Replace("@", ""))
                    Session("DataSet_DASH_CompsByCDP") = DataTable
                    DescriptionList = SqlDataReader("Description").ToString.Split("-")
                    Session("DB_CDP_Caption") = SqlDataReader("Description")

                    RadHtmlChart = CreateChart_DashboardProjectGraph(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""), ClientList(2).ToString.Replace("&", "").Replace("@", ""), DescriptionList(1).Trim.Replace("'", ""))

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectGraph_AccountExecutive(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim AEList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If ae <> "" Then

            AEList = ae.Split(",")

            For Each AcctExec In AEList

                If AcctExec <> "" Then

                    If AcctExec.Length = 1 Then

                        AcctExec = AcctExec & ","

                    End If

                    DataTable = BuildWeekDTAccountExecutive(AcctExec.Replace("&", "").Replace("@", ""))
                    Session("DataSet_DASH_CompsByAccountExecutive") = DataTable
                    Session("DB_AccountExecutive_Caption") = DataTable.Columns(4).ColumnName

                    RadHtmlChart = CreateChart_DashboardProjectGraph(AcctExec.Replace("&", "").Replace("@", ""), "", "", AcctExec)

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & AcctExec.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                    End If

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetAccountExecutive("", "", "", Session("UserCodE"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildWeekDTAccountExecutive(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""))
                    Session("DataSet_DASH_CompsByAccountExecutive") = DataTable
                    AEList = SqlDataReader("Description").ToString.Split("-")
                    Session("DB_AccountExecutive_Caption") = AEList(1).Trim

                    RadHtmlChart = CreateChart_DashboardProjectGraph(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""), "", "", AEList(1).Trim)

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_DashboardProjectGraph_JobType(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim JobNameDataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim JobTypeList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If jt <> "" Then

            JobTypeList = jt.Split(",")

            For Each JobType In JobTypeList

                DataTable = BuildWeekDTJobType(JobType.Replace("&", "").Replace("@", ""))
                Session("DataSet_DASH_CompsByJobType") = DataTable
                Session("DB_JobType_Caption") = DataTable.Columns(4).ColumnName

                RadHtmlChart = CreateChart_DashboardProjectGraph(JobType.Replace("&", "").Replace("@", ""), "", "", JobType)

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & JobType.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            JobNameDataTable = DropDowns.ddJobName()

            If JobNameDataTable.Rows.Count > 0 Then

                For Each DataRow In JobNameDataTable.Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTJobType(DataRow("code").ToString.Replace("&", "").Replace("@", ""))
                    Session("DataSet_DASH_CompsByJobType") = DataTable
                    Session("DB_JobType_Caption") = DataRow("description").ToString

                    RadHtmlChart = CreateChart_DashboardProjectGraph(DataRow("code").ToString.Replace("&", "").Replace("@", ""), "", "", Str(1).Trim)

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderGraph.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub

    Private Sub LoadDataGraph()

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing

        Session("ds_DASH_NonDirect") = ""
        Session("ds_DASH_NonDirect") = Nothing

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        level = Request.QueryString("level")

        Me.PlaceHolderGraph.Controls.Clear()

        Try

            Dashboard = New cDashboard(_Session.ConnectionString, _Session.UserCode)

            Select Case level

                Case "dept"

                    CreateCharts_DashboardProjectGraph_Department(Dashboard)

                Case "SC"

                    CreateCharts_DashboardProjectGraph_SalesClass(Dashboard)

                Case "C"

                    CreateCharts_DashboardProjectGraph_Client(Dashboard)

                Case "CD"

                    CreateCharts_DashboardProjectGraph_Division(Dashboard)

                Case "CDP"

                    CreateCharts_DashboardProjectGraph_Product(Dashboard)

                Case "AE"

                    CreateCharts_DashboardProjectGraph_AccountExecutive(Dashboard)

                Case "JT"

                    CreateCharts_DashboardProjectGraph_JobType(Dashboard)

            End Select

        Catch ex As Exception
            Me.ShowMessage(ex.Message.ToString())
        End Try

    End Sub

#End Region

#Region "Dashboard Project List"

    Private Sub RadGridProjects_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridProjects.ItemDataBound
        Try
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then
                Dim str As String = e.Item.Cells(2).Text 'job
                Dim str2 As String = e.Item.Cells(3).Text
                Dim str3 As String = e.Item.Cells(4).Text
                Dim str4 As String = e.Item.Cells(5).Text

                e.Item.Cells(2).Text = e.Item.Cells(2).Text.PadLeft(6, "0") & "-" & e.Item.Cells(4).Text.PadLeft(2, "0")

                Dim datetype As DateTime
                If e.Item.Cells(14).Text <> "" And e.Item.Cells(14).Text <> "&nbsp;" Then
                    datetype = CDate(e.Item.Cells(14).Text)
                    e.Item.Cells(14).Text = datetype.ToShortDateString
                End If
                If e.Item.Cells(15).Text <> "" And e.Item.Cells(15).Text <> "&nbsp;" Then
                    datetype = CDate(e.Item.Cells(15).Text)
                    e.Item.Cells(15).Text = datetype.ToShortDateString
                End If
                If e.Item.Cells(16).Text <> "" And e.Item.Cells(16).Text <> "&nbsp;" Then 'completed
                    datetype = CDate(e.Item.Cells(16).Text)
                    e.Item.Cells(16).Text = datetype.ToShortDateString
                End If
                If e.Item.Cells(15).Text <> "" And e.Item.Cells(15).Text <> "&nbsp;" And e.Item.Cells(16).Text <> "" And e.Item.Cells(16).Text <> "&nbsp;" Then
                    Dim due As DateTime = CDate(e.Item.Cells(15).Text)
                    Dim completed As DateTime = CDate(e.Item.Cells(16).Text)
                    Dim time As TimeSpan = completed.Subtract(due)
                    e.Item.Cells(17).Text = time.Days
                Else
                    e.Item.Cells(17).Text = ""
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub RadGridProjects_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGridProjects.NeedDataSource
        Try
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim count As Integer = 0
            Dim cde As String
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            cde = Request.QueryString("code").Replace("andcode", "&")
            If cde = "None" Then
                cde = ""
            End If
            If Request.QueryString("type") = "cli" Then
                Me.RadGridProjects.DataSource = dash.GetProjectsList("", month, year, week, OfficeCode, ae, cde, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Request.QueryString("type") = "div" Then
                Me.RadGridProjects.DataSource = dash.GetProjectsList("", month, year, week, OfficeCode, ae, cde, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Request.QueryString("type") = "prd" Then
                Me.RadGridProjects.DataSource = dash.GetProjectsList("", month, year, week, OfficeCode, ae, cde, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Request.QueryString("type") = "acc" Then
                Me.RadGridProjects.DataSource = dash.GetProjectsList("", month, year, week, OfficeCode, cde, "", DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Request.QueryString("type") = "dept" Then
                Me.RadGridProjects.DataSource = dash.GetProjectsList("", month, year, week, OfficeCode, ae, client, cde, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Request.QueryString("type") = "sc" Then
                Me.RadGridProjects.DataSource = dash.GetProjectsList("", month, year, week, OfficeCode, ae, client, DeptCode, cde, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Request.QueryString("type") = "jt" Then
                Me.RadGridProjects.DataSource = dash.GetProjectsList("", month, year, week, OfficeCode, ae, client, DeptCode, sc, cde, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

        Catch ex As Exception

        End Try
    End Sub

#End Region

#Region "Dashboard Project Detail"

    Private Sub RadGridComps_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridComps.ItemDataBound
        Try
            Dim countyear As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, countyear)
            Dim total As Integer
            Dim count As Integer
            Dim fourweektotal As Integer
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then


            ElseIf e.Item.ItemType = GridItemType.Footer Then
                e.Item.Cells(3).Text = "Totals:"
                If level = "dept" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "SC" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "C" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "CD" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "CDP" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "AE" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "JT" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub
    Private Sub RadGridComps_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGridComps.NeedDataSource
        Try
            If level = "dept" Then
                Me.RadGridComps.DataSource = BuildWeekDT()
            End If
            If level = "SC" Then
                Me.RadGridComps.DataSource = BuildWeekDTSalesClass()
            End If
            If level = "C" Then
                Me.RadGridComps.DataSource = BuildWeekDTClient()
            End If
            If level = "CD" Then
                Me.RadGridComps.DataSource = BuildWeekDTCD()
            End If
            If level = "CDP" Then
                Me.RadGridComps.DataSource = BuildWeekDTCDP()
            End If
            If level = "AE" Then
                Me.RadGridComps.DataSource = BuildWeekDTAccountExecutive()
            End If
            If level = "JT" Then
                Me.RadGridComps.DataSource = BuildWeekDTJobType()
            End If
        Catch ex As Exception

        End Try
    End Sub

    Public Sub RadGridComp_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs)
        Try
            Dim dt As DataTable
            If level = "C" Then
                dt = Me.BuildWeekDTClient()
            End If
            If level = "CD" Then
                dt = Me.BuildWeekDTCD()
            End If
            If level = "CDP" Then
                dt = Me.BuildWeekDTCDP()
            End If
            If level = "dept" Then
                dt = Me.BuildWeekDT()
            End If
            If level = "SC" Then
                dt = Me.BuildWeekDTSalesClass()
            End If
            If level = "AE" Then
                dt = Me.BuildWeekDTAccountExecutive()
            End If
            If level = "JT" Then
                dt = Me.BuildWeekDTJobType()
            End If
            dt.Columns.Remove("Date Opened")
            dt.Columns.Remove("WS")
            sender.DataSource = dt
        Catch ex As Exception

        End Try
    End Sub
    Public Sub RadGridComp_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs)
        Try
            Dim countyear As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, countyear)
            Dim total As Integer
            Dim count As Integer
            Dim fourweektotal As Integer
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then


            ElseIf e.Item.ItemType = GridItemType.Footer Then
                e.Item.Cells(2).Text = "Totals:"
                If level = "dept" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "SC" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "C" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "CD" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "CDP" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "AE" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "JT" Then
                    For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridComps.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridComps.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridComps.MasterTableView.Columns(i).OrderIndex - 1).Text = total
                            End If
                        Next
                    Next
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub RadGridMonth_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridMonth.ItemDataBound
        Try
            Dim countyear As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, countyear)
            Dim total As Integer
            Dim totalmonth As Integer
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then

            ElseIf e.Item.ItemType = GridItemType.Footer Then
                e.Item.Cells(2).Text = "Totals:"
                If Request.QueryString("eopt") = "True" Then
                    If level = "dept" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "SC" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "C" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "CD" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "CDP" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "AE" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "JT" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                Else
                    If level = "dept" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("COMPS"))
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Department" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = totalmonth
                            End If
                        Next
                    End If
                    If level = "SC" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("COMPS"))
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Sales Class" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = totalmonth
                            End If
                        Next
                    End If
                    If level = "C" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("COMPS"))
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Client" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = totalmonth
                            End If
                        Next
                    End If
                    If level = "CD" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("COMPS"))
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Division" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = totalmonth
                            End If
                        Next
                    End If
                    If level = "CDP" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("COMPS"))
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Division" And Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Product" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = totalmonth
                            End If
                        Next
                    End If
                    If level = "AE" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("COMPS"))
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Account Executive" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = totalmonth
                            End If
                        Next
                    End If
                    If level = "JT" Then
                        For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("COMPS"))
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonth.MasterTableView.Columns(i).HeaderText <> "Job Type" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = totalmonth
                            End If
                        Next
                    End If
                End If

            End If
        Catch ex As Exception

        End Try
    End Sub
    Private Sub RadGridMonth_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGridMonth.NeedDataSource
        Try
            If Request.QueryString("eopt") = "True" Then
                If level = "dept" Then
                    Me.RadGridMonth.DataSource = BuildMonthDT()
                End If
                If level = "SC" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTSalesClass()
                End If
                If level = "C" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTClient()
                End If
                If level = "CD" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTCD()
                End If
                If level = "CDP" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTCDP()
                End If
                If level = "AE" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTAccountExecutive()
                End If
                If level = "JT" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTJobType()
                End If
            Else
                If level = "dept" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTExport()
                End If
                If level = "SC" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTSalesClassExport()
                End If
                If level = "C" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTClientExport()
                End If
                If level = "CD" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTCDExport()
                End If
                If level = "CDP" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTCDPExport()
                End If
                If level = "AE" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTAccountExecutiveExport()
                End If
                If level = "JT" Then
                    Me.RadGridMonth.DataSource = BuildMonthDTJobTypeExport()
                End If
            End If


        Catch ex As Exception

        End Try
    End Sub

    Public Sub RadGridMth_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs)
        Try
            sender.DataSource = Me.RadGridMonth.DataSource
        Catch ex As Exception

        End Try
    End Sub
    Public Sub RadGridMth_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs)
        Try
            Dim countyear As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, countyear)
            Dim total As Integer
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then

            ElseIf e.Item.ItemType = GridItemType.Footer Then
                e.Item.Cells(2).Text = "Totals:"
                If level = "dept" Then
                    For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "SC" Then
                    For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "C" Then
                    For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "CD" Then
                    For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "CDP" Then
                    For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "AE" Then
                    For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "JT" Then
                    For i As Integer = 0 To Me.RadGridMonth.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridMonth.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridMonth.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridMonth.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub RadGridYear_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridYear.ItemDataBound
        Try
            Dim countyear As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, countyear)
            Dim total As Integer
            Dim totalyear As Integer
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then

            ElseIf e.Item.ItemType = GridItemType.Footer Then
                e.Item.Cells(2).Text = "Totals:"
                If Request.QueryString("eopt") = "True" Then
                    If level = "dept" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "SC" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "C" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "CD" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "CDP" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "AE" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "JT" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                    total += ds.Tables(3).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                Else
                    If level = "dept" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalyear = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                    totalyear += ds.Tables(2).Rows(j)("COMPS")
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Department" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = totalyear
                            End If
                        Next
                    End If
                    If level = "SC" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalyear = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                    totalyear += ds.Tables(2).Rows(j)("COMPS")
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Sales Class" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = totalyear
                            End If
                        Next
                    End If
                    If level = "C" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalyear = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                    totalyear += ds.Tables(2).Rows(j)("COMPS")
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Client" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = totalyear
                            End If
                        Next
                    End If
                    If level = "CD" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalyear = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                    totalyear += ds.Tables(2).Rows(j)("COMPS")
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Division" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = totalyear
                            End If
                        Next
                    End If
                    If level = "CDP" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalyear = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                    totalyear += ds.Tables(2).Rows(j)("COMPS")
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Division" And Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Product" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = totalyear
                            End If
                        Next
                    End If
                    If level = "AE" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalyear = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                    totalyear += ds.Tables(2).Rows(j)("COMPS")
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Account Executive" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = totalyear
                            End If
                        Next
                    End If
                    If level = "JT" Then
                        For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                            'For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            '    Dim str As String = Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "")
                            '    If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                            '        total += ds.Tables(3).Rows(j)("COMPS")
                            '    End If
                            '    If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                            '        e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            '    End If
                            'Next
                            totalyear = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                    totalyear += ds.Tables(2).Rows(j)("COMPS")
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYear.MasterTableView.Columns(i).HeaderText <> "Job Type" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = totalyear
                            End If
                        Next
                    End If
                End If

            End If
        Catch ex As Exception

        End Try
    End Sub
    Private Sub RadGridYear_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGridYear.NeedDataSource
        Try
            If Request.QueryString("eopt") = "True" Then
                If level = "dept" Then
                    Me.RadGridYear.DataSource = BuildYearDT()
                End If
                If level = "SC" Then
                    Me.RadGridYear.DataSource = BuildYearDTSalesClass()
                End If
                If level = "C" Then
                    Me.RadGridYear.DataSource = BuildYearDTClient()
                End If
                If level = "CD" Then
                    Me.RadGridYear.DataSource = BuildYearDTCD()
                End If
                If level = "CDP" Then
                    Me.RadGridYear.DataSource = BuildYearDTCDP()
                End If
                If level = "AE" Then
                    Me.RadGridYear.DataSource = BuildYearDTAccountExecutive()
                End If
                If level = "JT" Then
                    Me.RadGridYear.DataSource = BuildYearDTJobType()
                End If
            Else
                If level = "dept" Then
                    Me.RadGridYear.DataSource = BuildYearDTExport()
                End If
                If level = "SC" Then
                    Me.RadGridYear.DataSource = BuildYearDTSalesClassExport()
                End If
                If level = "C" Then
                    Me.RadGridYear.DataSource = BuildYearDTClientExport()
                End If
                If level = "CD" Then
                    Me.RadGridYear.DataSource = BuildYearDTCDExport()
                End If
                If level = "CDP" Then
                    Me.RadGridYear.DataSource = BuildYearDTCDPExport()
                End If
                If level = "AE" Then
                    Me.RadGridYear.DataSource = BuildYearDTAccountExecutiveExport()
                End If
                If level = "JT" Then
                    Me.RadGridYear.DataSource = BuildYearDTJobTypeExport()
                End If
            End If


        Catch ex As Exception

        End Try
    End Sub

    Public Sub RadGridYr_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs)
        Try
            sender.DataSource = Me.RadGridYear.DataSource
        Catch ex As Exception

        End Try
    End Sub
    Public Sub RadGridYr_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs)
        Try
            Dim countyear As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, countyear)
            Dim total As Integer
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then

            ElseIf e.Item.ItemType = GridItemType.Footer Then
                e.Item.Cells(2).Text = "Totals:"
                If level = "dept" Then
                    For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "SC" Then
                    For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "C" Then
                    For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "CD" Then
                    For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "CDP" Then
                    For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "AE" Then
                    For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "JT" Then
                    For i As Integer = 0 To Me.RadGridYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridYear.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(3).Rows(j)("COMPS")
                                total += ds.Tables(3).Rows(j)("COMPS")
                            End If
                            If Me.RadGridYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridYear.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub RadGridWrapper_ItemCreated(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridWrapper.ItemCreated
        Try
            If e.Item.ItemType = GridItemType.Header Then
                e.Item.Visible = False
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Function BuildWeekDT()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                If LoGlo.UserCultureGet() = "en-US" Or LoGlo.UserCultureGet = "zh-CN" Then
                    newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                ElseIf LoGlo.UserCultureGet = "fr-FR" Or LoGlo.UserCultureGet = "es-ES" Then
                    newrow.Item("Range") = sdate.Day & "/" & sdate.Month & " - " & edate.Day & "/" & edate.Month
                Else
                    newrow.Item("Range") = sdate.Day & "." & sdate.Month & " - " & edate.Day & "." & edate.Month
                End If
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", "", ds.Tables(1).Rows(i)("DP_TM_CODE"), "", "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("DP_TM_DESC").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDT()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDT()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function BuildWeekDTSalesClass()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                If LoGlo.UserCultureGet() = "en-US" Or LoGlo.UserCultureGet = "zh-CN" Then
                    newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                ElseIf LoGlo.UserCultureGet = "fr-FR" Or LoGlo.UserCultureGet = "es-ES" Then
                    newrow.Item("Range") = sdate.Day & "/" & sdate.Month & " - " & edate.Day & "/" & edate.Month
                Else
                    newrow.Item("Range") = sdate.Day & "." & sdate.Month & " - " & edate.Day & "." & edate.Month
                End If
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", "", "", ds.Tables(1).Rows(i)("SC_CODE"), "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("SC_DESCRIPTION").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTSalesClass()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTSalesClass()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function BuildWeekDTClient()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                If LoGlo.UserCultureGet() = "en-US" Or LoGlo.UserCultureGet = "zh-CN" Then
                    newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                ElseIf LoGlo.UserCultureGet = "fr-FR" Or LoGlo.UserCultureGet = "es-ES" Then
                    newrow.Item("Range") = sdate.Day & "/" & sdate.Month & " - " & edate.Day & "/" & edate.Month
                Else
                    newrow.Item("Range") = sdate.Day & "." & sdate.Month & " - " & edate.Day & "." & edate.Month
                End If
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", ds.Tables(1).Rows(i)("CL_CODE"), "", "", "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("CL_NAME").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTClient()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTClient()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function BuildWeekDTCD()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString(), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                If LoGlo.UserCultureGet() = "en-US" Or LoGlo.UserCultureGet = "zh-CN" Then
                    newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                ElseIf LoGlo.UserCultureGet = "fr-FR" Or LoGlo.UserCultureGet = "es-ES" Then
                    newrow.Item("Range") = sdate.Day & "/" & sdate.Month & " - " & edate.Day & "/" & edate.Month
                Else
                    newrow.Item("Range") = sdate.Day & "." & sdate.Month & " - " & edate.Day & "." & edate.Month
                End If
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", ds.Tables(1).Rows(i)("CL_CODE"), "", "", "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("CL_NAME").ToString() & "/" & dt.Rows(j)("DIV_NAME").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTCD()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTCD()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function BuildWeekDTCDP()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString(), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString() & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                If LoGlo.UserCultureGet() = "en-US" Or LoGlo.UserCultureGet = "zh-CN" Then
                    newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                ElseIf LoGlo.UserCultureGet = "fr-FR" Or LoGlo.UserCultureGet = "es-ES" Then
                    newrow.Item("Range") = sdate.Day & "/" & sdate.Month & " - " & edate.Day & "/" & edate.Month
                Else
                    newrow.Item("Range") = sdate.Day & "." & sdate.Month & " - " & edate.Day & "." & edate.Month
                End If
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() & "/" & dt.Rows(w)("PRD_DESCRIPTION").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", ds.Tables(1).Rows(i)("CL_CODE"), "", "", "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("CL_NAME").ToString() & "/" & dt.Rows(j)("DIV_NAME").ToString() & "/" & dt.Rows(j)("PRD_DESCRIPTION").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTCDP()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() & "/" & dt.Rows(w)("PRD_DESCRIPTION").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTCDP()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() & "/" & dt.Rows(w)("PRD_DESCRIPTION").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function BuildWeekDTAccountExecutive()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                If LoGlo.UserCultureGet() = "en-US" Or LoGlo.UserCultureGet = "zh-CN" Then
                    newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                ElseIf LoGlo.UserCultureGet = "fr-FR" Or LoGlo.UserCultureGet = "es-ES" Then
                    newrow.Item("Range") = sdate.Day & "/" & sdate.Month & " - " & edate.Day & "/" & edate.Month
                Else
                    newrow.Item("Range") = sdate.Day & "." & sdate.Month & " - " & edate.Day & "." & edate.Month
                End If
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", ds.Tables(1).Rows(i)("ACCT_EXEC"), "", "", "", "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("ACCT_NAME").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTAccountExecutive()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTAccountExecutive()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function BuildWeekDTJobType()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                If LoGlo.UserCultureGet() = "en-US" Or LoGlo.UserCultureGet = "zh-CN" Then
                    newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                ElseIf LoGlo.UserCultureGet = "fr-FR" Or LoGlo.UserCultureGet = "es-ES" Then
                    newrow.Item("Range") = sdate.Day & "/" & sdate.Month & " - " & edate.Day & "/" & edate.Month
                Else
                    newrow.Item("Range") = sdate.Day & "." & sdate.Month & " - " & edate.Day & "." & edate.Month
                End If
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Dim dsAvg As DataSet
            For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", "", "", "", ds.Tables(1).Rows(i)("JOB_TYPE"), 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
                For p As Integer = 0 To dtComps.Rows.Count - 1
                    dtWeek = dsAvg.Tables(0).DefaultView
                    dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
                    dt = dtWeek.ToTable
                    For j As Integer = 0 To dt.Rows.Count - 1
                        For q As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(q).ColumnName = dt.Rows(j)("JT_DESC").ToString() Then
                                dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
                            End If
                        Next
                    Next
                Next
            Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTJobType()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTJobType()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JOB_TYPE"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("JOB_TYPE").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRG()
        Try
            Me.RadGridComps.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("DP_TM_DESC") & " (4 Week Avg)"
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("DP_TM_DESC") & " (4 Week Avg)"
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If
        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonth()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Month Opened"
            boundColumn.HeaderText = "Month Opened"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYear()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGSalesClass()
        Try
            Me.RadGridComps.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("SC_DESCRIPTION") & " (4 Week Avg)"
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("SC_DESCRIPTION") & " (4 Week Avg)"
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If
        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthSalesClass()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Month Opened"
            boundColumn.HeaderText = "Month Opened"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearSalesClass()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGClient()
        Try
            Me.RadGridComps.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME") & " (4 Week Avg)"
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME") & " (4 Week Avg)"
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthClient()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Month Opened"
            boundColumn.HeaderText = "Month Opened"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearClient()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGCD()
        Try
            Me.RadGridComps.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & " (4 Week Avg)"
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & " (4 Week Avg)"
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If
        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthCD()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Month Opened"
            boundColumn.HeaderText = "Month Opened"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearCD()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGCDP()
        Try
            Me.RadGridComps.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION") & " (4 Week Avg)"
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION") & " (4 Week Avg)"
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If
        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthCDP()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Month Opened"
            boundColumn.HeaderText = "Month Opened"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearCDP()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGAccountExecutive()
        Try
            Me.RadGridComps.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("ACCT_NAME") & " (4 Week Avg)"
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("ACCT_NAME") & " (4 Week Avg)"
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If
        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthAccountExecutive()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Month Opened"
            boundColumn.HeaderText = "Month Opened"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearAccountExecutive()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGJobType()
        Try
            Me.RadGridComps.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByWeekByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridComps.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("JT_DESC") & " (4 Week Avg)"
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("JT_DESC") & " (4 Week Avg)"
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridComps.MasterTableView.Columns.Add(boundColumn)
                Next
            End If
        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthJobType()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Month Opened"
            boundColumn.HeaderText = "Month Opened"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearJobType()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

    'Export row
    Private Function BuildYearDTExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Department")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Department") = ds.Tables(1).Rows(j)("DP_TM_DESC")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "DP_TM_CODE = '" & ds.Tables(1).Rows(j)("DP_TM_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTSalesClassExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Sales Class")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Sales Class") = ds.Tables(1).Rows(j)("SC_DESCRIPTION")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "SC_CODE = '" & ds.Tables(1).Rows(j)("SC_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Client")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTCDExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim colclient As DataColumn = New DataColumn("Client")
            Dim coldivision As DataColumn = New DataColumn("Division")
            dtComps.Columns.Add(colclient)
            dtComps.Columns.Add(coldivision)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                newrow.Item("Division") = ds.Tables(1).Rows(j)("DIV_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "' AND DIV_CODE = '" & ds.Tables(1).Rows(j)("DIV_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTCDPExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim colclient As DataColumn = New DataColumn("Client")
            Dim coldivision As DataColumn = New DataColumn("Division")
            Dim colproduct As DataColumn = New DataColumn("Product")
            dtComps.Columns.Add(colclient)
            dtComps.Columns.Add(coldivision)
            dtComps.Columns.Add(colproduct)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                newrow.Item("Division") = ds.Tables(1).Rows(j)("DIV_NAME")
                newrow.Item("Product") = ds.Tables(1).Rows(j)("PRD_DESCRIPTION")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "' AND DIV_CODE = '" & ds.Tables(1).Rows(j)("DIV_CODE") & "' AND PRD_CODE = '" & ds.Tables(1).Rows(j)("PRD_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTAccountExecutiveExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Account Executive")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Account Executive") = ds.Tables(1).Rows(j)("ACCT_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "ACCT_EXEC = '" & ds.Tables(1).Rows(j)("ACCT_EXEC") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTJobTypeExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Job Type")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Job Type") = ds.Tables(1).Rows(j)("JT_DESC")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "JOB_TYPE = '" & ds.Tables(1).Rows(j)("JOB_TYPE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGYearExport()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Department"
            boundColumn.HeaderText = "Department"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearSalesClassExport()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Sales Class"
            boundColumn.HeaderText = "Sales Class"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearClientExport()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearCDExport()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Division"
            boundColumn.HeaderText = "Division"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearCDPExport()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Division"
            boundColumn.HeaderText = "Division"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Product"
            boundColumn.HeaderText = "Product"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearAccountExecutiveExport()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Account Executive"
            boundColumn.HeaderText = "Account Executive"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearJobTypeExport()
        Try
            Me.RadGridYear.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByYearByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Job Type"
            boundColumn.HeaderText = "Job Type"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    RadGridYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

    Private Function BuildMonthDTExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Department")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Department") = ds.Tables(1).Rows(j)("DP_TM_DESC")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "DP_TM_CODE = '" & ds.Tables(1).Rows(j)("DP_TM_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTSalesClassExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Sales Class")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Sales Class") = ds.Tables(1).Rows(j)("SC_DESCRIPTION")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "SC_CODE = '" & ds.Tables(1).Rows(j)("SC_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Client")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTCDExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim colclient As DataColumn = New DataColumn("Client")
            Dim coldivision As DataColumn = New DataColumn("Division")
            dtComps.Columns.Add(colclient)
            dtComps.Columns.Add(coldivision)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                newrow.Item("Division") = ds.Tables(1).Rows(j)("DIV_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "' AND DIV_CODE = '" & ds.Tables(1).Rows(j)("DIV_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTCDPExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim colclient As DataColumn = New DataColumn("Client")
            Dim coldivision As DataColumn = New DataColumn("Division")
            Dim colproduct As DataColumn = New DataColumn("Product")
            dtComps.Columns.Add(colclient)
            dtComps.Columns.Add(coldivision)
            dtComps.Columns.Add(colproduct)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                newrow.Item("Division") = ds.Tables(1).Rows(j)("DIV_NAME")
                newrow.Item("Product") = ds.Tables(1).Rows(j)("PRD_DESCRIPTION")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "' AND DIV_CODE = '" & ds.Tables(1).Rows(j)("DIV_CODE") & "' AND PRD_CODE = '" & ds.Tables(1).Rows(j)("PRD_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTAccountExecutiveExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Account Executive")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Account Executive") = ds.Tables(1).Rows(j)("ACCT_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "ACCT_EXEC = '" & ds.Tables(1).Rows(j)("ACCT_EXEC") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTJobTypeExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim dateOpened As DataColumn = New DataColumn("Job Type")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Integer = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Job Type") = ds.Tables(1).Rows(j)("JT_DESC")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "JOB_TYPE = '" & ds.Tables(1).Rows(j)("JOB_TYPE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            newrow.Item(x) = dt.Rows(w)("COMPS")
                            total += CInt(dt.Rows(w)("COMPS"))
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGMonthExport()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Department"
            boundColumn.HeaderText = "Department"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthSalesClassExport()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Sales Class"
            boundColumn.HeaderText = "Sales Class"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthClientExport()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthCDExport()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Division"
            boundColumn.HeaderText = "Division"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthCDPExport()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Division"
            boundColumn.HeaderText = "Division"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Product"
            boundColumn.HeaderText = "Product"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthAccountExecutiveExport()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Account Executive"
            boundColumn.HeaderText = "Account Executive"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthJobTypeExport()
        Try
            Me.RadGridMonth.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetCompsByMonthByDept("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Job Type"
            boundColumn.HeaderText = "Job Type"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonth.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonth.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

#End Region

#Region "Dashboard Project Comp Detail"

    Private Sub RadGridCompDetail_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridCompDetail.ItemDataBound
        Try
            Dim countyear As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, "", "", "", "", "", "", 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, countyear)
            Dim total As Integer
            Dim count As Integer
            Dim fourweektotal As Integer
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then


            ElseIf e.Item.ItemType = GridItemType.Footer Then
                If Request.QueryString("eopt") = "True" Then
                    If level = "dept" Then
                        e.Item.Cells(3).Text = "Totals:"
                        For i As Integer = 0 To Me.RadGridCompDetail.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridCompDetail.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("DP_TM_DESC") Then
                                    e.Item.Cells(Me.RadGridCompDetail.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(2).Rows(j)("COMPS")
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridCompDetail.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompDetail.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "SC" Then
                        e.Item.Cells(3).Text = "Totals:"
                        For i As Integer = 0 To Me.RadGridCompDetail.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridCompDetail.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("SC_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridCompDetail.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(2).Rows(j)("COMPS")
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridCompDetail.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompDetail.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "C" Then
                        e.Item.Cells(2).Text = "Totals:"
                        For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                            total += ds.Tables(0).Rows(j)("COMPS")
                        Next
                        e.Item.Cells(3).Text = total
                    End If
                    If level = "CD" Then
                        e.Item.Cells(2).Text = "Totals:"
                        For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                            total += ds.Tables(0).Rows(j)("COMPS")
                        Next
                        e.Item.Cells(4).Text = total
                    End If
                    If level = "CDP" Then
                        e.Item.Cells(2).Text = "Totals:"
                        For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                            total += ds.Tables(0).Rows(j)("COMPS")
                        Next
                        e.Item.Cells(5).Text = total
                    End If
                    If level = "AE" Then
                        e.Item.Cells(3).Text = "Totals:"
                        For i As Integer = 0 To Me.RadGridCompDetail.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridCompDetail.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("ACCT_NAME") Then
                                    e.Item.Cells(Me.RadGridCompDetail.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(2).Rows(j)("COMPS")
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridCompDetail.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompDetail.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                    If level = "JT" Then
                        e.Item.Cells(3).Text = "Totals:"
                        For i As Integer = 0 To Me.RadGridCompDetail.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridCompDetail.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("JT_DESC") Then
                                    e.Item.Cells(Me.RadGridCompDetail.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(2).Rows(j)("COMPS")
                                    total += ds.Tables(2).Rows(j)("COMPS")
                                End If
                                If Me.RadGridCompDetail.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompDetail.MasterTableView.Columns(i).OrderIndex).Text = total
                                End If
                            Next
                        Next
                    End If
                Else
                    If level = "dept" Then
                        e.Item.Cells(3).Text = "Totals:"
                        ' For i As Integer = 0 To Me.RadGridComps.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                            total += ds.Tables(2).Rows(j)("COMPS")
                        Next
                        e.Item.Cells(6).Text = total.ToString
                        'Next
                    End If
                    If level = "SC" Then
                        e.Item.Cells(3).Text = "Totals:"
                        For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                            total += ds.Tables(2).Rows(j)("COMPS")
                        Next
                        e.Item.Cells(6).Text = total.ToString
                    End If
                    If level = "C" Then
                        e.Item.Cells(2).Text = "Totals:"
                        For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                            total += ds.Tables(0).Rows(j)("COMPS")
                        Next
                        e.Item.Cells(3).Text = total
                    End If
                    If level = "CD" Then
                        e.Item.Cells(2).Text = "Totals:"
                        For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                            total += ds.Tables(0).Rows(j)("COMPS")
                        Next
                        e.Item.Cells(4).Text = total
                    End If
                    If level = "CDP" Then
                        e.Item.Cells(2).Text = "Totals:"
                        For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                            total += ds.Tables(0).Rows(j)("COMPS")
                        Next
                        e.Item.Cells(5).Text = total
                    End If
                    If level = "AE" Then
                        e.Item.Cells(3).Text = "Totals:"
                        For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                            total += ds.Tables(2).Rows(j)("COMPS")
                        Next
                        e.Item.Cells(6).Text = total.ToString
                    End If
                    If level = "JT" Then
                        e.Item.Cells(3).Text = "Totals:"
                        For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                            total += ds.Tables(2).Rows(j)("COMPS")
                        Next
                        e.Item.Cells(6).Text = total.ToString
                    End If
                End If
                
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub RadGridCompDetail_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGridCompDetail.NeedDataSource
        Try
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            level = Request.QueryString("level")
            If Request.QueryString("eopt") = "True" Then
                If level = "C" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildClientDT
                End If
                If level = "CD" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildDivisionDT
                End If
                If level = "CDP" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildProductDT
                End If
                If level = "AE" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildAccountExecutiveDT()
                End If
                If level = "dept" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildDeptDT()
                End If
                If level = "SC" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildSalesClassDT()
                End If
                If level = "JT" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildJobTypeDT()
                End If
            Else
                If level = "C" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildClientDTExport
                End If
                If level = "CD" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildDivisionDTExport
                End If
                If level = "CDP" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildProductDTExport
                End If
                If level = "AE" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildAccountExecutiveDTExport()
                End If
                If level = "dept" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildDeptDTExport()
                End If
                If level = "SC" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildSalesClassDTExport()
                End If
                If level = "JT" Then
                    Me.RadGridCompDetail.DataSource = Me.BuildJobTypeDTExport()
                End If
            End If
            

        Catch ex As Exception

        End Try
    End Sub

    Private Function buildRGClientDetail()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildClientDT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim total As Integer = 0
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(0).Rows(u)("CL_NAME")
                newrow.Item("COMPS") = ds.Tables(0).Rows(u)("COMPS")
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGDivisionDetail()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildDivisionDT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim total As Integer = 0
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            dtComps.Columns.Add(clientcol)
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            dtComps.Columns.Add(division)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(0).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(0).Rows(u)("DIV_NAME")
                newrow.Item("COMPS") = ds.Tables(0).Rows(u)("COMPS")
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGProductDetail()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildProductDT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim total As Integer = 0
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            dtComps.Columns.Add(clientcol)
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            dtComps.Columns.Add(division)
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(product)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(0).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(0).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(0).Rows(u)("PRD_DESCRIPTION")
                newrow.Item("COMPS") = ds.Tables(0).Rows(u)("COMPS")
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGDetail()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("DP_TM_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildDeptDT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add(division)
            dtComps.Columns.Add(product)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("DP_TM_DESC"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(3).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(3).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(3).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(3).Rows(u)("PRD_DESCRIPTION")
                dtComps.Rows.Add(newrow)
            Next

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim total As Integer = 0
            For k As Integer = 0 To dtComps.Rows.Count - 1
                For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dtWeek = ds.Tables(1).DefaultView
                    dtWeek.RowFilter = "CL_NAME = '" & dtComps.Rows(k)("CL_NAME") & "' AND DIV_NAME = '" & dtComps.Rows(k)("DIV_NAME") & "' AND PRD_DESCRIPTION = '" & dtComps.Rows(k)("PRD_DESCRIPTION") & "'"
                    dt = dtWeek.ToTable
                    For w As Integer = 0 To dt.Rows.Count - 1
                        For x As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                                dtComps.Rows(k)(x) = dt.Rows(w)("COMPS")
                                total += CInt(dt.Rows(w)("COMPS"))
                            End If
                        Next
                    Next
                    dtComps.Rows(k)("Total") = total
                    total = 0
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGAccountExecutiveDetail()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("ACCT_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildAccountExecutiveDT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add(division)
            dtComps.Columns.Add(product)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("ACCT_NAME"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(3).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(3).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(3).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(3).Rows(u)("PRD_DESCRIPTION")
                dtComps.Rows.Add(newrow)
            Next

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim total As Integer = 0
            For k As Integer = 0 To dtComps.Rows.Count - 1
                For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dtWeek = ds.Tables(1).DefaultView
                    dtWeek.RowFilter = "CL_NAME = '" & dtComps.Rows(k)("CL_NAME") & "' AND DIV_NAME = '" & dtComps.Rows(k)("DIV_NAME") & "' AND PRD_DESCRIPTION = '" & dtComps.Rows(k)("PRD_DESCRIPTION") & "'"
                    dt = dtWeek.ToTable
                    For w As Integer = 0 To dt.Rows.Count - 1
                        For x As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                                dtComps.Rows(k)(x) = dt.Rows(w)("COMPS")
                                total += CInt(dt.Rows(w)("COMPS"))
                            End If
                        Next
                    Next
                    dtComps.Rows(k)("Total") = total
                    total = 0
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGSalesClassDetail()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("SC_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildSalesClassDT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add(division)
            dtComps.Columns.Add(product)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("SC_DESCRIPTION"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(3).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(3).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(3).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(3).Rows(u)("PRD_DESCRIPTION")
                dtComps.Rows.Add(newrow)
            Next

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim total As Integer = 0
            For k As Integer = 0 To dtComps.Rows.Count - 1
                For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dtWeek = ds.Tables(1).DefaultView
                    dtWeek.RowFilter = "CL_NAME = '" & dtComps.Rows(k)("CL_NAME") & "' AND DIV_NAME = '" & dtComps.Rows(k)("DIV_NAME") & "' AND PRD_DESCRIPTION = '" & dtComps.Rows(k)("PRD_DESCRIPTION") & "'"
                    dt = dtWeek.ToTable
                    For w As Integer = 0 To dt.Rows.Count - 1
                        For x As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                                dtComps.Rows(k)(x) = dt.Rows(w)("COMPS")
                                total += CInt(dt.Rows(w)("COMPS"))
                            End If
                        Next
                    Next
                    dtComps.Rows(k)("Total") = total
                    total = 0
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGJobTypeDetail()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("JT_DESC")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("JT_DESC")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("JT_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildJobTypeDT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add(division)
            dtComps.Columns.Add(product)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("JT_DESC"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(3).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(3).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(3).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(3).Rows(u)("PRD_DESCRIPTION")
                dtComps.Rows.Add(newrow)
            Next

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim total As Integer = 0
            For k As Integer = 0 To dtComps.Rows.Count - 1
                For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dtWeek = ds.Tables(1).DefaultView
                    dtWeek.RowFilter = "CL_NAME = '" & dtComps.Rows(k)("CL_NAME") & "' AND DIV_NAME = '" & dtComps.Rows(k)("DIV_NAME") & "' AND PRD_DESCRIPTION = '" & dtComps.Rows(k)("PRD_DESCRIPTION") & "'"
                    dt = dtWeek.ToTable
                    For w As Integer = 0 To dt.Rows.Count - 1
                        For x As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
                                dtComps.Rows(k)(x) = dt.Rows(w)("COMPS")
                                total += CInt(dt.Rows(w)("COMPS"))
                            End If
                        Next
                    Next
                    dtComps.Rows(k)("Total") = total
                    total = 0
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGClientDetailExport()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildClientDTExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim total As Integer = 0
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clcodecol As DataColumn = New DataColumn("CODE")
            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            dtComps.Columns.Add(clcodecol)
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CODE") = ds.Tables(0).Rows(u)("CL_CODE")
                newrow.Item("CL_NAME") = ds.Tables(0).Rows(u)("CL_NAME")
                newrow.Item("COMPS") = ds.Tables(0).Rows(u)("COMPS")
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGDivisionDetailExport()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildDivisionDTExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim total As Integer = 0
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clcodecol As DataColumn = New DataColumn("CODE")
            dtComps.Columns.Add(clcodecol)
            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            dtComps.Columns.Add(clientcol)
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            dtComps.Columns.Add(division)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CODE") = ds.Tables(0).Rows(u)("CL_CODE")
                newrow.Item("CL_NAME") = ds.Tables(0).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(0).Rows(u)("DIV_NAME")
                newrow.Item("COMPS") = ds.Tables(0).Rows(u)("COMPS")
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGProductDetailExport()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildProductDTExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim total As Integer = 0
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clcodecol As DataColumn = New DataColumn("CODE")
            dtComps.Columns.Add(clcodecol)
            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            dtComps.Columns.Add(clientcol)
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            dtComps.Columns.Add(division)
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(product)
            dtComps.Columns.Add("COMPS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CODE") = ds.Tables(0).Rows(u)("CL_CODE")
                newrow.Item("CL_NAME") = ds.Tables(0).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(0).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(0).Rows(u)("PRD_DESCRIPTION")
                newrow.Item("COMPS") = ds.Tables(0).Rows(u)("COMPS")
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGDetailExport()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

            'Dim dc As DataColumn
            'If ds.Tables(0).Rows.Count > 0 Then
            '    For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DP_TM_DESC"
            boundColumn.HeaderText = "Department"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            boundColumn.UniqueName = "col" & "DP_TM_DESC"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            '    Next
            'End If
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

            'boundColumn = New GridBoundColumn
            'boundColumn.DataField = "Total"
            'boundColumn.HeaderText = "Total"
            'boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            'boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            'RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildDeptDTExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add(division)
            dtComps.Columns.Add(product)

            Dim dc As DataColumn
            'If ds.Tables(0).Rows.Count > 0 Then
            '    For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
            dc = New DataColumn("DP_TM_DESC")
            dtComps.Columns.Add(dc)
            dc = New DataColumn("COMPS")
            dtComps.Columns.Add(dc)
            '    Next
            'End If

            dtComps.Columns.Add("Total")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(1).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(1).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(1).Rows(u)("PRD_DESCRIPTION")
                newrow.Item("DP_TM_DESC") = ds.Tables(1).Rows(u)("DP_TM_DESC")
                newrow.Item("COMPS") = ds.Tables(1).Rows(u)("COMPS")
                dtComps.Rows.Add(newrow)
            Next

            'Dim dtWeek As DataView
            'Dim dt As DataTable
            'Dim total As Integer = 0
            'For k As Integer = 0 To dtComps.Rows.Count - 1
            '    For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
            '        dtWeek = ds.Tables(1).DefaultView
            '        dtWeek.RowFilter = "CL_NAME = '" & dtComps.Rows(k)("CL_NAME") & "' AND DIV_NAME = '" & dtComps.Rows(k)("DIV_NAME") & "' AND PRD_DESCRIPTION = '" & dtComps.Rows(k)("PRD_DESCRIPTION") & "'"
            '        dt = dtWeek.ToTable
            '        For w As Integer = 0 To dt.Rows.Count - 1
            '            For x As Integer = 0 To dtComps.Columns.Count - 1
            '                If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
            '                    dtComps.Rows(k)(x) = dt.Rows(w)("COMPS")
            '                    total += CInt(dt.Rows(w)("COMPS"))
            '                End If
            '            Next
            '        Next
            '        dtComps.Rows(k)("Total") = total
            '        total = 0
            '    Next
            'Next

            'For p As Integer = 0 To dtComps.Rows.Count - 1
            '    For q As Integer = 0 To dtComps.Columns.Count - 1
            '        If dtComps.Rows(p)(q).ToString() = "" Then
            '            dtComps.Rows(p)(q) = 0
            '        End If
            '    Next
            'Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGAccountExecutiveDetailExport()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

            'Dim dc As DataColumn
            'If ds.Tables(0).Rows.Count > 0 Then
            '    For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "ACCT_NAME"
            boundColumn.HeaderText = "Account Executive"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            boundColumn.UniqueName = "col" & "ACCT_NAME"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            '    Next
            'End If
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

            'boundColumn = New GridBoundColumn
            'boundColumn.DataField = "Total"
            'boundColumn.HeaderText = "Total"
            'boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            'boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            'RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildAccountExecutiveDTExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add(division)
            dtComps.Columns.Add(product)

            Dim dc As DataColumn
            'If ds.Tables(0).Rows.Count > 0 Then
            '    For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
            dc = New DataColumn("ACCT_NAME")
            dtComps.Columns.Add(dc)
            dc = New DataColumn("COMPS")
            dtComps.Columns.Add(dc)
            '    Next
            'End If

            dtComps.Columns.Add("Total")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(1).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(1).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(1).Rows(u)("PRD_DESCRIPTION")
                newrow.Item("ACCT_NAME") = ds.Tables(1).Rows(u)("ACCT_NAME")
                newrow.Item("COMPS") = ds.Tables(1).Rows(u)("COMPS")
                dtComps.Rows.Add(newrow)
            Next

            'Dim dtWeek As DataView
            'Dim dt As DataTable
            'Dim total As Integer = 0
            'For k As Integer = 0 To dtComps.Rows.Count - 1
            '    For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
            '        dtWeek = ds.Tables(1).DefaultView
            '        dtWeek.RowFilter = "CL_NAME = '" & dtComps.Rows(k)("CL_NAME") & "' AND DIV_NAME = '" & dtComps.Rows(k)("DIV_NAME") & "' AND PRD_DESCRIPTION = '" & dtComps.Rows(k)("PRD_DESCRIPTION") & "'"
            '        dt = dtWeek.ToTable
            '        For w As Integer = 0 To dt.Rows.Count - 1
            '            For x As Integer = 0 To dtComps.Columns.Count - 1
            '                If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
            '                    dtComps.Rows(k)(x) = dt.Rows(w)("COMPS")
            '                    total += CInt(dt.Rows(w)("COMPS"))
            '                End If
            '            Next
            '        Next
            '        dtComps.Rows(k)("Total") = total
            '        total = 0
            '    Next
            'Next

            'For p As Integer = 0 To dtComps.Rows.Count - 1
            '    For q As Integer = 0 To dtComps.Columns.Count - 1
            '        If dtComps.Rows(p)(q).ToString() = "" Then
            '            dtComps.Rows(p)(q) = 0
            '        End If
            '    Next
            'Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGSalesClassDetailExport()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

            'Dim dc As DataColumn
            'If ds.Tables(0).Rows.Count > 0 Then
            '    For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "SC_DESCRIPTION"
            boundColumn.HeaderText = "Sales Class"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            boundColumn.UniqueName = "col" & "SC_DESCRIPTION"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            '    Next
            'End If
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

            'boundColumn = New GridBoundColumn
            'boundColumn.DataField = "Total"
            'boundColumn.HeaderText = "Total"
            'boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            'boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            'RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildSalesClassDTExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add(division)
            dtComps.Columns.Add(product)

            Dim dc As DataColumn
            'If ds.Tables(0).Rows.Count > 0 Then
            '    For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
            dc = New DataColumn("SC_DESCRIPTION")
            dtComps.Columns.Add(dc)
            dc = New DataColumn("COMPS")
            dtComps.Columns.Add(dc)

            '    Next
            'End If

            dtComps.Columns.Add("Total")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(1).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(1).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(1).Rows(u)("PRD_DESCRIPTION")
                newrow.Item("SC_DESCRIPTION") = ds.Tables(1).Rows(u)("SC_DESCRIPTION")
                newrow.Item("COMPS") = ds.Tables(1).Rows(u)("COMPS")
                dtComps.Rows.Add(newrow)
            Next

            'Dim dtWeek As DataView
            'Dim dt As DataTable
            'Dim total As Integer = 0
            'For k As Integer = 0 To dtComps.Rows.Count - 1
            '    For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
            '        dtWeek = ds.Tables(1).DefaultView
            '        dtWeek.RowFilter = "CL_NAME = '" & dtComps.Rows(k)("CL_NAME") & "' AND DIV_NAME = '" & dtComps.Rows(k)("DIV_NAME") & "' AND PRD_DESCRIPTION = '" & dtComps.Rows(k)("PRD_DESCRIPTION") & "'"
            '        dt = dtWeek.ToTable
            '        For w As Integer = 0 To dt.Rows.Count - 1
            '            For x As Integer = 0 To dtComps.Columns.Count - 1
            '                If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
            '                    dtComps.Rows(k)(x) = dt.Rows(w)("COMPS")
            '                    total += CInt(dt.Rows(w)("COMPS"))
            '                End If
            '            Next
            '        Next
            '        dtComps.Rows(k)("Total") = total
            '        total = 0
            '    Next
            'Next

            'For p As Integer = 0 To dtComps.Rows.Count - 1
            '    For q As Integer = 0 To dtComps.Columns.Count - 1
            '        If dtComps.Rows(p)(q).ToString() = "" Then
            '            dtComps.Rows(p)(q) = 0
            '        End If
            '    Next
            'Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGJobTypeDetailExport()
        Try
            Me.RadGridCompDetail.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

            'Dim dc As DataColumn
            'If ds.Tables(0).Rows.Count > 0 Then
            '    For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "JT_DESC"
            boundColumn.HeaderText = "Job Type"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            boundColumn.UniqueName = "col" & "JT_DESC"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            '    Next
            'End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "COMPS"
            boundColumn.HeaderText = "Projects"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)
            'boundColumn = New GridBoundColumn
            'boundColumn.DataField = "Total"
            'boundColumn.HeaderText = "Total"
            'boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            'boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            'RadGridCompDetail.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildJobTypeDTExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetComps("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add(division)
            dtComps.Columns.Add(product)

            Dim dc As DataColumn
            'If ds.Tables(0).Rows.Count > 0 Then
            '    For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
            dc = New DataColumn("JT_DESC")
            dtComps.Columns.Add(dc)
            dc = New DataColumn("COMPS")
            dtComps.Columns.Add(dc)

            '    Next
            'End If

            dtComps.Columns.Add("Total")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(1).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(1).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(1).Rows(u)("PRD_DESCRIPTION")
                newrow.Item("JT_DESC") = ds.Tables(1).Rows(u)("JT_DESC")
                newrow.Item("COMPS") = ds.Tables(1).Rows(u)("COMPS")
                dtComps.Rows.Add(newrow)
            Next

            'Dim dtWeek As DataView
            'Dim dt As DataTable
            'Dim total As Integer = 0
            'For k As Integer = 0 To dtComps.Rows.Count - 1
            '    For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
            '        dtWeek = ds.Tables(1).DefaultView
            '        dtWeek.RowFilter = "CL_NAME = '" & dtComps.Rows(k)("CL_NAME") & "' AND DIV_NAME = '" & dtComps.Rows(k)("DIV_NAME") & "' AND PRD_DESCRIPTION = '" & dtComps.Rows(k)("PRD_DESCRIPTION") & "'"
            '        dt = dtWeek.ToTable
            '        For w As Integer = 0 To dt.Rows.Count - 1
            '            For x As Integer = 0 To dtComps.Columns.Count - 1
            '                If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
            '                    dtComps.Rows(k)(x) = dt.Rows(w)("COMPS")
            '                    total += CInt(dt.Rows(w)("COMPS"))
            '                End If
            '            Next
            '        Next
            '        dtComps.Rows(k)("Total") = total
            '        total = 0
            '    Next
            'Next

            'For p As Integer = 0 To dtComps.Rows.Count - 1
            '    For q As Integer = 0 To dtComps.Columns.Count - 1
            '        If dtComps.Rows(p)(q).ToString() = "" Then
            '            dtComps.Rows(p)(q) = 0
            '        End If
            '    Next
            'Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

#End Region

#Region "Dashboard Client Time"

    Public Function WriteXMLPieSelectionHours() As String
        Dim das As New cDashboard(Session("ConnString"), Session("UserCode"))
        dash = Request.QueryString("dash")
        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")

        If level = "C" Then
            Return das.getFCXMLData_PieByLevelClient(Session("ds_DASH_Comps_Pie_ByHours"), "CL_NAME", "HOURS", "", True, week, month, year, type, dash, "Hours")
        End If
        If level = "CD" Then
            Return das.getFCXMLData_PieByLevelClient(Session("ds_DASH_Comps_Pie_ByHours"), "DIV_NAME", "HOURS", "", True, week, month, year, type, dash, "Hours")
        End If
        If level = "CDP" Then
            Return das.getFCXMLData_PieByLevelClient(Session("ds_DASH_Comps_Pie_ByHours"), "PRD_DESCRIPTION", "HOURS", "", True, week, month, year, type, dash, "Hours")
        End If
        If level = "AE" Then
            Return das.getFCXMLData_PieByLevelClient(Session("ds_DASH_Comps_Pie_ByHours"), "ACCT_NAME", "HOURS", "", True, week, month, year, type, dash, "Hours")
        End If
        If level = "dept" Then
            Return das.getFCXMLData_PieByLevelClient(Session("ds_DASH_Comps_Pie_ByHours"), "DP_TM_DESC", "HOURS", "", True, week, month, year, type, dash, "Hours")
        End If
        If level = "SC" Then
            Return das.getFCXMLData_PieByLevelClient(Session("ds_DASH_Comps_Pie_ByHours"), "SC_DESCRIPTION", "HOURS", "", True, week, month, year, type, dash, "Hours")
        End If
        If level = "JT" Then
            Return das.getFCXMLData_PieByLevelClient(Session("ds_DASH_Comps_Pie_ByHours"), "JT_DESC", "HOURS", "", True, week, month, year, type, dash, "Hours")
        End If

    End Function

    Private Sub LoadDataClientTime(Optional ByVal type As String = "Month")
        Dim oDTO As cDesktopObjects = New cDesktopObjects(Session("ConnString"))
        Dim ds As New System.Data.DataSet
        Dim dt As New System.Data.DataTable
        Dim dtWeek As DataView
       
        Dim count As Integer = 0

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        count = Request.QueryString("count")
        level = Request.QueryString("level")

        If cancel <> "" Then
            iscancel = True
        End If
        Try
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            If type = "Month" Then
                ds = dash.GetHoursByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), "Month", project, count)
            Else
                ds = dash.GetHoursByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), "YeartoDate", project, count)
            End If
            Session("ds_DASH_Comps_Pie_ByHours") = ds
            If type = "Month" Then
                ds = dash.GetDollarsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), "Month", project, count)
            Else
                ds = dash.GetDollarsByLevel("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), "YeartoDate", project, count)
            End If
            Session("ds_DASH_Comps_Pie_ByDollars") = ds
        Catch ex As Exception
            Me.ShowMessage(ex.Message.ToString())
        End Try

        LoadCharts_ClientTime()

    End Sub
    Private Sub LoadCharts_ClientTime()

        dash = Request.QueryString("dash")
        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")

        LoadClientTimeHoursPieChart()
        LoadClientTimeDollarsPieChart()

    End Sub
    Private Sub LoadClientTimeHoursPieChart()

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing
        Dim DataSet As System.Data.DataSet = Nothing
        Dim NameField As String = Nothing
        Dim ValueField As String = Nothing
        Dim Caption As String = ""
        Dim ToolTipPrefix As String = Nothing

        DataSet = Session("ds_DASH_Comps_Pie_ByHours")

        ToolTipPrefix = "Hours: "
        Caption = ""

        NameField = GetNameField()
        ValueField = "HOURS"

        Dashboard = New cDashboard(_Session.ConnectionString, _Session.UserCode)

        Dashboard.GetPieChart_ByLevelClient(RadHtmlChartHoursPieChart, DataSet, NameField, ValueField, Caption, ToolTipPrefix)

    End Sub
    Private Sub LoadClientTimeDollarsPieChart()

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing
        Dim DataSet As System.Data.DataSet = Nothing
        Dim NameField As String = Nothing
        Dim ValueField As String = Nothing
        Dim Caption As String = ""
        Dim ToolTipPrefix As String = Nothing

        DataSet = Session("ds_DASH_Comps_Pie_ByDollars")

        ToolTipPrefix = "Amount: "
        Caption = ""

        NameField = GetNameField()
        ValueField = "AMOUNT"

        Dashboard = New cDashboard(_Session.ConnectionString, _Session.UserCode)

        Dashboard.GetPieChart_ByLevelClient(RadHtmlChartDollarsPieChart, DataSet, NameField, ValueField, Caption, ToolTipPrefix)

    End Sub
    Private Function GetNameField() As String

        Dim NameField As String = Nothing

        Select Case level

            Case "C"
                NameField = "CL_NAME"

            Case "CD"
                NameField = "DIV_NAME"

            Case "CDP"
                NameField = "PRD_DESCRIPTION"

            Case "AE"
                NameField = "ACCT_NAME"

            Case "dept"
                NameField = "DP_TM_DESC"

            Case "SC"
                NameField = "SC_DESCRIPTION"

            Case "JT"
                NameField = "JT_DESC"

        End Select

        GetNameField = NameField

    End Function

#End Region

#Region "Dashboard Client Time Comp Detail"

    Private Sub RadGridHours_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridHours.ItemDataBound
        Try
            Dim countyear As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetHours("", month, year, week, "", "", "", "", "", "", 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            Dim total As Decimal
            Dim count As Integer
            Dim fourweektotal As Integer
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then


            ElseIf e.Item.ItemType = GridItemType.Footer Then
                If level = "dept" Then
                    e.Item.Cells(3).Text = "Totals:"
                    For i As Integer = 0 To Me.RadGridHours.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                            If Me.RadGridHours.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("DP_TM_DESC") Then
                                e.Item.Cells(Me.RadGridHours.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(2).Rows(j)("HOURS")
                                total += ds.Tables(2).Rows(j)("HOURS")
                            End If
                            If Me.RadGridHours.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridHours.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "SC" Then
                    e.Item.Cells(3).Text = "Totals:"
                    For i As Integer = 0 To Me.RadGridHours.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                            If Me.RadGridHours.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("SC_DESCRIPTION") Then
                                e.Item.Cells(Me.RadGridHours.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(2).Rows(j)("HOURS")
                                total += ds.Tables(2).Rows(j)("HOURS")
                            End If
                            If Me.RadGridHours.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridHours.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "C" Then
                    e.Item.Cells(2).Text = "Totals:"
                    For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                        total += ds.Tables(0).Rows(j)("HOURS")
                    Next
                    e.Item.Cells(3).Text = total
                End If
                If level = "CD" Then
                    e.Item.Cells(2).Text = "Totals:"
                    For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                        total += ds.Tables(0).Rows(j)("HOURS")
                    Next
                    e.Item.Cells(4).Text = total
                End If
                If level = "CDP" Then
                    e.Item.Cells(2).Text = "Totals:"
                    For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                        total += ds.Tables(0).Rows(j)("HOURS")
                    Next
                    e.Item.Cells(5).Text = total
                End If
                If level = "AE" Then
                    e.Item.Cells(3).Text = "Totals:"
                    For i As Integer = 0 To Me.RadGridHours.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                            If Me.RadGridHours.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("ACCT_NAME") Then
                                e.Item.Cells(Me.RadGridHours.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(2).Rows(j)("HOURS")
                                total += ds.Tables(2).Rows(j)("HOURS")
                            End If
                            If Me.RadGridHours.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridHours.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
                If level = "JT" Then
                    e.Item.Cells(3).Text = "Totals:"
                    For i As Integer = 0 To Me.RadGridHours.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                            If Me.RadGridHours.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("JT_DESC") Then
                                e.Item.Cells(Me.RadGridHours.MasterTableView.Columns(i).OrderIndex).Text = ds.Tables(2).Rows(j)("HOURS")
                                total += ds.Tables(2).Rows(j)("HOURS")
                            End If
                            If Me.RadGridHours.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridHours.MasterTableView.Columns(i).OrderIndex).Text = total
                            End If
                        Next
                    Next
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub RadGridHours_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGridHours.NeedDataSource
        Try
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            level = Request.QueryString("level")

            If level = "C" Then
                Me.RadGridHours.DataSource = Me.BuildClientDTCT
            End If
            If level = "CD" Then
                Me.RadGridHours.DataSource = Me.BuildDivisionDTCT
            End If
            If level = "CDP" Then
                Me.RadGridHours.DataSource = Me.BuildProductDTCT
            End If
            If level = "AE" Then
                Me.RadGridHours.DataSource = Me.BuildAccountExecutiveDTCT()
            End If
            If level = "dept" Then
                Me.RadGridHours.DataSource = Me.BuildDeptDTCT()
            End If
            If level = "SC" Then
                Me.RadGridHours.DataSource = Me.BuildSalesClassDTCT()
            End If
            If level = "JT" Then
                Me.RadGridHours.DataSource = Me.BuildJobTypeDTCT()
            End If

        Catch ex As Exception

        End Try
    End Sub

    Private Function buildRGClientCT()
        Try
            Me.RadGridHours.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "HOURS"
            boundColumn.HeaderText = "Hours"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildClientDTCT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim total As Integer = 0
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add("HOURS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(0).Rows(u)("CL_NAME")
                newrow.Item("HOURS") = ds.Tables(0).Rows(u)("HOURS")
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGDivisionCT()
        Try
            Me.RadGridHours.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "HOURS"
            boundColumn.HeaderText = "Hours"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildDivisionDTCT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim total As Integer = 0
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            dtComps.Columns.Add(clientcol)
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            dtComps.Columns.Add(division)
            dtComps.Columns.Add("HOURS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(0).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(0).Rows(u)("DIV_NAME")
                newrow.Item("HOURS") = ds.Tables(0).Rows(u)("HOURS")
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGProductCT()
        Try
            Me.RadGridHours.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "HOURS"
            boundColumn.HeaderText = "Hours"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildProductDTCT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim total As Integer = 0
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            dtComps.Columns.Add(clientcol)
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            dtComps.Columns.Add(division)
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(product)
            dtComps.Columns.Add("HOURS")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(0).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(0).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(0).Rows(u)("PRD_DESCRIPTION")
                newrow.Item("HOURS") = ds.Tables(0).Rows(u)("HOURS")
                dtComps.Rows.Add(newrow)
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGCT()
        Try
            Me.RadGridHours.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("DP_TM_DESC")
                    'boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridHours.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridComps.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildDeptDTCT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add(division)
            dtComps.Columns.Add(product)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("DP_TM_DESC"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(3).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(3).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(3).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(3).Rows(u)("PRD_DESCRIPTION")
                dtComps.Rows.Add(newrow)
            Next

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim total As Decimal = 0
            For k As Integer = 0 To dtComps.Rows.Count - 1
                For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dtWeek = ds.Tables(1).DefaultView
                    dtWeek.RowFilter = "CL_NAME = '" & dtComps.Rows(k)("CL_NAME") & "' AND DIV_NAME = '" & dtComps.Rows(k)("DIV_NAME") & "' AND PRD_DESCRIPTION = '" & dtComps.Rows(k)("PRD_DESCRIPTION") & "'"
                    dt = dtWeek.ToTable
                    For w As Integer = 0 To dt.Rows.Count - 1
                        For x As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                                dtComps.Rows(k)(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                        Next
                    Next
                    dtComps.Rows(k)("Total") = total
                    total = 0
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGAccountExecutiveCT()
        Try
            Me.RadGridHours.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("ACCT_NAME")
                    'boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridHours.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildAccountExecutiveDTCT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add(division)
            dtComps.Columns.Add(product)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("ACCT_NAME"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(3).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(3).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(3).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(3).Rows(u)("PRD_DESCRIPTION")
                dtComps.Rows.Add(newrow)
            Next

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim total As Decimal = 0
            For k As Integer = 0 To dtComps.Rows.Count - 1
                For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dtWeek = ds.Tables(1).DefaultView
                    dtWeek.RowFilter = "CL_NAME = '" & dtComps.Rows(k)("CL_NAME") & "' AND DIV_NAME = '" & dtComps.Rows(k)("DIV_NAME") & "' AND PRD_DESCRIPTION = '" & dtComps.Rows(k)("PRD_DESCRIPTION") & "'"
                    dt = dtWeek.ToTable
                    For w As Integer = 0 To dt.Rows.Count - 1
                        For x As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                                dtComps.Rows(k)(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                        Next
                    Next
                    dtComps.Rows(k)("Total") = total
                    total = 0
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGSalesClassCT()
        Try
            Me.RadGridHours.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("SC_DESCRIPTION")
                    'boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridHours.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildSalesClassDTCT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add(division)
            dtComps.Columns.Add(product)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("SC_DESCRIPTION"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(3).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(3).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(3).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(3).Rows(u)("PRD_DESCRIPTION")
                dtComps.Rows.Add(newrow)
            Next

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim total As Decimal = 0
            For k As Integer = 0 To dtComps.Rows.Count - 1
                For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dtWeek = ds.Tables(1).DefaultView
                    dtWeek.RowFilter = "CL_NAME = '" & dtComps.Rows(k)("CL_NAME") & "' AND DIV_NAME = '" & dtComps.Rows(k)("DIV_NAME") & "' AND PRD_DESCRIPTION = '" & dtComps.Rows(k)("PRD_DESCRIPTION") & "'"
                    dt = dtWeek.ToTable
                    For w As Integer = 0 To dt.Rows.Count - 1
                        For x As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                                dtComps.Rows(k)(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                        Next
                    Next
                    dtComps.Rows(k)("Total") = total
                    total = 0
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGJobTypeCT()
        Try
            Me.RadGridHours.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "CL_NAME"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "DIV_NAME"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "PRD_DESCRIPTION"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("JT_DESC")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("JT_DESC")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("JT_DESC")
                    'boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridHours.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridHours.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function BuildJobTypeDTCT()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            ds = dash.GetHours("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)

            Dim clientcol As DataColumn = New DataColumn("CL_NAME")
            Dim division As DataColumn = New DataColumn("DIV_NAME")
            Dim product As DataColumn = New DataColumn("PRD_DESCRIPTION")
            dtComps.Columns.Add(clientcol)
            dtComps.Columns.Add(division)
            dtComps.Columns.Add(product)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("JT_DESC"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            Dim newrow As DataRow
            For u As Integer = 0 To ds.Tables(3).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("CL_NAME") = ds.Tables(3).Rows(u)("CL_NAME")
                newrow.Item("DIV_NAME") = ds.Tables(3).Rows(u)("DIV_NAME")
                newrow.Item("PRD_DESCRIPTION") = ds.Tables(3).Rows(u)("PRD_DESCRIPTION")
                dtComps.Rows.Add(newrow)
            Next

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim total As Decimal = 0
            For k As Integer = 0 To dtComps.Rows.Count - 1
                For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dtWeek = ds.Tables(1).DefaultView
                    dtWeek.RowFilter = "CL_NAME = '" & dtComps.Rows(k)("CL_NAME") & "' AND DIV_NAME = '" & dtComps.Rows(k)("DIV_NAME") & "' AND PRD_DESCRIPTION = '" & dtComps.Rows(k)("PRD_DESCRIPTION") & "'"
                    dt = dtWeek.ToTable
                    For w As Integer = 0 To dt.Rows.Count - 1
                        For x As Integer = 0 To dtComps.Columns.Count - 1
                            If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
                                dtComps.Rows(k)(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                        Next
                    Next
                    dtComps.Rows(k)("Total") = total
                    total = 0
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function

#End Region

#Region "Dashboard Client Year"

    Private Function CreateChart_ClientYear() As Telerik.Web.UI.RadHtmlChart

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim Count As Integer = 0

        Dashboard = New Webvantage.cDashboard(_Session.ConnectionString, _Session.UserCode)

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        count = Request.QueryString("count")
        level = Request.QueryString("level")
        datatype = Request.QueryString("datatype")

        Select Case level

            Case "C"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsByClient"), Session("DB_Client_Caption"), "month", datatype, "year")

            Case "CD"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsByCD"), Session("DB_CD_Caption"), "month", datatype, "year")

            Case "CDP"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsByCDP"), Session("DB_CDP_Caption"), "month", datatype, "year")

            Case "dept"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsByDept"), Session("DB_Dept_Caption"), "month", datatype, "year")

            Case "SC"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsBySalesClass"), Session("DB_SalesClass_Caption"), "month", datatype, "year")

            Case "AE"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsByAccountExecutive"), Session("DB_AccountExecutive_Caption"), "month", datatype, "year")

            Case "JT"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsByJobType"), Session("DB_JobType_Caption"), "month", datatype, "year")

        End Select

        If RadHtmlChart IsNot Nothing Then

            RadHtmlChart.Width = System.Web.UI.WebControls.Unit.Pixel(1100)
            RadHtmlChart.Height = System.Web.UI.WebControls.Unit.Pixel(300)

        End If

        Return RadHtmlChart

    End Function
    Private Sub CreateCharts_ClientYear_Department(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataSet As System.Data.DataSet = Nothing
        Dim DepartmentList As String() = Nothing

        If DeptCode <> "" Then

            DepartmentList = DeptCode.Split(",")

            For Each Department In DepartmentList

                DataTable = BuildYearDTDashClient(Department.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByDept") = DataTable

                If datatype = "Hours" Then

                    Session("DB_Dept_Caption") = DataTable.Columns(1).ColumnName

                End If

                If datatype = "Dollars" Then

                    Session("DB_Dept_Caption") = DataTable.Columns(1).ColumnName

                End If

                RadHtmlChart = CreateChart_ClientYear()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & Department.ToString.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetDepts("", Session("UserCode"))

            If DataSet.Tables(0).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(0).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildYearDTDashClient(DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByDept") = DataTable

                    If datatype = "Hours" Then

                        Session("DB_Dept_Caption") = DataRow("DP_TM_DESC")

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_Dept_Caption") = DataRow("DP_TM_DESC")

                    End If

                    RadHtmlChart = CreateChart_ClientYear()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientYear_SalesClass(ByVal Dashboard As Webvantage.cDashboard)

        Dim SalesClassList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing
        Dim DescriptionString As String() = Nothing

        If sc <> "" Then

            SalesClassList = sc.Split(",")

            For Each SalesClass In SalesClassList

                DataTable = BuildYearDTSalesClassDashClient(SalesClass.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsBySalesClass") = DataTable

                If datatype = "Hours" Then

                    Session("DB_SalesClass_Caption") = DataTable.Columns(1).ColumnName

                End If

                If datatype = "Dollars" Then

                    Session("DB_SalesClass_Caption") = DataTable.Columns(1).ColumnName

                End If

                RadHtmlChart = CreateChart_ClientYear()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & SalesClass.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetSalesClass()

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildYearDTSalesClassDashClient(SqlDataReader("code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsBySalesClass") = DataTable

                    DescriptionString = SqlDataReader("description").ToString.Split("-")

                    If datatype = "Hours" Then

                        Session("DB_SalesClass_Caption") = DescriptionString(1).Trim

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_SalesClass_Caption") = DescriptionString(1).Trim

                    End If

                    RadHtmlChart = CreateChart_ClientYear()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "literal" & SqlDataReader("code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientYear_Client(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing
        Dim DescriptionString As String() = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildYearDTClientDashClient(ClientCode.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByClient") = DataTable

                If datatype = "Hours" Then

                    Session("DB_Client_Caption") = DataTable.Columns(1).ColumnName

                End If

                If datatype = "Dollars" Then

                    Session("DB_Client_Caption") = DataTable.Columns(1).ColumnName

                End If

                RadHtmlChart = CreateChart_ClientYear()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New Webvantage.cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetClientList(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildYearDTClientDashClient(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByClient") = DataTable
                    DescriptionString = SqlDataReader("Description").ToString.Split("-")

                    If datatype = "Hours" Then

                        Session("DB_Client_Caption") = DescriptionString(1).Trim

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_Client_Caption") = DescriptionString(1).Trim

                    End If

                    RadHtmlChart = CreateChart_ClientYear()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                    End If
                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientYear_Division(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing
        Dim CodeString As String() = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildYearDTCDDashClient(ClientCode.Replace("&", "").Replace("@", ""), "")
                Session("ds_DASH_CompsByCD") = DataTable

                If datatype = "Hours" Then

                    Session("DB_CD_Caption") = DataTable.Columns(1).ColumnName

                End If

                If datatype = "Dollars" Then

                    Session("DB_CD_Caption") = DataTable.Columns(1).ColumnName

                End If

                RadHtmlChart = CreateChart_ClientYear()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetDivisionsAll(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    CodeString = SqlDataReader("Code").ToString.Split(":")
                    DataTable = BuildYearDTCDDashClient(CodeString(0).ToString.Replace("&", "").Replace("@", ""), CodeString(1).ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByCD") = DataTable

                    If datatype = "Hours" Then

                        Session("DB_CD_Caption") = SqlDataReader("Description")

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_CD_Caption") = SqlDataReader("Description")

                    End If

                    RadHtmlChart = CreateChart_ClientYear()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientYear_Product(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing
        Dim CodeString As String() = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildYearDTCDPDashClient(ClientCode.Replace("&", "").Replace("@", ""), "", "")
                Session("ds_DASH_CompsByCDP") = DataTable

                If datatype = "Hours" Then

                    Session("DB_CDP_Caption") = DataTable.Columns(1).ColumnName

                End If

                If datatype = "Dollars" Then

                    Session("DB_CDP_Caption") = DataTable.Columns(1).ColumnName

                End If

                RadHtmlChart = CreateChart_ClientYear()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New Webvantage.cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetProductsAll(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    CodeString = SqlDataReader("Code").ToString.Split(":")

                    DataTable = BuildYearDTCDPDashClient(CodeString(0).ToString.Replace("&", "").Replace("@", ""), CodeString(1).ToString.Replace("&", "").Replace("@", ""), CodeString(2).ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByCDP") = DataTable

                    If datatype = "Hours" Then

                        Session("DB_CDP_Caption") = SqlDataReader("Description")

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_CDP_Caption") = SqlDataReader("Description")

                    End If

                    RadHtmlChart = CreateChart_ClientYear()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientYear_AccountExecutive(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing
        Dim AEList As String() = Nothing
        Dim DescriptionString As String() = Nothing

        DropDowns = New cDropDowns(_Session.ConnectionString)

        If ae <> "" Then

            AEList = ae.Split(",")

            For Each AccountExec In AEList

                If Not [String].IsNullOrWhiteSpace(AccountExec) Then

                    AccountExec = AccountExec & ","

                End If

                DataTable = BuildYearDTAccountExecutiveDashClient(AccountExec.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByAccountExecutive") = DataTable

                If datatype = "Hours" Then

                    Session("DB_AccountExecutive_Caption") = DataTable.Columns(1).ColumnName

                End If

                If datatype = "Dollars" Then

                    Session("DB_AccountExecutive_Caption") = DataTable.Columns(1).ColumnName

                End If

                RadHtmlChart = CreateChart_ClientYear()

                If RadHtmlChart IsNot Nothing Then

                    Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            SqlDataReader = DropDowns.GetAccountExecutive("", "", "", Session("UserCodE"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildYearDTAccountExecutiveDashClient(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByAccountExecutive") = DataTable

                    DescriptionString = SqlDataReader("Description").ToString.Split("-")

                    If datatype = "Hours" Then

                        Session("DB_AccountExecutive_Caption") = DescriptionString(1).Trim

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_AccountExecutive_Caption") = DescriptionString(1).Trim

                    End If

                    RadHtmlChart = CreateChart_ClientYear()

                    If RadHtmlChart IsNot Nothing Then

                        Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientYear_JobType(ByVal Dashboard As Webvantage.cDashboard)

        'objects
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim JobTypeList As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing
        Dim JobTypeDataTable As System.Data.DataTable = Nothing

        If jt <> "" Then

            JobTypeList = jt.Split(",")

            For Each JobType In JobTypeList

                DataTable = BuildYearDTJobTypeDashClient(JobType.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByJobType") = DataTable

                If datatype = "Hours" Then
                    Session("DB_JobType_Caption") = DataTable.Columns(1).ColumnName
                End If

                If datatype = "Dollars" Then
                    Session("DB_JobType_Caption") = DataTable.Columns(1).ColumnName
                End If

                RadHtmlChart = CreateChart_ClientYear()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & JobType.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            JobTypeDataTable = DropDowns.ddJobName()

            If JobTypeDataTable.Rows.Count > 0 Then

                For Each DataRow In JobTypeDataTable.Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildYearDTJobTypeDashClient(DataRow("code").ToString.Replace("&", "").Replace("@", ""))

                    Session("ds_DASH_CompsByJobType") = DataTable

                    If datatype = "Hours" Then

                        Session("DB_JobType_Caption") = DataRow("description").ToString

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_JobType_Caption") = DataRow("description").ToString

                    End If

                    RadHtmlChart = CreateChart_ClientYear()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientYear.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub LoadDataDashClientYear(Optional ByVal type As String = "Month")

        Dim Dashboard As Webvantage.cDashboard = Nothing
        Dim count As Integer = 0

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        count = Request.QueryString("count")
        level = Request.QueryString("level")
        datatype = Request.QueryString("datatype")

        If cancel <> "" Then

            iscancel = True

        End If

        Me.PlaceHolderClientYear.Controls.Clear()

        Try

            Dashboard = New Webvantage.cDashboard(_Session.ConnectionString, _Session.UserCode)

            Select Case level

                Case "dept"

                    CreateCharts_ClientYear_Department(Dashboard)

                Case "SC"

                    CreateCharts_ClientYear_SalesClass(Dashboard)

                Case "C"

                    CreateCharts_ClientYear_Client(Dashboard)

                Case "CD"

                    CreateCharts_ClientYear_Division(Dashboard)

                Case "CDP"

                    CreateCharts_ClientYear_Product(Dashboard)

                Case "AE"

                    CreateCharts_ClientYear_AccountExecutive(Dashboard)

                Case "JT"

                    CreateCharts_ClientYear_JobType(Dashboard)

            End Select

        Catch ex As Exception
            Me.ShowMessage(ex.Message.ToString())
        End Try

    End Sub

    Private Sub RadGridDashClientYear_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridDashClientYear.ItemDataBound
        Try
            Dim countyear As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, countyear)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, countyear)
            End If
            Dim total As Integer
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then
                For i As Integer = 0 To e.Item.Cells.Count - 1
                    If IsNumeric(e.Item.Cells(i).Text) = True Then
                        e.Item.Cells(i).Text = String.Format("{0:#,##0.00}", CDec(e.Item.Cells(i).Text))
                    End If
                Next
            ElseIf e.Item.ItemType = GridItemType.Footer Then
                e.Item.Cells(2).Text = "Totals:"
                If level = "dept" Then
                    For i As Integer = 0 To Me.RadGridDashClientYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                If datatype = "Hours" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If datatype = "Dollars" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                            End If
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                            End If
                        Next
                    Next
                End If
                If level = "SC" Then
                    For i As Integer = 0 To Me.RadGridDashClientYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                If datatype = "Hours" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If datatype = "Dollars" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                            End If
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                            End If
                        Next
                    Next
                End If
                If level = "C" Then
                    For i As Integer = 0 To Me.RadGridDashClientYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                If datatype = "Hours" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If datatype = "Dollars" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                            End If
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                            End If
                        Next
                    Next
                End If
                If level = "CD" Then
                    For i As Integer = 0 To Me.RadGridDashClientYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                If datatype = "Hours" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If datatype = "Dollars" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                            End If
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                            End If
                        Next
                    Next
                End If
                If level = "CDP" Then
                    For i As Integer = 0 To Me.RadGridDashClientYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                If datatype = "Hours" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If datatype = "Dollars" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                            End If
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                            End If
                        Next
                    Next
                End If
                If level = "AE" Then
                    For i As Integer = 0 To Me.RadGridDashClientYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                If datatype = "Hours" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If datatype = "Dollars" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                            End If
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                            End If
                        Next
                    Next
                End If
                If level = "JT" Then
                    For i As Integer = 0 To Me.RadGridDashClientYear.MasterTableView.Columns.Count - 1
                        For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                            Dim str As String = Me.RadGridDashClientYear.MasterTableView.Columns(i).UniqueName.Replace("col", "")
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                If datatype = "Hours" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If datatype = "Dollars" Then
                                    e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                            End If
                            If Me.RadGridDashClientYear.MasterTableView.Columns(i).HeaderText = "Total" Then
                                e.Item.Cells(Me.RadGridDashClientYear.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                            End If
                        Next
                    Next
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub RadGridDashClientYear_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGridDashClientYear.NeedDataSource
        Try
            'If level = "dept" Then
            '    Me.RadGridDashClientYear.DataSource = BuildYearDTDashClient()
            'End If
            'If level = "SC" Then
            '    Me.RadGridDashClientYear.DataSource = BuildYearDTSalesClassDashClient()
            'End If
            'If level = "C" Then
            '    Me.RadGridDashClientYear.DataSource = BuildYearDTClientDashClient()
            'End If
            'If level = "CD" Then
            '    Me.RadGridDashClientYear.DataSource = BuildYearDTCDDashClient()
            'End If
            'If level = "CDP" Then
            '    Me.RadGridDashClientYear.DataSource = BuildYearDTCDPDashClient()
            'End If
            'If level = "AE" Then
            '    Me.RadGridDashClientYear.DataSource = BuildYearDTAccountExecutiveDashClient()
            'End If
            'If level = "JT" Then
            '    Me.RadGridDashClientYear.DataSource = BuildYearDTJobTypeDashClient()
            'End If

        Catch ex As Exception

        End Try
    End Sub

    Private Function BuildYearDTDashClient(ByVal dept As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, dept, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, dept, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTSalesClassDashClient(ByVal sccode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sccode, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sccode, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTClientDashClient(ByVal clientcode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTCDDashClient(ByVal clientcode As String, ByVal divisioncode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTCDPDashClient(ByVal clientcode As String, ByVal divisioncode As String, ByVal productcode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode, productcode)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode, productcode)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() & "/" & dt.Rows(w)("PRD_DESCRIPTION").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTAccountExecutiveDashClient(ByVal aecode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, aecode, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, aecode, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTJobTypeDashClient(ByVal jtcode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jtcode, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jtcode, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGYearDashClient()
        Try
            Me.RadGridDashClientYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearSalesClassDashClient()
        Try
            Me.RadGridDashClientYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearClientDashClient()
        Try
            Me.RadGridDashClientYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearCDDashClient()
        Try
            Me.RadGridDashClientYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearCDPDashClient()
        Try
            Me.RadGridDashClientYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearAccountExecutiveDashClient()
        Try
            Me.RadGridDashClientYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearJobTypeDashClient()
        Try
            Me.RadGridDashClientYear.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridDashClientYear.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

#End Region

#Region "Dashboard Client Month"

    Public Function WriteXMLClientMonth() As String
        Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
        Dim count As Integer = 0
        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        count = Request.QueryString("count")
        level = Request.QueryString("level")
        datatype = Request.QueryString("datatype")
        If level = "C" Then
            Return dash.getFCXMLData_Bar3D_Comps(Session("ds_DASH_CompsByClient"), Session("DB_Client_Caption"), "month", datatype, level, week, month, year, "", type, "month")
        End If
        If level = "CD" Then
            Return dash.getFCXMLData_Bar3D_Comps(Session("ds_DASH_CompsByCD"), Session("DB_CD_Caption"), "month", datatype, level, week, month, year, "", type, "month")
        End If
        If level = "CDP" Then
            Return dash.getFCXMLData_Bar3D_Comps(Session("ds_DASH_CompsByCDP"), Session("DB_CDP_Caption"), "month", datatype, level, week, month, year, "", type, "month")
        End If
        If level = "dept" Then
            Return dash.getFCXMLData_Bar3D_Comps(Session("ds_DASH_CompsByDept"), Session("DB_Dept_Caption"), "month", datatype, level, week, month, year, "", type, "month")
        End If
        If level = "SC" Then
            Return dash.getFCXMLData_Bar3D_Comps(Session("ds_DASH_CompsBySalesClass"), Session("DB_SalesClass_Caption"), "month", datatype, level, week, month, year, "", type, "month")
        End If
        If level = "AE" Then
            Return dash.getFCXMLData_Bar3D_Comps(Session("ds_DASH_CompsByAccountExecutive"), Session("DB_AccountExecutive_Caption"), "month", datatype, level, week, month, year, "", type, "month")
        End If
        If level = "JT" Then
            Return dash.getFCXMLData_Bar3D_Comps(Session("ds_DASH_CompsByJobType"), Session("DB_JobType_Caption"), "month", datatype, level, week, month, year, "", type, "month")
        End If
    End Function

    Private Function BuildMonthDTClientMonth(ByVal dept As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, dept, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, dept, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If


            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTSalesClassClientMonth(ByVal sccode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sccode, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sccode, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTClientClientMonth(ByVal clientcode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTCDClientMonth(ByVal clientcode As String, ByVal divisioncode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTCDPClientMonth(ByVal clientcode As String, ByVal divisioncode As String, ByVal productcode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode, productcode)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count, divisioncode, productcode)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() & "/" & dt.Rows(w)("PRD_DESCRIPTION").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTAccountExecutiveClientMonth(ByVal aecode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, aecode, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, aecode, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTJobTypeClientMonth(ByVal jtcode As String)
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jtcode, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jtcode, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Month Opened")
            Dim ms As DataColumn = New DataColumn("MS")
            Dim mend As DataColumn = New DataColumn("ME")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(ms)
            dtComps.Columns.Add(mend)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                Dim str() As String = ds.Tables(0).Rows(j)("MONTH_OPENED").ToString.Split("-")
                Dim d As New DateTime(str(1), ds.Tables(0).Rows(j)("MTH"), 1)
                newrow.Item("Month Opened") = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "MONTH_OPENED = '" & ds.Tables(0).Rows(j)("MONTH_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function CreateChart_ClientMonth() As Telerik.Web.UI.RadHtmlChart

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing

        Dashboard = New Webvantage.cDashboard(_Session.ConnectionString, _Session.UserCode)

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        level = Request.QueryString("level")
        datatype = Request.QueryString("datatype")

        Select Case level

            Case "C"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsByClient"), Session("DB_Client_Caption"), "month", datatype, "month")

            Case "CD"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsByCD"), Session("DB_CD_Caption"), "month", datatype, "month")

            Case "CDP"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsByCDP"), Session("DB_CDP_Caption"), "month", datatype, "month")

            Case "dept"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsByDept"), Session("DB_Dept_Caption"), "month", datatype, "month")

            Case "SC"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsBySalesClass"), Session("DB_SalesClass_Caption"), "month", datatype, "month")

            Case "AE"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsByAccountExecutive"), Session("DB_AccountExecutive_Caption"), "month", datatype, "month")

            Case "JT"

                RadHtmlChart = Dashboard.GetColumnChart_CompsClient(Session("ds_DASH_CompsByJobType"), Session("DB_JobType_Caption"), "month", datatype, "month")

        End Select

        If RadHtmlChart IsNot Nothing Then

            RadHtmlChart.Width = System.Web.UI.WebControls.Unit.Pixel(1100)
            RadHtmlChart.Height = System.Web.UI.WebControls.Unit.Pixel(300)

        End If

        Return RadHtmlChart

    End Function
    Private Sub CreateCharts_ClientMonth_Department(ByVal Dashboard As Webvantage.cDashboard)

        Dim DepartmentList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If DeptCode <> "" Then

            DepartmentList = DeptCode.Split(",")

            For Each Department In DepartmentList

                DataTable = BuildMonthDTClientMonth(Department.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByDept") = DataTable

                If datatype = "Hours" Then

                    Session("DB_Dept_Caption") = DataTable.Columns(3).ColumnName

                End If

                If datatype = "Dollars" Then

                    Session("DB_Dept_Caption") = DataTable.Columns(3).ColumnName

                End If

                RadHtmlChart = CreateChart_ClientMonth()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & Department.ToString.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetDepts("", Session("UserCode"))

            If DataSet.Tables(0).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(0).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildMonthDTClientMonth(DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByDept") = DataTable

                    If datatype = "Hours" Then

                        Session("DB_Dept_Caption") = DataRow("DP_TM_DESC")

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_Dept_Caption") = DataRow("DP_TM_DESC")

                    End If

                    RadHtmlChart = CreateChart_ClientMonth()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "literal" & DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientMonth_SalesClass(ByVal Dashboard As Webvantage.cDashboard)

        Dim SalesClassList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing
        Dim DescriptionString As String() = Nothing

        If sc <> "" Then

            SalesClassList = sc.Split(",")

            For Each SalesClass In SalesClassList

                DataTable = BuildMonthDTSalesClassClientMonth(SalesClass.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsBySalesClass") = DataTable

                If datatype = "Hours" Then
                    Session("DB_SalesClass_Caption") = DataTable.Columns(3).ColumnName
                End If

                If datatype = "Dollars" Then
                    Session("DB_SalesClass_Caption") = DataTable.Columns(3).ColumnName
                End If

                RadHtmlChart = CreateChart_ClientMonth()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & SalesClass.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetSalesClass()

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildMonthDTSalesClassClientMonth(SqlDataReader("code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsBySalesClass") = DataTable

                    DescriptionString = SqlDataReader("description").ToString.Split("-")

                    If datatype = "Hours" Then

                        Session("DB_SalesClass_Caption") = DescriptionString(1).Trim

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_SalesClass_Caption") = DescriptionString(1).Trim

                    End If

                    RadHtmlChart = CreateChart_ClientMonth()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientMonth_Client(ByVal Dashboard As Webvantage.cDashboard)

        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim DescriptionString As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildMonthDTClientClientMonth(ClientCode.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByClient") = DataTable

                If datatype = "Hours" Then

                    Session("DB_Client_Caption") = DataTable.Columns(3).ColumnName

                End If

                If datatype = "Dollars" Then

                    Session("DB_Client_Caption") = DataTable.Columns(3).ColumnName

                End If

                RadHtmlChart = CreateChart_ClientMonth()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetClientList(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildMonthDTClientClientMonth(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByClient") = DataTable

                    DescriptionString = SqlDataReader("Description").ToString.Split("-")

                    If datatype = "Hours" Then

                        Session("DB_Client_Caption") = DescriptionString(1).Trim

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_Client_Caption") = DescriptionString(1).Trim

                    End If

                    RadHtmlChart = CreateChart_ClientMonth()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "literal" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                    End If
                Loop
            End If
        End If

    End Sub
    Private Sub CreateCharts_ClientMonth_Division(ByVal Dashboard As Webvantage.cDashboard)

        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim DescriptionString As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildMonthDTCDClientMonth(ClientCode.Replace("&", "").Replace("@", ""), "")
                Session("ds_DASH_CompsByCD") = DataTable

                If datatype = "Hours" Then

                    Session("DB_CD_Caption") = DataTable.Columns(3).ColumnName

                End If

                If datatype = "Dollars" Then

                    Session("DB_CD_Caption") = DataTable.Columns(3).ColumnName

                End If

                RadHtmlChart = CreateChart_ClientMonth()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New Webvantage.cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetDivisionsAll(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    ClientList = SqlDataReader("Code").ToString.Split(":")

                    DataTable = BuildMonthDTCDClientMonth(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByCD") = DataTable

                    If datatype = "Hours" Then

                        Session("DB_CD_Caption") = SqlDataReader("Description")

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_CD_Caption") = SqlDataReader("Description")

                    End If

                    RadHtmlChart = CreateChart_ClientMonth()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientMonth_Product(ByVal Dashboard As Webvantage.cDashboard)

        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim DescriptionString As String() = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildMonthDTCDPClientMonth(ClientCode.Replace("&", "").Replace("@", ""), "", "")
                Session("ds_DASH_CompsByCDP") = DataTable

                If datatype = "Hours" Then

                    Session("DB_CDP_Caption") = DataTable.Columns(3).ColumnName

                End If

                If datatype = "Dollars" Then

                    Session("DB_CDP_Caption") = DataTable.Columns(3).ColumnName

                End If

                RadHtmlChart = CreateChart_ClientMonth()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                End If
            Next

        Else

            DropDowns = New Webvantage.cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetProductsAll(Session("UserCode"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    ClientList = SqlDataReader("Code").ToString.Split(":")

                    DataTable = BuildMonthDTCDPClientMonth(ClientList(0).ToString.Replace("&", "").Replace("@", ""), ClientList(1).ToString.Replace("&", "").Replace("@", ""), ClientList(2).ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByCDP") = DataTable

                    If datatype = "Hours" Then

                        Session("DB_CDP_Caption") = SqlDataReader("Description")

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_CDP_Caption") = SqlDataReader("Description")

                    End If

                    RadHtmlChart = CreateChart_ClientMonth()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientMonth_AccountExecutive(ByVal Dashboard As Webvantage.cDashboard)

        Dim AEList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim SqlDataReader As System.Data.SqlClient.SqlDataReader = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If ae <> "" Then

            AEList = ae.Split(",")

            For Each AccountExec In AEList

                If AccountExec <> "" Then

                    If AccountExec.Length = 1 Then

                        AccountExec = AccountExec & ","

                    End If

                    DataTable = BuildMonthDTAccountExecutiveClientMonth(AccountExec.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByAccountExecutive") = DataTable

                    If datatype = "Hours" Then

                        Session("DB_AccountExecutive_Caption") = DataTable.Columns(3).ColumnName

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_AccountExecutive_Caption") = DataTable.Columns(3).ColumnName

                    End If

                    RadHtmlChart = CreateChart_ClientMonth()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & AccountExec.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                    End If

                End If

            Next

        Else

            DropDowns = New cDropDowns(_Session.ConnectionString)

            SqlDataReader = DropDowns.GetAccountExecutive("", "", "", Session("UserCodE"))

            If SqlDataReader.HasRows Then

                Do While SqlDataReader.Read

                    DataTable = BuildMonthDTAccountExecutiveClientMonth(SqlDataReader("Code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByAccountExecutive") = DataTable

                    AEList = SqlDataReader("Description").ToString.Split("-")

                    If datatype = "Hours" Then

                        Session("DB_AccountExecutive_Caption") = AEList(1).Trim

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_AccountExecutive_Caption") = AEList(1).Trim

                    End If

                    RadHtmlChart = CreateChart_ClientMonth()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & SqlDataReader("Code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                    End If

                Loop

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientMonth_JobType(ByVal Dashboard As Webvantage.cDashboard)

        Dim JobTypeList As String() = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim JobTypeDataTable As System.Data.DataTable = Nothing
        Dim DropDowns As Webvantage.cDropDowns = Nothing

        If jt <> "" Then

            JobTypeList = jt.Split(",")

            For Each JobType In JobTypeList

                DataTable = BuildMonthDTJobTypeClientMonth(JobType.Replace("&", "").Replace("@", ""))
                Session("ds_DASH_CompsByJobType") = DataTable

                If datatype = "Hours" Then

                    Session("DB_JobType_Caption") = DataTable.Columns(3).ColumnName

                End If

                If datatype = "Dollars" Then

                    Session("DB_JobType_Caption") = DataTable.Columns(3).ColumnName

                End If

                RadHtmlChart = CreateChart_ClientMonth()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & JobType.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DropDowns = New Webvantage.cDropDowns(_Session.ConnectionString)

            JobTypeDataTable = DropDowns.ddJobName()

            If JobTypeDataTable.Rows.Count > 0 Then

                For Each DataRow In JobTypeDataTable.Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildMonthDTJobTypeClientMonth(DataRow("code").ToString.Replace("&", "").Replace("@", ""))
                    Session("ds_DASH_CompsByJobType") = DataTable

                    If datatype = "Hours" Then

                        Session("DB_JobType_Caption") = DataRow("description").ToString

                    End If

                    If datatype = "Dollars" Then

                        Session("DB_JobType_Caption") = DataRow("description").ToString

                    End If

                    RadHtmlChart = CreateChart_ClientMonth()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("code").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientMonth.Controls.Add(RadHtmlChart)

                    End If
                Next
            End If
        End If

    End Sub
    Private Sub LoadDashDataClientMonth()

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing

        Session("ds_DASH_NonDirect") = ""
        Session("ds_DASH_NonDirect") = Nothing

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        level = Request.QueryString("level")
        datatype = Request.QueryString("datatype")

        Me.PlaceHolderClientMonth.Controls.Clear()

        Me.PlaceHolderClientMonth.Controls.Clear()

        Try

            Dashboard = New cDashboard(_Session.ConnectionString, _Session.UserCode)

            Select Case level

                Case "C"

                    CreateCharts_ClientMonth_Client(Dashboard)

                Case "CD"

                    CreateCharts_ClientMonth_Division(Dashboard)

                Case "CDP"

                    CreateCharts_ClientMonth_Product(Dashboard)

                Case "dept"

                    CreateCharts_ClientMonth_Department(Dashboard)

                Case "SC"

                    CreateCharts_ClientMonth_SalesClass(Dashboard)

                Case "AE"

                    CreateCharts_ClientMonth_AccountExecutive(Dashboard)

                Case "JT"

                    CreateCharts_ClientMonth_JobType(Dashboard)

            End Select

        Catch ex As Exception
            Me.ShowMessage(ex.Message.ToString())
        End Try

    End Sub

#End Region

#Region "Dashboard Client Week"

    Private Function BuildWeekDTClientWeek(ByVal dept As String, ByVal datatype As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, dept, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, dept, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 2 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            'Dim dsAvg As DataSet
            'For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
            '    dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", "", ds.Tables(1).Rows(i)("DP_TM_CODE"), "", "", 0, 1, level, "", False, Session("UserCode"), type, project, count)
            '    For p As Integer = 0 To dtComps.Rows.Count - 1
            '        dtWeek = dsAvg.Tables(0).DefaultView
            '        dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
            '        dt = dtWeek.ToTable
            '        For j As Integer = 0 To dt.Rows.Count - 1
            '            For q As Integer = 0 To dtComps.Columns.Count - 1
            '                If dtComps.Columns(q).ColumnName = dt.Rows(j)("DP_TM_DESC").ToString()Then
            '                    dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
            '                End If
            '            Next
            '        Next
            '    Next
            'Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildWeekDTSalesClassClientWeek(ByVal sccode As String, ByVal datatype As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sccode, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sccode, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 2 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            'Dim dsAvg As DataSet
            'For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
            '    dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", "", "", ds.Tables(1).Rows(i)("SC_CODE"), "", 0, 1, level, "", False, Session("UserCode"), type, project, count)
            '    For p As Integer = 0 To dtComps.Rows.Count - 1
            '        dtWeek = dsAvg.Tables(0).DefaultView
            '        dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
            '        dt = dtWeek.ToTable
            '        For j As Integer = 0 To dt.Rows.Count - 1
            '            For q As Integer = 0 To dtComps.Columns.Count - 1
            '                If dtComps.Columns(q).ColumnName = dt.Rows(j)("SC_DESCRIPTION").ToString()Then
            '                    dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
            '                End If
            '            Next
            '        Next
            '    Next
            'Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildWeekDTClientClientWeek(ByVal clientcode As String, ByVal datatype As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count)
            End If


            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            'Dim dsAvg As DataSet
            'For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
            '    dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", ds.Tables(1).Rows(i)("CL_CODE"), "", "", "", 0, 1, level, "", False, Session("UserCode"), type, project, count)
            '    For p As Integer = 0 To dtComps.Rows.Count - 1
            '        dtWeek = dsAvg.Tables(0).DefaultView
            '        dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
            '        dt = dtWeek.ToTable
            '        For j As Integer = 0 To dt.Rows.Count - 1
            '            For q As Integer = 0 To dtComps.Columns.Count - 1
            '                If dtComps.Columns(q).ColumnName = dt.Rows(j)("CL_NAME").ToString()Then
            '                    dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
            '                End If
            '            Next
            '        Next
            '    Next
            'Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildWeekDTCDClientWeek(ByVal clientcode As String, ByVal datatype As String, ByVal divisioncode As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count, divisioncode)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count, divisioncode)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString(), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            'Dim dsAvg As DataSet
            'For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
            '    dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", ds.Tables(1).Rows(i)("CL_CODE"), "", "", "", 0, 1, level, "", False, Session("UserCode"), type, project, count)
            '    For p As Integer = 0 To dtComps.Rows.Count - 1
            '        dtWeek = dsAvg.Tables(0).DefaultView
            '        dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
            '        dt = dtWeek.ToTable
            '        For j As Integer = 0 To dt.Rows.Count - 1
            '            For q As Integer = 0 To dtComps.Columns.Count - 1
            '                If dtComps.Columns(q).ColumnName = dt.Rows(j)("CL_NAME").ToString()& "/" & dt.Rows(j)("DIV_NAME").ToString()Then
            '                    dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
            '                End If
            '            Next
            '        Next
            '    Next
            'Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildWeekDTCDPClientWeek(ByVal clientcode As String, ByVal datatype As String, ByVal divisioncode As String, ByVal productcode As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count, divisioncode, productcode)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, clientcode, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, count, divisioncode, productcode)
            End If


            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString(), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString() & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() & "/" & dt.Rows(w)("PRD_DESCRIPTION").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            'Dim dsAvg As DataSet
            'For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
            '    dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", ds.Tables(1).Rows(i)("CL_CODE"), "", "", "", 0, 1, level, "", False, Session("UserCode"), type, project, count)
            '    For p As Integer = 0 To dtComps.Rows.Count - 1
            '        dtWeek = dsAvg.Tables(0).DefaultView
            '        dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
            '        dt = dtWeek.ToTable
            '        For j As Integer = 0 To dt.Rows.Count - 1
            '            For q As Integer = 0 To dtComps.Columns.Count - 1
            '                If dtComps.Columns(q).ColumnName = dt.Rows(j)("CL_NAME").ToString() & "/" & dt.Rows(j)("DIV_NAME").ToString() & "/" & dt.Rows(j)("PRD_DESCRIPTION") Then
            '                    dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
            '                End If
            '            Next
            '        Next
            '    Next
            'Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildWeekDTAccountExecutiveClientWeek(ByVal aecode As String, ByVal datatype As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, aecode, client, DeptCode, sc, ae, 0, 1, level, "", False, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, aecode, client, DeptCode, sc, ae, 0, 1, level, "", False, Session("UserCode"), type, project, count)
            End If


            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            'Dim dsAvg As DataSet
            'For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
            '    dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", ds.Tables(1).Rows(i)("ACCT_EXEC"), "", "", "", "", 0, 1, level, "", False, Session("UserCode"), type, project, count)
            '    For p As Integer = 0 To dtComps.Rows.Count - 1
            '        dtWeek = dsAvg.Tables(0).DefaultView
            '        dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
            '        dt = dtWeek.ToTable
            '        For j As Integer = 0 To dt.Rows.Count - 1
            '            For q As Integer = 0 To dtComps.Columns.Count - 1
            '                If dtComps.Columns(q).ColumnName = dt.Rows(j)("ACCT_NAME").ToString()Then
            '                    dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
            '                End If
            '            Next
            '        Next
            '    Next
            'Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildWeekDTJobTypeClientWeek(ByVal jtcode As String, ByVal datatype As String)
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")


            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jtcode, 0, 1, level, "", False, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jtcode, 0, 1, level, "", False, Session("UserCode"), type, project, count)
            End If


            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            'Dim dsAvg As DataSet
            'For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
            '    dsAvg = dash.GetCompsByWeekByDeptAvg("", month, year, week, "", "", "", "", "", ds.Tables(1).Rows(i)("JOB_TYPE"), 0, 1, level, "", False, Session("UserCode"), type, project, count)
            '    For p As Integer = 0 To dtComps.Rows.Count - 1
            '        dtWeek = dsAvg.Tables(0).DefaultView
            '        dtWeek.RowFilter = "DATE_OPENED = " & dtComps.Rows(p)("Date Opened") & " AND WEEK_START = '" & dtComps.Rows(p)("WS") & "'"
            '        dt = dtWeek.ToTable
            '        For j As Integer = 0 To dt.Rows.Count - 1
            '            For q As Integer = 0 To dtComps.Columns.Count - 1
            '                If dtComps.Columns(q).ColumnName = dt.Rows(j)("JT_DESC").ToString()Then
            '                    dtComps.Rows(p)(q) = dt.Rows(j)("AVERAGE")
            '                End If
            '            Next
            '        Next
            '    Next
            'Next



            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function CreateChart_ClientWeek() As Telerik.Web.UI.RadHtmlChart

        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim Dashboard As Webvantage.cDashboard = Nothing
        Dim count As Integer = 0

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        count = Request.QueryString("count")
        level = Request.QueryString("level")
        datatype = Request.QueryString("datatype")

        Dashboard = New Webvantage.cDashboard(_Session.ConnectionString, _Session.UserCode)

        Select Case level

            Case "C"

                RadHtmlChart = Dashboard.GetColumnChart_Hours(Session("ds_DASH_CompsByClient"), Session("DB_Client_Caption"), datatype)

            Case "CD"

                RadHtmlChart = Dashboard.GetColumnChart_Hours(Session("ds_DASH_CompsByCD"), Session("DB_CD_Caption"), datatype)

            Case "CDP"

                RadHtmlChart = Dashboard.GetColumnChart_Hours(Session("ds_DASH_CompsByCDP"), Session("DB_CDP_Caption"), datatype)

            Case "dept"

                RadHtmlChart = Dashboard.GetColumnChart_Hours(Session("ds_DASH_CompsByDept"), Session("DB_Dept_Caption"), datatype)

            Case "SC"

                RadHtmlChart = Dashboard.GetColumnChart_Hours(Session("ds_DASH_CompsBySalesClass"), Session("DB_SalesClass_Caption"), datatype)

            Case "AE"

                RadHtmlChart = Dashboard.GetColumnChart_Hours(Session("ds_DASH_CompsByAccountExecutive"), Session("DB_AccountExecutive_Caption"), datatype)

            Case "JT"

                RadHtmlChart = Dashboard.GetColumnChart_Hours(Session("ds_DASH_CompsByJobType"), Session("DB_JobType_Caption"), datatype)

        End Select

        If RadHtmlChart IsNot Nothing Then

            RadHtmlChart.Height = System.Web.UI.WebControls.Unit.Pixel(300)
            RadHtmlChart.Width = System.Web.UI.WebControls.Unit.Pixel(1100)

        End If

        Return RadHtmlChart

    End Function
    Private Sub CreateCharts_ClientWeek_Department_Hours(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DepartmentList As String() = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If DeptCode <> "" Then

            DepartmentList = DeptCode.Split(",")

            For Each Department In DepartmentList

                DataTable = BuildWeekDTClientWeek(Department.Replace("&", "").Replace("@", ""), "Hours")
                Session("ds_DASH_CompsByDept") = DataTable
                Session("DB_Dept_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_ClientWeek()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & Department.ToString.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTClientWeek(DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", ""), "Hours")
                    Session("ds_DASH_CompsByDept") = DataTable
                    Session("DB_Dept_Caption") = DataRow("DP_TM_DESC")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "literal" & DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_Department_Dollars(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DepartmentList As String() = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If DeptCode <> "" Then

            DepartmentList = DeptCode.Split(",")

            For Each Department In DepartmentList

                DataTable = BuildWeekDTClientWeek(Department.Replace("&", "").Replace("@", ""), "Dollars")
                Session("ds_DASH_CompsByDept") = DataTable
                Session("DB_Dept_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_ClientWeek()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & Department.ToString.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTClientWeek(DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", ""), "Dollars")
                    Session("ds_DASH_CompsByDept") = DataTable
                    Session("DB_Dept_Caption") = DataRow("DP_TM_DESC")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("DP_TM_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_SalesClass_Hours(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim SalesClassList As String() = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If sc <> "" Then

            SalesClassList = sc.Split(",")

            For Each SalesClass In SalesClassList

                DataTable = BuildWeekDTSalesClassClientWeek(SalesClass.Replace("&", "").Replace("@", ""), "Hours")
                Session("ds_DASH_CompsBySalesClass") = DataTable
                Session("DB_SalesClass_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_ClientWeek()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & SalesClass.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTSalesClassClientWeek(DataRow("SC_CODE").ToString.Replace("&", "").Replace("@", ""), "Hours")
                    Session("ds_DASH_CompsBySalesClass") = DataTable
                    Session("DB_SalesClass_Caption") = DataRow("SC_DESCRIPTION")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("SC_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_SalesClass_Dollars(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim SalesClassList As String() = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If sc <> "" Then

            SalesClassList = sc.Split(",")

            For Each SalesClass In SalesClassList

                DataTable = BuildWeekDTSalesClassClientWeek(SalesClass.Replace("&", "").Replace("@", ""), "Dollars")
                Session("ds_DASH_CompsBySalesClass") = DataTable
                Session("DB_SalesClass_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_ClientWeek()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & SalesClass.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTSalesClassClientWeek(DataRow("SC_CODE").ToString.Replace("&", "").Replace("@", ""), "Dollars")
                    Session("ds_DASH_CompsBySalesClass") = DataTable
                    Session("DB_SalesClass_Caption") = DataRow("SC_DESCRIPTION")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("SC_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_Client_Hours(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildWeekDTClientClientWeek(ClientCode.Replace("&", "").Replace("@", ""), "Hours")
                Session("ds_DASH_CompsByClient") = DataTable
                Session("DB_Client_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_ClientWeek()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTClientClientWeek(DataRow("CL_CODE"), "Hours")
                    Session("ds_DASH_CompsByClient") = DataTable
                    Session("DB_Client_Caption") = DataRow("CL_NAME")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("CL_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_Client_Dollars(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildWeekDTClientClientWeek(ClientCode.Replace("&", "").Replace("@", ""), "Dollars")
                Session("ds_DASH_CompsByClient") = DataTable
                Session("DB_Client_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_ClientWeek()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTClientClientWeek(DataRow("CL_CODE").ToString.Replace("&", "").Replace("@", ""), "Dollars")
                    Session("ds_DASH_CompsByClient") = DataTable
                    Session("DB_Client_Caption") = DataRow("CL_NAME")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("CL_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_Division_Hours(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildWeekDTClientClientWeek(ClientCode.Replace("&", "").Replace("@", ""), "Hours")
                Session("ds_DASH_CompsByCD") = DataTable
                Session("DB_CD_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_ClientWeek()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTCDClientWeek(DataRow("CL_CODE"), "Hours", DataRow("DIV_CODE"))
                    Session("ds_DASH_CompsByCD") = DataTable
                    Session("DB_CD_Caption") = DataRow("CL_CODE") & " | " & DataRow("DIV_CODE") & " - " & DataRow("DIV_NAME")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("DIV_CODE").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_Division_Dollars(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildWeekDTCDClientWeek(ClientCode.Replace("&", "").Replace("@", ""), "Hours", "")
                Session("ds_DASH_CompsByCD") = DataTable
                Session("DB_CD_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_ClientWeek()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTCDClientWeek(DataRow("CL_CODE"), "Hours", DataRow("DIV_CODE"))
                    Session("ds_DASH_CompsByCD") = DataTable
                    Session("DB_CD_Caption") = DataRow("CL_CODE") & " | " & DataRow("DIV_CODE") & " - " & DataRow("DIV_NAME")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("DIV_CODE").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_Product_Hours(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildWeekDTClientClientWeek(ClientCode.Replace("&", "").Replace("@", ""), "Hours")
                Session("ds_DASH_CompsByCDP") = DataTable
                Session("DB_CDP_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_ClientWeek()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTCDPClientWeek(DataRow("CL_CODE"), "Hours", DataRow("DIV_CODE"), DataRow("PRD_CODE"))
                    Session("ds_DASH_CompsByCDP") = DataTable
                    Session("DB_CDP_Caption") = DataRow("CL_CODE") & " | " & DataRow("DIV_CODE") & " | " & DataRow("PRD_CODE") & " - " & DataRow("PRD_DESCRIPTION")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("PRD_CODE").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_Product_Dollars(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim ClientList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If client <> "" Then

            ClientList = client.Split(",")

            For Each ClientCode In ClientList

                DataTable = BuildWeekDTCDPClientWeek(ClientCode.Replace("&", "").Replace("@", ""), "Hours", "", "")
                Session("ds_DASH_CompsByCDP") = DataTable
                Session("DB_CDP_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_ClientWeek()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & ClientCode.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTCDPClientWeek(DataRow("CL_CODE"), "Hours", DataRow("DIV_CODE"), DataRow("PRD_CODE"))
                    Session("ds_DASH_CompsByCDP") = DataTable
                    Session("DB_CDP_Caption") = DataRow("CL_CODE") & " | " & DataRow("DIV_CODE") & " | " & DataRow("PRD_CODE") & " - " & DataRow("PRD_DESCRIPTION")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("PRD_CODE").ToString.Replace("&", "").Replace("@", "").Replace(":", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_AccountExecutive_Hours(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim AEList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If ae <> "" Then

            AEList = ae.Split(",")

            For Each AcctExec In AEList

                If AcctExec <> "" Then

                    If AcctExec.Length = 1 Then

                        AcctExec = AcctExec & ","

                    End If

                    DataTable = BuildWeekDTAccountExecutiveClientWeek(AcctExec.Replace("&", "").Replace("@", ""), "Hours")
                    Session("ds_DASH_CompsByAccountExecutive") = DataTable
                    Session("DB_AccountExecutive_Caption") = DataTable.Columns(3).ColumnName

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & AcctExec.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                End If

            Next

        Else

            DataSet = Dashboard.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, ae, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTAccountExecutiveClientWeek(DataRow("ACCT_EXEC").ToString.Replace("&", "").Replace("@", ""), "Hours")
                    Session("ds_DASH_CompsByAccountExecutive") = DataTable
                    Session("DB_AccountExecutive_Caption") = DataRow("ACCT_NAME")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("ACCT_EXEC").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_AccountExecutive_Dollars(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim AEList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If ae <> "" Then

            AEList = ae.Split(",")

            For Each AcctExec In AEList

                If AcctExec <> "" Then

                    If AcctExec.Length = 1 Then

                        AcctExec = AcctExec & ","

                    End If

                    DataTable = BuildWeekDTAccountExecutiveClientWeek(AcctExec.Replace("&", "").Replace("@", ""), "Dollars")
                    Session("ds_DASH_CompsByAccountExecutive") = DataTable
                    Session("DB_AccountExecutive_Caption") = DataTable.Columns(3).ColumnName

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & AcctExec.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                End If

            Next

        Else

            DataSet = Dashboard.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, ae, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTAccountExecutiveClientWeek(DataRow("ACCT_EXEC").ToString.Replace("&", "").Replace("@", ""), "Dollars")
                    Session("ds_DASH_CompsByAccountExecutive") = DataTable
                    Session("DB_AccountExecutive_Caption") = DataRow("ACCT_NAME")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("ACCT_EXEC").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_JobType_Hours(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim JobTypeList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If jt <> "" Then

            JobTypeList = jt.Split(",")

            For Each JobType In JobTypeList

                DataTable = BuildWeekDTJobTypeClientWeek(JobType.Replace("&", "").Replace("@", ""), "Hours")
                Session("ds_DASH_CompsByJobType") = DataTable
                Session("DB_JobType_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_ClientWeek()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & JobType.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTJobTypeClientWeek(DataRow("JT_CODE").ToString.Replace("&", "").Replace("@", ""), "Hours")
                    Session("ds_DASH_CompsByJobType") = DataTable
                    Session("DB_JobType_Caption") = DataRow("JT_DESC")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("JT_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub CreateCharts_ClientWeek_JobType_Dollars(ByVal Dashboard As Webvantage.cDashboard, ByVal Count As Integer)

        'objects
        Dim JobTypeList As String() = Nothing
        Dim DataTable As System.Data.DataTable = Nothing
        Dim RadHtmlChart As Telerik.Web.UI.RadHtmlChart = Nothing
        Dim DataSet As System.Data.DataSet = Nothing

        If jt <> "" Then

            JobTypeList = jt.Split(",")

            For Each JobType In JobTypeList

                DataTable = BuildWeekDTJobTypeClientWeek(JobType.Replace("&", "").Replace("@", ""), "Dollars")
                Session("ds_DASH_CompsByJobType") = DataTable
                Session("DB_JobType_Caption") = DataTable.Columns(3).ColumnName

                RadHtmlChart = CreateChart_ClientWeek()

                If RadHtmlChart IsNot Nothing Then

                    RadHtmlChart.ID = "RadHtmlChart" & JobType.Replace("&", "").Replace("@", "")
                    Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                End If

            Next

        Else

            DataSet = Dashboard.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, Count)

            If DataSet.Tables(1).Rows.Count > 0 Then

                For Each DataRow In DataSet.Tables(1).Rows.OfType(Of System.Data.DataRow)()

                    DataTable = BuildWeekDTJobTypeClientWeek(DataRow("JT_CODE").ToString.Replace("&", "").Replace("@", ""), "Dollars")
                    Session("ds_DASH_CompsByJobType") = DataTable
                    Session("DB_JobType_Caption") = DataRow("JT_DESC")

                    RadHtmlChart = CreateChart_ClientWeek()

                    If RadHtmlChart IsNot Nothing Then

                        RadHtmlChart.ID = "RadHtmlChart" & DataRow("JT_CODE").ToString.Replace("&", "").Replace("@", "")
                        Me.PlaceHolderClientWeek.Controls.Add(RadHtmlChart)

                    End If

                Next

            End If

        End If

    End Sub
    Private Sub LoadDataDashClientWeek(ByVal datatype As String)

        'objects
        Dim Dashboard As Webvantage.cDashboard = Nothing
        Dim Count As Integer = 0

        Session("ds_DASH_NonDirect") = ""
        Session("ds_DASH_NonDirect") = Nothing

        type = Request.QueryString("range")
        week = Request.QueryString("week")
        month = Request.QueryString("month")
        year = Request.QueryString("year")
        project = Request.QueryString("project")
        Count = Request.QueryString("count")
        level = Request.QueryString("level")
        datatype = Request.QueryString("datatype")

        Me.PlaceHolderClientWeek.Controls.Clear()

        Try

            Dashboard = New Webvantage.cDashboard(_Session.ConnectionString, _Session.UserCode)

            If datatype = "Hours" Then

                Select Case level

                    Case "dept"

                        CreateCharts_ClientWeek_Department_Hours(Dashboard, Count)

                    Case "SC"

                        CreateCharts_ClientWeek_SalesClass_Hours(Dashboard, Count)

                    Case "C"

                        CreateCharts_ClientWeek_Client_Hours(Dashboard, Count)

                    Case "CD"

                        CreateCharts_ClientWeek_Division_Hours(Dashboard, Count)

                    Case "CDP"

                        CreateCharts_ClientWeek_Product_Hours(Dashboard, Count)

                    Case "AE"

                        CreateCharts_ClientWeek_AccountExecutive_Hours(Dashboard, Count)

                    Case "JT"

                        CreateCharts_ClientWeek_JobType_Hours(Dashboard, Count)

                End Select

            ElseIf datatype = "Dollars" Then

                Select Case level

                    Case "dept"

                        CreateCharts_ClientWeek_Department_Dollars(Dashboard, Count)

                    Case "SC"

                        CreateCharts_ClientWeek_SalesClass_Dollars(Dashboard, Count)

                    Case "C"

                        CreateCharts_ClientWeek_Client_Dollars(Dashboard, Count)

                    Case "CD"

                        CreateCharts_ClientWeek_Division_Dollars(Dashboard, Count)

                    Case "CDP"

                        CreateCharts_ClientWeek_Product_Dollars(Dashboard, Count)

                    Case "AE"

                        CreateCharts_ClientWeek_AccountExecutive_Dollars(Dashboard, Count)

                    Case "JT"

                        CreateCharts_ClientWeek_JobType_Dollars(Dashboard, Count)

                End Select

            End If

        Catch ex As Exception
            Me.ShowMessage(ex.Message.ToString())
        End Try

    End Sub

#End Region

#Region "Dashboard Client Detail"

    Private Sub RadGridCompsClient_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridCompsClient.ItemDataBound
        Try
            Dim countyear As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dashdata As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dashdata.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            End If
            If datatype = "Dollars" Then
                ds = dashdata.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            End If

            Dim total As Decimal
            Dim totalmonth As Decimal
            Dim count As Integer
            Dim fourweektotal As Integer
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then
                For i As Integer = 3 To e.Item.Cells.Count - 1
                    If IsNumeric(e.Item.Cells(i).Text) = True Then
                        e.Item.Cells(i).Text = String.Format("{0:#,##0.00}", CDec(e.Item.Cells(i).Text))
                    End If
                Next
            ElseIf e.Item.ItemType = GridItemType.Footer Then
                If datatype = "Hours" Then
                    e.Item.Cells(3).Text = "Totals:"
                    If level = "dept" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "SC" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "C" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "CD" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "CDP" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "AE" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "JT" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If

                    If dash = "Y" Then
                        e.Item.Cells(2).Text = "Totals:"

                    End If
                End If
                If datatype = "Dollars" Then
                    e.Item.Cells(3).Text = "Totals:"
                    If level = "dept" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "SC" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "C" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "CD" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "CDP" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "AE" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "JT" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub
    Private Sub RadGridCompsClient_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGridCompsClient.NeedDataSource
        Try
            If level = "dept" Then
                Me.RadGridCompsClient.DataSource = BuildWeekDTDetailClient()
            End If
            If level = "SC" Then
                Me.RadGridCompsClient.DataSource = BuildWeekDTSalesClassDetailClient()
            End If
            If level = "C" Then
                Me.RadGridCompsClient.DataSource = BuildWeekDTClientDetailClient()
            End If
            If level = "CD" Then
                Me.RadGridCompsClient.DataSource = BuildWeekDTCDDetailClient()
            End If
            If level = "CDP" Then
                Me.RadGridCompsClient.DataSource = BuildWeekDTCDPDetailClient()
            End If
            If level = "AE" Then
                Me.RadGridCompsClient.DataSource = BuildWeekDTAccountExecutiveDetailClient()
            End If
            If level = "JT" Then
                Me.RadGridCompsClient.DataSource = BuildWeekDTJobTypeDetailClient()
            End If
        Catch ex As Exception

        End Try
    End Sub

    Public Sub RadGridCompClient_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs)
        Try
            Dim dt As DataTable
            If level = "C" Then
                dt = Me.BuildWeekDTClientDetailClient()
            End If
            If level = "CD" Then
                dt = Me.BuildWeekDTCDDetailClient()
            End If
            If level = "CDP" Then
                dt = Me.BuildWeekDTCDPDetailClient()
            End If
            If level = "dept" Then
                dt = Me.BuildWeekDTDetailClient()
            End If
            If level = "SC" Then
                dt = Me.BuildWeekDTSalesClassDetailClient()
            End If
            If level = "AE" Then
                dt = Me.BuildWeekDTAccountExecutiveDetailClient()
            End If
            If level = "JT" Then
                dt = Me.BuildWeekDTJobTypeDetailClient()
            End If
            dt.Columns.Remove("Date Opened")
            dt.Columns.Remove("WS")
            sender.DataSource = dt
        Catch ex As Exception

        End Try
    End Sub
    Public Sub RadGridCompClient_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs)
        Try
            Dim countyear As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dashdata As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dashdata.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            End If
            If datatype = "Dollars" Then
                ds = dashdata.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            End If

            Dim total As Decimal
            Dim totalmonth As Decimal
            Dim count As Integer
            Dim fourweektotal As Integer
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then
                For i As Integer = 3 To e.Item.Cells.Count - 1
                    If IsNumeric(e.Item.Cells(i).Text) = True Then
                        e.Item.Cells(i).Text = String.Format("{0:#,##0.00}", CDec(e.Item.Cells(i).Text))
                    End If
                Next
            ElseIf e.Item.ItemType = GridItemType.Footer Then
                If datatype = "Hours" Then
                    e.Item.Cells(3).Text = "Totals:"
                    If level = "dept" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "SC" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "C" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "CD" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "CDP" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "AE" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "JT" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                    total += ds.Tables(3).Rows(j)("HOURS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If

                    If dash = "Y" Then
                        e.Item.Cells(2).Text = "Totals:"

                    End If
                End If
                If datatype = "Dollars" Then
                    e.Item.Cells(3).Text = "Totals:"
                    If level = "dept" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "SC" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "C" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "CD" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "CDP" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "AE" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                    If level = "JT" Then
                        For i As Integer = 0 To Me.RadGridCompsClient.MasterTableView.Columns.Count - 1
                            For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                    total += ds.Tables(3).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridCompsClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridCompsClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                        Next
                    End If
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub RadGridMonthClient_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridMonthClient.ItemDataBound
        Try
            Dim countyear As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dashdata As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dashdata.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            End If
            If datatype = "Dollars" Then
                ds = dashdata.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            End If

            Dim total As Decimal
            Dim totalmonth As Decimal
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then
                For i As Integer = 3 To e.Item.Cells.Count - 1
                    If IsNumeric(e.Item.Cells(i).Text) = True Then
                        e.Item.Cells(i).Text = String.Format("{0:#,##0.00}", CDec(e.Item.Cells(i).Text))
                    End If
                Next
            ElseIf e.Item.ItemType = GridItemType.Footer Then
                e.Item.Cells(2).Text = "Totals:"
                If datatype = "Hours" Then
                    If level = "dept" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Department" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "SC" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Sales Class" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "C" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Client" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "CD" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Division" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "CDP" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Division" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Product" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "AE" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Account Executive" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "JT" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Job Type" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                End If
                If datatype = "Dollars" Then
                    If level = "dept" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Department" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "SC" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Sales Class" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "C" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Client" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "CD" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Division" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "CDP" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Division" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Product" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "AE" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Account Executive" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "JT" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Job Type" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub
    Private Sub RadGridMonthClient_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGridMonthClient.NeedDataSource
        Try
            If level = "dept" Then
                Me.RadGridMonthClient.DataSource = BuildMonthDTDetailClient()
            End If
            If level = "SC" Then
                Me.RadGridMonthClient.DataSource = BuildMonthDTSalesClassDetailClient()
            End If
            If level = "C" Then
                Me.RadGridMonthClient.DataSource = BuildMonthDTClientDetailClient()
            End If
            If level = "CD" Then
                Me.RadGridMonthClient.DataSource = BuildMonthDTCDDetailClient()
            End If
            If level = "CDP" Then
                Me.RadGridMonthClient.DataSource = BuildMonthDTCDPDetailClient()
            End If
            If level = "AE" Then
                Me.RadGridMonthClient.DataSource = BuildMonthDTAccountExecutiveDetailClient()
            End If
            If level = "JT" Then
                Me.RadGridMonthClient.DataSource = BuildMonthDTJobTypeDetailClient()
            End If

        Catch ex As Exception

        End Try
    End Sub

    Public Sub RadGridMthClient_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs)
        Try
            sender.DataSource = Me.RadGridMonthClient.DataSource
        Catch ex As Exception

        End Try
    End Sub
    Public Sub RadGridMthClient_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs)
        Try
            Dim countyear As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dashdata As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dashdata.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            End If
            If datatype = "Dollars" Then
                ds = dashdata.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            End If

            Dim total As Decimal
            Dim totalmonth As Decimal
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then
                For i As Integer = 3 To e.Item.Cells.Count - 1
                    If IsNumeric(e.Item.Cells(i).Text) = True Then
                        e.Item.Cells(i).Text = String.Format("{0:#,##0.00}", CDec(e.Item.Cells(i).Text))
                    End If
                Next
            ElseIf e.Item.ItemType = GridItemType.Header Then
                For i As Integer = 0 To e.Item.Cells.Count - 1
                    If e.Item.Cells(i).Text.Contains("-") = True Then
                        Dim str() As String = e.Item.Cells(i).Text.Split("-")
                        Dim mth As Integer
                        If str(0) = "Jan" Then
                            mth = 1
                        End If
                        If str(0) = "Feb" Then
                            mth = 2
                        End If
                        If str(0) = "Mar" Then
                            mth = 3
                        End If
                        If str(0) = "Apr" Then
                            mth = 4
                        End If
                        If str(0) = "May" Then
                            mth = 5
                        End If
                        If str(0) = "Jun" Then
                            mth = 6
                        End If
                        If str(0) = "Jul" Then
                            mth = 7
                        End If
                        If str(0) = "Aug" Then
                            mth = 8
                        End If
                        If str(0) = "Sep" Then
                            mth = 9
                        End If
                        If str(0) = "Oct" Then
                            mth = 10
                        End If
                        If str(0) = "Nov" Then
                            mth = 11
                        End If
                        If str(0) = "Dec" Then
                            mth = 12
                        End If
                        Dim d As New DateTime(str(1), mth, 1)
                        e.Item.Cells(i).Text = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    End If
                Next
            ElseIf e.Item.ItemType = GridItemType.Footer Then
                e.Item.Cells(2).Text = "Totals:"
                If datatype = "Hours" Then
                    If level = "dept" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Department" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "SC" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Sales Class" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "C" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Client" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "CD" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Division" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "CDP" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Division" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Product" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "AE" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Account Executive" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "JT" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                    total += ds.Tables(2).Rows(j)("HOURS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Job Type" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                End If
                If datatype = "Dollars" Then
                    If level = "dept" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Department" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "SC" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Sales Class" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "C" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Client" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "CD" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Division" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "CDP" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Division" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Product" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "AE" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Account Executive" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                    If level = "JT" Then
                        For i As Integer = 0 To Me.RadGridMonthClient.MasterTableView.Columns.Count - 1
                            totalmonth = 0
                            For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("MONTH_OPENED") Then
                                    totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                    total += ds.Tables(2).Rows(j)("DOLLARS")
                                End If
                                If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                    e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                End If
                            Next
                            If Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridMonthClient.MasterTableView.Columns(i).HeaderText <> "Job Type" Then
                                e.Item.Cells(Me.RadGridMonthClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                            End If
                        Next
                    End If
                End If
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub RadGridYearClient_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridYearClient.ItemDataBound
        Try
            Dim countyear As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dashdata As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dashdata.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            End If
            If datatype = "Dollars" Then
                ds = dashdata.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            End If
            Dim total As Decimal
            Dim totalmonth As Decimal
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then

            ElseIf e.Item.ItemType = GridItemType.Footer Then
                e.Item.Cells(2).Text = "Totals:"
                If Request.QueryString("eopt") = "True" Then
                    If datatype = "Hours" Then
                        If level = "dept" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += ds.Tables(3).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "SC" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += ds.Tables(3).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "C" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += CDec(ds.Tables(3).Rows(j)("HOURS"))
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "CD" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += ds.Tables(3).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "CDP" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += ds.Tables(3).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "AE" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += ds.Tables(3).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "JT" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += ds.Tables(3).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                    End If
                    If datatype = "Dollars" Then
                        If level = "dept" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "SC" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "C" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "CD" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "CDP" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "AE" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "JT" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                    End If
                Else
                    If datatype = "Hours" Then

                        e.Item.Cells(2).Text = "Totals:"
                        If level = "dept" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Department" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "SC" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Sales Class" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "C" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Client" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "CD" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Division" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "CDP" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Division" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Product" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "AE" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Account Executive" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "JT" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Job Type" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If

                End If
                If datatype = "Dollars" Then
                    
                        e.Item.Cells(2).Text = "Totals:"
                        If level = "dept" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Department" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "SC" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Sales Class" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "C" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Client" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "CD" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Division" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "CDP" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Division" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Product" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "AE" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Account Executive" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "JT" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Job Type" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If

                End If
                End If
                
            End If
        Catch ex As Exception

        End Try
    End Sub
    Private Sub RadGridYearClient_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGridYearClient.NeedDataSource
        Try
            If Request.QueryString("eopt") = "True" Then
                If level = "dept" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTDetailClient()
                End If
                If level = "SC" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTSalesClassDetailClient()
                End If
                If level = "C" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTClientDetailClient()
                End If
                If level = "CD" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTCDDetailClient()
                End If
                If level = "CDP" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTCDPDetailClient()
                End If
                If level = "AE" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTAccountExecutiveDetailClient()
                End If
                If level = "JT" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTJobTypeDetailClient()
                End If
            Else
                If level = "dept" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTDetailClientExport()
                End If
                If level = "SC" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTSalesClassDetailClientExport()
                End If
                If level = "C" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTClientDetailClientExport()
                End If
                If level = "CD" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTCDDetailClientExport()
                End If
                If level = "CDP" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTCDPDetailClientExport()
                End If
                If level = "AE" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTAccountExecutiveDetailClientExport()
                End If
                If level = "JT" Then
                    Me.RadGridYearClient.DataSource = BuildYearDTJobTypeDetailClientExport()
                End If
            End If
            

        Catch ex As Exception

        End Try
    End Sub

    Public Sub RadGridYrClient_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs)
        Try
            sender.DataSource = Me.RadGridYearClient.DataSource
        Catch ex As Exception

        End Try
    End Sub
    Public Sub RadGridYrClient_ItemDataBound(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs)
        Try
            Dim countyear As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            countyear = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dashdata As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dashdata.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            End If
            If datatype = "Dollars" Then
                ds = dashdata.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, "", False, Session("UserCode"), type, project, countyear)
            End If
            Dim total As Decimal
            Dim totalmonth As Decimal
            If e.Item.ItemType = GridItemType.Item Or e.Item.ItemType = GridItemType.AlternatingItem Then

            ElseIf e.Item.ItemType = GridItemType.Footer Then
                e.Item.Cells(2).Text = "Totals:"
                If Request.QueryString("eopt") = "True" Then
                    If datatype = "Hours" Then
                        If level = "dept" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += ds.Tables(3).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "SC" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += ds.Tables(3).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "C" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += CDec(ds.Tables(3).Rows(j)("HOURS"))
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "CD" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += ds.Tables(3).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "CDP" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += ds.Tables(3).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "AE" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += ds.Tables(3).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "JT" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("HOURS")))
                                        total += ds.Tables(3).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                    End If
                    If datatype = "Dollars" Then
                        If level = "dept" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("DP_TM_DESC") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "SC" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("SC_DESCRIPTION") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "C" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "CD" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "CDP" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("CL_NAME").ToString() & "/" & ds.Tables(3).Rows(j)("DIV_NAME") & "/" & ds.Tables(3).Rows(j)("PRD_DESCRIPTION") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "AE" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(3).Rows(j)("ACCT_NAME") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                        If level = "JT" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                For j As Integer = 0 To ds.Tables(3).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Substring(3) = ds.Tables(3).Rows(j)("JT_DESC") Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", CDec(ds.Tables(3).Rows(j)("DOLLARS")))
                                        total += ds.Tables(3).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                            Next
                        End If
                    End If
                Else
                    If datatype = "Hours" Then

                        e.Item.Cells(2).Text = "Totals:"
                        If level = "dept" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Department" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "SC" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Sales Class" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "C" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Client" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "CD" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Division" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "CDP" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Division" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Product" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "AE" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Account Executive" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "JT" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("HOURS"))
                                        total += ds.Tables(2).Rows(j)("HOURS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Job Type" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If

                    End If
                    If datatype = "Dollars" Then

                        e.Item.Cells(2).Text = "Totals:"
                        If level = "dept" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Department" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "SC" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Sales Class" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "C" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Client" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "CD" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Division" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "CDP" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Client" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Division" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Product" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "AE" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Account Executive" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If
                        If level = "JT" Then
                            For i As Integer = 0 To Me.RadGridYearClient.MasterTableView.Columns.Count - 1
                                totalmonth = 0
                                For j As Integer = 0 To ds.Tables(2).Rows.Count - 1
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).UniqueName.Replace("col", "") = ds.Tables(2).Rows(j)("YEAR_OPENED") Then
                                        totalmonth += CDec(ds.Tables(2).Rows(j)("DOLLARS"))
                                        total += ds.Tables(2).Rows(j)("DOLLARS")
                                    End If
                                    If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText = "Total" Then
                                        e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", total)
                                    End If
                                Next
                                If Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Total" And Me.RadGridYearClient.MasterTableView.Columns(i).HeaderText <> "Job Type" Then
                                    e.Item.Cells(Me.RadGridYearClient.MasterTableView.Columns(i).OrderIndex).Text = String.Format("{0:#,##0.00}", totalmonth)
                                End If
                            Next
                        End If

                    End If
                End If

            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub RadGridWrapperClient_ItemCreated(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridItemEventArgs) Handles RadGridWrapperClient.ItemCreated
        Try
            If e.Item.ItemType = GridItemType.Header Then
                e.Item.Visible = False
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Function BuildWeekDTDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If


            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 2 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next
            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If


            Dim dateOpened As DataColumn = New DataColumn("Department")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Department") = ds.Tables(1).Rows(j)("DP_TM_DESC")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "DP_TM_CODE = '" & ds.Tables(1).Rows(j)("DP_TM_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Department") = ds.Tables(3).Rows(n)("DP_TM_DESC") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildWeekDTSalesClassDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTSalesClassDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Sales Class")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Sales Class") = ds.Tables(1).Rows(j)("SC_DESCRIPTION")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "SC_CODE = '" & ds.Tables(1).Rows(j)("SC_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Sales Class") = ds.Tables(3).Rows(n)("SC_DESCRIPTION") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildWeekDTClientDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTClientDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Client")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Client") = ds.Tables(3).Rows(n)("CL_NAME") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildWeekDTCDDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString(), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTCDDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim colclient As DataColumn = New DataColumn("Client")
            Dim coldivision As DataColumn = New DataColumn("Division")
            dtComps.Columns.Add(colclient)
            dtComps.Columns.Add(coldivision)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                newrow.Item("Division") = ds.Tables(1).Rows(j)("DIV_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "' AND DIV_CODE = '" & ds.Tables(1).Rows(j)("DIV_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Client") = ds.Tables(3).Rows(n)("CL_NAME") And dtComps.Rows(z)("Division") = ds.Tables(3).Rows(n)("DIV_NAME") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildWeekDTCDPDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString(), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString() & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() & "/" & dt.Rows(w)("PRD_DESCRIPTION").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next


            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTCDPDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim colclient As DataColumn = New DataColumn("Client")
            Dim coldivision As DataColumn = New DataColumn("Division")
            Dim colproduct As DataColumn = New DataColumn("Product")
            dtComps.Columns.Add(colclient)
            dtComps.Columns.Add(coldivision)
            dtComps.Columns.Add(colproduct)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                newrow.Item("Division") = ds.Tables(1).Rows(j)("DIV_NAME")
                newrow.Item("Product") = ds.Tables(1).Rows(j)("PRD_DESCRIPTION")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "' AND DIV_CODE = '" & ds.Tables(1).Rows(j)("DIV_CODE") & "' AND PRD_CODE = '" & ds.Tables(1).Rows(j)("PRD_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Client") = ds.Tables(3).Rows(n)("CL_NAME") And dtComps.Rows(z)("Division") = ds.Tables(3).Rows(n)("DIV_NAME") And dtComps.Rows(z)("Product") = ds.Tables(3).Rows(n)("PRD_DESCRIPTION") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildWeekDTAccountExecutiveDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTAccountExecutiveDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Account Executive")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Account Executive") = ds.Tables(1).Rows(j)("ACCT_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "ACCT_EXEC = '" & ds.Tables(1).Rows(j)("ACCT_EXEC") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Account Executive") = ds.Tables(3).Rows(n)("ACCT_NAME") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildWeekDTJobTypeDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Date Opened")
            Dim dateRange As DataColumn = New DataColumn("Range")
            Dim ws As DataColumn = New DataColumn("WS")
            dtComps.Columns.Add(dateOpened)
            dtComps.Columns.Add(dateRange)
            dtComps.Columns.Add(ws)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC"), System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            dtComps.Columns.Add("Total")

            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC") & " (4 Week Avg)", System.Type.GetType("System.Int32"))
                    dtComps.Columns.Add(dc)

                Next
            End If

            Dim dtWeek As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Date Opened") = ds.Tables(0).Rows(j)("DATE_OPENED")
                Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_START"))
                Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("WEEK_END"))
                newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                newrow.Item("WS") = ds.Tables(0).Rows(j)("WEEK_START")
                dtWeek = ds.Tables(2).DefaultView
                dtWeek.RowFilter = "DATE_OPENED = " & ds.Tables(0).Rows(j)("DATE_OPENED") & " AND WEEK_START = '" & ds.Tables(0).Rows(j)("WEEK_START") & "'"
                dt = dtWeek.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 3 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTJobTypeDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Job Type")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Job Type") = ds.Tables(1).Rows(j)("JT_DESC")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "JT_CODE = '" & ds.Tables(1).Rows(j)("JT_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Job Type") = ds.Tables(3).Rows(n)("JT_DESC") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function


    Private Function buildRGDetailClient()
        Try
            Me.RadGridCompsClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(70)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("DP_TM_DESC")
                    RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthDetailClient()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Department"
            boundColumn.HeaderText = "Department"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGSalesClassDetailClient()
        Try
            Me.RadGridCompsClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(70)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthSalesClassDetailClient()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Sales Class"
            boundColumn.HeaderText = "Sales Class"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGClientDetailClient()
        Try
            Me.RadGridCompsClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(70)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME")
                    RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthClientDetailClient()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGCDDetailClient()
        Try
            Me.RadGridCompsClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(70)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthCDDetailClient()
        Try
            Me.RadGridComps.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Division"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGCDPDetailClient()
        Try
            Me.RadGridCompsClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(70)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthCDPDetailClient()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Division"
            boundColumn.HeaderText = "Division"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Product"
            boundColumn.HeaderText = "Product"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGAccountExecutiveDetailClient()
        Try
            Me.RadGridCompsClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(70)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("ACCT_NAME")
                    RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthAccountExecutiveDetailClient()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Account Executive"
            boundColumn.HeaderText = "Account Executive"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGJobTypeDetailClient()
        Try
            Me.RadGridCompsClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If Me.datatype = "Hours" Then
                ds = dash.GetHoursByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If Me.datatype = "Dollars" Then
                ds = dash.GetDollarsByWeek("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Date Opened"
            boundColumn.HeaderText = "Date Opened"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            boundColumn.Visible = False
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Range"
            boundColumn.HeaderText = "Range"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(70)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("JT_DESC")
                    RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If


            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridCompsClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthJobTypeDetailClient()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Job Type"
            boundColumn.HeaderText = "Job Type"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(75)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.HeaderStyle.Width = System.Web.UI.WebControls.Unit.Pixel(50)
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

    Private Function BuildYearDTDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
           
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("DP_TM_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("DP_TM_DESC").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTSalesClassDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("SC_DESCRIPTION"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("SC_DESCRIPTION").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTClientDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTCDDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTCDPDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION").ToString())
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("CL_NAME").ToString() & "/" & dt.Rows(w)("DIV_NAME").ToString() & "/" & dt.Rows(w)("PRD_DESCRIPTION").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTAccountExecutiveDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("ACCT_NAME"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("ACCT_NAME").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTJobTypeDetailClient()
        Try
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Year Opened")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(1).Rows(i)("JT_DESC"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(0).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Year Opened") = ds.Tables(0).Rows(j)("YEAR_OPENED")
                'Dim sdate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_START"))
                'Dim edate As DateTime = CDate(ds.Tables(0).Rows(j)("MONTH_END"))
                'newrow.Item("Range") = sdate.Month & "/" & sdate.Day & " - " & edate.Month & "/" & edate.Day
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "YEAR_OPENED = '" & ds.Tables(0).Rows(j)("YEAR_OPENED") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("JT_DESC").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGYearDetailClient()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("DP_TM_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearSalesClassDetailClient()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("SC_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearClientDetailClient()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearCDDetailClient()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearCDPDetailClient()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("CL_NAME").ToString() & "/" & ds.Tables(1).Rows(i)("DIV_NAME") & "/" & ds.Tables(1).Rows(i)("PRD_DESCRIPTION")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearAccountExecutiveDetailClient()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("ACCT_NAME")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearJobTypeDetailClient()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer
           
            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")
            If cancel <> "" Then
                iscancel = True
            End If
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Year Opened"
            boundColumn.HeaderText = "Year Opened"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(1).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(1).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.HeaderText = ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.UniqueName = "col" & ds.Tables(1).Rows(i)("JT_DESC")
                    boundColumn.DataType = System.Type.GetType("System.Int32")
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

    'Export Column
    Private Function BuildMonthDTDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If


            Dim dateOpened As DataColumn = New DataColumn("Department")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Department") = ds.Tables(1).Rows(j)("DP_TM_DESC")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "DP_TM_CODE = '" & ds.Tables(1).Rows(j)("DP_TM_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Department") = ds.Tables(3).Rows(n)("DP_TM_DESC") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTSalesClassDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Sales Class")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Sales Class") = ds.Tables(1).Rows(j)("SC_DESCRIPTION")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "SC_CODE = '" & ds.Tables(1).Rows(j)("SC_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Sales Class") = ds.Tables(3).Rows(n)("SC_DESCRIPTION") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTClientDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Client")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Client") = ds.Tables(3).Rows(n)("CL_NAME") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTCDDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim colclient As DataColumn = New DataColumn("Client")
            Dim coldivision As DataColumn = New DataColumn("Division")
            dtComps.Columns.Add(colclient)
            dtComps.Columns.Add(coldivision)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                newrow.Item("Division") = ds.Tables(1).Rows(j)("DIV_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "' AND DIV_CODE = '" & ds.Tables(1).Rows(j)("DIV_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Client") = ds.Tables(3).Rows(n)("CL_NAME") And dtComps.Rows(z)("Division") = ds.Tables(3).Rows(n)("DIV_NAME") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTCDPDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim colclient As DataColumn = New DataColumn("Client")
            Dim coldivision As DataColumn = New DataColumn("Division")
            Dim colproduct As DataColumn = New DataColumn("Product")
            dtComps.Columns.Add(colclient)
            dtComps.Columns.Add(coldivision)
            dtComps.Columns.Add(colproduct)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                newrow.Item("Division") = ds.Tables(1).Rows(j)("DIV_NAME")
                newrow.Item("Product") = ds.Tables(1).Rows(j)("PRD_DESCRIPTION")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "' AND DIV_CODE = '" & ds.Tables(1).Rows(j)("DIV_CODE") & "' AND PRD_CODE = '" & ds.Tables(1).Rows(j)("PRD_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Client") = ds.Tables(3).Rows(n)("CL_NAME") And dtComps.Rows(z)("Division") = ds.Tables(3).Rows(n)("DIV_NAME") And dtComps.Rows(z)("Product") = ds.Tables(3).Rows(n)("PRD_DESCRIPTION") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTAccountExecutiveDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Account Executive")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Account Executive") = ds.Tables(1).Rows(j)("ACCT_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "ACCT_EXEC = '" & ds.Tables(1).Rows(j)("ACCT_EXEC") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Account Executive") = ds.Tables(3).Rows(n)("ACCT_NAME") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildMonthDTJobTypeDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Job Type")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("MONTH_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Job Type") = ds.Tables(1).Rows(j)("JT_DESC")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "JT_CODE = '" & ds.Tables(1).Rows(j)("JT_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("MONTH_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For z As Integer = 0 To dtComps.Rows.Count - 1
                For n As Integer = 0 To ds.Tables(3).Rows.Count - 1
                    If dtComps.Rows(z)("Job Type") = ds.Tables(3).Rows(n)("JT_DESC") Then
                        If datatype = "Hours" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_HOURS")
                        End If
                        If datatype = "Dollars" Then
                            dtComps.Rows(z)("Percent") = ds.Tables(3).Rows(n)("PERCENT_DOLLARS")
                        End If
                    End If
                Next
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGMonthDetailClientExport()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Department"
            boundColumn.HeaderText = "Department"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthSalesClassDetailClientExport()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Sales Class"
            boundColumn.HeaderText = "Sales Class"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthClientDetailClientExport()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthCDDetailClientExport()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Division"
            boundColumn.HeaderText = "Division"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthCDPDetailClientExport()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Division"
            boundColumn.HeaderText = "Division"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Product"
            boundColumn.HeaderText = "Product"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthAccountExecutiveDetailClientExport()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Account Executive"
            boundColumn.HeaderText = "Account Executive"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGMonthJobTypeDetailClientExport()
        Try
            Me.RadGridMonthClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByMonth("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Job Type"
            boundColumn.HeaderText = "Job Type"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            Dim c As Globalization.CultureInfo = LoGlo.GetCultureInfo
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("MONTH_OPENED")
                    Dim str() As String = ds.Tables(0).Rows(i)("MONTH_OPENED").ToString.Split("-")
                    Dim d As New DateTime(str(1), ds.Tables(0).Rows(i)("MTH"), 1)
                    boundColumn.HeaderText = String.Format(c, "{0:MMM}", d) & "-" & str(1)
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("MONTH_OPENED")
                    RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Percent"
            boundColumn.HeaderText = "Percent"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridMonthClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

    Private Function BuildYearDTDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Department")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Department") = ds.Tables(1).Rows(j)("DP_TM_DESC")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "DP_TM_CODE = '" & ds.Tables(1).Rows(j)("DP_TM_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTSalesClassDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Sales Class")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Sales Class") = ds.Tables(1).Rows(j)("SC_DESCRIPTION")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "SC_CODE = '" & ds.Tables(1).Rows(j)("SC_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTClientDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Client")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTCDDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim colclient As DataColumn = New DataColumn("Client")
            Dim coldivision As DataColumn = New DataColumn("Division")
            dtComps.Columns.Add(colclient)
            dtComps.Columns.Add(coldivision)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                newrow.Item("Division") = ds.Tables(1).Rows(j)("DIV_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "' AND DIV_CODE = '" & ds.Tables(1).Rows(j)("DIV_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTCDPDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim colclient As DataColumn = New DataColumn("Client")
            Dim coldivision As DataColumn = New DataColumn("Division")
            Dim colproduct As DataColumn = New DataColumn("Product")
            dtComps.Columns.Add(colclient)
            dtComps.Columns.Add(coldivision)
            dtComps.Columns.Add(colproduct)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Client") = ds.Tables(1).Rows(j)("CL_NAME")
                newrow.Item("Division") = ds.Tables(1).Rows(j)("DIV_NAME")
                newrow.Item("Product") = ds.Tables(1).Rows(j)("PRD_DESCRIPTION")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "CL_CODE = '" & ds.Tables(1).Rows(j)("CL_CODE") & "' AND DIV_CODE = '" & ds.Tables(1).Rows(j)("DIV_CODE") & "' AND PRD_CODE = '" & ds.Tables(1).Rows(j)("PRD_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTAccountExecutiveDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Account Executive")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Account Executive") = ds.Tables(1).Rows(j)("ACCT_NAME")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "ACCT_EXEC = '" & ds.Tables(1).Rows(j)("ACCT_EXEC") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function
    Private Function BuildYearDTJobTypeDetailClientExport()
        Try
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            Dim dtComps As DataTable
            dtComps = New DataTable("comps")
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim dateOpened As DataColumn = New DataColumn("Job Type")
            dtComps.Columns.Add(dateOpened)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    dc = New DataColumn(ds.Tables(0).Rows(i)("YEAR_OPENED"))
                    dtComps.Columns.Add(dc)
                Next
            End If

            dtComps.Columns.Add("Total")
            dtComps.Columns.Add("Percent")

            Dim dtMonth As DataView
            Dim dt As DataTable
            Dim newrow As DataRow
            Dim total As Decimal = 0
            For j As Integer = 0 To ds.Tables(1).Rows.Count - 1
                newrow = dtComps.NewRow
                newrow.Item("Job Type") = ds.Tables(1).Rows(j)("JT_DESC")
                dtMonth = ds.Tables(2).DefaultView
                dtMonth.RowFilter = "JT_CODE = '" & ds.Tables(1).Rows(j)("JT_CODE") & "'"
                dt = dtMonth.ToTable
                For w As Integer = 0 To dt.Rows.Count - 1
                    For x As Integer = 1 To dtComps.Columns.Count - 1
                        If dtComps.Columns(x).ColumnName = dt.Rows(w)("YEAR_OPENED").ToString() Then
                            If datatype = "Hours" Then
                                newrow.Item(x) = dt.Rows(w)("HOURS")
                                total += CDec(dt.Rows(w)("HOURS"))
                            End If
                            If datatype = "Dollars" Then
                                newrow.Item(x) = dt.Rows(w)("DOLLARS")
                                total += CDec(dt.Rows(w)("DOLLARS"))
                            End If
                        End If
                    Next
                Next
                newrow.Item("Total") = total
                total = 0
                dtComps.Rows.Add(newrow)
            Next

            For p As Integer = 0 To dtComps.Rows.Count - 1
                For q As Integer = 0 To dtComps.Columns.Count - 1
                    If dtComps.Rows(p)(q).ToString() = "" Then
                        dtComps.Rows(p)(q) = 0
                    End If
                Next
            Next

            Return dtComps
        Catch ex As Exception

        End Try
    End Function

    Private Function buildRGYearDetailClientExport()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Department"
            boundColumn.HeaderText = "Department"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearSalesClassDetailClientExport()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Sales Class"
            boundColumn.HeaderText = "Sales Class"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearClientDetailClientExport()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearCDDetailClientExport()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Division"
            boundColumn.HeaderText = "Division"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearCDPDetailClientExport()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Client"
            boundColumn.HeaderText = "Client"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Division"
            boundColumn.HeaderText = "Division"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Product"
            boundColumn.HeaderText = "Product"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearAccountExecutiveDetailClientExport()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Account Executive"
            boundColumn.HeaderText = "Account Executive"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function
    Private Function buildRGYearJobTypeDetailClientExport()
        Try
            Me.RadGridYearClient.MasterTableView.Columns.Clear()
            Dim count As Integer

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            datatype = Request.QueryString("datatype")

            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim ds As DataSet
            If datatype = "Hours" Then
                ds = dash.GetHoursByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If
            If datatype = "Dollars" Then
                ds = dash.GetDollarsByYear("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 1, level, cancel, iscancel, Session("UserCode"), type, project, count)
            End If

            Dim boundColumn As GridBoundColumn
            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Job Type"
            boundColumn.HeaderText = "Job Type"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)

            Dim dc As DataColumn
            If ds.Tables(0).Rows.Count > 0 Then
                For i As Integer = 0 To ds.Tables(0).Rows.Count - 1
                    boundColumn = New GridBoundColumn
                    boundColumn.DataField = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.HeaderText = ds.Tables(0).Rows(i)("YEAR_OPENED")
                    boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
                    boundColumn.UniqueName = "col" & ds.Tables(0).Rows(i)("YEAR_OPENED")
                    RadGridYearClient.MasterTableView.Columns.Add(boundColumn)
                Next
            End If

            boundColumn = New GridBoundColumn
            boundColumn.DataField = "Total"
            boundColumn.HeaderText = "Total"
            boundColumn.ItemStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Left
            RadGridYearClient.MasterTableView.Columns.Add(boundColumn)


        Catch ex As Exception

        End Try
    End Function

#End Region

#Region "Dashboard Data"

    Private Sub RadGridData_NeedDataSource(ByVal sender As Object, ByVal e As Telerik.Web.UI.GridNeedDataSourceEventArgs) Handles RadGridData.NeedDataSource
        Try
            Dim dash As New cDashboard(Session("ConnString"), Session("UserCode"))
            Dim count As Integer
            Dim db As String

            type = Request.QueryString("range")
            week = Request.QueryString("week")
            month = Request.QueryString("month")
            year = Request.QueryString("year")
            project = Request.QueryString("project")
            count = Request.QueryString("count")
            level = Request.QueryString("level")
            db = Request.QueryString("dash")

            Me.RadGridData.DataSource = dash.GetDashboardData("", month, year, week, OfficeCode, ae, client, DeptCode, sc, jt, 0, 0, "", cancel, iscancel, Session("UserCode"), type, project, count, db)
        Catch ex As Exception

        End Try
    End Sub

#End Region


    Private Sub Page_LoadComplete(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.LoadComplete
        Try
            If Request.QueryString("export") = 1 Then
                Dim str As String = ""
                If Request.QueryString("From") = "dashprojlist" Then
                    str = "Project_List" & "_" & Now.Year.ToString() & Now.Month.ToString() & Now.Day.ToString()
                    AdvantageFramework.Web.Presentation.Controls.SetRadGridExcelExportSettings(Me.RadGridProjects, str)
                    RadGridProjects.MasterTableView.ExportToExcel()
                End If
                If Request.QueryString("From") = "dashprojcomp" Then
                    str = "Project_Comps" & "_" & Now.Year.ToString() & Now.Month.ToString() & Now.Day.ToString()
                    AdvantageFramework.Web.Presentation.Controls.SetRadGridExcelExportSettings(Me.RadGridDashComps, str)
                    RadGridDashComps.MasterTableView.ExportToExcel()
                End If
                If Request.QueryString("From") = "dashprojyear" Then
                    str = "Project_Year" & "_" & Now.Year.ToString() & Now.Month.ToString() & Now.Day.ToString()
                    AdvantageFramework.Web.Presentation.Controls.SetRadGridExcelExportSettings(Me.RadGridDashYear, str)
                    RadGridDashYear.MasterTableView.ExportToExcel()
                End If
                If Request.QueryString("From") = "dashprojdetail" Then
                    str = "Project_Detail" & "_" & Now.Year.ToString() & Now.Month.ToString() & Now.Day.ToString()
                    If Request.QueryString("dash") = "W" Then
                        With Me.RadGridWrapper.ExportSettings
                            '.ExportOnlyData = True
                            .FileName = str
                            '.IgnorePaging = True
                            '.OpenInNewWindow = True
                            .Excel.Format = GridExcelExportFormat.Biff
                        End With
                        RadGridWrapper.MasterTableView.ExportToExcel()
                    End If
                    If Request.QueryString("dash") = "M" Then
                        AdvantageFramework.Web.Presentation.Controls.SetRadGridExcelExportSettings(Me.RadGridMonth, str)
                        RadGridMonth.MasterTableView.ExportToExcel()
                    End If
                    If Request.QueryString("dash") = "Y" Then
                        AdvantageFramework.Web.Presentation.Controls.SetRadGridExcelExportSettings(Me.RadGridYear, str)
                        RadGridYear.MasterTableView.ExportToExcel()
                    End If
                End If
                If Request.QueryString("From") = "dashprojcompdetail" Then
                    str = "Project_Comp_Detail" & "_" & Now.Year.ToString() & Now.Month.ToString() & Now.Day.ToString()
                    AdvantageFramework.Web.Presentation.Controls.SetRadGridExcelExportSettings(Me.RadGridCompDetail, str)
                    RadGridCompDetail.MasterTableView.ExportToExcel()
                End If
                If Request.QueryString("From") = "dashclienttimecompdetail" Then
                    str = "ClientTime_Comp_Detail" & "_" & Now.Year.ToString() & Now.Month.ToString() & Now.Day.ToString()
                    AdvantageFramework.Web.Presentation.Controls.SetRadGridExcelExportSettings(Me.RadGridHours, str)
                    RadGridHours.MasterTableView.ExportToExcel()
                End If
                If Request.QueryString("From") = "dashclientyear" Then
                    str = "Client_Year" & "_" & Now.Year.ToString() & Now.Month.ToString() & Now.Day.ToString()
                    AdvantageFramework.Web.Presentation.Controls.SetRadGridExcelExportSettings(Me.RadGridDashClientYear, str)
                    RadGridDashClientYear.MasterTableView.ExportToExcel()
                End If
                If Request.QueryString("From") = "dashclientdetail" Then
                    str = "Client_Detail" & "_" & Now.Year.ToString() & Now.Month.ToString() & Now.Day.ToString()
                    If Request.QueryString("dash") = "W" Then
                        With Me.RadGridWrapperClient.ExportSettings
                            '.ExportOnlyData = True
                            .FileName = str
                            '.IgnorePaging = True
                            '.OpenInNewWindow = True
                        End With
                        RadGridWrapperClient.MasterTableView.ExportToExcel()
                    End If
                    If Request.QueryString("dash") = "M" Then
                        AdvantageFramework.Web.Presentation.Controls.SetRadGridExcelExportSettings(Me.RadGridMonthClient, str)
                        RadGridMonthClient.MasterTableView.ExportToExcel()
                    End If
                    If Request.QueryString("dash") = "Y" Then
                        AdvantageFramework.Web.Presentation.Controls.SetRadGridExcelExportSettings(Me.RadGridYearClient, str)
                        RadGridYearClient.MasterTableView.ExportToExcel()
                    End If
                End If
                If Request.QueryString("From") = "dashdata" Then
                    If Request.QueryString("dash") = "Stats" Then
                        str = "Raw_Data_Stats" & "_" & Now.Year.ToString() & Now.Month.ToString() & Now.Day.ToString()
                    Else
                        str = "Raw_Data_Client" & "_" & Now.Year.ToString() & Now.Month.ToString() & Now.Day.ToString()
                    End If
                    AdvantageFramework.Web.Presentation.Controls.SetRadGridExcelExportSettings(Me.RadGridData, str)
                    RadGridData.MasterTableView.ExportToExcel()
                End If
            Else
                Me.RadGridWrapper.Visible = False
                Me.RadGridWrapperClient.Visible = False
            End If
        Catch ex As Exception

        End Try
    End Sub

End Class