function gridActionBegin(){}function gridQueryCellInfo(){}function saveClick(){var n,t,i;updates&&updates.length>0&&(n=0,t=0,qs.j&&(n=qs.j*1),qs.jc&&(t=qs.jc*1),n>0&&t>0&&(i={JobNumber:n,JobComponentNumber:t,Updates:updates},$.post({url:window.appBase+"ProjectManagement/Agile/SaveAddJobToBoardsData",dataType:"json",data:i}).always(function(n){n&&n.Data&&(n.Success==!0?(window.parent.closeDialogs(),window.parent.reloadWindow()):n.Message&&n.Message!=""&&console.log("error:",n.Message),inserts=[])})))}function cancelClick(){window.parent.closeDialogs()}function refreshClick(){location.reload()}function jobIsOnBoardCheckBoxChanged(n){var t=$("#BoardsGrid").ejGrid("instance"),r=!1,u=0,i;if(r=n.target.checked,t){if(i=t.model.dataSource[t.model.selectedRowIndex],i){u=i.ID;let n=new AddJobToBoardUpdate;n.BoardID=u;n.IsChecked=r;addUpdate(n)}checkButtons()}}function addUpdate(n){n&&n!=undefined&&(removeUpdate(n),updates.push(n))}function removeUpdate(n){var i,t;if(n&&n!=undefined&&(i=n.BoardID,i&&updates&&updates.length>0))for(t=updates.length;t--;)updates[t]&&updates[t].BoardID==i&&updates.splice(t,1)}function checkButtons(){$("#saveButton").removeClass("k-state-disabled");$("#cancelButton").removeClass("k-state-disabled")}var qs=getQueryString(),updates=[];class AddJobToBoardUpdate{constructor(){this.BoardID=0;this.IsChecked=!1}}